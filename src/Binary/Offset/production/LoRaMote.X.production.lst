

Microchip Technology PIC18 PRO Macro Assembler V1.33 build 59893 
                                                                                               Fri Nov 13 12:34:01 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 59893
     1                           	processor	18LF25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1
   110                           	psect	text95,global,reloc=2,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=2,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	text104,global,reloc=2,class=CODE,delta=1
   120                           	psect	text105,global,reloc=2,class=CODE,delta=1
   121                           	psect	text106,global,reloc=2,class=CODE,delta=1
   122                           	psect	text107,global,reloc=2,class=CODE,delta=1
   123                           	psect	text108,global,reloc=2,class=CODE,delta=1
   124                           	psect	text109,global,reloc=2,class=CODE,delta=1
   125                           	psect	text110,global,reloc=2,class=CODE,delta=1
   126                           	psect	text111,global,reloc=2,class=CODE,delta=1
   127                           	psect	text112,global,reloc=2,class=CODE,delta=1
   128                           	psect	text113,global,reloc=2,class=CODE,delta=1
   129                           	psect	text114,global,reloc=2,class=CODE,delta=1
   130                           	psect	text115,global,reloc=2,class=CODE,delta=1
   131                           	psect	text116,global,reloc=2,class=CODE,delta=1
   132                           	psect	text117,global,reloc=2,class=CODE,delta=1
   133                           	psect	text118,global,reloc=2,class=CODE,delta=1
   134                           	psect	text119,global,reloc=2,class=CODE,delta=1
   135                           	psect	text120,global,reloc=2,class=CODE,delta=1
   136                           	psect	text121,global,reloc=2,class=CODE,delta=1
   137                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   138                           	psect	text122,global,reloc=2,class=CODE,delta=1
   139                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   140                           	dabs	1,0x400,48,_BDT
   141                           	dabs	1,0x500,64,_cdc_data_tx
   142                           	dabs	1,0x438,8,_CtrlTrfData
   143                           	dabs	1,0x430,8,_SetupPkt
   144                           	dabs	1,0x540,64,_cdc_data_rx
   145  0000                     
   146                           	psect	idataBANK0
   147  0033CF                     __pidataBANK0:
   148                           	opt stack 0
   149                           
   150                           ;initializer for _selectedFont
   151  0033CF  7649               	dw	_OledFont0& (0+65535)
   152                           
   153                           ;initializer for _dataRateSelection
   154  0033D1  02                 	db	2
   155                           
   156                           ;initializer for _moteState
   157  0033D2  01                 	db	1
   158                           
   159                           ;initializer for _periodicState
   160  0033D3  01                 	db	1
   161                           
   162                           	psect	mediumconst
   163  007640                     __pmediumconst:
   164                           	opt stack 0
   165  007640  00                 	db	0
   166  007641                     _USB_SD_Ptr:
   167                           	opt stack 0
   168  007641  7A06               	dw	_sd000& (0+65535)
   169  007643  798C               	dw	_sd001& (0+65535)
   170  007645  79C0               	dw	_sd002& (0+65535)
   171  007647                     __end_of_USB_SD_Ptr:
   172                           	opt stack 0
   173  007647                     _USB_CD_Ptr:
   174                           	opt stack 0
   175  007647  7949               	dw	_configDescriptor1& (0+65535)
   176  007649                     __end_of_USB_CD_Ptr:
   177                           	opt stack 0
   178  007649                     _OledFont0:
   179                           	opt stack 0
   180  007649  00                 	db	0
   181  00764A  00                 	db	0
   182  00764B  00                 	db	0
   183  00764C  00                 	db	0
   184  00764D  00                 	db	0
   185  00764E  00                 	db	0
   186  00764F  00                 	db	0
   187  007650  00                 	db	0
   188  007651  00                 	db	0
   189  007652  00                 	db	0
   190  007653  00                 	db	0
   191  007654  5F                 	db	95
   192  007655  00                 	db	0
   193  007656  00                 	db	0
   194  007657  00                 	db	0
   195  007658  00                 	db	0
   196  007659  00                 	db	0
   197  00765A  00                 	db	0
   198  00765B  03                 	db	3
   199  00765C  00                 	db	0
   200  00765D  03                 	db	3
   201  00765E  00                 	db	0
   202  00765F  00                 	db	0
   203  007660  00                 	db	0
   204  007661  64                 	db	100
   205  007662  3C                 	db	60
   206  007663  26                 	db	38
   207  007664  64                 	db	100
   208  007665  3C                 	db	60
   209  007666  26                 	db	38
   210  007667  24                 	db	36
   211  007668  00                 	db	0
   212  007669  26                 	db	38
   213  00766A  49                 	db	73
   214  00766B  49                 	db	73
   215  00766C  7F                 	db	127
   216  00766D  49                 	db	73
   217  00766E  49                 	db	73
   218  00766F  32                 	db	50
   219  007670  00                 	db	0
   220  007671  42                 	db	66
   221  007672  25                 	db	37
   222  007673  12                 	db	18
   223  007674  08                 	db	8
   224  007675  24                 	db	36
   225  007676  52                 	db	82
   226  007677  21                 	db	33
   227  007678  00                 	db	0
   228  007679  20                 	db	32
   229  00767A  50                 	db	80
   230  00767B  4E                 	db	78
   231  00767C  55                 	db	85
   232  00767D  22                 	db	34
   233  00767E  58                 	db	88
   234  00767F  28                 	db	40
   235  007680  00                 	db	0
   236  007681  00                 	db	0
   237  007682  00                 	db	0
   238  007683  00                 	db	0
   239  007684  03                 	db	3
   240  007685  00                 	db	0
   241  007686  00                 	db	0
   242  007687  00                 	db	0
   243  007688  00                 	db	0
   244  007689  00                 	db	0
   245  00768A  00                 	db	0
   246  00768B  1C                 	db	28
   247  00768C  22                 	db	34
   248  00768D  41                 	db	65
   249  00768E  00                 	db	0
   250  00768F  00                 	db	0
   251  007690  00                 	db	0
   252  007691  00                 	db	0
   253  007692  00                 	db	0
   254  007693  00                 	db	0
   255  007694  41                 	db	65
   256  007695  22                 	db	34
   257  007696  1C                 	db	28
   258  007697  00                 	db	0
   259  007698  00                 	db	0
   260  007699  00                 	db	0
   261  00769A  15                 	db	21
   262  00769B  15                 	db	21
   263  00769C  0E                 	db	14
   264  00769D  0E                 	db	14
   265  00769E  15                 	db	21
   266  00769F  15                 	db	21
   267  0076A0  00                 	db	0
   268  0076A1  00                 	db	0
   269  0076A2  08                 	db	8
   270  0076A3  08                 	db	8
   271  0076A4  3E                 	db	62
   272  0076A5  08                 	db	8
   273  0076A6  08                 	db	8
   274  0076A7  00                 	db	0
   275  0076A8  00                 	db	0
   276  0076A9  00                 	db	0
   277  0076AA  00                 	db	0
   278  0076AB  00                 	db	0
   279  0076AC  50                 	db	80
   280  0076AD  30                 	db	48
   281  0076AE  00                 	db	0
   282  0076AF  00                 	db	0
   283  0076B0  00                 	db	0
   284  0076B1  00                 	db	0
   285  0076B2  08                 	db	8
   286  0076B3  08                 	db	8
   287  0076B4  08                 	db	8
   288  0076B5  08                 	db	8
   289  0076B6  08                 	db	8
   290  0076B7  00                 	db	0
   291  0076B8  00                 	db	0
   292  0076B9  00                 	db	0
   293  0076BA  00                 	db	0
   294  0076BB  00                 	db	0
   295  0076BC  40                 	db	64
   296  0076BD  00                 	db	0
   297  0076BE  00                 	db	0
   298  0076BF  00                 	db	0
   299  0076C0  00                 	db	0
   300  0076C1  40                 	db	64
   301  0076C2  20                 	db	32
   302  0076C3  10                 	db	16
   303  0076C4  08                 	db	8
   304  0076C5  04                 	db	4
   305  0076C6  02                 	db	2
   306  0076C7  01                 	db	1
   307  0076C8  00                 	db	0
   308  0076C9  00                 	db	0
   309  0076CA  3E                 	db	62
   310  0076CB  41                 	db	65
   311  0076CC  41                 	db	65
   312  0076CD  41                 	db	65
   313  0076CE  3E                 	db	62
   314  0076CF  00                 	db	0
   315  0076D0  00                 	db	0
   316  0076D1  00                 	db	0
   317  0076D2  00                 	db	0
   318  0076D3  41                 	db	65
   319  0076D4  7F                 	db	127
   320  0076D5  40                 	db	64
   321  0076D6  00                 	db	0
   322  0076D7  00                 	db	0
   323  0076D8  00                 	db	0
   324  0076D9  00                 	db	0
   325  0076DA  42                 	db	66
   326  0076DB  61                 	db	97
   327  0076DC  51                 	db	81
   328  0076DD  49                 	db	73
   329  0076DE  6E                 	db	110
   330  0076DF  00                 	db	0
   331  0076E0  00                 	db	0
   332  0076E1  00                 	db	0
   333  0076E2  22                 	db	34
   334  0076E3  41                 	db	65
   335  0076E4  49                 	db	73
   336  0076E5  49                 	db	73
   337  0076E6  36                 	db	54
   338  0076E7  00                 	db	0
   339  0076E8  00                 	db	0
   340  0076E9  00                 	db	0
   341  0076EA  18                 	db	24
   342  0076EB  14                 	db	20
   343  0076EC  12                 	db	18
   344  0076ED  7F                 	db	127
   345  0076EE  10                 	db	16
   346  0076EF  00                 	db	0
   347  0076F0  00                 	db	0
   348  0076F1  00                 	db	0
   349  0076F2  27                 	db	39
   350  0076F3  49                 	db	73
   351  0076F4  49                 	db	73
   352  0076F5  49                 	db	73
   353  0076F6  71                 	db	113
   354  0076F7  00                 	db	0
   355  0076F8  00                 	db	0
   356  0076F9  00                 	db	0
   357  0076FA  3C                 	db	60
   358  0076FB  4A                 	db	74
   359  0076FC  49                 	db	73
   360  0076FD  48                 	db	72
   361  0076FE  70                 	db	112
   362  0076FF  00                 	db	0
   363  007700  00                 	db	0
   364  007701  00                 	db	0
   365  007702  43                 	db	67
   366  007703  21                 	db	33
   367  007704  11                 	db	17
   368  007705  0D                 	db	13
   369  007706  03                 	db	3
   370  007707  00                 	db	0
   371  007708  00                 	db	0
   372  007709  00                 	db	0
   373  00770A  36                 	db	54
   374  00770B  49                 	db	73
   375  00770C  49                 	db	73
   376  00770D  49                 	db	73
   377  00770E  36                 	db	54
   378  00770F  00                 	db	0
   379  007710  00                 	db	0
   380  007711  00                 	db	0
   381  007712  06                 	db	6
   382  007713  09                 	db	9
   383  007714  49                 	db	73
   384  007715  29                 	db	41
   385  007716  1E                 	db	30
   386  007717  00                 	db	0
   387  007718  00                 	db	0
   388  007719  00                 	db	0
   389  00771A  00                 	db	0
   390  00771B  00                 	db	0
   391  00771C  12                 	db	18
   392  00771D  00                 	db	0
   393  00771E  00                 	db	0
   394  00771F  00                 	db	0
   395  007720  00                 	db	0
   396  007721  00                 	db	0
   397  007722  00                 	db	0
   398  007723  00                 	db	0
   399  007724  52                 	db	82
   400  007725  30                 	db	48
   401  007726  00                 	db	0
   402  007727  00                 	db	0
   403  007728  00                 	db	0
   404  007729  00                 	db	0
   405  00772A  00                 	db	0
   406  00772B  08                 	db	8
   407  00772C  14                 	db	20
   408  00772D  14                 	db	20
   409  00772E  22                 	db	34
   410  00772F  00                 	db	0
   411  007730  00                 	db	0
   412  007731  00                 	db	0
   413  007732  14                 	db	20
   414  007733  14                 	db	20
   415  007734  14                 	db	20
   416  007735  14                 	db	20
   417  007736  14                 	db	20
   418  007737  14                 	db	20
   419  007738  00                 	db	0
   420  007739  00                 	db	0
   421  00773A  00                 	db	0
   422  00773B  22                 	db	34
   423  00773C  14                 	db	20
   424  00773D  14                 	db	20
   425  00773E  08                 	db	8
   426  00773F  00                 	db	0
   427  007740  00                 	db	0
   428  007741  00                 	db	0
   429  007742  02                 	db	2
   430  007743  01                 	db	1
   431  007744  59                 	db	89
   432  007745  05                 	db	5
   433  007746  02                 	db	2
   434  007747  00                 	db	0
   435  007748  00                 	db	0
   436  007749  3E                 	db	62
   437  00774A  41                 	db	65
   438  00774B  5D                 	db	93
   439  00774C  55                 	db	85
   440  00774D  4D                 	db	77
   441  00774E  51                 	db	81
   442  00774F  2E                 	db	46
   443  007750  00                 	db	0
   444  007751  40                 	db	64
   445  007752  7C                 	db	124
   446  007753  4A                 	db	74
   447  007754  09                 	db	9
   448  007755  4A                 	db	74
   449  007756  7C                 	db	124
   450  007757  40                 	db	64
   451  007758  00                 	db	0
   452  007759  41                 	db	65
   453  00775A  7F                 	db	127
   454  00775B  49                 	db	73
   455  00775C  49                 	db	73
   456  00775D  49                 	db	73
   457  00775E  49                 	db	73
   458  00775F  36                 	db	54
   459  007760  00                 	db	0
   460  007761  1C                 	db	28
   461  007762  22                 	db	34
   462  007763  41                 	db	65
   463  007764  41                 	db	65
   464  007765  41                 	db	65
   465  007766  41                 	db	65
   466  007767  22                 	db	34
   467  007768  00                 	db	0
   468  007769  41                 	db	65
   469  00776A  7F                 	db	127
   470  00776B  41                 	db	65
   471  00776C  41                 	db	65
   472  00776D  41                 	db	65
   473  00776E  22                 	db	34
   474  00776F  1C                 	db	28
   475  007770  00                 	db	0
   476  007771  41                 	db	65
   477  007772  7F                 	db	127
   478  007773  49                 	db	73
   479  007774  49                 	db	73
   480  007775  5D                 	db	93
   481  007776  41                 	db	65
   482  007777  63                 	db	99
   483  007778  00                 	db	0
   484  007779  41                 	db	65
   485  00777A  7F                 	db	127
   486  00777B  49                 	db	73
   487  00777C  09                 	db	9
   488  00777D  1D                 	db	29
   489  00777E  01                 	db	1
   490  00777F  03                 	db	3
   491  007780  00                 	db	0
   492  007781  1C                 	db	28
   493  007782  22                 	db	34
   494  007783  41                 	db	65
   495  007784  49                 	db	73
   496  007785  49                 	db	73
   497  007786  3A                 	db	58
   498  007787  08                 	db	8
   499  007788  00                 	db	0
   500  007789  41                 	db	65
   501  00778A  7F                 	db	127
   502  00778B  08                 	db	8
   503  00778C  08                 	db	8
   504  00778D  08                 	db	8
   505  00778E  7F                 	db	127
   506  00778F  41                 	db	65
   507  007790  00                 	db	0
   508  007791  00                 	db	0
   509  007792  41                 	db	65
   510  007793  41                 	db	65
   511  007794  7F                 	db	127
   512  007795  41                 	db	65
   513  007796  41                 	db	65
   514  007797  00                 	db	0
   515  007798  00                 	db	0
   516  007799  30                 	db	48
   517  00779A  40                 	db	64
   518  00779B  41                 	db	65
   519  00779C  41                 	db	65
   520  00779D  3F                 	db	63
   521  00779E  01                 	db	1
   522  00779F  01                 	db	1
   523  0077A0  00                 	db	0
   524  0077A1  41                 	db	65
   525  0077A2  7F                 	db	127
   526  0077A3  08                 	db	8
   527  0077A4  0C                 	db	12
   528  0077A5  12                 	db	18
   529  0077A6  61                 	db	97
   530  0077A7  41                 	db	65
   531  0077A8  00                 	db	0
   532  0077A9  41                 	db	65
   533  0077AA  7F                 	db	127
   534  0077AB  41                 	db	65
   535  0077AC  40                 	db	64
   536  0077AD  40                 	db	64
   537  0077AE  40                 	db	64
   538  0077AF  60                 	db	96
   539  0077B0  00                 	db	0
   540  0077B1  41                 	db	65
   541  0077B2  7F                 	db	127
   542  0077B3  42                 	db	66
   543  0077B4  0C                 	db	12
   544  0077B5  42                 	db	66
   545  0077B6  7F                 	db	127
   546  0077B7  41                 	db	65
   547  0077B8  00                 	db	0
   548  0077B9  41                 	db	65
   549  0077BA  7F                 	db	127
   550  0077BB  42                 	db	66
   551  0077BC  0C                 	db	12
   552  0077BD  11                 	db	17
   553  0077BE  7F                 	db	127
   554  0077BF  01                 	db	1
   555  0077C0  00                 	db	0
   556  0077C1  1C                 	db	28
   557  0077C2  22                 	db	34
   558  0077C3  41                 	db	65
   559  0077C4  41                 	db	65
   560  0077C5  41                 	db	65
   561  0077C6  22                 	db	34
   562  0077C7  1C                 	db	28
   563  0077C8  00                 	db	0
   564  0077C9  41                 	db	65
   565  0077CA  7F                 	db	127
   566  0077CB  49                 	db	73
   567  0077CC  09                 	db	9
   568  0077CD  09                 	db	9
   569  0077CE  09                 	db	9
   570  0077CF  06                 	db	6
   571  0077D0  00                 	db	0
   572  0077D1  0C                 	db	12
   573  0077D2  12                 	db	18
   574  0077D3  21                 	db	33
   575  0077D4  21                 	db	33
   576  0077D5  61                 	db	97
   577  0077D6  52                 	db	82
   578  0077D7  4C                 	db	76
   579  0077D8  00                 	db	0
   580  0077D9  41                 	db	65
   581  0077DA  7F                 	db	127
   582  0077DB  09                 	db	9
   583  0077DC  09                 	db	9
   584  0077DD  19                 	db	25
   585  0077DE  69                 	db	105
   586  0077DF  46                 	db	70
   587  0077E0  00                 	db	0
   588  0077E1  66                 	db	102
   589  0077E2  49                 	db	73
   590  0077E3  49                 	db	73
   591  0077E4  49                 	db	73
   592  0077E5  49                 	db	73
   593  0077E6  49                 	db	73
   594  0077E7  33                 	db	51
   595  0077E8  00                 	db	0
   596  0077E9  03                 	db	3
   597  0077EA  01                 	db	1
   598  0077EB  41                 	db	65
   599  0077EC  7F                 	db	127
   600  0077ED  41                 	db	65
   601  0077EE  01                 	db	1
   602  0077EF  03                 	db	3
   603  0077F0  00                 	db	0
   604  0077F1  01                 	db	1
   605  0077F2  3F                 	db	63
   606  0077F3  41                 	db	65
   607  0077F4  40                 	db	64
   608  0077F5  41                 	db	65
   609  0077F6  3F                 	db	63
   610  0077F7  01                 	db	1
   611  0077F8  00                 	db	0
   612  0077F9  01                 	db	1
   613  0077FA  0F                 	db	15
   614  0077FB  31                 	db	49
   615  0077FC  40                 	db	64
   616  0077FD  31                 	db	49
   617  0077FE  0F                 	db	15
   618  0077FF  01                 	db	1
   619  007800  00                 	db	0
   620  007801  01                 	db	1
   621  007802  1F                 	db	31
   622  007803  61                 	db	97
   623  007804  14                 	db	20
   624  007805  61                 	db	97
   625  007806  1F                 	db	31
   626  007807  01                 	db	1
   627  007808  00                 	db	0
   628  007809  41                 	db	65
   629  00780A  41                 	db	65
   630  00780B  36                 	db	54
   631  00780C  08                 	db	8
   632  00780D  36                 	db	54
   633  00780E  41                 	db	65
   634  00780F  41                 	db	65
   635  007810  00                 	db	0
   636  007811  01                 	db	1
   637  007812  03                 	db	3
   638  007813  44                 	db	68
   639  007814  78                 	db	120
   640  007815  44                 	db	68
   641  007816  03                 	db	3
   642  007817  01                 	db	1
   643  007818  00                 	db	0
   644  007819  43                 	db	67
   645  00781A  61                 	db	97
   646  00781B  51                 	db	81
   647  00781C  49                 	db	73
   648  00781D  45                 	db	69
   649  00781E  43                 	db	67
   650  00781F  61                 	db	97
   651  007820  00                 	db	0
   652  007821  00                 	db	0
   653  007822  00                 	db	0
   654  007823  7F                 	db	127
   655  007824  41                 	db	65
   656  007825  41                 	db	65
   657  007826  00                 	db	0
   658  007827  00                 	db	0
   659  007828  00                 	db	0
   660  007829  01                 	db	1
   661  00782A  02                 	db	2
   662  00782B  04                 	db	4
   663  00782C  08                 	db	8
   664  00782D  10                 	db	16
   665  00782E  20                 	db	32
   666  00782F  40                 	db	64
   667  007830  00                 	db	0
   668  007831  00                 	db	0
   669  007832  00                 	db	0
   670  007833  41                 	db	65
   671  007834  41                 	db	65
   672  007835  7F                 	db	127
   673  007836  00                 	db	0
   674  007837  00                 	db	0
   675  007838  00                 	db	0
   676  007839  00                 	db	0
   677  00783A  04                 	db	4
   678  00783B  02                 	db	2
   679  00783C  01                 	db	1
   680  00783D  01                 	db	1
   681  00783E  02                 	db	2
   682  00783F  04                 	db	4
   683  007840  00                 	db	0
   684  007841  00                 	db	0
   685  007842  40                 	db	64
   686  007843  40                 	db	64
   687  007844  40                 	db	64
   688  007845  40                 	db	64
   689  007846  40                 	db	64
   690  007847  40                 	db	64
   691  007848  00                 	db	0
   692  007849  00                 	db	0
   693  00784A  01                 	db	1
   694  00784B  02                 	db	2
   695  00784C  00                 	db	0
   696  00784D  00                 	db	0
   697  00784E  00                 	db	0
   698  00784F  00                 	db	0
   699  007850  00                 	db	0
   700  007851  00                 	db	0
   701  007852  34                 	db	52
   702  007853  4A                 	db	74
   703  007854  4A                 	db	74
   704  007855  4A                 	db	74
   705  007856  3C                 	db	60
   706  007857  40                 	db	64
   707  007858  00                 	db	0
   708  007859  00                 	db	0
   709  00785A  41                 	db	65
   710  00785B  3F                 	db	63
   711  00785C  48                 	db	72
   712  00785D  48                 	db	72
   713  00785E  48                 	db	72
   714  00785F  30                 	db	48
   715  007860  00                 	db	0
   716  007861  00                 	db	0
   717  007862  3C                 	db	60
   718  007863  42                 	db	66
   719  007864  42                 	db	66
   720  007865  42                 	db	66
   721  007866  24                 	db	36
   722  007867  00                 	db	0
   723  007868  00                 	db	0
   724  007869  00                 	db	0
   725  00786A  30                 	db	48
   726  00786B  48                 	db	72
   727  00786C  48                 	db	72
   728  00786D  49                 	db	73
   729  00786E  3F                 	db	63
   730  00786F  40                 	db	64
   731  007870  00                 	db	0
   732  007871  00                 	db	0
   733  007872  3C                 	db	60
   734  007873  4A                 	db	74
   735  007874  4A                 	db	74
   736  007875  4A                 	db	74
   737  007876  2C                 	db	44
   738  007877  00                 	db	0
   739  007878  00                 	db	0
   740  007879  00                 	db	0
   741  00787A  00                 	db	0
   742  00787B  48                 	db	72
   743  00787C  7E                 	db	126
   744  00787D  49                 	db	73
   745  00787E  09                 	db	9
   746  00787F  00                 	db	0
   747  007880  00                 	db	0
   748  007881  00                 	db	0
   749  007882  26                 	db	38
   750  007883  49                 	db	73
   751  007884  49                 	db	73
   752  007885  49                 	db	73
   753  007886  3F                 	db	63
   754  007887  01                 	db	1
   755  007888  00                 	db	0
   756  007889  41                 	db	65
   757  00788A  7F                 	db	127
   758  00788B  48                 	db	72
   759  00788C  04                 	db	4
   760  00788D  44                 	db	68
   761  00788E  78                 	db	120
   762  00788F  40                 	db	64
   763  007890  00                 	db	0
   764  007891  00                 	db	0
   765  007892  00                 	db	0
   766  007893  44                 	db	68
   767  007894  7D                 	db	125
   768  007895  40                 	db	64
   769  007896  00                 	db	0
   770  007897  00                 	db	0
   771  007898  00                 	db	0
   772  007899  00                 	db	0
   773  00789A  00                 	db	0
   774  00789B  40                 	db	64
   775  00789C  44                 	db	68
   776  00789D  3D                 	db	61
   777  00789E  00                 	db	0
   778  00789F  00                 	db	0
   779  0078A0  00                 	db	0
   780  0078A1  41                 	db	65
   781  0078A2  7F                 	db	127
   782  0078A3  10                 	db	16
   783  0078A4  18                 	db	24
   784  0078A5  24                 	db	36
   785  0078A6  42                 	db	66
   786  0078A7  42                 	db	66
   787  0078A8  00                 	db	0
   788  0078A9  00                 	db	0
   789  0078AA  40                 	db	64
   790  0078AB  41                 	db	65
   791  0078AC  7F                 	db	127
   792  0078AD  40                 	db	64
   793  0078AE  40                 	db	64
   794  0078AF  00                 	db	0
   795  0078B0  00                 	db	0
   796  0078B1  42                 	db	66
   797  0078B2  7E                 	db	126
   798  0078B3  02                 	db	2
   799  0078B4  7C                 	db	124
   800  0078B5  02                 	db	2
   801  0078B6  7E                 	db	126
   802  0078B7  40                 	db	64
   803  0078B8  00                 	db	0
   804  0078B9  42                 	db	66
   805  0078BA  7E                 	db	126
   806  0078BB  44                 	db	68
   807  0078BC  02                 	db	2
   808  0078BD  42                 	db	66
   809  0078BE  7C                 	db	124
   810  0078BF  40                 	db	64
   811  0078C0  00                 	db	0
   812  0078C1  00                 	db	0
   813  0078C2  3C                 	db	60
   814  0078C3  42                 	db	66
   815  0078C4  42                 	db	66
   816  0078C5  42                 	db	66
   817  0078C6  3C                 	db	60
   818  0078C7  00                 	db	0
   819  0078C8  00                 	db	0
   820  0078C9  00                 	db	0
   821  0078CA  41                 	db	65
   822  0078CB  7F                 	db	127
   823  0078CC  49                 	db	73
   824  0078CD  09                 	db	9
   825  0078CE  09                 	db	9
   826  0078CF  06                 	db	6
   827  0078D0  00                 	db	0
   828  0078D1  00                 	db	0
   829  0078D2  06                 	db	6
   830  0078D3  09                 	db	9
   831  0078D4  09                 	db	9
   832  0078D5  49                 	db	73
   833  0078D6  7F                 	db	127
   834  0078D7  41                 	db	65
   835  0078D8  00                 	db	0
   836  0078D9  00                 	db	0
   837  0078DA  42                 	db	66
   838  0078DB  7E                 	db	126
   839  0078DC  44                 	db	68
   840  0078DD  02                 	db	2
   841  0078DE  02                 	db	2
   842  0078DF  04                 	db	4
   843  0078E0  00                 	db	0
   844  0078E1  00                 	db	0
   845  0078E2  64                 	db	100
   846  0078E3  4A                 	db	74
   847  0078E4  4A                 	db	74
   848  0078E5  4A                 	db	74
   849  0078E6  36                 	db	54
   850  0078E7  00                 	db	0
   851  0078E8  00                 	db	0
   852  0078E9  00                 	db	0
   853  0078EA  04                 	db	4
   854  0078EB  3F                 	db	63
   855  0078EC  44                 	db	68
   856  0078ED  44                 	db	68
   857  0078EE  20                 	db	32
   858  0078EF  00                 	db	0
   859  0078F0  00                 	db	0
   860  0078F1  00                 	db	0
   861  0078F2  02                 	db	2
   862  0078F3  3E                 	db	62
   863  0078F4  40                 	db	64
   864  0078F5  40                 	db	64
   865  0078F6  22                 	db	34
   866  0078F7  7E                 	db	126
   867  0078F8  40                 	db	64
   868  0078F9  02                 	db	2
   869  0078FA  0E                 	db	14
   870  0078FB  32                 	db	50
   871  0078FC  40                 	db	64
   872  0078FD  32                 	db	50
   873  0078FE  0E                 	db	14
   874  0078FF  02                 	db	2
   875  007900  00                 	db	0
   876  007901  02                 	db	2
   877  007902  1E                 	db	30
   878  007903  62                 	db	98
   879  007904  18                 	db	24
   880  007905  62                 	db	98
   881  007906  1E                 	db	30
   882  007907  02                 	db	2
   883  007908  00                 	db	0
   884  007909  42                 	db	66
   885  00790A  62                 	db	98
   886  00790B  14                 	db	20
   887  00790C  08                 	db	8
   888  00790D  14                 	db	20
   889  00790E  62                 	db	98
   890  00790F  42                 	db	66
   891  007910  00                 	db	0
   892  007911  01                 	db	1
   893  007912  43                 	db	67
   894  007913  45                 	db	69
   895  007914  38                 	db	56
   896  007915  05                 	db	5
   897  007916  03                 	db	3
   898  007917  01                 	db	1
   899  007918  00                 	db	0
   900  007919  00                 	db	0
   901  00791A  46                 	db	70
   902  00791B  62                 	db	98
   903  00791C  52                 	db	82
   904  00791D  4A                 	db	74
   905  00791E  46                 	db	70
   906  00791F  62                 	db	98
   907  007920  00                 	db	0
   908  007921  00                 	db	0
   909  007922  00                 	db	0
   910  007923  08                 	db	8
   911  007924  36                 	db	54
   912  007925  41                 	db	65
   913  007926  00                 	db	0
   914  007927  00                 	db	0
   915  007928  00                 	db	0
   916  007929  00                 	db	0
   917  00792A  00                 	db	0
   918  00792B  00                 	db	0
   919  00792C  7F                 	db	127
   920  00792D  00                 	db	0
   921  00792E  00                 	db	0
   922  00792F  00                 	db	0
   923  007930  00                 	db	0
   924  007931  00                 	db	0
   925  007932  00                 	db	0
   926  007933  00                 	db	0
   927  007934  41                 	db	65
   928  007935  36                 	db	54
   929  007936  08                 	db	8
   930  007937  00                 	db	0
   931  007938  00                 	db	0
   932  007939  00                 	db	0
   933  00793A  18                 	db	24
   934  00793B  08                 	db	8
   935  00793C  08                 	db	8
   936  00793D  10                 	db	16
   937  00793E  10                 	db	16
   938  00793F  18                 	db	24
   939  007940  00                 	db	0
   940  007941  AA                 	db	170
   941  007942  55                 	db	85
   942  007943  AA                 	db	170
   943  007944  55                 	db	85
   944  007945  AA                 	db	170
   945  007946  55                 	db	85
   946  007947  AA                 	db	170
   947  007948  55                 	db	85
   948  007949                     __end_of_OledFont0:
   949                           	opt stack 0
   950  007949                     _configDescriptor1:
   951                           	opt stack 0
   952  007949  09                 	db	9
   953  00794A  02                 	db	2
   954  00794B  43                 	db	67
   955  00794C  00                 	db	0
   956  00794D  02                 	db	2
   957  00794E  01                 	db	1
   958  00794F  00                 	db	0
   959  007950  C0                 	db	192
   960  007951  32                 	db	50
   961  007952  09                 	db	9
   962  007953  04                 	db	4
   963  007954  00                 	db	0
   964  007955  00                 	db	0
   965  007956  01                 	db	1
   966  007957  02                 	db	2
   967  007958  02                 	db	2
   968  007959  01                 	db	1
   969  00795A  00                 	db	0
   970  00795B  05                 	db	5
   971  00795C  24                 	db	36
   972  00795D  00                 	db	0
   973  00795E  10                 	db	16
   974  00795F  01                 	db	1
   975  007960  04                 	db	4
   976  007961  24                 	db	36
   977  007962  02                 	db	2
   978  007963  02                 	db	2
   979  007964  05                 	db	5
   980  007965  24                 	db	36
   981  007966  06                 	db	6
   982  007967  00                 	db	0
   983  007968  01                 	db	1
   984  007969  05                 	db	5
   985  00796A  24                 	db	36
   986  00796B  01                 	db	1
   987  00796C  00                 	db	0
   988  00796D  01                 	db	1
   989  00796E  07                 	db	7
   990  00796F  05                 	db	5
   991  007970  81                 	db	129
   992  007971  03                 	db	3
   993  007972  08                 	db	8
   994  007973  00                 	db	0
   995  007974  02                 	db	2
   996  007975  09                 	db	9
   997  007976  04                 	db	4
   998  007977  01                 	db	1
   999  007978  00                 	db	0
  1000  007979  02                 	db	2
  1001  00797A  0A                 	db	10
  1002  00797B  00                 	db	0
  1003  00797C  00                 	db	0
  1004  00797D  00                 	db	0
  1005  00797E  07                 	db	7
  1006  00797F  05                 	db	5
  1007  007980  02                 	db	2
  1008  007981  02                 	db	2
  1009  007982  40                 	db	64
  1010  007983  00                 	db	0
  1011  007984  00                 	db	0
  1012  007985  07                 	db	7
  1013  007986  05                 	db	5
  1014  007987  82                 	db	130
  1015  007988  02                 	db	2
  1016  007989  40                 	db	64
  1017  00798A  00                 	db	0
  1018  00798B  00                 	db	0
  1019  00798C                     __end_of_configDescriptor1:
  1020                           	opt stack 0
  1021  00798C                     _sd001:
  1022                           	opt stack 0
  1023  00798C  34                 	db	52
  1024  00798D  03                 	db	3
  1025  00798E  004D               	dw	77
  1026  007990  0069               	dw	105
  1027  007992  0063               	dw	99
  1028  007994  0072               	dw	114
  1029  007996  006F               	dw	111
  1030  007998  0063               	dw	99
  1031  00799A  0068               	dw	104
  1032  00799C  0069               	dw	105
  1033  00799E  0070               	dw	112
  1034  0079A0  0020               	dw	32
  1035  0079A2  0054               	dw	84
  1036  0079A4  0065               	dw	101
  1037  0079A6  0063               	dw	99
  1038  0079A8  0068               	dw	104
  1039  0079AA  006E               	dw	110
  1040  0079AC  006F               	dw	111
  1041  0079AE  006C               	dw	108
  1042  0079B0  006F               	dw	111
  1043  0079B2  0067               	dw	103
  1044  0079B4  0079               	dw	121
  1045  0079B6  0020               	dw	32
  1046  0079B8  0049               	dw	73
  1047  0079BA  006E               	dw	110
  1048  0079BC  0063               	dw	99
  1049  0079BE  002E               	dw	46
  1050  0079C0                     __end_of_sd001:
  1051                           	opt stack 0
  1052  0079C0                     _sd002:
  1053                           	opt stack 0
  1054  0079C0  34                 	db	52
  1055  0079C1  03                 	db	3
  1056  0079C2  0043               	dw	67
  1057  0079C4  0044               	dw	68
  1058  0079C6  0043               	dw	67
  1059  0079C8  0020               	dw	32
  1060  0079CA  0052               	dw	82
  1061  0079CC  0053               	dw	83
  1062  0079CE  002D               	dw	45
  1063  0079D0  0032               	dw	50
  1064  0079D2  0033               	dw	51
  1065  0079D4  0032               	dw	50
  1066  0079D6  0020               	dw	32
  1067  0079D8  0045               	dw	69
  1068  0079DA  006D               	dw	109
  1069  0079DC  0075               	dw	117
  1070  0079DE  006C               	dw	108
  1071  0079E0  0061               	dw	97
  1072  0079E2  0074               	dw	116
  1073  0079E4  0069               	dw	105
  1074  0079E6  006F               	dw	111
  1075  0079E8  006E               	dw	110
  1076  0079EA  0020               	dw	32
  1077  0079EC  0044               	dw	68
  1078  0079EE  0065               	dw	101
  1079  0079F0  006D               	dw	109
  1080  0079F2  006F               	dw	111
  1081  0079F4                     __end_of_sd002:
  1082                           	opt stack 0
  1083  0079F4                     _device_dsc:
  1084                           	opt stack 0
  1085  0079F4  12                 	db	18
  1086  0079F5  01                 	db	1
  1087  0079F6  0200               	dw	512
  1088  0079F8  02                 	db	2
  1089  0079F9  00                 	db	0
  1090  0079FA  00                 	db	0
  1091  0079FB  08                 	db	8
  1092  0079FC  04D8               	dw	1240
  1093  0079FE  000A               	dw	10
  1094  007A00  0100               	dw	256
  1095  007A02  01                 	db	1
  1096  007A03  02                 	db	2
  1097  007A04  00                 	db	0
  1098  007A05  01                 	db	1
  1099  007A06                     __end_of_device_dsc:
  1100                           	opt stack 0
  1101  007A06                     _sd000:
  1102                           	opt stack 0
  1103  007A06  04                 	db	4
  1104  007A07  03                 	db	3
  1105  007A08  0409               	dw	1033
  1106  007A0A                     __end_of_sd000:
  1107                           	opt stack 0
  1108  0000                     _ACTCON	set	4021
  1109  0000                     _ADCON0	set	4034
  1110  0000                     _ADCON0bits	set	4034
  1111  0000                     _ADCON1	set	4033
  1112  0000                     _ADCON2	set	4032
  1113  0000                     _ADRESH	set	4036
  1114  0000                     _ADRESL	set	4035
  1115  0000                     _ANSELAbits	set	3931
  1116  0000                     _ANSELCbits	set	3933
  1117  0000                     _BAUDCON	set	4024
  1118  0000                     _CM1CON0	set	3992
  1119  0000                     _CM1CON0bits	set	3992
  1120  0000                     _CM2CON1bits	set	3994
  1121  0000                     _EEADR	set	4009
  1122  0000                     _EECON1bits	set	4006
  1123  0000                     _EECON2	set	4007
  1124  0000                     _EEDATA	set	4008
  1125  0000                     _INTCONbits	set	4082
  1126  0000                     _IOCCbits	set	3975
  1127  0000                     _IPR3bits	set	4005
  1128  0000                     _LATAbits	set	3977
  1129  0000                     _LATBbits	set	3978
  1130  0000                     _LATCbits	set	3979
  1131  0000                     _OSCCON	set	4051
  1132  0000                     _OSCCON2	set	4050
  1133  0000                     _OSCCON2bits	set	4050
  1134  0000                     _OSCTUNE	set	3995
  1135  0000                     _PIE1bits	set	3997
  1136  0000                     _PIE2bits	set	4000
  1137  0000                     _PIE3bits	set	4003
  1138  0000                     _PIR1bits	set	3998
  1139  0000                     _PIR2bits	set	4001
  1140  0000                     _PIR3bits	set	4004
  1141  0000                     _PORTAbits	set	3968
  1142  0000                     _PORTCbits	set	3970
  1143  0000                     _PR2	set	4027
  1144  0000                     _RCONbits	set	4048
  1145  0000                     _RCREG	set	4014
  1146  0000                     _RCSTA	set	4011
  1147  0000                     _RCSTAbits	set	4011
  1148  0000                     _SPBRG	set	4015
  1149  0000                     _SPBRGH	set	4016
  1150  0000                     _SSP1ADD	set	4040
  1151  0000                     _SSP1CON1	set	4038
  1152  0000                     _SSP1CON1bits	set	4038
  1153  0000                     _SSP1STAT	set	4039
  1154  0000                     _SSP1STATbits	set	4039
  1155  0000                     _SSPBUF	set	4041
  1156  0000                     _T1CON	set	4045
  1157  0000                     _T1CONbits	set	4045
  1158  0000                     _T1GCON	set	4044
  1159  0000                     _T1GCONbits	set	4044
  1160  0000                     _T2CON	set	4026
  1161  0000                     _T2CONbits	set	4026
  1162  0000                     _TABLAT	set	4085
  1163  0000                     _TBLPTRH	set	4087
  1164  0000                     _TBLPTRL	set	4086
  1165  0000                     _TBLPTRU	set	4088
  1166  0000                     _TMR1H	set	4047
  1167  0000                     _TMR1L	set	4046
  1168  0000                     _TMR2	set	4028
  1169  0000                     _TRISAbits	set	3986
  1170  0000                     _TRISBbits	set	3987
  1171  0000                     _TRISCbits	set	3988
  1172  0000                     _TXREG	set	4013
  1173  0000                     _TXSTA	set	4012
  1174  0000                     _TXSTAbits	set	4012
  1175  0000                     _UADDR	set	3939
  1176  0000                     _UCFG	set	3938
  1177  0000                     _UCON	set	3936
  1178  0000                     _UCONbits	set	3936
  1179  0000                     _UEIE	set	3942
  1180  0000                     _UEIR	set	3943
  1181  0000                     _UEP0bits	set	3946
  1182  0000                     _UIE	set	3940
  1183  0000                     _UIEbits	set	3940
  1184  0000                     _UIR	set	3941
  1185  0000                     _UIRbits	set	3941
  1186  0000                     _USTAT	set	3937
  1187  0000                     _VREFCON0	set	3965
  1188  0000                     _VREFCON0bits	set	3965
  1189  0000                     _WDTCONbits	set	4049
  1190  0000                     _CKE	set	32318
  1191  0000                     _CKP	set	32308
  1192  0000                     _GIE	set	32663
  1193  0000                     _PEIE	set	32662
  1194  0000                     _UEP0	set	3946
  1195  0000                     _UEP1	set	3947
  1196  007A0A                     __stringdata:
  1197                           	opt stack 0
  1198  007A0A                     STR_256:
  1199  007A0A  73                 	db	115	;'s'
  1200  007A0B  79                 	db	121	;'y'
  1201  007A0C  73                 	db	115	;'s'
  1202  007A0D  20                 	db	32
  1203  007A0E  73                 	db	115	;'s'
  1204  007A0F  65                 	db	101	;'e'
  1205  007A10  74                 	db	116	;'t'
  1206  007A11  20                 	db	32
  1207  007A12  70                 	db	112	;'p'
  1208  007A13  69                 	db	105	;'i'
  1209  007A14  6E                 	db	110	;'n'
  1210  007A15  64                 	db	100	;'d'
  1211  007A16  69                 	db	105	;'i'
  1212  007A17  67                 	db	103	;'g'
  1213  007A18  20                 	db	32
  1214  007A19  47                 	db	71	;'G'
  1215  007A1A  50                 	db	80	;'P'
  1216  007A1B  49                 	db	73	;'I'
  1217  007A1C  4F                 	db	79	;'O'
  1218  007A1D  31                 	db	49	;'1'
  1219  007A1E  30                 	db	48	;'0'
  1220  007A1F  20                 	db	32
  1221  007A20  30                 	db	48	;'0'
  1222  007A21  0D                 	db	13
  1223  007A22  0A                 	db	10
  1224  007A23  00                 	db	0
  1225  007A24                     STR_257:
  1226  007A24  73                 	db	115	;'s'
  1227  007A25  79                 	db	121	;'y'
  1228  007A26  73                 	db	115	;'s'
  1229  007A27  20                 	db	32
  1230  007A28  73                 	db	115	;'s'
  1231  007A29  65                 	db	101	;'e'
  1232  007A2A  74                 	db	116	;'t'
  1233  007A2B  20                 	db	32
  1234  007A2C  70                 	db	112	;'p'
  1235  007A2D  69                 	db	105	;'i'
  1236  007A2E  6E                 	db	110	;'n'
  1237  007A2F  64                 	db	100	;'d'
  1238  007A30  69                 	db	105	;'i'
  1239  007A31  67                 	db	103	;'g'
  1240  007A32  20                 	db	32
  1241  007A33  47                 	db	71	;'G'
  1242  007A34  50                 	db	80	;'P'
  1243  007A35  49                 	db	73	;'I'
  1244  007A36  4F                 	db	79	;'O'
  1245  007A37  31                 	db	49	;'1'
  1246  007A38  31                 	db	49	;'1'
  1247  007A39  20                 	db	32
  1248  007A3A  30                 	db	48	;'0'
  1249  007A3B  0D                 	db	13
  1250  007A3C  0A                 	db	10
  1251  007A3D  00                 	db	0
  1252  007A3E                     STR_254:
  1253  007A3E  73                 	db	115	;'s'
  1254  007A3F  79                 	db	121	;'y'
  1255  007A40  73                 	db	115	;'s'
  1256  007A41  20                 	db	32
  1257  007A42  73                 	db	115	;'s'
  1258  007A43  65                 	db	101	;'e'
  1259  007A44  74                 	db	116	;'t'
  1260  007A45  20                 	db	32
  1261  007A46  70                 	db	112	;'p'
  1262  007A47  69                 	db	105	;'i'
  1263  007A48  6E                 	db	110	;'n'
  1264  007A49  64                 	db	100	;'d'
  1265  007A4A  69                 	db	105	;'i'
  1266  007A4B  67                 	db	103	;'g'
  1267  007A4C  20                 	db	32
  1268  007A4D  47                 	db	71	;'G'
  1269  007A4E  50                 	db	80	;'P'
  1270  007A4F  49                 	db	73	;'I'
  1271  007A50  4F                 	db	79	;'O'
  1272  007A51  31                 	db	49	;'1'
  1273  007A52  30                 	db	48	;'0'
  1274  007A53  20                 	db	32
  1275  007A54  31                 	db	49	;'1'
  1276  007A55  0D                 	db	13
  1277  007A56  0A                 	db	10
  1278  007A57  00                 	db	0
  1279  007A58                     STR_255:
  1280  007A58  73                 	db	115	;'s'
  1281  007A59  79                 	db	121	;'y'
  1282  007A5A  73                 	db	115	;'s'
  1283  007A5B  20                 	db	32
  1284  007A5C  73                 	db	115	;'s'
  1285  007A5D  65                 	db	101	;'e'
  1286  007A5E  74                 	db	116	;'t'
  1287  007A5F  20                 	db	32
  1288  007A60  70                 	db	112	;'p'
  1289  007A61  69                 	db	105	;'i'
  1290  007A62  6E                 	db	110	;'n'
  1291  007A63  64                 	db	100	;'d'
  1292  007A64  69                 	db	105	;'i'
  1293  007A65  67                 	db	103	;'g'
  1294  007A66  20                 	db	32
  1295  007A67  47                 	db	71	;'G'
  1296  007A68  50                 	db	80	;'P'
  1297  007A69  49                 	db	73	;'I'
  1298  007A6A  4F                 	db	79	;'O'
  1299  007A6B  31                 	db	49	;'1'
  1300  007A6C  31                 	db	49	;'1'
  1301  007A6D  20                 	db	32
  1302  007A6E  31                 	db	49	;'1'
  1303  007A6F  0D                 	db	13
  1304  007A70  0A                 	db	10
  1305  007A71  00                 	db	0
  1306  007A72                     STR_22:
  1307  007A72  73                 	db	115	;'s'
  1308  007A73  79                 	db	121	;'y'
  1309  007A74  73                 	db	115	;'s'
  1310  007A75  20                 	db	32
  1311  007A76  73                 	db	115	;'s'
  1312  007A77  6C                 	db	108	;'l'
  1313  007A78  65                 	db	101	;'e'
  1314  007A79  65                 	db	101	;'e'
  1315  007A7A  70                 	db	112	;'p'
  1316  007A7B  20                 	db	32
  1317  007A7C  39                 	db	57	;'9'
  1318  007A7D  39                 	db	57	;'9'
  1319  007A7E  39                 	db	57	;'9'
  1320  007A7F  39                 	db	57	;'9'
  1321  007A80  39                 	db	57	;'9'
  1322  007A81  39                 	db	57	;'9'
  1323  007A82  39                 	db	57	;'9'
  1324  007A83  39                 	db	57	;'9'
  1325  007A84  39                 	db	57	;'9'
  1326  007A85  00                 	db	0
  1327  007A86                     STR_205:
  1328  007A86  28                 	db	40
  1329  007A87  55                 	db	85	;'U'
  1330  007A88  4E                 	db	78	;'N'
  1331  007A89  43                 	db	67	;'C'
  1332  007A8A  4E                 	db	78	;'N'
  1333  007A8B  46                 	db	70	;'F'
  1334  007A8C  29                 	db	41
  1335  007A8D  20                 	db	32
  1336  007A8E  20                 	db	32
  1337  007A8F  20                 	db	32
  1338  007A90  20                 	db	32
  1339  007A91  28                 	db	40
  1340  007A92  43                 	db	67	;'C'
  1341  007A93  4E                 	db	78	;'N'
  1342  007A94  46                 	db	70	;'F'
  1343  007A95  29                 	db	41
  1344  007A96  20                 	db	32
  1345  007A97  00                 	db	0
  1346  007A98                     STR_218:
  1347  007A98  4D                 	db	77	;'M'
  1348  007A99  61                 	db	97	;'a'
  1349  007A9A  63                 	db	99	;'c'
  1350  007A9B  20                 	db	32
  1351  007A9C  45                 	db	69	;'E'
  1352  007A9D  72                 	db	114	;'r'
  1353  007A9E  72                 	db	114	;'r'
  1354  007A9F  6F                 	db	111	;'o'
  1355  007AA0  72                 	db	114	;'r'
  1356  007AA1  20                 	db	32
  1357  007AA2  4F                 	db	79	;'O'
  1358  007AA3  63                 	db	99	;'c'
  1359  007AA4  63                 	db	99	;'c'
  1360  007AA5  75                 	db	117	;'u'
  1361  007AA6  72                 	db	114	;'r'
  1362  007AA7  65                 	db	101	;'e'
  1363  007AA8  64                 	db	100	;'d'
  1364  007AA9  00                 	db	0
  1365  007AAA                     STR_214:
  1366  007AAA  20                 	db	32
  1367  007AAB  20                 	db	32
  1368  007AAC  20                 	db	32
  1369  007AAD  20                 	db	32
  1370  007AAE  52                 	db	82	;'R'
  1371  007AAF  65                 	db	101	;'e'
  1372  007AB0  63                 	db	99	;'c'
  1373  007AB1  65                 	db	101	;'e'
  1374  007AB2  69                 	db	105	;'i'
  1375  007AB3  76                 	db	118	;'v'
  1376  007AB4  65                 	db	101	;'e'
  1377  007AB5  64                 	db	100	;'d'
  1378  007AB6  20                 	db	32
  1379  007AB7  20                 	db	32
  1380  007AB8  20                 	db	32
  1381  007AB9  20                 	db	32
  1382  007ABA  00                 	db	0
  1383  007ABB                     STR_84:
  1384  007ABB  20                 	db	32
  1385  007ABC  20                 	db	32
  1386  007ABD  20                 	db	32
  1387  007ABE  44                 	db	68	;'D'
  1388  007ABF  61                 	db	97	;'a'
  1389  007AC0  74                 	db	116	;'t'
  1390  007AC1  61                 	db	97	;'a'
  1391  007AC2  20                 	db	32
  1392  007AC3  52                 	db	82	;'R'
  1393  007AC4  61                 	db	97	;'a'
  1394  007AC5  74                 	db	116	;'t'
  1395  007AC6  65                 	db	101	;'e'
  1396  007AC7  20                 	db	32
  1397  007AC8  20                 	db	32
  1398  007AC9  20                 	db	32
  1399  007ACA  20                 	db	32
  1400  007ACB  00                 	db	0
  1401  007ACC                     STR_83:
  1402  007ACC  20                 	db	32
  1403  007ACD  20                 	db	32
  1404  007ACE  53                 	db	83	;'S'
  1405  007ACF  65                 	db	101	;'e'
  1406  007AD0  6C                 	db	108	;'l'
  1407  007AD1  65                 	db	101	;'e'
  1408  007AD2  63                 	db	99	;'c'
  1409  007AD3  74                 	db	116	;'t'
  1410  007AD4  20                 	db	32
  1411  007AD5  4C                 	db	76	;'L'
  1412  007AD6  6F                 	db	111	;'o'
  1413  007AD7  52                 	db	82	;'R'
  1414  007AD8  61                 	db	97	;'a'
  1415  007AD9  20                 	db	32
  1416  007ADA  20                 	db	32
  1417  007ADB  20                 	db	32
  1418  007ADC  00                 	db	0
  1419  007ADD                     STR_201:
  1420  007ADD  20                 	db	32
  1421  007ADE  20                 	db	32
  1422  007ADF  4C                 	db	76	;'L'
  1423  007AE0  61                 	db	97	;'a'
  1424  007AE1  73                 	db	115	;'s'
  1425  007AE2  74                 	db	116	;'t'
  1426  007AE3  20                 	db	32
  1427  007AE4  4D                 	db	77	;'M'
  1428  007AE5  65                 	db	101	;'e'
  1429  007AE6  73                 	db	115	;'s'
  1430  007AE7  73                 	db	115	;'s'
  1431  007AE8  61                 	db	97	;'a'
  1432  007AE9  67                 	db	103	;'g'
  1433  007AEA  65                 	db	101	;'e'
  1434  007AEB  20                 	db	32
  1435  007AEC  20                 	db	32
  1436  007AED  00                 	db	0
  1437  007AEE                     STR_200:
  1438  007AEE  20                 	db	32
  1439  007AEF  56                 	db	86	;'V'
  1440  007AF0  69                 	db	105	;'i'
  1441  007AF1  65                 	db	101	;'e'
  1442  007AF2  77                 	db	119	;'w'
  1443  007AF3  20                 	db	32
  1444  007AF4  44                 	db	68	;'D'
  1445  007AF5  6F                 	db	111	;'o'
  1446  007AF6  77                 	db	119	;'w'
  1447  007AF7  6E                 	db	110	;'n'
  1448  007AF8  6C                 	db	108	;'l'
  1449  007AF9  69                 	db	105	;'i'
  1450  007AFA  6E                 	db	110	;'n'
  1451  007AFB  6B                 	db	107	;'k'
  1452  007AFC  20                 	db	32
  1453  007AFD  20                 	db	32
  1454  007AFE  00                 	db	0
  1455  007AFF                     STR_93:
  1456  007AFF  20                 	db	32
  1457  007B00  20                 	db	32
  1458  007B01  49                 	db	73	;'I'
  1459  007B02  73                 	db	115	;'s'
  1460  007B03  73                 	db	115	;'s'
  1461  007B04  75                 	db	117	;'u'
  1462  007B05  65                 	db	101	;'e'
  1463  007B06  20                 	db	32
  1464  007B07  55                 	db	85	;'U'
  1465  007B08  70                 	db	112	;'p'
  1466  007B09  6C                 	db	108	;'l'
  1467  007B0A  69                 	db	105	;'i'
  1468  007B0B  6E                 	db	110	;'n'
  1469  007B0C  6B                 	db	107	;'k'
  1470  007B0D  20                 	db	32
  1471  007B0E  20                 	db	32
  1472  007B0F  00                 	db	0
  1473  007B10                     STR_28:
  1474  007B10  20                 	db	32
  1475  007B11  28                 	db	40
  1476  007B12  53                 	db	83	;'S'
  1477  007B13  31                 	db	49	;'1'
  1478  007B14  29                 	db	41
  1479  007B15  20                 	db	32
  1480  007B16  20                 	db	32
  1481  007B17  20                 	db	32
  1482  007B18  20                 	db	32
  1483  007B19  20                 	db	32
  1484  007B1A  20                 	db	32
  1485  007B1B  28                 	db	40
  1486  007B1C  53                 	db	83	;'S'
  1487  007B1D  32                 	db	50	;'2'
  1488  007B1E  29                 	db	41
  1489  007B1F  20                 	db	32
  1490  007B20  00                 	db	0
  1491  007B21                     STR_213:
  1492  007B21  53                 	db	83	;'S'
  1493  007B22  65                 	db	101	;'e'
  1494  007B23  72                 	db	114	;'r'
  1495  007B24  76                 	db	118	;'v'
  1496  007B25  65                 	db	101	;'e'
  1497  007B26  72                 	db	114	;'r'
  1498  007B27  20                 	db	32
  1499  007B28  52                 	db	82	;'R'
  1500  007B29  65                 	db	101	;'e'
  1501  007B2A  73                 	db	115	;'s'
  1502  007B2B  70                 	db	112	;'p'
  1503  007B2C  6F                 	db	111	;'o'
  1504  007B2D  6E                 	db	110	;'n'
  1505  007B2E  73                 	db	115	;'s'
  1506  007B2F  65                 	db	101	;'e'
  1507  007B30  20                 	db	32
  1508  007B31  00                 	db	0
  1509  007B32                     STR_94:
  1510  007B32  20                 	db	32
  1511  007B33  4C                 	db	76	;'L'
  1512  007B34  6F                 	db	111	;'o'
  1513  007B35  52                 	db	82	;'R'
  1514  007B36  61                 	db	97	;'a'
  1515  007B37  57                 	db	87	;'W'
  1516  007B38  41                 	db	65	;'A'
  1517  007B39  4E                 	db	78	;'N'
  1518  007B3A  20                 	db	32
  1519  007B3B  50                 	db	80	;'P'
  1520  007B3C  61                 	db	97	;'a'
  1521  007B3D  63                 	db	99	;'c'
  1522  007B3E  6B                 	db	107	;'k'
  1523  007B3F  65                 	db	101	;'e'
  1524  007B40  74                 	db	116	;'t'
  1525  007B41  20                 	db	32
  1526  007B42  00                 	db	0
  1527  007B43                     STR_224:
  1528  007B43  20                 	db	32
  1529  007B44  54                 	db	84	;'T'
  1530  007B45  78                 	db	120	;'x'
  1531  007B46  20                 	db	32
  1532  007B47  53                 	db	83	;'S'
  1533  007B48  6C                 	db	108	;'l'
  1534  007B49  65                 	db	101	;'e'
  1535  007B4A  65                 	db	101	;'e'
  1536  007B4B  70                 	db	112	;'p'
  1537  007B4C  20                 	db	32
  1538  007B4D  45                 	db	69	;'E'
  1539  007B4E  76                 	db	118	;'v'
  1540  007B4F  65                 	db	101	;'e'
  1541  007B50  6E                 	db	110	;'n'
  1542  007B51  74                 	db	116	;'t'
  1543  007B52  20                 	db	32
  1544  007B53  00                 	db	0
  1545  007B54                     STR_25:
  1546  007B54  52                 	db	82	;'R'
  1547  007B55  65                 	db	101	;'e'
  1548  007B56  52                 	db	82	;'R'
  1549  007B57  75                 	db	117	;'u'
  1550  007B58  6E                 	db	110	;'n'
  1551  007B59  20                 	db	32
  1552  007B5A  50                 	db	80	;'P'
  1553  007B5B  77                 	db	119	;'w'
  1554  007B5C  72                 	db	114	;'r'
  1555  007B5D  54                 	db	84	;'T'
  1556  007B5E  73                 	db	115	;'s'
  1557  007B5F  74                 	db	116	;'t'
  1558  007B60  3C                 	db	60	;'<'
  1559  007B61  53                 	db	83	;'S'
  1560  007B62  32                 	db	50	;'2'
  1561  007B63  3E                 	db	62	;'>'
  1562  007B64  00                 	db	0
  1563  007B65                     STR_72:
  1564  007B65  49                 	db	73	;'I'
  1565  007B66  73                 	db	115	;'s'
  1566  007B67  73                 	db	115	;'s'
  1567  007B68  75                 	db	117	;'u'
  1568  007B69  65                 	db	101	;'e'
  1569  007B6A  20                 	db	32
  1570  007B6B  50                 	db	80	;'P'
  1571  007B6C  65                 	db	101	;'e'
  1572  007B6D  72                 	db	114	;'r'
  1573  007B6E  6F                 	db	111	;'o'
  1574  007B6F  64                 	db	100	;'d'
  1575  007B70  69                 	db	105	;'i'
  1576  007B71  63                 	db	99	;'c'
  1577  007B72  20                 	db	32
  1578  007B73  54                 	db	84	;'T'
  1579  007B74  58                 	db	88	;'X'
  1580  007B75  00                 	db	0
  1581  007B76                     STR_216:
  1582  007B76  44                 	db	68	;'D'
  1583  007B77  61                 	db	97	;'a'
  1584  007B78  74                 	db	116	;'t'
  1585  007B79  61                 	db	97	;'a'
  1586  007B7A  20                 	db	32
  1587  007B7B  54                 	db	84	;'T'
  1588  007B7C  72                 	db	114	;'r'
  1589  007B7D  61                 	db	97	;'a'
  1590  007B7E  6E                 	db	110	;'n'
  1591  007B7F  73                 	db	115	;'s'
  1592  007B80  6D                 	db	109	;'m'
  1593  007B81  69                 	db	105	;'i'
  1594  007B82  74                 	db	116	;'t'
  1595  007B83  74                 	db	116	;'t'
  1596  007B84  65                 	db	101	;'e'
  1597  007B85  64                 	db	100	;'d'
  1598  007B86  00                 	db	0
  1599  007B87                     STR_235:
  1600  007B87  45                 	db	69	;'E'
  1601  007B88  6E                 	db	110	;'n'
  1602  007B89  74                 	db	116	;'t'
  1603  007B8A  65                 	db	101	;'e'
  1604  007B8B  72                 	db	114	;'r'
  1605  007B8C  20                 	db	32
  1606  007B8D  53                 	db	83	;'S'
  1607  007B8E  6C                 	db	108	;'l'
  1608  007B8F  65                 	db	101	;'e'
  1609  007B90  65                 	db	101	;'e'
  1610  007B91  70                 	db	112	;'p'
  1611  007B92  20                 	db	32
  1612  007B93  4D                 	db	77	;'M'
  1613  007B94  6F                 	db	111	;'o'
  1614  007B95  64                 	db	100	;'d'
  1615  007B96  65                 	db	101	;'e'
  1616  007B97  00                 	db	0
  1617  007B98                     STR_203:
  1618  007B98  55                 	db	85	;'U'
  1619  007B99  70                 	db	112	;'p'
  1620  007B9A  6C                 	db	108	;'l'
  1621  007B9B  69                 	db	105	;'i'
  1622  007B9C  6E                 	db	110	;'n'
  1623  007B9D  6B                 	db	107	;'k'
  1624  007B9E  20                 	db	32
  1625  007B9F  50                 	db	80	;'P'
  1626  007BA0  63                 	db	99	;'c'
  1627  007BA1  6B                 	db	107	;'k'
  1628  007BA2  74                 	db	116	;'t'
  1629  007BA3  20                 	db	32
  1630  007BA4  54                 	db	84	;'T'
  1631  007BA5  79                 	db	121	;'y'
  1632  007BA6  70                 	db	112	;'p'
  1633  007BA7  65                 	db	101	;'e'
  1634  007BA8  00                 	db	0
  1635  007BA9                     STR_26:
  1636  007BA9  4D                 	db	77	;'M'
  1637  007BAA  6F                 	db	111	;'o'
  1638  007BAB  62                 	db	98	;'b'
  1639  007BAC  69                 	db	105	;'i'
  1640  007BAD  6C                 	db	108	;'l'
  1641  007BAE  65                 	db	101	;'e'
  1642  007BAF  20                 	db	32
  1643  007BB0  4D                 	db	77	;'M'
  1644  007BB1  6F                 	db	111	;'o'
  1645  007BB2  74                 	db	116	;'t'
  1646  007BB3  65                 	db	101	;'e'
  1647  007BB4  20                 	db	32
  1648  007BB5  2D                 	db	45
  1649  007BB6  41                 	db	65	;'A'
  1650  007BB7  70                 	db	112	;'p'
  1651  007BB8  70                 	db	112	;'p'
  1652  007BB9  00                 	db	0
  1653  007BBA                     STR_27:
  1654  007BBA  4E                 	db	78	;'N'
  1655  007BBB  61                 	db	97	;'a'
  1656  007BBC  76                 	db	118	;'v'
  1657  007BBD  69                 	db	105	;'i'
  1658  007BBE  67                 	db	103	;'g'
  1659  007BBF  61                 	db	97	;'a'
  1660  007BC0  74                 	db	116	;'t'
  1661  007BC1  65                 	db	101	;'e'
  1662  007BC2  20                 	db	32
  1663  007BC3  20                 	db	32
  1664  007BC4  53                 	db	83	;'S'
  1665  007BC5  65                 	db	101	;'e'
  1666  007BC6  6C                 	db	108	;'l'
  1667  007BC7  65                 	db	101	;'e'
  1668  007BC8  63                 	db	99	;'c'
  1669  007BC9  74                 	db	116	;'t'
  1670  007BCA  00                 	db	0
  1671  007BCB                     STR_228:
  1672  007BCB  44                 	db	68	;'D'
  1673  007BCC  6F                 	db	111	;'o'
  1674  007BCD  77                 	db	119	;'w'
  1675  007BCE  6E                 	db	110	;'n'
  1676  007BCF  6C                 	db	108	;'l'
  1677  007BD0  69                 	db	105	;'i'
  1678  007BD1  6E                 	db	110	;'n'
  1679  007BD2  6B                 	db	107	;'k'
  1680  007BD3  20                 	db	32
  1681  007BD4  44                 	db	68	;'D'
  1682  007BD5  69                 	db	105	;'i'
  1683  007BD6  73                 	db	115	;'s'
  1684  007BD7  70                 	db	112	;'p'
  1685  007BD8  6C                 	db	108	;'l'
  1686  007BD9  61                 	db	97	;'a'
  1687  007BDA  79                 	db	121	;'y'
  1688  007BDB  00                 	db	0
  1689  007BDC                     STR_81:
  1690  007BDC  20                 	db	32
  1691  007BDD  20                 	db	32
  1692  007BDE  20                 	db	32
  1693  007BDF  20                 	db	32
  1694  007BE0  44                 	db	68	;'D'
  1695  007BE1  69                 	db	105	;'i'
  1696  007BE2  73                 	db	115	;'s'
  1697  007BE3  70                 	db	112	;'p'
  1698  007BE4  6C                 	db	108	;'l'
  1699  007BE5  61                 	db	97	;'a'
  1700  007BE6  79                 	db	121	;'y'
  1701  007BE7  20                 	db	32
  1702  007BE8  20                 	db	32
  1703  007BE9  20                 	db	32
  1704  007BEA  20                 	db	32
  1705  007BEB  00                 	db	0
  1706  007BEC                     STR_80:
  1707  007BEC  20                 	db	32
  1708  007BED  20                 	db	32
  1709  007BEE  53                 	db	83	;'S'
  1710  007BEF  65                 	db	101	;'e'
  1711  007BF0  6E                 	db	110	;'n'
  1712  007BF1  73                 	db	115	;'s'
  1713  007BF2  6F                 	db	111	;'o'
  1714  007BF3  72                 	db	114	;'r'
  1715  007BF4  20                 	db	32
  1716  007BF5  44                 	db	68	;'D'
  1717  007BF6  61                 	db	97	;'a'
  1718  007BF7  74                 	db	116	;'t'
  1719  007BF8  61                 	db	97	;'a'
  1720  007BF9  20                 	db	32
  1721  007BFA  20                 	db	32
  1722  007BFB  00                 	db	0
  1723  007BFC                     STR_75:
  1724  007BFC  28                 	db	40
  1725  007BFD  4E                 	db	78	;'N'
  1726  007BFE  41                 	db	65	;'A'
  1727  007BFF  56                 	db	86	;'V'
  1728  007C00  29                 	db	41
  1729  007C01  20                 	db	32
  1730  007C02  20                 	db	32
  1731  007C03  20                 	db	32
  1732  007C04  20                 	db	32
  1733  007C05  28                 	db	40
  1734  007C06  53                 	db	83	;'S'
  1735  007C07  45                 	db	69	;'E'
  1736  007C08  4C                 	db	76	;'L'
  1737  007C09  29                 	db	41
  1738  007C0A  20                 	db	32
  1739  007C0B  00                 	db	0
  1740  007C0C                     STR_236:
  1741  007C0C  28                 	db	40
  1742  007C0D  4E                 	db	78	;'N'
  1743  007C0E  41                 	db	65	;'A'
  1744  007C0F  56                 	db	86	;'V'
  1745  007C10  29                 	db	41
  1746  007C11  20                 	db	32
  1747  007C12  20                 	db	32
  1748  007C13  20                 	db	32
  1749  007C14  20                 	db	32
  1750  007C15  28                 	db	40
  1751  007C16  53                 	db	83	;'S'
  1752  007C17  4C                 	db	76	;'L'
  1753  007C18  50                 	db	80	;'P'
  1754  007C19  29                 	db	41
  1755  007C1A  20                 	db	32
  1756  007C1B  00                 	db	0
  1757  007C1C                     STR_243:
  1758  007C1C  6D                 	db	109	;'m'
  1759  007C1D  61                 	db	97	;'a'
  1760  007C1E  63                 	db	99	;'c'
  1761  007C1F  20                 	db	32
  1762  007C20  73                 	db	115	;'s'
  1763  007C21  65                 	db	101	;'e'
  1764  007C22  74                 	db	116	;'t'
  1765  007C23  20                 	db	32
  1766  007C24  61                 	db	97	;'a'
  1767  007C25  64                 	db	100	;'d'
  1768  007C26  72                 	db	114	;'r'
  1769  007C27  20                 	db	32
  1770  007C28  6F                 	db	111	;'o'
  1771  007C29  66                 	db	102	;'f'
  1772  007C2A  66                 	db	102	;'f'
  1773  007C2B  00                 	db	0
  1774  007C2C                     STR_220:
  1775  007C2C  4E                 	db	78	;'N'
  1776  007C2D  6F                 	db	111	;'o'
  1777  007C2E  20                 	db	32
  1778  007C2F  46                 	db	70	;'F'
  1779  007C30  72                 	db	114	;'r'
  1780  007C31  65                 	db	101	;'e'
  1781  007C32  65                 	db	101	;'e'
  1782  007C33  20                 	db	32
  1783  007C34  43                 	db	67	;'C'
  1784  007C35  68                 	db	104	;'h'
  1785  007C36  61                 	db	97	;'a'
  1786  007C37  6E                 	db	110	;'n'
  1787  007C38  6E                 	db	110	;'n'
  1788  007C39  65                 	db	101	;'e'
  1789  007C3A  6C                 	db	108	;'l'
  1790  007C3B  00                 	db	0
  1791  007C3C                     STR_7:
  1792  007C3C  42                 	db	66	;'B'
  1793  007C3D  75                 	db	117	;'u'
  1794  007C3E  69                 	db	105	;'i'
  1795  007C3F  6C                 	db	108	;'l'
  1796  007C40  64                 	db	100	;'d'
  1797  007C41  20                 	db	32
  1798  007C42  44                 	db	68	;'D'
  1799  007C43  61                 	db	97	;'a'
  1800  007C44  74                 	db	116	;'t'
  1801  007C45  65                 	db	101	;'e'
  1802  007C46  2F                 	db	47
  1803  007C47  54                 	db	84	;'T'
  1804  007C48  69                 	db	105	;'i'
  1805  007C49  6D                 	db	109	;'m'
  1806  007C4A  65                 	db	101	;'e'
  1807  007C4B  00                 	db	0
  1808  007C4C                     STR_163:
  1809  007C4C  45                 	db	69	;'E'
  1810  007C4D  78                 	db	120	;'x'
  1811  007C4E  69                 	db	105	;'i'
  1812  007C4F  74                 	db	116	;'t'
  1813  007C50  20                 	db	32
  1814  007C51  4D                 	db	77	;'M'
  1815  007C52  65                 	db	101	;'e'
  1816  007C53  6E                 	db	110	;'n'
  1817  007C54  75                 	db	117	;'u'
  1818  007C55  20                 	db	32
  1819  007C56  20                 	db	32
  1820  007C57  20                 	db	32
  1821  007C58  20                 	db	32
  1822  007C59  20                 	db	32
  1823  007C5A  00                 	db	0
  1824  007C5B                     STR_225:
  1825  007C5B  20                 	db	32
  1826  007C5C  20                 	db	32
  1827  007C5D  20                 	db	32
  1828  007C5E  20                 	db	32
  1829  007C5F  45                 	db	69	;'E'
  1830  007C60  6E                 	db	110	;'n'
  1831  007C61  61                 	db	97	;'a'
  1832  007C62  62                 	db	98	;'b'
  1833  007C63  6C                 	db	108	;'l'
  1834  007C64  65                 	db	101	;'e'
  1835  007C65  64                 	db	100	;'d'
  1836  007C66  20                 	db	32
  1837  007C67  20                 	db	32
  1838  007C68  20                 	db	32
  1839  007C69  00                 	db	0
  1840  007C6A                     STR_226:
  1841  007C6A  20                 	db	32
  1842  007C6B  20                 	db	32
  1843  007C6C  20                 	db	32
  1844  007C6D  20                 	db	32
  1845  007C6E  44                 	db	68	;'D'
  1846  007C6F  69                 	db	105	;'i'
  1847  007C70  73                 	db	115	;'s'
  1848  007C71  61                 	db	97	;'a'
  1849  007C72  62                 	db	98	;'b'
  1850  007C73  6C                 	db	108	;'l'
  1851  007C74  65                 	db	101	;'e'
  1852  007C75  64                 	db	100	;'d'
  1853  007C76  20                 	db	32
  1854  007C77  20                 	db	32
  1855  007C78  00                 	db	0
  1856  007C79                     STR_97:
  1857  007C79  44                 	db	68	;'D'
  1858  007C7A  61                 	db	97	;'a'
  1859  007C7B  74                 	db	116	;'t'
  1860  007C7C  61                 	db	97	;'a'
  1861  007C7D  20                 	db	32
  1862  007C7E  52                 	db	82	;'R'
  1863  007C7F  61                 	db	97	;'a'
  1864  007C80  74                 	db	116	;'t'
  1865  007C81  65                 	db	101	;'e'
  1866  007C82  3A                 	db	58	;':'
  1867  007C83  20                 	db	32
  1868  007C84  20                 	db	32
  1869  007C85  20                 	db	32
  1870  007C86  30                 	db	48	;'0'
  1871  007C87  00                 	db	0
  1872  007C88                     STR_98:
  1873  007C88  44                 	db	68	;'D'
  1874  007C89  61                 	db	97	;'a'
  1875  007C8A  74                 	db	116	;'t'
  1876  007C8B  61                 	db	97	;'a'
  1877  007C8C  20                 	db	32
  1878  007C8D  52                 	db	82	;'R'
  1879  007C8E  61                 	db	97	;'a'
  1880  007C8F  74                 	db	116	;'t'
  1881  007C90  65                 	db	101	;'e'
  1882  007C91  3A                 	db	58	;':'
  1883  007C92  20                 	db	32
  1884  007C93  20                 	db	32
  1885  007C94  20                 	db	32
  1886  007C95  31                 	db	49	;'1'
  1887  007C96  00                 	db	0
  1888  007C97                     STR_99:
  1889  007C97  44                 	db	68	;'D'
  1890  007C98  61                 	db	97	;'a'
  1891  007C99  74                 	db	116	;'t'
  1892  007C9A  61                 	db	97	;'a'
  1893  007C9B  20                 	db	32
  1894  007C9C  52                 	db	82	;'R'
  1895  007C9D  61                 	db	97	;'a'
  1896  007C9E  74                 	db	116	;'t'
  1897  007C9F  65                 	db	101	;'e'
  1898  007CA0  3A                 	db	58	;':'
  1899  007CA1  20                 	db	32
  1900  007CA2  20                 	db	32
  1901  007CA3  20                 	db	32
  1902  007CA4  32                 	db	50	;'2'
  1903  007CA5  00                 	db	0
  1904  007CA6                     STR_100:
  1905  007CA6  44                 	db	68	;'D'
  1906  007CA7  61                 	db	97	;'a'
  1907  007CA8  74                 	db	116	;'t'
  1908  007CA9  61                 	db	97	;'a'
  1909  007CAA  20                 	db	32
  1910  007CAB  52                 	db	82	;'R'
  1911  007CAC  61                 	db	97	;'a'
  1912  007CAD  74                 	db	116	;'t'
  1913  007CAE  65                 	db	101	;'e'
  1914  007CAF  3A                 	db	58	;':'
  1915  007CB0  20                 	db	32
  1916  007CB1  20                 	db	32
  1917  007CB2  20                 	db	32
  1918  007CB3  33                 	db	51	;'3'
  1919  007CB4  00                 	db	0
  1920  007CB5                     STR_118:
  1921  007CB5  44                 	db	68	;'D'
  1922  007CB6  61                 	db	97	;'a'
  1923  007CB7  74                 	db	116	;'t'
  1924  007CB8  61                 	db	97	;'a'
  1925  007CB9  20                 	db	32
  1926  007CBA  52                 	db	82	;'R'
  1927  007CBB  61                 	db	97	;'a'
  1928  007CBC  74                 	db	116	;'t'
  1929  007CBD  65                 	db	101	;'e'
  1930  007CBE  3A                 	db	58	;':'
  1931  007CBF  20                 	db	32
  1932  007CC0  20                 	db	32
  1933  007CC1  20                 	db	32
  1934  007CC2  34                 	db	52	;'4'
  1935  007CC3  00                 	db	0
  1936  007CC4                     STR_127:
  1937  007CC4  44                 	db	68	;'D'
  1938  007CC5  61                 	db	97	;'a'
  1939  007CC6  74                 	db	116	;'t'
  1940  007CC7  61                 	db	97	;'a'
  1941  007CC8  20                 	db	32
  1942  007CC9  52                 	db	82	;'R'
  1943  007CCA  61                 	db	97	;'a'
  1944  007CCB  74                 	db	116	;'t'
  1945  007CCC  65                 	db	101	;'e'
  1946  007CCD  3A                 	db	58	;':'
  1947  007CCE  20                 	db	32
  1948  007CCF  20                 	db	32
  1949  007CD0  20                 	db	32
  1950  007CD1  35                 	db	53	;'5'
  1951  007CD2  00                 	db	0
  1952  007CD3                     STR_136:
  1953  007CD3  44                 	db	68	;'D'
  1954  007CD4  61                 	db	97	;'a'
  1955  007CD5  74                 	db	116	;'t'
  1956  007CD6  61                 	db	97	;'a'
  1957  007CD7  20                 	db	32
  1958  007CD8  52                 	db	82	;'R'
  1959  007CD9  61                 	db	97	;'a'
  1960  007CDA  74                 	db	116	;'t'
  1961  007CDB  65                 	db	101	;'e'
  1962  007CDC  3A                 	db	58	;':'
  1963  007CDD  20                 	db	32
  1964  007CDE  20                 	db	32
  1965  007CDF  20                 	db	32
  1966  007CE0  36                 	db	54	;'6'
  1967  007CE1  00                 	db	0
  1968  007CE2                     STR_145:
  1969  007CE2  44                 	db	68	;'D'
  1970  007CE3  61                 	db	97	;'a'
  1971  007CE4  74                 	db	116	;'t'
  1972  007CE5  61                 	db	97	;'a'
  1973  007CE6  20                 	db	32
  1974  007CE7  52                 	db	82	;'R'
  1975  007CE8  61                 	db	97	;'a'
  1976  007CE9  74                 	db	116	;'t'
  1977  007CEA  65                 	db	101	;'e'
  1978  007CEB  3A                 	db	58	;':'
  1979  007CEC  20                 	db	32
  1980  007CED  20                 	db	32
  1981  007CEE  20                 	db	32
  1982  007CEF  37                 	db	55	;'7'
  1983  007CF0  00                 	db	0
  1984  007CF1                     STR_154:
  1985  007CF1  41                 	db	65	;'A'
  1986  007CF2  75                 	db	117	;'u'
  1987  007CF3  74                 	db	116	;'t'
  1988  007CF4  6F                 	db	111	;'o'
  1989  007CF5  20                 	db	32
  1990  007CF6  44                 	db	68	;'D'
  1991  007CF7  61                 	db	97	;'a'
  1992  007CF8  74                 	db	116	;'t'
  1993  007CF9  61                 	db	97	;'a'
  1994  007CFA  20                 	db	32
  1995  007CFB  52                 	db	82	;'R'
  1996  007CFC  61                 	db	97	;'a'
  1997  007CFD  74                 	db	116	;'t'
  1998  007CFE  65                 	db	101	;'e'
  1999  007CFF  00                 	db	0
  2000  007D00                     STR_242:
  2001  007D00  6D                 	db	109	;'m'
  2002  007D01  61                 	db	97	;'a'
  2003  007D02  63                 	db	99	;'c'
  2004  007D03  20                 	db	32
  2005  007D04  73                 	db	115	;'s'
  2006  007D05  65                 	db	101	;'e'
  2007  007D06  74                 	db	116	;'t'
  2008  007D07  20                 	db	32
  2009  007D08  61                 	db	97	;'a'
  2010  007D09  64                 	db	100	;'d'
  2011  007D0A  72                 	db	114	;'r'
  2012  007D0B  20                 	db	32
  2013  007D0C  6F                 	db	111	;'o'
  2014  007D0D  6E                 	db	110	;'n'
  2015  007D0E  00                 	db	0
  2016  007D0F                     STR_3:
  2017  007D0F  20                 	db	32
  2018  007D10  20                 	db	32
  2019  007D11  20                 	db	32
  2020  007D12  52                 	db	82	;'R'
  2021  007D13  43                 	db	67	;'C'
  2022  007D14  33                 	db	51	;'3'
  2023  007D15  20                 	db	32
  2024  007D16  43                 	db	67	;'C'
  2025  007D17  6F                 	db	111	;'o'
  2026  007D18  64                 	db	100	;'d'
  2027  007D19  65                 	db	101	;'e'
  2028  007D1A  20                 	db	32
  2029  007D1B  20                 	db	32
  2030  007D1C  20                 	db	32
  2031  007D1D  00                 	db	0
  2032  007D1E                     STR_2:
  2033  007D1E  20                 	db	32
  2034  007D1F  20                 	db	32
  2035  007D20  20                 	db	32
  2036  007D21  4C                 	db	76	;'L'
  2037  007D22  6F                 	db	111	;'o'
  2038  007D23  52                 	db	82	;'R'
  2039  007D24  61                 	db	97	;'a'
  2040  007D25  20                 	db	32
  2041  007D26  44                 	db	68	;'D'
  2042  007D27  65                 	db	101	;'e'
  2043  007D28  6D                 	db	109	;'m'
  2044  007D29  6F                 	db	111	;'o'
  2045  007D2A  20                 	db	32
  2046  007D2B  20                 	db	32
  2047  007D2C  00                 	db	0
  2048  007D2D                     STR_1:
  2049  007D2D  4D                 	db	77	;'M'
  2050  007D2E  69                 	db	105	;'i'
  2051  007D2F  63                 	db	99	;'c'
  2052  007D30  72                 	db	114	;'r'
  2053  007D31  6F                 	db	111	;'o'
  2054  007D32  63                 	db	99	;'c'
  2055  007D33  68                 	db	104	;'h'
  2056  007D34  69                 	db	105	;'i'
  2057  007D35  70                 	db	112	;'p'
  2058  007D36  20                 	db	32
  2059  007D37  4D                 	db	77	;'M'
  2060  007D38  6F                 	db	111	;'o'
  2061  007D39  74                 	db	116	;'t'
  2062  007D3A  65                 	db	101	;'e'
  2063  007D3B  00                 	db	0
  2064  007D3C                     STR_79:
  2065  007D3C  6D                 	db	109	;'m'
  2066  007D3D  61                 	db	97	;'a'
  2067  007D3E  63                 	db	99	;'c'
  2068  007D3F  20                 	db	32
  2069  007D40  74                 	db	116	;'t'
  2070  007D41  78                 	db	120	;'x'
  2071  007D42  20                 	db	32
  2072  007D43  75                 	db	117	;'u'
  2073  007D44  6E                 	db	110	;'n'
  2074  007D45  63                 	db	99	;'c'
  2075  007D46  6E                 	db	110	;'n'
  2076  007D47  66                 	db	102	;'f'
  2077  007D48  20                 	db	32
  2078  007D49  00                 	db	0
  2079  007D4A                     STR_38:
  2080  007D4A  6D                 	db	109	;'m'
  2081  007D4B  61                 	db	97	;'a'
  2082  007D4C  63                 	db	99	;'c'
  2083  007D4D  20                 	db	32
  2084  007D4E  6A                 	db	106	;'j'
  2085  007D4F  6F                 	db	111	;'o'
  2086  007D50  69                 	db	105	;'i'
  2087  007D51  6E                 	db	110	;'n'
  2088  007D52  20                 	db	32
  2089  007D53  6F                 	db	111	;'o'
  2090  007D54  74                 	db	116	;'t'
  2091  007D55  61                 	db	97	;'a'
  2092  007D56  61                 	db	97	;'a'
  2093  007D57  00                 	db	0
  2094  007D58                     STR_50:
  2095  007D58  69                 	db	105	;'i'
  2096  007D59  6E                 	db	110	;'n'
  2097  007D5A  76                 	db	118	;'v'
  2098  007D5B  61                 	db	97	;'a'
  2099  007D5C  6C                 	db	108	;'l'
  2100  007D5D  69                 	db	105	;'i'
  2101  007D5E  64                 	db	100	;'d'
  2102  007D5F  5F                 	db	95	;'_'
  2103  007D60  70                 	db	112	;'p'
  2104  007D61  61                 	db	97	;'a'
  2105  007D62  72                 	db	114	;'r'
  2106  007D63  61                 	db	97	;'a'
  2107  007D64  6D                 	db	109	;'m'
  2108  007D65  00                 	db	0
  2109  007D66                     STR_33:
  2110  007D66  6B                 	db	107	;'k'
  2111  007D67  65                 	db	101	;'e'
  2112  007D68  79                 	db	121	;'y'
  2113  007D69  73                 	db	115	;'s'
  2114  007D6A  5F                 	db	95	;'_'
  2115  007D6B  6E                 	db	110	;'n'
  2116  007D6C  6F                 	db	111	;'o'
  2117  007D6D  74                 	db	116	;'t'
  2118  007D6E  5F                 	db	95	;'_'
  2119  007D6F  69                 	db	105	;'i'
  2120  007D70  6E                 	db	110	;'n'
  2121  007D71  69                 	db	105	;'i'
  2122  007D72  74                 	db	116	;'t'
  2123  007D73  00                 	db	0
  2124  007D74                     STR_204:
  2125  007D74  54                 	db	84	;'T'
  2126  007D75  68                 	db	104	;'h'
  2127  007D76  72                 	db	114	;'r'
  2128  007D77  6F                 	db	111	;'o'
  2129  007D78  75                 	db	117	;'u'
  2130  007D79  20                 	db	32
  2131  007D7A  50                 	db	80	;'P'
  2132  007D7B  6F                 	db	111	;'o'
  2133  007D7C  72                 	db	114	;'r'
  2134  007D7D  74                 	db	116	;'t'
  2135  007D7E  23                 	db	35
  2136  007D7F  20                 	db	32
  2137  007D80  00                 	db	0
  2138  007D81                     STR_74:
  2139  007D81  4C                 	db	76	;'L'
  2140  007D82  3A                 	db	58	;':'
  2141  007D83  20                 	db	32
  2142  007D84  20                 	db	32
  2143  007D85  20                 	db	32
  2144  007D86  20                 	db	32
  2145  007D87  20                 	db	32
  2146  007D88  20                 	db	32
  2147  007D89  20                 	db	32
  2148  007D8A  54                 	db	84	;'T'
  2149  007D8B  3A                 	db	58	;':'
  2150  007D8C  20                 	db	32
  2151  007D8D  00                 	db	0
  2152  007D8E                     STR_244:
  2153  007D8E  6D                 	db	109	;'m'
  2154  007D8F  61                 	db	97	;'a'
  2155  007D90  63                 	db	99	;'c'
  2156  007D91  20                 	db	32
  2157  007D92  73                 	db	115	;'s'
  2158  007D93  65                 	db	101	;'e'
  2159  007D94  74                 	db	116	;'t'
  2160  007D95  20                 	db	32
  2161  007D96  64                 	db	100	;'d'
  2162  007D97  72                 	db	114	;'r'
  2163  007D98  20                 	db	32
  2164  007D99  30                 	db	48	;'0'
  2165  007D9A  00                 	db	0
  2166  007D9B                     STR_245:
  2167  007D9B  6D                 	db	109	;'m'
  2168  007D9C  61                 	db	97	;'a'
  2169  007D9D  63                 	db	99	;'c'
  2170  007D9E  20                 	db	32
  2171  007D9F  73                 	db	115	;'s'
  2172  007DA0  65                 	db	101	;'e'
  2173  007DA1  74                 	db	116	;'t'
  2174  007DA2  20                 	db	32
  2175  007DA3  64                 	db	100	;'d'
  2176  007DA4  72                 	db	114	;'r'
  2177  007DA5  20                 	db	32
  2178  007DA6  31                 	db	49	;'1'
  2179  007DA7  00                 	db	0
  2180  007DA8                     STR_246:
  2181  007DA8  6D                 	db	109	;'m'
  2182  007DA9  61                 	db	97	;'a'
  2183  007DAA  63                 	db	99	;'c'
  2184  007DAB  20                 	db	32
  2185  007DAC  73                 	db	115	;'s'
  2186  007DAD  65                 	db	101	;'e'
  2187  007DAE  74                 	db	116	;'t'
  2188  007DAF  20                 	db	32
  2189  007DB0  64                 	db	100	;'d'
  2190  007DB1  72                 	db	114	;'r'
  2191  007DB2  20                 	db	32
  2192  007DB3  32                 	db	50	;'2'
  2193  007DB4  00                 	db	0
  2194  007DB5                     STR_247:
  2195  007DB5  6D                 	db	109	;'m'
  2196  007DB6  61                 	db	97	;'a'
  2197  007DB7  63                 	db	99	;'c'
  2198  007DB8  20                 	db	32
  2199  007DB9  73                 	db	115	;'s'
  2200  007DBA  65                 	db	101	;'e'
  2201  007DBB  74                 	db	116	;'t'
  2202  007DBC  20                 	db	32
  2203  007DBD  64                 	db	100	;'d'
  2204  007DBE  72                 	db	114	;'r'
  2205  007DBF  20                 	db	32
  2206  007DC0  33                 	db	51	;'3'
  2207  007DC1  00                 	db	0
  2208  007DC2                     STR_248:
  2209  007DC2  6D                 	db	109	;'m'
  2210  007DC3  61                 	db	97	;'a'
  2211  007DC4  63                 	db	99	;'c'
  2212  007DC5  20                 	db	32
  2213  007DC6  73                 	db	115	;'s'
  2214  007DC7  65                 	db	101	;'e'
  2215  007DC8  74                 	db	116	;'t'
  2216  007DC9  20                 	db	32
  2217  007DCA  64                 	db	100	;'d'
  2218  007DCB  72                 	db	114	;'r'
  2219  007DCC  20                 	db	32
  2220  007DCD  34                 	db	52	;'4'
  2221  007DCE  00                 	db	0
  2222  007DCF                     STR_249:
  2223  007DCF  6D                 	db	109	;'m'
  2224  007DD0  61                 	db	97	;'a'
  2225  007DD1  63                 	db	99	;'c'
  2226  007DD2  20                 	db	32
  2227  007DD3  73                 	db	115	;'s'
  2228  007DD4  65                 	db	101	;'e'
  2229  007DD5  74                 	db	116	;'t'
  2230  007DD6  20                 	db	32
  2231  007DD7  64                 	db	100	;'d'
  2232  007DD8  72                 	db	114	;'r'
  2233  007DD9  20                 	db	32
  2234  007DDA  35                 	db	53	;'5'
  2235  007DDB  00                 	db	0
  2236  007DDC                     STR_250:
  2237  007DDC  6D                 	db	109	;'m'
  2238  007DDD  61                 	db	97	;'a'
  2239  007DDE  63                 	db	99	;'c'
  2240  007DDF  20                 	db	32
  2241  007DE0  73                 	db	115	;'s'
  2242  007DE1  65                 	db	101	;'e'
  2243  007DE2  74                 	db	116	;'t'
  2244  007DE3  20                 	db	32
  2245  007DE4  64                 	db	100	;'d'
  2246  007DE5  72                 	db	114	;'r'
  2247  007DE6  20                 	db	32
  2248  007DE7  36                 	db	54	;'6'
  2249  007DE8  00                 	db	0
  2250  007DE9                     STR_251:
  2251  007DE9  6D                 	db	109	;'m'
  2252  007DEA  61                 	db	97	;'a'
  2253  007DEB  63                 	db	99	;'c'
  2254  007DEC  20                 	db	32
  2255  007DED  73                 	db	115	;'s'
  2256  007DEE  65                 	db	101	;'e'
  2257  007DEF  74                 	db	116	;'t'
  2258  007DF0  20                 	db	32
  2259  007DF1  64                 	db	100	;'d'
  2260  007DF2  72                 	db	114	;'r'
  2261  007DF3  20                 	db	32
  2262  007DF4  37                 	db	55	;'7'
  2263  007DF5  00                 	db	0
  2264  007DF6                     STR_31:
  2265  007DF6  6D                 	db	109	;'m'
  2266  007DF7  61                 	db	97	;'a'
  2267  007DF8  63                 	db	99	;'c'
  2268  007DF9  20                 	db	32
  2269  007DFA  6A                 	db	106	;'j'
  2270  007DFB  6F                 	db	111	;'o'
  2271  007DFC  69                 	db	105	;'i'
  2272  007DFD  6E                 	db	110	;'n'
  2273  007DFE  20                 	db	32
  2274  007DFF  61                 	db	97	;'a'
  2275  007E00  62                 	db	98	;'b'
  2276  007E01  70                 	db	112	;'p'
  2277  007E02  00                 	db	0
  2278  007E03                     STR_10:
  2279  007E03  42                 	db	66	;'B'
  2280  007E04  75                 	db	117	;'u'
  2281  007E05  74                 	db	116	;'t'
  2282  007E06  74                 	db	116	;'t'
  2283  007E07  6F                 	db	111	;'o'
  2284  007E08  6E                 	db	110	;'n'
  2285  007E09  20                 	db	32
  2286  007E0A  54                 	db	84	;'T'
  2287  007E0B  65                 	db	101	;'e'
  2288  007E0C  73                 	db	115	;'s'
  2289  007E0D  74                 	db	116	;'t'
  2290  007E0E  3A                 	db	58	;':'
  2291  007E0F  00                 	db	0
  2292  007E10                     STR_13:
  2293  007E10  42                 	db	66	;'B'
  2294  007E11  75                 	db	117	;'u'
  2295  007E12  74                 	db	116	;'t'
  2296  007E13  74                 	db	116	;'t'
  2297  007E14  6F                 	db	111	;'o'
  2298  007E15  6E                 	db	110	;'n'
  2299  007E16  31                 	db	49	;'1'
  2300  007E17  20                 	db	32
  2301  007E18  50                 	db	80	;'P'
  2302  007E19  41                 	db	65	;'A'
  2303  007E1A  53                 	db	83	;'S'
  2304  007E1B  53                 	db	83	;'S'
  2305  007E1C  00                 	db	0
  2306  007E1D                     STR_14:
  2307  007E1D  42                 	db	66	;'B'
  2308  007E1E  75                 	db	117	;'u'
  2309  007E1F  74                 	db	116	;'t'
  2310  007E20  74                 	db	116	;'t'
  2311  007E21  6F                 	db	111	;'o'
  2312  007E22  6E                 	db	110	;'n'
  2313  007E23  32                 	db	50	;'2'
  2314  007E24  20                 	db	32
  2315  007E25  50                 	db	80	;'P'
  2316  007E26  41                 	db	65	;'A'
  2317  007E27  53                 	db	83	;'S'
  2318  007E28  53                 	db	83	;'S'
  2319  007E29  00                 	db	0
  2320  007E2A                     STR_12:
  2321  007E2A  50                 	db	80	;'P'
  2322  007E2B  72                 	db	114	;'r'
  2323  007E2C  65                 	db	101	;'e'
  2324  007E2D  73                 	db	115	;'s'
  2325  007E2E  73                 	db	115	;'s'
  2326  007E2F  20                 	db	32
  2327  007E30  42                 	db	66	;'B'
  2328  007E31  75                 	db	117	;'u'
  2329  007E32  74                 	db	116	;'t'
  2330  007E33  74                 	db	116	;'t'
  2331  007E34  6F                 	db	111	;'o'
  2332  007E35  6E                 	db	110	;'n'
  2333  007E36  00                 	db	0
  2334  007E37                     STR_260:
  2335  007E37  55                 	db	85	;'U'
  2336  007E38  53                 	db	83	;'S'
  2337  007E39  42                 	db	66	;'B'
  2338  007E3A  20                 	db	32
  2339  007E3B  48                 	db	72	;'H'
  2340  007E3C  61                 	db	97	;'a'
  2341  007E3D  6E                 	db	110	;'n'
  2342  007E3E  64                 	db	100	;'d'
  2343  007E3F  6C                 	db	108	;'l'
  2344  007E40  65                 	db	101	;'e'
  2345  007E41  72                 	db	114	;'r'
  2346  007E42  00                 	db	0
  2347  007E43                     STR_73:
  2348  007E43  4F                 	db	79	;'O'
  2349  007E44  6E                 	db	110	;'n'
  2350  007E45  20                 	db	32
  2351  007E46  50                 	db	80	;'P'
  2352  007E47  6F                 	db	111	;'o'
  2353  007E48  72                 	db	114	;'r'
  2354  007E49  74                 	db	116	;'t'
  2355  007E4A  20                 	db	32
  2356  007E4B  23                 	db	35
  2357  007E4C  3A                 	db	58	;':'
  2358  007E4D  20                 	db	32
  2359  007E4E  00                 	db	0
  2360  007E4F                     STR_210:
  2361  007E4F  54                 	db	84	;'T'
  2362  007E50  78                 	db	120	;'x'
  2363  007E51  20                 	db	32
  2364  007E52  50                 	db	80	;'P'
  2365  007E53  6F                 	db	111	;'o'
  2366  007E54  72                 	db	114	;'r'
  2367  007E55  74                 	db	116	;'t'
  2368  007E56  20                 	db	32
  2369  007E57  23                 	db	35
  2370  007E58  3A                 	db	58	;':'
  2371  007E59  20                 	db	32
  2372  007E5A  00                 	db	0
  2373  007E5B                     STR_208:
  2374  007E5B  53                 	db	83	;'S'
  2375  007E5C  65                 	db	101	;'e'
  2376  007E5D  6E                 	db	110	;'n'
  2377  007E5E  74                 	db	116	;'t'
  2378  007E5F  20                 	db	32
  2379  007E60  44                 	db	68	;'D'
  2380  007E61  61                 	db	97	;'a'
  2381  007E62  74                 	db	116	;'t'
  2382  007E63  61                 	db	97	;'a'
  2383  007E64  3A                 	db	58	;':'
  2384  007E65  20                 	db	32
  2385  007E66  00                 	db	0
  2386  007E67                     STR_77:
  2387  007E67  6D                 	db	109	;'m'
  2388  007E68  61                 	db	97	;'a'
  2389  007E69  63                 	db	99	;'c'
  2390  007E6A  20                 	db	32
  2391  007E6B  74                 	db	116	;'t'
  2392  007E6C  78                 	db	120	;'x'
  2393  007E6D  20                 	db	32
  2394  007E6E  63                 	db	99	;'c'
  2395  007E6F  6E                 	db	110	;'n'
  2396  007E70  66                 	db	102	;'f'
  2397  007E71  20                 	db	32
  2398  007E72  00                 	db	0
  2399  007E73                     STR_36:
  2400  007E73  54                 	db	84	;'T'
  2401  007E74  72                 	db	114	;'r'
  2402  007E75  79                 	db	121	;'y'
  2403  007E76  69                 	db	105	;'i'
  2404  007E77  6E                 	db	110	;'n'
  2405  007E78  67                 	db	103	;'g'
  2406  007E79  20                 	db	32
  2407  007E7A  4F                 	db	79	;'O'
  2408  007E7B  54                 	db	84	;'T'
  2409  007E7C  41                 	db	65	;'A'
  2410  007E7D  41                 	db	65	;'A'
  2411  007E7E  00                 	db	0
  2412  007E7F                     STR_63:
  2413  007E7F  6D                 	db	109	;'m'
  2414  007E80  61                 	db	97	;'a'
  2415  007E81  63                 	db	99	;'c'
  2416  007E82  20                 	db	32
  2417  007E83  67                 	db	103	;'g'
  2418  007E84  65                 	db	101	;'e'
  2419  007E85  74                 	db	116	;'t'
  2420  007E86  20                 	db	32
  2421  007E87  61                 	db	97	;'a'
  2422  007E88  64                 	db	100	;'d'
  2423  007E89  72                 	db	114	;'r'
  2424  007E8A  00                 	db	0
  2425  007E8B                     STR_29:
  2426  007E8B  73                 	db	115	;'s'
  2427  007E8C  79                 	db	121	;'y'
  2428  007E8D  73                 	db	115	;'s'
  2429  007E8E  20                 	db	32
  2430  007E8F  67                 	db	103	;'g'
  2431  007E90  65                 	db	101	;'e'
  2432  007E91  74                 	db	116	;'t'
  2433  007E92  20                 	db	32
  2434  007E93  76                 	db	118	;'v'
  2435  007E94  65                 	db	101	;'e'
  2436  007E95  72                 	db	114	;'r'
  2437  007E96  00                 	db	0
  2438  007E97                     STR_8:
  2439  007E97  4E                 	db	78	;'N'
  2440  007E98  6F                 	db	111	;'o'
  2441  007E99  76                 	db	118	;'v'
  2442  007E9A  20                 	db	32
  2443  007E9B  31                 	db	49	;'1'
  2444  007E9C  33                 	db	51	;'3'
  2445  007E9D  20                 	db	32
  2446  007E9E  32                 	db	50	;'2'
  2447  007E9F  30                 	db	48	;'0'
  2448  007EA0  31                 	db	49	;'1'
  2449  007EA1  35                 	db	53	;'5'
  2450  007EA2  00                 	db	0
  2451  007EA3                     STR_11:
  2452  007EA3  42                 	db	66	;'B'
  2453  007EA4  75                 	db	117	;'u'
  2454  007EA5  74                 	db	116	;'t'
  2455  007EA6  74                 	db	116	;'t'
  2456  007EA7  6F                 	db	111	;'o'
  2457  007EA8  6E                 	db	110	;'n'
  2458  007EA9  20                 	db	32
  2459  007EAA  46                 	db	70	;'F'
  2460  007EAB  41                 	db	65	;'A'
  2461  007EAC  49                 	db	73	;'I'
  2462  007EAD  4C                 	db	76	;'L'
  2463  007EAE  00                 	db	0
  2464  007EAF                     STR_54:
  2465  007EAF  4F                 	db	79	;'O'
  2466  007EB0  54                 	db	84	;'T'
  2467  007EB1  41                 	db	65	;'A'
  2468  007EB2  41                 	db	65	;'A'
  2469  007EB3  20                 	db	32
  2470  007EB4  4A                 	db	74	;'J'
  2471  007EB5  6F                 	db	111	;'o'
  2472  007EB6  69                 	db	105	;'i'
  2473  007EB7  6E                 	db	110	;'n'
  2474  007EB8  20                 	db	32
  2475  007EB9  00                 	db	0
  2476  007EBA                     STR_52:
  2477  007EBA  6E                 	db	110	;'n'
  2478  007EBB  6F                 	db	111	;'o'
  2479  007EBC  5F                 	db	95	;'_'
  2480  007EBD  66                 	db	102	;'f'
  2481  007EBE  72                 	db	114	;'r'
  2482  007EBF  65                 	db	101	;'e'
  2483  007EC0  65                 	db	101	;'e'
  2484  007EC1  5F                 	db	95	;'_'
  2485  007EC2  63                 	db	99	;'c'
  2486  007EC3  68                 	db	104	;'h'
  2487  007EC4  00                 	db	0
  2488  007EC5                     STR_42:
  2489  007EC5  53                 	db	83	;'S'
  2490  007EC6  75                 	db	117	;'u'
  2491  007EC7  63                 	db	99	;'c'
  2492  007EC8  63                 	db	99	;'c'
  2493  007EC9  65                 	db	101	;'e'
  2494  007ECA  73                 	db	115	;'s'
  2495  007ECB  73                 	db	115	;'s'
  2496  007ECC  66                 	db	102	;'f'
  2497  007ECD  75                 	db	117	;'u'
  2498  007ECE  6C                 	db	108	;'l'
  2499  007ECF  00                 	db	0
  2500  007ED0                     STR_65:
  2501  007ED0  6D                 	db	109	;'m'
  2502  007ED1  61                 	db	97	;'a'
  2503  007ED2  63                 	db	99	;'c'
  2504  007ED3  20                 	db	32
  2505  007ED4  67                 	db	103	;'g'
  2506  007ED5  65                 	db	101	;'e'
  2507  007ED6  74                 	db	116	;'t'
  2508  007ED7  20                 	db	32
  2509  007ED8  64                 	db	100	;'d'
  2510  007ED9  72                 	db	114	;'r'
  2511  007EDA  00                 	db	0
  2512  007EDB                     STR_48:
  2513  007EDB  56                 	db	86	;'V'
  2514  007EDC  61                 	db	97	;'a'
  2515  007EDD  6C                 	db	108	;'l'
  2516  007EDE  69                 	db	105	;'i'
  2517  007EDF  64                 	db	100	;'d'
  2518  007EE0  20                 	db	32
  2519  007EE1  4B                 	db	75	;'K'
  2520  007EE2  65                 	db	101	;'e'
  2521  007EE3  79                 	db	121	;'y'
  2522  007EE4  73                 	db	115	;'s'
  2523  007EE5  00                 	db	0
  2524  007EE6                     STR_15:
  2525  007EE6  43                 	db	67	;'C'
  2526  007EE7  6F                 	db	111	;'o'
  2527  007EE8  6D                 	db	109	;'m'
  2528  007EE9  6D                 	db	109	;'m'
  2529  007EEA  20                 	db	32
  2530  007EEB  54                 	db	84	;'T'
  2531  007EEC  65                 	db	101	;'e'
  2532  007EED  73                 	db	115	;'s'
  2533  007EEE  74                 	db	116	;'t'
  2534  007EEF  3A                 	db	58	;':'
  2535  007EF0  00                 	db	0
  2536  007EF1                     STR_229:
  2537  007EF1  52                 	db	82	;'R'
  2538  007EF2  78                 	db	120	;'x'
  2539  007EF3  20                 	db	32
  2540  007EF4  50                 	db	80	;'P'
  2541  007EF5  6F                 	db	111	;'o'
  2542  007EF6  72                 	db	114	;'r'
  2543  007EF7  74                 	db	116	;'t'
  2544  007EF8  23                 	db	35
  2545  007EF9  20                 	db	32
  2546  007EFA  00                 	db	0
  2547  007EFB                     STR_41:
  2548  007EFB  41                 	db	65	;'A'
  2549  007EFC  42                 	db	66	;'B'
  2550  007EFD  50                 	db	80	;'P'
  2551  007EFE  20                 	db	32
  2552  007EFF  4A                 	db	74	;'J'
  2553  007F00  6F                 	db	111	;'o'
  2554  007F01  69                 	db	105	;'i'
  2555  007F02  6E                 	db	110	;'n'
  2556  007F03  20                 	db	32
  2557  007F04  00                 	db	0
  2558  007F05                     STR_23:
  2559  007F05  4D                 	db	77	;'M'
  2560  007F06  4F                 	db	79	;'O'
  2561  007F07  54                 	db	84	;'T'
  2562  007F08  45                 	db	69	;'E'
  2563  007F09  20                 	db	32
  2564  007F0A  4D                 	db	77	;'M'
  2565  007F0B  6F                 	db	111	;'o'
  2566  007F0C  64                 	db	100	;'d'
  2567  007F0D  65                 	db	101	;'e'
  2568  007F0E  00                 	db	0
  2569  007F0F                     STR_57:
  2570  007F0F  4F                 	db	79	;'O'
  2571  007F10  54                 	db	84	;'T'
  2572  007F11  41                 	db	65	;'A'
  2573  007F12  41                 	db	65	;'A'
  2574  007F13  20                 	db	32
  2575  007F14  4A                 	db	74	;'J'
  2576  007F15  6F                 	db	111	;'o'
  2577  007F16  69                 	db	105	;'i'
  2578  007F17  6E                 	db	110	;'n'
  2579  007F18  00                 	db	0
  2580  007F19                     STR_45:
  2581  007F19  6D                 	db	109	;'m'
  2582  007F1A  61                 	db	97	;'a'
  2583  007F1B  63                 	db	99	;'c'
  2584  007F1C  20                 	db	32
  2585  007F1D  72                 	db	114	;'r'
  2586  007F1E  65                 	db	101	;'e'
  2587  007F1F  73                 	db	115	;'s'
  2588  007F20  65                 	db	101	;'e'
  2589  007F21  74                 	db	116	;'t'
  2590  007F22  00                 	db	0
  2591  007F23                     STR_16:
  2592  007F23  4C                 	db	76	;'L'
  2593  007F24  45                 	db	69	;'E'
  2594  007F25  44                 	db	68	;'D'
  2595  007F26  20                 	db	32
  2596  007F27  54                 	db	84	;'T'
  2597  007F28  65                 	db	101	;'e'
  2598  007F29  73                 	db	115	;'s'
  2599  007F2A  74                 	db	116	;'t'
  2600  007F2B  3A                 	db	58	;':'
  2601  007F2C  00                 	db	0
  2602  007F2D                     STR_258:
  2603  007F2D  43                 	db	67	;'C'
  2604  007F2E  44                 	db	68	;'D'
  2605  007F2F  43                 	db	67	;'C'
  2606  007F30  20                 	db	32
  2607  007F31  4D                 	db	77	;'M'
  2608  007F32  6F                 	db	111	;'o'
  2609  007F33  64                 	db	100	;'d'
  2610  007F34  65                 	db	101	;'e'
  2611  007F35  00                 	db	0
  2612  007F36                     STR_49:
  2613  007F36  52                 	db	82	;'R'
  2614  007F37  65                 	db	101	;'e'
  2615  007F38  71                 	db	113	;'q'
  2616  007F39  75                 	db	117	;'u'
  2617  007F3A  69                 	db	105	;'i'
  2618  007F3B  72                 	db	114	;'r'
  2619  007F3C  65                 	db	101	;'e'
  2620  007F3D  64                 	db	100	;'d'
  2621  007F3E  00                 	db	0
  2622  007F3F                     STR_40:
  2623  007F3F  61                 	db	97	;'a'
  2624  007F40  63                 	db	99	;'c'
  2625  007F41  63                 	db	99	;'c'
  2626  007F42  65                 	db	101	;'e'
  2627  007F43  70                 	db	112	;'p'
  2628  007F44  74                 	db	116	;'t'
  2629  007F45  65                 	db	101	;'e'
  2630  007F46  64                 	db	100	;'d'
  2631  007F47  00                 	db	0
  2632  007F48                     STR_252:
  2633  007F48  6D                 	db	109	;'m'
  2634  007F49  61                 	db	97	;'a'
  2635  007F4A  63                 	db	99	;'c'
  2636  007F4B  20                 	db	32
  2637  007F4C  73                 	db	115	;'s'
  2638  007F4D  61                 	db	97	;'a'
  2639  007F4E  76                 	db	118	;'v'
  2640  007F4F  65                 	db	101	;'e'
  2641  007F50  00                 	db	0
  2642  007F51                     STR_24:
  2643  007F51  53                 	db	83	;'S'
  2644  007F52  74                 	db	116	;'t'
  2645  007F53  61                 	db	97	;'a'
  2646  007F54  72                 	db	114	;'r'
  2647  007F55  74                 	db	116	;'t'
  2648  007F56  69                 	db	105	;'i'
  2649  007F57  6E                 	db	110	;'n'
  2650  007F58  67                 	db	103	;'g'
  2651  007F59  00                 	db	0
  2652  007F5A                     STR_34:
  2653  007F5A  41                 	db	65	;'A'
  2654  007F5B  42                 	db	66	;'B'
  2655  007F5C  50                 	db	80	;'P'
  2656  007F5D  20                 	db	32
  2657  007F5E  4A                 	db	74	;'J'
  2658  007F5F  6F                 	db	111	;'o'
  2659  007F60  69                 	db	105	;'i'
  2660  007F61  6E                 	db	110	;'n'
  2661  007F62  00                 	db	0
  2662  007F63                     STR_4:
  2663  007F63  4D                 	db	77	;'M'
  2664  007F64  6F                 	db	111	;'o'
  2665  007F65  54                 	db	84	;'T'
  2666  007F66  65                 	db	101	;'e'
  2667  007F67  20                 	db	32
  2668  007F68  76                 	db	118	;'v'
  2669  007F69  20                 	db	32
  2670  007F6A  2E                 	db	46
  2671  007F6B  00                 	db	0
  2672  007F6C                     STR_9:
  2673  007F6C  31                 	db	49	;'1'
  2674  007F6D  32                 	db	50	;'2'
  2675  007F6E  3A                 	db	58	;':'
  2676  007F6F  33                 	db	51	;'3'
  2677  007F70  33                 	db	51	;'3'
  2678  007F71  3A                 	db	58	;':'
  2679  007F72  32                 	db	50	;'2'
  2680  007F73  36                 	db	54	;'6'
  2681  007F74  00                 	db	0
  2682  007F75  52                 	db	82	;'R'
  2683  007F76  46                 	db	70	;'F'
  2684  007F77  20                 	db	32
  2685  007F78  54                 	db	84	;'T'
  2686  007F79  65                 	db	101	;'e'
  2687  007F7A  73                 	db	115	;'s'
  2688  007F7B  74                 	db	116	;'t'
  2689  007F7C  3A                 	db	58	;':'
  2690  007F7D  00                 	db	0
  2691  007F7E                     STR_17:
  2692  007F7E  41                 	db	65	;'A'
  2693  007F7F  44                 	db	68	;'D'
  2694  007F80  43                 	db	67	;'C'
  2695  007F81  20                 	db	32
  2696  007F82  54                 	db	84	;'T'
  2697  007F83  65                 	db	101	;'e'
  2698  007F84  73                 	db	115	;'s'
  2699  007F85  74                 	db	116	;'t'
  2700  007F86  00                 	db	0
  2701  007F87                     STR_259:
  2702  007F87  43                 	db	67	;'C'
  2703  007F88  6F                 	db	111	;'o'
  2704  007F89  6D                 	db	109	;'m'
  2705  007F8A  6D                 	db	109	;'m'
  2706  007F8B  61                 	db	97	;'a'
  2707  007F8C  6E                 	db	110	;'n'
  2708  007F8D  64                 	db	100	;'d'
  2709  007F8E  00                 	db	0
  2710  007F8F                     STR_61:
  2711  007F8F  4E                 	db	78	;'N'
  2712  007F90  4F                 	db	79	;'O'
  2713  007F91  20                 	db	32
  2714  007F92  46                 	db	70	;'F'
  2715  007F93  52                 	db	82	;'R'
  2716  007F94  45                 	db	69	;'E'
  2717  007F95  45                 	db	69	;'E'
  2718  007F96  00                 	db	0
  2719  007F97                     STR_62:
  2720  007F97  43                 	db	67	;'C'
  2721  007F98  48                 	db	72	;'H'
  2722  007F99  41                 	db	65	;'A'
  2723  007F9A  4E                 	db	78	;'N'
  2724  007F9B  4E                 	db	78	;'N'
  2725  007F9C  45                 	db	69	;'E'
  2726  007F9D  4C                 	db	76	;'L'
  2727  007F9E  00                 	db	0
  2728  007F9F                     STR_35:
  2729  007F9F  4E                 	db	78	;'N'
  2730  007FA0  6F                 	db	111	;'o'
  2731  007FA1  20                 	db	32
  2732  007FA2  4B                 	db	75	;'K'
  2733  007FA3  65                 	db	101	;'e'
  2734  007FA4  79                 	db	121	;'y'
  2735  007FA5  73                 	db	115	;'s'
  2736  007FA6  00                 	db	0
  2737  007FA7                     STR_18:
  2738  007FA7  54                 	db	84	;'T'
  2739  007FA8  65                 	db	101	;'e'
  2740  007FA9  6D                 	db	109	;'m'
  2741  007FAA  70                 	db	112	;'p'
  2742  007FAB  20                 	db	32
  2743  007FAC  20                 	db	32
  2744  007FAD  3D                 	db	61	;'='
  2745  007FAE  00                 	db	0
  2746  007FAF                     STR_19:
  2747  007FAF  4C                 	db	76	;'L'
  2748  007FB0  69                 	db	105	;'i'
  2749  007FB1  67                 	db	103	;'g'
  2750  007FB2  68                 	db	104	;'h'
  2751  007FB3  74                 	db	116	;'t'
  2752  007FB4  20                 	db	32
  2753  007FB5  3D                 	db	61	;'='
  2754  007FB6  00                 	db	0
  2755  007FB7                     STR_88:
  2756  007FB7  54                 	db	84	;'T'
  2757  007FB8  65                 	db	101	;'e'
  2758  007FB9  6D                 	db	109	;'m'
  2759  007FBA  70                 	db	112	;'p'
  2760  007FBB  20                 	db	32
  2761  007FBC  3A                 	db	58	;':'
  2762  007FBD  00                 	db	0
  2763  007FBE                     STR_87:
  2764  007FBE  4C                 	db	76	;'L'
  2765  007FBF  69                 	db	105	;'i'
  2766  007FC0  67                 	db	103	;'g'
  2767  007FC1  68                 	db	104	;'h'
  2768  007FC2  74                 	db	116	;'t'
  2769  007FC3  3A                 	db	58	;':'
  2770  007FC4  00                 	db	0
  2771  007FC5                     STR_58:
  2772  007FC5  44                 	db	68	;'D'
  2773  007FC6  65                 	db	101	;'e'
  2774  007FC7  6E                 	db	110	;'n'
  2775  007FC8  69                 	db	105	;'i'
  2776  007FC9  65                 	db	101	;'e'
  2777  007FCA  64                 	db	100	;'d'
  2778  007FCB  00                 	db	0
  2779  007FCC                     STR_43:
  2780  007FCC  64                 	db	100	;'d'
  2781  007FCD  65                 	db	101	;'e'
  2782  007FCE  6E                 	db	110	;'n'
  2783  007FCF  69                 	db	105	;'i'
  2784  007FD0  65                 	db	101	;'e'
  2785  007FD1  64                 	db	100	;'d'
  2786  007FD2  00                 	db	0
  2787  007FD3                     STR_219:
  2788  007FD3  6E                 	db	110	;'n'
  2789  007FD4  6F                 	db	111	;'o'
  2790  007FD5  5F                 	db	95	;'_'
  2791  007FD6  66                 	db	102	;'f'
  2792  007FD7  72                 	db	114	;'r'
  2793  007FD8  65                 	db	101	;'e'
  2794  007FD9  00                 	db	0
  2795  007FDA                     STR_217:
  2796  007FDA  6D                 	db	109	;'m'
  2797  007FDB  61                 	db	97	;'a'
  2798  007FDC  63                 	db	99	;'c'
  2799  007FDD  5F                 	db	95	;'_'
  2800  007FDE  65                 	db	101	;'e'
  2801  007FDF  72                 	db	114	;'r'
  2802  007FE0  00                 	db	0
  2803  007FE1                     STR_212:
  2804  007FE1  6D                 	db	109	;'m'
  2805  007FE2  61                 	db	97	;'a'
  2806  007FE3  63                 	db	99	;'c'
  2807  007FE4  5F                 	db	95	;'_'
  2808  007FE5  72                 	db	114	;'r'
  2809  007FE6  78                 	db	120	;'x'
  2810  007FE7  00                 	db	0
  2811  007FE8                     STR_215:
  2812  007FE8  6D                 	db	109	;'m'
  2813  007FE9  61                 	db	97	;'a'
  2814  007FEA  63                 	db	99	;'c'
  2815  007FEB  5F                 	db	95	;'_'
  2816  007FEC  74                 	db	116	;'t'
  2817  007FED  78                 	db	120	;'x'
  2818  007FEE  00                 	db	0
  2819  007FEF                     STR_30:
  2820  007FEF  52                 	db	82	;'R'
  2821  007FF0  4E                 	db	78	;'N'
  2822  007FF1  00                 	db	0
  2823  007FF2                     STR_32:
  2824  007FF2  6F                 	db	111	;'o'
  2825  007FF3  6B                 	db	107	;'k'
  2826  007FF4  00                 	db	0
  2827  007FF5                     STR_101:
  2828  007FF5  2A                 	db	42
  2829  007FF6  00                 	db	0
  2830  007FF7                     STR_96:
  2831  007FF7  3C                 	db	60	;'<'
  2832  007FF8  00                 	db	0
  2833  007FF9                     STR_76:
  2834  007FF9  43                 	db	67	;'C'
  2835  007FFA  00                 	db	0
  2836  007FFB                     STR_78:
  2837  007FFB  55                 	db	85	;'U'
  2838  007FFC  00                 	db	0
  2839  007FFD                     STR_21:
  2840  007FFD  7A                 	db	122	;'z'
  2841  007FFE  00                 	db	0
  2842  007FFF                     __end_of__stringdata:
  2843                           	opt stack 0
  2844                           
  2845                           ; #config settings
  2846  007FFF  00                 	db	0	; dummy byte at the end
  2847  0000                     
  2848                           	psect	cinit
  2849  003E2A                     __pcinit:
  2850                           	opt stack 0
  2851  003E2A                     start_initialization:
  2852                           	opt stack 0
  2853  003E2A                     __initialization:
  2854                           	opt stack 0
  2855                           
  2856                           ; Clear objects allocated to BANK2 (64 bytes)
  2857  003E2A  EE02  F000         	lfsr	0,__pbssBANK2
  2858  003E2E  0E40               	movlw	64
  2859  003E30                     clear_0:
  2860  003E30  6AEE               	clrf	postinc0,c
  2861  003E32  06E8               	decf	wreg,f,c
  2862  003E34  E1FD               	bnz	clear_0
  2863                           
  2864                           ; Clear objects allocated to BANK1 (216 bytes)
  2865  003E36  EE01  F000         	lfsr	0,__pbssBANK1
  2866  003E3A  0ED8               	movlw	216
  2867  003E3C                     clear_1:
  2868  003E3C  6AEE               	clrf	postinc0,c
  2869  003E3E  06E8               	decf	wreg,f,c
  2870  003E40  E1FD               	bnz	clear_1
  2871                           
  2872                           ; Clear objects allocated to BANK0 (102 bytes)
  2873  003E42  EE00  F060         	lfsr	0,__pbssBANK0
  2874  003E46  0E66               	movlw	102
  2875  003E48                     clear_2:
  2876  003E48  6AEE               	clrf	postinc0,c
  2877  003E4A  06E8               	decf	wreg,f,c
  2878  003E4C  E1FD               	bnz	clear_2
  2879                           
  2880                           ; Clear objects allocated to COMRAM (47 bytes)
  2881  003E4E  EE00  F001         	lfsr	0,__pbssCOMRAM
  2882  003E52  0E2F               	movlw	47
  2883  003E54                     clear_3:
  2884  003E54  6AEE               	clrf	postinc0,c
  2885  003E56  06E8               	decf	wreg,f,c
  2886  003E58  E1FD               	bnz	clear_3
  2887                           
  2888                           ; Initialize objects allocated to BANK0 (5 bytes)
  2889                           ; load TBLPTR registers with __pidataBANK0
  2890  003E5A  0ECF               	movlw	low __pidataBANK0
  2891  003E5C  6EF6               	movwf	tblptrl,c
  2892  003E5E  0E33               	movlw	high __pidataBANK0
  2893  003E60  6EF7               	movwf	tblptrh,c
  2894  003E62  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2895  003E64  6EF8               	movwf	tblptru,c
  2896  003E66  EE00  F0F8         	lfsr	0,__pdataBANK0
  2897  003E6A  EE10 F005          	lfsr	1,5
  2898  003E6E                     copy_data0:
  2899  003E6E  0009               	tblrd		*+
  2900  003E70  CFF5 FFEE          	movff	tablat,postinc0
  2901  003E74  50E5               	movf	postdec1,w,c
  2902  003E76  50E1               	movf	fsr1l,w,c
  2903  003E78  E1FA               	bnz	copy_data0
  2904  003E7A                     end_of_initialization:
  2905                           	opt stack 0
  2906  003E7A                     __end_of__initialization:
  2907                           	opt stack 0
  2908  003E7A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2909  003E7C  6EF8               	movwf	tblptru,c
  2910  003E7E  0100               	movlb	0
  2911  003E80  EF9B  F027         	goto	_main	;jump to C main() function
  2912                           tblptru	equ	0xFF8
  2913                           tblptrh	equ	0xFF7
  2914                           tblptrl	equ	0xFF6
  2915                           tablat	equ	0xFF5
  2916                           postinc0	equ	0xFEE
  2917                           wreg	equ	0xFE8
  2918                           postdec1	equ	0xFE5
  2919                           fsr1l	equ	0xFE1
  2920                           
  2921                           	psect	bssCOMRAM
  2922  000001                     __pbssCOMRAM:
  2923                           	opt stack 0
  2924  000001                     _outPipes:
  2925                           	opt stack 0
  2926  000001                     	ds	8
  2927  000009                     _pBDTEntryIn:
  2928                           	opt stack 0
  2929  000009                     	ds	6
  2930  00000F                     _pBDTEntryEP0OutCurrent:
  2931                           	opt stack 0
  2932  00000F                     	ds	2
  2933  000011                     _pBDTEntryEP0OutNext:
  2934                           	opt stack 0
  2935  000011                     	ds	2
  2936  000013                     _BothEP0OutUOWNsSet:
  2937                           	opt stack 0
  2938  000013                     	ds	1
  2939  000014                     _LastRS232Out:
  2940                           	opt stack 0
  2941  000014                     	ds	1
  2942  000015                     _NextUSBOut:
  2943                           	opt stack 0
  2944  000015                     	ds	1
  2945  000016                     _RS232_Out_Data_Rdy:
  2946                           	opt stack 0
  2947  000016                     	ds	1
  2948  000017                     _RS232cp:
  2949                           	opt stack 0
  2950  000017                     	ds	1
  2951  000018                     _RemoteWakeup:
  2952                           	opt stack 0
  2953  000018                     	ds	1
  2954  000019                     _USBDeferStatusStagePacket:
  2955                           	opt stack 0
  2956  000019                     	ds	1
  2957  00001A                     _USBStatusStageEnabledFlag1:
  2958                           	opt stack 0
  2959  00001A                     	ds	1
  2960  00001B                     _USBStatusStageEnabledFlag2:
  2961                           	opt stack 0
  2962  00001B                     	ds	1
  2963  00001C                     _USBStatusStageTimeoutCounter:
  2964                           	opt stack 0
  2965  00001C                     	ds	1
  2966  00001D                     _cdc_rx_len:
  2967                           	opt stack 0
  2968  00001D                     	ds	1
  2969  00001E                     _cdc_trf_state:
  2970                           	opt stack 0
  2971  00001E                     	ds	1
  2972  00001F                     _controlTransferState:
  2973                           	opt stack 0
  2974  00001F                     	ds	1
  2975  000020                     _endpoint_number:
  2976                           	opt stack 0
  2977  000020                     	ds	1
  2978  000021                     _eusartRxHead:
  2979                           	opt stack 0
  2980  000021                     	ds	1
  2981  000022                     _eusartRxTail:
  2982                           	opt stack 0
  2983  000022                     	ds	1
  2984  000023                     _eusartTxBufferRemaining:
  2985                           	opt stack 0
  2986  000023                     	ds	1
  2987  000024                     _eusartTxHead:
  2988                           	opt stack 0
  2989  000024                     	ds	1
  2990  000025                     _eusartTxTail:
  2991                           	opt stack 0
  2992  000025                     	ds	1
  2993  000026                     _rxByteFlag:
  2994                           	opt stack 0
  2995  000026                     	ds	1
  2996  000027                     _shortPacketStatus:
  2997                           	opt stack 0
  2998  000027                     	ds	1
  2999  000028                     _inPipes:
  3000                           	opt stack 0
  3001  000028                     	ds	6
  3002  00002E                     _USBActiveConfiguration:
  3003                           	opt stack 0
  3004  00002E                     	ds	1
  3005  00002F                     _USTATcopy:
  3006                           	opt stack 0
  3007  00002F                     	ds	1
  3008                           tblptru	equ	0xFF8
  3009                           tblptrh	equ	0xFF7
  3010                           tblptrl	equ	0xFF6
  3011                           tablat	equ	0xFF5
  3012                           postinc0	equ	0xFEE
  3013                           wreg	equ	0xFE8
  3014                           postdec1	equ	0xFE5
  3015                           fsr1l	equ	0xFE1
  3016                           
  3017                           	psect	bssBANK0
  3018  000060                     __pbssBANK0:
  3019                           	opt stack 0
  3020  000060                     _pBDTEntryOut:
  3021                           	opt stack 0
  3022  000060                     	ds	6
  3023  000066                     service_pushbutton@PB_Timer:
  3024                           	opt stack 0
  3025  000066                     	ds	4
  3026  00006A                     _ep_data_in:
  3027                           	opt stack 0
  3028  00006A                     	ds	3
  3029  00006D                     _ep_data_out:
  3030                           	opt stack 0
  3031  00006D                     	ds	3
  3032  000070                     _pCDCDst:
  3033                           	opt stack 0
  3034  000070                     	ds	3
  3035  000073                     _pCDCSrc:
  3036                           	opt stack 0
  3037  000073                     	ds	3
  3038  000076                     _CDCDataInHandle:
  3039                           	opt stack 0
  3040  000076                     	ds	2
  3041  000078                     _CDCDataOutHandle:
  3042                           	opt stack 0
  3043  000078                     	ds	2
  3044  00007A                     _light:
  3045                           	opt stack 0
  3046  00007A                     	ds	2
  3047  00007C                     _pDst:
  3048                           	opt stack 0
  3049  00007C                     	ds	2
  3050  00007E                     _temperature:
  3051                           	opt stack 0
  3052  00007E                     	ds	2
  3053  000080                     _timer1ReloadVal:
  3054                           	opt stack 0
  3055  000080                     	ds	2
  3056  000082                     _timerMinTickCount:
  3057                           	opt stack 0
  3058  000082                     	ds	2
  3059  000084                     _timerMsTickCount:
  3060                           	opt stack 0
  3061  000084                     	ds	2
  3062  000086                     _USBBusIsSuspended:
  3063                           	opt stack 0
  3064  000086                     	ds	1
  3065  000087                     _USBDeferINDataStagePackets:
  3066                           	opt stack 0
  3067  000087                     	ds	1
  3068  000088                     _USBDeferOUTDataStagePackets:
  3069                           	opt stack 0
  3070  000088                     	ds	1
  3071  000089                     _USBDeviceState:
  3072                           	opt stack 0
  3073  000089                     	ds	1
  3074  00008A                     _activeState:
  3075                           	opt stack 0
  3076  00008A                     	ds	1
  3077  00008B                     _adrStatus:
  3078                           	opt stack 0
  3079  00008B                     	ds	1
  3080  00008C                     _appTimer:
  3081                           	opt stack 0
  3082  00008C                     	ds	1
  3083  00008D                     _cdc_mem_type:
  3084                           	opt stack 0
  3085  00008D                     	ds	1
  3086  00008E                     _cdc_tx_len:
  3087                           	opt stack 0
  3088  00008E                     	ds	1
  3089  00008F                     _dataRatePosition:
  3090                           	opt stack 0
  3091  00008F                     	ds	1
  3092  000090                     _eusartRxCount:
  3093                           	opt stack 0
  3094  000090                     	ds	1
  3095  000091                     _m10SecTicker:
  3096                           	opt stack 0
  3097  000091                     	ds	1
  3098  000092                     _modemBufferIndex:
  3099                           	opt stack 0
  3100  000092                     	ds	1
  3101  000093                     _operationType:
  3102                           	opt stack 0
  3103  000093                     	ds	1
  3104  000094                     _powerOnStatus:
  3105                           	opt stack 0
  3106  000094                     	ds	1
  3107  000095                     _randomPortNum:
  3108                           	opt stack 0
  3109  000095                     	ds	1
  3110  000096                     _runningState:
  3111                           	opt stack 0
  3112  000096                     	ds	1
  3113  000097                     _secTicker:
  3114                           	opt stack 0
  3115  000097                     	ds	1
  3116  000098                     _sleepTicker:
  3117                           	opt stack 0
  3118  000098                     	ds	1
  3119  000099                     _sleepTxOccurances:
  3120                           	opt stack 0
  3121  000099                     	ds	1
  3122  00009A                     _usbState:
  3123                           	opt stack 0
  3124  00009A                     	ds	1
  3125  00009B                     service_pushbutton@Release_Timer:
  3126                           	opt stack 0
  3127  00009B                     	ds	1
  3128  00009C                     _dataBuffer:
  3129                           	opt stack 0
  3130  00009C                     	ds	12
  3131  0000A8                     _cdc_notice:
  3132                           	opt stack 0
  3133  0000A8                     	ds	10
  3134  0000B2                     _responseData:
  3135                           	opt stack 0
  3136  0000B2                     	ds	8
  3137  0000BA                     _line_coding:
  3138                           	opt stack 0
  3139  0000BA                     	ds	7
  3140  0000C1                     _responsePortNum:
  3141                           	opt stack 0
  3142  0000C1                     	ds	3
  3143  0000C4                     _USBAlternateInterface:
  3144                           	opt stack 0
  3145  0000C4                     	ds	2
  3146                           tblptru	equ	0xFF8
  3147                           tblptrh	equ	0xFF7
  3148                           tblptrl	equ	0xFF6
  3149                           tablat	equ	0xFF5
  3150                           postinc0	equ	0xFEE
  3151                           wreg	equ	0xFE8
  3152                           postdec1	equ	0xFE5
  3153                           fsr1l	equ	0xFE1
  3154                           
  3155                           	psect	dataBANK0
  3156  0000F8                     __pdataBANK0:
  3157                           	opt stack 0
  3158  0000F8                     _selectedFont:
  3159                           	opt stack 0
  3160  0000F8                     	ds	2
  3161  0000FA                     _dataRateSelection:
  3162                           	opt stack 0
  3163  0000FA                     	ds	1
  3164  0000FB                     _moteState:
  3165                           	opt stack 0
  3166  0000FB                     	ds	1
  3167  0000FC                     _periodicState:
  3168                           	opt stack 0
  3169  0000FC                     	ds	1
  3170                           tblptru	equ	0xFF8
  3171                           tblptrh	equ	0xFF7
  3172                           tblptrl	equ	0xFF6
  3173                           tablat	equ	0xFF5
  3174                           postinc0	equ	0xFEE
  3175                           wreg	equ	0xFE8
  3176                           postdec1	equ	0xFE5
  3177                           fsr1l	equ	0xFE1
  3178                           
  3179                           	psect	bssBANK1
  3180  000100                     __pbssBANK1:
  3181                           	opt stack 0
  3182  000100                     _eusartRxBuffer:
  3183                           	opt stack 0
  3184  000100                     	ds	64
  3185  000140                     _USB_Buffer:
  3186                           	opt stack 0
  3187  000140                     	ds	64
  3188  000180                     _modemResonseBuffer:
  3189                           	opt stack 0
  3190  000180                     	ds	64
  3191  0001C0                     _responseId:
  3192                           	opt stack 0
  3193  0001C0                     	ds	16
  3194  0001D0                     _dummy_encapsulated_cmd_response:
  3195                           	opt stack 0
  3196  0001D0                     	ds	8
  3197                           tblptru	equ	0xFF8
  3198                           tblptrh	equ	0xFF7
  3199                           tblptrl	equ	0xFF6
  3200                           tablat	equ	0xFF5
  3201                           postinc0	equ	0xFEE
  3202                           wreg	equ	0xFE8
  3203                           postdec1	equ	0xFE5
  3204                           fsr1l	equ	0xFE1
  3205                           
  3206                           	psect	bssBANK2
  3207  000200                     __pbssBANK2:
  3208                           	opt stack 0
  3209  000200                     _eusartTxBuffer:
  3210                           	opt stack 0
  3211  000200                     	ds	64
  3212                           tblptru	equ	0xFF8
  3213                           tblptrh	equ	0xFF7
  3214                           tblptrl	equ	0xFF6
  3215                           tablat	equ	0xFF5
  3216                           postinc0	equ	0xFEE
  3217                           wreg	equ	0xFE8
  3218                           postdec1	equ	0xFE5
  3219                           fsr1l	equ	0xFE1
  3220                           
  3221                           	psect	cstackBANK0
  3222  0000C6                     __pcstackBANK0:
  3223                           	opt stack 0
  3224  0000C6                     ??_TMR1_Initialize:
  3225  0000C6                     ?_ADC_GetConversion:
  3226                           	opt stack 0
  3227  0000C6                     ?_strncmp:
  3228                           	opt stack 0
  3229  0000C6                     ?_strcmp:
  3230                           	opt stack 0
  3231  0000C6                     ?_USBTransferOnePacket:
  3232                           	opt stack 0
  3233  0000C6                     ?___lwdiv:
  3234                           	opt stack 0
  3235  0000C6                     ?___lwmod:
  3236                           	opt stack 0
  3237  0000C6                     MOTEapp_handlerState@state:
  3238                           	opt stack 0
  3239  0000C6                     MOTEapp_SetADR@state:
  3240                           	opt stack 0
  3241  0000C6                     MOTEapp_SetDataRate@dataRate:
  3242                           	opt stack 0
  3243  0000C6                     MOTEapp_TimerBasedTask@timerTask:
  3244                           	opt stack 0
  3245  0000C6                     unhex@c:
  3246                           	opt stack 0
  3247  0000C6                     hexToStr@character:
  3248                           	opt stack 0
  3249  0000C6                     moteApp_clearBuffers@counter:
  3250                           	opt stack 0
  3251  0000C6                     USBapp_handlerState@state:
  3252                           	opt stack 0
  3253  0000C6                     service_pushbutton@bs:
  3254                           	opt stack 0
  3255  0000C6                     EUSART_Read@readValue:
  3256                           	opt stack 0
  3257  0000C6                     EUSART_Write@txData:
  3258                           	opt stack 0
  3259  0000C6                     EUSART_FlushBuffer@index:
  3260                           	opt stack 0
  3261  0000C6                     SPI_Exchange8bit@data:
  3262                           	opt stack 0
  3263  0000C6                     DATAEE_WriteByte@bData:
  3264                           	opt stack 0
  3265  0000C6                     DATAEE_ReadByte@bAdd:
  3266                           	opt stack 0
  3267  0000C6                     TMR2_ReadTimer@readVal:
  3268                           	opt stack 0
  3269  0000C6                     USBTransferOnePacket@dir:
  3270                           	opt stack 0
  3271  0000C6                     ___lbdiv@divisor:
  3272                           	opt stack 0
  3273  0000C6                     ___lbmod@divisor:
  3274                           	opt stack 0
  3275  0000C6                     moteApp_delayms@length:
  3276                           	opt stack 0
  3277  0000C6                     oled_setFont@font:
  3278                           	opt stack 0
  3279  0000C6                     putUSBUSART@data:
  3280                           	opt stack 0
  3281  0000C6                     ___lwdiv@dividend:
  3282                           	opt stack 0
  3283  0000C6                     ___lwmod@dividend:
  3284                           	opt stack 0
  3285  0000C6                     memset@p1:
  3286                           	opt stack 0
  3287  0000C6                     strcmp@s1:
  3288                           	opt stack 0
  3289  0000C6                     strncmp@s1:
  3290                           	opt stack 0
  3291                           
  3292                           ; 2 bytes @ 0x0
  3293  0000C6                     	ds	1
  3294  0000C7                     MOTEapp_getModemResponse@terminatorReceived:
  3295                           	opt stack 0
  3296  0000C7                     moteApp_clearBuffers@counter_1700:
  3297                           	opt stack 0
  3298  0000C7                     oled_writeCommand@command:
  3299                           	opt stack 0
  3300  0000C7                     oled_writeData@data:
  3301                           	opt stack 0
  3302  0000C7                     DATAEE_WriteByte@bAdd:
  3303                           	opt stack 0
  3304  0000C7                     ___lbdiv@dividend:
  3305                           	opt stack 0
  3306  0000C7                     ___lbmod@dividend:
  3307                           	opt stack 0
  3308  0000C7                     sendCommand@string:
  3309                           	opt stack 0
  3310  0000C7                     sendDataCommand@string:
  3311                           	opt stack 0
  3312  0000C7                     USBTransferOnePacket@data:
  3313                           	opt stack 0
  3314                           
  3315                           ; 2 bytes @ 0x1
  3316  0000C7                     	ds	1
  3317  0000C8                     ??_moteApp_delayms:
  3318  0000C8                     ??_ADC_GetConversion:
  3319  0000C8                     ??_oled_devInit:
  3320  0000C8                     MOTEapp_getModemResponse@bufferByte:
  3321                           	opt stack 0
  3322  0000C8                     moteApp_clearBuffers@counter_1701:
  3323                           	opt stack 0
  3324  0000C8                     Set_Page_Address@address:
  3325                           	opt stack 0
  3326  0000C8                     Set_Column_Address@address:
  3327                           	opt stack 0
  3328  0000C8                     oled_setDisplay@displayType:
  3329                           	opt stack 0
  3330  0000C8                     oled_displayOff@state:
  3331                           	opt stack 0
  3332  0000C8                     DATAEE_WriteByte@GIEBitValue:
  3333                           	opt stack 0
  3334  0000C8                     putUSBUSART@length:
  3335                           	opt stack 0
  3336  0000C8                     ___lbdiv@counter:
  3337                           	opt stack 0
  3338  0000C8                     ___lbmod@counter:
  3339                           	opt stack 0
  3340  0000C8                     ___lwdiv@divisor:
  3341                           	opt stack 0
  3342  0000C8                     ___lwmod@divisor:
  3343                           	opt stack 0
  3344  0000C8                     memset@c:
  3345                           	opt stack 0
  3346  0000C8                     strcmp@s2:
  3347                           	opt stack 0
  3348  0000C8                     strncmp@s2:
  3349                           	opt stack 0
  3350                           
  3351                           ; 2 bytes @ 0x2
  3352  0000C8                     	ds	1
  3353  0000C9                     sendDataCommand@appData:
  3354                           	opt stack 0
  3355  0000C9                     oled_putChar@station_dot:
  3356                           	opt stack 0
  3357  0000C9                     USBTransferOnePacket@len:
  3358                           	opt stack 0
  3359  0000C9                     ___lbdiv@quotient:
  3360                           	opt stack 0
  3361  0000C9                     ___lbmod@rem:
  3362                           	opt stack 0
  3363  0000C9                     moteApp_delayms@counter:
  3364                           	opt stack 0
  3365                           
  3366                           ; 2 bytes @ 0x3
  3367  0000C9                     	ds	1
  3368  0000CA                     ??_strcmp:
  3369  0000CA                     sendDataCommand@dataLength:
  3370                           	opt stack 0
  3371  0000CA                     moteApp_add8bToDataBuffer@bufferLocation:
  3372                           	opt stack 0
  3373  0000CA                     oled_putChar@start_page:
  3374                           	opt stack 0
  3375  0000CA                     ADC_GetConversion@channel:
  3376                           	opt stack 0
  3377  0000CA                     USBTransferOnePacket@ep:
  3378                           	opt stack 0
  3379  0000CA                     ___lwdiv@counter:
  3380                           	opt stack 0
  3381  0000CA                     ___lwmod@counter:
  3382                           	opt stack 0
  3383  0000CA                     memset@n:
  3384                           	opt stack 0
  3385  0000CA                     strncmp@len:
  3386                           	opt stack 0
  3387                           
  3388                           ; 2 bytes @ 0x4
  3389  0000CA                     	ds	1
  3390  0000CB                     ??_oled_putChar:
  3391  0000CB                     ??_sendDataCommand:
  3392  0000CB                     moteApp_toggleLeds@state:
  3393                           	opt stack 0
  3394  0000CB                     moteApp_add8bToDataBuffer@number:
  3395                           	opt stack 0
  3396  0000CB                     modemResync@escapeCounter:
  3397                           	opt stack 0
  3398  0000CB                     USBTransferOnePacket@handle:
  3399                           	opt stack 0
  3400  0000CB                     ___lwdiv@quotient:
  3401                           	opt stack 0
  3402                           
  3403                           ; 2 bytes @ 0x5
  3404  0000CB                     	ds	1
  3405  0000CC                     ??_strncmp:
  3406  0000CC                     sendDataCommand@byteCount:
  3407                           	opt stack 0
  3408  0000CC                     strcmp@t0:
  3409                           	opt stack 0
  3410  0000CC                     memset@p:
  3411                           	opt stack 0
  3412                           
  3413                           ; 2 bytes @ 0x6
  3414  0000CC                     	ds	1
  3415  0000CD                     modemResync@escapeEvent:
  3416                           	opt stack 0
  3417  0000CD                     sendDataCommand@byteCount_1637:
  3418                           	opt stack 0
  3419  0000CD                     ADC_TempConversion@tempRaw:
  3420                           	opt stack 0
  3421  0000CD                     strcmp@t2:
  3422                           	opt stack 0
  3423  0000CD                     moteApp_add16bToDataBuffer@number:
  3424                           	opt stack 0
  3425  0000CD                     getsUSBUSART@buffer:
  3426                           	opt stack 0
  3427  0000CD                     _CDCTxService$5784:
  3428                           	opt stack 0
  3429                           
  3430                           ; 2 bytes @ 0x7
  3431  0000CD                     	ds	1
  3432  0000CE                     ADC_TempConversion@temp:
  3433                           	opt stack 0
  3434  0000CE                     USBDeviceInit@i:
  3435                           	opt stack 0
  3436  0000CE                     strcmp@t1:
  3437                           	opt stack 0
  3438                           
  3439                           ; 1 bytes @ 0x8
  3440  0000CE                     	ds	1
  3441  0000CF                     moteApp_add16bToDataBuffer@bufferLocation:
  3442                           	opt stack 0
  3443  0000CF                     getsUSBUSART@len:
  3444                           	opt stack 0
  3445  0000CF                     CDCTxService@i:
  3446                           	opt stack 0
  3447                           
  3448                           ; 1 bytes @ 0x9
  3449  0000CF                     	ds	1
  3450  0000D0                     ??_getsUSBUSART:
  3451  0000D0                     CDCTxService@byte_to_send:
  3452                           	opt stack 0
  3453                           
  3454                           ; 1 bytes @ 0xA
  3455  0000D0                     	ds	1
  3456  0000D1                     oled_putChar@k:
  3457                           	opt stack 0
  3458  0000D1                     _getsUSBUSART$5736:
  3459                           	opt stack 0
  3460                           
  3461                           ; 2 bytes @ 0xB
  3462  0000D1                     	ds	1
  3463  0000D2                     oled_putChar@index:
  3464                           	opt stack 0
  3465                           
  3466                           ; 1 bytes @ 0xC
  3467  0000D2                     	ds	1
  3468  0000D3                     ??_USBapp_DeviceCdcEmulatorHandler:
  3469  0000D3                     oled_clearRow@page:
  3470                           	opt stack 0
  3471  0000D3                     oled_putString@string:
  3472                           	opt stack 0
  3473                           
  3474                           ; 2 bytes @ 0xD
  3475  0000D3                     	ds	1
  3476  0000D4                     oled_clearRow@index:
  3477                           	opt stack 0
  3478                           
  3479                           ; 1 bytes @ 0xE
  3480  0000D4                     	ds	1
  3481  0000D5                     moteApp_GoToSleep@status:
  3482                           	opt stack 0
  3483  0000D5                     oled_putString@station_dot:
  3484                           	opt stack 0
  3485                           
  3486                           ; 1 bytes @ 0xF
  3487  0000D5                     	ds	1
  3488  0000D6                     oled_putString@start_page:
  3489                           	opt stack 0
  3490                           
  3491                           ; 1 bytes @ 0x10
  3492  0000D6                     	ds	1
  3493  0000D7                     oled_putString@index:
  3494                           	opt stack 0
  3495                           
  3496                           ; 1 bytes @ 0x11
  3497  0000D7                     	ds	1
  3498  0000D8                     moteJoiningProcess@switchEvent:
  3499                           	opt stack 0
  3500  0000D8                     oled_putUint8@station_dot:
  3501                           	opt stack 0
  3502  0000D8                     test_switch@timeout:
  3503                           	opt stack 0
  3504  0000D8                     oled_putUint16@number:
  3505                           	opt stack 0
  3506                           
  3507                           ; 2 bytes @ 0x12
  3508  0000D8                     	ds	1
  3509  0000D9                     moteJoiningProcess@joiningComplete:
  3510                           	opt stack 0
  3511  0000D9                     oled_putUint8@start_page:
  3512                           	opt stack 0
  3513                           
  3514                           ; 1 bytes @ 0x13
  3515  0000D9                     	ds	1
  3516  0000DA                     test_switch@buttonCheck:
  3517                           	opt stack 0
  3518  0000DA                     moteJoiningProcess@readDataRate:
  3519                           	opt stack 0
  3520  0000DA                     oled_putUint8@number:
  3521                           	opt stack 0
  3522  0000DA                     oled_putUint16@station_dot:
  3523                           	opt stack 0
  3524                           
  3525                           ; 1 bytes @ 0x14
  3526  0000DA                     	ds	1
  3527  0000DB                     moteJoiningProcess@messageReady:
  3528                           	opt stack 0
  3529  0000DB                     oled_putUint16@start_page:
  3530                           	opt stack 0
  3531  0000DB                     oled_putUint8@numData:
  3532                           	opt stack 0
  3533                           
  3534                           ; 6 bytes @ 0x15
  3535  0000DB                     	ds	1
  3536  0000DC                     oled_putUint16@numData:
  3537                           	opt stack 0
  3538                           
  3539                           ; 6 bytes @ 0x16
  3540  0000DC                     	ds	6
  3541  0000E2                     moteRunningProcess@selectButton:
  3542                           	opt stack 0
  3543  0000E2                     test_adc@L:
  3544                           	opt stack 0
  3545                           
  3546                           ; 2 bytes @ 0x1C
  3547  0000E2                     	ds	1
  3548  0000E3                     moteRunningProcess@messageReady:
  3549                           	opt stack 0
  3550                           
  3551                           ; 1 bytes @ 0x1D
  3552  0000E3                     	ds	1
  3553  0000E4                     moteRunningProcess@sleepEvent:
  3554                           	opt stack 0
  3555  0000E4                     test_adc@Traw:
  3556                           	opt stack 0
  3557                           
  3558                           ; 2 bytes @ 0x1E
  3559  0000E4                     	ds	1
  3560  0000E5                     moteRunningProcess@Traw:
  3561                           	opt stack 0
  3562                           
  3563                           ; 2 bytes @ 0x1F
  3564  0000E5                     	ds	1
  3565  0000E6                     test_adc@T:
  3566                           	opt stack 0
  3567                           
  3568                           ; 1 bytes @ 0x20
  3569  0000E6                     	ds	1
  3570  0000E7                     test_adc@count:
  3571                           	opt stack 0
  3572  0000E7                     moteRunningProcess@i:
  3573                           	opt stack 0
  3574                           
  3575                           ; 1 bytes @ 0x21
  3576  0000E7                     	ds	1
  3577  0000E8                     moteRunningProcess@i_1410:
  3578                           	opt stack 0
  3579                           
  3580                           ; 1 bytes @ 0x22
  3581  0000E8                     	ds	1
  3582  0000E9                     moteRunningProcess@dummyRead1:
  3583                           	opt stack 0
  3584                           
  3585                           ; 1 bytes @ 0x23
  3586  0000E9                     	ds	1
  3587  0000EA                     moteRunningProcess@dummyRead2:
  3588                           	opt stack 0
  3589                           
  3590                           ; 1 bytes @ 0x24
  3591  0000EA                     	ds	1
  3592  0000EB                     moteRunningProcess@counter:
  3593                           	opt stack 0
  3594                           
  3595                           ; 1 bytes @ 0x25
  3596  0000EB                     	ds	1
  3597  0000EC                     moteRunningProcess@counter_1556:
  3598                           	opt stack 0
  3599                           
  3600                           ; 1 bytes @ 0x26
  3601  0000EC                     	ds	1
  3602  0000ED                     moteRunningProcess@bufferReadPos:
  3603                           	opt stack 0
  3604                           
  3605                           ; 1 bytes @ 0x27
  3606  0000ED                     	ds	1
  3607  0000EE                     moteRunningProcess@changeStates:
  3608                           	opt stack 0
  3609                           
  3610                           ; 1 bytes @ 0x28
  3611  0000EE                     	ds	1
  3612  0000EF                     moteHandler@gotoSleep:
  3613                           	opt stack 0
  3614                           
  3615                           ; 1 bytes @ 0x29
  3616  0000EF                     	ds	1
  3617  0000F0                     moteHandler@gotoNextState:
  3618                           	opt stack 0
  3619                           
  3620                           ; 1 bytes @ 0x2A
  3621  0000F0                     	ds	1
  3622  0000F1                     moteHandler@Traw:
  3623                           	opt stack 0
  3624                           
  3625                           ; 2 bytes @ 0x2B
  3626  0000F1                     	ds	2
  3627  0000F3                     moteHandler@s2Button:
  3628                           	opt stack 0
  3629                           
  3630                           ; 1 bytes @ 0x2D
  3631  0000F3                     	ds	1
  3632  0000F4                     moteHandler@buttonPress:
  3633                           	opt stack 0
  3634                           
  3635                           ; 1 bytes @ 0x2E
  3636  0000F4                     	ds	1
  3637  0000F5                     moteHandler@i:
  3638                           	opt stack 0
  3639                           
  3640                           ; 1 bytes @ 0x2F
  3641  0000F5                     	ds	1
  3642  0000F6                     moteHandler@i_1340:
  3643                           	opt stack 0
  3644                           
  3645                           ; 1 bytes @ 0x30
  3646  0000F6                     	ds	1
  3647  0000F7                     moteHandler@readMessage:
  3648                           	opt stack 0
  3649                           
  3650                           ; 1 bytes @ 0x31
  3651  0000F7                     	ds	1
  3652  0000F8                     tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           postinc0	equ	0xFEE
  3657                           wreg	equ	0xFE8
  3658                           postdec1	equ	0xFE5
  3659                           fsr1l	equ	0xFE1
  3660                           
  3661                           ; 0 bytes @ 0x32
  3662                           
  3663                           	psect	cstackCOMRAM
  3664  000030                     __pcstackCOMRAM:
  3665                           	opt stack 0
  3666  000030                     ??_USBCheckCDCRequest:
  3667  000030                     ??_TMR1_ISR:
  3668  000030                     ??_USBStdGetDscHandler:
  3669  000030                     ?i2_USBTransferOnePacket:
  3670                           	opt stack 0
  3671  000030                     ?___lldiv:
  3672                           	opt stack 0
  3673  000030                     USBConfigureEndpoint@direction:
  3674                           	opt stack 0
  3675  000030                     USBCtrlTrfTxService@byteToSend:
  3676                           	opt stack 0
  3677  000030                     i2USBTransferOnePacket@dir:
  3678                           	opt stack 0
  3679  000030                     USBStdGetStatusHandler@p:
  3680                           	opt stack 0
  3681  000030                     i2memset@p1:
  3682                           	opt stack 0
  3683  000030                     ___lldiv@dividend:
  3684                           	opt stack 0
  3685                           
  3686                           ; 4 bytes @ 0x0
  3687  000030                     	ds	1
  3688  000031                     ??_USBConfigureEndpoint:
  3689  000031                     i2USBTransferOnePacket@data:
  3690                           	opt stack 0
  3691                           
  3692                           ; 2 bytes @ 0x1
  3693  000031                     	ds	1
  3694  000032                     i2memset@c:
  3695                           	opt stack 0
  3696                           
  3697                           ; 2 bytes @ 0x2
  3698  000032                     	ds	1
  3699  000033                     i2USBTransferOnePacket@len:
  3700                           	opt stack 0
  3701                           
  3702                           ; 1 bytes @ 0x3
  3703  000033                     	ds	1
  3704  000034                     i2USBTransferOnePacket@ep:
  3705                           	opt stack 0
  3706  000034                     i2memset@n:
  3707                           	opt stack 0
  3708  000034                     ___lldiv@divisor:
  3709                           	opt stack 0
  3710                           
  3711                           ; 4 bytes @ 0x4
  3712  000034                     	ds	1
  3713  000035                     USBConfigureEndpoint@EPNum:
  3714                           	opt stack 0
  3715  000035                     i2USBTransferOnePacket@handle:
  3716                           	opt stack 0
  3717                           
  3718                           ; 2 bytes @ 0x5
  3719  000035                     	ds	1
  3720  000036                     USBConfigureEndpoint@handle:
  3721                           	opt stack 0
  3722  000036                     i2memset@p:
  3723                           	opt stack 0
  3724                           
  3725                           ; 2 bytes @ 0x6
  3726  000036                     	ds	2
  3727  000038                     USBEnableEndpoint@options:
  3728                           	opt stack 0
  3729  000038                     i2USBDeviceInit@i:
  3730                           	opt stack 0
  3731  000038                     ___lldiv@quotient:
  3732                           	opt stack 0
  3733                           
  3734                           ; 4 bytes @ 0x8
  3735  000038                     	ds	1
  3736  000039                     ??_USBEnableEndpoint:
  3737                           
  3738                           ; 0 bytes @ 0x9
  3739  000039                     	ds	2
  3740  00003B                     USBEnableEndpoint@p:
  3741                           	opt stack 0
  3742                           
  3743                           ; 2 bytes @ 0xB
  3744  00003B                     	ds	1
  3745  00003C                     ___lldiv@counter:
  3746                           	opt stack 0
  3747                           
  3748                           ; 1 bytes @ 0xC
  3749  00003C                     	ds	1
  3750  00003D                     ??_USART_mySetLineCodingHandler:
  3751  00003D                     USBEnableEndpoint@ep:
  3752                           	opt stack 0
  3753                           
  3754                           ; 1 bytes @ 0xD
  3755  00003D                     	ds	1
  3756  00003E                     USBapp_CdcEmulatorInitialize@i:
  3757                           	opt stack 0
  3758                           
  3759                           ; 1 bytes @ 0xE
  3760  00003E                     	ds	1
  3761  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3762                           	opt stack 0
  3763                           
  3764                           ; 2 bytes @ 0xF
  3765  00003F                     	ds	2
  3766  000041                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3767                           	opt stack 0
  3768  000041                     USART_mySetLineCodingHandler@dwBaud:
  3769                           	opt stack 0
  3770                           
  3771                           ; 4 bytes @ 0x11
  3772  000041                     	ds	2
  3773  000043                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3774                           	opt stack 0
  3775                           
  3776                           ; 2 bytes @ 0x13
  3777  000043                     	ds	2
  3778  000045                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3779  000045                     USBCtrlTrfRxService@i:
  3780                           	opt stack 0
  3781  000045                     USBCtrlTrfInHandler@lastDTS:
  3782                           	opt stack 0
  3783                           
  3784                           ; 1 bytes @ 0x15
  3785  000045                     	ds	1
  3786  000046                     USBCtrlTrfRxService@byteToRead:
  3787                           	opt stack 0
  3788                           
  3789                           ; 1 bytes @ 0x16
  3790  000046                     	ds	1
  3791  000047                     ??_USBStdFeatureReqHandler:
  3792  000047                     USBStdSetCfgHandler@i:
  3793                           	opt stack 0
  3794                           
  3795                           ; 1 bytes @ 0x17
  3796  000047                     	ds	2
  3797  000049                     USBStdFeatureReqHandler@pUEP:
  3798                           	opt stack 0
  3799                           
  3800                           ; 2 bytes @ 0x19
  3801  000049                     	ds	2
  3802  00004B                     USBStdFeatureReqHandler@current_ep_data:
  3803                           	opt stack 0
  3804                           
  3805                           ; 1 bytes @ 0x1B
  3806  00004B                     	ds	1
  3807  00004C                     USBStdFeatureReqHandler@p:
  3808                           	opt stack 0
  3809                           
  3810                           ; 2 bytes @ 0x1C
  3811  00004C                     	ds	2
  3812  00004E                     ??_USBCheckStdRequest:
  3813                           
  3814                           ; 0 bytes @ 0x1E
  3815  00004E                     	ds	1
  3816  00004F                     ??_USBCtrlEPService:
  3817  00004F                     
  3818                           ; 0 bytes @ 0x1F
  3819  00004F                     	ds	2
  3820  000051                     USBCtrlEPService@setup_cnt:
  3821                           	opt stack 0
  3822                           
  3823                           ; 1 bytes @ 0x21
  3824  000051                     	ds	1
  3825  000052                     USBDeviceTasks@i:
  3826                           	opt stack 0
  3827                           
  3828                           ; 1 bytes @ 0x22
  3829  000052                     	ds	1
  3830  000053                     ??_INTERRUPT_InterruptManager:
  3831                           
  3832                           ; 0 bytes @ 0x23
  3833  000053                     	ds	12
  3834                           tblptru	equ	0xFF8
  3835                           tblptrh	equ	0xFF7
  3836                           tblptrl	equ	0xFF6
  3837                           tablat	equ	0xFF5
  3838                           postinc0	equ	0xFEE
  3839                           wreg	equ	0xFE8
  3840                           postdec1	equ	0xFE5
  3841                           fsr1l	equ	0xFE1
  3842                           
  3843 ;;
  3844 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3845 ;;
  3846 ;; *************** function _main *****************
  3847 ;; Defined at:
  3848 ;;		line 40 in file "main.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;		None               void
  3855 ;; Registers used:
  3856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : F/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3862 ;;      Params:         0       0       0       0       0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels required when called:   21
  3868 ;; This function calls:
  3869 ;;		_DATAEE_ReadByte
  3870 ;;		_DATAEE_WriteByte
  3871 ;;		_MOTEapp_handlerState
  3872 ;;		_SYSTEM_Initialize
  3873 ;;		_USBDeviceAttach
  3874 ;;		_USBDeviceInit
  3875 ;;		_USBapp_Handler
  3876 ;;		_USBapp_handlerState
  3877 ;;		_modemResync
  3878 ;;		_moteApp_delayms
  3879 ;;		_moteHandler
  3880 ;;		_oled_clear
  3881 ;;		_oled_init
  3882 ;;		_oled_putString
  3883 ;;		_test_powerup
  3884 ;; This function is called by:
  3885 ;;		Startup code after reset
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text0
  3890  004F36                     __ptext0:
  3891                           	opt stack 0
  3892  004F36                     _main:
  3893                           	opt stack 10
  3894                           
  3895                           ;main.c: 43: SYSTEM_Initialize();
  3896                           
  3897                           ;incstack = 0
  3898  004F36  ECDA  F01A         	call	_SYSTEM_Initialize	;wreg free
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;main.c: 45: oled_init();
  3902  004F3A  ECFA  F01A         	call	_oled_init	;wreg free
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;main.c: 46: USBDeviceInit();
  3906  004F3E  ECDA  F028         	call	_USBDeviceInit	;wreg free
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;main.c: 48: USBDeviceAttach();
  3910  004F42  EC6C  F01B         	call	_USBDeviceAttach	;wreg free
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;main.c: 50: PEIE = 1;
  3914  004F46  8CF2               	bsf	intcon,6,c	;volatile
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;main.c: 51: GIE = 1;
  3918  004F48  8EF2               	bsf	intcon,7,c	;volatile
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;main.c: 53: moteApp_delayms(300);
  3922  004F4A  0E01               	movlw	1
  3923  004F4C  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3924  004F4E  0E2C               	movlw	44
  3925  004F50  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  3926  004F52  EC81  F01B         	call	_moteApp_delayms	;wreg free
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;main.c: 54: modemResync();
  3930  004F56  ECD5  F01F         	call	_modemResync	;wreg free
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;main.c: 55: moteApp_delayms(300);
  3934  004F5A  0E01               	movlw	1
  3935  004F5C  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3936  004F5E  0E2C               	movlw	44
  3937  004F60  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  3938  004F62  EC81  F01B         	call	_moteApp_delayms	;wreg free
  3939                           
  3940                           ;main.c: 59: powerOnStatus = DATAEE_ReadByte(0x00);
  3941  004F66  0E00               	movlw	0
  3942  004F68  EC5C  F01A         	call	_DATAEE_ReadByte
  3943  004F6C  0100               	movlb	0	; () banked
  3944  004F6E  6F94               	movwf	_powerOnStatus& (0+255),b
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;main.c: 60: if ( powerOnStatus != 0x55)
  3948  004F70  5194               	movf	_powerOnStatus& (0+255),w,b
  3949  004F72  0A55               	xorlw	85
  3950  004F74  E007               	bz	l12197
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;main.c: 61: {
  3954                           ;main.c: 62: test_powerup();
  3955  004F76  ECCB  F01C         	call	_test_powerup	;wreg free
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;main.c: 63: DATAEE_WriteByte(0x00, 0x55);
  3959  004F7A  0E55               	movlw	85
  3960  004F7C  6FC6               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3961  004F7E  0E00               	movlw	0
  3962  004F80  EC94  F01C         	call	_DATAEE_WriteByte
  3963  004F84                     l12197:
  3964                           
  3965                           ;main.c: 64: }
  3966                           ;main.c: 67: operationType = USB;
  3967  004F84  0100               	movlb	0	; () banked
  3968  004F86  6B93               	clrf	_operationType& (0+255),b
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;main.c: 68: USBapp_handlerState(USB_STARTUP);
  3972  004F88  0E00               	movlw	0
  3973  004F8A  ECF1  F019         	call	_USBapp_handlerState
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;main.c: 70: oled_clear();
  3977  004F8E  EC88  F01A         	call	_oled_clear	;wreg free
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;main.c: 71: oled_putString("Microchip Mote",0,0);
  3981  004F92  0E7D               	movlw	high STR_1
  3982  004F94  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  3983  004F96  0E2D               	movlw	low STR_1
  3984  004F98  6FD3               	movwf	oled_putString@string& (0+255),b
  3985  004F9A  0E00               	movlw	0
  3986  004F9C  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  3987  004F9E  6BD6               	clrf	oled_putString@start_page& (0+255),b
  3988  004FA0  EC08  F020         	call	_oled_putString	;wreg free
  3989                           
  3990                           ;main.c: 72: oled_putString("   LoRa Demo  ",0,1);
  3991  004FA4  0E7D               	movlw	high STR_2
  3992  004FA6  0100               	movlb	0	; () banked
  3993  004FA8  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  3994  004FAA  0E1E               	movlw	low STR_2
  3995  004FAC  6FD3               	movwf	oled_putString@string& (0+255),b
  3996  004FAE  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  3997  004FB0  0E01               	movlw	1
  3998  004FB2  6FD6               	movwf	oled_putString@start_page& (0+255),b
  3999  004FB4  EC08  F020         	call	_oled_putString	;wreg free
  4000                           
  4001                           ;main.c: 73: oled_putString("   RC3 Code   ",0,3);
  4002  004FB8  0E7D               	movlw	high STR_3
  4003  004FBA  0100               	movlb	0	; () banked
  4004  004FBC  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4005  004FBE  0E0F               	movlw	low STR_3
  4006  004FC0  6FD3               	movwf	oled_putString@string& (0+255),b
  4007  004FC2  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4008  004FC4  0E03               	movlw	3
  4009  004FC6  6FD6               	movwf	oled_putString@start_page& (0+255),b
  4010  004FC8  EC08  F020         	call	_oled_putString	;wreg free
  4011                           
  4012                           ;main.c: 74: moteApp_delayms(700);
  4013  004FCC  0E02               	movlw	2
  4014  004FCE  0100               	movlb	0	; () banked
  4015  004FD0  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4016  004FD2  0EBC               	movlw	188
  4017  004FD4  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4018  004FD6  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4019  004FDA  D011               	goto	l12225
  4020  004FDC                     l55:
  4021  004FDC  D7FF               	goto	l55
  4022  004FDE                     l12211:
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;main.c: 86: USBapp_Handler();
  4026  004FDE  EC19  F021         	call	_USBapp_Handler	;wreg free
  4027                           
  4028                           ;main.c: 88: operationType = MOTE;
  4029  004FE2  0E01               	movlw	1
  4030  004FE4  0100               	movlb	0	; () banked
  4031  004FE6  6F93               	movwf	_operationType& (0+255),b
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;main.c: 89: MOTEapp_handlerState(MOTE_STARTUP);
  4035  004FE8  ECED  F019         	call	_MOTEapp_handlerState
  4036                           
  4037                           ;main.c: 90: break;
  4038  004FEC  D008               	goto	l12225
  4039  004FEE                     l12217:
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;main.c: 92: if (moteHandler() == MOTE_SWAP)
  4043  004FEE  ECA6  F02D         	call	_moteHandler	;wreg free
  4044  004FF2  0A04               	xorlw	4
  4045  004FF4  E104               	bnz	l12225
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;main.c: 93: {
  4049                           ;main.c: 95: operationType = USB;
  4050  004FF6  6B93               	clrf	_operationType& (0+255),b
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;main.c: 96: USBapp_handlerState(USB_STARTUP);
  4054  004FF8  0E00               	movlw	0
  4055  004FFA  ECF1  F019         	call	_USBapp_handlerState
  4056  004FFE                     l12225:
  4057                           
  4058                           ; BSR set to: 0
  4059  004FFE  5193               	movf	_operationType& (0+255),w,b
  4060                           
  4061                           ; Switch size 1, requested type "speed"
  4062                           ; Number of cases is 2, Range of values is 0 to 1
  4063                           ; switch strategies available:
  4064                           ; Name         Instructions Cycles
  4065                           ; simple_byte            7     4 (average)
  4066                           ;	Chosen strategy is simple_byte
  4067  005000  E0EE               	bz	l12211
  4068  005002  0A01               	xorlw	1	; case 1
  4069  005004  E0F4               	bz	l12217
  4070  005006  D7EA               	goto	l55
  4071  005008                     __end_of_main:
  4072                           	opt stack 0
  4073                           tblptru	equ	0xFF8
  4074                           tblptrh	equ	0xFF7
  4075                           tblptrl	equ	0xFF6
  4076                           tablat	equ	0xFF5
  4077                           intcon	equ	0xFF2
  4078                           postinc0	equ	0xFEE
  4079                           wreg	equ	0xFE8
  4080                           postdec1	equ	0xFE5
  4081                           fsr1l	equ	0xFE1
  4082                           
  4083 ;; *************** function _test_powerup *****************
  4084 ;; Defined at:
  4085 ;;		line 27 in file "../Includes/Board/poweruptest.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;		None               void
  4092 ;; Registers used:
  4093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : F/0
  4096 ;;		On exit  : F/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4099 ;;      Params:         0       0       0       0       0       0       0       0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4102 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4103 ;;Total ram usage:        0 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:   18
  4106 ;; This function calls:
  4107 ;;		_moteApp_delayms
  4108 ;;		_oled_clear
  4109 ;;		_test_adc
  4110 ;;		_test_comms
  4111 ;;		_test_leds
  4112 ;;		_test_oled
  4113 ;;		_test_switch
  4114 ;; This function is called by:
  4115 ;;		_main
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text1
  4120  003996                     __ptext1:
  4121                           	opt stack 0
  4122  003996                     _test_powerup:
  4123                           	opt stack 12
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;poweruptest.c: 30: test_oled();
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;incstack = 0
  4130  003996  EC54  F021         	call	_test_oled	;wreg free
  4131                           
  4132                           ;poweruptest.c: 31: moteApp_delayms(20);
  4133  00399A  0100               	movlb	0	; () banked
  4134  00399C  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4135  00399E  0E14               	movlw	20
  4136  0039A0  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4137  0039A2  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;poweruptest.c: 33: test_switch();
  4141  0039A6  EC0B  F025         	call	_test_switch	;wreg free
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;poweruptest.c: 35: oled_clear();
  4145  0039AA  EC88  F01A         	call	_oled_clear	;wreg free
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;poweruptest.c: 36: moteApp_delayms(20);
  4149  0039AE  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4150  0039B0  0E14               	movlw	20
  4151  0039B2  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4152  0039B4  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;poweruptest.c: 37: test_comms();
  4156  0039B8  ECE8  F01E         	call	_test_comms	;wreg free
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;poweruptest.c: 39: test_leds();
  4160  0039BC  EC92  F01E         	call	_test_leds	;wreg free
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;poweruptest.c: 41: test_adc();
  4164  0039C0  EC1B  F026         	call	_test_adc	;wreg free
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;poweruptest.c: 44: moteApp_delayms(20);
  4168  0039C4  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4169  0039C6  0E14               	movlw	20
  4170  0039C8  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4171  0039CA  EF81  F01B         	goto	_moteApp_delayms	;wreg free
  4172  0039CE                     __end_of_test_powerup:
  4173                           	opt stack 0
  4174                           tblptru	equ	0xFF8
  4175                           tblptrh	equ	0xFF7
  4176                           tblptrl	equ	0xFF6
  4177                           tablat	equ	0xFF5
  4178                           intcon	equ	0xFF2
  4179                           postinc0	equ	0xFEE
  4180                           wreg	equ	0xFE8
  4181                           postdec1	equ	0xFE5
  4182                           fsr1l	equ	0xFE1
  4183                           
  4184 ;; *************** function _test_switch *****************
  4185 ;; Defined at:
  4186 ;;		line 60 in file "../Includes/Board/poweruptest.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  timeout         2   18[BANK0 ] unsigned int 
  4191 ;;  buttonCheck     1   20[BANK0 ] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;		None               void
  4194 ;; Registers used:
  4195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4196 ;; Tracked objects:
  4197 ;;		On entry : F/0
  4198 ;;		On exit  : F/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4201 ;;      Params:         0       0       0       0       0       0       0       0       0
  4202 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4204 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4205 ;;Total ram usage:        3 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:   17
  4208 ;; This function calls:
  4209 ;;		_moteApp_delayms
  4210 ;;		_oled_clear
  4211 ;;		_oled_putString
  4212 ;; This function is called by:
  4213 ;;		_test_powerup
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text2
  4218  004A16                     __ptext2:
  4219                           	opt stack 0
  4220  004A16                     _test_switch:
  4221                           	opt stack 12
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;poweruptest.c: 62: uint16_t timeout = 500;
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;incstack = 0
  4228  004A16  0E01               	movlw	1
  4229  004A18  6FD9               	movwf	(test_switch@timeout+1)& (0+255),b
  4230  004A1A  0EF4               	movlw	244
  4231  004A1C  6FD8               	movwf	test_switch@timeout& (0+255),b
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;poweruptest.c: 63: uint8_t buttonCheck = 0x00;
  4235  004A1E  6BDA               	clrf	test_switch@buttonCheck& (0+255),b
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;poweruptest.c: 64: oled_clear();
  4239  004A20  EC88  F01A         	call	_oled_clear	;wreg free
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;poweruptest.c: 65: oled_putString("Button Test:",0,0);
  4243  004A24  0E7E               	movlw	high STR_10
  4244  004A26  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4245  004A28  0E03               	movlw	low STR_10
  4246  004A2A  6FD3               	movwf	oled_putString@string& (0+255),b
  4247  004A2C  0E00               	movlw	0
  4248  004A2E  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4249  004A30  6BD6               	clrf	oled_putString@start_page& (0+255),b
  4250  004A32  EC08  F020         	call	_oled_putString	;wreg free
  4251                           
  4252                           ;poweruptest.c: 67: if( (PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  4253  004A36  A082               	btfss	3970,0,c	;volatile
  4254  004A38  D002               	goto	l10617
  4255  004A3A  B282               	btfsc	3970,1,c	;volatile
  4256  004A3C  D00B               	goto	l10619
  4257  004A3E                     l10617:
  4258                           
  4259                           ;poweruptest.c: 68: {
  4260                           ;poweruptest.c: 69: oled_putString("Button FAIL",0,3);
  4261  004A3E  0E7E               	movlw	high STR_11
  4262  004A40  0100               	movlb	0	; () banked
  4263  004A42  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4264  004A44  0EA3               	movlw	low STR_11
  4265  004A46  6FD3               	movwf	oled_putString@string& (0+255),b
  4266  004A48  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4267  004A4A  0E03               	movlw	3
  4268  004A4C  6FD6               	movwf	oled_putString@start_page& (0+255),b
  4269  004A4E  EC08  F020         	call	_oled_putString	;wreg free
  4270                           
  4271                           ;poweruptest.c: 70: }
  4272  004A52  D030               	goto	l10637
  4273  004A54                     l10619:
  4274                           
  4275                           ;poweruptest.c: 71: else
  4276                           ;poweruptest.c: 72: {
  4277                           ;poweruptest.c: 73: oled_putString("Press Button",0,1);
  4278  004A54  0E7E               	movlw	high STR_12
  4279  004A56  0100               	movlb	0	; () banked
  4280  004A58  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4281  004A5A  0E2A               	movlw	low STR_12
  4282  004A5C  6FD3               	movwf	oled_putString@string& (0+255),b
  4283  004A5E  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4284  004A60  0E01               	movlw	1
  4285  004A62  6FD6               	movwf	oled_putString@start_page& (0+255),b
  4286  004A64  EC08  F020         	call	_oled_putString	;wreg free
  4287  004A68  D025               	goto	l10637
  4288  004A6A                     l120:
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;poweruptest.c: 76: {
  4292                           ;poweruptest.c: 77: if(PORTCbits.RC0 == 0)
  4293  004A6A  B082               	btfsc	3970,0,c	;volatile
  4294  004A6C  D00C               	goto	l10625
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;poweruptest.c: 78: {
  4298                           ;poweruptest.c: 79: oled_putString("Button1 PASS",0,2);
  4299  004A6E  0E7E               	movlw	high STR_13
  4300  004A70  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4301  004A72  0E10               	movlw	low STR_13
  4302  004A74  6FD3               	movwf	oled_putString@string& (0+255),b
  4303  004A76  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4304  004A78  0E02               	movlw	2
  4305  004A7A  6FD6               	movwf	oled_putString@start_page& (0+255),b
  4306  004A7C  EC08  F020         	call	_oled_putString	;wreg free
  4307                           
  4308                           ;poweruptest.c: 80: buttonCheck = buttonCheck + 0x08;
  4309  004A80  0E08               	movlw	8
  4310  004A82  0100               	movlb	0	; () banked
  4311  004A84  27DA               	addwf	test_switch@buttonCheck& (0+255),f,b
  4312  004A86                     l10625:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;poweruptest.c: 81: }
  4316                           ;poweruptest.c: 82: if(PORTCbits.RC1 == 0)
  4317  004A86  B282               	btfsc	3970,1,c	;volatile
  4318  004A88  D00C               	goto	l10631
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;poweruptest.c: 83: {
  4322                           ;poweruptest.c: 84: oled_putString("Button2 PASS",0,3);
  4323  004A8A  0E7E               	movlw	high STR_14
  4324  004A8C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4325  004A8E  0E1D               	movlw	low STR_14
  4326  004A90  6FD3               	movwf	oled_putString@string& (0+255),b
  4327  004A92  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4328  004A94  0E03               	movlw	3
  4329  004A96  6FD6               	movwf	oled_putString@start_page& (0+255),b
  4330  004A98  EC08  F020         	call	_oled_putString	;wreg free
  4331                           
  4332                           ;poweruptest.c: 85: buttonCheck = buttonCheck + 0x80;
  4333  004A9C  0E80               	movlw	128
  4334  004A9E  0100               	movlb	0	; () banked
  4335  004AA0  27DA               	addwf	test_switch@buttonCheck& (0+255),f,b
  4336  004AA2                     l10631:
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;poweruptest.c: 86: }
  4340                           ;poweruptest.c: 87: if (buttonCheck == 0x88)
  4341  004AA2  51DA               	movf	test_switch@buttonCheck& (0+255),w,b
  4342  004AA4  0A88               	xorlw	136
  4343  004AA6  B4D8               	btfsc	status,2,c
  4344  004AA8  0012               	return	
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;poweruptest.c: 90: }
  4348                           ;poweruptest.c: 91: moteApp_delayms(10);
  4349  004AAA  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4350  004AAC  0E0A               	movlw	10
  4351  004AAE  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4352  004AB0  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4353  004AB4                     l10637:
  4354  004AB4  0100               	movlb	0	; () banked
  4355  004AB6  07D8               	decf	test_switch@timeout& (0+255),f,b
  4356  004AB8  A0D8               	btfss	status,0,c
  4357  004ABA  07D9               	decf	(test_switch@timeout+1)& (0+255),f,b
  4358  004ABC  29D8               	incf	test_switch@timeout& (0+255),w,b
  4359  004ABE  B4D8               	btfsc	status,2,c
  4360  004AC0  29D9               	incf	(test_switch@timeout+1)& (0+255),w,b
  4361  004AC2  B4D8               	btfsc	status,2,c
  4362                           
  4363                           ; BSR set to: 0
  4364  004AC4  0012               	return	
  4365  004AC6  D7D1               	goto	l120
  4366  004AC8                     __end_of_test_switch:
  4367                           	opt stack 0
  4368                           tblptru	equ	0xFF8
  4369                           tblptrh	equ	0xFF7
  4370                           tblptrl	equ	0xFF6
  4371                           tablat	equ	0xFF5
  4372                           intcon	equ	0xFF2
  4373                           postinc0	equ	0xFEE
  4374                           wreg	equ	0xFE8
  4375                           postdec1	equ	0xFE5
  4376                           fsr1l	equ	0xFE1
  4377                           status	equ	0xFD8
  4378                           
  4379 ;; *************** function _test_oled *****************
  4380 ;; Defined at:
  4381 ;;		line 47 in file "../Includes/Board/poweruptest.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;		None
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;		None
  4386 ;; Return value:  Size  Location     Type
  4387 ;;		None               void
  4388 ;; Registers used:
  4389 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4390 ;; Tracked objects:
  4391 ;;		On entry : F/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4395 ;;      Params:         0       0       0       0       0       0       0       0       0
  4396 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4398 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4399 ;;Total ram usage:        0 bytes
  4400 ;; Hardware stack levels used:    1
  4401 ;; Hardware stack levels required when called:   17
  4402 ;; This function calls:
  4403 ;;		_oled_clear
  4404 ;;		_oled_putString
  4405 ;; This function is called by:
  4406 ;;		_test_powerup
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text3
  4411  0042A8                     __ptext3:
  4412                           	opt stack 0
  4413  0042A8                     _test_oled:
  4414                           	opt stack 12
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;poweruptest.c: 49: oled_clear();
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;incstack = 0
  4421  0042A8  EC88  F01A         	call	_oled_clear	;wreg free
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;poweruptest.c: 51: oled_putString("MoTe v .",0,0);
  4425  0042AC  0E7F               	movlw	high STR_4
  4426  0042AE  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4427  0042B0  0E63               	movlw	low STR_4
  4428  0042B2  6FD3               	movwf	oled_putString@string& (0+255),b
  4429  0042B4  0E00               	movlw	0
  4430  0042B6  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4431  0042B8  6BD6               	clrf	oled_putString@start_page& (0+255),b
  4432  0042BA  EC08  F020         	call	_oled_putString	;wreg free
  4433                           
  4434                           ;poweruptest.c: 52: oled_putString("0",0,6);
  4435  0042BE  0E7C               	movlw	high (STR_97+13)
  4436  0042C0  0100               	movlb	0	; () banked
  4437  0042C2  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4438  0042C4  0E86               	movlw	low (STR_97+13)
  4439  0042C6  6FD3               	movwf	oled_putString@string& (0+255),b
  4440  0042C8  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4441  0042CA  0E06               	movlw	6
  4442  0042CC  6FD6               	movwf	oled_putString@start_page& (0+255),b
  4443  0042CE  EC08  F020         	call	_oled_putString	;wreg free
  4444                           
  4445                           ;poweruptest.c: 53: oled_putString("1",0,8);
  4446  0042D2  0E7C               	movlw	high (STR_98+13)
  4447  0042D4  0100               	movlb	0	; () banked
  4448  0042D6  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4449  0042D8  0E95               	movlw	low (STR_98+13)
  4450  0042DA  6FD3               	movwf	oled_putString@string& (0+255),b
  4451  0042DC  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4452  0042DE  0E08               	movlw	8
  4453  0042E0  6FD6               	movwf	oled_putString@start_page& (0+255),b
  4454  0042E2  EC08  F020         	call	_oled_putString	;wreg free
  4455                           
  4456                           ;poweruptest.c: 54: oled_putString("Build Date/Time",0,1);
  4457  0042E6  0E7C               	movlw	high STR_7
  4458  0042E8  0100               	movlb	0	; () banked
  4459  0042EA  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4460  0042EC  0E3C               	movlw	low STR_7
  4461  0042EE  6FD3               	movwf	oled_putString@string& (0+255),b
  4462  0042F0  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4463  0042F2  0E01               	movlw	1
  4464  0042F4  6FD6               	movwf	oled_putString@start_page& (0+255),b
  4465  0042F6  EC08  F020         	call	_oled_putString	;wreg free
  4466                           
  4467                           ;poweruptest.c: 55: oled_putString("Nov 13 2015",0,2);
  4468  0042FA  0E7E               	movlw	high STR_8
  4469  0042FC  0100               	movlb	0	; () banked
  4470  0042FE  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4471  004300  0E97               	movlw	low STR_8
  4472  004302  6FD3               	movwf	oled_putString@string& (0+255),b
  4473  004304  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4474  004306  0E02               	movlw	2
  4475  004308  6FD6               	movwf	oled_putString@start_page& (0+255),b
  4476  00430A  EC08  F020         	call	_oled_putString	;wreg free
  4477                           
  4478                           ;poweruptest.c: 56: oled_putString("12:33:26",0,3);
  4479  00430E  0E7F               	movlw	high STR_9
  4480  004310  0100               	movlb	0	; () banked
  4481  004312  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4482  004314  0E6C               	movlw	low STR_9
  4483  004316  6FD3               	movwf	oled_putString@string& (0+255),b
  4484  004318  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4485  00431A  0E03               	movlw	3
  4486  00431C  6FD6               	movwf	oled_putString@start_page& (0+255),b
  4487  00431E  EF08  F020         	goto	_oled_putString	;wreg free
  4488  004322                     __end_of_test_oled:
  4489                           	opt stack 0
  4490                           tblptru	equ	0xFF8
  4491                           tblptrh	equ	0xFF7
  4492                           tblptrl	equ	0xFF6
  4493                           tablat	equ	0xFF5
  4494                           intcon	equ	0xFF2
  4495                           postinc0	equ	0xFEE
  4496                           wreg	equ	0xFE8
  4497                           postdec1	equ	0xFE5
  4498                           fsr1l	equ	0xFE1
  4499                           status	equ	0xFD8
  4500                           
  4501 ;; *************** function _test_leds *****************
  4502 ;; Defined at:
  4503 ;;		line 108 in file "../Includes/Board/poweruptest.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;		None
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;		None               void
  4510 ;; Registers used:
  4511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : F/0
  4514 ;;		On exit  : F/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4517 ;;      Params:         0       0       0       0       0       0       0       0       0
  4518 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4520 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4521 ;;Total ram usage:        0 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:   16
  4524 ;; This function calls:
  4525 ;;		_moteApp_delayms
  4526 ;;		_oled_putString
  4527 ;; This function is called by:
  4528 ;;		_test_powerup
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text4
  4533  003D24                     __ptext4:
  4534                           	opt stack 0
  4535  003D24                     _test_leds:
  4536                           	opt stack 13
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;poweruptest.c: 110: oled_putString("LED Test:",0,1);
  4540                           
  4541                           ;incstack = 0
  4542  003D24  0E7F               	movlw	high STR_16
  4543  003D26  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4544  003D28  0E23               	movlw	low STR_16
  4545  003D2A  6FD3               	movwf	oled_putString@string& (0+255),b
  4546  003D2C  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4547  003D2E  0E01               	movlw	1
  4548  003D30  6FD6               	movwf	oled_putString@start_page& (0+255),b
  4549  003D32  EC08  F020         	call	_oled_putString	;wreg free
  4550                           
  4551                           ;poweruptest.c: 112: LATAbits.LATA6 = 1;
  4552  003D36  8C89               	bsf	3977,6,c	;volatile
  4553                           
  4554                           ;poweruptest.c: 113: LATAbits.LATA7 = 1;
  4555  003D38  8E89               	bsf	3977,7,c	;volatile
  4556                           
  4557                           ;poweruptest.c: 114: moteApp_delayms(500);
  4558  003D3A  0E01               	movlw	1
  4559  003D3C  0100               	movlb	0	; () banked
  4560  003D3E  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4561  003D40  0EF4               	movlw	244
  4562  003D42  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4563  003D44  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;poweruptest.c: 115: LATAbits.LATA6 = 0;
  4567  003D48  9C89               	bcf	3977,6,c	;volatile
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;poweruptest.c: 116: LATAbits.LATA7 = 0;
  4571  003D4A  9E89               	bcf	3977,7,c	;volatile
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;poweruptest.c: 117: moteApp_delayms(500);
  4575  003D4C  0E01               	movlw	1
  4576  003D4E  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4577  003D50  0EF4               	movlw	244
  4578  003D52  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4579  003D54  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;poweruptest.c: 118: LATAbits.LATA6 = 1;
  4583  003D58  8C89               	bsf	3977,6,c	;volatile
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;poweruptest.c: 119: LATAbits.LATA7 = 1;
  4587  003D5A  8E89               	bsf	3977,7,c	;volatile
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;poweruptest.c: 120: moteApp_delayms(500);
  4591  003D5C  0E01               	movlw	1
  4592  003D5E  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4593  003D60  0EF4               	movlw	244
  4594  003D62  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4595  003D64  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;poweruptest.c: 121: LATAbits.LATA6 = 0;
  4599  003D68  9C89               	bcf	3977,6,c	;volatile
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;poweruptest.c: 122: LATAbits.LATA7 = 0;
  4603  003D6A  9E89               	bcf	3977,7,c	;volatile
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;poweruptest.c: 123: moteApp_delayms(500);
  4607  003D6C  0E01               	movlw	1
  4608  003D6E  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4609  003D70  0EF4               	movlw	244
  4610  003D72  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4611  003D74  EF81  F01B         	goto	_moteApp_delayms	;wreg free
  4612  003D78                     __end_of_test_leds:
  4613                           	opt stack 0
  4614                           tblptru	equ	0xFF8
  4615                           tblptrh	equ	0xFF7
  4616                           tblptrl	equ	0xFF6
  4617                           tablat	equ	0xFF5
  4618                           intcon	equ	0xFF2
  4619                           postinc0	equ	0xFEE
  4620                           wreg	equ	0xFE8
  4621                           postdec1	equ	0xFE5
  4622                           fsr1l	equ	0xFE1
  4623                           status	equ	0xFD8
  4624                           
  4625 ;; *************** function _test_comms *****************
  4626 ;; Defined at:
  4627 ;;		line 95 in file "../Includes/Board/poweruptest.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;		None               void
  4634 ;; Registers used:
  4635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4636 ;; Tracked objects:
  4637 ;;		On entry : F/0
  4638 ;;		On exit  : F/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4641 ;;      Params:         0       0       0       0       0       0       0       0       0
  4642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4644 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4645 ;;Total ram usage:        0 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:   16
  4648 ;; This function calls:
  4649 ;;		_moteApp_delayms
  4650 ;;		_moteApp_toggleLeds
  4651 ;;		_oled_putString
  4652 ;; This function is called by:
  4653 ;;		_test_powerup
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text5
  4658  003DD0                     __ptext5:
  4659                           	opt stack 0
  4660  003DD0                     _test_comms:
  4661                           	opt stack 13
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;poweruptest.c: 97: oled_putString("Comm Test:",0,0);
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;incstack = 0
  4668  003DD0  0E7E               	movlw	high STR_15
  4669  003DD2  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4670  003DD4  0EE6               	movlw	low STR_15
  4671  003DD6  6FD3               	movwf	oled_putString@string& (0+255),b
  4672  003DD8  0E00               	movlw	0
  4673  003DDA  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4674  003DDC  6BD6               	clrf	oled_putString@start_page& (0+255),b
  4675  003DDE  EC08  F020         	call	_oled_putString	;wreg free
  4676                           
  4677                           ;poweruptest.c: 98: moteApp_toggleLeds(1);
  4678  003DE2  0E01               	movlw	1
  4679  003DE4  EC3C  F020         	call	_moteApp_toggleLeds
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;poweruptest.c: 99: moteApp_delayms(500);
  4683  003DE8  0E01               	movlw	1
  4684  003DEA  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4685  003DEC  0EF4               	movlw	244
  4686  003DEE  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4687  003DF0  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;poweruptest.c: 100: moteApp_toggleLeds(0);
  4691  003DF4  0E00               	movlw	0
  4692  003DF6  EC3C  F020         	call	_moteApp_toggleLeds
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;poweruptest.c: 101: moteApp_delayms(500);
  4696  003DFA  0E01               	movlw	1
  4697  003DFC  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4698  003DFE  0EF4               	movlw	244
  4699  003E00  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4700  003E02  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;poweruptest.c: 102: moteApp_toggleLeds(1);
  4704  003E06  0E01               	movlw	1
  4705  003E08  EC3C  F020         	call	_moteApp_toggleLeds
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;poweruptest.c: 103: moteApp_delayms(500);
  4709  003E0C  0E01               	movlw	1
  4710  003E0E  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4711  003E10  0EF4               	movlw	244
  4712  003E12  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4713  003E14  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;poweruptest.c: 104: moteApp_toggleLeds(0);
  4717  003E18  0E00               	movlw	0
  4718  003E1A  EC3C  F020         	call	_moteApp_toggleLeds
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;poweruptest.c: 105: moteApp_delayms(500);
  4722  003E1E  0E01               	movlw	1
  4723  003E20  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4724  003E22  0EF4               	movlw	244
  4725  003E24  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4726  003E26  EF81  F01B         	goto	_moteApp_delayms	;wreg free
  4727  003E2A                     __end_of_test_comms:
  4728                           	opt stack 0
  4729                           tblptru	equ	0xFF8
  4730                           tblptrh	equ	0xFF7
  4731                           tblptrl	equ	0xFF6
  4732                           tablat	equ	0xFF5
  4733                           intcon	equ	0xFF2
  4734                           postinc0	equ	0xFEE
  4735                           wreg	equ	0xFE8
  4736                           postdec1	equ	0xFE5
  4737                           fsr1l	equ	0xFE1
  4738                           status	equ	0xFD8
  4739                           
  4740 ;; *************** function _moteApp_toggleLeds *****************
  4741 ;; Defined at:
  4742 ;;		line 1365 in file "../Includes/Board/MOTEapp.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  state           1    wreg     unsigned char 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  state           1    5[BANK0 ] unsigned char 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;		None               void
  4749 ;; Registers used:
  4750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : F/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4756 ;;      Params:         0       0       0       0       0       0       0       0       0
  4757 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4759 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4760 ;;Total ram usage:        1 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:   14
  4763 ;; This function calls:
  4764 ;;		_moteApp_delayms
  4765 ;;		_sendCommand
  4766 ;; This function is called by:
  4767 ;;		_test_comms
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text6
  4772  004078                     __ptext6:
  4773                           	opt stack 0
  4774  004078                     _moteApp_toggleLeds:
  4775                           	opt stack 14
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;incstack = 0
  4779                           ;moteApp_toggleLeds@state stored from wreg
  4780  004078  0100               	movlb	0	; () banked
  4781  00407A  6FCB               	movwf	moteApp_toggleLeds@state& (0+255),b
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;MOTEapp.c: 1367: moteApp_delayms(50);
  4785  00407C  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4786  00407E  0E32               	movlw	50
  4787  004080  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4788  004082  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;MOTEapp.c: 1368: if (state)
  4792  004086  51CB               	movf	moteApp_toggleLeds@state& (0+255),w,b
  4793  004088  E013               	bz	l10201
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;MOTEapp.c: 1369: {
  4797                           ;MOTEapp.c: 1370: sendCommand("sys set pindig GPIO10 1\r\n");
  4798  00408A  0E7A               	movlw	high STR_254
  4799  00408C  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
  4800  00408E  0E3E               	movlw	low STR_254
  4801  004090  6FC7               	movwf	sendCommand@string& (0+255),b
  4802  004092  EC96  F01B         	call	_sendCommand	;wreg free
  4803                           
  4804                           ;MOTEapp.c: 1371: moteApp_delayms(50);
  4805  004096  0100               	movlb	0	; () banked
  4806  004098  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4807  00409A  0E32               	movlw	50
  4808  00409C  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4809  00409E  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;MOTEapp.c: 1372: sendCommand("sys set pindig GPIO11 1\r\n");
  4813  0040A2  0E7A               	movlw	high STR_255
  4814  0040A4  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
  4815  0040A6  0E58               	movlw	low STR_255
  4816  0040A8  6FC7               	movwf	sendCommand@string& (0+255),b
  4817  0040AA  EC96  F01B         	call	_sendCommand	;wreg free
  4818                           
  4819                           ;MOTEapp.c: 1373: }
  4820  0040AE  D012               	goto	l709
  4821  0040B0                     l10201:
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;MOTEapp.c: 1374: else
  4825                           ;MOTEapp.c: 1375: {
  4826                           ;MOTEapp.c: 1376: sendCommand("sys set pindig GPIO10 0\r\n");
  4827  0040B0  0E7A               	movlw	high STR_256
  4828  0040B2  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
  4829  0040B4  0E0A               	movlw	low STR_256
  4830  0040B6  6FC7               	movwf	sendCommand@string& (0+255),b
  4831  0040B8  EC96  F01B         	call	_sendCommand	;wreg free
  4832                           
  4833                           ;MOTEapp.c: 1377: moteApp_delayms(50);
  4834  0040BC  0100               	movlb	0	; () banked
  4835  0040BE  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4836  0040C0  0E32               	movlw	50
  4837  0040C2  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4838  0040C4  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;MOTEapp.c: 1378: sendCommand("sys set pindig GPIO11 0\r\n");
  4842  0040C8  0E7A               	movlw	high STR_257
  4843  0040CA  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
  4844  0040CC  0E24               	movlw	low STR_257
  4845  0040CE  6FC7               	movwf	sendCommand@string& (0+255),b
  4846  0040D0  EC96  F01B         	call	_sendCommand	;wreg free
  4847  0040D4                     l709:
  4848                           
  4849                           ;MOTEapp.c: 1379: }
  4850                           ;MOTEapp.c: 1380: moteApp_delayms(50);
  4851  0040D4  0100               	movlb	0	; () banked
  4852  0040D6  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4853  0040D8  0E32               	movlw	50
  4854  0040DA  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4855  0040DC  EF81  F01B         	goto	_moteApp_delayms	;wreg free
  4856  0040E0                     __end_of_moteApp_toggleLeds:
  4857                           	opt stack 0
  4858                           tblptru	equ	0xFF8
  4859                           tblptrh	equ	0xFF7
  4860                           tblptrl	equ	0xFF6
  4861                           tablat	equ	0xFF5
  4862                           intcon	equ	0xFF2
  4863                           postinc0	equ	0xFEE
  4864                           wreg	equ	0xFE8
  4865                           postdec1	equ	0xFE5
  4866                           fsr1l	equ	0xFE1
  4867                           status	equ	0xFD8
  4868                           
  4869 ;; *************** function _test_adc *****************
  4870 ;; Defined at:
  4871 ;;		line 126 in file "../Includes/Board/poweruptest.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;		None
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  Traw            2   30[BANK0 ] unsigned int 
  4876 ;;  L               2   28[BANK0 ] unsigned int 
  4877 ;;  F               2    0        unsigned int 
  4878 ;;  count           1   33[BANK0 ] unsigned char 
  4879 ;;  T               1   32[BANK0 ] unsigned char 
  4880 ;; Return value:  Size  Location     Type
  4881 ;;		None               void
  4882 ;; Registers used:
  4883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4884 ;; Tracked objects:
  4885 ;;		On entry : F/0
  4886 ;;		On exit  : F/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4889 ;;      Params:         0       0       0       0       0       0       0       0       0
  4890 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4891 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4892 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4893 ;;Total ram usage:        6 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:   17
  4896 ;; This function calls:
  4897 ;;		_ADC_GetConversion
  4898 ;;		_ADC_TempConversion
  4899 ;;		_moteApp_delayms
  4900 ;;		_oled_clear
  4901 ;;		_oled_putChar
  4902 ;;		_oled_putString
  4903 ;;		_oled_putUint16
  4904 ;;		_oled_putUint8
  4905 ;; This function is called by:
  4906 ;;		_test_powerup
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text7
  4911  004C36                     __ptext7:
  4912                           	opt stack 0
  4913  004C36                     _test_adc:
  4914                           	opt stack 12
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;poweruptest.c: 128: uint16_t L,Traw,F;
  4918                           ;poweruptest.c: 129: uint8_t count, T;
  4919                           ;poweruptest.c: 131: oled_clear();
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;incstack = 0
  4923  004C36  EC88  F01A         	call	_oled_clear	;wreg free
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;poweruptest.c: 132: oled_putString("ADC Test",0,0);
  4927  004C3A  0E7F               	movlw	high STR_17
  4928  004C3C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4929  004C3E  0E7E               	movlw	low STR_17
  4930  004C40  6FD3               	movwf	oled_putString@string& (0+255),b
  4931  004C42  0E00               	movlw	0
  4932  004C44  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4933  004C46  6BD6               	clrf	oled_putString@start_page& (0+255),b
  4934  004C48  EC08  F020         	call	_oled_putString	;wreg free
  4935                           
  4936                           ;poweruptest.c: 133: oled_putString("Temp  =",0,1);
  4937  004C4C  0E7F               	movlw	high STR_18
  4938  004C4E  0100               	movlb	0	; () banked
  4939  004C50  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4940  004C52  0EA7               	movlw	low STR_18
  4941  004C54  6FD3               	movwf	oled_putString@string& (0+255),b
  4942  004C56  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4943  004C58  0E01               	movlw	1
  4944  004C5A  6FD6               	movwf	oled_putString@start_page& (0+255),b
  4945  004C5C  EC08  F020         	call	_oled_putString	;wreg free
  4946                           
  4947                           ;poweruptest.c: 134: oled_putChar('C',14,1);
  4948  004C60  0E0E               	movlw	14
  4949  004C62  0100               	movlb	0	; () banked
  4950  004C64  6FC9               	movwf	oled_putChar@station_dot& (0+255),b
  4951  004C66  0E01               	movlw	1
  4952  004C68  6FCA               	movwf	oled_putChar@start_page& (0+255),b
  4953  004C6A  0E43               	movlw	67
  4954  004C6C  ECA6  F020         	call	_oled_putChar
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;poweruptest.c: 135: oled_putString("Light =",0,2);
  4958  004C70  0E7F               	movlw	high STR_19
  4959  004C72  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  4960  004C74  0EAF               	movlw	low STR_19
  4961  004C76  6FD3               	movwf	oled_putString@string& (0+255),b
  4962  004C78  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  4963  004C7A  0E02               	movlw	2
  4964  004C7C  6FD6               	movwf	oled_putString@start_page& (0+255),b
  4965  004C7E  EC08  F020         	call	_oled_putString	;wreg free
  4966                           
  4967                           ;poweruptest.c: 137: for(count=0;count< 50;count++)
  4968  004C82  0100               	movlb	0	; () banked
  4969  004C84  6BE7               	clrf	test_adc@count& (0+255),b
  4970  004C86                     l10697:
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;poweruptest.c: 138: {
  4974                           ;poweruptest.c: 140: moteApp_delayms(50);
  4975  004C86  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4976  004C88  0E32               	movlw	50
  4977  004C8A  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4978  004C8C  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4979                           
  4980                           ;poweruptest.c: 141: Traw = ADC_GetConversion(Temp_channel);
  4981  004C90  0E02               	movlw	2
  4982  004C92  ECAF  F01C         	call	_ADC_GetConversion
  4983  004C96  C0C6  F0E4         	movff	?_ADC_GetConversion,test_adc@Traw
  4984  004C9A  C0C7  F0E5         	movff	?_ADC_GetConversion+1,test_adc@Traw+1
  4985                           
  4986                           ;poweruptest.c: 142: T = ADC_TempConversion(Traw);
  4987  004C9E  51E4               	movf	test_adc@Traw& (0+255),w,b
  4988  004CA0  ECEA  F01A         	call	_ADC_TempConversion
  4989  004CA4  6FE6               	movwf	test_adc@T& (0+255),b
  4990                           
  4991                           ;poweruptest.c: 144: moteApp_delayms(50);
  4992  004CA6  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4993  004CA8  0E32               	movlw	50
  4994  004CAA  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  4995  004CAC  EC81  F01B         	call	_moteApp_delayms	;wreg free
  4996                           
  4997                           ;poweruptest.c: 145: L = ADC_GetConversion(Light_channel);
  4998  004CB0  0E03               	movlw	3
  4999  004CB2  ECAF  F01C         	call	_ADC_GetConversion
  5000  004CB6  C0C6  F0E2         	movff	?_ADC_GetConversion,test_adc@L
  5001  004CBA  C0C7  F0E3         	movff	?_ADC_GetConversion+1,test_adc@L+1
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;poweruptest.c: 147: oled_putUint8(T,10,1);
  5005  004CBE  0E0A               	movlw	10
  5006  004CC0  6FD8               	movwf	oled_putUint8@station_dot& (0+255),b
  5007  004CC2  0E01               	movlw	1
  5008  004CC4  6FD9               	movwf	oled_putUint8@start_page& (0+255),b
  5009  004CC6  51E6               	movf	test_adc@T& (0+255),w,b
  5010  004CC8  ECBC  F01E         	call	_oled_putUint8
  5011                           
  5012                           ;poweruptest.c: 148: oled_putUint16(L,10,2);
  5013  004CCC  C0E2  F0D8         	movff	test_adc@L,oled_putUint16@number
  5014  004CD0  C0E3  F0D9         	movff	test_adc@L+1,oled_putUint16@number+1
  5015  004CD4  0E0A               	movlw	10
  5016  004CD6  0100               	movlb	0	; () banked
  5017  004CD8  6FDA               	movwf	oled_putUint16@station_dot& (0+255),b
  5018  004CDA  0E02               	movlw	2
  5019  004CDC  6FDB               	movwf	oled_putUint16@start_page& (0+255),b
  5020  004CDE  EC97  F02A         	call	_oled_putUint16	;wreg free
  5021  004CE2  0100               	movlb	0	; () banked
  5022  004CE4  2BE7               	incf	test_adc@count& (0+255),f,b
  5023                           
  5024                           ; BSR set to: 0
  5025  004CE6  0E31               	movlw	49
  5026  004CE8  65E7               	cpfsgt	test_adc@count& (0+255),b
  5027  004CEA  D7CD               	goto	l10697
  5028  004CEC  0C31               	retlw	49
  5029  004CEE                     __end_of_test_adc:
  5030                           	opt stack 0
  5031                           tblptru	equ	0xFF8
  5032                           tblptrh	equ	0xFF7
  5033                           tblptrl	equ	0xFF6
  5034                           tablat	equ	0xFF5
  5035                           intcon	equ	0xFF2
  5036                           postinc0	equ	0xFEE
  5037                           wreg	equ	0xFE8
  5038                           postdec1	equ	0xFE5
  5039                           fsr1l	equ	0xFE1
  5040                           status	equ	0xFD8
  5041                           
  5042 ;; *************** function _moteHandler *****************
  5043 ;; Defined at:
  5044 ;;		line 159 in file "../Includes/Board/MOTEapp.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;		None
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  i               1   48[BANK0 ] unsigned char 
  5049 ;;  i               1   47[BANK0 ] unsigned char 
  5050 ;;  Traw            2   43[BANK0 ] unsigned int 
  5051 ;;  readMessage     1   49[BANK0 ] unsigned char 
  5052 ;;  buttonPress     1   46[BANK0 ] enum E7122
  5053 ;;  s2Button        1   45[BANK0 ] unsigned char 
  5054 ;;  gotoNextStat    1   42[BANK0 ] unsigned char 
  5055 ;;  gotoSleep       1   41[BANK0 ] unsigned char 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  1    wreg      enum E8067
  5058 ;; Registers used:
  5059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : F/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5065 ;;      Params:         0       0       0       0       0       0       0       0       0
  5066 ;;      Locals:         0       9       0       0       0       0       0       0       0
  5067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5068 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5069 ;;Total ram usage:        9 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:   20
  5072 ;; This function calls:
  5073 ;;		_ADC_GetConversion
  5074 ;;		_ADC_TempConversion
  5075 ;;		_MOTEapp_TimerBasedTask
  5076 ;;		_MOTEapp_getModemResponse
  5077 ;;		_TMRapp_ClearBitFlags
  5078 ;;		_TMRapp_Handler
  5079 ;;		_moteApp_delayms
  5080 ;;		_moteJoiningProcess
  5081 ;;		_moteRunningProcess
  5082 ;;		_oled_clear
  5083 ;;		_oled_putString
  5084 ;;		_service_pushbutton
  5085 ;; This function is called by:
  5086 ;;		_main
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text8
  5091  005B4C                     __ptext8:
  5092                           	opt stack 0
  5093  005B4C                     _moteHandler:
  5094                           	opt stack 10
  5095                           
  5096                           ;MOTEapp.c: 161: bool gotoSleep = 0;
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;incstack = 0
  5100  005B4C  0100               	movlb	0	; () banked
  5101  005B4E  6BEF               	clrf	moteHandler@gotoSleep& (0+255),b
  5102                           
  5103                           ;MOTEapp.c: 162: bool gotoNextState = 0;
  5104  005B50  6BF0               	clrf	moteHandler@gotoNextState& (0+255),b
  5105                           
  5106                           ;MOTEapp.c: 163: bool s2Button = 0;
  5107  005B52  6BF3               	clrf	moteHandler@s2Button& (0+255),b
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;MOTEapp.c: 168: if (PORTAbits.RA0)
  5111                           
  5112                           ; BSR set to: 0
  5113  005B54  A080               	btfss	3968,0,c	;volatile
  5114  005B56  D002               	goto	l12065
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;MOTEapp.c: 169: moteState = MOTE_SWAP;
  5118  005B58  0E04               	movlw	4
  5119  005B5A  6FFB               	movwf	_moteState& (0+255),b
  5120  005B5C                     l12065:
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;MOTEapp.c: 172: if ( appTimer.mSecTick )
  5124  005B5C  A18C               	btfss	_appTimer& (0+255),0,b
  5125  005B5E  D007               	goto	l12073
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;MOTEapp.c: 173: {
  5129                           ;MOTEapp.c: 175: TMRapp_ClearBitFlags();
  5130  005B60  ECE5  F019         	call	_TMRapp_ClearBitFlags	;wreg free
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;MOTEapp.c: 177: TMRapp_Handler();
  5134  005B64  ECB2  F029         	call	_TMRapp_Handler	;wreg free
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;MOTEapp.c: 178: MOTEapp_TimerBasedTask(appTimer);
  5138  005B68  518C               	movf	_appTimer& (0+255),w,b
  5139  005B6A  EC0C  F01A         	call	_MOTEapp_TimerBasedTask
  5140  005B6E                     l12073:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;MOTEapp.c: 179: }
  5144                           ;MOTEapp.c: 182: buttonPress = service_pushbutton();
  5145  005B6E  EC1B  F01E         	call	_service_pushbutton	;wreg free
  5146  005B72  6FF4               	movwf	moteHandler@buttonPress& (0+255),b
  5147                           
  5148                           ;MOTEapp.c: 183: if (buttonPress == ShortPress1)
  5149  005B74  05F4               	decf	moteHandler@buttonPress& (0+255),w,b
  5150  005B76  E104               	bnz	l12079
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;MOTEapp.c: 184: {
  5154                           ;MOTEapp.c: 185: secTicker = 0;
  5155  005B78  6B97               	clrf	_secTicker& (0+255),b
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;MOTEapp.c: 186: gotoNextState = 1;
  5159  005B7A  0E01               	movlw	1
  5160  005B7C  6FF0               	movwf	moteHandler@gotoNextState& (0+255),b
  5161                           
  5162                           ;MOTEapp.c: 187: }
  5163  005B7E  D006               	goto	l12085
  5164  005B80                     l12079:
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;MOTEapp.c: 188: else if (buttonPress == ShortPress2)
  5168  005B80  51F4               	movf	moteHandler@buttonPress& (0+255),w,b
  5169  005B82  0A02               	xorlw	2
  5170  005B84  E103               	bnz	l12085
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;MOTEapp.c: 189: {
  5174                           ;MOTEapp.c: 190: secTicker = 0;
  5175  005B86  6B97               	clrf	_secTicker& (0+255),b
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;MOTEapp.c: 191: s2Button = 1;
  5179  005B88  0E01               	movlw	1
  5180  005B8A  6FF3               	movwf	moteHandler@s2Button& (0+255),b
  5181  005B8C                     l12085:
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;MOTEapp.c: 192: }
  5185                           ;MOTEapp.c: 195: if ( MOTEapp_getModemResponse() )
  5186  005B8C  ECF5  F01D         	call	_MOTEapp_getModemResponse	;wreg free
  5187  005B90  0900               	iorlw	0
  5188  005B92  E003               	bz	l324
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;MOTEapp.c: 196: readMessage = 1;
  5192  005B94  0E01               	movlw	1
  5193  005B96  6FF7               	movwf	moteHandler@readMessage& (0+255),b
  5194  005B98  D001               	goto	l12089
  5195  005B9A                     l324:
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;MOTEapp.c: 197: else
  5199                           ;MOTEapp.c: 198: readMessage = 0;
  5200  005B9A  6BF7               	clrf	moteHandler@readMessage& (0+255),b
  5201  005B9C                     l12089:
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;MOTEapp.c: 201: if ( (runningState == runningUplink) || (runningState == runningSensorM
      +                          enu) )
  5205  005B9C  5196               	movf	_runningState& (0+255),w,b
  5206  005B9E  0A06               	xorlw	6
  5207  005BA0  E003               	bz	l12093
  5208                           
  5209                           ; BSR set to: 0
  5210  005BA2  5196               	movf	_runningState& (0+255),w,b
  5211  005BA4  0A02               	xorlw	2
  5212  005BA6  E137               	bnz	l12129
  5213  005BA8                     l12093:
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;MOTEapp.c: 202: {
  5217                           ;MOTEapp.c: 204: if (m10SecTicker >= 5)
  5218  005BA8  0E04               	movlw	4
  5219  005BAA  6591               	cpfsgt	_m10SecTicker& (0+255),b
  5220  005BAC  D034               	goto	l12129
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;MOTEapp.c: 205: {
  5224                           ;MOTEapp.c: 206: uint16_t Traw = 0;
  5225  005BAE  6BF1               	clrf	moteHandler@Traw& (0+255),b
  5226  005BB0  6BF2               	clrf	(moteHandler@Traw+1)& (0+255),b
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;MOTEapp.c: 207: moteApp_delayms(10);
  5230  005BB2  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5231  005BB4  0E0A               	movlw	10
  5232  005BB6  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  5233  005BB8  EC81  F01B         	call	_moteApp_delayms	;wreg free
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;MOTEapp.c: 208: for(uint8_t i = 32; i>0; i--)
  5237  005BBC  0E20               	movlw	32
  5238  005BBE  6FF5               	movwf	moteHandler@i& (0+255),b
  5239  005BC0                     l12105:
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;MOTEapp.c: 209: {
  5243                           ;MOTEapp.c: 210: light = (light + ADC_GetConversion(Light_channel)) / 2;
  5244  005BC0  0E03               	movlw	3
  5245  005BC2  ECAF  F01C         	call	_ADC_GetConversion
  5246  005BC6  517A               	movf	_light& (0+255),w,b
  5247  005BC8  27C6               	addwf	?_ADC_GetConversion& (0+255),f,b
  5248  005BCA  517B               	movf	(_light+1)& (0+255),w,b
  5249  005BCC  23C7               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5250  005BCE  90D8               	bcf	status,0,c
  5251  005BD0  31C7               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5252  005BD2  6F7B               	movwf	(_light+1)& (0+255),b
  5253  005BD4  31C6               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5254  005BD6  6F7A               	movwf	_light& (0+255),b
  5255                           
  5256                           ; BSR set to: 0
  5257  005BD8  07F5               	decf	moteHandler@i& (0+255),f,b
  5258                           
  5259                           ; BSR set to: 0
  5260  005BDA  67F5               	tstfsz	moteHandler@i& (0+255),b
  5261  005BDC  D7F1               	goto	l12105
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;MOTEapp.c: 211: }
  5265                           ;MOTEapp.c: 212: moteApp_delayms(10);
  5266  005BDE  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5267  005BE0  0E0A               	movlw	10
  5268  005BE2  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  5269  005BE4  EC81  F01B         	call	_moteApp_delayms	;wreg free
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;MOTEapp.c: 213: for(uint8_t i = 32; i>0; i--)
  5273  005BE8  0E20               	movlw	32
  5274  005BEA  6FF6               	movwf	moteHandler@i_1340& (0+255),b
  5275  005BEC                     l12119:
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;MOTEapp.c: 214: {
  5279                           ;MOTEapp.c: 215: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  5280  005BEC  0E02               	movlw	2
  5281  005BEE  ECAF  F01C         	call	_ADC_GetConversion
  5282  005BF2  51F1               	movf	moteHandler@Traw& (0+255),w,b
  5283  005BF4  27C6               	addwf	?_ADC_GetConversion& (0+255),f,b
  5284  005BF6  51F2               	movf	(moteHandler@Traw+1)& (0+255),w,b
  5285  005BF8  23C7               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5286  005BFA  90D8               	bcf	status,0,c
  5287  005BFC  31C7               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5288  005BFE  6FF2               	movwf	(moteHandler@Traw+1)& (0+255),b
  5289  005C00  31C6               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5290  005C02  6FF1               	movwf	moteHandler@Traw& (0+255),b
  5291                           
  5292                           ; BSR set to: 0
  5293  005C04  07F6               	decf	moteHandler@i_1340& (0+255),f,b
  5294                           
  5295                           ; BSR set to: 0
  5296  005C06  67F6               	tstfsz	moteHandler@i_1340& (0+255),b
  5297  005C08  D7F1               	goto	l12119
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;MOTEapp.c: 216: }
  5301                           ;MOTEapp.c: 217: temperature = ADC_TempConversion(Traw);
  5302  005C0A  51F1               	movf	moteHandler@Traw& (0+255),w,b
  5303  005C0C  ECEA  F01A         	call	_ADC_TempConversion
  5304  005C10  6F7E               	movwf	_temperature& (0+255),b
  5305  005C12  6B7F               	clrf	(_temperature+1)& (0+255),b
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;MOTEapp.c: 218: m10SecTicker = 0;
  5309  005C14  6B91               	clrf	_m10SecTicker& (0+255),b
  5310  005C16                     l12129:
  5311                           
  5312                           ; BSR set to: 0
  5313                           ;MOTEapp.c: 219: }
  5314                           ;MOTEapp.c: 220: }
  5315                           ;MOTEapp.c: 222: if(secTicker)
  5316  005C16  5197               	movf	_secTicker& (0+255),w,b
  5317  005C18  E062               	bz	l12167
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;MOTEapp.c: 223: {
  5321                           ;MOTEapp.c: 224: if (secTicker >= 10)
  5322  005C1A  0E09               	movlw	9
  5323  005C1C  6597               	cpfsgt	_secTicker& (0+255),b
  5324  005C1E  D05F               	goto	l12167
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;MOTEapp.c: 225: {
  5328                           ;MOTEapp.c: 226: gotoSleep = 1;
  5329  005C20  0E01               	movlw	1
  5330  005C22  6FEF               	movwf	moteHandler@gotoSleep& (0+255),b
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;MOTEapp.c: 227: secTicker = 0;
  5334  005C24  6B97               	clrf	_secTicker& (0+255),b
  5335  005C26  D05B               	goto	l12167
  5336  005C28                     l338:
  5337                           
  5338                           ; BSR set to: 0
  5339  005C28  D7FF               	goto	l338
  5340  005C2A                     l12137:
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;MOTEapp.c: 237: oled_clear();
  5344  005C2A  EC88  F01A         	call	_oled_clear	;wreg free
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;MOTEapp.c: 238: oled_putString("MOTE Mode",1,0);
  5348  005C2E  0E7F               	movlw	high STR_23
  5349  005C30  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  5350  005C32  0E05               	movlw	low STR_23
  5351  005C34  6FD3               	movwf	oled_putString@string& (0+255),b
  5352  005C36  0E01               	movlw	1
  5353  005C38  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  5354  005C3A  0E00               	movlw	0
  5355  005C3C  6BD6               	clrf	oled_putString@start_page& (0+255),b
  5356  005C3E  EC08  F020         	call	_oled_putString	;wreg free
  5357                           
  5358                           ;MOTEapp.c: 239: oled_putString("Starting",2,1);
  5359  005C42  0E7F               	movlw	high STR_24
  5360  005C44  0100               	movlb	0	; () banked
  5361  005C46  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  5362  005C48  0E51               	movlw	low STR_24
  5363  005C4A  6FD3               	movwf	oled_putString@string& (0+255),b
  5364  005C4C  0E02               	movlw	2
  5365  005C4E  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  5366  005C50  0E01               	movlw	1
  5367  005C52  6FD6               	movwf	oled_putString@start_page& (0+255),b
  5368  005C54  EC08  F020         	call	_oled_putString	;wreg free
  5369                           
  5370                           ;MOTEapp.c: 240: oled_putString("ReRun PwrTst<S2>",0,3);
  5371  005C58  0E7B               	movlw	high STR_25
  5372  005C5A  0100               	movlb	0	; () banked
  5373  005C5C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  5374  005C5E  0E54               	movlw	low STR_25
  5375  005C60  6FD3               	movwf	oled_putString@string& (0+255),b
  5376  005C62  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  5377  005C64  0E03               	movlw	3
  5378  005C66  6FD6               	movwf	oled_putString@start_page& (0+255),b
  5379  005C68  EC08  F020         	call	_oled_putString	;wreg free
  5380                           
  5381                           ;MOTEapp.c: 241: activeState = moteStartup;
  5382  005C6C  0100               	movlb	0	; () banked
  5383  005C6E  6B8A               	clrf	_activeState& (0+255),b
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;MOTEapp.c: 242: moteState = MOTE_JOINING;
  5387  005C70  0E02               	movlw	2
  5388  005C72  D029               	goto	L1
  5389  005C74                     l12149:
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;MOTEapp.c: 245: if ( moteJoiningProcess(readMessage, s2Button) )
  5393  005C74  C0F3  F0D8         	movff	moteHandler@s2Button,moteJoiningProcess@switchEvent
  5394  005C78  51F7               	movf	moteHandler@readMessage& (0+255),w,b
  5395  005C7A  EC7C  F02F         	call	_moteJoiningProcess
  5396  005C7E  0900               	iorlw	0
  5397  005C80  E037               	bz	l12169
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;MOTEapp.c: 246: {
  5401                           ;MOTEapp.c: 247: oled_clear();
  5402  005C82  EC88  F01A         	call	_oled_clear	;wreg free
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;MOTEapp.c: 248: oled_putString("Mobile Mote -App",0,0);
  5406  005C86  0E7B               	movlw	high STR_26
  5407  005C88  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  5408  005C8A  0EA9               	movlw	low STR_26
  5409  005C8C  6FD3               	movwf	oled_putString@string& (0+255),b
  5410  005C8E  0E00               	movlw	0
  5411  005C90  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  5412  005C92  6BD6               	clrf	oled_putString@start_page& (0+255),b
  5413  005C94  EC08  F020         	call	_oled_putString	;wreg free
  5414                           
  5415                           ;MOTEapp.c: 249: oled_putString("Navigate  Select", 0,2);
  5416  005C98  0E7B               	movlw	high STR_27
  5417  005C9A  0100               	movlb	0	; () banked
  5418  005C9C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  5419  005C9E  0EBA               	movlw	low STR_27
  5420  005CA0  6FD3               	movwf	oled_putString@string& (0+255),b
  5421  005CA2  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  5422  005CA4  0E02               	movlw	2
  5423  005CA6  6FD6               	movwf	oled_putString@start_page& (0+255),b
  5424  005CA8  EC08  F020         	call	_oled_putString	;wreg free
  5425                           
  5426                           ;MOTEapp.c: 250: oled_putString(" (S1)      (S2) ", 0,3);
  5427  005CAC  0E7B               	movlw	high STR_28
  5428  005CAE  0100               	movlb	0	; () banked
  5429  005CB0  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  5430  005CB2  0E10               	movlw	low STR_28
  5431  005CB4  6FD3               	movwf	oled_putString@string& (0+255),b
  5432  005CB6  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  5433  005CB8  0E03               	movlw	3
  5434  005CBA  6FD6               	movwf	oled_putString@start_page& (0+255),b
  5435  005CBC  EC08  F020         	call	_oled_putString	;wreg free
  5436                           
  5437                           ;MOTEapp.c: 251: runningState = runningEnter;
  5438  005CC0  0100               	movlb	0	; () banked
  5439  005CC2  6B96               	clrf	_runningState& (0+255),b
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;MOTEapp.c: 252: moteState = MOTE_RUNNING;
  5443  005CC4  0E03               	movlw	3
  5444  005CC6                     L1:
  5445  005CC6  6FFB               	movwf	_moteState& (0+255),b
  5446  005CC8  D013               	goto	l12169
  5447  005CCA                     l12163:
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;MOTEapp.c: 256: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  5451  005CCA  C0F3  F0E2         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  5452  005CCE  C0F7  F0E3         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  5453  005CD2  C0EF  F0E4         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  5454  005CD6  51F0               	movf	moteHandler@gotoNextState& (0+255),w,b
  5455  005CD8  EC1C  F032         	call	_moteRunningProcess
  5456                           
  5457                           ;MOTEapp.c: 257: break;
  5458  005CDC  D009               	goto	l12169
  5459  005CDE                     l12167:
  5460                           
  5461                           ; BSR set to: 0
  5462  005CDE  51FB               	movf	_moteState& (0+255),w,b
  5463                           
  5464                           ; Switch size 1, requested type "speed"
  5465                           ; Number of cases is 4, Range of values is 1 to 4
  5466                           ; switch strategies available:
  5467                           ; Name         Instructions Cycles
  5468                           ; simple_byte           13     7 (average)
  5469                           ;	Chosen strategy is simple_byte
  5470  005CE0  0A01               	xorlw	1	; case 1
  5471  005CE2  E0A3               	bz	l12137
  5472  005CE4  0A03               	xorlw	3	; case 2
  5473  005CE6  E0C6               	bz	l12149
  5474  005CE8  0A01               	xorlw	1	; case 3
  5475  005CEA  E0EF               	bz	l12163
  5476  005CEC  0A07               	xorlw	7	; case 4
  5477  005CEE  E19C               	bnz	l338
  5478  005CF0                     l12169:
  5479                           
  5480                           ;MOTEapp.c: 262: return moteState;
  5481  005CF0  0100               	movlb	0	; () banked
  5482  005CF2  51FB               	movf	_moteState& (0+255),w,b
  5483                           
  5484                           ; BSR set to: 0
  5485  005CF4  0012               	return	
  5486  005CF6                     __end_of_moteHandler:
  5487                           	opt stack 0
  5488                           tblptru	equ	0xFF8
  5489                           tblptrh	equ	0xFF7
  5490                           tblptrl	equ	0xFF6
  5491                           tablat	equ	0xFF5
  5492                           intcon	equ	0xFF2
  5493                           postinc0	equ	0xFEE
  5494                           wreg	equ	0xFE8
  5495                           postdec1	equ	0xFE5
  5496                           fsr1l	equ	0xFE1
  5497                           status	equ	0xFD8
  5498                           
  5499 ;; *************** function _service_pushbutton *****************
  5500 ;; Defined at:
  5501 ;;		line 14 in file "../Includes/Drivers/buttons.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  bs              1    0[BANK0 ] enum E7036
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      enum E7122
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : F/0
  5512 ;;		On exit  : F/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5515 ;;      Params:         0       0       0       0       0       0       0       0       0
  5516 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5518 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5519 ;;Total ram usage:        1 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:   11
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_moteHandler
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text9
  5530  003C36                     __ptext9:
  5531                           	opt stack 0
  5532  003C36                     _service_pushbutton:
  5533                           	opt stack 18
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;buttons.c: 20: if ((PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;incstack = 0
  5540  003C36  A082               	btfss	3970,0,c	;volatile
  5541  003C38  D002               	goto	l10763
  5542                           
  5543                           ; BSR set to: 0
  5544  003C3A  B282               	btfsc	3970,1,c	;volatile
  5545  003C3C  D014               	goto	l10771
  5546  003C3E                     l10763:
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;buttons.c: 21: {
  5550                           ;buttons.c: 22: ++PB_Timer;
  5551  003C3E  2B66               	incf	service_pushbutton@PB_Timer& (0+255),f,b
  5552  003C40  0E00               	movlw	0
  5553  003C42  2367               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
  5554  003C44  2368               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
  5555  003C46  2369               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
  5556                           
  5557                           ;buttons.c: 26: if (PB_Timer == 55)
  5558  003C48  5166               	movf	service_pushbutton@PB_Timer& (0+255),w,b
  5559  003C4A  0A37               	xorlw	55
  5560  003C4C  1167               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
  5561  003C4E  1168               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
  5562  003C50  1169               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
  5563  003C52  E107               	bnz	l896
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;buttons.c: 27: {
  5567                           ;buttons.c: 28: Release_Timer = 0;
  5568  003C54  6B9B               	clrf	service_pushbutton@Release_Timer& (0+255),b
  5569                           
  5570                           ;buttons.c: 30: if (PORTCbits.RC0 == 0)
  5571  003C56  B082               	btfsc	3970,0,c	;volatile
  5572  003C58  D002               	goto	l10769
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;buttons.c: 31: {
  5576                           ;buttons.c: 32: bs = ShortPress1;
  5577  003C5A  0E01               	movlw	1
  5578  003C5C  D00F               	goto	L2
  5579  003C5E                     l10769:
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;buttons.c: 34: else
  5583                           ;buttons.c: 35: {
  5584                           ;buttons.c: 36: bs = ShortPress2;
  5585  003C5E  0E02               	movlw	2
  5586  003C60  D00D               	goto	L2
  5587  003C62                     l896:
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;buttons.c: 39: else
  5591                           ;buttons.c: 40: {
  5592                           ;buttons.c: 41: bs = NoButton;
  5593  003C62  6BC6               	clrf	service_pushbutton@bs& (0+255),b
  5594  003C64  D00C               	goto	l10779
  5595  003C66                     l10771:
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;buttons.c: 44: else
  5599                           ;buttons.c: 45: {
  5600                           ;buttons.c: 46: if (Release_Timer == 20)
  5601  003C66  519B               	movf	service_pushbutton@Release_Timer& (0+255),w,b
  5602  003C68  0A14               	xorlw	20
  5603  003C6A  E106               	bnz	l10775
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;buttons.c: 47: {
  5607                           ;buttons.c: 48: PB_Timer = 0;
  5608  003C6C  6B66               	clrf	service_pushbutton@PB_Timer& (0+255),b
  5609  003C6E  6B67               	clrf	(service_pushbutton@PB_Timer+1)& (0+255),b
  5610  003C70  6B68               	clrf	(service_pushbutton@PB_Timer+2)& (0+255),b
  5611  003C72  6B69               	clrf	(service_pushbutton@PB_Timer+3)& (0+255),b
  5612                           
  5613                           ;buttons.c: 49: Release_Timer = 0;
  5614  003C74  6B9B               	clrf	service_pushbutton@Release_Timer& (0+255),b
  5615                           
  5616                           ;buttons.c: 50: }
  5617  003C76  D001               	goto	l10777
  5618  003C78                     l10775:
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;buttons.c: 51: else
  5622                           ;buttons.c: 52: {
  5623                           ;buttons.c: 53: Release_Timer++;
  5624  003C78  2B9B               	incf	service_pushbutton@Release_Timer& (0+255),f,b
  5625  003C7A                     l10777:
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;buttons.c: 54: }
  5629                           ;buttons.c: 55: bs = Released;
  5630  003C7A  0E03               	movlw	3
  5631  003C7C                     L2:
  5632  003C7C  6FC6               	movwf	service_pushbutton@bs& (0+255),b
  5633  003C7E                     l10779:
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;buttons.c: 56: }
  5637                           ;buttons.c: 58: return bs;
  5638  003C7E  51C6               	movf	service_pushbutton@bs& (0+255),w,b
  5639                           
  5640                           ; BSR set to: 0
  5641  003C80  0012               	return	
  5642  003C82                     __end_of_service_pushbutton:
  5643                           	opt stack 0
  5644                           tblptru	equ	0xFF8
  5645                           tblptrh	equ	0xFF7
  5646                           tblptrl	equ	0xFF6
  5647                           tablat	equ	0xFF5
  5648                           intcon	equ	0xFF2
  5649                           postinc0	equ	0xFEE
  5650                           wreg	equ	0xFE8
  5651                           postdec1	equ	0xFE5
  5652                           fsr1l	equ	0xFE1
  5653                           status	equ	0xFD8
  5654                           
  5655 ;; *************** function _moteRunningProcess *****************
  5656 ;; Defined at:
  5657 ;;		line 492 in file "../Includes/Board/MOTEapp.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  changeStates    1    wreg     unsigned char 
  5660 ;;  selectButton    1   28[BANK0 ] unsigned char 
  5661 ;;  messageReady    1   29[BANK0 ] unsigned char 
  5662 ;;  sleepEvent      1   30[BANK0 ] unsigned char 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  changeStates    1   40[BANK0 ] unsigned char 
  5665 ;;  counter         1   38[BANK0 ] unsigned char 
  5666 ;;  counter         1   37[BANK0 ] unsigned char 
  5667 ;;  bufferReadPo    1   39[BANK0 ] unsigned char 
  5668 ;;  dummyRead2      1   36[BANK0 ] unsigned char 
  5669 ;;  dummyRead1      1   35[BANK0 ] unsigned char 
  5670 ;;  i               1   34[BANK0 ] unsigned char 
  5671 ;;  i               1   33[BANK0 ] unsigned char 
  5672 ;;  Traw            2   31[BANK0 ] unsigned int 
  5673 ;;  readByte        1    0        unsigned char 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      enum E7342
  5676 ;; Registers used:
  5677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : F/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5683 ;;      Params:         0       3       0       0       0       0       0       0       0
  5684 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5686 ;;      Totals:         0      13       0       0       0       0       0       0       0
  5687 ;;Total ram usage:       13 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:   19
  5690 ;; This function calls:
  5691 ;;		_ADC_GetConversion
  5692 ;;		_ADC_TempConversion
  5693 ;;		_MOTEapp_SetADR
  5694 ;;		_MOTEapp_SetDataRate
  5695 ;;		_MOTEapp_WriteDataRate
  5696 ;;		_TMR2_ReadTimer
  5697 ;;		_moteApp_GoToSleep
  5698 ;;		_moteApp_add16bToDataBuffer
  5699 ;;		_moteApp_add8bToDataBuffer
  5700 ;;		_moteApp_clearBuffers
  5701 ;;		_moteApp_delayms
  5702 ;;		_oled_clear
  5703 ;;		_oled_putString
  5704 ;;		_oled_putUint16
  5705 ;;		_oled_putUint8
  5706 ;;		_sendDataCommand
  5707 ;;		_strcmp
  5708 ;;		_strncmp
  5709 ;;		_unhex
  5710 ;; This function is called by:
  5711 ;;		_moteHandler
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text10
  5716  006438                     __ptext10:
  5717                           	opt stack 0
  5718  006438                     _moteRunningProcess:
  5719                           	opt stack 10
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;incstack = 0
  5723                           ;moteRunningProcess@changeStates stored from wreg
  5724  006438  6FEE               	movwf	moteRunningProcess@changeStates& (0+255),b
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;MOTEapp.c: 496: if ((sleepEvent) && (periodicState))
  5728  00643A  51E4               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  5729  00643C  E102 EFF6  F03A    	bz	l11779
  5730                           
  5731                           ; BSR set to: 0
  5732  006442  51FC               	movf	_periodicState& (0+255),w,b
  5733  006444  E102 EFF6  F03A    	bz	l11779
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;MOTEapp.c: 497: {
  5737                           ;MOTEapp.c: 498: if (sleepTicker >= 33)
  5738  00644A  0E20               	movlw	32
  5739  00644C  6598               	cpfsgt	_sleepTicker& (0+255),b
  5740  00644E  D0D7               	goto	l11089
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;MOTEapp.c: 499: {
  5744                           ;MOTEapp.c: 501: uint16_t Traw = 0;
  5745  006450  6BE5               	clrf	moteRunningProcess@Traw& (0+255),b
  5746  006452  6BE6               	clrf	(moteRunningProcess@Traw+1)& (0+255),b
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;MOTEapp.c: 502: moteApp_delayms(10);
  5750  006454  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5751  006456  0E0A               	movlw	10
  5752  006458  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  5753  00645A  EC81  F01B         	call	_moteApp_delayms	;wreg free
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;MOTEapp.c: 503: for(uint8_t i = 32; i>0; i--)
  5757  00645E  0E20               	movlw	32
  5758  006460  6FE7               	movwf	moteRunningProcess@i& (0+255),b
  5759  006462                     l11007:
  5760                           
  5761                           ; BSR set to: 0
  5762  006462  67E7               	tstfsz	moteRunningProcess@i& (0+255),b
  5763  006464  D001               	goto	l11011
  5764  006466  D00E               	goto	l11017
  5765  006468                     l11011:
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;MOTEapp.c: 504: {
  5769                           ;MOTEapp.c: 505: light = (light + ADC_GetConversion(Light_channel)) / 2;
  5770  006468  0E03               	movlw	3
  5771  00646A  ECAF  F01C         	call	_ADC_GetConversion
  5772  00646E  517A               	movf	_light& (0+255),w,b
  5773  006470  27C6               	addwf	?_ADC_GetConversion& (0+255),f,b
  5774  006472  517B               	movf	(_light+1)& (0+255),w,b
  5775  006474  23C7               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5776  006476  90D8               	bcf	status,0,c
  5777  006478  31C7               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5778  00647A  6F7B               	movwf	(_light+1)& (0+255),b
  5779  00647C  31C6               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5780  00647E  6F7A               	movwf	_light& (0+255),b
  5781                           
  5782                           ; BSR set to: 0
  5783  006480  07E7               	decf	moteRunningProcess@i& (0+255),f,b
  5784  006482  D7EF               	goto	l11007
  5785  006484                     l11017:
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;MOTEapp.c: 506: }
  5789                           ;MOTEapp.c: 507: moteApp_delayms(10);
  5790  006484  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5791  006486  0E0A               	movlw	10
  5792  006488  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  5793  00648A  EC81  F01B         	call	_moteApp_delayms	;wreg free
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;MOTEapp.c: 508: for(uint8_t i = 32; i>0; i--)
  5797  00648E  0E20               	movlw	32
  5798  006490  6FE8               	movwf	moteRunningProcess@i_1410& (0+255),b
  5799  006492                     l11021:
  5800                           
  5801                           ; BSR set to: 0
  5802  006492  67E8               	tstfsz	moteRunningProcess@i_1410& (0+255),b
  5803  006494  D001               	goto	l11025
  5804  006496  D00E               	goto	l11031
  5805  006498                     l11025:
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;MOTEapp.c: 509: {
  5809                           ;MOTEapp.c: 510: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  5810  006498  0E02               	movlw	2
  5811  00649A  ECAF  F01C         	call	_ADC_GetConversion
  5812  00649E  51E5               	movf	moteRunningProcess@Traw& (0+255),w,b
  5813  0064A0  27C6               	addwf	?_ADC_GetConversion& (0+255),f,b
  5814  0064A2  51E6               	movf	(moteRunningProcess@Traw+1)& (0+255),w,b
  5815  0064A4  23C7               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5816  0064A6  90D8               	bcf	status,0,c
  5817  0064A8  31C7               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5818  0064AA  6FE6               	movwf	(moteRunningProcess@Traw+1)& (0+255),b
  5819  0064AC  31C6               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5820  0064AE  6FE5               	movwf	moteRunningProcess@Traw& (0+255),b
  5821                           
  5822                           ; BSR set to: 0
  5823  0064B0  07E8               	decf	moteRunningProcess@i_1410& (0+255),f,b
  5824  0064B2  D7EF               	goto	l11021
  5825  0064B4                     l11031:
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;MOTEapp.c: 511: }
  5829                           ;MOTEapp.c: 512: temperature = ADC_TempConversion(Traw);
  5830  0064B4  51E5               	movf	moteRunningProcess@Traw& (0+255),w,b
  5831  0064B6  ECEA  F01A         	call	_ADC_TempConversion
  5832  0064BA  6F7E               	movwf	_temperature& (0+255),b
  5833  0064BC  6B7F               	clrf	(_temperature+1)& (0+255),b
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;MOTEapp.c: 514: sleepTicker = 0;
  5837  0064BE  6B98               	clrf	_sleepTicker& (0+255),b
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;MOTEapp.c: 515: oled_clear();
  5841  0064C0  EC88  F01A         	call	_oled_clear	;wreg free
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;MOTEapp.c: 516: oled_putString("Issue Perodic TX",0,0);
  5845  0064C4  0E7B               	movlw	high STR_72
  5846  0064C6  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  5847  0064C8  0E65               	movlw	low STR_72
  5848  0064CA  6FD3               	movwf	oled_putString@string& (0+255),b
  5849  0064CC  0E00               	movlw	0
  5850  0064CE  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  5851  0064D0  6BD6               	clrf	oled_putString@start_page& (0+255),b
  5852  0064D2  EC08  F020         	call	_oled_putString	;wreg free
  5853                           
  5854                           ;MOTEapp.c: 517: oled_putString("On Port #: ",0,1);
  5855  0064D6  0E7E               	movlw	high STR_73
  5856  0064D8  0100               	movlb	0	; () banked
  5857  0064DA  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  5858  0064DC  0E43               	movlw	low STR_73
  5859  0064DE  6FD3               	movwf	oled_putString@string& (0+255),b
  5860  0064E0  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  5861  0064E2  0E01               	movlw	1
  5862  0064E4  6FD6               	movwf	oled_putString@start_page& (0+255),b
  5863  0064E6  EC08  F020         	call	_oled_putString	;wreg free
  5864                           
  5865                           ;MOTEapp.c: 518: oled_putUint8(randomPortNum,10,1);
  5866  0064EA  0E0A               	movlw	10
  5867  0064EC  0100               	movlb	0	; () banked
  5868  0064EE  6FD8               	movwf	oled_putUint8@station_dot& (0+255),b
  5869  0064F0  0E01               	movlw	1
  5870  0064F2  6FD9               	movwf	oled_putUint8@start_page& (0+255),b
  5871  0064F4  5195               	movf	_randomPortNum& (0+255),w,b
  5872  0064F6  ECBC  F01E         	call	_oled_putUint8
  5873                           
  5874                           ;MOTEapp.c: 519: oled_putString("L:       T: ",0,2);
  5875  0064FA  0E7D               	movlw	high STR_74
  5876  0064FC  0100               	movlb	0	; () banked
  5877  0064FE  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  5878  006500  0E81               	movlw	low STR_74
  5879  006502  6FD3               	movwf	oled_putString@string& (0+255),b
  5880  006504  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  5881  006506  0E02               	movlw	2
  5882  006508  6FD6               	movwf	oled_putString@start_page& (0+255),b
  5883  00650A  EC08  F020         	call	_oled_putString	;wreg free
  5884                           
  5885                           ;MOTEapp.c: 520: oled_putUint16(light,3,2);
  5886  00650E  C07A  F0D8         	movff	_light,oled_putUint16@number
  5887  006512  C07B  F0D9         	movff	_light+1,oled_putUint16@number+1
  5888  006516  0E03               	movlw	3
  5889  006518  0100               	movlb	0	; () banked
  5890  00651A  6FDA               	movwf	oled_putUint16@station_dot& (0+255),b
  5891  00651C  0E02               	movlw	2
  5892  00651E  6FDB               	movwf	oled_putUint16@start_page& (0+255),b
  5893  006520  EC97  F02A         	call	_oled_putUint16	;wreg free
  5894                           
  5895                           ;MOTEapp.c: 521: oled_putUint8(temperature,12,2);
  5896  006524  0E0C               	movlw	12
  5897  006526  0100               	movlb	0	; () banked
  5898  006528  6FD8               	movwf	oled_putUint8@station_dot& (0+255),b
  5899  00652A  0E02               	movlw	2
  5900  00652C  6FD9               	movwf	oled_putUint8@start_page& (0+255),b
  5901  00652E  517E               	movf	_temperature& (0+255),w,b
  5902  006530  ECBC  F01E         	call	_oled_putUint8
  5903                           
  5904                           ;MOTEapp.c: 522: oled_putString("(NAV)    (SEL) ",0,3);
  5905  006534  0E7B               	movlw	high STR_75
  5906  006536  0100               	movlb	0	; () banked
  5907  006538  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  5908  00653A  0EFC               	movlw	low STR_75
  5909  00653C  6FD3               	movwf	oled_putString@string& (0+255),b
  5910  00653E  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  5911  006540  0E03               	movlw	3
  5912  006542  6FD6               	movwf	oled_putString@start_page& (0+255),b
  5913  006544  EC08  F020         	call	_oled_putString	;wreg free
  5914                           
  5915                           ;MOTEapp.c: 524: moteApp_clearBuffers();
  5916  006548  EC87  F01D         	call	_moteApp_clearBuffers	;wreg free
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;MOTEapp.c: 525: randomPortNum = TMR2_ReadTimer();
  5920  00654C  ECFD  F019         	call	_TMR2_ReadTimer	;wreg free
  5921  006550  6F95               	movwf	_randomPortNum& (0+255),b
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;MOTEapp.c: 527: if (!randomPortNum)
  5925  006552  6795               	tstfsz	_randomPortNum& (0+255),b
  5926  006554  D003               	goto	l11059
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;MOTEapp.c: 528: randomPortNum = 5;
  5930  006556  0E05               	movlw	5
  5931  006558  6F95               	movwf	_randomPortNum& (0+255),b
  5932  00655A  D005               	goto	l11063
  5933  00655C                     l11059:
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;MOTEapp.c: 529: else if (randomPortNum > 223)
  5937  00655C  0EDF               	movlw	223
  5938  00655E  6595               	cpfsgt	_randomPortNum& (0+255),b
  5939  006560  D002               	goto	l11063
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;MOTEapp.c: 530: randomPortNum = randomPortNum - 50;
  5943  006562  0ECE               	movlw	206
  5944  006564  2795               	addwf	_randomPortNum& (0+255),f,b
  5945  006566                     l11063:
  5946                           
  5947                           ; BSR set to: 0
  5948                           ;MOTEapp.c: 532: moteApp_add8bToDataBuffer(randomPortNum, 0);
  5949  006566  6BCA               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  5950  006568  5195               	movf	_randomPortNum& (0+255),w,b
  5951  00656A  EC42  F01F         	call	_moteApp_add8bToDataBuffer
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;MOTEapp.c: 533: dataBuffer[3] = 0x20;
  5955  00656E  0E20               	movlw	32
  5956  006570  6F9F               	movwf	(_dataBuffer+3)& (0+255),b
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;MOTEapp.c: 534: moteApp_add16bToDataBuffer(light, 4);
  5960  006572  C07A  F0CD         	movff	_light,moteApp_add16bToDataBuffer@number
  5961  006576  C07B  F0CE         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  5962  00657A  0E04               	movlw	4
  5963  00657C  6FCF               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  5964  00657E  EC94  F02C         	call	_moteApp_add16bToDataBuffer	;wreg free
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;MOTEapp.c: 535: moteApp_add8bToDataBuffer(temperature, 9);
  5968  006582  0E09               	movlw	9
  5969  006584  6FCA               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  5970  006586  517E               	movf	_temperature& (0+255),w,b
  5971  006588  EC42  F01F         	call	_moteApp_add8bToDataBuffer
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;MOTEapp.c: 536: __nop();
  5975  00658C  F000               	nop	
  5976                           
  5977                           ;MOTEapp.c: 537: if(++sleepTxOccurances > 3)
  5978  00658E  0100               	movlb	0	; () banked
  5979  006590  2B99               	incf	_sleepTxOccurances& (0+255),f,b
  5980  006592  0E03               	movlw	3
  5981  006594  6599               	cpfsgt	_sleepTxOccurances& (0+255),b
  5982  006596  D017               	goto	l11081
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;MOTEapp.c: 538: {
  5986                           ;MOTEapp.c: 539: sleepTxOccurances = 0;
  5987  006598  6B99               	clrf	_sleepTxOccurances& (0+255),b
  5988                           
  5989                           ; BSR set to: 0
  5990                           ;MOTEapp.c: 540: oled_putString("C",15,1);
  5991  00659A  0E7F               	movlw	high STR_76
  5992  00659C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  5993  00659E  0EF9               	movlw	low STR_76
  5994  0065A0  6FD3               	movwf	oled_putString@string& (0+255),b
  5995  0065A2  0E0F               	movlw	15
  5996  0065A4  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  5997  0065A6  0E01               	movlw	1
  5998  0065A8  6FD6               	movwf	oled_putString@start_page& (0+255),b
  5999  0065AA  EC08  F020         	call	_oled_putString	;wreg free
  6000                           
  6001                           ;MOTEapp.c: 541: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  6002  0065AE  0E7E               	movlw	high STR_77
  6003  0065B0  0100               	movlb	0	; () banked
  6004  0065B2  6FC8               	movwf	(sendDataCommand@string+1)& (0+255),b
  6005  0065B4  0E67               	movlw	low STR_77
  6006  0065B6  6FC7               	movwf	sendDataCommand@string& (0+255),b
  6007  0065B8  0E9C               	movlw	low _dataBuffer
  6008  0065BA  6FC9               	movwf	sendDataCommand@appData& (0+255),b
  6009  0065BC  0E0C               	movlw	12
  6010  0065BE  6FCA               	movwf	sendDataCommand@dataLength& (0+255),b
  6011  0065C0  EC2C  F023         	call	_sendDataCommand	;wreg free
  6012                           
  6013                           ;MOTEapp.c: 542: }
  6014  0065C4  D015               	goto	l11085
  6015  0065C6                     l11081:
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;MOTEapp.c: 544: else
  6019                           ;MOTEapp.c: 545: {
  6020                           ;MOTEapp.c: 546: oled_putString("U",15,1);
  6021  0065C6  0E7F               	movlw	high STR_78
  6022  0065C8  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6023  0065CA  0EFB               	movlw	low STR_78
  6024  0065CC  6FD3               	movwf	oled_putString@string& (0+255),b
  6025  0065CE  0E0F               	movlw	15
  6026  0065D0  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6027  0065D2  0E01               	movlw	1
  6028  0065D4  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6029  0065D6  EC08  F020         	call	_oled_putString	;wreg free
  6030                           
  6031                           ;MOTEapp.c: 547: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6032  0065DA  0E7D               	movlw	high STR_79
  6033  0065DC  0100               	movlb	0	; () banked
  6034  0065DE  6FC8               	movwf	(sendDataCommand@string+1)& (0+255),b
  6035  0065E0  0E3C               	movlw	low STR_79
  6036  0065E2  6FC7               	movwf	sendDataCommand@string& (0+255),b
  6037  0065E4  0E9C               	movlw	low _dataBuffer
  6038  0065E6  6FC9               	movwf	sendDataCommand@appData& (0+255),b
  6039  0065E8  0E0C               	movlw	12
  6040  0065EA  6FCA               	movwf	sendDataCommand@dataLength& (0+255),b
  6041  0065EC  EC2C  F023         	call	_sendDataCommand	;wreg free
  6042  0065F0                     l11085:
  6043                           
  6044                           ;MOTEapp.c: 548: }
  6045                           ;MOTEapp.c: 549: secTicker = 10 - (10 / 3);
  6046  0065F0  0E07               	movlw	7
  6047  0065F2  0100               	movlb	0	; () banked
  6048  0065F4  6F97               	movwf	_secTicker& (0+255),b
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;MOTEapp.c: 550: runningState = runningUplinkTransmit;
  6052  0065F6  0E08               	movlw	8
  6053  0065F8  6F96               	movwf	_runningState& (0+255),b
  6054                           
  6055                           ;MOTEapp.c: 551: }
  6056  0065FA  EFF6  F03A         	goto	l11779
  6057  0065FE                     l11089:
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;MOTEapp.c: 552: else
  6061                           ;MOTEapp.c: 553: {
  6062                           ;MOTEapp.c: 554: sleepTicker++;
  6063  0065FE  2B98               	incf	_sleepTicker& (0+255),f,b
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;MOTEapp.c: 555: runningState = runningSleep;
  6067  006600  0E0E               	movlw	14
  6068  006602  6F96               	movwf	_runningState& (0+255),b
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;MOTEapp.c: 556: selectButton = 1;
  6072  006604  0E01               	movlw	1
  6073  006606  6FE2               	movwf	moteRunningProcess@selectButton& (0+255),b
  6074  006608  EFF6  F03A         	goto	l11779
  6075  00660C                     l448:
  6076                           
  6077                           ; BSR set to: 0
  6078  00660C  D7FF               	goto	l448
  6079  00660E                     l452:
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;MOTEapp.c: 567: if ( (changeStates) || (selectButton) )
  6083  00660E  67EE               	tstfsz	moteRunningProcess@changeStates& (0+255),b
  6084  006610  D003               	goto	l11097
  6085                           
  6086                           ; BSR set to: 0
  6087  006612  51E2               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6088  006614  B4D8               	btfsc	status,2,c
  6089  006616  0012               	return	
  6090  006618                     l11097:
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;MOTEapp.c: 568: {
  6094                           ;MOTEapp.c: 569: oled_clear();
  6095  006618  EC88  F01A         	call	_oled_clear	;wreg free
  6096                           
  6097                           ; BSR set to: 0
  6098                           ;MOTEapp.c: 570: oled_putString("  Sensor Data  ",0,0);
  6099  00661C  0E7B               	movlw	high STR_80
  6100  00661E  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6101  006620  0EEC               	movlw	low STR_80
  6102  006622  6FD3               	movwf	oled_putString@string& (0+255),b
  6103  006624  0E00               	movlw	0
  6104  006626  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6105  006628  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6106  00662A  EC08  F020         	call	_oled_putString	;wreg free
  6107                           
  6108                           ;MOTEapp.c: 571: oled_putString("    Display    ",0,1);
  6109  00662E  0E7B               	movlw	high STR_81
  6110  006630  0100               	movlb	0	; () banked
  6111  006632  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6112  006634  0EDC               	movlw	low STR_81
  6113  006636  6FD3               	movwf	oled_putString@string& (0+255),b
  6114  006638  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6115  00663A  0E01               	movlw	1
  6116  00663C  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6117  00663E  EC08  F020         	call	_oled_putString	;wreg free
  6118                           
  6119                           ;MOTEapp.c: 572: oled_putString("(NAV)    (SEL) ",0,3);
  6120  006642  0E7B               	movlw	high STR_75
  6121  006644  0100               	movlb	0	; () banked
  6122  006646  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6123  006648  0EFC               	movlw	low STR_75
  6124  00664A  6FD3               	movwf	oled_putString@string& (0+255),b
  6125  00664C  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6126  00664E  0E03               	movlw	3
  6127  006650  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6128  006652  EC08  F020         	call	_oled_putString	;wreg free
  6129  006656                     l11105:
  6130                           
  6131                           ;MOTEapp.c: 573: runningState = runningSensor;
  6132  006656  0E01               	movlw	1
  6133  006658  0100               	movlb	0	; () banked
  6134  00665A  6F96               	movwf	_runningState& (0+255),b
  6135                           
  6136                           ; BSR set to: 0
  6137                           ;MOTEapp.c: 574: }
  6138                           ;MOTEapp.c: 575: break;
  6139  00665C  0C01               	retlw	1
  6140  00665E                     l11107:
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;MOTEapp.c: 577: if (changeStates)
  6144  00665E  51EE               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6145  006660  E023               	bz	l11119
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;MOTEapp.c: 578: {
  6149                           ;MOTEapp.c: 579: oled_clear();
  6150  006662  EC88  F01A         	call	_oled_clear	;wreg free
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;MOTEapp.c: 580: oled_putString("  Select LoRa   ",0,0);
  6154  006666  0E7A               	movlw	high STR_83
  6155  006668  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6156  00666A  0ECC               	movlw	low STR_83
  6157  00666C  6FD3               	movwf	oled_putString@string& (0+255),b
  6158  00666E  0E00               	movlw	0
  6159  006670  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6160  006672  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6161  006674  EC08  F020         	call	_oled_putString	;wreg free
  6162                           
  6163                           ;MOTEapp.c: 581: oled_putString("   Data Rate    ",0,1);
  6164  006678  0E7A               	movlw	high STR_84
  6165  00667A  0100               	movlb	0	; () banked
  6166  00667C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6167  00667E  0EBB               	movlw	low STR_84
  6168  006680  6FD3               	movwf	oled_putString@string& (0+255),b
  6169  006682  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6170  006684  0E01               	movlw	1
  6171  006686  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6172  006688  EC08  F020         	call	_oled_putString	;wreg free
  6173                           
  6174                           ;MOTEapp.c: 582: oled_putString("(NAV)    (SEL) ",0,3);
  6175  00668C  0E7B               	movlw	high STR_75
  6176  00668E  0100               	movlb	0	; () banked
  6177  006690  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6178  006692  0EFC               	movlw	low STR_75
  6179  006694  6FD3               	movwf	oled_putString@string& (0+255),b
  6180  006696  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6181  006698  0E03               	movlw	3
  6182  00669A  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6183  00669C  EC08  F020         	call	_oled_putString	;wreg free
  6184  0066A0                     l11117:
  6185                           
  6186                           ;MOTEapp.c: 583: runningState = runningDataRateDisplay;
  6187  0066A0  0E03               	movlw	3
  6188  0066A2  0100               	movlb	0	; () banked
  6189  0066A4  6F96               	movwf	_runningState& (0+255),b
  6190                           
  6191                           ;MOTEapp.c: 584: }
  6192  0066A6  0C03               	retlw	3
  6193  0066A8                     l11119:
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;MOTEapp.c: 585: else if (selectButton)
  6197  0066A8  51E2               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6198  0066AA  B4D8               	btfsc	status,2,c
  6199  0066AC  0012               	return	
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;MOTEapp.c: 586: {
  6203                           ;MOTEapp.c: 587: oled_clear();
  6204  0066AE  EC88  F01A         	call	_oled_clear	;wreg free
  6205                           
  6206                           ; BSR set to: 0
  6207                           ;MOTEapp.c: 588: oled_putString("  Sensor Data  ",0,0);
  6208  0066B2  0E7B               	movlw	high STR_80
  6209  0066B4  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6210  0066B6  0EEC               	movlw	low STR_80
  6211  0066B8  6FD3               	movwf	oled_putString@string& (0+255),b
  6212  0066BA  0E00               	movlw	0
  6213  0066BC  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6214  0066BE  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6215  0066C0  EC08  F020         	call	_oled_putString	;wreg free
  6216                           
  6217                           ;MOTEapp.c: 589: oled_putString("Light:",0,1);
  6218  0066C4  0E7F               	movlw	high STR_87
  6219  0066C6  0100               	movlb	0	; () banked
  6220  0066C8  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6221  0066CA  0EBE               	movlw	low STR_87
  6222  0066CC  6FD3               	movwf	oled_putString@string& (0+255),b
  6223  0066CE  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6224  0066D0  0E01               	movlw	1
  6225  0066D2  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6226  0066D4  EC08  F020         	call	_oled_putString	;wreg free
  6227                           
  6228                           ;MOTEapp.c: 590: oled_putString("Temp :",0,2);
  6229  0066D8  0E7F               	movlw	high STR_88
  6230  0066DA  0100               	movlb	0	; () banked
  6231  0066DC  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6232  0066DE  0EB7               	movlw	low STR_88
  6233  0066E0  6FD3               	movwf	oled_putString@string& (0+255),b
  6234  0066E2  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6235  0066E4  0E02               	movlw	2
  6236  0066E6  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6237  0066E8  EC08  F020         	call	_oled_putString	;wreg free
  6238                           
  6239                           ;MOTEapp.c: 591: oled_putString("C",12,2);
  6240  0066EC  0E7F               	movlw	high STR_76
  6241  0066EE  0100               	movlb	0	; () banked
  6242  0066F0  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6243  0066F2  0EF9               	movlw	low STR_76
  6244  0066F4  6FD3               	movwf	oled_putString@string& (0+255),b
  6245  0066F6  0E0C               	movlw	12
  6246  0066F8  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6247  0066FA  0E02               	movlw	2
  6248  0066FC  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6249  0066FE  EC08  F020         	call	_oled_putString	;wreg free
  6250                           
  6251                           ;MOTEapp.c: 592: if (temperature)
  6252  006702  0100               	movlb	0	; () banked
  6253  006704  517F               	movf	(_temperature+1)& (0+255),w,b
  6254  006706  117E               	iorwf	_temperature& (0+255),w,b
  6255  006708  E015               	bz	l11135
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;MOTEapp.c: 593: {
  6259                           ;MOTEapp.c: 594: oled_putUint16(light,6,1);
  6260  00670A  C07A  F0D8         	movff	_light,oled_putUint16@number
  6261  00670E  C07B  F0D9         	movff	_light+1,oled_putUint16@number+1
  6262  006712  0E06               	movlw	6
  6263  006714  6FDA               	movwf	oled_putUint16@station_dot& (0+255),b
  6264  006716  0E01               	movlw	1
  6265  006718  6FDB               	movwf	oled_putUint16@start_page& (0+255),b
  6266  00671A  EC97  F02A         	call	_oled_putUint16	;wreg free
  6267                           
  6268                           ;MOTEapp.c: 595: oled_putUint16(temperature,6,2);
  6269  00671E  C07E  F0D8         	movff	_temperature,oled_putUint16@number
  6270  006722  C07F  F0D9         	movff	_temperature+1,oled_putUint16@number+1
  6271  006726  0E06               	movlw	6
  6272  006728  0100               	movlb	0	; () banked
  6273  00672A  6FDA               	movwf	oled_putUint16@station_dot& (0+255),b
  6274  00672C  0E02               	movlw	2
  6275  00672E  6FDB               	movwf	oled_putUint16@start_page& (0+255),b
  6276  006730  EC97  F02A         	call	_oled_putUint16	;wreg free
  6277  006734                     l11135:
  6278                           
  6279                           ;MOTEapp.c: 596: }
  6280                           ;MOTEapp.c: 597: runningState = runningSensorMenu;
  6281  006734  0E02               	movlw	2
  6282  006736  0100               	movlb	0	; () banked
  6283  006738  6F96               	movwf	_runningState& (0+255),b
  6284  00673A  0C02               	retlw	2
  6285  00673C                     l11137:
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;MOTEapp.c: 601: oled_putUint16(light,6,1);
  6289  00673C  C07A  F0D8         	movff	_light,oled_putUint16@number
  6290  006740  C07B  F0D9         	movff	_light+1,oled_putUint16@number+1
  6291  006744  0E06               	movlw	6
  6292  006746  6FDA               	movwf	oled_putUint16@station_dot& (0+255),b
  6293  006748  0E01               	movlw	1
  6294  00674A  6FDB               	movwf	oled_putUint16@start_page& (0+255),b
  6295  00674C  EC97  F02A         	call	_oled_putUint16	;wreg free
  6296                           
  6297                           ;MOTEapp.c: 602: oled_putUint16(temperature,6,2);
  6298  006750  C07E  F0D8         	movff	_temperature,oled_putUint16@number
  6299  006754  C07F  F0D9         	movff	_temperature+1,oled_putUint16@number+1
  6300  006758  0E06               	movlw	6
  6301  00675A  0100               	movlb	0	; () banked
  6302  00675C  6FDA               	movwf	oled_putUint16@station_dot& (0+255),b
  6303  00675E  0E02               	movlw	2
  6304  006760  6FDB               	movwf	oled_putUint16@start_page& (0+255),b
  6305  006762  EC97  F02A         	call	_oled_putUint16	;wreg free
  6306                           
  6307                           ;MOTEapp.c: 603: if ( (changeStates) || (selectButton) )
  6308  006766  0100               	movlb	0	; () banked
  6309  006768  67EE               	tstfsz	moteRunningProcess@changeStates& (0+255),b
  6310  00676A  D003               	goto	l11143
  6311                           
  6312                           ; BSR set to: 0
  6313  00676C  51E2               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6314  00676E  B4D8               	btfsc	status,2,c
  6315  006770  0012               	return	
  6316  006772                     l11143:
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;MOTEapp.c: 604: {
  6320                           ;MOTEapp.c: 605: oled_clear();
  6321  006772  EC88  F01A         	call	_oled_clear	;wreg free
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;MOTEapp.c: 606: oled_putString("  Sensor Data  ",0,0);
  6325  006776  0E7B               	movlw	high STR_80
  6326  006778  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6327  00677A  0EEC               	movlw	low STR_80
  6328  00677C  6FD3               	movwf	oled_putString@string& (0+255),b
  6329  00677E  0E00               	movlw	0
  6330  006780  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6331  006782  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6332  006784  EC08  F020         	call	_oled_putString	;wreg free
  6333                           
  6334                           ;MOTEapp.c: 607: oled_putString("    Display    ",0,1);
  6335  006788  0E7B               	movlw	high STR_81
  6336  00678A  0100               	movlb	0	; () banked
  6337  00678C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6338  00678E  0EDC               	movlw	low STR_81
  6339  006790  6FD3               	movwf	oled_putString@string& (0+255),b
  6340  006792  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6341  006794  0E01               	movlw	1
  6342  006796  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6343  006798  EC08  F020         	call	_oled_putString	;wreg free
  6344                           
  6345                           ;MOTEapp.c: 608: oled_putString("(NAV)    (SEL) ",0,3);
  6346  00679C  0E7B               	movlw	high STR_75
  6347  00679E  0100               	movlb	0	; () banked
  6348  0067A0  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6349  0067A2  0EFC               	movlw	low STR_75
  6350  0067A4  6FD3               	movwf	oled_putString@string& (0+255),b
  6351  0067A6  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6352  0067A8  0E03               	movlw	3
  6353  0067AA  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6354  0067AC  EC08  F020         	call	_oled_putString	;wreg free
  6355  0067B0  D752               	goto	l11105
  6356  0067B2                     l11153:
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;MOTEapp.c: 613: if (changeStates)
  6360  0067B2  51EE               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6361  0067B4  E023               	bz	l11165
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;MOTEapp.c: 614: {
  6365                           ;MOTEapp.c: 615: oled_clear();
  6366  0067B6  EC88  F01A         	call	_oled_clear	;wreg free
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;MOTEapp.c: 616: oled_putString("  Issue Uplink  ",0,0);
  6370  0067BA  0E7A               	movlw	high STR_93
  6371  0067BC  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6372  0067BE  0EFF               	movlw	low STR_93
  6373  0067C0  6FD3               	movwf	oled_putString@string& (0+255),b
  6374  0067C2  0E00               	movlw	0
  6375  0067C4  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6376  0067C6  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6377  0067C8  EC08  F020         	call	_oled_putString	;wreg free
  6378                           
  6379                           ;MOTEapp.c: 617: oled_putString(" LoRaWAN Packet ",0,1);
  6380  0067CC  0E7B               	movlw	high STR_94
  6381  0067CE  0100               	movlb	0	; () banked
  6382  0067D0  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6383  0067D2  0E32               	movlw	low STR_94
  6384  0067D4  6FD3               	movwf	oled_putString@string& (0+255),b
  6385  0067D6  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6386  0067D8  0E01               	movlw	1
  6387  0067DA  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6388  0067DC  EC08  F020         	call	_oled_putString	;wreg free
  6389                           
  6390                           ;MOTEapp.c: 618: oled_putString("(NAV)    (SEL) ",0,3);
  6391  0067E0  0E7B               	movlw	high STR_75
  6392  0067E2  0100               	movlb	0	; () banked
  6393  0067E4  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6394  0067E6  0EFC               	movlw	low STR_75
  6395  0067E8  6FD3               	movwf	oled_putString@string& (0+255),b
  6396  0067EA  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6397  0067EC  0E03               	movlw	3
  6398  0067EE  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6399  0067F0  EC08  F020         	call	_oled_putString	;wreg free
  6400  0067F4                     l11163:
  6401                           
  6402                           ;MOTEapp.c: 619: runningState = runningUplink;
  6403  0067F4  0E06               	movlw	6
  6404  0067F6  0100               	movlb	0	; () banked
  6405  0067F8  6F96               	movwf	_runningState& (0+255),b
  6406                           
  6407                           ;MOTEapp.c: 620: }
  6408  0067FA  0C06               	retlw	6
  6409  0067FC                     l11165:
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;MOTEapp.c: 621: else if (selectButton)
  6413  0067FC  51E2               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6414  0067FE  B4D8               	btfsc	status,2,c
  6415  006800  0012               	return	
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;MOTEapp.c: 622: {
  6419                           ;MOTEapp.c: 623: oled_clear();
  6420  006802  EC88  F01A         	call	_oled_clear	;wreg free
  6421                           
  6422                           ; BSR set to: 0
  6423                           ;MOTEapp.c: 624: oled_putString("<", 15,0);
  6424  006806  0E7F               	movlw	high STR_96
  6425  006808  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6426  00680A  0EF7               	movlw	low STR_96
  6427  00680C  6FD3               	movwf	oled_putString@string& (0+255),b
  6428  00680E  0E0F               	movlw	15
  6429  006810  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6430  006812  0E00               	movlw	0
  6431  006814  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6432  006816  EC08  F020         	call	_oled_putString	;wreg free
  6433                           
  6434                           ;MOTEapp.c: 625: oled_putString("Data Rate:   0", 0,0);
  6435  00681A  0E7C               	movlw	high STR_97
  6436  00681C  0100               	movlb	0	; () banked
  6437  00681E  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6438  006820  0E79               	movlw	low STR_97
  6439  006822  6FD3               	movwf	oled_putString@string& (0+255),b
  6440  006824  0E00               	movlw	0
  6441  006826  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6442  006828  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6443  00682A  EC08  F020         	call	_oled_putString	;wreg free
  6444                           
  6445                           ;MOTEapp.c: 626: oled_putString("Data Rate:   1", 0,1);
  6446  00682E  0E7C               	movlw	high STR_98
  6447  006830  0100               	movlb	0	; () banked
  6448  006832  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6449  006834  0E88               	movlw	low STR_98
  6450  006836  6FD3               	movwf	oled_putString@string& (0+255),b
  6451  006838  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6452  00683A  0E01               	movlw	1
  6453  00683C  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6454  00683E  EC08  F020         	call	_oled_putString	;wreg free
  6455                           
  6456                           ;MOTEapp.c: 627: oled_putString("Data Rate:   2", 0,2);
  6457  006842  0E7C               	movlw	high STR_99
  6458  006844  0100               	movlb	0	; () banked
  6459  006846  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6460  006848  0E97               	movlw	low STR_99
  6461  00684A  6FD3               	movwf	oled_putString@string& (0+255),b
  6462  00684C  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6463  00684E  0E02               	movlw	2
  6464  006850  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6465  006852  EC08  F020         	call	_oled_putString	;wreg free
  6466                           
  6467                           ;MOTEapp.c: 628: oled_putString("Data Rate:   3", 0,3);
  6468  006856  0E7C               	movlw	high STR_100
  6469  006858  0100               	movlb	0	; () banked
  6470  00685A  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6471  00685C  0EA6               	movlw	low STR_100
  6472  00685E  6FD3               	movwf	oled_putString@string& (0+255),b
  6473  006860  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6474  006862  0E03               	movlw	3
  6475  006864  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6476  006866  EC08  F020         	call	_oled_putString	;wreg free
  6477                           
  6478                           ;MOTEapp.c: 630: if (dataRateSelection == 0)
  6479  00686A  0100               	movlb	0	; () banked
  6480  00686C  67FA               	tstfsz	_dataRateSelection& (0+255),b
  6481  00686E  D00B               	goto	l11183
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;MOTEapp.c: 631: oled_putString("*", 14,0);
  6485  006870  0E7F               	movlw	high STR_101
  6486  006872  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6487  006874  0EF5               	movlw	low STR_101
  6488  006876  6FD3               	movwf	oled_putString@string& (0+255),b
  6489  006878  0E0E               	movlw	14
  6490  00687A  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6491  00687C  0E00               	movlw	0
  6492  00687E  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6493  006880  EC08  F020         	call	_oled_putString	;wreg free
  6494  006884  D028               	goto	l11195
  6495  006886                     l11183:
  6496                           
  6497                           ; BSR set to: 0
  6498                           ;MOTEapp.c: 632: else if (dataRateSelection == 1)
  6499  006886  05FA               	decf	_dataRateSelection& (0+255),w,b
  6500  006888  E10B               	bnz	l11187
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;MOTEapp.c: 633: oled_putString("*", 14,1);
  6504  00688A  0E7F               	movlw	high STR_101
  6505  00688C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6506  00688E  0EF5               	movlw	low STR_101
  6507  006890  6FD3               	movwf	oled_putString@string& (0+255),b
  6508  006892  0E0E               	movlw	14
  6509  006894  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6510  006896  0E01               	movlw	1
  6511  006898  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6512  00689A  EC08  F020         	call	_oled_putString	;wreg free
  6513  00689E  D01B               	goto	l11195
  6514  0068A0                     l11187:
  6515                           
  6516                           ; BSR set to: 0
  6517                           ;MOTEapp.c: 634: else if (dataRateSelection == 2)
  6518  0068A0  51FA               	movf	_dataRateSelection& (0+255),w,b
  6519  0068A2  0A02               	xorlw	2
  6520  0068A4  E10B               	bnz	l11191
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;MOTEapp.c: 635: oled_putString("*", 14,2);
  6524  0068A6  0E7F               	movlw	high STR_101
  6525  0068A8  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6526  0068AA  0EF5               	movlw	low STR_101
  6527  0068AC  6FD3               	movwf	oled_putString@string& (0+255),b
  6528  0068AE  0E0E               	movlw	14
  6529  0068B0  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6530  0068B2  0E02               	movlw	2
  6531  0068B4  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6532  0068B6  EC08  F020         	call	_oled_putString	;wreg free
  6533  0068BA  D00D               	goto	l11195
  6534  0068BC                     l11191:
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;MOTEapp.c: 636: else if (dataRateSelection == 3)
  6538  0068BC  51FA               	movf	_dataRateSelection& (0+255),w,b
  6539  0068BE  0A03               	xorlw	3
  6540  0068C0  E10A               	bnz	l11195
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;MOTEapp.c: 637: oled_putString("*", 14,3);
  6544  0068C2  0E7F               	movlw	high STR_101
  6545  0068C4  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6546  0068C6  0EF5               	movlw	low STR_101
  6547  0068C8  6FD3               	movwf	oled_putString@string& (0+255),b
  6548  0068CA  0E0E               	movlw	14
  6549  0068CC  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6550  0068CE  0E03               	movlw	3
  6551  0068D0  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6552  0068D2  EC08  F020         	call	_oled_putString	;wreg free
  6553  0068D6                     l11195:
  6554                           
  6555                           ;MOTEapp.c: 638: runningState = runningDataRateSelect;
  6556  0068D6  0E04               	movlw	4
  6557  0068D8  0100               	movlb	0	; () banked
  6558  0068DA  6F96               	movwf	_runningState& (0+255),b
  6559  0068DC  0C04               	retlw	4
  6560  0068DE                     l11197:
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;MOTEapp.c: 642: if (changeStates)
  6564  0068DE  51EE               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6565  0068E0  E101 D2E9          	bz	l11469
  6566                           
  6567                           ; BSR set to: 0
  6568                           ;MOTEapp.c: 643: {
  6569                           ;MOTEapp.c: 644: dataRatePosition++;
  6570  0068E4  2B8F               	incf	_dataRatePosition& (0+255),f,b
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;MOTEapp.c: 646: if (dataRatePosition > 9)
  6574  0068E6  0E09               	movlw	9
  6575  0068E8  658F               	cpfsgt	_dataRatePosition& (0+255),b
  6576  0068EA  D2C6               	goto	l11467
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;MOTEapp.c: 647: dataRatePosition = 0;
  6580  0068EC  6B8F               	clrf	_dataRatePosition& (0+255),b
  6581  0068EE  D2C4               	goto	l11467
  6582  0068F0                     l11205:
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;MOTEapp.c: 652: oled_clear();
  6586  0068F0  EC88  F01A         	call	_oled_clear	;wreg free
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;MOTEapp.c: 653: oled_putString("<", 15,0);
  6590  0068F4  0E7F               	movlw	high STR_96
  6591  0068F6  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6592  0068F8  0EF7               	movlw	low STR_96
  6593  0068FA  6FD3               	movwf	oled_putString@string& (0+255),b
  6594  0068FC  0E0F               	movlw	15
  6595  0068FE  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6596  006900  0E00               	movlw	0
  6597  006902  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6598  006904  EC08  F020         	call	_oled_putString	;wreg free
  6599                           
  6600                           ;MOTEapp.c: 654: oled_putString("Data Rate:   0", 0,0);
  6601  006908  0E7C               	movlw	high STR_97
  6602  00690A  0100               	movlb	0	; () banked
  6603  00690C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6604  00690E  0E79               	movlw	low STR_97
  6605  006910  6FD3               	movwf	oled_putString@string& (0+255),b
  6606  006912  0E00               	movlw	0
  6607  006914  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6608  006916  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6609  006918  EC08  F020         	call	_oled_putString	;wreg free
  6610                           
  6611                           ;MOTEapp.c: 655: oled_putString("Data Rate:   1", 0,1);
  6612  00691C  0E7C               	movlw	high STR_98
  6613  00691E  0100               	movlb	0	; () banked
  6614  006920  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6615  006922  0E88               	movlw	low STR_98
  6616  006924  6FD3               	movwf	oled_putString@string& (0+255),b
  6617  006926  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6618  006928  0E01               	movlw	1
  6619  00692A  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6620  00692C  EC08  F020         	call	_oled_putString	;wreg free
  6621                           
  6622                           ;MOTEapp.c: 656: oled_putString("Data Rate:   2", 0,2);
  6623  006930  0E7C               	movlw	high STR_99
  6624  006932  0100               	movlb	0	; () banked
  6625  006934  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6626  006936  0E97               	movlw	low STR_99
  6627  006938  6FD3               	movwf	oled_putString@string& (0+255),b
  6628  00693A  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6629  00693C  0E02               	movlw	2
  6630  00693E  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6631  006940  EC08  F020         	call	_oled_putString	;wreg free
  6632                           
  6633                           ;MOTEapp.c: 657: oled_putString("Data Rate:   3", 0,3);
  6634  006944  0E7C               	movlw	high STR_100
  6635  006946  0100               	movlb	0	; () banked
  6636  006948  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6637  00694A  0EA6               	movlw	low STR_100
  6638  00694C  6FD3               	movwf	oled_putString@string& (0+255),b
  6639  00694E  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6640  006950  0E03               	movlw	3
  6641  006952  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6642  006954  EC08  F020         	call	_oled_putString	;wreg free
  6643                           
  6644                           ;MOTEapp.c: 659: if (dataRateSelection == 0)
  6645  006958  0100               	movlb	0	; () banked
  6646  00695A  67FA               	tstfsz	_dataRateSelection& (0+255),b
  6647  00695C  D001               	goto	l11221
  6648  00695E  D240               	goto	L30
  6649  006960                     l11221:
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;MOTEapp.c: 661: else if (dataRateSelection == 1)
  6653  006960  05FA               	decf	_dataRateSelection& (0+255),w,b
  6654  006962  E101               	bnz	l11225
  6655  006964  D0D4               	goto	L56
  6656  006966                     l11225:
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;MOTEapp.c: 663: else if (dataRateSelection == 2)
  6660  006966  51FA               	movf	_dataRateSelection& (0+255),w,b
  6661  006968  0A02               	xorlw	2
  6662  00696A  E101               	bnz	l11229
  6663  00696C  D0DC               	goto	L57
  6664  00696E                     l11229:
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;MOTEapp.c: 665: else if (dataRateSelection == 3)
  6668  00696E  51FA               	movf	_dataRateSelection& (0+255),w,b
  6669  006970  0A03               	xorlw	3
  6670  006972  D086               	goto	L55
  6671  006974                     l11233:
  6672                           
  6673                           ; BSR set to: 0
  6674                           ;MOTEapp.c: 669: oled_clear();
  6675  006974  EC88  F01A         	call	_oled_clear	;wreg free
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;MOTEapp.c: 670: oled_putString("<", 15,0);
  6679  006978  0E7F               	movlw	high STR_96
  6680  00697A  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6681  00697C  0EF7               	movlw	low STR_96
  6682  00697E  6FD3               	movwf	oled_putString@string& (0+255),b
  6683  006980  0E0F               	movlw	15
  6684  006982  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6685  006984  0E00               	movlw	0
  6686  006986  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6687  006988  EC08  F020         	call	_oled_putString	;wreg free
  6688                           
  6689                           ;MOTEapp.c: 671: oled_putString("Data Rate:   1", 0,0);
  6690  00698C  0E7C               	movlw	high STR_98
  6691  00698E  0100               	movlb	0	; () banked
  6692  006990  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6693  006992  0E88               	movlw	low STR_98
  6694  006994  6FD3               	movwf	oled_putString@string& (0+255),b
  6695  006996  0E00               	movlw	0
  6696  006998  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6697  00699A  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6698  00699C  EC08  F020         	call	_oled_putString	;wreg free
  6699                           
  6700                           ;MOTEapp.c: 672: oled_putString("Data Rate:   2", 0,1);
  6701  0069A0  0E7C               	movlw	high STR_99
  6702  0069A2  0100               	movlb	0	; () banked
  6703  0069A4  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6704  0069A6  0E97               	movlw	low STR_99
  6705  0069A8  6FD3               	movwf	oled_putString@string& (0+255),b
  6706  0069AA  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6707  0069AC  0E01               	movlw	1
  6708  0069AE  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6709  0069B0  EC08  F020         	call	_oled_putString	;wreg free
  6710                           
  6711                           ;MOTEapp.c: 673: oled_putString("Data Rate:   3", 0,2);
  6712  0069B4  0E7C               	movlw	high STR_100
  6713  0069B6  0100               	movlb	0	; () banked
  6714  0069B8  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6715  0069BA  0EA6               	movlw	low STR_100
  6716  0069BC  6FD3               	movwf	oled_putString@string& (0+255),b
  6717  0069BE  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6718  0069C0  0E02               	movlw	2
  6719  0069C2  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6720  0069C4  EC08  F020         	call	_oled_putString	;wreg free
  6721                           
  6722                           ;MOTEapp.c: 674: oled_putString("Data Rate:   4", 0,3);
  6723  0069C8  0E7C               	movlw	high STR_118
  6724  0069CA  0100               	movlb	0	; () banked
  6725  0069CC  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6726  0069CE  0EB5               	movlw	low STR_118
  6727  0069D0  6FD3               	movwf	oled_putString@string& (0+255),b
  6728  0069D2  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6729  0069D4  0E03               	movlw	3
  6730  0069D6  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6731  0069D8  EC08  F020         	call	_oled_putString	;wreg free
  6732                           
  6733                           ;MOTEapp.c: 676: if (dataRateSelection == 1)
  6734  0069DC  0100               	movlb	0	; () banked
  6735  0069DE  05FA               	decf	_dataRateSelection& (0+255),w,b
  6736  0069E0  E101               	bnz	l11249
  6737  0069E2  D1FE               	goto	L30
  6738  0069E4                     l11249:
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;MOTEapp.c: 678: else if (dataRateSelection == 2)
  6742  0069E4  51FA               	movf	_dataRateSelection& (0+255),w,b
  6743  0069E6  0A02               	xorlw	2
  6744  0069E8  E101               	bnz	l11253
  6745  0069EA  D091               	goto	L56
  6746  0069EC                     l11253:
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;MOTEapp.c: 680: else if (dataRateSelection == 3)
  6750  0069EC  51FA               	movf	_dataRateSelection& (0+255),w,b
  6751  0069EE  0A03               	xorlw	3
  6752  0069F0  E101               	bnz	l11257
  6753  0069F2  D099               	goto	L57
  6754  0069F4                     l11257:
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;MOTEapp.c: 682: else if (dataRateSelection == 4)
  6758  0069F4  51FA               	movf	_dataRateSelection& (0+255),w,b
  6759  0069F6  0A04               	xorlw	4
  6760  0069F8  D043               	goto	L55
  6761  0069FA                     l11261:
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;MOTEapp.c: 686: oled_clear();
  6765  0069FA  EC88  F01A         	call	_oled_clear	;wreg free
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;MOTEapp.c: 687: oled_putString("<", 15,0);
  6769  0069FE  0E7F               	movlw	high STR_96
  6770  006A00  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6771  006A02  0EF7               	movlw	low STR_96
  6772  006A04  6FD3               	movwf	oled_putString@string& (0+255),b
  6773  006A06  0E0F               	movlw	15
  6774  006A08  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6775  006A0A  0E00               	movlw	0
  6776  006A0C  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6777  006A0E  EC08  F020         	call	_oled_putString	;wreg free
  6778                           
  6779                           ;MOTEapp.c: 688: oled_putString("Data Rate:   2", 0,0);
  6780  006A12  0E7C               	movlw	high STR_99
  6781  006A14  0100               	movlb	0	; () banked
  6782  006A16  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6783  006A18  0E97               	movlw	low STR_99
  6784  006A1A  6FD3               	movwf	oled_putString@string& (0+255),b
  6785  006A1C  0E00               	movlw	0
  6786  006A1E  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6787  006A20  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6788  006A22  EC08  F020         	call	_oled_putString	;wreg free
  6789                           
  6790                           ;MOTEapp.c: 689: oled_putString("Data Rate:   3", 0,1);
  6791  006A26  0E7C               	movlw	high STR_100
  6792  006A28  0100               	movlb	0	; () banked
  6793  006A2A  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6794  006A2C  0EA6               	movlw	low STR_100
  6795  006A2E  6FD3               	movwf	oled_putString@string& (0+255),b
  6796  006A30  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6797  006A32  0E01               	movlw	1
  6798  006A34  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6799  006A36  EC08  F020         	call	_oled_putString	;wreg free
  6800                           
  6801                           ;MOTEapp.c: 690: oled_putString("Data Rate:   4", 0,2);
  6802  006A3A  0E7C               	movlw	high STR_118
  6803  006A3C  0100               	movlb	0	; () banked
  6804  006A3E  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6805  006A40  0EB5               	movlw	low STR_118
  6806  006A42  6FD3               	movwf	oled_putString@string& (0+255),b
  6807  006A44  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6808  006A46  0E02               	movlw	2
  6809  006A48  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6810  006A4A  EC08  F020         	call	_oled_putString	;wreg free
  6811                           
  6812                           ;MOTEapp.c: 691: oled_putString("Data Rate:   5", 0,3);
  6813  006A4E  0E7C               	movlw	high STR_127
  6814  006A50  0100               	movlb	0	; () banked
  6815  006A52  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6816  006A54  0EC4               	movlw	low STR_127
  6817  006A56  6FD3               	movwf	oled_putString@string& (0+255),b
  6818  006A58  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6819  006A5A  0E03               	movlw	3
  6820  006A5C  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6821  006A5E  EC08  F020         	call	_oled_putString	;wreg free
  6822                           
  6823                           ;MOTEapp.c: 693: if (dataRateSelection == 2)
  6824  006A62  0100               	movlb	0	; () banked
  6825  006A64  51FA               	movf	_dataRateSelection& (0+255),w,b
  6826  006A66  0A02               	xorlw	2
  6827  006A68  E101               	bnz	l11277
  6828  006A6A  D1BA               	goto	L30
  6829  006A6C                     l11277:
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;MOTEapp.c: 695: else if (dataRateSelection == 3)
  6833  006A6C  51FA               	movf	_dataRateSelection& (0+255),w,b
  6834  006A6E  0A03               	xorlw	3
  6835  006A70  E101               	bnz	l11281
  6836  006A72  D04D               	goto	L56
  6837  006A74                     l11281:
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;MOTEapp.c: 697: else if (dataRateSelection == 4)
  6841  006A74  51FA               	movf	_dataRateSelection& (0+255),w,b
  6842  006A76  0A04               	xorlw	4
  6843  006A78  E101               	bnz	l11285
  6844  006A7A  D055               	goto	L57
  6845  006A7C                     l11285:
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;MOTEapp.c: 699: else if (dataRateSelection == 5)
  6849  006A7C  51FA               	movf	_dataRateSelection& (0+255),w,b
  6850  006A7E  0A05               	xorlw	5
  6851  006A80                     L55:
  6852  006A80  A4D8               	btfss	status,2,c
  6853  006A82  0012               	return	
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;MOTEapp.c: 700: oled_putString("*", 14,3);
  6857  006A84  0E7F               	movlw	high STR_101
  6858  006A86  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6859  006A88  0EF5               	movlw	low STR_101
  6860  006A8A  6FD3               	movwf	oled_putString@string& (0+255),b
  6861  006A8C  0E0E               	movlw	14
  6862  006A8E  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6863  006A90  0E03               	movlw	3
  6864  006A92  EFBB  F03A         	goto	L37
  6865  006A96                     l11289:
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;MOTEapp.c: 703: oled_clear();
  6869  006A96  EC88  F01A         	call	_oled_clear	;wreg free
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;MOTEapp.c: 704: oled_putString("<", 15,0);
  6873  006A9A  0E7F               	movlw	high STR_96
  6874  006A9C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6875  006A9E  0EF7               	movlw	low STR_96
  6876  006AA0  6FD3               	movwf	oled_putString@string& (0+255),b
  6877  006AA2  0E0F               	movlw	15
  6878  006AA4  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6879  006AA6  0E00               	movlw	0
  6880  006AA8  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6881  006AAA  EC08  F020         	call	_oled_putString	;wreg free
  6882                           
  6883                           ;MOTEapp.c: 705: oled_putString("Data Rate:   3", 0,0);
  6884  006AAE  0E7C               	movlw	high STR_100
  6885  006AB0  0100               	movlb	0	; () banked
  6886  006AB2  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6887  006AB4  0EA6               	movlw	low STR_100
  6888  006AB6  6FD3               	movwf	oled_putString@string& (0+255),b
  6889  006AB8  0E00               	movlw	0
  6890  006ABA  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6891  006ABC  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6892  006ABE  EC08  F020         	call	_oled_putString	;wreg free
  6893                           
  6894                           ;MOTEapp.c: 706: oled_putString("Data Rate:   4", 0,1);
  6895  006AC2  0E7C               	movlw	high STR_118
  6896  006AC4  0100               	movlb	0	; () banked
  6897  006AC6  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6898  006AC8  0EB5               	movlw	low STR_118
  6899  006ACA  6FD3               	movwf	oled_putString@string& (0+255),b
  6900  006ACC  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6901  006ACE  0E01               	movlw	1
  6902  006AD0  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6903  006AD2  EC08  F020         	call	_oled_putString	;wreg free
  6904                           
  6905                           ;MOTEapp.c: 707: oled_putString("Data Rate:   5", 0,2);
  6906  006AD6  0E7C               	movlw	high STR_127
  6907  006AD8  0100               	movlb	0	; () banked
  6908  006ADA  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6909  006ADC  0EC4               	movlw	low STR_127
  6910  006ADE  6FD3               	movwf	oled_putString@string& (0+255),b
  6911  006AE0  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6912  006AE2  0E02               	movlw	2
  6913  006AE4  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6914  006AE6  EC08  F020         	call	_oled_putString	;wreg free
  6915                           
  6916                           ;MOTEapp.c: 708: oled_putString("Data Rate:   6", 0,3);
  6917  006AEA  0E7C               	movlw	high STR_136
  6918  006AEC  0100               	movlb	0	; () banked
  6919  006AEE  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6920  006AF0  0ED3               	movlw	low STR_136
  6921  006AF2  6FD3               	movwf	oled_putString@string& (0+255),b
  6922  006AF4  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  6923  006AF6  0E03               	movlw	3
  6924  006AF8  6FD6               	movwf	oled_putString@start_page& (0+255),b
  6925  006AFA  EC08  F020         	call	_oled_putString	;wreg free
  6926                           
  6927                           ;MOTEapp.c: 710: if (dataRateSelection == 3)
  6928  006AFE  0100               	movlb	0	; () banked
  6929  006B00  51FA               	movf	_dataRateSelection& (0+255),w,b
  6930  006B02  0A03               	xorlw	3
  6931  006B04  E101               	bnz	l11305
  6932  006B06  D16C               	goto	L30
  6933  006B08                     l11305:
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;MOTEapp.c: 712: else if (dataRateSelection == 4)
  6937  006B08  51FA               	movf	_dataRateSelection& (0+255),w,b
  6938  006B0A  0A04               	xorlw	4
  6939  006B0C  E109               	bnz	l11309
  6940  006B0E                     L56:
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;MOTEapp.c: 713: oled_putString("*", 14,1);
  6944  006B0E  0E7F               	movlw	high STR_101
  6945  006B10  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6946  006B12  0EF5               	movlw	low STR_101
  6947  006B14  6FD3               	movwf	oled_putString@string& (0+255),b
  6948  006B16  0E0E               	movlw	14
  6949  006B18  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6950  006B1A  0E01               	movlw	1
  6951  006B1C  EFBB  F03A         	goto	L37
  6952  006B20                     l11309:
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;MOTEapp.c: 714: else if (dataRateSelection == 5)
  6956  006B20  51FA               	movf	_dataRateSelection& (0+255),w,b
  6957  006B22  0A05               	xorlw	5
  6958  006B24  E107               	bnz	l11313
  6959  006B26                     L57:
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;MOTEapp.c: 715: oled_putString("*", 14,2);
  6963  006B26  0E7F               	movlw	high STR_101
  6964  006B28  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6965  006B2A  0EF5               	movlw	low STR_101
  6966  006B2C  6FD3               	movwf	oled_putString@string& (0+255),b
  6967  006B2E  0E0E               	movlw	14
  6968  006B30  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6969  006B32  D044               	goto	L46
  6970  006B34                     l11313:
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;MOTEapp.c: 716: else if (dataRateSelection == 6)
  6974  006B34  51FA               	movf	_dataRateSelection& (0+255),w,b
  6975  006B36  0A06               	xorlw	6
  6976  006B38  D7A3               	goto	L55
  6977  006B3A                     l11317:
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;MOTEapp.c: 720: oled_clear();
  6981  006B3A  EC88  F01A         	call	_oled_clear	;wreg free
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;MOTEapp.c: 721: oled_putString("<", 15,0);
  6985  006B3E  0E7F               	movlw	high STR_96
  6986  006B40  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6987  006B42  0EF7               	movlw	low STR_96
  6988  006B44  6FD3               	movwf	oled_putString@string& (0+255),b
  6989  006B46  0E0F               	movlw	15
  6990  006B48  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  6991  006B4A  0E00               	movlw	0
  6992  006B4C  6BD6               	clrf	oled_putString@start_page& (0+255),b
  6993  006B4E  EC08  F020         	call	_oled_putString	;wreg free
  6994                           
  6995                           ;MOTEapp.c: 722: oled_putString("Data Rate:   4", 0,0);
  6996  006B52  0E7C               	movlw	high STR_118
  6997  006B54  0100               	movlb	0	; () banked
  6998  006B56  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  6999  006B58  0EB5               	movlw	low STR_118
  7000  006B5A  6FD3               	movwf	oled_putString@string& (0+255),b
  7001  006B5C  0E00               	movlw	0
  7002  006B5E  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7003  006B60  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7004  006B62  EC08  F020         	call	_oled_putString	;wreg free
  7005                           
  7006                           ;MOTEapp.c: 723: oled_putString("Data Rate:   5", 0,1);
  7007  006B66  0E7C               	movlw	high STR_127
  7008  006B68  0100               	movlb	0	; () banked
  7009  006B6A  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7010  006B6C  0EC4               	movlw	low STR_127
  7011  006B6E  6FD3               	movwf	oled_putString@string& (0+255),b
  7012  006B70  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7013  006B72  0E01               	movlw	1
  7014  006B74  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7015  006B76  EC08  F020         	call	_oled_putString	;wreg free
  7016                           
  7017                           ;MOTEapp.c: 724: oled_putString("Data Rate:   6", 0,2);
  7018  006B7A  0E7C               	movlw	high STR_136
  7019  006B7C  0100               	movlb	0	; () banked
  7020  006B7E  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7021  006B80  0ED3               	movlw	low STR_136
  7022  006B82  6FD3               	movwf	oled_putString@string& (0+255),b
  7023  006B84  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7024  006B86  0E02               	movlw	2
  7025  006B88  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7026  006B8A  EC08  F020         	call	_oled_putString	;wreg free
  7027                           
  7028                           ;MOTEapp.c: 725: oled_putString("Data Rate:   7", 0,3);
  7029  006B8E  0E7C               	movlw	high STR_145
  7030  006B90  0100               	movlb	0	; () banked
  7031  006B92  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7032  006B94  0EE2               	movlw	low STR_145
  7033  006B96  6FD3               	movwf	oled_putString@string& (0+255),b
  7034  006B98  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7035  006B9A  0E03               	movlw	3
  7036  006B9C  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7037  006B9E  EC08  F020         	call	_oled_putString	;wreg free
  7038                           
  7039                           ;MOTEapp.c: 727: if (dataRateSelection == 4)
  7040  006BA2  0100               	movlb	0	; () banked
  7041  006BA4  51FA               	movf	_dataRateSelection& (0+255),w,b
  7042  006BA6  0A04               	xorlw	4
  7043  006BA8  E101               	bnz	l11333
  7044  006BAA  D11A               	goto	L30
  7045  006BAC                     l11333:
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;MOTEapp.c: 729: else if (dataRateSelection == 5)
  7049  006BAC  51FA               	movf	_dataRateSelection& (0+255),w,b
  7050  006BAE  0A05               	xorlw	5
  7051  006BB0  E101               	bnz	l11337
  7052  006BB2  D7AD               	goto	L56
  7053  006BB4                     l11337:
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;MOTEapp.c: 731: else if (dataRateSelection == 6)
  7057  006BB4  51FA               	movf	_dataRateSelection& (0+255),w,b
  7058  006BB6  0A06               	xorlw	6
  7059  006BB8  E104               	bnz	l11341
  7060  006BBA  D7B5               	goto	L57
  7061  006BBC                     L46:
  7062  006BBC  0E02               	movlw	2
  7063  006BBE  EFBB  F03A         	goto	L37
  7064  006BC2                     l11341:
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;MOTEapp.c: 733: else if (dataRateSelection == 7)
  7068  006BC2  51FA               	movf	_dataRateSelection& (0+255),w,b
  7069  006BC4  0A07               	xorlw	7
  7070  006BC6  D75C               	goto	L55
  7071  006BC8                     l11345:
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;MOTEapp.c: 737: oled_clear();
  7075  006BC8  EC88  F01A         	call	_oled_clear	;wreg free
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;MOTEapp.c: 738: oled_putString("<", 15,0);
  7079  006BCC  0E7F               	movlw	high STR_96
  7080  006BCE  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7081  006BD0  0EF7               	movlw	low STR_96
  7082  006BD2  6FD3               	movwf	oled_putString@string& (0+255),b
  7083  006BD4  0E0F               	movlw	15
  7084  006BD6  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7085  006BD8  0E00               	movlw	0
  7086  006BDA  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7087  006BDC  EC08  F020         	call	_oled_putString	;wreg free
  7088                           
  7089                           ;MOTEapp.c: 739: oled_putString("Data Rate:   5", 0,0);
  7090  006BE0  0E7C               	movlw	high STR_127
  7091  006BE2  0100               	movlb	0	; () banked
  7092  006BE4  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7093  006BE6  0EC4               	movlw	low STR_127
  7094  006BE8  6FD3               	movwf	oled_putString@string& (0+255),b
  7095  006BEA  0E00               	movlw	0
  7096  006BEC  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7097  006BEE  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7098  006BF0  EC08  F020         	call	_oled_putString	;wreg free
  7099                           
  7100                           ;MOTEapp.c: 740: oled_putString("Data Rate:   6", 0,1);
  7101  006BF4  0E7C               	movlw	high STR_136
  7102  006BF6  0100               	movlb	0	; () banked
  7103  006BF8  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7104  006BFA  0ED3               	movlw	low STR_136
  7105  006BFC  6FD3               	movwf	oled_putString@string& (0+255),b
  7106  006BFE  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7107  006C00  0E01               	movlw	1
  7108  006C02  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7109  006C04  EC08  F020         	call	_oled_putString	;wreg free
  7110                           
  7111                           ;MOTEapp.c: 741: oled_putString("Data Rate:   7", 0,2);
  7112  006C08  0E7C               	movlw	high STR_145
  7113  006C0A  0100               	movlb	0	; () banked
  7114  006C0C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7115  006C0E  0EE2               	movlw	low STR_145
  7116  006C10  6FD3               	movwf	oled_putString@string& (0+255),b
  7117  006C12  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7118  006C14  0E02               	movlw	2
  7119  006C16  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7120  006C18  EC08  F020         	call	_oled_putString	;wreg free
  7121                           
  7122                           ;MOTEapp.c: 742: oled_putString("Auto Data Rate", 0,3);
  7123  006C1C  0E7C               	movlw	high STR_154
  7124  006C1E  0100               	movlb	0	; () banked
  7125  006C20  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7126  006C22  0EF1               	movlw	low STR_154
  7127  006C24  6FD3               	movwf	oled_putString@string& (0+255),b
  7128  006C26  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7129  006C28  0E03               	movlw	3
  7130  006C2A  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7131  006C2C  EC08  F020         	call	_oled_putString	;wreg free
  7132                           
  7133                           ;MOTEapp.c: 744: if (dataRateSelection == 5)
  7134  006C30  0100               	movlb	0	; () banked
  7135  006C32  51FA               	movf	_dataRateSelection& (0+255),w,b
  7136  006C34  0A05               	xorlw	5
  7137  006C36  E101               	bnz	l11361
  7138  006C38  D0D3               	goto	L30
  7139  006C3A                     l11361:
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;MOTEapp.c: 746: else if (dataRateSelection == 6)
  7143  006C3A  51FA               	movf	_dataRateSelection& (0+255),w,b
  7144  006C3C  0A06               	xorlw	6
  7145  006C3E  E101               	bnz	l11365
  7146  006C40  D766               	goto	L56
  7147  006C42                     l11365:
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;MOTEapp.c: 748: else if (dataRateSelection == 7)
  7151  006C42  51FA               	movf	_dataRateSelection& (0+255),w,b
  7152  006C44  0A07               	xorlw	7
  7153  006C46  E101               	bnz	l11369
  7154  006C48  D76E               	goto	L57
  7155  006C4A                     l11369:
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;MOTEapp.c: 750: else if (adrStatus)
  7159  006C4A  518B               	movf	_adrStatus& (0+255),w,b
  7160  006C4C  B4D8               	btfsc	status,2,c
  7161  006C4E  0012               	return	
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;MOTEapp.c: 751: oled_putString("*", 14,3);
  7165  006C50  0E7F               	movlw	high STR_101
  7166  006C52  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7167  006C54  0EF5               	movlw	low STR_101
  7168  006C56  6FD3               	movwf	oled_putString@string& (0+255),b
  7169  006C58  0E0E               	movlw	14
  7170  006C5A  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7171  006C5C  0E03               	movlw	3
  7172  006C5E  EFBB  F03A         	goto	L37
  7173  006C62                     l11373:
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;MOTEapp.c: 754: oled_clear();
  7177  006C62  EC88  F01A         	call	_oled_clear	;wreg free
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;MOTEapp.c: 755: oled_putString("<", 15,0);
  7181  006C66  0E7F               	movlw	high STR_96
  7182  006C68  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7183  006C6A  0EF7               	movlw	low STR_96
  7184  006C6C  6FD3               	movwf	oled_putString@string& (0+255),b
  7185  006C6E  0E0F               	movlw	15
  7186  006C70  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7187  006C72  0E00               	movlw	0
  7188  006C74  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7189  006C76  EC08  F020         	call	_oled_putString	;wreg free
  7190                           
  7191                           ;MOTEapp.c: 756: oled_putString("Data Rate:   6", 0,0);
  7192  006C7A  0E7C               	movlw	high STR_136
  7193  006C7C  0100               	movlb	0	; () banked
  7194  006C7E  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7195  006C80  0ED3               	movlw	low STR_136
  7196  006C82  6FD3               	movwf	oled_putString@string& (0+255),b
  7197  006C84  0E00               	movlw	0
  7198  006C86  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7199  006C88  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7200  006C8A  EC08  F020         	call	_oled_putString	;wreg free
  7201                           
  7202                           ;MOTEapp.c: 757: oled_putString("Data Rate:   7", 0,1);
  7203  006C8E  0E7C               	movlw	high STR_145
  7204  006C90  0100               	movlb	0	; () banked
  7205  006C92  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7206  006C94  0EE2               	movlw	low STR_145
  7207  006C96  6FD3               	movwf	oled_putString@string& (0+255),b
  7208  006C98  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7209  006C9A  0E01               	movlw	1
  7210  006C9C  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7211  006C9E  EC08  F020         	call	_oled_putString	;wreg free
  7212                           
  7213                           ;MOTEapp.c: 758: oled_putString("Auto Data Rate", 0,2);
  7214  006CA2  0E7C               	movlw	high STR_154
  7215  006CA4  0100               	movlb	0	; () banked
  7216  006CA6  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7217  006CA8  0EF1               	movlw	low STR_154
  7218  006CAA  6FD3               	movwf	oled_putString@string& (0+255),b
  7219  006CAC  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7220  006CAE  0E02               	movlw	2
  7221  006CB0  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7222  006CB2  EC08  F020         	call	_oled_putString	;wreg free
  7223                           
  7224                           ;MOTEapp.c: 759: oled_putString("Exit Menu     ", 0,3);
  7225  006CB6  0E7C               	movlw	high STR_163
  7226  006CB8  0100               	movlb	0	; () banked
  7227  006CBA  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7228  006CBC  0E4C               	movlw	low STR_163
  7229  006CBE  6FD3               	movwf	oled_putString@string& (0+255),b
  7230  006CC0  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7231  006CC2  0E03               	movlw	3
  7232  006CC4  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7233  006CC6  EC08  F020         	call	_oled_putString	;wreg free
  7234                           
  7235                           ;MOTEapp.c: 761: if (dataRateSelection == 6)
  7236  006CCA  0100               	movlb	0	; () banked
  7237  006CCC  51FA               	movf	_dataRateSelection& (0+255),w,b
  7238  006CCE  0A06               	xorlw	6
  7239  006CD0  E101               	bnz	l11389
  7240  006CD2  D086               	goto	L30
  7241  006CD4                     l11389:
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;MOTEapp.c: 763: else if (dataRateSelection == 7)
  7245  006CD4  51FA               	movf	_dataRateSelection& (0+255),w,b
  7246  006CD6  0A07               	xorlw	7
  7247  006CD8  E101               	bnz	l11393
  7248  006CDA  D719               	goto	L56
  7249  006CDC                     l11393:
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;MOTEapp.c: 765: else if (adrStatus)
  7253  006CDC  518B               	movf	_adrStatus& (0+255),w,b
  7254  006CDE  B4D8               	btfsc	status,2,c
  7255  006CE0  0012               	return	
  7256  006CE2  D721               	goto	L57
  7257  006CE4                     l11397:
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;MOTEapp.c: 769: oled_clear();
  7261  006CE4  EC88  F01A         	call	_oled_clear	;wreg free
  7262                           
  7263                           ; BSR set to: 0
  7264                           ;MOTEapp.c: 770: oled_putString("<", 15,0);
  7265  006CE8  0E7F               	movlw	high STR_96
  7266  006CEA  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7267  006CEC  0EF7               	movlw	low STR_96
  7268  006CEE  6FD3               	movwf	oled_putString@string& (0+255),b
  7269  006CF0  0E0F               	movlw	15
  7270  006CF2  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7271  006CF4  0E00               	movlw	0
  7272  006CF6  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7273  006CF8  EC08  F020         	call	_oled_putString	;wreg free
  7274                           
  7275                           ;MOTEapp.c: 771: oled_putString("Data Rate:   7", 0,0);
  7276  006CFC  0E7C               	movlw	high STR_145
  7277  006CFE  0100               	movlb	0	; () banked
  7278  006D00  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7279  006D02  0EE2               	movlw	low STR_145
  7280  006D04  6FD3               	movwf	oled_putString@string& (0+255),b
  7281  006D06  0E00               	movlw	0
  7282  006D08  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7283  006D0A  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7284  006D0C  EC08  F020         	call	_oled_putString	;wreg free
  7285                           
  7286                           ;MOTEapp.c: 772: oled_putString("Auto Data Rate", 0,1);
  7287  006D10  0E7C               	movlw	high STR_154
  7288  006D12  0100               	movlb	0	; () banked
  7289  006D14  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7290  006D16  0EF1               	movlw	low STR_154
  7291  006D18  6FD3               	movwf	oled_putString@string& (0+255),b
  7292  006D1A  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7293  006D1C  0E01               	movlw	1
  7294  006D1E  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7295  006D20  EC08  F020         	call	_oled_putString	;wreg free
  7296                           
  7297                           ;MOTEapp.c: 773: oled_putString("Exit Menu     ", 0,2);
  7298  006D24  0E7C               	movlw	high STR_163
  7299  006D26  0100               	movlb	0	; () banked
  7300  006D28  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7301  006D2A  0E4C               	movlw	low STR_163
  7302  006D2C  6FD3               	movwf	oled_putString@string& (0+255),b
  7303  006D2E  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7304  006D30  0E02               	movlw	2
  7305  006D32  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7306  006D34  EC08  F020         	call	_oled_putString	;wreg free
  7307                           
  7308                           ;MOTEapp.c: 774: oled_putString("Data Rate:   0", 0,3);
  7309  006D38  0E7C               	movlw	high STR_97
  7310  006D3A  0100               	movlb	0	; () banked
  7311  006D3C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7312  006D3E  0E79               	movlw	low STR_97
  7313  006D40  6FD3               	movwf	oled_putString@string& (0+255),b
  7314  006D42  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7315  006D44  0E03               	movlw	3
  7316  006D46  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7317  006D48  EC08  F020         	call	_oled_putString	;wreg free
  7318                           
  7319                           ;MOTEapp.c: 776: if (dataRateSelection == 7)
  7320  006D4C  0100               	movlb	0	; () banked
  7321  006D4E  51FA               	movf	_dataRateSelection& (0+255),w,b
  7322  006D50  0A07               	xorlw	7
  7323  006D52  E101               	bnz	l11413
  7324  006D54  D045               	goto	L30
  7325  006D56                     l11413:
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;MOTEapp.c: 778: else if (adrStatus)
  7329  006D56  518B               	movf	_adrStatus& (0+255),w,b
  7330  006D58  E001               	bz	l538
  7331  006D5A  D6D9               	goto	L56
  7332  006D5C                     l538:
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;MOTEapp.c: 780: else if (dataRateSelection == 0)
  7336  006D5C  67FA               	tstfsz	_dataRateSelection& (0+255),b
  7337  006D5E  0012               	return	
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;MOTEapp.c: 781: oled_putString("*", 14,3);
  7341  006D60  0E7F               	movlw	high STR_101
  7342  006D62  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7343  006D64  0EF5               	movlw	low STR_101
  7344  006D66  6FD3               	movwf	oled_putString@string& (0+255),b
  7345  006D68  0E0E               	movlw	14
  7346  006D6A  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7347  006D6C  0E03               	movlw	3
  7348  006D6E  EFBB  F03A         	goto	L37
  7349  006D72                     l11419:
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;MOTEapp.c: 784: oled_clear();
  7353  006D72  EC88  F01A         	call	_oled_clear	;wreg free
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;MOTEapp.c: 785: oled_putString("<", 15,0);
  7357  006D76  0E7F               	movlw	high STR_96
  7358  006D78  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7359  006D7A  0EF7               	movlw	low STR_96
  7360  006D7C  6FD3               	movwf	oled_putString@string& (0+255),b
  7361  006D7E  0E0F               	movlw	15
  7362  006D80  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7363  006D82  0E00               	movlw	0
  7364  006D84  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7365  006D86  EC08  F020         	call	_oled_putString	;wreg free
  7366                           
  7367                           ;MOTEapp.c: 786: oled_putString("Auto Data Rate", 0,0);
  7368  006D8A  0E7C               	movlw	high STR_154
  7369  006D8C  0100               	movlb	0	; () banked
  7370  006D8E  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7371  006D90  0EF1               	movlw	low STR_154
  7372  006D92  6FD3               	movwf	oled_putString@string& (0+255),b
  7373  006D94  0E00               	movlw	0
  7374  006D96  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7375  006D98  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7376  006D9A  EC08  F020         	call	_oled_putString	;wreg free
  7377                           
  7378                           ;MOTEapp.c: 787: oled_putString("Exit Menu     ", 0,1);
  7379  006D9E  0E7C               	movlw	high STR_163
  7380  006DA0  0100               	movlb	0	; () banked
  7381  006DA2  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7382  006DA4  0E4C               	movlw	low STR_163
  7383  006DA6  6FD3               	movwf	oled_putString@string& (0+255),b
  7384  006DA8  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7385  006DAA  0E01               	movlw	1
  7386  006DAC  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7387  006DAE  EC08  F020         	call	_oled_putString	;wreg free
  7388                           
  7389                           ;MOTEapp.c: 788: oled_putString("Data Rate:   0", 0,2);
  7390  006DB2  0E7C               	movlw	high STR_97
  7391  006DB4  0100               	movlb	0	; () banked
  7392  006DB6  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7393  006DB8  0E79               	movlw	low STR_97
  7394  006DBA  6FD3               	movwf	oled_putString@string& (0+255),b
  7395  006DBC  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7396  006DBE  0E02               	movlw	2
  7397  006DC0  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7398  006DC2  EC08  F020         	call	_oled_putString	;wreg free
  7399                           
  7400                           ;MOTEapp.c: 789: oled_putString("Data Rate:   1", 0,3);
  7401  006DC6  0E7C               	movlw	high STR_98
  7402  006DC8  0100               	movlb	0	; () banked
  7403  006DCA  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7404  006DCC  0E88               	movlw	low STR_98
  7405  006DCE  6FD3               	movwf	oled_putString@string& (0+255),b
  7406  006DD0  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7407  006DD2  0E03               	movlw	3
  7408  006DD4  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7409  006DD6  EC08  F020         	call	_oled_putString	;wreg free
  7410                           
  7411                           ;MOTEapp.c: 791: if (adrStatus)
  7412  006DDA  0100               	movlb	0	; () banked
  7413  006DDC  518B               	movf	_adrStatus& (0+255),w,b
  7414  006DDE  E009               	bz	l542
  7415  006DE0                     L30:
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;MOTEapp.c: 792: oled_putString("*", 14,0);
  7419  006DE0  0E7F               	movlw	high STR_101
  7420  006DE2  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7421  006DE4  0EF5               	movlw	low STR_101
  7422  006DE6  6FD3               	movwf	oled_putString@string& (0+255),b
  7423  006DE8  0E0E               	movlw	14
  7424  006DEA  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7425  006DEC  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7426  006DEE  EF08  F020         	goto	_oled_putString	;wreg free
  7427  006DF2                     l542:
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;MOTEapp.c: 793: else if (dataRateSelection == 0)
  7431  006DF2  67FA               	tstfsz	_dataRateSelection& (0+255),b
  7432  006DF4  D001               	goto	l11437
  7433  006DF6  D697               	goto	L57
  7434  006DF8                     l11437:
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;MOTEapp.c: 795: else if (dataRateSelection == 1)
  7438  006DF8  05FA               	decf	_dataRateSelection& (0+255),w,b
  7439  006DFA  D642               	goto	L55
  7440  006DFC                     l11441:
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;MOTEapp.c: 799: oled_clear();
  7444  006DFC  EC88  F01A         	call	_oled_clear	;wreg free
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;MOTEapp.c: 800: oled_putString("<", 15,0);
  7448  006E00  0E7F               	movlw	high STR_96
  7449  006E02  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7450  006E04  0EF7               	movlw	low STR_96
  7451  006E06  6FD3               	movwf	oled_putString@string& (0+255),b
  7452  006E08  0E0F               	movlw	15
  7453  006E0A  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7454  006E0C  0E00               	movlw	0
  7455  006E0E  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7456  006E10  EC08  F020         	call	_oled_putString	;wreg free
  7457                           
  7458                           ;MOTEapp.c: 801: oled_putString("Exit Menu     ", 0,0);
  7459  006E14  0E7C               	movlw	high STR_163
  7460  006E16  0100               	movlb	0	; () banked
  7461  006E18  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7462  006E1A  0E4C               	movlw	low STR_163
  7463  006E1C  6FD3               	movwf	oled_putString@string& (0+255),b
  7464  006E1E  0E00               	movlw	0
  7465  006E20  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7466  006E22  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7467  006E24  EC08  F020         	call	_oled_putString	;wreg free
  7468                           
  7469                           ;MOTEapp.c: 802: oled_putString("Data Rate:   0", 0,1);
  7470  006E28  0E7C               	movlw	high STR_97
  7471  006E2A  0100               	movlb	0	; () banked
  7472  006E2C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7473  006E2E  0E79               	movlw	low STR_97
  7474  006E30  6FD3               	movwf	oled_putString@string& (0+255),b
  7475  006E32  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7476  006E34  0E01               	movlw	1
  7477  006E36  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7478  006E38  EC08  F020         	call	_oled_putString	;wreg free
  7479                           
  7480                           ;MOTEapp.c: 803: oled_putString("Data Rate:   1", 0,2);
  7481  006E3C  0E7C               	movlw	high STR_98
  7482  006E3E  0100               	movlb	0	; () banked
  7483  006E40  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7484  006E42  0E88               	movlw	low STR_98
  7485  006E44  6FD3               	movwf	oled_putString@string& (0+255),b
  7486  006E46  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7487  006E48  0E02               	movlw	2
  7488  006E4A  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7489  006E4C  EC08  F020         	call	_oled_putString	;wreg free
  7490                           
  7491                           ;MOTEapp.c: 804: oled_putString("Data Rate:   2", 0,3);
  7492  006E50  0E7C               	movlw	high STR_99
  7493  006E52  0100               	movlb	0	; () banked
  7494  006E54  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7495  006E56  0E97               	movlw	low STR_99
  7496  006E58  6FD3               	movwf	oled_putString@string& (0+255),b
  7497  006E5A  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7498  006E5C  0E03               	movlw	3
  7499  006E5E  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7500  006E60  EC08  F020         	call	_oled_putString	;wreg free
  7501                           
  7502                           ;MOTEapp.c: 806: if (dataRateSelection == 0)
  7503  006E64  0100               	movlb	0	; () banked
  7504  006E66  67FA               	tstfsz	_dataRateSelection& (0+255),b
  7505  006E68  D001               	goto	l11457
  7506  006E6A  D651               	goto	L56
  7507  006E6C                     l11457:
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;MOTEapp.c: 808: else if (dataRateSelection == 1)
  7511  006E6C  05FA               	decf	_dataRateSelection& (0+255),w,b
  7512  006E6E  E101               	bnz	l11461
  7513  006E70  D65A               	goto	L57
  7514  006E72                     l11461:
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;MOTEapp.c: 810: else if (dataRateSelection == 2)
  7518  006E72  51FA               	movf	_dataRateSelection& (0+255),w,b
  7519  006E74  0A02               	xorlw	2
  7520  006E76  D604               	goto	L55
  7521  006E78                     l11467:
  7522                           
  7523                           ; BSR set to: 0
  7524  006E78  518F               	movf	_dataRatePosition& (0+255),w,b
  7525                           
  7526                           ; Switch size 1, requested type "speed"
  7527                           ; Number of cases is 10, Range of values is 0 to 9
  7528                           ; switch strategies available:
  7529                           ; Name         Instructions Cycles
  7530                           ; simple_byte           31    16 (average)
  7531                           ;	Chosen strategy is simple_byte
  7532  006E7A  E101 D539          	bz	l11205
  7533  006E7E  0A01               	xorlw	1	; case 1
  7534  006E80  E101 D578          	bz	l11233
  7535  006E84  0A03               	xorlw	3	; case 2
  7536  006E86  E101 D5B8          	bz	l11261
  7537  006E8A  0A01               	xorlw	1	; case 3
  7538  006E8C  E101 D603          	bz	l11289
  7539  006E90  0A07               	xorlw	7	; case 4
  7540  006E92  E101 D652          	bz	l11317
  7541  006E96  0A01               	xorlw	1	; case 5
  7542  006E98  E101 D696          	bz	l11345
  7543  006E9C  0A03               	xorlw	3	; case 6
  7544  006E9E  E101 D6E0          	bz	l11373
  7545  006EA2  0A01               	xorlw	1	; case 7
  7546  006EA4  E101 D71E          	bz	l11397
  7547  006EA8  0A0F               	xorlw	15	; case 8
  7548  006EAA  E101 D762          	bz	l11419
  7549  006EAE  0A01               	xorlw	1	; case 9
  7550  006EB0  A4D8               	btfss	status,2,c
  7551  006EB2  0012               	return	
  7552  006EB4  D7A3               	goto	l11441
  7553  006EB6                     l11469:
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;MOTEapp.c: 815: else if (selectButton)
  7557  006EB6  51E2               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7558  006EB8  B4D8               	btfsc	status,2,c
  7559  006EBA  0012               	return	
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;MOTEapp.c: 816: {
  7563                           ;MOTEapp.c: 817: if (dataRatePosition == 9)
  7564  006EBC  518F               	movf	_dataRatePosition& (0+255),w,b
  7565  006EBE  0A09               	xorlw	9
  7566  006EC0  E122               	bnz	l11485
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;MOTEapp.c: 818: {
  7570                           ;MOTEapp.c: 820: oled_clear();
  7571  006EC2  EC88  F01A         	call	_oled_clear	;wreg free
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;MOTEapp.c: 821: dataRatePosition = 0;
  7575  006EC6  6B8F               	clrf	_dataRatePosition& (0+255),b
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;MOTEapp.c: 822: oled_putString("  Select LoRa   ",0,0);
  7579  006EC8  0E7A               	movlw	high STR_83
  7580  006ECA  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7581  006ECC  0ECC               	movlw	low STR_83
  7582  006ECE  6FD3               	movwf	oled_putString@string& (0+255),b
  7583  006ED0  0E00               	movlw	0
  7584  006ED2  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7585  006ED4  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7586  006ED6  EC08  F020         	call	_oled_putString	;wreg free
  7587                           
  7588                           ;MOTEapp.c: 823: oled_putString("   Data Rate    ",0,1);
  7589  006EDA  0E7A               	movlw	high STR_84
  7590  006EDC  0100               	movlb	0	; () banked
  7591  006EDE  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7592  006EE0  0EBB               	movlw	low STR_84
  7593  006EE2  6FD3               	movwf	oled_putString@string& (0+255),b
  7594  006EE4  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7595  006EE6  0E01               	movlw	1
  7596  006EE8  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7597  006EEA  EC08  F020         	call	_oled_putString	;wreg free
  7598                           
  7599                           ;MOTEapp.c: 824: oled_putString("(NAV)    (SEL) ",0,3);
  7600  006EEE  0E7B               	movlw	high STR_75
  7601  006EF0  0100               	movlb	0	; () banked
  7602  006EF2  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7603  006EF4  0EFC               	movlw	low STR_75
  7604  006EF6  6FD3               	movwf	oled_putString@string& (0+255),b
  7605  006EF8  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7606  006EFA  0E03               	movlw	3
  7607  006EFC  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7608  006EFE  EC08  F020         	call	_oled_putString	;wreg free
  7609  006F02  EF50  F033         	goto	l11117
  7610  006F06                     l11485:
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;MOTEapp.c: 827: else
  7614                           ;MOTEapp.c: 828: {
  7615                           ;MOTEapp.c: 829: if (dataRatePosition == 8)
  7616  006F06  518F               	movf	_dataRatePosition& (0+255),w,b
  7617  006F08  0A08               	xorlw	8
  7618  006F0A  E11D               	bnz	l11497
  7619                           
  7620                           ; BSR set to: 0
  7621                           ;MOTEapp.c: 830: {
  7622                           ;MOTEapp.c: 831: if (adrStatus)
  7623  006F0C  518B               	movf	_adrStatus& (0+255),w,b
  7624  006F0E  E00D               	bz	l11493
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;MOTEapp.c: 832: {
  7628                           ;MOTEapp.c: 833: oled_putString(" ", 14,0);
  7629  006F10  0E7C               	movlw	high (STR_163+13)
  7630  006F12  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7631  006F14  0E59               	movlw	low (STR_163+13)
  7632  006F16  6FD3               	movwf	oled_putString@string& (0+255),b
  7633  006F18  0E0E               	movlw	14
  7634  006F1A  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7635  006F1C  0E00               	movlw	0
  7636  006F1E  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7637  006F20  EC08  F020         	call	_oled_putString	;wreg free
  7638                           
  7639                           ;MOTEapp.c: 834: adrStatus = 0;
  7640  006F24  0100               	movlb	0	; () banked
  7641  006F26  6B8B               	clrf	_adrStatus& (0+255),b
  7642                           
  7643                           ;MOTEapp.c: 835: }
  7644  006F28  D018               	goto	l560
  7645  006F2A                     l11493:
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;MOTEapp.c: 836: else
  7649                           ;MOTEapp.c: 837: {
  7650                           ;MOTEapp.c: 838: oled_putString("*", 14,0);
  7651  006F2A  0E7F               	movlw	high STR_101
  7652  006F2C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7653  006F2E  0EF5               	movlw	low STR_101
  7654  006F30  6FD3               	movwf	oled_putString@string& (0+255),b
  7655  006F32  0E0E               	movlw	14
  7656  006F34  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7657  006F36  0E00               	movlw	0
  7658  006F38  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7659  006F3A  EC08  F020         	call	_oled_putString	;wreg free
  7660                           
  7661                           ;MOTEapp.c: 839: adrStatus = 1;
  7662  006F3E  0E01               	movlw	1
  7663  006F40  0100               	movlb	0	; () banked
  7664  006F42  6F8B               	movwf	_adrStatus& (0+255),b
  7665  006F44  D00A               	goto	l560
  7666  006F46                     l11497:
  7667                           
  7668                           ; BSR set to: 0
  7669                           ;MOTEapp.c: 842: else
  7670                           ;MOTEapp.c: 843: {
  7671                           ;MOTEapp.c: 844: oled_putString("*", 14,0);
  7672  006F46  0E7F               	movlw	high STR_101
  7673  006F48  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7674  006F4A  0EF5               	movlw	low STR_101
  7675  006F4C  6FD3               	movwf	oled_putString@string& (0+255),b
  7676  006F4E  0E0E               	movlw	14
  7677  006F50  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7678  006F52  0E00               	movlw	0
  7679  006F54  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7680  006F56  EC08  F020         	call	_oled_putString	;wreg free
  7681  006F5A                     l560:
  7682                           
  7683                           ;MOTEapp.c: 845: }
  7684                           ;MOTEapp.c: 846: oled_putString(" ", 14,1);
  7685  006F5A  0E7C               	movlw	high (STR_163+13)
  7686  006F5C  0100               	movlb	0	; () banked
  7687  006F5E  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7688  006F60  0E59               	movlw	low (STR_163+13)
  7689  006F62  6FD3               	movwf	oled_putString@string& (0+255),b
  7690  006F64  0E0E               	movlw	14
  7691  006F66  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7692  006F68  0E01               	movlw	1
  7693  006F6A  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7694  006F6C  EC08  F020         	call	_oled_putString	;wreg free
  7695                           
  7696                           ;MOTEapp.c: 847: oled_putString(" ", 14,2);
  7697  006F70  0E7C               	movlw	high (STR_163+13)
  7698  006F72  0100               	movlb	0	; () banked
  7699  006F74  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7700  006F76  0E59               	movlw	low (STR_163+13)
  7701  006F78  6FD3               	movwf	oled_putString@string& (0+255),b
  7702  006F7A  0E0E               	movlw	14
  7703  006F7C  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7704  006F7E  0E02               	movlw	2
  7705  006F80  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7706  006F82  EC08  F020         	call	_oled_putString	;wreg free
  7707                           
  7708                           ;MOTEapp.c: 848: oled_putString(" ", 14,3);
  7709  006F86  0E7C               	movlw	high (STR_163+13)
  7710  006F88  0100               	movlb	0	; () banked
  7711  006F8A  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7712  006F8C  0E59               	movlw	low (STR_163+13)
  7713  006F8E  6FD3               	movwf	oled_putString@string& (0+255),b
  7714  006F90  0E0E               	movlw	14
  7715  006F92  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  7716  006F94  0E03               	movlw	3
  7717  006F96  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7718  006F98  EC08  F020         	call	_oled_putString	;wreg free
  7719                           
  7720                           ;MOTEapp.c: 849: MOTEapp_SetADR(adrStatus);
  7721  006F9C  0100               	movlb	0	; () banked
  7722  006F9E  518B               	movf	_adrStatus& (0+255),w,b
  7723  006FA0  ECF5  F019         	call	_MOTEapp_SetADR
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;MOTEapp.c: 850: MOTEapp_SetDataRate(dataRatePosition);
  7727  006FA4  518F               	movf	_dataRatePosition& (0+255),w,b
  7728  006FA6  ECF9  F019         	call	_MOTEapp_SetDataRate
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;MOTEapp.c: 851: MOTEapp_WriteDataRate();
  7732  006FAA  EC21  F02A         	call	_MOTEapp_WriteDataRate	;wreg free
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;MOTEapp.c: 854: activeState = moteGetDr;
  7736  006FAE  0E07               	movlw	7
  7737  006FB0  6F8A               	movwf	_activeState& (0+255),b
  7738  006FB2  0C07               	retlw	7
  7739  006FB4                     l11507:
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;MOTEapp.c: 859: if (changeStates)
  7743  006FB4  51EE               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7744  006FB6  E023               	bz	l11519
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;MOTEapp.c: 860: {
  7748                           ;MOTEapp.c: 861: oled_clear();
  7749  006FB8  EC88  F01A         	call	_oled_clear	;wreg free
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;MOTEapp.c: 862: oled_putString(" View Downlink  ",0,0);
  7753  006FBC  0E7A               	movlw	high STR_200
  7754  006FBE  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7755  006FC0  0EEE               	movlw	low STR_200
  7756  006FC2  6FD3               	movwf	oled_putString@string& (0+255),b
  7757  006FC4  0E00               	movlw	0
  7758  006FC6  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7759  006FC8  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7760  006FCA  EC08  F020         	call	_oled_putString	;wreg free
  7761                           
  7762                           ;MOTEapp.c: 863: oled_putString("  Last Message  ",0,1);
  7763  006FCE  0E7A               	movlw	high STR_201
  7764  006FD0  0100               	movlb	0	; () banked
  7765  006FD2  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7766  006FD4  0EDD               	movlw	low STR_201
  7767  006FD6  6FD3               	movwf	oled_putString@string& (0+255),b
  7768  006FD8  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7769  006FDA  0E01               	movlw	1
  7770  006FDC  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7771  006FDE  EC08  F020         	call	_oled_putString	;wreg free
  7772                           
  7773                           ;MOTEapp.c: 864: oled_putString("(NAV)    (SEL) ",0,3);
  7774  006FE2  0E7B               	movlw	high STR_75
  7775  006FE4  0100               	movlb	0	; () banked
  7776  006FE6  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7777  006FE8  0EFC               	movlw	low STR_75
  7778  006FEA  6FD3               	movwf	oled_putString@string& (0+255),b
  7779  006FEC  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7780  006FEE  0E03               	movlw	3
  7781  006FF0  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7782  006FF2  EC08  F020         	call	_oled_putString	;wreg free
  7783  006FF6                     l11517:
  7784                           
  7785                           ;MOTEapp.c: 865: runningState = runningDownlink;
  7786  006FF6  0E0A               	movlw	10
  7787  006FF8  0100               	movlb	0	; () banked
  7788  006FFA  6F96               	movwf	_runningState& (0+255),b
  7789                           
  7790                           ;MOTEapp.c: 866: }
  7791  006FFC  0C0A               	retlw	10
  7792  006FFE                     l11519:
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;MOTEapp.c: 867: else if (selectButton)
  7796  006FFE  51E2               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7797  007000  B4D8               	btfsc	status,2,c
  7798  007002  0012               	return	
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;MOTEapp.c: 868: {
  7802                           ;MOTEapp.c: 869: sleepTicker = 0;
  7803  007004  6B98               	clrf	_sleepTicker& (0+255),b
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;MOTEapp.c: 871: oled_clear();
  7807  007006  EC88  F01A         	call	_oled_clear	;wreg free
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;MOTEapp.c: 872: oled_putString("Uplink Pckt Type",0,0);
  7811  00700A  0E7B               	movlw	high STR_203
  7812  00700C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7813  00700E  0E98               	movlw	low STR_203
  7814  007010  6FD3               	movwf	oled_putString@string& (0+255),b
  7815  007012  0E00               	movlw	0
  7816  007014  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7817  007016  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7818  007018  EC08  F020         	call	_oled_putString	;wreg free
  7819                           
  7820                           ;MOTEapp.c: 873: oled_putString("Throu Port# ",0,1);
  7821  00701C  0E7D               	movlw	high STR_204
  7822  00701E  0100               	movlb	0	; () banked
  7823  007020  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7824  007022  0E74               	movlw	low STR_204
  7825  007024  6FD3               	movwf	oled_putString@string& (0+255),b
  7826  007026  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7827  007028  0E01               	movlw	1
  7828  00702A  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7829  00702C  EC08  F020         	call	_oled_putString	;wreg free
  7830                           
  7831                           ;MOTEapp.c: 875: oled_putString("(UNCNF)    (CNF) ",0,3);
  7832  007030  0E7A               	movlw	high STR_205
  7833  007032  0100               	movlb	0	; () banked
  7834  007034  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7835  007036  0E86               	movlw	low STR_205
  7836  007038  6FD3               	movwf	oled_putString@string& (0+255),b
  7837  00703A  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7838  00703C  0E03               	movlw	3
  7839  00703E  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7840  007040  EC08  F020         	call	_oled_putString	;wreg free
  7841                           
  7842                           ;MOTEapp.c: 877: moteApp_clearBuffers();
  7843  007044  EC87  F01D         	call	_moteApp_clearBuffers	;wreg free
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;MOTEapp.c: 878: randomPortNum = TMR2_ReadTimer();
  7847  007048  ECFD  F019         	call	_TMR2_ReadTimer	;wreg free
  7848  00704C  6F95               	movwf	_randomPortNum& (0+255),b
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;MOTEapp.c: 880: if (!randomPortNum)
  7852  00704E  6795               	tstfsz	_randomPortNum& (0+255),b
  7853  007050  D003               	goto	l11539
  7854                           
  7855                           ; BSR set to: 0
  7856                           ;MOTEapp.c: 881: randomPortNum = 5;
  7857  007052  0E05               	movlw	5
  7858  007054  6F95               	movwf	_randomPortNum& (0+255),b
  7859  007056  D005               	goto	l11543
  7860  007058                     l11539:
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;MOTEapp.c: 882: else if (randomPortNum > 223)
  7864  007058  0EDF               	movlw	223
  7865  00705A  6595               	cpfsgt	_randomPortNum& (0+255),b
  7866  00705C  D002               	goto	l11543
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;MOTEapp.c: 883: randomPortNum = randomPortNum - 50;
  7870  00705E  0ECE               	movlw	206
  7871  007060  2795               	addwf	_randomPortNum& (0+255),f,b
  7872  007062                     l11543:
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;MOTEapp.c: 884: oled_putUint8(randomPortNum,12,1);
  7876  007062  0E0C               	movlw	12
  7877  007064  6FD8               	movwf	oled_putUint8@station_dot& (0+255),b
  7878  007066  0E01               	movlw	1
  7879  007068  6FD9               	movwf	oled_putUint8@start_page& (0+255),b
  7880  00706A  5195               	movf	_randomPortNum& (0+255),w,b
  7881  00706C  ECBC  F01E         	call	_oled_putUint8
  7882                           
  7883                           ;MOTEapp.c: 886: moteApp_add8bToDataBuffer(randomPortNum, 0);
  7884  007070  0100               	movlb	0	; () banked
  7885  007072  6BCA               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7886  007074  5195               	movf	_randomPortNum& (0+255),w,b
  7887  007076  EC42  F01F         	call	_moteApp_add8bToDataBuffer
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;MOTEapp.c: 887: dataBuffer[3] = 0x20;
  7891  00707A  0E20               	movlw	32
  7892  00707C  6F9F               	movwf	(_dataBuffer+3)& (0+255),b
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;MOTEapp.c: 888: moteApp_add16bToDataBuffer(light, 4);
  7896  00707E  C07A  F0CD         	movff	_light,moteApp_add16bToDataBuffer@number
  7897  007082  C07B  F0CE         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  7898  007086  0E04               	movlw	4
  7899  007088  6FCF               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  7900  00708A  EC94  F02C         	call	_moteApp_add16bToDataBuffer	;wreg free
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;MOTEapp.c: 889: moteApp_add8bToDataBuffer(temperature, 9);
  7904  00708E  0E09               	movlw	9
  7905  007090  6FCA               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7906  007092  517E               	movf	_temperature& (0+255),w,b
  7907  007094  EC42  F01F         	call	_moteApp_add8bToDataBuffer
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;MOTEapp.c: 890: __nop();
  7911  007098  F000               	nop	
  7912                           
  7913                           ;MOTEapp.c: 892: runningState = runningUplinkSelect;
  7914  00709A  0E07               	movlw	7
  7915  00709C  0100               	movlb	0	; () banked
  7916  00709E  6F96               	movwf	_runningState& (0+255),b
  7917  0070A0  0C07               	retlw	7
  7918  0070A2                     l11557:
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;MOTEapp.c: 896: if (changeStates)
  7922  0070A2  51EE               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7923  0070A4  E00A               	bz	l11561
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;MOTEapp.c: 897: {
  7927                           ;MOTEapp.c: 898: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7928  0070A6  0E7D               	movlw	high STR_79
  7929  0070A8  6FC8               	movwf	(sendDataCommand@string+1)& (0+255),b
  7930  0070AA  0E3C               	movlw	low STR_79
  7931  0070AC  6FC7               	movwf	sendDataCommand@string& (0+255),b
  7932  0070AE  0E9C               	movlw	low _dataBuffer
  7933  0070B0  6FC9               	movwf	sendDataCommand@appData& (0+255),b
  7934  0070B2  0E0C               	movlw	12
  7935  0070B4  6FCA               	movwf	sendDataCommand@dataLength& (0+255),b
  7936  0070B6  EC2C  F023         	call	_sendDataCommand	;wreg free
  7937  0070BA                     l11561:
  7938                           
  7939                           ;MOTEapp.c: 900: }
  7940                           ;MOTEapp.c: 901: if (selectButton)
  7941  0070BA  0100               	movlb	0	; () banked
  7942  0070BC  51E2               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7943  0070BE  E00A               	bz	l11565
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;MOTEapp.c: 902: {
  7947                           ;MOTEapp.c: 903: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7948  0070C0  0E7E               	movlw	high STR_77
  7949  0070C2  6FC8               	movwf	(sendDataCommand@string+1)& (0+255),b
  7950  0070C4  0E67               	movlw	low STR_77
  7951  0070C6  6FC7               	movwf	sendDataCommand@string& (0+255),b
  7952  0070C8  0E9C               	movlw	low _dataBuffer
  7953  0070CA  6FC9               	movwf	sendDataCommand@appData& (0+255),b
  7954  0070CC  0E0C               	movlw	12
  7955  0070CE  6FCA               	movwf	sendDataCommand@dataLength& (0+255),b
  7956  0070D0  EC2C  F023         	call	_sendDataCommand	;wreg free
  7957  0070D4                     l11565:
  7958                           
  7959                           ;MOTEapp.c: 904: }
  7960                           ;MOTEapp.c: 906: if ( (changeStates) || (selectButton) )
  7961  0070D4  0100               	movlb	0	; () banked
  7962  0070D6  67EE               	tstfsz	moteRunningProcess@changeStates& (0+255),b
  7963  0070D8  D003               	goto	l11569
  7964                           
  7965                           ; BSR set to: 0
  7966  0070DA  51E2               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7967  0070DC  B4D8               	btfsc	status,2,c
  7968  0070DE  0012               	return	
  7969  0070E0                     l11569:
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;MOTEapp.c: 907: {
  7973                           ;MOTEapp.c: 908: oled_clear();
  7974  0070E0  EC88  F01A         	call	_oled_clear	;wreg free
  7975                           
  7976                           ; BSR set to: 0
  7977                           ;MOTEapp.c: 909: oled_putString("Sent Data: ",0,0);
  7978  0070E4  0E7E               	movlw	high STR_208
  7979  0070E6  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7980  0070E8  0E5B               	movlw	low STR_208
  7981  0070EA  6FD3               	movwf	oled_putString@string& (0+255),b
  7982  0070EC  0E00               	movlw	0
  7983  0070EE  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7984  0070F0  6BD6               	clrf	oled_putString@start_page& (0+255),b
  7985  0070F2  EC08  F020         	call	_oled_putString	;wreg free
  7986                           
  7987                           ;MOTEapp.c: 910: oled_putString("L:       T: ",0,1);
  7988  0070F6  0E7D               	movlw	high STR_74
  7989  0070F8  0100               	movlb	0	; () banked
  7990  0070FA  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  7991  0070FC  0E81               	movlw	low STR_74
  7992  0070FE  6FD3               	movwf	oled_putString@string& (0+255),b
  7993  007100  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  7994  007102  0E01               	movlw	1
  7995  007104  6FD6               	movwf	oled_putString@start_page& (0+255),b
  7996  007106  EC08  F020         	call	_oled_putString	;wreg free
  7997                           
  7998                           ;MOTEapp.c: 911: oled_putUint16(light,3,2);
  7999  00710A  C07A  F0D8         	movff	_light,oled_putUint16@number
  8000  00710E  C07B  F0D9         	movff	_light+1,oled_putUint16@number+1
  8001  007112  0E03               	movlw	3
  8002  007114  0100               	movlb	0	; () banked
  8003  007116  6FDA               	movwf	oled_putUint16@station_dot& (0+255),b
  8004  007118  0E02               	movlw	2
  8005  00711A  6FDB               	movwf	oled_putUint16@start_page& (0+255),b
  8006  00711C  EC97  F02A         	call	_oled_putUint16	;wreg free
  8007                           
  8008                           ;MOTEapp.c: 912: oled_putUint8(temperature,12,2);
  8009  007120  0E0C               	movlw	12
  8010  007122  0100               	movlb	0	; () banked
  8011  007124  6FD8               	movwf	oled_putUint8@station_dot& (0+255),b
  8012  007126  0E02               	movlw	2
  8013  007128  6FD9               	movwf	oled_putUint8@start_page& (0+255),b
  8014  00712A  517E               	movf	_temperature& (0+255),w,b
  8015  00712C  ECBC  F01E         	call	_oled_putUint8
  8016                           
  8017                           ;MOTEapp.c: 913: oled_putString("Tx Port #: ",0,1);
  8018  007130  0E7E               	movlw	high STR_210
  8019  007132  0100               	movlb	0	; () banked
  8020  007134  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8021  007136  0E4F               	movlw	low STR_210
  8022  007138  6FD3               	movwf	oled_putString@string& (0+255),b
  8023  00713A  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8024  00713C  0E01               	movlw	1
  8025  00713E  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8026  007140  EC08  F020         	call	_oled_putString	;wreg free
  8027                           
  8028                           ;MOTEapp.c: 914: oled_putUint8(randomPortNum,12,1);
  8029  007144  0E0C               	movlw	12
  8030  007146  0100               	movlb	0	; () banked
  8031  007148  6FD8               	movwf	oled_putUint8@station_dot& (0+255),b
  8032  00714A  0E01               	movlw	1
  8033  00714C  6FD9               	movwf	oled_putUint8@start_page& (0+255),b
  8034  00714E  5195               	movf	_randomPortNum& (0+255),w,b
  8035  007150  ECBC  F01E         	call	_oled_putUint8
  8036                           
  8037                           ;MOTEapp.c: 915: LATAbits.LATA6 = 0;
  8038  007154  9C89               	bcf	3977,6,c	;volatile
  8039                           
  8040                           ;MOTEapp.c: 916: runningState = runningUplinkTransmit;
  8041  007156  0E08               	movlw	8
  8042  007158  0100               	movlb	0	; () banked
  8043  00715A  6F96               	movwf	_runningState& (0+255),b
  8044  00715C  0C08               	retlw	8
  8045  00715E                     l11587:
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;MOTEapp.c: 920: if ( messageReady )
  8049  00715E  51E3               	movf	moteRunningProcess@messageReady& (0+255),w,b
  8050  007160  E101 D10E          	bz	l11673
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;MOTEapp.c: 921: {
  8054                           ;MOTEapp.c: 922: if(strcmp(modemResonseBuffer, "ok") == 0)
  8055  007164  0E01               	movlw	high _modemResonseBuffer
  8056  007166  0100               	movlb	0	; () banked
  8057  007168  6FC7               	movwf	(strcmp@s1+1)& (0+255),b
  8058  00716A  0E80               	movlw	low _modemResonseBuffer
  8059  00716C  6FC6               	movwf	strcmp@s1& (0+255),b
  8060  00716E  0E7F               	movlw	high STR_32
  8061  007170  6FC9               	movwf	(strcmp@s2+1)& (0+255),b
  8062  007172  0EF2               	movlw	low STR_32
  8063  007174  6FC8               	movwf	strcmp@s2& (0+255),b
  8064  007176  EC12  F022         	call	_strcmp	;wreg free
  8065  00717A  51C7               	movf	(?_strcmp+1)& (0+255),w,b
  8066  00717C  11C6               	iorwf	?_strcmp& (0+255),w,b
  8067  00717E  E103               	bnz	l11595
  8068                           
  8069                           ; BSR set to: 0
  8070                           ;MOTEapp.c: 923: {
  8071                           ;MOTEapp.c: 924: LATAbits.LATA6 = 1;
  8072  007180  8C89               	bsf	3977,6,c	;volatile
  8073                           
  8074                           ; BSR set to: 0
  8075                           ;MOTEapp.c: 925: runningState = runningUplinkTransmit;
  8076  007182  0E08               	movlw	8
  8077  007184  6F96               	movwf	_runningState& (0+255),b
  8078  007186                     l11595:
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;MOTEapp.c: 926: }
  8082                           ;MOTEapp.c: 927: if(strncmp(modemResonseBuffer, "mac_rx", 6) == 0)
  8083  007186  0E01               	movlw	high _modemResonseBuffer
  8084  007188  0100               	movlb	0	; () banked
  8085  00718A  6FC7               	movwf	(strncmp@s1+1)& (0+255),b
  8086  00718C  0E80               	movlw	low _modemResonseBuffer
  8087  00718E  6FC6               	movwf	strncmp@s1& (0+255),b
  8088  007190  0E7F               	movlw	high STR_212
  8089  007192  6FC9               	movwf	(strncmp@s2+1)& (0+255),b
  8090  007194  0EE1               	movlw	low STR_212
  8091  007196  6FC8               	movwf	strncmp@s2& (0+255),b
  8092  007198  6BCB               	clrf	(strncmp@len+1)& (0+255),b
  8093  00719A  0E06               	movlw	6
  8094  00719C  6FCA               	movwf	strncmp@len& (0+255),b
  8095  00719E  EC70  F020         	call	_strncmp	;wreg free
  8096  0071A2  51C7               	movf	(?_strncmp+1)& (0+255),w,b
  8097  0071A4  11C6               	iorwf	?_strncmp& (0+255),w,b
  8098  0071A6  E001 D094          	bnz	l11657
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;MOTEapp.c: 928: {
  8102                           ;MOTEapp.c: 929: uint8_t bufferReadPos = 7;
  8103  0071AA  0E07               	movlw	7
  8104  0071AC  6FED               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;MOTEapp.c: 930: uint8_t dummyRead1;
  8108                           ;MOTEapp.c: 931: uint8_t dummyRead2;
  8109                           ;MOTEapp.c: 934: responsePortNum[0] = modemResonseBuffer[bufferReadPos++];
  8110  0071AE  0E80               	movlw	low _modemResonseBuffer
  8111  0071B0  0100               	movlb	0	; () banked
  8112  0071B2  25ED               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8113  0071B4  6ED9               	movwf	fsr2l,c
  8114  0071B6  6ADA               	clrf	fsr2h,c
  8115  0071B8  0E01               	movlw	high _modemResonseBuffer
  8116  0071BA  22DA               	addwfc	fsr2h,f,c
  8117  0071BC  50DF               	movf	indf2,w,c
  8118  0071BE  6FC1               	movwf	_responsePortNum& (0+255),b
  8119                           
  8120                           ; BSR set to: 0
  8121  0071C0  2BED               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;MOTEapp.c: 935: responsePortNum[1] = modemResonseBuffer[bufferReadPos++];
  8125  0071C2  0E80               	movlw	low _modemResonseBuffer
  8126  0071C4  25ED               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8127  0071C6  6ED9               	movwf	fsr2l,c
  8128  0071C8  6ADA               	clrf	fsr2h,c
  8129  0071CA  0E01               	movlw	high _modemResonseBuffer
  8130  0071CC  22DA               	addwfc	fsr2h,f,c
  8131  0071CE  50DF               	movf	indf2,w,c
  8132  0071D0  6FC2               	movwf	(_responsePortNum+1)& (0+255),b
  8133                           
  8134                           ; BSR set to: 0
  8135  0071D2  2BED               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;MOTEapp.c: 936: if (responsePortNum[1] != ' ')
  8139  0071D4  51C2               	movf	(_responsePortNum+1)& (0+255),w,b
  8140  0071D6  0A20               	xorlw	32
  8141  0071D8  E00D               	bz	l11617
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;MOTEapp.c: 937: {
  8145                           ;MOTEapp.c: 938: responsePortNum[2] = modemResonseBuffer[bufferReadPos++];
  8146  0071DA  0E80               	movlw	low _modemResonseBuffer
  8147  0071DC  25ED               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8148  0071DE  6ED9               	movwf	fsr2l,c
  8149  0071E0  6ADA               	clrf	fsr2h,c
  8150  0071E2  0E01               	movlw	high _modemResonseBuffer
  8151  0071E4  22DA               	addwfc	fsr2h,f,c
  8152  0071E6  50DF               	movf	indf2,w,c
  8153  0071E8  6FC3               	movwf	(_responsePortNum+2)& (0+255),b
  8154                           
  8155                           ; BSR set to: 0
  8156  0071EA  2BED               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;MOTEapp.c: 939: if (responsePortNum[2] != ' ')
  8160  0071EC  51C3               	movf	(_responsePortNum+2)& (0+255),w,b
  8161  0071EE  0A20               	xorlw	32
  8162  0071F0  A4D8               	btfss	status,2,c
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;MOTEapp.c: 940: {
  8166                           ;MOTEapp.c: 941: bufferReadPos++;
  8167  0071F2  2BED               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8168  0071F4                     l11617:
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;MOTEapp.c: 942: }
  8172                           ;MOTEapp.c: 943: }
  8173                           ;MOTEapp.c: 945: for (uint8_t counter = 0; counter < 16; counter++)
  8174  0071F4  6BEB               	clrf	moteRunningProcess@counter& (0+255),b
  8175  0071F6                     l11619:
  8176                           
  8177                           ; BSR set to: 0
  8178  0071F6  0E0F               	movlw	15
  8179  0071F8  65EB               	cpfsgt	moteRunningProcess@counter& (0+255),b
  8180  0071FA  D001               	goto	l11623
  8181  0071FC  D028               	goto	l11635
  8182  0071FE                     l11623:
  8183                           
  8184                           ; BSR set to: 0
  8185                           ;MOTEapp.c: 946: {
  8186                           ;MOTEapp.c: 947: dummyRead1 = unhex(modemResonseBuffer[bufferReadPos++]);
  8187  0071FE  0E80               	movlw	low _modemResonseBuffer
  8188  007200  0100               	movlb	0	; () banked
  8189  007202  25ED               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8190  007204  6ED9               	movwf	fsr2l,c
  8191  007206  6ADA               	clrf	fsr2h,c
  8192  007208  0101               	movlb	1	; () banked
  8193  00720A  0E01               	movlw	high _modemResonseBuffer
  8194  00720C  22DA               	addwfc	fsr2h,f,c
  8195  00720E  50DF               	movf	indf2,w,c
  8196  007210  ECAB  F01B         	call	_unhex
  8197  007214  6FE9               	movwf	moteRunningProcess@dummyRead1& (0+255),b
  8198                           
  8199                           ; BSR set to: 0
  8200  007216  2BED               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;MOTEapp.c: 948: dummyRead2 = unhex(modemResonseBuffer[bufferReadPos++]);
  8204  007218  0E80               	movlw	low _modemResonseBuffer
  8205  00721A  0100               	movlb	0	; () banked
  8206  00721C  25ED               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8207  00721E  6ED9               	movwf	fsr2l,c
  8208  007220  6ADA               	clrf	fsr2h,c
  8209  007222  0101               	movlb	1	; () banked
  8210  007224  0E01               	movlw	high _modemResonseBuffer
  8211  007226  22DA               	addwfc	fsr2h,f,c
  8212  007228  50DF               	movf	indf2,w,c
  8213  00722A  ECAB  F01B         	call	_unhex
  8214  00722E  6FEA               	movwf	moteRunningProcess@dummyRead2& (0+255),b
  8215  007230  2BED               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;MOTEapp.c: 949: responseId[counter] = (dummyRead1 << 4) + dummyRead2;
  8219  007232  0EC0               	movlw	low _responseId
  8220  007234  0100               	movlb	0	; () banked
  8221  007236  25EB               	addwf	moteRunningProcess@counter& (0+255),w,b
  8222  007238  6ED9               	movwf	fsr2l,c
  8223  00723A  6ADA               	clrf	fsr2h,c
  8224  00723C  0E01               	movlw	high _responseId
  8225  00723E  22DA               	addwfc	fsr2h,f,c
  8226  007240  51E9               	movf	moteRunningProcess@dummyRead1& (0+255),w,b
  8227  007242  0D10               	mullw	16
  8228  007244  50F3               	movf	prodl,w,c
  8229  007246  25EA               	addwf	moteRunningProcess@dummyRead2& (0+255),w,b
  8230  007248  6EDF               	movwf	indf2,c
  8231                           
  8232                           ; BSR set to: 0
  8233  00724A  2BEB               	incf	moteRunningProcess@counter& (0+255),f,b
  8234  00724C  D7D4               	goto	l11619
  8235  00724E                     l11635:
  8236                           
  8237                           ; BSR set to: 0
  8238                           ;MOTEapp.c: 950: }
  8239                           ;MOTEapp.c: 952: bufferReadPos++;
  8240  00724E  2BED               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8241                           
  8242                           ;MOTEapp.c: 953: bufferReadPos++;
  8243  007250  2BED               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;MOTEapp.c: 956: for (uint8_t counter = 0; counter < 8; counter++)
  8247  007252  6BEC               	clrf	moteRunningProcess@counter_1556& (0+255),b
  8248  007254                     l11639:
  8249                           
  8250                           ; BSR set to: 0
  8251  007254  0E07               	movlw	7
  8252  007256  65EC               	cpfsgt	moteRunningProcess@counter_1556& (0+255),b
  8253  007258  D001               	goto	l11643
  8254  00725A  D025               	goto	l583
  8255  00725C                     l11643:
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;MOTEapp.c: 957: {
  8259                           ;MOTEapp.c: 958: dummyRead1 = unhex(modemResonseBuffer[bufferReadPos++]);
  8260  00725C  0E80               	movlw	low _modemResonseBuffer
  8261  00725E  0100               	movlb	0	; () banked
  8262  007260  25ED               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8263  007262  6ED9               	movwf	fsr2l,c
  8264  007264  6ADA               	clrf	fsr2h,c
  8265  007266  0101               	movlb	1	; () banked
  8266  007268  0E01               	movlw	high _modemResonseBuffer
  8267  00726A  22DA               	addwfc	fsr2h,f,c
  8268  00726C  50DF               	movf	indf2,w,c
  8269  00726E  ECAB  F01B         	call	_unhex
  8270  007272  6FE9               	movwf	moteRunningProcess@dummyRead1& (0+255),b
  8271                           
  8272                           ; BSR set to: 0
  8273  007274  2BED               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;MOTEapp.c: 959: dummyRead2 = unhex(modemResonseBuffer[bufferReadPos++]);
  8277  007276  0E80               	movlw	low _modemResonseBuffer
  8278  007278  0100               	movlb	0	; () banked
  8279  00727A  25ED               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8280  00727C  6ED9               	movwf	fsr2l,c
  8281  00727E  6ADA               	clrf	fsr2h,c
  8282  007280  0101               	movlb	1	; () banked
  8283  007282  0E01               	movlw	high _modemResonseBuffer
  8284  007284  22DA               	addwfc	fsr2h,f,c
  8285  007286  50DF               	movf	indf2,w,c
  8286  007288  ECAB  F01B         	call	_unhex
  8287  00728C  6FEA               	movwf	moteRunningProcess@dummyRead2& (0+255),b
  8288  00728E  2BED               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;MOTEapp.c: 960: responseData[counter] = (dummyRead1 << 4) + dummyRead2;
  8292  007290  51EC               	movf	moteRunningProcess@counter_1556& (0+255),w,b
  8293  007292  0FB2               	addlw	low _responseData
  8294  007294  6ED9               	movwf	fsr2l,c
  8295  007296  6ADA               	clrf	fsr2h,c
  8296  007298  51E9               	movf	moteRunningProcess@dummyRead1& (0+255),w,b
  8297  00729A  0D10               	mullw	16
  8298  00729C  50F3               	movf	prodl,w,c
  8299  00729E  25EA               	addwf	moteRunningProcess@dummyRead2& (0+255),w,b
  8300  0072A0  6EDF               	movwf	indf2,c
  8301                           
  8302                           ; BSR set to: 0
  8303  0072A2  2BEC               	incf	moteRunningProcess@counter_1556& (0+255),f,b
  8304  0072A4  D7D7               	goto	l11639
  8305  0072A6                     l583:
  8306                           
  8307                           ; BSR set to: 0
  8308                           ;MOTEapp.c: 961: }
  8309                           ;MOTEapp.c: 963: LATAbits.LATA7 = 1;
  8310  0072A6  8E89               	bsf	3977,7,c	;volatile
  8311                           
  8312                           ;MOTEapp.c: 964: LATAbits.LATA6 = 0;
  8313  0072A8  9C89               	bcf	3977,6,c	;volatile
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;MOTEapp.c: 966: oled_putString("Server Response ",0,2);
  8317  0072AA  0E7B               	movlw	high STR_213
  8318  0072AC  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8319  0072AE  0E21               	movlw	low STR_213
  8320  0072B0  6FD3               	movwf	oled_putString@string& (0+255),b
  8321  0072B2  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8322  0072B4  0E02               	movlw	2
  8323  0072B6  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8324  0072B8  EC08  F020         	call	_oled_putString	;wreg free
  8325                           
  8326                           ;MOTEapp.c: 967: oled_putString("    Received    ",0,3);
  8327  0072BC  0E7A               	movlw	high STR_214
  8328  0072BE  0100               	movlb	0	; () banked
  8329  0072C0  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8330  0072C2  0EAA               	movlw	low STR_214
  8331  0072C4  6FD3               	movwf	oled_putString@string& (0+255),b
  8332  0072C6  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8333  0072C8  0E03               	movlw	3
  8334  0072CA  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8335  0072CC  EC08  F020         	call	_oled_putString	;wreg free
  8336                           
  8337                           ;MOTEapp.c: 968: }
  8338  0072D0  D051               	goto	l11671
  8339  0072D2                     l11657:
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;MOTEapp.c: 969: else if(strncmp(modemResonseBuffer, "mac_tx", 6) == 0)
  8343  0072D2  0E01               	movlw	high _modemResonseBuffer
  8344  0072D4  0100               	movlb	0	; () banked
  8345  0072D6  6FC7               	movwf	(strncmp@s1+1)& (0+255),b
  8346  0072D8  0E80               	movlw	low _modemResonseBuffer
  8347  0072DA  6FC6               	movwf	strncmp@s1& (0+255),b
  8348  0072DC  0E7F               	movlw	high STR_215
  8349  0072DE  6FC9               	movwf	(strncmp@s2+1)& (0+255),b
  8350  0072E0  0EE8               	movlw	low STR_215
  8351  0072E2  6FC8               	movwf	strncmp@s2& (0+255),b
  8352  0072E4  6BCB               	clrf	(strncmp@len+1)& (0+255),b
  8353  0072E6  0E06               	movlw	6
  8354  0072E8  6FCA               	movwf	strncmp@len& (0+255),b
  8355  0072EA  EC70  F020         	call	_strncmp	;wreg free
  8356  0072EE  51C7               	movf	(?_strncmp+1)& (0+255),w,b
  8357  0072F0  11C6               	iorwf	?_strncmp& (0+255),w,b
  8358  0072F2  E10B               	bnz	l11663
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;MOTEapp.c: 970: {
  8362                           ;MOTEapp.c: 971: LATAbits.LATA6 = 0;
  8363  0072F4  9C89               	bcf	3977,6,c	;volatile
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;MOTEapp.c: 972: oled_putString("Data Transmitted",0,3);
  8367  0072F6  0E7B               	movlw	high STR_216
  8368  0072F8  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8369  0072FA  0E76               	movlw	low STR_216
  8370  0072FC  6FD3               	movwf	oled_putString@string& (0+255),b
  8371  0072FE  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8372  007300  0E03               	movlw	3
  8373  007302  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8374  007304  EC08  F020         	call	_oled_putString	;wreg free
  8375                           
  8376                           ;MOTEapp.c: 973: }
  8377  007308  D035               	goto	l11671
  8378  00730A                     l11663:
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;MOTEapp.c: 974: else if(strncmp(modemResonseBuffer, "mac_er", 6) == 0)
  8382  00730A  0E01               	movlw	high _modemResonseBuffer
  8383  00730C  0100               	movlb	0	; () banked
  8384  00730E  6FC7               	movwf	(strncmp@s1+1)& (0+255),b
  8385  007310  0E80               	movlw	low _modemResonseBuffer
  8386  007312  6FC6               	movwf	strncmp@s1& (0+255),b
  8387  007314  0E7F               	movlw	high STR_217
  8388  007316  6FC9               	movwf	(strncmp@s2+1)& (0+255),b
  8389  007318  0EDA               	movlw	low STR_217
  8390  00731A  6FC8               	movwf	strncmp@s2& (0+255),b
  8391  00731C  6BCB               	clrf	(strncmp@len+1)& (0+255),b
  8392  00731E  0E06               	movlw	6
  8393  007320  6FCA               	movwf	strncmp@len& (0+255),b
  8394  007322  EC70  F020         	call	_strncmp	;wreg free
  8395  007326  51C7               	movf	(?_strncmp+1)& (0+255),w,b
  8396  007328  11C6               	iorwf	?_strncmp& (0+255),w,b
  8397  00732A  E10A               	bnz	l11667
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;MOTEapp.c: 975: {
  8401                           ;MOTEapp.c: 976: oled_putString("Mac Error Occured",0,3);
  8402  00732C  0E7A               	movlw	high STR_218
  8403  00732E  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8404  007330  0E98               	movlw	low STR_218
  8405  007332  6FD3               	movwf	oled_putString@string& (0+255),b
  8406  007334  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8407  007336  0E03               	movlw	3
  8408  007338  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8409  00733A  EC08  F020         	call	_oled_putString	;wreg free
  8410                           
  8411                           ;MOTEapp.c: 977: }
  8412  00733E  D01A               	goto	l11671
  8413  007340                     l11667:
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;MOTEapp.c: 978: else if(strncmp(modemResonseBuffer, "no_fre", 6) == 0)
  8417  007340  0E01               	movlw	high _modemResonseBuffer
  8418  007342  0100               	movlb	0	; () banked
  8419  007344  6FC7               	movwf	(strncmp@s1+1)& (0+255),b
  8420  007346  0E80               	movlw	low _modemResonseBuffer
  8421  007348  6FC6               	movwf	strncmp@s1& (0+255),b
  8422  00734A  0E7F               	movlw	high STR_219
  8423  00734C  6FC9               	movwf	(strncmp@s2+1)& (0+255),b
  8424  00734E  0ED3               	movlw	low STR_219
  8425  007350  6FC8               	movwf	strncmp@s2& (0+255),b
  8426  007352  6BCB               	clrf	(strncmp@len+1)& (0+255),b
  8427  007354  0E06               	movlw	6
  8428  007356  6FCA               	movwf	strncmp@len& (0+255),b
  8429  007358  EC70  F020         	call	_strncmp	;wreg free
  8430  00735C  51C7               	movf	(?_strncmp+1)& (0+255),w,b
  8431  00735E  11C6               	iorwf	?_strncmp& (0+255),w,b
  8432  007360  E109               	bnz	l11671
  8433                           
  8434                           ; BSR set to: 0
  8435                           ;MOTEapp.c: 979: {
  8436                           ;MOTEapp.c: 980: oled_putString("No Free Channel",0,3);
  8437  007362  0E7C               	movlw	high STR_220
  8438  007364  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8439  007366  0E2C               	movlw	low STR_220
  8440  007368  6FD3               	movwf	oled_putString@string& (0+255),b
  8441  00736A  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8442  00736C  0E03               	movlw	3
  8443  00736E  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8444  007370  EC08  F020         	call	_oled_putString	;wreg free
  8445  007374                     l11671:
  8446                           
  8447                           ;MOTEapp.c: 981: }
  8448                           ;MOTEapp.c: 982: moteApp_delayms(20);
  8449  007374  0100               	movlb	0	; () banked
  8450  007376  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8451  007378  0E14               	movlw	20
  8452  00737A  6FC6               	movwf	moteApp_delayms@length& (0+255),b
  8453  00737C  EC81  F01B         	call	_moteApp_delayms	;wreg free
  8454  007380                     l11673:
  8455                           
  8456                           ; BSR set to: 0
  8457                           ;MOTEapp.c: 983: }
  8458                           ;MOTEapp.c: 984: if ( (changeStates) || (selectButton) )
  8459  007380  67EE               	tstfsz	moteRunningProcess@changeStates& (0+255),b
  8460  007382  D003               	goto	l11677
  8461                           
  8462                           ; BSR set to: 0
  8463  007384  51E2               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8464  007386  B4D8               	btfsc	status,2,c
  8465  007388  0012               	return	
  8466  00738A                     l11677:
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;MOTEapp.c: 985: {
  8470                           ;MOTEapp.c: 986: oled_clear();
  8471  00738A  EC88  F01A         	call	_oled_clear	;wreg free
  8472                           
  8473                           ; BSR set to: 0
  8474                           ;MOTEapp.c: 987: oled_putString("  Issue Uplink  ",0,0);
  8475  00738E  0E7A               	movlw	high STR_93
  8476  007390  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8477  007392  0EFF               	movlw	low STR_93
  8478  007394  6FD3               	movwf	oled_putString@string& (0+255),b
  8479  007396  0E00               	movlw	0
  8480  007398  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8481  00739A  6BD6               	clrf	oled_putString@start_page& (0+255),b
  8482  00739C  EC08  F020         	call	_oled_putString	;wreg free
  8483                           
  8484                           ;MOTEapp.c: 988: oled_putString(" LoRaWAN Packet ",0,1);
  8485  0073A0  0E7B               	movlw	high STR_94
  8486  0073A2  0100               	movlb	0	; () banked
  8487  0073A4  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8488  0073A6  0E32               	movlw	low STR_94
  8489  0073A8  6FD3               	movwf	oled_putString@string& (0+255),b
  8490  0073AA  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8491  0073AC  0E01               	movlw	1
  8492  0073AE  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8493  0073B0  EC08  F020         	call	_oled_putString	;wreg free
  8494                           
  8495                           ;MOTEapp.c: 989: oled_putString("(NAV)    (SEL) ",0,3);
  8496  0073B4  0E7B               	movlw	high STR_75
  8497  0073B6  0100               	movlb	0	; () banked
  8498  0073B8  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8499  0073BA  0EFC               	movlw	low STR_75
  8500  0073BC  6FD3               	movwf	oled_putString@string& (0+255),b
  8501  0073BE  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8502  0073C0  0E03               	movlw	3
  8503  0073C2  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8504  0073C4  EC08  F020         	call	_oled_putString	;wreg free
  8505  0073C8  EFFA  F033         	goto	l11163
  8506  0073CC                     l11687:
  8507                           
  8508                           ; BSR set to: 0
  8509                           ;MOTEapp.c: 994: if (changeStates)
  8510  0073CC  51EE               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8511  0073CE  E02F               	bz	l11701
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;MOTEapp.c: 995: {
  8515                           ;MOTEapp.c: 996: oled_clear();
  8516  0073D0  EC88  F01A         	call	_oled_clear	;wreg free
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;MOTEapp.c: 997: oled_putString(" Tx Sleep Event ",0,0);
  8520  0073D4  0E7B               	movlw	high STR_224
  8521  0073D6  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8522  0073D8  0E43               	movlw	low STR_224
  8523  0073DA  6FD3               	movwf	oled_putString@string& (0+255),b
  8524  0073DC  0E00               	movlw	0
  8525  0073DE  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8526  0073E0  6BD6               	clrf	oled_putString@start_page& (0+255),b
  8527  0073E2  EC08  F020         	call	_oled_putString	;wreg free
  8528                           
  8529                           ;MOTEapp.c: 998: if (periodicState)
  8530  0073E6  0100               	movlb	0	; () banked
  8531  0073E8  51FC               	movf	_periodicState& (0+255),w,b
  8532  0073EA  E00A               	bz	l11697
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;MOTEapp.c: 999: oled_putString("    Enabled   ", 0,2);
  8536  0073EC  0E7C               	movlw	high STR_225
  8537  0073EE  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8538  0073F0  0E5B               	movlw	low STR_225
  8539  0073F2  6FD3               	movwf	oled_putString@string& (0+255),b
  8540  0073F4  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8541  0073F6  0E02               	movlw	2
  8542  0073F8  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8543  0073FA  EC08  F020         	call	_oled_putString	;wreg free
  8544  0073FE  D009               	goto	l596
  8545  007400                     l11697:
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;MOTEapp.c: 1000: else
  8549                           ;MOTEapp.c: 1001: oled_putString("    Disabled  ", 0,2);
  8550  007400  0E7C               	movlw	high STR_226
  8551  007402  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8552  007404  0E6A               	movlw	low STR_226
  8553  007406  6FD3               	movwf	oled_putString@string& (0+255),b
  8554  007408  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8555  00740A  0E02               	movlw	2
  8556  00740C  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8557  00740E  EC08  F020         	call	_oled_putString	;wreg free
  8558  007412                     l596:
  8559                           
  8560                           ;MOTEapp.c: 1002: oled_putString("(NAV)    (SEL) ",0,3);
  8561  007412  0E7B               	movlw	high STR_75
  8562  007414  0100               	movlb	0	; () banked
  8563  007416  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8564  007418  0EFC               	movlw	low STR_75
  8565  00741A  6FD3               	movwf	oled_putString@string& (0+255),b
  8566  00741C  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8567  00741E  0E03               	movlw	3
  8568  007420  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8569  007422  EC08  F020         	call	_oled_putString	;wreg free
  8570                           
  8571                           ;MOTEapp.c: 1003: runningState = runningPeriodic;
  8572  007426  0E0C               	movlw	12
  8573  007428  0100               	movlb	0	; () banked
  8574  00742A  6F96               	movwf	_runningState& (0+255),b
  8575                           
  8576                           ;MOTEapp.c: 1004: }
  8577  00742C  0C0C               	retlw	12
  8578  00742E                     l11701:
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;MOTEapp.c: 1005: else if (selectButton)
  8582  00742E  51E2               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8583  007430  B4D8               	btfsc	status,2,c
  8584  007432  0012               	return	
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;MOTEapp.c: 1006: {
  8588                           ;MOTEapp.c: 1007: oled_clear();
  8589  007434  EC88  F01A         	call	_oled_clear	;wreg free
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;MOTEapp.c: 1009: LATAbits.LATA7 = 0;
  8593  007438  9E89               	bcf	3977,7,c	;volatile
  8594                           
  8595                           ; BSR set to: 0
  8596                           ;MOTEapp.c: 1011: oled_putString("Downlink Display",0,0);
  8597  00743A  0E7B               	movlw	high STR_228
  8598  00743C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8599  00743E  0ECB               	movlw	low STR_228
  8600  007440  6FD3               	movwf	oled_putString@string& (0+255),b
  8601  007442  0E00               	movlw	0
  8602  007444  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8603  007446  6BD6               	clrf	oled_putString@start_page& (0+255),b
  8604  007448  EC08  F020         	call	_oled_putString	;wreg free
  8605                           
  8606                           ;MOTEapp.c: 1013: oled_putString("Rx Port# ",0,1);
  8607  00744C  0E7E               	movlw	high STR_229
  8608  00744E  0100               	movlb	0	; () banked
  8609  007450  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8610  007452  0EF1               	movlw	low STR_229
  8611  007454  6FD3               	movwf	oled_putString@string& (0+255),b
  8612  007456  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8613  007458  0E01               	movlw	1
  8614  00745A  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8615  00745C  EC08  F020         	call	_oled_putString	;wreg free
  8616                           
  8617                           ;MOTEapp.c: 1014: oled_putString(&responsePortNum,9,1);
  8618  007460  0100               	movlb	0	; () banked
  8619  007462  6BD4               	clrf	(oled_putString@string+1)& (0+255),b
  8620  007464  0EC1               	movlw	low _responsePortNum
  8621  007466  6FD3               	movwf	oled_putString@string& (0+255),b
  8622  007468  0E09               	movlw	9
  8623  00746A  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  8624  00746C  0E01               	movlw	1
  8625  00746E  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8626  007470  EC08  F020         	call	_oled_putString	;wreg free
  8627                           
  8628                           ;MOTEapp.c: 1016: oled_putString("Data: ",0,2);
  8629  007474  0E7E               	movlw	high (STR_208+5)
  8630  007476  0100               	movlb	0	; () banked
  8631  007478  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8632  00747A  0E60               	movlw	low (STR_208+5)
  8633  00747C  6FD3               	movwf	oled_putString@string& (0+255),b
  8634  00747E  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8635  007480  0E02               	movlw	2
  8636  007482  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8637  007484  EC08  F020         	call	_oled_putString	;wreg free
  8638                           
  8639                           ;MOTEapp.c: 1017: oled_putString(&responseData[0],6,2);
  8640  007488  0100               	movlb	0	; () banked
  8641  00748A  6BD4               	clrf	(oled_putString@string+1)& (0+255),b
  8642  00748C  0EB2               	movlw	low _responseData
  8643  00748E  6FD3               	movwf	oled_putString@string& (0+255),b
  8644  007490  0E06               	movlw	6
  8645  007492  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  8646  007494  0E02               	movlw	2
  8647  007496  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8648  007498  EC08  F020         	call	_oled_putString	;wreg free
  8649                           
  8650                           ;MOTEapp.c: 1018: oled_putString(" ",11,2);
  8651  00749C  0E7C               	movlw	high (STR_163+13)
  8652  00749E  0100               	movlb	0	; () banked
  8653  0074A0  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8654  0074A2  0E59               	movlw	low (STR_163+13)
  8655  0074A4  6FD3               	movwf	oled_putString@string& (0+255),b
  8656  0074A6  0E0B               	movlw	11
  8657  0074A8  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  8658  0074AA  0E02               	movlw	2
  8659  0074AC  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8660  0074AE  EC08  F020         	call	_oled_putString	;wreg free
  8661                           
  8662                           ;MOTEapp.c: 1019: oled_putString(&responseData[5],12,2);
  8663  0074B2  0100               	movlb	0	; () banked
  8664  0074B4  6BD4               	clrf	(oled_putString@string+1)& (0+255),b
  8665  0074B6  0EB7               	movlw	low (_responseData+5)
  8666  0074B8  6FD3               	movwf	oled_putString@string& (0+255),b
  8667  0074BA  0E0C               	movlw	12
  8668  0074BC  6FD5               	movwf	oled_putString@station_dot& (0+255),b
  8669  0074BE  0E02               	movlw	2
  8670  0074C0  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8671  0074C2  EC08  F020         	call	_oled_putString	;wreg free
  8672                           
  8673                           ;MOTEapp.c: 1021: oled_putString(&responseId[0],0,3);
  8674  0074C6  0E01               	movlw	high _responseId
  8675  0074C8  0100               	movlb	0	; () banked
  8676  0074CA  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8677  0074CC  0EC0               	movlw	low _responseId
  8678  0074CE  6FD3               	movwf	oled_putString@string& (0+255),b
  8679  0074D0  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8680  0074D2  0E03               	movlw	3
  8681  0074D4  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8682  0074D6  EC08  F020         	call	_oled_putString	;wreg free
  8683                           
  8684                           ;MOTEapp.c: 1023: runningState = runningDownlinkDisplay;
  8685  0074DA  0E0B               	movlw	11
  8686  0074DC  0100               	movlb	0	; () banked
  8687  0074DE  6F96               	movwf	_runningState& (0+255),b
  8688  0074E0  0C0B               	retlw	11
  8689  0074E2                     l599:
  8690                           
  8691                           ; BSR set to: 0
  8692                           ;MOTEapp.c: 1027: if ( (changeStates) || (selectButton) )
  8693  0074E2  67EE               	tstfsz	moteRunningProcess@changeStates& (0+255),b
  8694  0074E4  D003               	goto	l11727
  8695                           
  8696                           ; BSR set to: 0
  8697  0074E6  51E2               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8698  0074E8  B4D8               	btfsc	status,2,c
  8699  0074EA  0012               	return	
  8700  0074EC                     l11727:
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;MOTEapp.c: 1028: {
  8704                           ;MOTEapp.c: 1029: oled_clear();
  8705  0074EC  EC88  F01A         	call	_oled_clear	;wreg free
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;MOTEapp.c: 1030: oled_putString(" View Downlink  ",0,0);
  8709  0074F0  0E7A               	movlw	high STR_200
  8710  0074F2  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8711  0074F4  0EEE               	movlw	low STR_200
  8712  0074F6  6FD3               	movwf	oled_putString@string& (0+255),b
  8713  0074F8  0E00               	movlw	0
  8714  0074FA  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8715  0074FC  6BD6               	clrf	oled_putString@start_page& (0+255),b
  8716  0074FE  EC08  F020         	call	_oled_putString	;wreg free
  8717                           
  8718                           ;MOTEapp.c: 1031: oled_putString("  Last Message  ",0,1);
  8719  007502  0E7A               	movlw	high STR_201
  8720  007504  0100               	movlb	0	; () banked
  8721  007506  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8722  007508  0EDD               	movlw	low STR_201
  8723  00750A  6FD3               	movwf	oled_putString@string& (0+255),b
  8724  00750C  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8725  00750E  0E01               	movlw	1
  8726  007510  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8727  007512  EC08  F020         	call	_oled_putString	;wreg free
  8728                           
  8729                           ;MOTEapp.c: 1032: oled_putString("(NAV)    (SEL) ",0,3);
  8730  007516  0E7B               	movlw	high STR_75
  8731  007518  0100               	movlb	0	; () banked
  8732  00751A  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8733  00751C  0EFC               	movlw	low STR_75
  8734  00751E  6FD3               	movwf	oled_putString@string& (0+255),b
  8735  007520  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8736  007522  0E03               	movlw	3
  8737  007524  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8738  007526  EC08  F020         	call	_oled_putString	;wreg free
  8739  00752A  D565               	goto	l11517
  8740  00752C                     l11737:
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;MOTEapp.c: 1037: if (changeStates)
  8744  00752C  51EE               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8745  00752E  E019               	bz	l11747
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;MOTEapp.c: 1038: {
  8749                           ;MOTEapp.c: 1039: oled_clear();
  8750  007530  EC88  F01A         	call	_oled_clear	;wreg free
  8751                           
  8752                           ; BSR set to: 0
  8753                           ;MOTEapp.c: 1040: oled_putString("Enter Sleep Mode",0,0);
  8754  007534  0E7B               	movlw	high STR_235
  8755  007536  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8756  007538  0E87               	movlw	low STR_235
  8757  00753A  6FD3               	movwf	oled_putString@string& (0+255),b
  8758  00753C  0E00               	movlw	0
  8759  00753E  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8760  007540  6BD6               	clrf	oled_putString@start_page& (0+255),b
  8761  007542  EC08  F020         	call	_oled_putString	;wreg free
  8762                           
  8763                           ;MOTEapp.c: 1041: oled_putString("(NAV)    (SLP) ",0,3);
  8764  007546  0E7C               	movlw	high STR_236
  8765  007548  0100               	movlb	0	; () banked
  8766  00754A  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8767  00754C  0E0C               	movlw	low STR_236
  8768  00754E  6FD3               	movwf	oled_putString@string& (0+255),b
  8769  007550  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8770  007552  0E03               	movlw	3
  8771  007554  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8772  007556  EC08  F020         	call	_oled_putString	;wreg free
  8773                           
  8774                           ;MOTEapp.c: 1042: runningState = runningSleep;
  8775  00755A  0E0E               	movlw	14
  8776  00755C  0100               	movlb	0	; () banked
  8777  00755E  6F96               	movwf	_runningState& (0+255),b
  8778                           
  8779                           ;MOTEapp.c: 1043: }
  8780  007560  0C0E               	retlw	14
  8781  007562                     l11747:
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;MOTEapp.c: 1044: else if (selectButton)
  8785  007562  51E2               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8786  007564  B4D8               	btfsc	status,2,c
  8787  007566  0012               	return	
  8788                           
  8789                           ; BSR set to: 0
  8790                           ;MOTEapp.c: 1045: {
  8791                           ;MOTEapp.c: 1046: if (periodicState)
  8792  007568  51FC               	movf	_periodicState& (0+255),w,b
  8793  00756A  E008               	bz	l11755
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;MOTEapp.c: 1047: {
  8797                           ;MOTEapp.c: 1048: periodicState = 0;
  8798  00756C  6BFC               	clrf	_periodicState& (0+255),b
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;MOTEapp.c: 1049: oled_putString("    Disabled  ", 0,2);
  8802  00756E  0E7C               	movlw	high STR_226
  8803  007570  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8804  007572  0E6A               	movlw	low STR_226
  8805  007574  D008               	goto	L38
  8806  007576                     L37:
  8807  007576  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8808  007578  EF08  F020         	goto	_oled_putString	;wreg free
  8809  00757C                     l11755:
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;MOTEapp.c: 1051: else
  8813                           ;MOTEapp.c: 1052: {
  8814                           ;MOTEapp.c: 1053: periodicState = 1;
  8815  00757C  0E01               	movlw	1
  8816  00757E  6FFC               	movwf	_periodicState& (0+255),b
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;MOTEapp.c: 1054: oled_putString("    Enabled   ", 0,2);
  8820  007580  0E7C               	movlw	high STR_225
  8821  007582  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8822  007584  0E5B               	movlw	low STR_225
  8823  007586                     L38:
  8824  007586  6FD3               	movwf	oled_putString@string& (0+255),b
  8825  007588  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8826  00758A  EFDE  F035         	goto	L46
  8827  00758E                     l11759:
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;MOTEapp.c: 1059: if (selectButton)
  8831  00758E  51E2               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8832  007590  E009               	bz	l610
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;MOTEapp.c: 1060: {
  8836                           ;MOTEapp.c: 1061: if( moteApp_GoToSleep() )
  8837  007592  EC91  F021         	call	_moteApp_GoToSleep	;wreg free
  8838  007596  0900               	iorlw	0
  8839  007598  E003               	bz	l11765
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;MOTEapp.c: 1062: {
  8843                           ;MOTEapp.c: 1063: changeStates = 1;
  8844  00759A  0E01               	movlw	1
  8845  00759C  6FEE               	movwf	moteRunningProcess@changeStates& (0+255),b
  8846                           
  8847                           ;MOTEapp.c: 1064: }
  8848  00759E  D002               	goto	l610
  8849  0075A0                     l11765:
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;MOTEapp.c: 1065: else
  8853                           ;MOTEapp.c: 1066: {
  8854                           ;MOTEapp.c: 1067: secTicker = 10 - 1;
  8855  0075A0  0E09               	movlw	9
  8856  0075A2  6F97               	movwf	_secTicker& (0+255),b
  8857  0075A4                     l610:
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;MOTEapp.c: 1068: }
  8861                           ;MOTEapp.c: 1069: }
  8862                           ;MOTEapp.c: 1070: if (changeStates)
  8863  0075A4  51EE               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8864  0075A6  B4D8               	btfsc	status,2,c
  8865  0075A8  0012               	return	
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;MOTEapp.c: 1071: {
  8869                           ;MOTEapp.c: 1072: oled_clear();
  8870  0075AA  EC88  F01A         	call	_oled_clear	;wreg free
  8871                           
  8872                           ; BSR set to: 0
  8873                           ;MOTEapp.c: 1073: oled_putString("  Sensor Data  ",0,0);
  8874  0075AE  0E7B               	movlw	high STR_80
  8875  0075B0  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8876  0075B2  0EEC               	movlw	low STR_80
  8877  0075B4  6FD3               	movwf	oled_putString@string& (0+255),b
  8878  0075B6  0E00               	movlw	0
  8879  0075B8  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8880  0075BA  6BD6               	clrf	oled_putString@start_page& (0+255),b
  8881  0075BC  EC08  F020         	call	_oled_putString	;wreg free
  8882                           
  8883                           ;MOTEapp.c: 1074: oled_putString("    Display    ",0,1);
  8884  0075C0  0E7B               	movlw	high STR_81
  8885  0075C2  0100               	movlb	0	; () banked
  8886  0075C4  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8887  0075C6  0EDC               	movlw	low STR_81
  8888  0075C8  6FD3               	movwf	oled_putString@string& (0+255),b
  8889  0075CA  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8890  0075CC  0E01               	movlw	1
  8891  0075CE  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8892  0075D0  EC08  F020         	call	_oled_putString	;wreg free
  8893                           
  8894                           ;MOTEapp.c: 1075: oled_putString("(NAV)    (SEL) ",0,3);
  8895  0075D4  0E7B               	movlw	high STR_75
  8896  0075D6  0100               	movlb	0	; () banked
  8897  0075D8  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
  8898  0075DA  0EFC               	movlw	low STR_75
  8899  0075DC  6FD3               	movwf	oled_putString@string& (0+255),b
  8900  0075DE  6BD5               	clrf	oled_putString@station_dot& (0+255),b
  8901  0075E0  0E03               	movlw	3
  8902  0075E2  6FD6               	movwf	oled_putString@start_page& (0+255),b
  8903  0075E4  EC08  F020         	call	_oled_putString	;wreg free
  8904  0075E8  EF2B  F033         	goto	l11105
  8905  0075EC                     l11779:
  8906                           
  8907                           ; BSR set to: 0
  8908  0075EC  5196               	movf	_runningState& (0+255),w,b
  8909                           
  8910                           ; Switch size 1, requested type "speed"
  8911                           ; Number of cases is 12, Range of values is 0 to 14
  8912                           ; switch strategies available:
  8913                           ; Name         Instructions Cycles
  8914                           ; simple_byte           37    19 (average)
  8915                           ;	Chosen strategy is simple_byte
  8916  0075EE  E102 EF07  F033    	bz	l452
  8917  0075F4  0A01               	xorlw	1	; case 1
  8918  0075F6  E102 EF2F  F033    	bz	l11107
  8919  0075FC  0A03               	xorlw	3	; case 2
  8920  0075FE  E102 EF9E  F033    	bz	l11137
  8921  007604  0A01               	xorlw	1	; case 3
  8922  007606  E102 EFD9  F033    	bz	l11153
  8923  00760C  0A07               	xorlw	7	; case 4
  8924  00760E  E102 EF6F  F034    	bz	l11197
  8925  007614  0A02               	xorlw	2	; case 6
  8926  007616  E101 D4CD          	bz	l11507
  8927  00761A  0A01               	xorlw	1	; case 7
  8928  00761C  E101 D541          	bz	l11557
  8929  007620  0A0F               	xorlw	15	; case 8
  8930  007622  E101 D59C          	bz	l11587
  8931  007626  0A02               	xorlw	2	; case 10
  8932  007628  E101 D6D0          	bz	l11687
  8933  00762C  0A01               	xorlw	1	; case 11
  8934  00762E  E101 D758          	bz	l599
  8935  007632  0A07               	xorlw	7	; case 12
  8936  007634  E101 D77A          	bz	l11737
  8937  007638  0A02               	xorlw	2	; case 14
  8938  00763A  E0A9               	bz	l11759
  8939  00763C  EF06  F033         	goto	l448
  8940  007640                     __end_of_moteRunningProcess:
  8941                           	opt stack 0
  8942                           tblptru	equ	0xFF8
  8943                           tblptrh	equ	0xFF7
  8944                           tblptrl	equ	0xFF6
  8945                           tablat	equ	0xFF5
  8946                           prodl	equ	0xFF3
  8947                           intcon	equ	0xFF2
  8948                           postinc0	equ	0xFEE
  8949                           wreg	equ	0xFE8
  8950                           postdec1	equ	0xFE5
  8951                           fsr1l	equ	0xFE1
  8952                           indf2	equ	0xFDF
  8953                           fsr2h	equ	0xFDA
  8954                           fsr2l	equ	0xFD9
  8955                           status	equ	0xFD8
  8956                           
  8957 ;; *************** function _unhex *****************
  8958 ;; Defined at:
  8959 ;;		line 1264 in file "../Includes/Board/MOTEapp.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  c               1    wreg     unsigned char 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  c               1    0[BANK0 ] unsigned char 
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  1    wreg      unsigned char 
  8966 ;; Registers used:
  8967 ;;		wreg, status,2, status,0
  8968 ;; Tracked objects:
  8969 ;;		On entry : F/1
  8970 ;;		On exit  : F/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8973 ;;      Params:         0       0       0       0       0       0       0       0       0
  8974 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8976 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8977 ;;Total ram usage:        1 bytes
  8978 ;; Hardware stack levels used:    1
  8979 ;; Hardware stack levels required when called:   11
  8980 ;; This function calls:
  8981 ;;		Nothing
  8982 ;; This function is called by:
  8983 ;;		_moteRunningProcess
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text11
  8988  003756                     __ptext11:
  8989                           	opt stack 0
  8990  003756                     _unhex:
  8991                           	opt stack 17
  8992                           
  8993                           ;incstack = 0
  8994                           ;unhex@c stored from wreg
  8995  003756  0100               	movlb	0	; () banked
  8996  003758  6FC6               	movwf	unhex@c& (0+255),b
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;MOTEapp.c: 1266: if (c >= '0' && c <= '9')
  9000  00375A  0E2F               	movlw	47
  9001  00375C  65C6               	cpfsgt	unhex@c& (0+255),b
  9002  00375E  D006               	goto	l10391
  9003                           
  9004                           ; BSR set to: 0
  9005  003760  0E3A               	movlw	58
  9006  003762  5DC6               	subwf	unhex@c& (0+255),w,b
  9007  003764  E203               	bc	l10391
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;MOTEapp.c: 1267: return c - '0';
  9011  003766  51C6               	movf	unhex@c& (0+255),w,b
  9012  003768  0FD0               	addlw	208
  9013  00376A  0012               	return	
  9014  00376C                     l10391:
  9015                           
  9016                           ; BSR set to: 0
  9017                           ;MOTEapp.c: 1268: if (c >= 'A' && c <= 'F')
  9018  00376C  0E40               	movlw	64
  9019  00376E  65C6               	cpfsgt	unhex@c& (0+255),b
  9020  003770  0C2D               	retlw	45
  9021                           
  9022                           ; BSR set to: 0
  9023  003772  0E47               	movlw	71
  9024  003774  5DC6               	subwf	unhex@c& (0+255),w,b
  9025  003776  E203               	bc	l10399
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;MOTEapp.c: 1269: return c - 'A' + 10;
  9029  003778  51C6               	movf	unhex@c& (0+255),w,b
  9030  00377A  0FC9               	addlw	201
  9031  00377C  0012               	return	
  9032  00377E                     l10399:
  9033                           
  9034                           ; BSR set to: 0
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;MOTEapp.c: 1270: return '-';
  9038  00377E  0C2D               	retlw	45
  9039  003780                     __end_of_unhex:
  9040                           	opt stack 0
  9041                           tblptru	equ	0xFF8
  9042                           tblptrh	equ	0xFF7
  9043                           tblptrl	equ	0xFF6
  9044                           tablat	equ	0xFF5
  9045                           prodl	equ	0xFF3
  9046                           intcon	equ	0xFF2
  9047                           postinc0	equ	0xFEE
  9048                           wreg	equ	0xFE8
  9049                           postdec1	equ	0xFE5
  9050                           fsr1l	equ	0xFE1
  9051                           indf2	equ	0xFDF
  9052                           fsr2h	equ	0xFDA
  9053                           fsr2l	equ	0xFD9
  9054                           status	equ	0xFD8
  9055                           
  9056 ;; *************** function _sendDataCommand *****************
  9057 ;; Defined at:
  9058 ;;		line 1241 in file "../Includes/Board/MOTEapp.c"
  9059 ;; Parameters:    Size  Location     Type
  9060 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9061 ;;		 -> STR_207(12), STR_206(14), STR_79(14), STR_77(12), 
  9062 ;;  appData         1    3[BANK0 ] PTR unsigned char 
  9063 ;;		 -> dataBuffer(12), 
  9064 ;;  dataLength      1    4[BANK0 ] unsigned char 
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9067 ;;  byteCount       1    6[BANK0 ] unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;		None               void
  9070 ;; Registers used:
  9071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9072 ;; Tracked objects:
  9073 ;;		On entry : F/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9077 ;;      Params:         0       4       0       0       0       0       0       0       0
  9078 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9079 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9080 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9081 ;;Total ram usage:        7 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; Hardware stack levels required when called:   13
  9084 ;; This function calls:
  9085 ;;		_EUSART_Write
  9086 ;;		_EndLine
  9087 ;;		_hexToStr
  9088 ;; This function is called by:
  9089 ;;		_moteRunningProcess
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           	psect	text12
  9094  004658                     __ptext12:
  9095                           	opt stack 0
  9096  004658                     _sendDataCommand:
  9097                           	opt stack 15
  9098                           
  9099                           ; BSR set to: 0
  9100                           ;MOTEapp.c: 1244: while (*string)
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;incstack = 0
  9104  004658  D00B               	goto	l10359
  9105  00465A                     l10355:
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;MOTEapp.c: 1245: {
  9109                           ;MOTEapp.c: 1246: EUSART_Write(*string++);
  9110  00465A  C0C7  FFF6         	movff	sendDataCommand@string,tblptrl
  9111  00465E  C0C8  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9112  004662                     	if	0	;tblptru may be non-zero
  9113  004662                     	endif
  9114  004662                     	if	0	;tblptru may be non-zero
  9115  004662                     	endif
  9116  004662  0008               	tblrd		*
  9117  004664  50F5               	movf	tablat,w,c
  9118  004666  EC79  F01C         	call	_EUSART_Write
  9119  00466A  0100               	movlb	0	; () banked
  9120  00466C  4BC7               	infsnz	sendDataCommand@string& (0+255),f,b
  9121  00466E  2BC8               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9122  004670                     l10359:
  9123                           
  9124                           ; BSR set to: 0
  9125  004670  C0C7  FFF6         	movff	sendDataCommand@string,tblptrl
  9126  004674  C0C8  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9127  004678                     	if	0	;tblptru may be non-zero
  9128  004678                     	endif
  9129  004678                     	if	0	;tblptru may be non-zero
  9130  004678                     	endif
  9131  004678  0008               	tblrd		*
  9132  00467A  50F5               	movf	tablat,w,c
  9133  00467C  E1EE               	bnz	l10355
  9134                           
  9135                           ; BSR set to: 0
  9136                           ;MOTEapp.c: 1247: }
  9137                           ;MOTEapp.c: 1249: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9138  00467E  6BCC               	clrf	sendDataCommand@byteCount& (0+255),b
  9139  004680                     l10365:
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;MOTEapp.c: 1250: {
  9143                           ;MOTEapp.c: 1251: EUSART_Write(appData[byteCount]);
  9144  004680  51C9               	movf	sendDataCommand@appData& (0+255),w,b
  9145  004682  25CC               	addwf	sendDataCommand@byteCount& (0+255),w,b
  9146  004684  6ED9               	movwf	fsr2l,c
  9147  004686  6ADA               	clrf	fsr2h,c
  9148  004688  50DF               	movf	indf2,w,c
  9149  00468A  EC79  F01C         	call	_EUSART_Write
  9150  00468E  0100               	movlb	0	; () banked
  9151  004690  2BCC               	incf	sendDataCommand@byteCount& (0+255),f,b
  9152                           
  9153                           ; BSR set to: 0
  9154  004692  0E02               	movlw	2
  9155  004694  65CC               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9156  004696  D7F4               	goto	l10365
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;MOTEapp.c: 1252: }
  9160                           ;MOTEapp.c: 1254: EUSART_Write(appData[3]);
  9161  004698  51C9               	movf	sendDataCommand@appData& (0+255),w,b
  9162  00469A  6ED9               	movwf	fsr2l,c
  9163  00469C  6ADA               	clrf	fsr2h,c
  9164  00469E  0E03               	movlw	3
  9165  0046A0  26D9               	addwf	fsr2l,f,c
  9166  0046A2  50DF               	movf	indf2,w,c
  9167  0046A4  EC79  F01C         	call	_EUSART_Write
  9168                           
  9169                           ;MOTEapp.c: 1256: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  9170  0046A8  0E04               	movlw	4
  9171  0046AA  0100               	movlb	0	; () banked
  9172  0046AC  6FCD               	movwf	sendDataCommand@byteCount_1637& (0+255),b
  9173  0046AE  D019               	goto	l10379
  9174  0046B0                     l10375:
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;MOTEapp.c: 1257: {
  9178                           ;MOTEapp.c: 1258: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  9179  0046B0  51C9               	movf	sendDataCommand@appData& (0+255),w,b
  9180  0046B2  25CD               	addwf	sendDataCommand@byteCount_1637& (0+255),w,b
  9181  0046B4  6ED9               	movwf	fsr2l,c
  9182  0046B6  6ADA               	clrf	fsr2h,c
  9183  0046B8  50DF               	movf	indf2,w,c
  9184  0046BA  6FCB               	movwf	??_sendDataCommand& (0+255),b
  9185  0046BC  39CB               	swapf	??_sendDataCommand& (0+255),w,b
  9186  0046BE  0B0F               	andlw	15
  9187  0046C0  EC2F  F01B         	call	_hexToStr
  9188  0046C4  EC79  F01C         	call	_EUSART_Write
  9189                           
  9190                           ;MOTEapp.c: 1259: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  9191  0046C8  0100               	movlb	0	; () banked
  9192  0046CA  51C9               	movf	sendDataCommand@appData& (0+255),w,b
  9193  0046CC  25CD               	addwf	sendDataCommand@byteCount_1637& (0+255),w,b
  9194  0046CE  6ED9               	movwf	fsr2l,c
  9195  0046D0  6ADA               	clrf	fsr2h,c
  9196  0046D2  50DF               	movf	indf2,w,c
  9197  0046D4  0B0F               	andlw	15
  9198  0046D6  EC2F  F01B         	call	_hexToStr
  9199  0046DA  EC79  F01C         	call	_EUSART_Write
  9200  0046DE  0100               	movlb	0	; () banked
  9201  0046E0  2BCD               	incf	sendDataCommand@byteCount_1637& (0+255),f,b
  9202  0046E2                     l10379:
  9203                           
  9204                           ; BSR set to: 0
  9205  0046E2  51CA               	movf	sendDataCommand@dataLength& (0+255),w,b
  9206  0046E4  5DCD               	subwf	sendDataCommand@byteCount_1637& (0+255),w,b
  9207  0046E6  E3E4               	bnc	l10375
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;MOTEapp.c: 1260: }
  9211                           ;MOTEapp.c: 1261: EndLine();
  9212  0046E8  EF12  F01A         	goto	_EndLine	;wreg free
  9213  0046EC                     __end_of_sendDataCommand:
  9214                           	opt stack 0
  9215                           tblptru	equ	0xFF8
  9216                           tblptrh	equ	0xFF7
  9217                           tblptrl	equ	0xFF6
  9218                           tablat	equ	0xFF5
  9219                           prodl	equ	0xFF3
  9220                           intcon	equ	0xFF2
  9221                           postinc0	equ	0xFEE
  9222                           wreg	equ	0xFE8
  9223                           postdec1	equ	0xFE5
  9224                           fsr1l	equ	0xFE1
  9225                           indf2	equ	0xFDF
  9226                           fsr2h	equ	0xFDA
  9227                           fsr2l	equ	0xFD9
  9228                           status	equ	0xFD8
  9229                           
  9230 ;; *************** function _hexToStr *****************
  9231 ;; Defined at:
  9232 ;;		line 1273 in file "../Includes/Board/MOTEapp.c"
  9233 ;; Parameters:    Size  Location     Type
  9234 ;;  character       1    wreg     unsigned char 
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;  character       1    0[BANK0 ] unsigned char 
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  1    wreg      unsigned char 
  9239 ;; Registers used:
  9240 ;;		wreg, status,2, status,0
  9241 ;; Tracked objects:
  9242 ;;		On entry : F/0
  9243 ;;		On exit  : F/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9246 ;;      Params:         0       0       0       0       0       0       0       0       0
  9247 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9249 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9250 ;;Total ram usage:        1 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; Hardware stack levels required when called:   11
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_sendDataCommand
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text13
  9261  00365E                     __ptext13:
  9262                           	opt stack 0
  9263  00365E                     _hexToStr:
  9264                           	opt stack 16
  9265                           
  9266                           ;incstack = 0
  9267                           ;hexToStr@character stored from wreg
  9268  00365E  6FC6               	movwf	hexToStr@character& (0+255),b
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;MOTEapp.c: 1276: character = character & 0x0F;
  9272  003660  0E0F               	movlw	15
  9273  003662  17C6               	andwf	hexToStr@character& (0+255),f,b
  9274                           
  9275                           ;MOTEapp.c: 1278: if (character < 0x0A)
  9276  003664  0E0A               	movlw	10
  9277  003666  5DC6               	subwf	hexToStr@character& (0+255),w,b
  9278  003668  E203               	bc	l10007
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;MOTEapp.c: 1279: {
  9282                           ;MOTEapp.c: 1280: return character + '0';
  9283  00366A  51C6               	movf	hexToStr@character& (0+255),w,b
  9284  00366C  0F30               	addlw	48
  9285  00366E  0012               	return	
  9286  003670                     l10007:
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;MOTEapp.c: 1282: else if ( (character >= 0x0A) && (character <= 0x0F) )
  9290  003670  0E09               	movlw	9
  9291  003672  65C6               	cpfsgt	hexToStr@character& (0+255),b
  9292  003674  0C00               	retlw	0
  9293                           
  9294                           ; BSR set to: 0
  9295  003676  0E10               	movlw	16
  9296  003678  5DC6               	subwf	hexToStr@character& (0+255),w,b
  9297  00367A  E203               	bc	l10017
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;MOTEapp.c: 1283: {
  9301                           ;MOTEapp.c: 1284: return character + '0' + 7;
  9302  00367C  51C6               	movf	hexToStr@character& (0+255),w,b
  9303  00367E  0F37               	addlw	55
  9304  003680  0012               	return	
  9305  003682                     l10017:
  9306                           
  9307                           ; BSR set to: 0
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;MOTEapp.c: 1286: else
  9311                           ;MOTEapp.c: 1287: {
  9312                           ;MOTEapp.c: 1288: return 0;
  9313  003682  0C00               	retlw	0
  9314  003684                     __end_of_hexToStr:
  9315                           	opt stack 0
  9316                           tblptru	equ	0xFF8
  9317                           tblptrh	equ	0xFF7
  9318                           tblptrl	equ	0xFF6
  9319                           tablat	equ	0xFF5
  9320                           prodl	equ	0xFF3
  9321                           intcon	equ	0xFF2
  9322                           postinc0	equ	0xFEE
  9323                           wreg	equ	0xFE8
  9324                           postdec1	equ	0xFE5
  9325                           fsr1l	equ	0xFE1
  9326                           indf2	equ	0xFDF
  9327                           fsr2h	equ	0xFDA
  9328                           fsr2l	equ	0xFD9
  9329                           status	equ	0xFD8
  9330                           
  9331 ;; *************** function _oled_putUint8 *****************
  9332 ;; Defined at:
  9333 ;;		line 226 in file "../Includes/Drivers/SSD1306oLED.c"
  9334 ;; Parameters:    Size  Location     Type
  9335 ;;  number          1    wreg     unsigned char 
  9336 ;;  station_dot     1   18[BANK0 ] unsigned char 
  9337 ;;  start_page      1   19[BANK0 ] unsigned char 
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;  number          1   20[BANK0 ] unsigned char 
  9340 ;;  numData         6   21[BANK0 ] struct .
  9341 ;; Return value:  Size  Location     Type
  9342 ;;		None               void
  9343 ;; Registers used:
  9344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9345 ;; Tracked objects:
  9346 ;;		On entry : F/0
  9347 ;;		On exit  : 0/0
  9348 ;;		Unchanged: 0/0
  9349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9350 ;;      Params:         0       2       0       0       0       0       0       0       0
  9351 ;;      Locals:         0       7       0       0       0       0       0       0       0
  9352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9353 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9354 ;;Total ram usage:        9 bytes
  9355 ;; Hardware stack levels used:    1
  9356 ;; Hardware stack levels required when called:   16
  9357 ;; This function calls:
  9358 ;;		___lbdiv
  9359 ;;		___lbmod
  9360 ;;		_oled_putString
  9361 ;; This function is called by:
  9362 ;;		_test_adc
  9363 ;;		_moteRunningProcess
  9364 ;; This function uses a non-reentrant model
  9365 ;;
  9366                           
  9367                           	psect	text14
  9368  003D78                     __ptext14:
  9369                           	opt stack 0
  9370  003D78                     _oled_putUint8:
  9371                           	opt stack 12
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;incstack = 0
  9375                           ;oled_putUint8@number stored from wreg
  9376  003D78  6FDA               	movwf	oled_putUint8@number& (0+255),b
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;SSD1306oLED.c: 228: display_data_t numData;
  9380                           ;SSD1306oLED.c: 229: numData.d2 = '0' + (number % 10);
  9381  003D7A  0E0A               	movlw	10
  9382  003D7C  6FC6               	movwf	___lbmod@divisor& (0+255),b
  9383  003D7E  51DA               	movf	oled_putUint8@number& (0+255),w,b
  9384  003D80  EC1C  F01B         	call	___lbmod
  9385  003D84  0F30               	addlw	48
  9386  003D86  6FDD               	movwf	(oled_putUint8@numData+2)& (0+255),b
  9387                           
  9388                           ;SSD1306oLED.c: 230: number /= 10;
  9389  003D88  0E0A               	movlw	10
  9390  003D8A  6FC6               	movwf	___lbdiv@divisor& (0+255),b
  9391  003D8C  51DA               	movf	oled_putUint8@number& (0+255),w,b
  9392  003D8E  EC5F  F01C         	call	___lbdiv
  9393  003D92  6FDA               	movwf	oled_putUint8@number& (0+255),b
  9394                           
  9395                           ;SSD1306oLED.c: 231: numData.d1 = '0' + (number % 10);
  9396  003D94  0E0A               	movlw	10
  9397  003D96  6FC6               	movwf	___lbmod@divisor& (0+255),b
  9398  003D98  51DA               	movf	oled_putUint8@number& (0+255),w,b
  9399  003D9A  EC1C  F01B         	call	___lbmod
  9400  003D9E  0F30               	addlw	48
  9401  003DA0  6FDC               	movwf	(oled_putUint8@numData+1)& (0+255),b
  9402                           
  9403                           ;SSD1306oLED.c: 232: number /= 10;
  9404  003DA2  0E0A               	movlw	10
  9405  003DA4  6FC6               	movwf	___lbdiv@divisor& (0+255),b
  9406  003DA6  51DA               	movf	oled_putUint8@number& (0+255),w,b
  9407  003DA8  EC5F  F01C         	call	___lbdiv
  9408  003DAC  6FDA               	movwf	oled_putUint8@number& (0+255),b
  9409                           
  9410                           ;SSD1306oLED.c: 233: numData.d0 = '0' + (number % 10);
  9411  003DAE  0E0A               	movlw	10
  9412  003DB0  6FC6               	movwf	___lbmod@divisor& (0+255),b
  9413  003DB2  51DA               	movf	oled_putUint8@number& (0+255),w,b
  9414  003DB4  EC1C  F01B         	call	___lbmod
  9415  003DB8  0F30               	addlw	48
  9416  003DBA  6FDB               	movwf	oled_putUint8@numData& (0+255),b
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;SSD1306oLED.c: 235: numData.b[3]=0;
  9420  003DBC  6BDE               	clrf	(oled_putUint8@numData+3)& (0+255),b
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;SSD1306oLED.c: 237: oled_putString(numData.b,station_dot,start_page);
  9424  003DBE  6BD4               	clrf	(oled_putString@string+1)& (0+255),b
  9425  003DC0  0EDB               	movlw	low oled_putUint8@numData
  9426  003DC2  6FD3               	movwf	oled_putString@string& (0+255),b
  9427  003DC4  C0D8  F0D5         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  9428  003DC8  C0D9  F0D6         	movff	oled_putUint8@start_page,oled_putString@start_page
  9429  003DCC  EF08  F020         	goto	_oled_putString	;wreg free
  9430  003DD0                     __end_of_oled_putUint8:
  9431                           	opt stack 0
  9432                           tblptru	equ	0xFF8
  9433                           tblptrh	equ	0xFF7
  9434                           tblptrl	equ	0xFF6
  9435                           tablat	equ	0xFF5
  9436                           prodl	equ	0xFF3
  9437                           intcon	equ	0xFF2
  9438                           postinc0	equ	0xFEE
  9439                           wreg	equ	0xFE8
  9440                           postdec1	equ	0xFE5
  9441                           fsr1l	equ	0xFE1
  9442                           indf2	equ	0xFDF
  9443                           fsr2h	equ	0xFDA
  9444                           fsr2l	equ	0xFD9
  9445                           status	equ	0xFD8
  9446                           
  9447 ;; *************** function _oled_putUint16 *****************
  9448 ;; Defined at:
  9449 ;;		line 240 in file "../Includes/Drivers/SSD1306oLED.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;  number          2   18[BANK0 ] unsigned int 
  9452 ;;  station_dot     1   20[BANK0 ] unsigned char 
  9453 ;;  start_page      1   21[BANK0 ] unsigned char 
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;  numData         6   22[BANK0 ] struct .
  9456 ;; Return value:  Size  Location     Type
  9457 ;;		None               void
  9458 ;; Registers used:
  9459 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9460 ;; Tracked objects:
  9461 ;;		On entry : F/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9465 ;;      Params:         0       4       0       0       0       0       0       0       0
  9466 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9468 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9469 ;;Total ram usage:       10 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:   16
  9472 ;; This function calls:
  9473 ;;		___lwdiv
  9474 ;;		___lwmod
  9475 ;;		_oled_putString
  9476 ;; This function is called by:
  9477 ;;		_test_adc
  9478 ;;		_moteRunningProcess
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           	psect	text15
  9483  00552E                     __ptext15:
  9484                           	opt stack 0
  9485  00552E                     _oled_putUint16:
  9486                           	opt stack 12
  9487                           
  9488                           ; BSR set to: 0
  9489                           ;SSD1306oLED.c: 242: display_data_t numData;
  9490                           ;SSD1306oLED.c: 243: numData.d4 = '0' + (number % 10);
  9491                           
  9492                           ;incstack = 0
  9493  00552E  C0D8  F0C6         	movff	oled_putUint16@number,___lwmod@dividend
  9494  005532  C0D9  F0C7         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9495  005536  6BC9               	clrf	(___lwmod@divisor+1)& (0+255),b
  9496  005538  0E0A               	movlw	10
  9497  00553A  6FC8               	movwf	___lwmod@divisor& (0+255),b
  9498  00553C  EC24  F01D         	call	___lwmod	;wreg free
  9499  005540  51C6               	movf	?___lwmod& (0+255),w,b
  9500  005542  0F30               	addlw	48
  9501  005544  6FE0               	movwf	(oled_putUint16@numData+4)& (0+255),b
  9502                           
  9503                           ;SSD1306oLED.c: 244: number /= 10;
  9504  005546  C0D8  F0C6         	movff	oled_putUint16@number,___lwdiv@dividend
  9505  00554A  C0D9  F0C7         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9506  00554E  6BC9               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9507  005550  0E0A               	movlw	10
  9508  005552  6FC8               	movwf	___lwdiv@divisor& (0+255),b
  9509  005554  ECAA  F01D         	call	___lwdiv	;wreg free
  9510  005558  C0C6  F0D8         	movff	?___lwdiv,oled_putUint16@number
  9511  00555C  C0C7  F0D9         	movff	?___lwdiv+1,oled_putUint16@number+1
  9512                           
  9513                           ;SSD1306oLED.c: 245: numData.d3 = '0' + (number % 10);
  9514  005560  C0D8  F0C6         	movff	oled_putUint16@number,___lwmod@dividend
  9515  005564  C0D9  F0C7         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9516  005568  6BC9               	clrf	(___lwmod@divisor+1)& (0+255),b
  9517  00556A  0E0A               	movlw	10
  9518  00556C  6FC8               	movwf	___lwmod@divisor& (0+255),b
  9519  00556E  EC24  F01D         	call	___lwmod	;wreg free
  9520  005572  51C6               	movf	?___lwmod& (0+255),w,b
  9521  005574  0F30               	addlw	48
  9522  005576  6FDF               	movwf	(oled_putUint16@numData+3)& (0+255),b
  9523                           
  9524                           ;SSD1306oLED.c: 246: number /= 10;
  9525  005578  C0D8  F0C6         	movff	oled_putUint16@number,___lwdiv@dividend
  9526  00557C  C0D9  F0C7         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9527  005580  6BC9               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9528  005582  0E0A               	movlw	10
  9529  005584  6FC8               	movwf	___lwdiv@divisor& (0+255),b
  9530  005586  ECAA  F01D         	call	___lwdiv	;wreg free
  9531  00558A  C0C6  F0D8         	movff	?___lwdiv,oled_putUint16@number
  9532  00558E  C0C7  F0D9         	movff	?___lwdiv+1,oled_putUint16@number+1
  9533                           
  9534                           ;SSD1306oLED.c: 247: numData.d2 = '0' + (number % 10);
  9535  005592  C0D8  F0C6         	movff	oled_putUint16@number,___lwmod@dividend
  9536  005596  C0D9  F0C7         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9537  00559A  6BC9               	clrf	(___lwmod@divisor+1)& (0+255),b
  9538  00559C  0E0A               	movlw	10
  9539  00559E  6FC8               	movwf	___lwmod@divisor& (0+255),b
  9540  0055A0  EC24  F01D         	call	___lwmod	;wreg free
  9541  0055A4  51C6               	movf	?___lwmod& (0+255),w,b
  9542  0055A6  0F30               	addlw	48
  9543  0055A8  6FDE               	movwf	(oled_putUint16@numData+2)& (0+255),b
  9544                           
  9545                           ;SSD1306oLED.c: 248: number /= 10;
  9546  0055AA  C0D8  F0C6         	movff	oled_putUint16@number,___lwdiv@dividend
  9547  0055AE  C0D9  F0C7         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9548  0055B2  6BC9               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9549  0055B4  0E0A               	movlw	10
  9550  0055B6  6FC8               	movwf	___lwdiv@divisor& (0+255),b
  9551  0055B8  ECAA  F01D         	call	___lwdiv	;wreg free
  9552  0055BC  C0C6  F0D8         	movff	?___lwdiv,oled_putUint16@number
  9553  0055C0  C0C7  F0D9         	movff	?___lwdiv+1,oled_putUint16@number+1
  9554                           
  9555                           ;SSD1306oLED.c: 249: numData.d1 = '0' + (number % 10);
  9556  0055C4  C0D8  F0C6         	movff	oled_putUint16@number,___lwmod@dividend
  9557  0055C8  C0D9  F0C7         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9558  0055CC  6BC9               	clrf	(___lwmod@divisor+1)& (0+255),b
  9559  0055CE  0E0A               	movlw	10
  9560  0055D0  6FC8               	movwf	___lwmod@divisor& (0+255),b
  9561  0055D2  EC24  F01D         	call	___lwmod	;wreg free
  9562  0055D6  51C6               	movf	?___lwmod& (0+255),w,b
  9563  0055D8  0F30               	addlw	48
  9564  0055DA  6FDD               	movwf	(oled_putUint16@numData+1)& (0+255),b
  9565                           
  9566                           ;SSD1306oLED.c: 250: number /= 10;
  9567  0055DC  C0D8  F0C6         	movff	oled_putUint16@number,___lwdiv@dividend
  9568  0055E0  C0D9  F0C7         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9569  0055E4  6BC9               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9570  0055E6  0E0A               	movlw	10
  9571  0055E8  6FC8               	movwf	___lwdiv@divisor& (0+255),b
  9572  0055EA  ECAA  F01D         	call	___lwdiv	;wreg free
  9573  0055EE  C0C6  F0D8         	movff	?___lwdiv,oled_putUint16@number
  9574  0055F2  C0C7  F0D9         	movff	?___lwdiv+1,oled_putUint16@number+1
  9575                           
  9576                           ;SSD1306oLED.c: 251: numData.d0 = '0' + (number % 10);
  9577  0055F6  C0D8  F0C6         	movff	oled_putUint16@number,___lwmod@dividend
  9578  0055FA  C0D9  F0C7         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9579  0055FE  6BC9               	clrf	(___lwmod@divisor+1)& (0+255),b
  9580  005600  0E0A               	movlw	10
  9581  005602  6FC8               	movwf	___lwmod@divisor& (0+255),b
  9582  005604  EC24  F01D         	call	___lwmod	;wreg free
  9583  005608  51C6               	movf	?___lwmod& (0+255),w,b
  9584  00560A  0F30               	addlw	48
  9585  00560C  6FDC               	movwf	oled_putUint16@numData& (0+255),b
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;SSD1306oLED.c: 253: numData.b[5]=0;
  9589  00560E  6BE1               	clrf	(oled_putUint16@numData+5)& (0+255),b
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;SSD1306oLED.c: 255: oled_putString(numData.b,station_dot,start_page);
  9593  005610  6BD4               	clrf	(oled_putString@string+1)& (0+255),b
  9594  005612  0EDC               	movlw	low oled_putUint16@numData
  9595  005614  6FD3               	movwf	oled_putString@string& (0+255),b
  9596  005616  C0DA  F0D5         	movff	oled_putUint16@station_dot,oled_putString@station_dot
  9597  00561A  C0DB  F0D6         	movff	oled_putUint16@start_page,oled_putString@start_page
  9598  00561E  EF08  F020         	goto	_oled_putString	;wreg free
  9599  005622                     __end_of_oled_putUint16:
  9600                           	opt stack 0
  9601                           tblptru	equ	0xFF8
  9602                           tblptrh	equ	0xFF7
  9603                           tblptrl	equ	0xFF6
  9604                           tablat	equ	0xFF5
  9605                           prodl	equ	0xFF3
  9606                           intcon	equ	0xFF2
  9607                           postinc0	equ	0xFEE
  9608                           wreg	equ	0xFE8
  9609                           postdec1	equ	0xFE5
  9610                           fsr1l	equ	0xFE1
  9611                           indf2	equ	0xFDF
  9612                           fsr2h	equ	0xFDA
  9613                           fsr2l	equ	0xFD9
  9614                           status	equ	0xFD8
  9615                           
  9616 ;; *************** function _moteApp_clearBuffers *****************
  9617 ;; Defined at:
  9618 ;;		line 1383 in file "../Includes/Board/MOTEapp.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;		None
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;  counter         1    2[BANK0 ] unsigned char 
  9623 ;;  counter         1    1[BANK0 ] unsigned char 
  9624 ;;  counter         1    0[BANK0 ] unsigned char 
  9625 ;; Return value:  Size  Location     Type
  9626 ;;		None               void
  9627 ;; Registers used:
  9628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : F/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9634 ;;      Params:         0       0       0       0       0       0       0       0       0
  9635 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9637 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9638 ;;Total ram usage:        3 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; Hardware stack levels required when called:   11
  9641 ;; This function calls:
  9642 ;;		Nothing
  9643 ;; This function is called by:
  9644 ;;		_moteRunningProcess
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           	psect	text16
  9649  003B0E                     __ptext16:
  9650                           	opt stack 0
  9651  003B0E                     _moteApp_clearBuffers:
  9652                           	opt stack 17
  9653                           
  9654                           ;MOTEapp.c: 1385: for (uint8_t counter = 0; counter < 3; counter++)
  9655                           
  9656                           ;incstack = 0
  9657  003B0E  0100               	movlb	0	; () banked
  9658  003B10  6BC6               	clrf	moteApp_clearBuffers@counter& (0+255),b
  9659  003B12                     l10299:
  9660                           
  9661                           ; BSR set to: 0
  9662                           ;MOTEapp.c: 1386: {
  9663                           ;MOTEapp.c: 1387: responsePortNum[counter] = 0;
  9664  003B12  51C6               	movf	moteApp_clearBuffers@counter& (0+255),w,b
  9665  003B14  0FC1               	addlw	low _responsePortNum
  9666  003B16  6ED9               	movwf	fsr2l,c
  9667  003B18  6ADA               	clrf	fsr2h,c
  9668  003B1A  6ADF               	clrf	indf2,c
  9669                           
  9670                           ; BSR set to: 0
  9671  003B1C  2BC6               	incf	moteApp_clearBuffers@counter& (0+255),f,b
  9672                           
  9673                           ; BSR set to: 0
  9674  003B1E  0E02               	movlw	2
  9675  003B20  65C6               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
  9676  003B22  D7F7               	goto	l10299
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;MOTEapp.c: 1388: }
  9680                           ;MOTEapp.c: 1389: for (uint8_t counter = 0; counter < 34; counter++)
  9681  003B24  6BC7               	clrf	moteApp_clearBuffers@counter_1700& (0+255),b
  9682  003B26                     l10309:
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;MOTEapp.c: 1390: {
  9686                           ;MOTEapp.c: 1391: responseId[counter] = 0;
  9687  003B26  0EC0               	movlw	low _responseId
  9688  003B28  0100               	movlb	0	; () banked
  9689  003B2A  25C7               	addwf	moteApp_clearBuffers@counter_1700& (0+255),w,b
  9690  003B2C  6ED9               	movwf	fsr2l,c
  9691  003B2E  6ADA               	clrf	fsr2h,c
  9692  003B30  0E01               	movlw	high _responseId
  9693  003B32  22DA               	addwfc	fsr2h,f,c
  9694  003B34  6ADF               	clrf	indf2,c
  9695                           
  9696                           ; BSR set to: 1
  9697  003B36  2BC7               	incf	moteApp_clearBuffers@counter_1700& (0+255),f,b
  9698                           
  9699                           ; BSR set to: 0
  9700  003B38  0E21               	movlw	33
  9701  003B3A  65C7               	cpfsgt	moteApp_clearBuffers@counter_1700& (0+255),b
  9702  003B3C  D7F4               	goto	l10309
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;MOTEapp.c: 1392: }
  9706                           ;MOTEapp.c: 1393: for (uint8_t counter = 0; counter < 10; counter++)
  9707  003B3E  6BC8               	clrf	moteApp_clearBuffers@counter_1701& (0+255),b
  9708  003B40                     l10319:
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;MOTEapp.c: 1394: {
  9712                           ;MOTEapp.c: 1395: responseData[counter] = 0;
  9713  003B40  51C8               	movf	moteApp_clearBuffers@counter_1701& (0+255),w,b
  9714  003B42  0FB2               	addlw	low _responseData
  9715  003B44  6ED9               	movwf	fsr2l,c
  9716  003B46  6ADA               	clrf	fsr2h,c
  9717  003B48  6ADF               	clrf	indf2,c
  9718                           
  9719                           ; BSR set to: 0
  9720  003B4A  2BC8               	incf	moteApp_clearBuffers@counter_1701& (0+255),f,b
  9721                           
  9722                           ; BSR set to: 0
  9723  003B4C  0E09               	movlw	9
  9724  003B4E  65C8               	cpfsgt	moteApp_clearBuffers@counter_1701& (0+255),b
  9725  003B50  D7F7               	goto	l10319
  9726  003B52  0C09               	retlw	9
  9727  003B54                     __end_of_moteApp_clearBuffers:
  9728                           	opt stack 0
  9729                           tblptru	equ	0xFF8
  9730                           tblptrh	equ	0xFF7
  9731                           tblptrl	equ	0xFF6
  9732                           tablat	equ	0xFF5
  9733                           prodl	equ	0xFF3
  9734                           intcon	equ	0xFF2
  9735                           postinc0	equ	0xFEE
  9736                           wreg	equ	0xFE8
  9737                           postdec1	equ	0xFE5
  9738                           fsr1l	equ	0xFE1
  9739                           indf2	equ	0xFDF
  9740                           fsr2h	equ	0xFDA
  9741                           fsr2l	equ	0xFD9
  9742                           status	equ	0xFD8
  9743                           
  9744 ;; *************** function _moteApp_add8bToDataBuffer *****************
  9745 ;; Defined at:
  9746 ;;		line 1399 in file "../Includes/Board/MOTEapp.c"
  9747 ;; Parameters:    Size  Location     Type
  9748 ;;  number          1    wreg     unsigned char 
  9749 ;;  bufferLocati    1    4[BANK0 ] unsigned char 
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;  number          1    5[BANK0 ] unsigned char 
  9752 ;; Return value:  Size  Location     Type
  9753 ;;		None               void
  9754 ;; Registers used:
  9755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9756 ;; Tracked objects:
  9757 ;;		On entry : F/0
  9758 ;;		On exit  : F/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9761 ;;      Params:         0       1       0       0       0       0       0       0       0
  9762 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9763 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9764 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9765 ;;Total ram usage:        2 bytes
  9766 ;; Hardware stack levels used:    1
  9767 ;; Hardware stack levels required when called:   12
  9768 ;; This function calls:
  9769 ;;		___lbdiv
  9770 ;;		___lbmod
  9771 ;; This function is called by:
  9772 ;;		_moteRunningProcess
  9773 ;; This function uses a non-reentrant model
  9774 ;;
  9775                           
  9776                           	psect	text17
  9777  003E84                     __ptext17:
  9778                           	opt stack 0
  9779  003E84                     _moteApp_add8bToDataBuffer:
  9780                           	opt stack 16
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;incstack = 0
  9784                           ;moteApp_add8bToDataBuffer@number stored from wreg
  9785  003E84  6FCB               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9786                           
  9787                           ; BSR set to: 0
  9788                           ;MOTEapp.c: 1401: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  9789  003E86  51CA               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9790  003E88  0F9E               	addlw	low (_dataBuffer+2)
  9791  003E8A  6ED9               	movwf	fsr2l,c
  9792  003E8C  6ADA               	clrf	fsr2h,c
  9793  003E8E  0E0A               	movlw	10
  9794  003E90  6FC6               	movwf	___lbmod@divisor& (0+255),b
  9795  003E92  51CB               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9796  003E94  EC1C  F01B         	call	___lbmod
  9797  003E98  0F30               	addlw	48
  9798  003E9A  6EDF               	movwf	indf2,c
  9799                           
  9800                           ; BSR set to: 0
  9801                           ;MOTEapp.c: 1402: number /= 10;
  9802  003E9C  0E0A               	movlw	10
  9803  003E9E  6FC6               	movwf	___lbdiv@divisor& (0+255),b
  9804  003EA0  51CB               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9805  003EA2  EC5F  F01C         	call	___lbdiv
  9806  003EA6  6FCB               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;MOTEapp.c: 1403: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  9810  003EA8  51CA               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9811  003EAA  0F9D               	addlw	low (_dataBuffer+1)
  9812  003EAC  6ED9               	movwf	fsr2l,c
  9813  003EAE  6ADA               	clrf	fsr2h,c
  9814  003EB0  0E0A               	movlw	10
  9815  003EB2  6FC6               	movwf	___lbmod@divisor& (0+255),b
  9816  003EB4  51CB               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9817  003EB6  EC1C  F01B         	call	___lbmod
  9818  003EBA  0F30               	addlw	48
  9819  003EBC  6EDF               	movwf	indf2,c
  9820                           
  9821                           ;MOTEapp.c: 1404: number /= 10;
  9822  003EBE  0E0A               	movlw	10
  9823  003EC0  6FC6               	movwf	___lbdiv@divisor& (0+255),b
  9824  003EC2  51CB               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9825  003EC4  EC5F  F01C         	call	___lbdiv
  9826  003EC8  6FCB               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;MOTEapp.c: 1405: dataBuffer[bufferLocation] = '0' + (number % 10);
  9830  003ECA  51CA               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9831  003ECC  0F9C               	addlw	low _dataBuffer
  9832  003ECE  6ED9               	movwf	fsr2l,c
  9833  003ED0  6ADA               	clrf	fsr2h,c
  9834  003ED2  0E0A               	movlw	10
  9835  003ED4  6FC6               	movwf	___lbmod@divisor& (0+255),b
  9836  003ED6  51CB               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9837  003ED8  EC1C  F01B         	call	___lbmod
  9838  003EDC  0F30               	addlw	48
  9839  003EDE  6EDF               	movwf	indf2,c
  9840                           
  9841                           ; BSR set to: 0
  9842  003EE0  0012               	return	
  9843  003EE2                     __end_of_moteApp_add8bToDataBuffer:
  9844                           	opt stack 0
  9845                           tblptru	equ	0xFF8
  9846                           tblptrh	equ	0xFF7
  9847                           tblptrl	equ	0xFF6
  9848                           tablat	equ	0xFF5
  9849                           prodl	equ	0xFF3
  9850                           intcon	equ	0xFF2
  9851                           postinc0	equ	0xFEE
  9852                           wreg	equ	0xFE8
  9853                           postdec1	equ	0xFE5
  9854                           fsr1l	equ	0xFE1
  9855                           indf2	equ	0xFDF
  9856                           fsr2h	equ	0xFDA
  9857                           fsr2l	equ	0xFD9
  9858                           status	equ	0xFD8
  9859                           
  9860 ;; *************** function ___lbmod *****************
  9861 ;; Defined at:
  9862 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lbmod.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;  dividend        1    wreg     unsigned char 
  9865 ;;  divisor         1    0[BANK0 ] unsigned char 
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;  dividend        1    1[BANK0 ] unsigned char 
  9868 ;;  rem             1    3[BANK0 ] unsigned char 
  9869 ;;  counter         1    2[BANK0 ] unsigned char 
  9870 ;; Return value:  Size  Location     Type
  9871 ;;                  1    wreg      unsigned char 
  9872 ;; Registers used:
  9873 ;;		wreg, status,2, status,0
  9874 ;; Tracked objects:
  9875 ;;		On entry : F/0
  9876 ;;		On exit  : F/0
  9877 ;;		Unchanged: 0/0
  9878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9879 ;;      Params:         0       1       0       0       0       0       0       0       0
  9880 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9882 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9883 ;;Total ram usage:        4 bytes
  9884 ;; Hardware stack levels used:    1
  9885 ;; Hardware stack levels required when called:   11
  9886 ;; This function calls:
  9887 ;;		Nothing
  9888 ;; This function is called by:
  9889 ;;		_moteApp_add8bToDataBuffer
  9890 ;;		_oled_putUint8
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text18
  9895  003638                     __ptext18:
  9896                           	opt stack 0
  9897  003638                     ___lbmod:
  9898                           	opt stack 16
  9899                           
  9900                           ; BSR set to: 0
  9901                           ;incstack = 0
  9902                           ;___lbmod@dividend stored from wreg
  9903  003638  6FC7               	movwf	___lbmod@dividend& (0+255),b
  9904                           
  9905                           ; BSR set to: 0
  9906  00363A  0E08               	movlw	8
  9907  00363C  6FC8               	movwf	___lbmod@counter& (0+255),b
  9908                           
  9909                           ; BSR set to: 0
  9910  00363E  6BC9               	clrf	___lbmod@rem& (0+255),b
  9911  003640                     l10119:
  9912                           
  9913                           ; BSR set to: 0
  9914  003640  90D8               	bcf	status,0,c
  9915  003642  35C7               	rlcf	___lbmod@dividend& (0+255),w,b
  9916  003644  35C9               	rlcf	___lbmod@rem& (0+255),w,b
  9917  003646  6FC9               	movwf	___lbmod@rem& (0+255),b
  9918                           
  9919                           ; BSR set to: 0
  9920  003648  90D8               	bcf	status,0,c
  9921  00364A  37C7               	rlcf	___lbmod@dividend& (0+255),f,b
  9922                           
  9923                           ; BSR set to: 0
  9924  00364C  51C6               	movf	___lbmod@divisor& (0+255),w,b
  9925  00364E  5DC9               	subwf	___lbmod@rem& (0+255),w,b
  9926  003650  E302               	bnc	l10127
  9927                           
  9928                           ; BSR set to: 0
  9929  003652  51C6               	movf	___lbmod@divisor& (0+255),w,b
  9930  003654  5FC9               	subwf	___lbmod@rem& (0+255),f,b
  9931  003656                     l10127:
  9932                           
  9933                           ; BSR set to: 0
  9934  003656  2FC8               	decfsz	___lbmod@counter& (0+255),f,b
  9935  003658  D7F3               	goto	l10119
  9936                           
  9937                           ; BSR set to: 0
  9938  00365A  51C9               	movf	___lbmod@rem& (0+255),w,b
  9939                           
  9940                           ; BSR set to: 0
  9941  00365C  0012               	return	
  9942  00365E                     __end_of___lbmod:
  9943                           	opt stack 0
  9944                           tblptru	equ	0xFF8
  9945                           tblptrh	equ	0xFF7
  9946                           tblptrl	equ	0xFF6
  9947                           tablat	equ	0xFF5
  9948                           prodl	equ	0xFF3
  9949                           intcon	equ	0xFF2
  9950                           postinc0	equ	0xFEE
  9951                           wreg	equ	0xFE8
  9952                           postdec1	equ	0xFE5
  9953                           fsr1l	equ	0xFE1
  9954                           indf2	equ	0xFDF
  9955                           fsr2h	equ	0xFDA
  9956                           fsr2l	equ	0xFD9
  9957                           status	equ	0xFD8
  9958                           
  9959 ;; *************** function ___lbdiv *****************
  9960 ;; Defined at:
  9961 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lbdiv.c"
  9962 ;; Parameters:    Size  Location     Type
  9963 ;;  dividend        1    wreg     unsigned char 
  9964 ;;  divisor         1    0[BANK0 ] unsigned char 
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;  dividend        1    1[BANK0 ] unsigned char 
  9967 ;;  quotient        1    3[BANK0 ] unsigned char 
  9968 ;;  counter         1    2[BANK0 ] unsigned char 
  9969 ;; Return value:  Size  Location     Type
  9970 ;;                  1    wreg      unsigned char 
  9971 ;; Registers used:
  9972 ;;		wreg, status,2, status,0
  9973 ;; Tracked objects:
  9974 ;;		On entry : F/0
  9975 ;;		On exit  : F/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9978 ;;      Params:         0       1       0       0       0       0       0       0       0
  9979 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9980 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9981 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9982 ;;Total ram usage:        4 bytes
  9983 ;; Hardware stack levels used:    1
  9984 ;; Hardware stack levels required when called:   11
  9985 ;; This function calls:
  9986 ;;		Nothing
  9987 ;; This function is called by:
  9988 ;;		_moteApp_add8bToDataBuffer
  9989 ;;		_oled_putUint8
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           
  9993                           	psect	text19
  9994  0038BE                     __ptext19:
  9995                           	opt stack 0
  9996  0038BE                     ___lbdiv:
  9997                           	opt stack 16
  9998                           
  9999                           ; BSR set to: 0
 10000                           ;incstack = 0
 10001                           ;___lbdiv@dividend stored from wreg
 10002  0038BE  6FC7               	movwf	___lbdiv@dividend& (0+255),b
 10003                           
 10004                           ; BSR set to: 0
 10005  0038C0  6BC9               	clrf	___lbdiv@quotient& (0+255),b
 10006                           
 10007                           ; BSR set to: 0
 10008  0038C2  51C6               	movf	___lbdiv@divisor& (0+255),w,b
 10009  0038C4  E014               	bz	l10111
 10010                           
 10011                           ; BSR set to: 0
 10012  0038C6  0E01               	movlw	1
 10013  0038C8  6FC8               	movwf	___lbdiv@counter& (0+255),b
 10014  0038CA  D003               	goto	l10099
 10015  0038CC                     l10095:
 10016                           
 10017                           ; BSR set to: 0
 10018  0038CC  90D8               	bcf	status,0,c
 10019  0038CE  37C6               	rlcf	___lbdiv@divisor& (0+255),f,b
 10020                           
 10021                           ; BSR set to: 0
 10022  0038D0  2BC8               	incf	___lbdiv@counter& (0+255),f,b
 10023  0038D2                     l10099:
 10024                           
 10025                           ; BSR set to: 0
 10026  0038D2  AFC6               	btfss	___lbdiv@divisor& (0+255),7,b
 10027  0038D4  D7FB               	goto	l10095
 10028  0038D6                     l10101:
 10029                           
 10030                           ; BSR set to: 0
 10031  0038D6  90D8               	bcf	status,0,c
 10032  0038D8  37C9               	rlcf	___lbdiv@quotient& (0+255),f,b
 10033  0038DA  51C6               	movf	___lbdiv@divisor& (0+255),w,b
 10034  0038DC  5DC7               	subwf	___lbdiv@dividend& (0+255),w,b
 10035  0038DE  E303               	bnc	l10107
 10036                           
 10037                           ; BSR set to: 0
 10038  0038E0  51C6               	movf	___lbdiv@divisor& (0+255),w,b
 10039  0038E2  5FC7               	subwf	___lbdiv@dividend& (0+255),f,b
 10040                           
 10041                           ; BSR set to: 0
 10042  0038E4  81C9               	bsf	___lbdiv@quotient& (0+255),0,b
 10043  0038E6                     l10107:
 10044                           
 10045                           ; BSR set to: 0
 10046  0038E6  90D8               	bcf	status,0,c
 10047  0038E8  33C6               	rrcf	___lbdiv@divisor& (0+255),f,b
 10048                           
 10049                           ; BSR set to: 0
 10050  0038EA  2FC8               	decfsz	___lbdiv@counter& (0+255),f,b
 10051  0038EC  D7F4               	goto	l10101
 10052  0038EE                     l10111:
 10053                           
 10054                           ; BSR set to: 0
 10055  0038EE  51C9               	movf	___lbdiv@quotient& (0+255),w,b
 10056                           
 10057                           ; BSR set to: 0
 10058  0038F0  0012               	return	
 10059  0038F2                     __end_of___lbdiv:
 10060                           	opt stack 0
 10061                           tblptru	equ	0xFF8
 10062                           tblptrh	equ	0xFF7
 10063                           tblptrl	equ	0xFF6
 10064                           tablat	equ	0xFF5
 10065                           prodl	equ	0xFF3
 10066                           intcon	equ	0xFF2
 10067                           postinc0	equ	0xFEE
 10068                           wreg	equ	0xFE8
 10069                           postdec1	equ	0xFE5
 10070                           fsr1l	equ	0xFE1
 10071                           indf2	equ	0xFDF
 10072                           fsr2h	equ	0xFDA
 10073                           fsr2l	equ	0xFD9
 10074                           status	equ	0xFD8
 10075                           
 10076 ;; *************** function _moteApp_add16bToDataBuffer *****************
 10077 ;; Defined at:
 10078 ;;		line 1408 in file "../Includes/Board/MOTEapp.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;  number          2    7[BANK0 ] unsigned int 
 10081 ;;  bufferLocati    1    9[BANK0 ] unsigned char 
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;		None
 10084 ;; Return value:  Size  Location     Type
 10085 ;;		None               void
 10086 ;; Registers used:
 10087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10088 ;; Tracked objects:
 10089 ;;		On entry : F/0
 10090 ;;		On exit  : F/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10093 ;;      Params:         0       3       0       0       0       0       0       0       0
 10094 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10095 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10096 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10097 ;;Total ram usage:        3 bytes
 10098 ;; Hardware stack levels used:    1
 10099 ;; Hardware stack levels required when called:   12
 10100 ;; This function calls:
 10101 ;;		___lwdiv
 10102 ;;		___lwmod
 10103 ;; This function is called by:
 10104 ;;		_moteRunningProcess
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           	psect	text20
 10109  005928                     __ptext20:
 10110                           	opt stack 0
 10111  005928                     _moteApp_add16bToDataBuffer:
 10112                           	opt stack 16
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;MOTEapp.c: 1410: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
 10116                           
 10117                           ; BSR set to: 0
 10118                           ;incstack = 0
 10119  005928  51CF               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10120  00592A  0FA0               	addlw	low (_dataBuffer+4)
 10121  00592C  6ED9               	movwf	fsr2l,c
 10122  00592E  6ADA               	clrf	fsr2h,c
 10123  005930  C0CD  F0C6         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10124  005934  C0CE  F0C7         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10125  005938  6BC9               	clrf	(___lwmod@divisor+1)& (0+255),b
 10126  00593A  0E0A               	movlw	10
 10127  00593C  6FC8               	movwf	___lwmod@divisor& (0+255),b
 10128  00593E  EC24  F01D         	call	___lwmod	;wreg free
 10129  005942  51C6               	movf	?___lwmod& (0+255),w,b
 10130  005944  0F30               	addlw	48
 10131  005946  6EDF               	movwf	indf2,c
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;MOTEapp.c: 1411: number /= 10;
 10135  005948  C0CD  F0C6         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10136  00594C  C0CE  F0C7         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10137  005950  6BC9               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10138  005952  0E0A               	movlw	10
 10139  005954  6FC8               	movwf	___lwdiv@divisor& (0+255),b
 10140  005956  ECAA  F01D         	call	___lwdiv	;wreg free
 10141  00595A  C0C6  F0CD         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10142  00595E  C0C7  F0CE         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;MOTEapp.c: 1412: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
 10146  005962  51CF               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10147  005964  0F9F               	addlw	low (_dataBuffer+3)
 10148  005966  6ED9               	movwf	fsr2l,c
 10149  005968  6ADA               	clrf	fsr2h,c
 10150  00596A  C0CD  F0C6         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10151  00596E  C0CE  F0C7         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10152  005972  6BC9               	clrf	(___lwmod@divisor+1)& (0+255),b
 10153  005974  0E0A               	movlw	10
 10154  005976  6FC8               	movwf	___lwmod@divisor& (0+255),b
 10155  005978  EC24  F01D         	call	___lwmod	;wreg free
 10156  00597C  51C6               	movf	?___lwmod& (0+255),w,b
 10157  00597E  0F30               	addlw	48
 10158  005980  6EDF               	movwf	indf2,c
 10159                           
 10160                           ;MOTEapp.c: 1413: number /= 10;
 10161  005982  C0CD  F0C6         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10162  005986  C0CE  F0C7         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10163  00598A  6BC9               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10164  00598C  0E0A               	movlw	10
 10165  00598E  6FC8               	movwf	___lwdiv@divisor& (0+255),b
 10166  005990  ECAA  F01D         	call	___lwdiv	;wreg free
 10167  005994  C0C6  F0CD         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10168  005998  C0C7  F0CE         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;MOTEapp.c: 1414: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 10172  00599C  51CF               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10173  00599E  0F9E               	addlw	low (_dataBuffer+2)
 10174  0059A0  6ED9               	movwf	fsr2l,c
 10175  0059A2  6ADA               	clrf	fsr2h,c
 10176  0059A4  C0CD  F0C6         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10177  0059A8  C0CE  F0C7         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10178  0059AC  6BC9               	clrf	(___lwmod@divisor+1)& (0+255),b
 10179  0059AE  0E0A               	movlw	10
 10180  0059B0  6FC8               	movwf	___lwmod@divisor& (0+255),b
 10181  0059B2  EC24  F01D         	call	___lwmod	;wreg free
 10182  0059B6  51C6               	movf	?___lwmod& (0+255),w,b
 10183  0059B8  0F30               	addlw	48
 10184  0059BA  6EDF               	movwf	indf2,c
 10185                           
 10186                           ; BSR set to: 0
 10187                           ;MOTEapp.c: 1415: number /= 10;
 10188  0059BC  C0CD  F0C6         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10189  0059C0  C0CE  F0C7         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10190  0059C4  6BC9               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10191  0059C6  0E0A               	movlw	10
 10192  0059C8  6FC8               	movwf	___lwdiv@divisor& (0+255),b
 10193  0059CA  ECAA  F01D         	call	___lwdiv	;wreg free
 10194  0059CE  C0C6  F0CD         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10195  0059D2  C0C7  F0CE         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10196                           
 10197                           ;MOTEapp.c: 1416: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 10198  0059D6  51CF               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10199  0059D8  0F9D               	addlw	low (_dataBuffer+1)
 10200  0059DA  6ED9               	movwf	fsr2l,c
 10201  0059DC  6ADA               	clrf	fsr2h,c
 10202  0059DE  C0CD  F0C6         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10203  0059E2  C0CE  F0C7         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10204  0059E6  6BC9               	clrf	(___lwmod@divisor+1)& (0+255),b
 10205  0059E8  0E0A               	movlw	10
 10206  0059EA  6FC8               	movwf	___lwmod@divisor& (0+255),b
 10207  0059EC  EC24  F01D         	call	___lwmod	;wreg free
 10208  0059F0  51C6               	movf	?___lwmod& (0+255),w,b
 10209  0059F2  0F30               	addlw	48
 10210  0059F4  6EDF               	movwf	indf2,c
 10211                           
 10212                           ; BSR set to: 0
 10213                           ;MOTEapp.c: 1417: number /= 10;
 10214  0059F6  C0CD  F0C6         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10215  0059FA  C0CE  F0C7         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10216  0059FE  6BC9               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10217  005A00  0E0A               	movlw	10
 10218  005A02  6FC8               	movwf	___lwdiv@divisor& (0+255),b
 10219  005A04  ECAA  F01D         	call	___lwdiv	;wreg free
 10220  005A08  C0C6  F0CD         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10221  005A0C  C0C7  F0CE         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10222                           
 10223                           ; BSR set to: 0
 10224                           ;MOTEapp.c: 1418: dataBuffer[bufferLocation] = '0' + (number % 10);
 10225  005A10  51CF               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10226  005A12  0F9C               	addlw	low _dataBuffer
 10227  005A14  6ED9               	movwf	fsr2l,c
 10228  005A16  6ADA               	clrf	fsr2h,c
 10229  005A18  C0CD  F0C6         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10230  005A1C  C0CE  F0C7         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10231  005A20  6BC9               	clrf	(___lwmod@divisor+1)& (0+255),b
 10232  005A22  0E0A               	movlw	10
 10233  005A24  6FC8               	movwf	___lwmod@divisor& (0+255),b
 10234  005A26  EC24  F01D         	call	___lwmod	;wreg free
 10235  005A2A  51C6               	movf	?___lwmod& (0+255),w,b
 10236  005A2C  0F30               	addlw	48
 10237  005A2E  6EDF               	movwf	indf2,c
 10238                           
 10239                           ; BSR set to: 0
 10240  005A30  0012               	return	
 10241  005A32                     __end_of_moteApp_add16bToDataBuffer:
 10242                           	opt stack 0
 10243                           tblptru	equ	0xFF8
 10244                           tblptrh	equ	0xFF7
 10245                           tblptrl	equ	0xFF6
 10246                           tablat	equ	0xFF5
 10247                           prodl	equ	0xFF3
 10248                           intcon	equ	0xFF2
 10249                           postinc0	equ	0xFEE
 10250                           wreg	equ	0xFE8
 10251                           postdec1	equ	0xFE5
 10252                           fsr1l	equ	0xFE1
 10253                           indf2	equ	0xFDF
 10254                           fsr2h	equ	0xFDA
 10255                           fsr2l	equ	0xFD9
 10256                           status	equ	0xFD8
 10257                           
 10258 ;; *************** function _moteApp_GoToSleep *****************
 10259 ;; Defined at:
 10260 ;;		line 1292 in file "../Includes/Board/MOTEapp.c"
 10261 ;; Parameters:    Size  Location     Type
 10262 ;;		None
 10263 ;; Auto vars:     Size  Location     Type
 10264 ;;  status          1   15[BANK0 ] unsigned char 
 10265 ;; Return value:  Size  Location     Type
 10266 ;;                  1    wreg      unsigned char 
 10267 ;; Registers used:
 10268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10269 ;; Tracked objects:
 10270 ;;		On entry : F/0
 10271 ;;		On exit  : F/0
 10272 ;;		Unchanged: 0/0
 10273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10274 ;;      Params:         0       0       0       0       0       0       0       0       0
 10275 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10276 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10277 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10278 ;;Total ram usage:        1 bytes
 10279 ;; Hardware stack levels used:    1
 10280 ;; Hardware stack levels required when called:   18
 10281 ;; This function calls:
 10282 ;;		_EUSART_FlushBuffer
 10283 ;;		_EUSART_Initialize
 10284 ;;		_PIN_MANAGER_Initialize
 10285 ;;		_modemResync
 10286 ;;		_modemSleep
 10287 ;;		_oled_displayOff
 10288 ;;		_oled_init
 10289 ;; This function is called by:
 10290 ;;		_moteRunningProcess
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294                           	psect	text21
 10295  004322                     __ptext21:
 10296                           	opt stack 0
 10297  004322                     _moteApp_GoToSleep:
 10298                           	opt stack 10
 10299  004322                     l696:
 10300                           
 10301                           ; BSR set to: 0
 10302  004322  A282               	btfss	3970,1,c	;volatile
 10303  004324  D7FE               	goto	l696
 10304                           
 10305                           ; BSR set to: 0
 10306                           ;MOTEapp.c: 1296: modemSleep();
 10307  004326  ECBD  F01A         	call	_modemSleep	;wreg free
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;MOTEapp.c: 1297: oled_displayOff(1);
 10311  00432A  0E01               	movlw	1
 10312  00432C  EC41  F01A         	call	_oled_displayOff
 10313                           
 10314                           ; BSR set to: 0
 10315                           ;MOTEapp.c: 1298: ADCON0bits.ADON = 0;
 10316  004330  90C2               	bcf	4034,0,c	;volatile
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;MOTEapp.c: 1299: INTCONbits.GIE = 0;
 10320  004332  9EF2               	bcf	intcon,7,c	;volatile
 10321                           
 10322                           ; BSR set to: 0
 10323                           ;MOTEapp.c: 1300: GIE = 0;
 10324  004334  9EF2               	bcf	intcon,7,c	;volatile
 10325                           
 10326                           ; BSR set to: 0
 10327                           ;MOTEapp.c: 1301: PEIE = 0;
 10328  004336  9CF2               	bcf	intcon,6,c	;volatile
 10329                           
 10330                           ; BSR set to: 0
 10331                           ;MOTEapp.c: 1303: ANSELAbits.ANSA0 = 1;
 10332  004338  010F               	movlb	15	; () banked
 10333  00433A  815B               	bsf	91,0,b	;volatile
 10334                           
 10335                           ; BSR set to: 15
 10336                           ;MOTEapp.c: 1305: PIE2bits.C1IE = 1;
 10337  00433C  8CA0               	bsf	4000,6,c	;volatile
 10338                           
 10339                           ; BSR set to: 15
 10340                           ;MOTEapp.c: 1306: IOCCbits.IOCC0 = 1;
 10341  00433E  8087               	bsf	3975,0,c	;volatile
 10342                           
 10343                           ; BSR set to: 15
 10344                           ;MOTEapp.c: 1307: IOCCbits.IOCC1 = 1;
 10345  004340  8287               	bsf	3975,1,c	;volatile
 10346                           
 10347                           ; BSR set to: 15
 10348                           ;MOTEapp.c: 1308: IOCCbits.IOCC2 = 1;
 10349  004342  8487               	bsf	3975,2,c	;volatile
 10350                           
 10351                           ; BSR set to: 15
 10352                           ;MOTEapp.c: 1309: INTCONbits.IOCIE = 1;
 10353  004344  86F2               	bsf	intcon,3,c	;volatile
 10354                           
 10355                           ; BSR set to: 15
 10356  004346  5082               	movf	3970,w,c	;volatile
 10357                           
 10358                           ; BSR set to: 15
 10359  004348  5082               	movf	3970,w,c	;volatile
 10360                           
 10361                           ; BSR set to: 15
 10362  00434A  5082               	movf	3970,w,c	;volatile
 10363                           
 10364                           ; BSR set to: 15
 10365                           ;MOTEapp.c: 1314: if (periodicState)
 10366  00434C  0100               	movlb	0	; () banked
 10367  00434E  51FC               	movf	_periodicState& (0+255),w,b
 10368  004350  A4D8               	btfss	status,2,c
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;MOTEapp.c: 1315: {
 10372                           ;MOTEapp.c: 1316: WDTCONbits.SWDTEN = 1;
 10373  004352  80D1               	bsf	4049,0,c	;volatile
 10374                           
 10375                           ; BSR set to: 0
 10376                           ;MOTEapp.c: 1317: }
 10377                           ;MOTEapp.c: 1318: INTCONbits.IOCIF = 0;
 10378  004354  90F2               	bcf	intcon,0,c	;volatile
 10379                           
 10380                           ;MOTEapp.c: 1319: PIR2bits.C1IF = 0;
 10381  004356  9CA1               	bcf	4001,6,c	;volatile
 10382                           
 10383                           ;MOTEapp.c: 1320: __nop();
 10384  004358  F000               	nop	
 10385  00435A  0003               	sleep		;# 
 10386                           
 10387                           ;MOTEapp.c: 1322: __nop();
 10388  00435C  F000               	nop	
 10389                           
 10390                           ;MOTEapp.c: 1324: WDTCONbits.SWDTEN = 0;
 10391  00435E  90D1               	bcf	4049,0,c	;volatile
 10392                           
 10393                           ;MOTEapp.c: 1325: EUSART_FlushBuffer();
 10394  004360  EC48  F01C         	call	_EUSART_FlushBuffer	;wreg free
 10395                           
 10396                           ; BSR set to: 0
 10397                           ;MOTEapp.c: 1327: INTCONbits.IOCIE = 0;
 10398  004364  96F2               	bcf	intcon,3,c	;volatile
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;MOTEapp.c: 1328: IOCCbits.IOCC0 = 0;
 10402  004366  9087               	bcf	3975,0,c	;volatile
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;MOTEapp.c: 1329: IOCCbits.IOCC1 = 0;
 10406  004368  9287               	bcf	3975,1,c	;volatile
 10407                           
 10408                           ; BSR set to: 0
 10409                           ;MOTEapp.c: 1330: IOCCbits.IOCC2 = 0;
 10410  00436A  9487               	bcf	3975,2,c	;volatile
 10411                           
 10412                           ; BSR set to: 0
 10413                           ;MOTEapp.c: 1331: PIE2bits.C1IE = 0;
 10414  00436C  9CA0               	bcf	4000,6,c	;volatile
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;MOTEapp.c: 1332: GIE = 1;
 10418  00436E  8EF2               	bsf	intcon,7,c	;volatile
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;MOTEapp.c: 1334: PIN_MANAGER_Initialize();
 10422  004370  EC64  F01D         	call	_PIN_MANAGER_Initialize	;wreg free
 10423                           
 10424                           ; BSR set to: 15
 10425                           ;MOTEapp.c: 1335: EUSART_Initialize();
 10426  004374  EC03  F01C         	call	_EUSART_Initialize	;wreg free
 10427                           
 10428                           ; BSR set to: 0
 10429                           ;MOTEapp.c: 1337: if (INTCONbits.IOCIF)
 10430  004378  A0F2               	btfss	intcon,0,c	;volatile
 10431  00437A  D004               	goto	l10463
 10432                           
 10433                           ; BSR set to: 0
 10434                           ;MOTEapp.c: 1338: {
 10435                           ;MOTEapp.c: 1339: INTCONbits.IOCIF = 0;
 10436  00437C  90F2               	bcf	intcon,0,c	;volatile
 10437                           
 10438                           ; BSR set to: 0
 10439                           ;MOTEapp.c: 1340: status = 1;
 10440  00437E  0E01               	movlw	1
 10441  004380  6FD5               	movwf	moteApp_GoToSleep@status& (0+255),b
 10442                           
 10443                           ;MOTEapp.c: 1341: }
 10444  004382  D003               	goto	l10467
 10445  004384                     l10463:
 10446                           
 10447                           ; BSR set to: 0
 10448                           ;MOTEapp.c: 1347: else
 10449                           ;MOTEapp.c: 1348: {
 10450                           ;MOTEapp.c: 1349: secTicker = 10;
 10451  004384  0E0A               	movlw	10
 10452  004386  6F97               	movwf	_secTicker& (0+255),b
 10453                           
 10454                           ; BSR set to: 0
 10455                           ;MOTEapp.c: 1350: status = 0;
 10456  004388  6BD5               	clrf	moteApp_GoToSleep@status& (0+255),b
 10457  00438A                     l10467:
 10458                           
 10459                           ; BSR set to: 0
 10460                           ;MOTEapp.c: 1351: }
 10461                           ;MOTEapp.c: 1352: ANSELAbits.ANSA0 = 0;
 10462  00438A  010F               	movlb	15	; () banked
 10463  00438C  915B               	bcf	91,0,b	;volatile
 10464                           
 10465                           ; BSR set to: 15
 10466                           ;MOTEapp.c: 1353: oled_displayOff(0);
 10467  00438E  0E00               	movlw	0
 10468  004390  EC41  F01A         	call	_oled_displayOff
 10469                           
 10470                           ; BSR set to: 0
 10471                           ;MOTEapp.c: 1354: oled_init();
 10472  004394  ECFA  F01A         	call	_oled_init	;wreg free
 10473                           
 10474                           ; BSR set to: 0
 10475                           ;MOTEapp.c: 1356: modemResync();
 10476  004398  ECD5  F01F         	call	_modemResync	;wreg free
 10477                           
 10478                           ; BSR set to: 0
 10479                           ;MOTEapp.c: 1357: return status;
 10480  00439C  51D5               	movf	moteApp_GoToSleep@status& (0+255),w,b
 10481                           
 10482                           ; BSR set to: 0
 10483  00439E  0012               	return	
 10484  0043A0                     __end_of_moteApp_GoToSleep:
 10485                           	opt stack 0
 10486                           tblptru	equ	0xFF8
 10487                           tblptrh	equ	0xFF7
 10488                           tblptrl	equ	0xFF6
 10489                           tablat	equ	0xFF5
 10490                           prodl	equ	0xFF3
 10491                           intcon	equ	0xFF2
 10492                           postinc0	equ	0xFEE
 10493                           wreg	equ	0xFE8
 10494                           postdec1	equ	0xFE5
 10495                           fsr1l	equ	0xFE1
 10496                           indf2	equ	0xFDF
 10497                           fsr2h	equ	0xFDA
 10498                           fsr2l	equ	0xFD9
 10499                           status	equ	0xFD8
 10500                           
 10501 ;; *************** function _oled_init *****************
 10502 ;; Defined at:
 10503 ;;		line 308 in file "../Includes/Drivers/SSD1306oLED.c"
 10504 ;; Parameters:    Size  Location     Type
 10505 ;;		None
 10506 ;; Auto vars:     Size  Location     Type
 10507 ;;		None
 10508 ;; Return value:  Size  Location     Type
 10509 ;;		None               void
 10510 ;; Registers used:
 10511 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10512 ;; Tracked objects:
 10513 ;;		On entry : F/0
 10514 ;;		On exit  : F/0
 10515 ;;		Unchanged: 0/0
 10516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10517 ;;      Params:         0       0       0       0       0       0       0       0       0
 10518 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10519 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10520 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10521 ;;Total ram usage:        0 bytes
 10522 ;; Hardware stack levels used:    1
 10523 ;; Hardware stack levels required when called:   17
 10524 ;; This function calls:
 10525 ;;		_oled_clear
 10526 ;;		_oled_devInit
 10527 ;;		_oled_setDisplay
 10528 ;;		_oled_setFont
 10529 ;; This function is called by:
 10530 ;;		_main
 10531 ;;		_moteApp_GoToSleep
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535                           	psect	text22
 10536  0035F4                     __ptext22:
 10537                           	opt stack 0
 10538  0035F4                     _oled_init:
 10539                           	opt stack 13
 10540                           
 10541                           ; BSR set to: 0
 10542                           ;SSD1306oLED.c: 311: TRISBbits.TRISB2=0;
 10543                           
 10544                           ; BSR set to: 0
 10545                           ;incstack = 0
 10546  0035F4  9493               	bcf	3987,2,c	;volatile
 10547                           
 10548                           ;SSD1306oLED.c: 312: TRISBbits.TRISB4=0;
 10549  0035F6  9893               	bcf	3987,4,c	;volatile
 10550                           
 10551                           ;SSD1306oLED.c: 313: TRISBbits.TRISB5=0;
 10552  0035F8  9A93               	bcf	3987,5,c	;volatile
 10553                           
 10554                           ; BSR set to: 0
 10555                           ;SSD1306oLED.c: 315: oled_devInit();
 10556  0035FA  EC46  F029         	call	_oled_devInit	;wreg free
 10557                           
 10558                           ; BSR set to: 0
 10559                           ;SSD1306oLED.c: 316: oled_setDisplay(Normal);
 10560  0035FE  0E00               	movlw	0
 10561  003600  EC4A  F01A         	call	_oled_setDisplay
 10562                           
 10563                           ; BSR set to: 0
 10564                           ;SSD1306oLED.c: 318: oled_setFont(OledFont0);
 10565  003604  0E76               	movlw	high _OledFont0
 10566  003606  6FC7               	movwf	(oled_setFont@font+1)& (0+255),b
 10567  003608  0E49               	movlw	low _OledFont0
 10568  00360A  6FC6               	movwf	oled_setFont@font& (0+255),b
 10569  00360C  EC53  F01A         	call	_oled_setFont	;wreg free
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;SSD1306oLED.c: 319: oled_clear();
 10573  003610  EF88  F01A         	goto	_oled_clear	;wreg free
 10574  003614                     __end_of_oled_init:
 10575                           	opt stack 0
 10576                           tblptru	equ	0xFF8
 10577                           tblptrh	equ	0xFF7
 10578                           tblptrl	equ	0xFF6
 10579                           tablat	equ	0xFF5
 10580                           prodl	equ	0xFF3
 10581                           intcon	equ	0xFF2
 10582                           postinc0	equ	0xFEE
 10583                           wreg	equ	0xFE8
 10584                           postdec1	equ	0xFE5
 10585                           fsr1l	equ	0xFE1
 10586                           indf2	equ	0xFDF
 10587                           fsr2h	equ	0xFDA
 10588                           fsr2l	equ	0xFD9
 10589                           status	equ	0xFD8
 10590                           
 10591 ;; *************** function _oled_setFont *****************
 10592 ;; Defined at:
 10593 ;;		line 218 in file "../Includes/Drivers/SSD1306oLED.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 10596 ;;		 -> OledFont0(768), 
 10597 ;; Auto vars:     Size  Location     Type
 10598 ;;		None
 10599 ;; Return value:  Size  Location     Type
 10600 ;;		None               void
 10601 ;; Registers used:
 10602 ;;		wreg, status,2, status,0
 10603 ;; Tracked objects:
 10604 ;;		On entry : F/0
 10605 ;;		On exit  : F/0
 10606 ;;		Unchanged: 0/0
 10607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10608 ;;      Params:         0       2       0       0       0       0       0       0       0
 10609 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10610 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10611 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10612 ;;Total ram usage:        2 bytes
 10613 ;; Hardware stack levels used:    1
 10614 ;; Hardware stack levels required when called:   11
 10615 ;; This function calls:
 10616 ;;		Nothing
 10617 ;; This function is called by:
 10618 ;;		_oled_init
 10619 ;; This function uses a non-reentrant model
 10620 ;;
 10621                           
 10622                           	psect	text23
 10623  0034A6                     __ptext23:
 10624                           	opt stack 0
 10625  0034A6                     _oled_setFont:
 10626                           	opt stack 18
 10627                           
 10628                           ; BSR set to: 0
 10629                           ;SSD1306oLED.c: 220: if(font!=0)
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;incstack = 0
 10633  0034A6  51C7               	movf	(oled_setFont@font+1)& (0+255),w,b
 10634  0034A8  11C6               	iorwf	oled_setFont@font& (0+255),w,b
 10635  0034AA  B4D8               	btfsc	status,2,c
 10636  0034AC  0012               	return	
 10637                           
 10638                           ; BSR set to: 0
 10639                           ;SSD1306oLED.c: 221: {
 10640                           ;SSD1306oLED.c: 222: selectedFont=font;
 10641  0034AE  C0C7  F0F9         	movff	oled_setFont@font+1,_selectedFont+1
 10642  0034B2  C0C6  F0F8         	movff	oled_setFont@font,_selectedFont
 10643                           
 10644                           ; BSR set to: 0
 10645  0034B6  0012               	return	
 10646  0034B8                     __end_of_oled_setFont:
 10647                           	opt stack 0
 10648                           tblptru	equ	0xFF8
 10649                           tblptrh	equ	0xFF7
 10650                           tblptrl	equ	0xFF6
 10651                           tablat	equ	0xFF5
 10652                           prodl	equ	0xFF3
 10653                           intcon	equ	0xFF2
 10654                           postinc0	equ	0xFEE
 10655                           wreg	equ	0xFE8
 10656                           postdec1	equ	0xFE5
 10657                           fsr1l	equ	0xFE1
 10658                           indf2	equ	0xFDF
 10659                           fsr2h	equ	0xFDA
 10660                           fsr2l	equ	0xFD9
 10661                           status	equ	0xFD8
 10662                           
 10663 ;; *************** function _oled_setDisplay *****************
 10664 ;; Defined at:
 10665 ;;		line 383 in file "../Includes/Drivers/SSD1306oLED.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;  displayType     1    wreg     enum E7158
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;  displayType     1    2[BANK0 ] enum E7158
 10670 ;; Return value:  Size  Location     Type
 10671 ;;		None               void
 10672 ;; Registers used:
 10673 ;;		wreg, status,2, status,0, cstack
 10674 ;; Tracked objects:
 10675 ;;		On entry : F/0
 10676 ;;		On exit  : F/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10679 ;;      Params:         0       0       0       0       0       0       0       0       0
 10680 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10681 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10682 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10683 ;;Total ram usage:        1 bytes
 10684 ;; Hardware stack levels used:    1
 10685 ;; Hardware stack levels required when called:   13
 10686 ;; This function calls:
 10687 ;;		_oled_writeCommand
 10688 ;; This function is called by:
 10689 ;;		_oled_init
 10690 ;; This function uses a non-reentrant model
 10691 ;;
 10692                           
 10693                           	psect	text24
 10694  003494                     __ptext24:
 10695                           	opt stack 0
 10696  003494                     _oled_setDisplay:
 10697                           	opt stack 16
 10698                           
 10699                           ; BSR set to: 0
 10700                           ;incstack = 0
 10701                           ;oled_setDisplay@displayType stored from wreg
 10702  003494  6FC8               	movwf	oled_setDisplay@displayType& (0+255),b
 10703                           
 10704                           ; BSR set to: 0
 10705                           ;SSD1306oLED.c: 385: displayType = 0xA6 + displayType;
 10706  003496  0EA6               	movlw	166
 10707  003498  27C8               	addwf	oled_setDisplay@displayType& (0+255),f,b
 10708                           
 10709                           ; BSR set to: 0
 10710                           ;SSD1306oLED.c: 387: LATBbits.LATB4 = 0;
 10711  00349A  988A               	bcf	3978,4,c	;volatile
 10712                           
 10713                           ; BSR set to: 0
 10714                           ;SSD1306oLED.c: 389: oled_writeCommand(displayType);
 10715  00349C  51C8               	movf	oled_setDisplay@displayType& (0+255),w,b
 10716  00349E  EC06  F01A         	call	_oled_writeCommand
 10717                           
 10718                           ; BSR set to: 0
 10719                           ;SSD1306oLED.c: 391: LATBbits.LATB4 = 1;
 10720  0034A2  888A               	bsf	3978,4,c	;volatile
 10721                           
 10722                           ; BSR set to: 0
 10723  0034A4  0012               	return	
 10724  0034A6                     __end_of_oled_setDisplay:
 10725                           	opt stack 0
 10726                           tblptru	equ	0xFF8
 10727                           tblptrh	equ	0xFF7
 10728                           tblptrl	equ	0xFF6
 10729                           tablat	equ	0xFF5
 10730                           prodl	equ	0xFF3
 10731                           intcon	equ	0xFF2
 10732                           postinc0	equ	0xFEE
 10733                           wreg	equ	0xFE8
 10734                           postdec1	equ	0xFE5
 10735                           fsr1l	equ	0xFE1
 10736                           indf2	equ	0xFDF
 10737                           fsr2h	equ	0xFDA
 10738                           fsr2l	equ	0xFD9
 10739                           status	equ	0xFD8
 10740                           
 10741 ;; *************** function _oled_devInit *****************
 10742 ;; Defined at:
 10743 ;;		line 322 in file "../Includes/Drivers/SSD1306oLED.c"
 10744 ;; Parameters:    Size  Location     Type
 10745 ;;		None
 10746 ;; Auto vars:     Size  Location     Type
 10747 ;;		None
 10748 ;; Return value:  Size  Location     Type
 10749 ;;		None               void
 10750 ;; Registers used:
 10751 ;;		wreg, status,2, cstack
 10752 ;; Tracked objects:
 10753 ;;		On entry : F/0
 10754 ;;		On exit  : F/0
 10755 ;;		Unchanged: 0/0
 10756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10757 ;;      Params:         0       0       0       0       0       0       0       0       0
 10758 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10759 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10760 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10761 ;;Total ram usage:        1 bytes
 10762 ;; Hardware stack levels used:    1
 10763 ;; Hardware stack levels required when called:   13
 10764 ;; This function calls:
 10765 ;;		_oled_writeCommand
 10766 ;; This function is called by:
 10767 ;;		_oled_init
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771                           	psect	text25
 10772  00528C                     __ptext25:
 10773                           	opt stack 0
 10774  00528C                     _oled_devInit:
 10775                           	opt stack 16
 10776                           
 10777                           ; BSR set to: 0
 10778                           ;SSD1306oLED.c: 324: LATBbits.LATB4 = 1;
 10779                           
 10780                           ; BSR set to: 0
 10781                           ;incstack = 0
 10782  00528C  888A               	bsf	3978,4,c	;volatile
 10783                           
 10784                           ;SSD1306oLED.c: 326: LATBbits.LATB5 = 1;
 10785  00528E  8A8A               	bsf	3978,5,c	;volatile
 10786                           
 10787                           ;SSD1306oLED.c: 330: LATBbits.LATB2 = 1;
 10788  005290  848A               	bsf	3978,2,c	;volatile
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;SSD1306oLED.c: 331: _delay((unsigned long)((20)*(48000000/4000000.0)));
 10792  005292  0E50               	movlw	80
 10793  005294                     u10547:
 10794  005294  2EE8               	decfsz	wreg,f,c
 10795  005296  D7FE               	goto	u10547
 10796                           
 10797                           ;SSD1306oLED.c: 332: LATBbits.LATB2 = 0;
 10798  005298  948A               	bcf	3978,2,c	;volatile
 10799                           
 10800                           ;SSD1306oLED.c: 333: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10801  00529A  0E04               	movlw	4
 10802  00529C  0100               	movlb	0	; () banked
 10803  00529E  6FC8               	movwf	??_oled_devInit& (0+255),b
 10804  0052A0  0E1C               	movlw	28
 10805  0052A2                     u10557:
 10806  0052A2  2EE8               	decfsz	wreg,f,c
 10807  0052A4  D7FE               	goto	u10557
 10808  0052A6  2FC8               	decfsz	??_oled_devInit& (0+255),f,b
 10809  0052A8  D7FC               	goto	u10557
 10810  0052AA  D000               	nop2	
 10811                           
 10812                           ;SSD1306oLED.c: 334: LATBbits.LATB2 = 1;
 10813  0052AC  848A               	bsf	3978,2,c	;volatile
 10814                           
 10815                           ;SSD1306oLED.c: 336: LATBbits.LATB4 = 0;
 10816  0052AE  988A               	bcf	3978,4,c	;volatile
 10817                           
 10818                           ;SSD1306oLED.c: 337: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10819  0052B0  0E04               	movlw	4
 10820  0052B2  0100               	movlb	0	; () banked
 10821  0052B4  6FC8               	movwf	??_oled_devInit& (0+255),b
 10822  0052B6  0E1C               	movlw	28
 10823  0052B8                     u10567:
 10824  0052B8  2EE8               	decfsz	wreg,f,c
 10825  0052BA  D7FE               	goto	u10567
 10826  0052BC  2FC8               	decfsz	??_oled_devInit& (0+255),f,b
 10827  0052BE  D7FC               	goto	u10567
 10828  0052C0  D000               	nop2	
 10829                           
 10830                           ;SSD1306oLED.c: 338: LATBbits.LATB5 = 0;
 10831  0052C2  9A8A               	bcf	3978,5,c	;volatile
 10832                           
 10833                           ;SSD1306oLED.c: 339: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10834  0052C4  0E04               	movlw	4
 10835  0052C6  0100               	movlb	0	; () banked
 10836  0052C8  6FC8               	movwf	??_oled_devInit& (0+255),b
 10837  0052CA  0E1C               	movlw	28
 10838  0052CC                     u10577:
 10839  0052CC  2EE8               	decfsz	wreg,f,c
 10840  0052CE  D7FE               	goto	u10577
 10841  0052D0  2FC8               	decfsz	??_oled_devInit& (0+255),f,b
 10842  0052D2  D7FC               	goto	u10577
 10843  0052D4  D000               	nop2	
 10844                           
 10845                           ;SSD1306oLED.c: 342: oled_writeCommand(0xAE);
 10846  0052D6  0EAE               	movlw	174
 10847  0052D8  EC06  F01A         	call	_oled_writeCommand
 10848                           
 10849                           ; BSR set to: 0
 10850                           ;SSD1306oLED.c: 344: oled_writeCommand(0xD5);
 10851  0052DC  0ED5               	movlw	213
 10852  0052DE  EC06  F01A         	call	_oled_writeCommand
 10853                           
 10854                           ; BSR set to: 0
 10855                           ;SSD1306oLED.c: 345: oled_writeCommand(0x80);
 10856  0052E2  0E80               	movlw	128
 10857  0052E4  EC06  F01A         	call	_oled_writeCommand
 10858                           
 10859                           ; BSR set to: 0
 10860                           ;SSD1306oLED.c: 347: oled_writeCommand(0xA8);
 10861  0052E8  0EA8               	movlw	168
 10862  0052EA  EC06  F01A         	call	_oled_writeCommand
 10863                           
 10864                           ; BSR set to: 0
 10865                           ;SSD1306oLED.c: 348: oled_writeCommand(0x1F);
 10866  0052EE  0E1F               	movlw	31
 10867  0052F0  EC06  F01A         	call	_oled_writeCommand
 10868                           
 10869                           ; BSR set to: 0
 10870                           ;SSD1306oLED.c: 350: oled_writeCommand(0xD3);
 10871  0052F4  0ED3               	movlw	211
 10872  0052F6  EC06  F01A         	call	_oled_writeCommand
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;SSD1306oLED.c: 351: oled_writeCommand(0x00);
 10876  0052FA  0E00               	movlw	0
 10877  0052FC  EC06  F01A         	call	_oled_writeCommand
 10878                           
 10879                           ; BSR set to: 0
 10880                           ;SSD1306oLED.c: 353: oled_writeCommand(0x8D);
 10881  005300  0E8D               	movlw	141
 10882  005302  EC06  F01A         	call	_oled_writeCommand
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;SSD1306oLED.c: 354: oled_writeCommand(0x14);
 10886  005306  0E14               	movlw	20
 10887  005308  EC06  F01A         	call	_oled_writeCommand
 10888                           
 10889                           ; BSR set to: 0
 10890                           ;SSD1306oLED.c: 356: oled_writeCommand(0x40);
 10891  00530C  0E40               	movlw	64
 10892  00530E  EC06  F01A         	call	_oled_writeCommand
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;SSD1306oLED.c: 358: oled_writeCommand(0xA6);
 10896  005312  0EA6               	movlw	166
 10897  005314  EC06  F01A         	call	_oled_writeCommand
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;SSD1306oLED.c: 360: oled_writeCommand(0xA4);
 10901  005318  0EA4               	movlw	164
 10902  00531A  EC06  F01A         	call	_oled_writeCommand
 10903                           
 10904                           ; BSR set to: 0
 10905                           ;SSD1306oLED.c: 362: oled_writeCommand(0xA0);
 10906  00531E  0EA0               	movlw	160
 10907  005320  EC06  F01A         	call	_oled_writeCommand
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;SSD1306oLED.c: 364: oled_writeCommand(0xC0);
 10911  005324  0EC0               	movlw	192
 10912  005326  EC06  F01A         	call	_oled_writeCommand
 10913                           
 10914                           ; BSR set to: 0
 10915                           ;SSD1306oLED.c: 366: oled_writeCommand(0xDA);
 10916  00532A  0EDA               	movlw	218
 10917  00532C  EC06  F01A         	call	_oled_writeCommand
 10918                           
 10919                           ; BSR set to: 0
 10920                           ;SSD1306oLED.c: 367: oled_writeCommand(0x42);
 10921  005330  0E42               	movlw	66
 10922  005332  EC06  F01A         	call	_oled_writeCommand
 10923                           
 10924                           ; BSR set to: 0
 10925                           ;SSD1306oLED.c: 369: oled_writeCommand(0x81);
 10926  005336  0E81               	movlw	129
 10927  005338  EC06  F01A         	call	_oled_writeCommand
 10928                           
 10929                           ; BSR set to: 0
 10930                           ;SSD1306oLED.c: 370: oled_writeCommand(0x7F);
 10931  00533C  0E7F               	movlw	127
 10932  00533E  EC06  F01A         	call	_oled_writeCommand
 10933                           
 10934                           ; BSR set to: 0
 10935                           ;SSD1306oLED.c: 372: oled_writeCommand(0xD9);
 10936  005342  0ED9               	movlw	217
 10937  005344  EC06  F01A         	call	_oled_writeCommand
 10938                           
 10939                           ; BSR set to: 0
 10940                           ;SSD1306oLED.c: 373: oled_writeCommand(0xF1);
 10941  005348  0EF1               	movlw	241
 10942  00534A  EC06  F01A         	call	_oled_writeCommand
 10943                           
 10944                           ; BSR set to: 0
 10945                           ;SSD1306oLED.c: 375: oled_writeCommand(0xDB);
 10946  00534E  0EDB               	movlw	219
 10947  005350  EC06  F01A         	call	_oled_writeCommand
 10948                           
 10949                           ; BSR set to: 0
 10950                           ;SSD1306oLED.c: 376: oled_writeCommand(0x40);
 10951  005354  0E40               	movlw	64
 10952  005356  EC06  F01A         	call	_oled_writeCommand
 10953                           
 10954                           ; BSR set to: 0
 10955                           ;SSD1306oLED.c: 378: oled_writeCommand(0xAF);
 10956  00535A  0EAF               	movlw	175
 10957  00535C  EC06  F01A         	call	_oled_writeCommand
 10958                           
 10959                           ; BSR set to: 0
 10960                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 1;
 10961  005360  888A               	bsf	3978,4,c	;volatile
 10962                           
 10963                           ; BSR set to: 0
 10964  005362  0012               	return	
 10965  005364                     __end_of_oled_devInit:
 10966                           	opt stack 0
 10967                           tblptru	equ	0xFF8
 10968                           tblptrh	equ	0xFF7
 10969                           tblptrl	equ	0xFF6
 10970                           tablat	equ	0xFF5
 10971                           prodl	equ	0xFF3
 10972                           intcon	equ	0xFF2
 10973                           postinc0	equ	0xFEE
 10974                           wreg	equ	0xFE8
 10975                           postdec1	equ	0xFE5
 10976                           fsr1l	equ	0xFE1
 10977                           indf2	equ	0xFDF
 10978                           fsr2h	equ	0xFDA
 10979                           fsr2l	equ	0xFD9
 10980                           status	equ	0xFD8
 10981                           
 10982 ;; *************** function _oled_displayOff *****************
 10983 ;; Defined at:
 10984 ;;		line 394 in file "../Includes/Drivers/SSD1306oLED.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;  state           1    wreg     unsigned char 
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;  state           1    2[BANK0 ] unsigned char 
 10989 ;; Return value:  Size  Location     Type
 10990 ;;		None               void
 10991 ;; Registers used:
 10992 ;;		wreg, status,2, status,0, cstack
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : F/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10998 ;;      Params:         0       0       0       0       0       0       0       0       0
 10999 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11000 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11001 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11002 ;;Total ram usage:        1 bytes
 11003 ;; Hardware stack levels used:    1
 11004 ;; Hardware stack levels required when called:   13
 11005 ;; This function calls:
 11006 ;;		_oled_writeCommand
 11007 ;; This function is called by:
 11008 ;;		_moteApp_GoToSleep
 11009 ;; This function uses a non-reentrant model
 11010 ;;
 11011                           
 11012                           	psect	text26
 11013  003482                     __ptext26:
 11014                           	opt stack 0
 11015  003482                     _oled_displayOff:
 11016                           	opt stack 14
 11017                           
 11018                           ; BSR set to: 0
 11019                           ;incstack = 0
 11020                           ;oled_displayOff@state stored from wreg
 11021  003482  0100               	movlb	0	; () banked
 11022  003484  6FC8               	movwf	oled_displayOff@state& (0+255),b
 11023                           
 11024                           ; BSR set to: 0
 11025                           ;SSD1306oLED.c: 396: LATBbits.LATB4 = 0;
 11026  003486  988A               	bcf	3978,4,c	;volatile
 11027                           
 11028                           ; BSR set to: 0
 11029                           ;SSD1306oLED.c: 397: oled_writeCommand(0xAF - state);
 11030  003488  51C8               	movf	oled_displayOff@state& (0+255),w,b
 11031  00348A  08AF               	sublw	175
 11032  00348C  EC06  F01A         	call	_oled_writeCommand
 11033                           
 11034                           ; BSR set to: 0
 11035                           ;SSD1306oLED.c: 398: LATBbits.LATB4 = 1;
 11036  003490  888A               	bsf	3978,4,c	;volatile
 11037                           
 11038                           ; BSR set to: 0
 11039  003492  0012               	return	
 11040  003494                     __end_of_oled_displayOff:
 11041                           	opt stack 0
 11042                           tblptru	equ	0xFF8
 11043                           tblptrh	equ	0xFF7
 11044                           tblptrl	equ	0xFF6
 11045                           tablat	equ	0xFF5
 11046                           prodl	equ	0xFF3
 11047                           intcon	equ	0xFF2
 11048                           postinc0	equ	0xFEE
 11049                           wreg	equ	0xFE8
 11050                           postdec1	equ	0xFE5
 11051                           fsr1l	equ	0xFE1
 11052                           indf2	equ	0xFDF
 11053                           fsr2h	equ	0xFDA
 11054                           fsr2l	equ	0xFD9
 11055                           status	equ	0xFD8
 11056                           
 11057 ;; *************** function _modemSleep *****************
 11058 ;; Defined at:
 11059 ;;		line 146 in file "../Includes/Board/MOTEapp.c"
 11060 ;; Parameters:    Size  Location     Type
 11061 ;;		None
 11062 ;; Auto vars:     Size  Location     Type
 11063 ;;		None
 11064 ;; Return value:  Size  Location     Type
 11065 ;;		None               void
 11066 ;; Registers used:
 11067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11068 ;; Tracked objects:
 11069 ;;		On entry : F/0
 11070 ;;		On exit  : F/0
 11071 ;;		Unchanged: 0/0
 11072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11073 ;;      Params:         0       0       0       0       0       0       0       0       0
 11074 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11075 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11076 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11077 ;;Total ram usage:        0 bytes
 11078 ;; Hardware stack levels used:    1
 11079 ;; Hardware stack levels required when called:   14
 11080 ;; This function calls:
 11081 ;;		_moteApp_delayms
 11082 ;;		_sendCommand
 11083 ;; This function is called by:
 11084 ;;		_moteApp_GoToSleep
 11085 ;; This function uses a non-reentrant model
 11086 ;;
 11087                           
 11088                           	psect	text27
 11089  00357A                     __ptext27:
 11090                           	opt stack 0
 11091  00357A                     _modemSleep:
 11092                           	opt stack 13
 11093                           
 11094                           ; BSR set to: 0
 11095                           ;MOTEapp.c: 148: sendCommand("sys sleep 999999999");
 11096                           
 11097                           ; BSR set to: 0
 11098                           ;incstack = 0
 11099  00357A  0E7A               	movlw	high STR_22
 11100  00357C  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 11101  00357E  0E72               	movlw	low STR_22
 11102  003580  6FC7               	movwf	sendCommand@string& (0+255),b
 11103  003582  EC96  F01B         	call	_sendCommand	;wreg free
 11104  003586                     l310:
 11105  003586  B89D               	btfsc	3997,4,c	;volatile
 11106  003588  D7FE               	goto	l310
 11107                           
 11108                           ;MOTEapp.c: 151: moteApp_delayms(20);
 11109  00358A  0100               	movlb	0	; () banked
 11110  00358C  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11111  00358E  0E14               	movlw	20
 11112  003590  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 11113  003592  EF81  F01B         	goto	_moteApp_delayms	;wreg free
 11114  003596                     __end_of_modemSleep:
 11115                           	opt stack 0
 11116                           tblptru	equ	0xFF8
 11117                           tblptrh	equ	0xFF7
 11118                           tblptrl	equ	0xFF6
 11119                           tablat	equ	0xFF5
 11120                           prodl	equ	0xFF3
 11121                           intcon	equ	0xFF2
 11122                           postinc0	equ	0xFEE
 11123                           wreg	equ	0xFE8
 11124                           postdec1	equ	0xFE5
 11125                           fsr1l	equ	0xFE1
 11126                           indf2	equ	0xFDF
 11127                           fsr2h	equ	0xFDA
 11128                           fsr2l	equ	0xFD9
 11129                           status	equ	0xFD8
 11130                           
 11131 ;; *************** function _modemResync *****************
 11132 ;; Defined at:
 11133 ;;		line 109 in file "../Includes/Board/MOTEapp.c"
 11134 ;; Parameters:    Size  Location     Type
 11135 ;;		None
 11136 ;; Auto vars:     Size  Location     Type
 11137 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 11138 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 11139 ;; Return value:  Size  Location     Type
 11140 ;;		None               void
 11141 ;; Registers used:
 11142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11143 ;; Tracked objects:
 11144 ;;		On entry : F/0
 11145 ;;		On exit  : F/0
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11148 ;;      Params:         0       0       0       0       0       0       0       0       0
 11149 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11150 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11151 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11152 ;;Total ram usage:        3 bytes
 11153 ;; Hardware stack levels used:    1
 11154 ;; Hardware stack levels required when called:   14
 11155 ;; This function calls:
 11156 ;;		_MOTEapp_getModemResponse
 11157 ;;		_moteApp_delayms
 11158 ;;		_sendCommand
 11159 ;; This function is called by:
 11160 ;;		_main
 11161 ;;		_moteApp_GoToSleep
 11162 ;; This function uses a non-reentrant model
 11163 ;;
 11164                           
 11165                           	psect	text28
 11166  003FAA                     __ptext28:
 11167                           	opt stack 0
 11168  003FAA                     _modemResync:
 11169                           	opt stack 13
 11170                           
 11171                           ; BSR set to: 0
 11172                           ;MOTEapp.c: 111: bool escapeEvent = 0;
 11173                           
 11174                           ; BSR set to: 0
 11175                           ;incstack = 0
 11176  003FAA  6BCD               	clrf	modemResync@escapeEvent& (0+255),b
 11177                           
 11178                           ;MOTEapp.c: 112: uint16_t escapeCounter = 0;
 11179  003FAC  6BCB               	clrf	modemResync@escapeCounter& (0+255),b
 11180  003FAE  6BCC               	clrf	(modemResync@escapeCounter+1)& (0+255),b
 11181                           
 11182                           ;MOTEapp.c: 120: TXSTAbits.TXEN = 0;
 11183  003FB0  9AAC               	bcf	4012,5,c	;volatile
 11184                           
 11185                           ;MOTEapp.c: 121: LATCbits.LATC6 = 0;
 11186  003FB2  9C8B               	bcf	3979,6,c	;volatile
 11187                           
 11188                           ; BSR set to: 0
 11189                           ;MOTEapp.c: 122: moteApp_delayms(10);
 11190  003FB4  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11191  003FB6  0E0A               	movlw	10
 11192  003FB8  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 11193  003FBA  EC81  F01B         	call	_moteApp_delayms	;wreg free
 11194                           
 11195                           ; BSR set to: 0
 11196                           ;MOTEapp.c: 127: TXSTAbits.TXEN = 1;
 11197  003FBE  8AAC               	bsf	4012,5,c	;volatile
 11198                           
 11199                           ;MOTEapp.c: 128: moteApp_delayms(5);
 11200  003FC0  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11201  003FC2  0E05               	movlw	5
 11202  003FC4  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 11203  003FC6  EC81  F01B         	call	_moteApp_delayms	;wreg free
 11204                           
 11205                           ; BSR set to: 0
 11206                           ;MOTEapp.c: 130: TXREG = 0x55;
 11207  003FCA  0E55               	movlw	85
 11208  003FCC  6EAD               	movwf	4013,c	;volatile
 11209  003FCE                     l298:
 11210                           
 11211                           ; BSR set to: 0
 11212  003FCE  A2AC               	btfss	4012,1,c	;volatile
 11213  003FD0  D7FE               	goto	l298
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;MOTEapp.c: 134: sendCommand("z");
 11217  003FD2  0E7F               	movlw	high STR_21
 11218  003FD4  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 11219  003FD6  0EFD               	movlw	low STR_21
 11220  003FD8  6FC7               	movwf	sendCommand@string& (0+255),b
 11221  003FDA  EC96  F01B         	call	_sendCommand	;wreg free
 11222                           
 11223                           ;MOTEapp.c: 136: moteApp_delayms(40);
 11224  003FDE  0100               	movlb	0	; () banked
 11225  003FE0  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11226  003FE2  0E28               	movlw	40
 11227  003FE4  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 11228  003FE6  EC81  F01B         	call	_moteApp_delayms	;wreg free
 11229                           
 11230                           ;MOTEapp.c: 137: while (escapeEvent)
 11231  003FEA  D00F               	goto	l9977
 11232  003FEC                     l9969:
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;MOTEapp.c: 138: {
 11236                           ;MOTEapp.c: 139: if(MOTEapp_getModemResponse())
 11237  003FEC  ECF5  F01D         	call	_MOTEapp_getModemResponse	;wreg free
 11238  003FF0  0900               	iorlw	0
 11239  003FF2  E003               	bz	l9973
 11240  003FF4                     l9971:
 11241                           
 11242                           ; BSR set to: 0
 11243                           ;MOTEapp.c: 140: escapeEvent = 1;
 11244  003FF4  0E01               	movlw	1
 11245  003FF6  6FCD               	movwf	modemResync@escapeEvent& (0+255),b
 11246  003FF8  D008               	goto	l9977
 11247  003FFA                     l9973:
 11248                           
 11249                           ; BSR set to: 0
 11250                           ;MOTEapp.c: 141: else if (++escapeCounter > 5000)
 11251  003FFA  4BCB               	infsnz	modemResync@escapeCounter& (0+255),f,b
 11252  003FFC  2BCC               	incf	(modemResync@escapeCounter+1)& (0+255),f,b
 11253  003FFE  0E89               	movlw	137
 11254  004000  0100               	movlb	0	; () banked
 11255  004002  5DCB               	subwf	modemResync@escapeCounter& (0+255),w,b
 11256  004004  0E13               	movlw	19
 11257  004006  59CC               	subwfb	(modemResync@escapeCounter+1)& (0+255),w,b
 11258  004008  E2F5               	bc	l9971
 11259  00400A                     l9977:
 11260                           
 11261                           ; BSR set to: 0
 11262  00400A  67CD               	tstfsz	modemResync@escapeEvent& (0+255),b
 11263  00400C  D7EF               	goto	l9969
 11264  00400E  0012               	return	
 11265  004010                     __end_of_modemResync:
 11266                           	opt stack 0
 11267                           tblptru	equ	0xFF8
 11268                           tblptrh	equ	0xFF7
 11269                           tblptrl	equ	0xFF6
 11270                           tablat	equ	0xFF5
 11271                           prodl	equ	0xFF3
 11272                           intcon	equ	0xFF2
 11273                           postinc0	equ	0xFEE
 11274                           wreg	equ	0xFE8
 11275                           postdec1	equ	0xFE5
 11276                           fsr1l	equ	0xFE1
 11277                           indf2	equ	0xFDF
 11278                           fsr2h	equ	0xFDA
 11279                           fsr2l	equ	0xFD9
 11280                           status	equ	0xFD8
 11281                           
 11282 ;; *************** function _MOTEapp_getModemResponse *****************
 11283 ;; Defined at:
 11284 ;;		line 1192 in file "../Includes/Board/MOTEapp.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;		None
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 11289 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 11290 ;; Return value:  Size  Location     Type
 11291 ;;                  1    wreg      unsigned char 
 11292 ;; Registers used:
 11293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11294 ;; Tracked objects:
 11295 ;;		On entry : F/0
 11296 ;;		On exit  : F/0
 11297 ;;		Unchanged: 0/0
 11298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11299 ;;      Params:         0       0       0       0       0       0       0       0       0
 11300 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11301 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11302 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11303 ;;Total ram usage:        2 bytes
 11304 ;; Hardware stack levels used:    1
 11305 ;; Hardware stack levels required when called:   12
 11306 ;; This function calls:
 11307 ;;		_EUSART_Read
 11308 ;; This function is called by:
 11309 ;;		_modemResync
 11310 ;;		_moteHandler
 11311 ;; This function uses a non-reentrant model
 11312 ;;
 11313                           
 11314                           	psect	text29
 11315  003BEA                     __ptext29:
 11316                           	opt stack 0
 11317  003BEA                     _MOTEapp_getModemResponse:
 11318                           	opt stack 14
 11319                           
 11320                           ; BSR set to: 0
 11321                           ;MOTEapp.c: 1194: bool terminatorReceived = 0;
 11322                           
 11323                           ; BSR set to: 0
 11324                           ;incstack = 0
 11325  003BEA  6BC7               	clrf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
 11326                           
 11327                           ; BSR set to: 0
 11328                           ;MOTEapp.c: 1195: if ((eusartRxCount))
 11329  003BEC  5190               	movf	_eusartRxCount& (0+255),w,b	;volatile
 11330  003BEE  E021               	bz	l9871
 11331                           
 11332                           ; BSR set to: 0
 11333                           ;MOTEapp.c: 1198: bufferByte = EUSART_Read();
 11334                           
 11335                           ; BSR set to: 0
 11336  003BF0  EC31  F01C         	call	_EUSART_Read	;wreg free
 11337  003BF4  6FC8               	movwf	MOTEapp_getModemResponse@bufferByte& (0+255),b
 11338                           
 11339                           ; BSR set to: 0
 11340                           ;MOTEapp.c: 1200: if (bufferByte == 0x0D)
 11341  003BF6  51C8               	movf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 11342  003BF8  0A0D               	xorlw	13
 11343  003BFA  E10C               	bnz	l9863
 11344                           
 11345                           ; BSR set to: 0
 11346                           ;MOTEapp.c: 1201: {
 11347                           ;MOTEapp.c: 1202: modemResonseBuffer[modemBufferIndex] = 0x00;
 11348  003BFC  0E80               	movlw	low _modemResonseBuffer
 11349  003BFE  0100               	movlb	0	; () banked
 11350  003C00  2592               	addwf	_modemBufferIndex& (0+255),w,b
 11351  003C02  6ED9               	movwf	fsr2l,c
 11352  003C04  6ADA               	clrf	fsr2h,c
 11353  003C06  0E01               	movlw	high _modemResonseBuffer
 11354  003C08  22DA               	addwfc	fsr2h,f,c
 11355  003C0A  6ADF               	clrf	indf2,c
 11356                           
 11357                           ; BSR set to: 1
 11358                           ;MOTEapp.c: 1203: terminatorReceived = 1;
 11359  003C0C  0E01               	movlw	1
 11360  003C0E  6FC7               	movwf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;MOTEapp.c: 1204: modemBufferIndex = 0;
 11364  003C10  6B92               	clrf	_modemBufferIndex& (0+255),b
 11365                           
 11366                           ;MOTEapp.c: 1205: }
 11367  003C12  D00F               	goto	l9871
 11368  003C14                     l9863:
 11369                           
 11370                           ; BSR set to: 0
 11371                           ;MOTEapp.c: 1206: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 11372  003C14  51C8               	movf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 11373  003C16  E00D               	bz	l9871
 11374                           
 11375                           ; BSR set to: 0
 11376  003C18  51C8               	movf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 11377  003C1A  0A0A               	xorlw	10
 11378  003C1C  E00A               	bz	l9871
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;MOTEapp.c: 1210: else
 11382                           ;MOTEapp.c: 1211: {
 11383                           ;MOTEapp.c: 1212: modemResonseBuffer[modemBufferIndex] = bufferByte;
 11384  003C1E  0E80               	movlw	low _modemResonseBuffer
 11385  003C20  0100               	movlb	0	; () banked
 11386  003C22  2592               	addwf	_modemBufferIndex& (0+255),w,b
 11387  003C24  6ED9               	movwf	fsr2l,c
 11388  003C26  6ADA               	clrf	fsr2h,c
 11389  003C28  0E01               	movlw	high _modemResonseBuffer
 11390  003C2A  22DA               	addwfc	fsr2h,f,c
 11391  003C2C  C0C8  FFDF         	movff	MOTEapp_getModemResponse@bufferByte,indf2
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;MOTEapp.c: 1214: modemBufferIndex++;
 11395  003C30  2B92               	incf	_modemBufferIndex& (0+255),f,b
 11396  003C32                     l9871:
 11397                           
 11398                           ; BSR set to: 0
 11399                           ;MOTEapp.c: 1215: }
 11400                           ;MOTEapp.c: 1216: }
 11401                           ;MOTEapp.c: 1217: return terminatorReceived;
 11402  003C32  51C7               	movf	MOTEapp_getModemResponse@terminatorReceived& (0+255),w,b
 11403                           
 11404                           ; BSR set to: 0
 11405  003C34  0012               	return	
 11406  003C36                     __end_of_MOTEapp_getModemResponse:
 11407                           	opt stack 0
 11408                           tblptru	equ	0xFF8
 11409                           tblptrh	equ	0xFF7
 11410                           tblptrl	equ	0xFF6
 11411                           tablat	equ	0xFF5
 11412                           prodl	equ	0xFF3
 11413                           intcon	equ	0xFF2
 11414                           postinc0	equ	0xFEE
 11415                           wreg	equ	0xFE8
 11416                           postdec1	equ	0xFE5
 11417                           fsr1l	equ	0xFE1
 11418                           indf2	equ	0xFDF
 11419                           fsr2h	equ	0xFDA
 11420                           fsr2l	equ	0xFD9
 11421                           status	equ	0xFD8
 11422                           
 11423 ;; *************** function _EUSART_FlushBuffer *****************
 11424 ;; Defined at:
 11425 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 11426 ;; Parameters:    Size  Location     Type
 11427 ;;		None
 11428 ;; Auto vars:     Size  Location     Type
 11429 ;;  index           1    0[BANK0 ] unsigned char 
 11430 ;; Return value:  Size  Location     Type
 11431 ;;		None               void
 11432 ;; Registers used:
 11433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11434 ;; Tracked objects:
 11435 ;;		On entry : 0/0
 11436 ;;		On exit  : F/0
 11437 ;;		Unchanged: 0/0
 11438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11439 ;;      Params:         0       0       0       0       0       0       0       0       0
 11440 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11441 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11442 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11443 ;;Total ram usage:        1 bytes
 11444 ;; Hardware stack levels used:    1
 11445 ;; Hardware stack levels required when called:   11
 11446 ;; This function calls:
 11447 ;;		Nothing
 11448 ;; This function is called by:
 11449 ;;		_moteApp_GoToSleep
 11450 ;; This function uses a non-reentrant model
 11451 ;;
 11452                           
 11453                           	psect	text30
 11454  003890                     __ptext30:
 11455                           	opt stack 0
 11456  003890                     _EUSART_FlushBuffer:
 11457                           	opt stack 16
 11458                           
 11459                           ;eusart.c: 204: uint8_t index;
 11460                           ;eusart.c: 205: for (index=0; index < 64; index++)
 11461                           
 11462                           ; BSR set to: 0
 11463                           ;incstack = 0
 11464  003890  0100               	movlb	0	; () banked
 11465  003892  6BC6               	clrf	EUSART_FlushBuffer@index& (0+255),b
 11466  003894                     l10033:
 11467                           
 11468                           ; BSR set to: 0
 11469                           ;eusart.c: 206: {
 11470                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 11471  003894  0E00               	movlw	low _eusartRxBuffer
 11472  003896  0100               	movlb	0	; () banked
 11473  003898  25C6               	addwf	EUSART_FlushBuffer@index& (0+255),w,b
 11474  00389A  6ED9               	movwf	fsr2l,c
 11475  00389C  6ADA               	clrf	fsr2h,c
 11476  00389E  0E01               	movlw	high _eusartRxBuffer
 11477  0038A0  22DA               	addwfc	fsr2h,f,c
 11478  0038A2  6ADF               	clrf	indf2,c
 11479                           
 11480                           ; BSR set to: 1
 11481  0038A4  2BC6               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 11482                           
 11483                           ; BSR set to: 0
 11484  0038A6  0E3F               	movlw	63
 11485  0038A8  65C6               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 11486  0038AA  D7F4               	goto	l10033
 11487                           
 11488                           ; BSR set to: 0
 11489                           ;eusart.c: 208: }
 11490                           ;eusart.c: 209: eusartRxHead = 0;
 11491  0038AC  6A21               	clrf	_eusartRxHead,c
 11492                           
 11493                           ;eusart.c: 210: eusartRxTail = 0;
 11494  0038AE  6A22               	clrf	_eusartRxTail,c
 11495                           
 11496                           ;eusart.c: 211: eusartRxCount = 0;
 11497  0038B0  6B90               	clrf	_eusartRxCount& (0+255),b	;volatile
 11498                           
 11499                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 11500  0038B2  989D               	bcf	3997,4,c	;volatile
 11501                           
 11502                           ;eusart.c: 214: eusartTxHead = 0;
 11503  0038B4  6A24               	clrf	_eusartTxHead,c
 11504                           
 11505                           ;eusart.c: 215: eusartTxTail = 0;
 11506  0038B6  6A25               	clrf	_eusartTxTail,c
 11507                           
 11508                           ; BSR set to: 0
 11509                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 11510  0038B8  0E40               	movlw	64
 11511  0038BA  6E23               	movwf	_eusartTxBufferRemaining,c	;volatile
 11512                           
 11513                           ; BSR set to: 0
 11514  0038BC  0C40               	retlw	64
 11515  0038BE                     __end_of_EUSART_FlushBuffer:
 11516                           	opt stack 0
 11517                           tblptru	equ	0xFF8
 11518                           tblptrh	equ	0xFF7
 11519                           tblptrl	equ	0xFF6
 11520                           tablat	equ	0xFF5
 11521                           prodl	equ	0xFF3
 11522                           intcon	equ	0xFF2
 11523                           postinc0	equ	0xFEE
 11524                           wreg	equ	0xFE8
 11525                           postdec1	equ	0xFE5
 11526                           fsr1l	equ	0xFE1
 11527                           indf2	equ	0xFDF
 11528                           fsr2h	equ	0xFDA
 11529                           fsr2l	equ	0xFD9
 11530                           status	equ	0xFD8
 11531                           
 11532 ;; *************** function _TMR2_ReadTimer *****************
 11533 ;; Defined at:
 11534 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;		None
 11537 ;; Auto vars:     Size  Location     Type
 11538 ;;  readVal         1    0[BANK0 ] unsigned char 
 11539 ;; Return value:  Size  Location     Type
 11540 ;;                  1    wreg      unsigned char 
 11541 ;; Registers used:
 11542 ;;		wreg, status,2
 11543 ;; Tracked objects:
 11544 ;;		On entry : F/0
 11545 ;;		On exit  : F/0
 11546 ;;		Unchanged: 0/0
 11547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11548 ;;      Params:         0       0       0       0       0       0       0       0       0
 11549 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11550 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11551 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11552 ;;Total ram usage:        1 bytes
 11553 ;; Hardware stack levels used:    1
 11554 ;; Hardware stack levels required when called:   11
 11555 ;; This function calls:
 11556 ;;		Nothing
 11557 ;; This function is called by:
 11558 ;;		_moteRunningProcess
 11559 ;; This function uses a non-reentrant model
 11560 ;;
 11561                           
 11562                           	psect	text31
 11563  0033FA                     __ptext31:
 11564                           	opt stack 0
 11565  0033FA                     _TMR2_ReadTimer:
 11566                           	opt stack 17
 11567                           
 11568                           ; BSR set to: 0
 11569                           ;tmr2.c: 88: uint8_t readVal;
 11570                           ;tmr2.c: 90: readVal = TMR2;
 11571                           
 11572                           ; BSR set to: 0
 11573                           ;incstack = 0
 11574  0033FA  CFBC F0C6          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 11575                           
 11576                           ; BSR set to: 0
 11577                           ;tmr2.c: 92: return readVal;
 11578  0033FE  51C6               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 11579                           
 11580                           ; BSR set to: 0
 11581  003400  0012               	return	
 11582  003402                     __end_of_TMR2_ReadTimer:
 11583                           	opt stack 0
 11584                           tblptru	equ	0xFF8
 11585                           tblptrh	equ	0xFF7
 11586                           tblptrl	equ	0xFF6
 11587                           tablat	equ	0xFF5
 11588                           prodl	equ	0xFF3
 11589                           intcon	equ	0xFF2
 11590                           postinc0	equ	0xFEE
 11591                           wreg	equ	0xFE8
 11592                           postdec1	equ	0xFE5
 11593                           fsr1l	equ	0xFE1
 11594                           indf2	equ	0xFDF
 11595                           fsr2h	equ	0xFDA
 11596                           fsr2l	equ	0xFD9
 11597                           status	equ	0xFD8
 11598                           
 11599 ;; *************** function _ADC_TempConversion *****************
 11600 ;; Defined at:
 11601 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 11602 ;; Parameters:    Size  Location     Type
 11603 ;;  tempRaw         1    wreg     enum E6186
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;  tempRaw         1    7[BANK0 ] enum E6186
 11606 ;;  temp            1    8[BANK0 ] unsigned char 
 11607 ;; Return value:  Size  Location     Type
 11608 ;;                  1    wreg      unsigned char 
 11609 ;; Registers used:
 11610 ;;		wreg, status,2, status,0, cstack
 11611 ;; Tracked objects:
 11612 ;;		On entry : F/0
 11613 ;;		On exit  : F/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11616 ;;      Params:         0       0       0       0       0       0       0       0       0
 11617 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11618 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11619 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11620 ;;Total ram usage:        2 bytes
 11621 ;; Hardware stack levels used:    1
 11622 ;; Hardware stack levels required when called:   12
 11623 ;; This function calls:
 11624 ;;		___lwdiv
 11625 ;; This function is called by:
 11626 ;;		_test_adc
 11627 ;;		_moteHandler
 11628 ;;		_moteRunningProcess
 11629 ;; This function uses a non-reentrant model
 11630 ;;
 11631                           
 11632                           	psect	text32
 11633  0035D4                     __ptext32:
 11634                           	opt stack 0
 11635  0035D4                     _ADC_TempConversion:
 11636                           	opt stack 16
 11637                           
 11638                           ; BSR set to: 0
 11639                           ;incstack = 0
 11640                           ;ADC_TempConversion@tempRaw stored from wreg
 11641  0035D4  6FCD               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 11642                           
 11643                           ; BSR set to: 0
 11644                           ;adc.c: 138: uint8_t temp;
 11645                           ;adc.c: 140: temp = (uint16_t) (tempRaw - 250) / 5;
 11646  0035D6  0E06               	movlw	6
 11647  0035D8  25CD               	addwf	ADC_TempConversion@tempRaw& (0+255),w,b
 11648  0035DA  6FC6               	movwf	___lwdiv@dividend& (0+255),b
 11649  0035DC  6BC7               	clrf	(___lwdiv@dividend+1)& (0+255),b
 11650  0035DE  0EFF               	movlw	255
 11651  0035E0  23C7               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
 11652  0035E2  6BC9               	clrf	(___lwdiv@divisor+1)& (0+255),b
 11653  0035E4  0E05               	movlw	5
 11654  0035E6  6FC8               	movwf	___lwdiv@divisor& (0+255),b
 11655  0035E8  ECAA  F01D         	call	___lwdiv	;wreg free
 11656  0035EC  51C6               	movf	?___lwdiv& (0+255),w,b
 11657  0035EE  6FCE               	movwf	ADC_TempConversion@temp& (0+255),b
 11658                           
 11659                           ; BSR set to: 0
 11660                           ;adc.c: 141: return temp;
 11661  0035F0  51CE               	movf	ADC_TempConversion@temp& (0+255),w,b
 11662                           
 11663                           ; BSR set to: 0
 11664  0035F2  0012               	return	
 11665  0035F4                     __end_of_ADC_TempConversion:
 11666                           	opt stack 0
 11667                           tblptru	equ	0xFF8
 11668                           tblptrh	equ	0xFF7
 11669                           tblptrl	equ	0xFF6
 11670                           tablat	equ	0xFF5
 11671                           prodl	equ	0xFF3
 11672                           intcon	equ	0xFF2
 11673                           postinc0	equ	0xFEE
 11674                           wreg	equ	0xFE8
 11675                           postdec1	equ	0xFE5
 11676                           fsr1l	equ	0xFE1
 11677                           indf2	equ	0xFDF
 11678                           fsr2h	equ	0xFDA
 11679                           fsr2l	equ	0xFD9
 11680                           status	equ	0xFD8
 11681                           
 11682 ;; *************** function ___lwdiv *****************
 11683 ;; Defined at:
 11684 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;  dividend        2    0[BANK0 ] unsigned int 
 11687 ;;  divisor         2    2[BANK0 ] unsigned int 
 11688 ;; Auto vars:     Size  Location     Type
 11689 ;;  quotient        2    5[BANK0 ] unsigned int 
 11690 ;;  counter         1    4[BANK0 ] unsigned char 
 11691 ;; Return value:  Size  Location     Type
 11692 ;;                  2    0[BANK0 ] unsigned int 
 11693 ;; Registers used:
 11694 ;;		wreg, status,2, status,0
 11695 ;; Tracked objects:
 11696 ;;		On entry : F/0
 11697 ;;		On exit  : F/0
 11698 ;;		Unchanged: 0/0
 11699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11700 ;;      Params:         0       4       0       0       0       0       0       0       0
 11701 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11702 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11703 ;;      Totals:         0       7       0       0       0       0       0       0       0
 11704 ;;Total ram usage:        7 bytes
 11705 ;; Hardware stack levels used:    1
 11706 ;; Hardware stack levels required when called:   11
 11707 ;; This function calls:
 11708 ;;		Nothing
 11709 ;; This function is called by:
 11710 ;;		_moteApp_add16bToDataBuffer
 11711 ;;		_oled_putUint16
 11712 ;;		_ADC_TempConversion
 11713 ;; This function uses a non-reentrant model
 11714 ;;
 11715                           
 11716                           	psect	text33
 11717  003B54                     __ptext33:
 11718                           	opt stack 0
 11719  003B54                     ___lwdiv:
 11720                           	opt stack 16
 11721                           
 11722                           ; BSR set to: 0
 11723                           
 11724                           ; BSR set to: 0
 11725                           ;incstack = 0
 11726  003B54  6BCB               	clrf	___lwdiv@quotient& (0+255),b
 11727  003B56  6BCC               	clrf	(___lwdiv@quotient+1)& (0+255),b
 11728                           
 11729                           ; BSR set to: 0
 11730  003B58  51C9               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11731  003B5A  11C8               	iorwf	___lwdiv@divisor& (0+255),w,b
 11732  003B5C  E01B               	bz	l2459
 11733                           
 11734                           ; BSR set to: 0
 11735  003B5E  0E01               	movlw	1
 11736  003B60  6FCA               	movwf	___lwdiv@counter& (0+255),b
 11737  003B62  D004               	goto	l10141
 11738  003B64                     l10139:
 11739                           
 11740                           ; BSR set to: 0
 11741  003B64  90D8               	bcf	status,0,c
 11742  003B66  37C8               	rlcf	___lwdiv@divisor& (0+255),f,b
 11743  003B68  37C9               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 11744  003B6A  2BCA               	incf	___lwdiv@counter& (0+255),f,b
 11745  003B6C                     l10141:
 11746                           
 11747                           ; BSR set to: 0
 11748  003B6C  AFC9               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 11749  003B6E  D7FA               	goto	l10139
 11750  003B70                     l10143:
 11751                           
 11752                           ; BSR set to: 0
 11753  003B70  90D8               	bcf	status,0,c
 11754  003B72  37CB               	rlcf	___lwdiv@quotient& (0+255),f,b
 11755  003B74  37CC               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 11756                           
 11757                           ; BSR set to: 0
 11758  003B76  51C8               	movf	___lwdiv@divisor& (0+255),w,b
 11759  003B78  5DC6               	subwf	___lwdiv@dividend& (0+255),w,b
 11760  003B7A  51C9               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11761  003B7C  59C7               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 11762  003B7E  E305               	bnc	l10151
 11763                           
 11764                           ; BSR set to: 0
 11765  003B80  51C8               	movf	___lwdiv@divisor& (0+255),w,b
 11766  003B82  5FC6               	subwf	___lwdiv@dividend& (0+255),f,b
 11767  003B84  51C9               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11768  003B86  5BC7               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 11769                           
 11770                           ; BSR set to: 0
 11771  003B88  81CB               	bsf	___lwdiv@quotient& (0+255),0,b
 11772  003B8A                     l10151:
 11773                           
 11774                           ; BSR set to: 0
 11775  003B8A  90D8               	bcf	status,0,c
 11776  003B8C  33C9               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 11777  003B8E  33C8               	rrcf	___lwdiv@divisor& (0+255),f,b
 11778                           
 11779                           ; BSR set to: 0
 11780  003B90  2FCA               	decfsz	___lwdiv@counter& (0+255),f,b
 11781  003B92  D7EE               	goto	l10143
 11782  003B94                     l2459:
 11783                           
 11784                           ; BSR set to: 0
 11785  003B94  C0CB  F0C6         	movff	___lwdiv@quotient,?___lwdiv
 11786  003B98  C0CC  F0C7         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11787                           
 11788                           ; BSR set to: 0
 11789  003B9C  0012               	return	
 11790  003B9E                     __end_of___lwdiv:
 11791                           	opt stack 0
 11792                           tblptru	equ	0xFF8
 11793                           tblptrh	equ	0xFF7
 11794                           tblptrl	equ	0xFF6
 11795                           tablat	equ	0xFF5
 11796                           prodl	equ	0xFF3
 11797                           intcon	equ	0xFF2
 11798                           postinc0	equ	0xFEE
 11799                           wreg	equ	0xFE8
 11800                           postdec1	equ	0xFE5
 11801                           fsr1l	equ	0xFE1
 11802                           indf2	equ	0xFDF
 11803                           fsr2h	equ	0xFDA
 11804                           fsr2l	equ	0xFD9
 11805                           status	equ	0xFD8
 11806                           
 11807 ;; *************** function _ADC_GetConversion *****************
 11808 ;; Defined at:
 11809 ;;		line 113 in file "../Includes/MccGenerated/adc.c"
 11810 ;; Parameters:    Size  Location     Type
 11811 ;;  channel         1    wreg     enum E6186
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;  channel         1    4[BANK0 ] enum E6186
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  2    0[BANK0 ] unsigned int 
 11816 ;; Registers used:
 11817 ;;		wreg, status,2, status,0
 11818 ;; Tracked objects:
 11819 ;;		On entry : F/0
 11820 ;;		On exit  : F/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11823 ;;      Params:         0       2       0       0       0       0       0       0       0
 11824 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11825 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11826 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11827 ;;Total ram usage:        5 bytes
 11828 ;; Hardware stack levels used:    1
 11829 ;; Hardware stack levels required when called:   11
 11830 ;; This function calls:
 11831 ;;		Nothing
 11832 ;; This function is called by:
 11833 ;;		_test_adc
 11834 ;;		_moteHandler
 11835 ;;		_moteRunningProcess
 11836 ;; This function uses a non-reentrant model
 11837 ;;
 11838                           
 11839                           	psect	text34
 11840  00395E                     __ptext34:
 11841                           	opt stack 0
 11842  00395E                     _ADC_GetConversion:
 11843                           	opt stack 17
 11844                           
 11845                           ; BSR set to: 0
 11846                           ;incstack = 0
 11847                           ;ADC_GetConversion@channel stored from wreg
 11848  00395E  6FCA               	movwf	ADC_GetConversion@channel& (0+255),b
 11849                           
 11850                           ; BSR set to: 0
 11851                           ;adc.c: 116: ADCON0bits.CHS = channel;
 11852  003960  C0CA  F0C8         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 11853  003964  47C8               	rlncf	??_ADC_GetConversion& (0+255),f,b
 11854  003966  47C8               	rlncf	??_ADC_GetConversion& (0+255),f,b
 11855  003968  50C2               	movf	4034,w,c	;volatile
 11856  00396A  19C8               	xorwf	??_ADC_GetConversion& (0+255),w,b
 11857  00396C  0B83               	andlw	-125
 11858  00396E  19C8               	xorwf	??_ADC_GetConversion& (0+255),w,b
 11859  003970  6EC2               	movwf	4034,c	;volatile
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;adc.c: 119: ADCON0bits.ADON = 1;
 11863  003972  80C2               	bsf	4034,0,c	;volatile
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;adc.c: 122: _delay((unsigned long)((5)*(48000000/4000000.0)));
 11867  003974  0E14               	movlw	20
 11868  003976                     u10587:
 11869  003976  2EE8               	decfsz	wreg,f,c
 11870  003978  D7FE               	goto	u10587
 11871                           
 11872                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
 11873  00397A  82C2               	bsf	4034,1,c	;volatile
 11874  00397C                     l1179:
 11875  00397C  B2C2               	btfsc	4034,1,c	;volatile
 11876  00397E  D7FE               	goto	l1179
 11877                           
 11878                           ;adc.c: 130: }
 11879                           ;adc.c: 133: return ((ADRESH << 8) + ADRESL);
 11880  003980  50C4               	movf	4036,w,c	;volatile
 11881  003982  0100               	movlb	0	; () banked
 11882  003984  6FC9               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 11883  003986  6BC8               	clrf	??_ADC_GetConversion& (0+255),b
 11884  003988  50C3               	movf	4035,w,c	;volatile
 11885  00398A  25C8               	addwf	??_ADC_GetConversion& (0+255),w,b
 11886  00398C  6FC6               	movwf	?_ADC_GetConversion& (0+255),b
 11887  00398E  0E00               	movlw	0
 11888  003990  21C9               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 11889  003992  6FC7               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 11890                           
 11891                           ; BSR set to: 0
 11892  003994  0012               	return	
 11893  003996                     __end_of_ADC_GetConversion:
 11894                           	opt stack 0
 11895                           tblptru	equ	0xFF8
 11896                           tblptrh	equ	0xFF7
 11897                           tblptrl	equ	0xFF6
 11898                           tablat	equ	0xFF5
 11899                           prodl	equ	0xFF3
 11900                           intcon	equ	0xFF2
 11901                           postinc0	equ	0xFEE
 11902                           wreg	equ	0xFE8
 11903                           postdec1	equ	0xFE5
 11904                           fsr1l	equ	0xFE1
 11905                           indf2	equ	0xFDF
 11906                           fsr2h	equ	0xFDA
 11907                           fsr2l	equ	0xFD9
 11908                           status	equ	0xFD8
 11909                           
 11910 ;; *************** function _moteJoiningProcess *****************
 11911 ;; Defined at:
 11912 ;;		line 265 in file "../Includes/Board/MOTEapp.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;  messageReady    1    wreg     unsigned char 
 11915 ;;  switchEvent     1   18[BANK0 ] unsigned char 
 11916 ;; Auto vars:     Size  Location     Type
 11917 ;;  messageReady    1   21[BANK0 ] unsigned char 
 11918 ;;  readDataRate    1   20[BANK0 ] unsigned char 
 11919 ;;  joiningCompl    1   19[BANK0 ] unsigned char 
 11920 ;; Return value:  Size  Location     Type
 11921 ;;                  1    wreg      enum E7319
 11922 ;; Registers used:
 11923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11924 ;; Tracked objects:
 11925 ;;		On entry : F/0
 11926 ;;		On exit  : F/0
 11927 ;;		Unchanged: 0/0
 11928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11929 ;;      Params:         0       1       0       0       0       0       0       0       0
 11930 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11931 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11932 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11933 ;;Total ram usage:        4 bytes
 11934 ;; Hardware stack levels used:    1
 11935 ;; Hardware stack levels required when called:   17
 11936 ;; This function calls:
 11937 ;;		_DATAEE_WriteByte
 11938 ;;		_MOTEapp_SetADR
 11939 ;;		_MOTEapp_SetDataRate
 11940 ;;		_MOTEapp_WriteDataRate
 11941 ;;		_moteApp_delayms
 11942 ;;		_oled_clear
 11943 ;;		_oled_putString
 11944 ;;		_sendCommand
 11945 ;;		_strcmp
 11946 ;;		_strncmp
 11947 ;; This function is called by:
 11948 ;;		_moteHandler
 11949 ;; This function uses a non-reentrant model
 11950 ;;
 11951                           
 11952                           	psect	text35
 11953  005EF8                     __ptext35:
 11954                           	opt stack 0
 11955  005EF8                     _moteJoiningProcess:
 11956                           	opt stack 12
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;incstack = 0
 11960                           ;moteJoiningProcess@messageReady stored from wreg
 11961  005EF8  6FDB               	movwf	moteJoiningProcess@messageReady& (0+255),b
 11962                           
 11963                           ; BSR set to: 0
 11964                           ;MOTEapp.c: 267: bool joiningComplete = 0;
 11965  005EFA  6BD9               	clrf	moteJoiningProcess@joiningComplete& (0+255),b
 11966                           
 11967                           ; BSR set to: 0
 11968                           ;MOTEapp.c: 269: if (switchEvent)
 11969  005EFC  51D8               	movf	moteJoiningProcess@switchEvent& (0+255),w,b
 11970  005EFE  E101 D275          	bz	l10989
 11971                           
 11972                           ; BSR set to: 0
 11973                           ;MOTEapp.c: 270: {
 11974                           ;MOTEapp.c: 271: activeState = moteComFailure;
 11975  005F02  0E0C               	movlw	12
 11976  005F04  6F8A               	movwf	_activeState& (0+255),b
 11977  005F06                     l351:
 11978                           
 11979                           ; BSR set to: 0
 11980  005F06  B282               	btfsc	3970,1,c	;volatile
 11981  005F08  D271               	goto	l10989
 11982  005F0A  D7FD               	goto	l351
 11983  005F0C                     l356:
 11984                           
 11985                           ; BSR set to: 0
 11986  005F0C  D7FF               	goto	l356
 11987  005F0E                     l10789:
 11988                           
 11989                           ; BSR set to: 0
 11990                           ;MOTEapp.c: 282: sendCommand("sys get ver");
 11991  005F0E  0E7E               	movlw	high STR_29
 11992  005F10  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 11993  005F12  0E8B               	movlw	low STR_29
 11994  005F14  6FC7               	movwf	sendCommand@string& (0+255),b
 11995  005F16  EC96  F01B         	call	_sendCommand	;wreg free
 11996                           
 11997                           ;MOTEapp.c: 283: moteApp_delayms(50);
 11998  005F1A  0100               	movlb	0	; () banked
 11999  005F1C  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12000  005F1E  0E32               	movlw	50
 12001  005F20  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 12002  005F22  EC81  F01B         	call	_moteApp_delayms	;wreg free
 12003  005F26                     l10793:
 12004                           
 12005                           ;MOTEapp.c: 284: activeState = moteReset;
 12006  005F26  0E01               	movlw	1
 12007  005F28  D021               	goto	L58
 12008  005F2A                     l10795:
 12009                           
 12010                           ; BSR set to: 0
 12011                           ;MOTEapp.c: 287: if ( messageReady )
 12012  005F2A  51DB               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12013  005F2C  E101 D281          	bz	l10991
 12014                           
 12015                           ; BSR set to: 0
 12016                           ;MOTEapp.c: 288: {
 12017                           ;MOTEapp.c: 289: if(strncmp(modemResonseBuffer, "RN", 2) == 0)
 12018  005F30  0E01               	movlw	high _modemResonseBuffer
 12019  005F32  0100               	movlb	0	; () banked
 12020  005F34  6FC7               	movwf	(strncmp@s1+1)& (0+255),b
 12021  005F36  0E80               	movlw	low _modemResonseBuffer
 12022  005F38  6FC6               	movwf	strncmp@s1& (0+255),b
 12023  005F3A  0E7F               	movlw	high STR_30
 12024  005F3C  6FC9               	movwf	(strncmp@s2+1)& (0+255),b
 12025  005F3E  0EEF               	movlw	low STR_30
 12026  005F40  6FC8               	movwf	strncmp@s2& (0+255),b
 12027  005F42  6BCB               	clrf	(strncmp@len+1)& (0+255),b
 12028  005F44  0E02               	movlw	2
 12029  005F46  6FCA               	movwf	strncmp@len& (0+255),b
 12030  005F48  EC70  F020         	call	_strncmp	;wreg free
 12031  005F4C  51C7               	movf	(?_strncmp+1)& (0+255),w,b
 12032  005F4E  11C6               	iorwf	?_strncmp& (0+255),w,b
 12033  005F50  E10F               	bnz	l363
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;MOTEapp.c: 290: {
 12037                           ;MOTEapp.c: 291: sendCommand("mac join abp");
 12038  005F52  0E7D               	movlw	high STR_31
 12039  005F54  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 12040  005F56  0EF6               	movlw	low STR_31
 12041  005F58  6FC7               	movwf	sendCommand@string& (0+255),b
 12042  005F5A  EC96  F01B         	call	_sendCommand	;wreg free
 12043                           
 12044                           ;MOTEapp.c: 292: moteApp_delayms(50);
 12045  005F5E  0100               	movlb	0	; () banked
 12046  005F60  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12047  005F62  0E32               	movlw	50
 12048  005F64  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 12049  005F66  EC81  F01B         	call	_moteApp_delayms	;wreg free
 12050  005F6A                     l10803:
 12051                           
 12052                           ;MOTEapp.c: 293: activeState = moteCheckAbp;
 12053  005F6A  0E02               	movlw	2
 12054  005F6C                     L58:
 12055  005F6C  0100               	movlb	0	; () banked
 12056  005F6E  D222               	goto	L67
 12057  005F70                     l363:
 12058                           
 12059                           ;MOTEapp.c: 295: else
 12060                           ;MOTEapp.c: 296: {
 12061                           ;MOTEapp.c: 298: activeState = moteStartup;
 12062  005F70  0100               	movlb	0	; () banked
 12063  005F72  6B8A               	clrf	_activeState& (0+255),b
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;MOTEapp.c: 299: }
 12067                           ;MOTEapp.c: 300: }
 12068                           ;MOTEapp.c: 301: break;
 12069  005F74  D25E               	goto	l10991
 12070  005F76                     l10805:
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;MOTEapp.c: 303: if ( messageReady )
 12074  005F76  51DB               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12075  005F78  E101 D25B          	bz	l10991
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;MOTEapp.c: 304: {
 12079                           ;MOTEapp.c: 305: if(strcmp(modemResonseBuffer, "ok") == 0)
 12080  005F7C  0E01               	movlw	high _modemResonseBuffer
 12081  005F7E  0100               	movlb	0	; () banked
 12082  005F80  6FC7               	movwf	(strcmp@s1+1)& (0+255),b
 12083  005F82  0E80               	movlw	low _modemResonseBuffer
 12084  005F84  6FC6               	movwf	strcmp@s1& (0+255),b
 12085  005F86  0E7F               	movlw	high STR_32
 12086  005F88  6FC9               	movwf	(strcmp@s2+1)& (0+255),b
 12087  005F8A  0EF2               	movlw	low STR_32
 12088  005F8C  6FC8               	movwf	strcmp@s2& (0+255),b
 12089  005F8E  EC12  F022         	call	_strcmp	;wreg free
 12090  005F92  51C7               	movf	(?_strcmp+1)& (0+255),w,b
 12091  005F94  11C6               	iorwf	?_strcmp& (0+255),w,b
 12092  005F96  E102               	bnz	l10811
 12093                           
 12094                           ; BSR set to: 0
 12095                           ;MOTEapp.c: 306: {
 12096                           ;MOTEapp.c: 307: activeState = moteWaitAbp;
 12097  005F98  0E03               	movlw	3
 12098  005F9A  D20C               	goto	L67
 12099  005F9C                     l10811:
 12100                           
 12101                           ; BSR set to: 0
 12102                           ;MOTEapp.c: 309: else if(strcmp(modemResonseBuffer, "keys_not_init") == 0)
 12103  005F9C  0E01               	movlw	high _modemResonseBuffer
 12104  005F9E  0100               	movlb	0	; () banked
 12105  005FA0  6FC7               	movwf	(strcmp@s1+1)& (0+255),b
 12106  005FA2  0E80               	movlw	low _modemResonseBuffer
 12107  005FA4  6FC6               	movwf	strcmp@s1& (0+255),b
 12108  005FA6  0E7D               	movlw	high STR_33
 12109  005FA8  6FC9               	movwf	(strcmp@s2+1)& (0+255),b
 12110  005FAA  0E66               	movlw	low STR_33
 12111  005FAC  6FC8               	movwf	strcmp@s2& (0+255),b
 12112  005FAE  EC12  F022         	call	_strcmp	;wreg free
 12113  005FB2  51C7               	movf	(?_strcmp+1)& (0+255),w,b
 12114  005FB4  11C6               	iorwf	?_strcmp& (0+255),w,b
 12115  005FB6  E143               	bnz	l10831
 12116                           
 12117                           ; BSR set to: 0
 12118                           ;MOTEapp.c: 310: {
 12119                           ;MOTEapp.c: 311: oled_clear();
 12120  005FB8  EC88  F01A         	call	_oled_clear	;wreg free
 12121                           
 12122                           ; BSR set to: 0
 12123                           ;MOTEapp.c: 312: oled_putString("ABP Join",1,0);
 12124  005FBC  0E7F               	movlw	high STR_34
 12125  005FBE  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12126  005FC0  0E5A               	movlw	low STR_34
 12127  005FC2  6FD3               	movwf	oled_putString@string& (0+255),b
 12128  005FC4  0E01               	movlw	1
 12129  005FC6  6FD5               	movwf	oled_putString@station_dot& (0+255),b
 12130  005FC8  0E00               	movlw	0
 12131  005FCA  6BD6               	clrf	oled_putString@start_page& (0+255),b
 12132  005FCC  EC08  F020         	call	_oled_putString	;wreg free
 12133                           
 12134                           ;MOTEapp.c: 313: oled_putString("No Keys",2,1);
 12135  005FD0  0E7F               	movlw	high STR_35
 12136  005FD2  0100               	movlb	0	; () banked
 12137  005FD4  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12138  005FD6  0E9F               	movlw	low STR_35
 12139  005FD8  6FD3               	movwf	oled_putString@string& (0+255),b
 12140  005FDA  0E02               	movlw	2
 12141  005FDC  6FD5               	movwf	oled_putString@station_dot& (0+255),b
 12142  005FDE  0E01               	movlw	1
 12143  005FE0  6FD6               	movwf	oled_putString@start_page& (0+255),b
 12144  005FE2  EC08  F020         	call	_oled_putString	;wreg free
 12145                           
 12146                           ;MOTEapp.c: 314: moteApp_delayms(500);
 12147  005FE6  0E01               	movlw	1
 12148  005FE8  0100               	movlb	0	; () banked
 12149  005FEA  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12150  005FEC  0EF4               	movlw	244
 12151  005FEE  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 12152  005FF0  EC81  F01B         	call	_moteApp_delayms	;wreg free
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;MOTEapp.c: 315: oled_clear();
 12156  005FF4  EC88  F01A         	call	_oled_clear	;wreg free
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;MOTEapp.c: 316: oled_putString("Trying OTAA",1,0);
 12160  005FF8  0E7E               	movlw	high STR_36
 12161  005FFA  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12162  005FFC  0E73               	movlw	low STR_36
 12163  005FFE  6FD3               	movwf	oled_putString@string& (0+255),b
 12164  006000  0E01               	movlw	1
 12165  006002  6FD5               	movwf	oled_putString@station_dot& (0+255),b
 12166  006004  0E00               	movlw	0
 12167  006006  6BD6               	clrf	oled_putString@start_page& (0+255),b
 12168  006008  EC08  F020         	call	_oled_putString	;wreg free
 12169                           
 12170                           ;MOTEapp.c: 317: oled_putString("Join",2,1);
 12171  00600C  0E7F               	movlw	high (STR_57+5)
 12172  00600E  0100               	movlb	0	; () banked
 12173  006010  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12174  006012  0E14               	movlw	low (STR_57+5)
 12175  006014  6FD3               	movwf	oled_putString@string& (0+255),b
 12176  006016  0E02               	movlw	2
 12177  006018  6FD5               	movwf	oled_putString@station_dot& (0+255),b
 12178  00601A  0E01               	movlw	1
 12179  00601C  6FD6               	movwf	oled_putString@start_page& (0+255),b
 12180  00601E  EC08  F020         	call	_oled_putString	;wreg free
 12181                           
 12182                           ;MOTEapp.c: 318: moteApp_delayms(200);
 12183  006022  0100               	movlb	0	; () banked
 12184  006024  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12185  006026  0EC8               	movlw	200
 12186  006028  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 12187  00602A  EC81  F01B         	call	_moteApp_delayms	;wreg free
 12188                           
 12189                           ; BSR set to: 0
 12190                           ;MOTEapp.c: 319: sendCommand("mac join otaa");
 12191  00602E  0E7D               	movlw	high STR_38
 12192  006030  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 12193  006032  0E4A               	movlw	low STR_38
 12194  006034  6FC7               	movwf	sendCommand@string& (0+255),b
 12195  006036  EC96  F01B         	call	_sendCommand	;wreg free
 12196  00603A                     l10829:
 12197                           
 12198                           ;MOTEapp.c: 320: activeState = moteCheckOtaa;
 12199  00603A  0E04               	movlw	4
 12200  00603C  D797               	goto	L58
 12201  00603E                     l10831:
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;MOTEapp.c: 322: else
 12205                           ;MOTEapp.c: 323: {
 12206                           ;MOTEapp.c: 324: sendCommand("mac join abp");
 12207  00603E  0E7D               	movlw	high STR_31
 12208  006040  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 12209  006042  0EF6               	movlw	low STR_31
 12210  006044  6FC7               	movwf	sendCommand@string& (0+255),b
 12211  006046  EC96  F01B         	call	_sendCommand	;wreg free
 12212  00604A  D78F               	goto	l10803
 12213  00604C                     l10835:
 12214                           
 12215                           ; BSR set to: 0
 12216                           ;MOTEapp.c: 330: if ( messageReady )
 12217  00604C  51DB               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12218  00604E  E101 D1F0          	bz	l10991
 12219                           
 12220                           ; BSR set to: 0
 12221                           ;MOTEapp.c: 331: {
 12222                           ;MOTEapp.c: 332: if(strcmp(modemResonseBuffer, "accepted") == 0)
 12223  006052  0E01               	movlw	high _modemResonseBuffer
 12224  006054  0100               	movlb	0	; () banked
 12225  006056  6FC7               	movwf	(strcmp@s1+1)& (0+255),b
 12226  006058  0E80               	movlw	low _modemResonseBuffer
 12227  00605A  6FC6               	movwf	strcmp@s1& (0+255),b
 12228  00605C  0E7F               	movlw	high STR_40
 12229  00605E  6FC9               	movwf	(strcmp@s2+1)& (0+255),b
 12230  006060  0E3F               	movlw	low STR_40
 12231  006062  6FC8               	movwf	strcmp@s2& (0+255),b
 12232  006064  EC12  F022         	call	_strcmp	;wreg free
 12233  006068  51C7               	movf	(?_strcmp+1)& (0+255),w,b
 12234  00606A  11C6               	iorwf	?_strcmp& (0+255),w,b
 12235  00606C  E11D               	bnz	l10849
 12236                           
 12237                           ; BSR set to: 0
 12238                           ;MOTEapp.c: 333: {
 12239                           ;MOTEapp.c: 334: oled_clear();
 12240  00606E  EC88  F01A         	call	_oled_clear	;wreg free
 12241                           
 12242                           ; BSR set to: 0
 12243                           ;MOTEapp.c: 335: oled_putString("ABP Join ",0,0);
 12244  006072  0E7E               	movlw	high STR_41
 12245  006074  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12246  006076  0EFB               	movlw	low STR_41
 12247  006078  6FD3               	movwf	oled_putString@string& (0+255),b
 12248  00607A  0E00               	movlw	0
 12249  00607C  6BD5               	clrf	oled_putString@station_dot& (0+255),b
 12250  00607E  6BD6               	clrf	oled_putString@start_page& (0+255),b
 12251  006080  EC08  F020         	call	_oled_putString	;wreg free
 12252                           
 12253                           ;MOTEapp.c: 336: oled_putString("Successful",0,1);
 12254  006084  0E7E               	movlw	high STR_42
 12255  006086  0100               	movlb	0	; () banked
 12256  006088  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12257  00608A  0EC5               	movlw	low STR_42
 12258  00608C  6FD3               	movwf	oled_putString@string& (0+255),b
 12259  00608E  6BD5               	clrf	oled_putString@station_dot& (0+255),b
 12260  006090  0E01               	movlw	1
 12261  006092  6FD6               	movwf	oled_putString@start_page& (0+255),b
 12262  006094  EC08  F020         	call	_oled_putString	;wreg free
 12263                           
 12264                           ;MOTEapp.c: 337: moteApp_delayms(250);
 12265  006098  0100               	movlb	0	; () banked
 12266  00609A  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12267  00609C  0EFA               	movlw	250
 12268  00609E  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 12269  0060A0  EC81  F01B         	call	_moteApp_delayms	;wreg free
 12270  0060A4                     l10847:
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;MOTEapp.c: 338: activeState = moteJoined;
 12274  0060A4  0E06               	movlw	6
 12275  0060A6  D186               	goto	L67
 12276  0060A8                     l10849:
 12277                           
 12278                           ; BSR set to: 0
 12279                           ;MOTEapp.c: 340: else if(strcmp(modemResonseBuffer, "denied") == 0)
 12280  0060A8  0E01               	movlw	high _modemResonseBuffer
 12281  0060AA  0100               	movlb	0	; () banked
 12282  0060AC  6FC7               	movwf	(strcmp@s1+1)& (0+255),b
 12283  0060AE  0E80               	movlw	low _modemResonseBuffer
 12284  0060B0  6FC6               	movwf	strcmp@s1& (0+255),b
 12285  0060B2  0E7F               	movlw	high STR_43
 12286  0060B4  6FC9               	movwf	(strcmp@s2+1)& (0+255),b
 12287  0060B6  0ECC               	movlw	low STR_43
 12288  0060B8  6FC8               	movwf	strcmp@s2& (0+255),b
 12289  0060BA  EC12  F022         	call	_strcmp	;wreg free
 12290  0060BE  51C7               	movf	(?_strcmp+1)& (0+255),w,b
 12291  0060C0  11C6               	iorwf	?_strcmp& (0+255),w,b
 12292  0060C2  E107               	bnz	l10855
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;MOTEapp.c: 341: {
 12296                           ;MOTEapp.c: 342: sendCommand("mac join abp");
 12297  0060C4  0E7D               	movlw	high STR_31
 12298  0060C6  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 12299  0060C8  0EF6               	movlw	low STR_31
 12300  0060CA  6FC7               	movwf	sendCommand@string& (0+255),b
 12301  0060CC  EC96  F01B         	call	_sendCommand	;wreg free
 12302  0060D0  D74C               	goto	l10803
 12303  0060D2                     l10855:
 12304                           
 12305                           ; BSR set to: 0
 12306                           ;MOTEapp.c: 345: else
 12307                           ;MOTEapp.c: 346: {
 12308                           ;MOTEapp.c: 347: sendCommand("mac reset");
 12309  0060D2  0E7F               	movlw	high STR_45
 12310  0060D4  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 12311  0060D6  0E19               	movlw	low STR_45
 12312  0060D8  6FC7               	movwf	sendCommand@string& (0+255),b
 12313  0060DA  EC96  F01B         	call	_sendCommand	;wreg free
 12314  0060DE  D723               	goto	l10793
 12315  0060E0                     l10859:
 12316                           
 12317                           ; BSR set to: 0
 12318                           ;MOTEapp.c: 354: if ( messageReady )
 12319  0060E0  51DB               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12320  0060E2  E101 D1A6          	bz	l10991
 12321                           
 12322                           ; BSR set to: 0
 12323                           ;MOTEapp.c: 355: {
 12324                           ;MOTEapp.c: 356: if(strcmp(modemResonseBuffer, "ok") == 0)
 12325  0060E6  0E01               	movlw	high _modemResonseBuffer
 12326  0060E8  0100               	movlb	0	; () banked
 12327  0060EA  6FC7               	movwf	(strcmp@s1+1)& (0+255),b
 12328  0060EC  0E80               	movlw	low _modemResonseBuffer
 12329  0060EE  6FC6               	movwf	strcmp@s1& (0+255),b
 12330  0060F0  0E7F               	movlw	high STR_32
 12331  0060F2  6FC9               	movwf	(strcmp@s2+1)& (0+255),b
 12332  0060F4  0EF2               	movlw	low STR_32
 12333  0060F6  6FC8               	movwf	strcmp@s2& (0+255),b
 12334  0060F8  EC12  F022         	call	_strcmp	;wreg free
 12335  0060FC  51C7               	movf	(?_strcmp+1)& (0+255),w,b
 12336  0060FE  11C6               	iorwf	?_strcmp& (0+255),w,b
 12337  006100  E102               	bnz	l10865
 12338                           
 12339                           ; BSR set to: 0
 12340                           ;MOTEapp.c: 357: {
 12341                           ;MOTEapp.c: 358: activeState = moteWaitOtaa;
 12342  006102  0E05               	movlw	5
 12343  006104  D157               	goto	L67
 12344  006106                     l10865:
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;MOTEapp.c: 360: else if(strcmp(modemResonseBuffer, "keys_not_init") == 0)
 12348  006106  0E01               	movlw	high _modemResonseBuffer
 12349  006108  0100               	movlb	0	; () banked
 12350  00610A  6FC7               	movwf	(strcmp@s1+1)& (0+255),b
 12351  00610C  0E80               	movlw	low _modemResonseBuffer
 12352  00610E  6FC6               	movwf	strcmp@s1& (0+255),b
 12353  006110  0E7D               	movlw	high STR_33
 12354  006112  6FC9               	movwf	(strcmp@s2+1)& (0+255),b
 12355  006114  0E66               	movlw	low STR_33
 12356  006116  6FC8               	movwf	strcmp@s2& (0+255),b
 12357  006118  EC12  F022         	call	_strcmp	;wreg free
 12358  00611C  51C7               	movf	(?_strcmp+1)& (0+255),w,b
 12359  00611E  11C6               	iorwf	?_strcmp& (0+255),w,b
 12360  006120  E117               	bnz	l10875
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;MOTEapp.c: 361: {
 12364                           ;MOTEapp.c: 362: oled_clear();
 12365  006122  EC88  F01A         	call	_oled_clear	;wreg free
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;MOTEapp.c: 363: oled_putString("Valid Keys",0,0);
 12369  006126  0E7E               	movlw	high STR_48
 12370  006128  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12371  00612A  0EDB               	movlw	low STR_48
 12372  00612C  6FD3               	movwf	oled_putString@string& (0+255),b
 12373  00612E  0E00               	movlw	0
 12374  006130  6BD5               	clrf	oled_putString@station_dot& (0+255),b
 12375  006132  6BD6               	clrf	oled_putString@start_page& (0+255),b
 12376  006134  EC08  F020         	call	_oled_putString	;wreg free
 12377                           
 12378                           ;MOTEapp.c: 364: oled_putString("Required",0,1);
 12379  006138  0E7F               	movlw	high STR_49
 12380  00613A  0100               	movlb	0	; () banked
 12381  00613C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12382  00613E  0E36               	movlw	low STR_49
 12383  006140  6FD3               	movwf	oled_putString@string& (0+255),b
 12384  006142  6BD5               	clrf	oled_putString@station_dot& (0+255),b
 12385  006144  0E01               	movlw	1
 12386  006146  6FD6               	movwf	oled_putString@start_page& (0+255),b
 12387  006148  EC08  F020         	call	_oled_putString	;wreg free
 12388                           
 12389                           ;MOTEapp.c: 365: activeState = moteNeedKeys;
 12390  00614C  0E0B               	movlw	11
 12391  00614E  D70E               	goto	L58
 12392  006150                     l10875:
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;MOTEapp.c: 367: else if(strcmp(modemResonseBuffer, "invalid_param") == 0)
 12396  006150  0E01               	movlw	high _modemResonseBuffer
 12397  006152  0100               	movlb	0	; () banked
 12398  006154  6FC7               	movwf	(strcmp@s1+1)& (0+255),b
 12399  006156  0E80               	movlw	low _modemResonseBuffer
 12400  006158  6FC6               	movwf	strcmp@s1& (0+255),b
 12401  00615A  0E7D               	movlw	high STR_50
 12402  00615C  6FC9               	movwf	(strcmp@s2+1)& (0+255),b
 12403  00615E  0E58               	movlw	low STR_50
 12404  006160  6FC8               	movwf	strcmp@s2& (0+255),b
 12405  006162  EC12  F022         	call	_strcmp	;wreg free
 12406  006166  51C7               	movf	(?_strcmp+1)& (0+255),w,b
 12407  006168  11C6               	iorwf	?_strcmp& (0+255),w,b
 12408  00616A  E107               	bnz	l10881
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;MOTEapp.c: 368: {
 12412                           ;MOTEapp.c: 369: sendCommand("mac join otaa");
 12413  00616C  0E7D               	movlw	high STR_38
 12414  00616E  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 12415  006170  0E4A               	movlw	low STR_38
 12416  006172  6FC7               	movwf	sendCommand@string& (0+255),b
 12417  006174  EC96  F01B         	call	_sendCommand	;wreg free
 12418  006178  D6F8               	goto	l10803
 12419  00617A                     l10881:
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;MOTEapp.c: 372: else if(strcmp(modemResonseBuffer, "no_free_ch") == 0)
 12423  00617A  0E01               	movlw	high _modemResonseBuffer
 12424  00617C  0100               	movlb	0	; () banked
 12425  00617E  6FC7               	movwf	(strcmp@s1+1)& (0+255),b
 12426  006180  0E80               	movlw	low _modemResonseBuffer
 12427  006182  6FC6               	movwf	strcmp@s1& (0+255),b
 12428  006184  0E7E               	movlw	high STR_52
 12429  006186  6FC9               	movwf	(strcmp@s2+1)& (0+255),b
 12430  006188  0EBA               	movlw	low STR_52
 12431  00618A  6FC8               	movwf	strcmp@s2& (0+255),b
 12432  00618C  EC12  F022         	call	_strcmp	;wreg free
 12433  006190  51C7               	movf	(?_strcmp+1)& (0+255),w,b
 12434  006192  11C6               	iorwf	?_strcmp& (0+255),w,b
 12435  006194  E101 D6EC          	bz	l363
 12436  006198  D14C               	goto	l10991
 12437  00619A                     l10885:
 12438                           
 12439                           ; BSR set to: 0
 12440                           ;MOTEapp.c: 379: if ( messageReady )
 12441  00619A  51DB               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12442  00619C  E101 D149          	bz	l10991
 12443                           
 12444                           ; BSR set to: 0
 12445                           ;MOTEapp.c: 380: {
 12446                           ;MOTEapp.c: 381: if(strcmp(modemResonseBuffer, "accepted") == 0)
 12447  0061A0  0E01               	movlw	high _modemResonseBuffer
 12448  0061A2  0100               	movlb	0	; () banked
 12449  0061A4  6FC7               	movwf	(strcmp@s1+1)& (0+255),b
 12450  0061A6  0E80               	movlw	low _modemResonseBuffer
 12451  0061A8  6FC6               	movwf	strcmp@s1& (0+255),b
 12452  0061AA  0E7F               	movlw	high STR_40
 12453  0061AC  6FC9               	movwf	(strcmp@s2+1)& (0+255),b
 12454  0061AE  0E3F               	movlw	low STR_40
 12455  0061B0  6FC8               	movwf	strcmp@s2& (0+255),b
 12456  0061B2  EC12  F022         	call	_strcmp	;wreg free
 12457  0061B6  51C7               	movf	(?_strcmp+1)& (0+255),w,b
 12458  0061B8  11C6               	iorwf	?_strcmp& (0+255),w,b
 12459  0061BA  E11D               	bnz	l10899
 12460                           
 12461                           ; BSR set to: 0
 12462                           ;MOTEapp.c: 382: {
 12463                           ;MOTEapp.c: 383: oled_clear();
 12464  0061BC  EC88  F01A         	call	_oled_clear	;wreg free
 12465                           
 12466                           ; BSR set to: 0
 12467                           ;MOTEapp.c: 384: oled_putString("OTAA Join ",0,0);
 12468  0061C0  0E7E               	movlw	high STR_54
 12469  0061C2  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12470  0061C4  0EAF               	movlw	low STR_54
 12471  0061C6  6FD3               	movwf	oled_putString@string& (0+255),b
 12472  0061C8  0E00               	movlw	0
 12473  0061CA  6BD5               	clrf	oled_putString@station_dot& (0+255),b
 12474  0061CC  6BD6               	clrf	oled_putString@start_page& (0+255),b
 12475  0061CE  EC08  F020         	call	_oled_putString	;wreg free
 12476                           
 12477                           ;MOTEapp.c: 385: oled_putString("Successful",0,1);
 12478  0061D2  0E7E               	movlw	high STR_42
 12479  0061D4  0100               	movlb	0	; () banked
 12480  0061D6  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12481  0061D8  0EC5               	movlw	low STR_42
 12482  0061DA  6FD3               	movwf	oled_putString@string& (0+255),b
 12483  0061DC  6BD5               	clrf	oled_putString@station_dot& (0+255),b
 12484  0061DE  0E01               	movlw	1
 12485  0061E0  6FD6               	movwf	oled_putString@start_page& (0+255),b
 12486  0061E2  EC08  F020         	call	_oled_putString	;wreg free
 12487                           
 12488                           ;MOTEapp.c: 386: moteApp_delayms(500);
 12489  0061E6  0E01               	movlw	1
 12490  0061E8  0100               	movlb	0	; () banked
 12491  0061EA  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12492  0061EC  0EF4               	movlw	244
 12493  0061EE  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 12494  0061F0  EC81  F01B         	call	_moteApp_delayms	;wreg free
 12495  0061F4  D757               	goto	l10847
 12496  0061F6                     l10899:
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;MOTEapp.c: 389: else if(strcmp(modemResonseBuffer, "denied") == 0)
 12500  0061F6  0E01               	movlw	high _modemResonseBuffer
 12501  0061F8  0100               	movlb	0	; () banked
 12502  0061FA  6FC7               	movwf	(strcmp@s1+1)& (0+255),b
 12503  0061FC  0E80               	movlw	low _modemResonseBuffer
 12504  0061FE  6FC6               	movwf	strcmp@s1& (0+255),b
 12505  006200  0E7F               	movlw	high STR_43
 12506  006202  6FC9               	movwf	(strcmp@s2+1)& (0+255),b
 12507  006204  0ECC               	movlw	low STR_43
 12508  006206  6FC8               	movwf	strcmp@s2& (0+255),b
 12509  006208  EC12  F022         	call	_strcmp	;wreg free
 12510  00620C  51C7               	movf	(?_strcmp+1)& (0+255),w,b
 12511  00620E  11C6               	iorwf	?_strcmp& (0+255),w,b
 12512  006210  E125               	bnz	l10913
 12513                           
 12514                           ; BSR set to: 0
 12515                           ;MOTEapp.c: 390: {
 12516                           ;MOTEapp.c: 391: oled_clear();
 12517  006212  EC88  F01A         	call	_oled_clear	;wreg free
 12518                           
 12519                           ; BSR set to: 0
 12520                           ;MOTEapp.c: 392: oled_putString("OTAA Join",1,0);
 12521  006216  0E7F               	movlw	high STR_57
 12522  006218  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12523  00621A  0E0F               	movlw	low STR_57
 12524  00621C  6FD3               	movwf	oled_putString@string& (0+255),b
 12525  00621E  0E01               	movlw	1
 12526  006220  6FD5               	movwf	oled_putString@station_dot& (0+255),b
 12527  006222  0E00               	movlw	0
 12528  006224  6BD6               	clrf	oled_putString@start_page& (0+255),b
 12529  006226  EC08  F020         	call	_oled_putString	;wreg free
 12530                           
 12531                           ;MOTEapp.c: 393: oled_putString("Denied",2,1);
 12532  00622A  0E7F               	movlw	high STR_58
 12533  00622C  0100               	movlb	0	; () banked
 12534  00622E  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12535  006230  0EC5               	movlw	low STR_58
 12536  006232  6FD3               	movwf	oled_putString@string& (0+255),b
 12537  006234  0E02               	movlw	2
 12538  006236  6FD5               	movwf	oled_putString@station_dot& (0+255),b
 12539  006238  0E01               	movlw	1
 12540  00623A  6FD6               	movwf	oled_putString@start_page& (0+255),b
 12541  00623C  EC08  F020         	call	_oled_putString	;wreg free
 12542                           
 12543                           ;MOTEapp.c: 394: sendCommand("mac join otaa");
 12544  006240  0E7D               	movlw	high STR_38
 12545  006242  0100               	movlb	0	; () banked
 12546  006244  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 12547  006246  0E4A               	movlw	low STR_38
 12548  006248  6FC7               	movwf	sendCommand@string& (0+255),b
 12549  00624A  EC96  F01B         	call	_sendCommand	;wreg free
 12550                           
 12551                           ;MOTEapp.c: 395: moteApp_delayms(100);
 12552  00624E  0100               	movlb	0	; () banked
 12553  006250  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12554  006252  0E64               	movlw	100
 12555  006254  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 12556  006256  EC81  F01B         	call	_moteApp_delayms	;wreg free
 12557  00625A  D6EF               	goto	l10829
 12558  00625C                     l10913:
 12559                           
 12560                           ; BSR set to: 0
 12561                           ;MOTEapp.c: 398: else if(strcmp(modemResonseBuffer, "no_free_ch") == 0)
 12562  00625C  0E01               	movlw	high _modemResonseBuffer
 12563  00625E  0100               	movlb	0	; () banked
 12564  006260  6FC7               	movwf	(strcmp@s1+1)& (0+255),b
 12565  006262  0E80               	movlw	low _modemResonseBuffer
 12566  006264  6FC6               	movwf	strcmp@s1& (0+255),b
 12567  006266  0E7E               	movlw	high STR_52
 12568  006268  6FC9               	movwf	(strcmp@s2+1)& (0+255),b
 12569  00626A  0EBA               	movlw	low STR_52
 12570  00626C  6FC8               	movwf	strcmp@s2& (0+255),b
 12571  00626E  EC12  F022         	call	_strcmp	;wreg free
 12572  006272  51C7               	movf	(?_strcmp+1)& (0+255),w,b
 12573  006274  11C6               	iorwf	?_strcmp& (0+255),w,b
 12574  006276  E001 D0DC          	bnz	l10991
 12575                           
 12576                           ; BSR set to: 0
 12577                           ;MOTEapp.c: 399: {
 12578                           ;MOTEapp.c: 400: oled_clear();
 12579  00627A  EC88  F01A         	call	_oled_clear	;wreg free
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;MOTEapp.c: 401: oled_putString("NO FREE",1,0);
 12583  00627E  0E7F               	movlw	high STR_61
 12584  006280  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12585  006282  0E8F               	movlw	low STR_61
 12586  006284  6FD3               	movwf	oled_putString@string& (0+255),b
 12587  006286  0E01               	movlw	1
 12588  006288  6FD5               	movwf	oled_putString@station_dot& (0+255),b
 12589  00628A  0E00               	movlw	0
 12590  00628C  6BD6               	clrf	oled_putString@start_page& (0+255),b
 12591  00628E  EC08  F020         	call	_oled_putString	;wreg free
 12592                           
 12593                           ;MOTEapp.c: 402: oled_putString("CHANNEL",2,1);
 12594  006292  0E7F               	movlw	high STR_62
 12595  006294  0100               	movlb	0	; () banked
 12596  006296  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 12597  006298  0E97               	movlw	low STR_62
 12598  00629A  6FD3               	movwf	oled_putString@string& (0+255),b
 12599  00629C  0E02               	movlw	2
 12600  00629E  6FD5               	movwf	oled_putString@station_dot& (0+255),b
 12601  0062A0  0E01               	movlw	1
 12602  0062A2  6FD6               	movwf	oled_putString@start_page& (0+255),b
 12603  0062A4  EC08  F020         	call	_oled_putString	;wreg free
 12604  0062A8  D663               	goto	l363
 12605  0062AA                     l10923:
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;MOTEapp.c: 408: sendCommand("mac get adr");
 12609  0062AA  0E7E               	movlw	high STR_63
 12610  0062AC  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 12611  0062AE  0E7F               	movlw	low STR_63
 12612  0062B0  6FC7               	movwf	sendCommand@string& (0+255),b
 12613  0062B2  EC96  F01B         	call	_sendCommand	;wreg free
 12614                           
 12615                           ;MOTEapp.c: 409: moteApp_delayms(100);
 12616  0062B6  0100               	movlb	0	; () banked
 12617  0062B8  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12618  0062BA  0E64               	movlw	100
 12619  0062BC  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 12620  0062BE  EC81  F01B         	call	_moteApp_delayms	;wreg free
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;MOTEapp.c: 410: activeState = moteSetAdr;
 12624  0062C2  0E08               	movlw	8
 12625  0062C4  D077               	goto	L67
 12626  0062C6                     l10929:
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;MOTEapp.c: 413: if ( messageReady )
 12630  0062C6  51DB               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12631  0062C8  E101 D0B3          	bz	l10991
 12632                           
 12633                           ; BSR set to: 0
 12634                           ;MOTEapp.c: 414: {
 12635                           ;MOTEapp.c: 415: if(strncmp(modemResonseBuffer, "on", 2) == 0)
 12636  0062CC  0E01               	movlw	high _modemResonseBuffer
 12637  0062CE  0100               	movlb	0	; () banked
 12638  0062D0  6FC7               	movwf	(strncmp@s1+1)& (0+255),b
 12639  0062D2  0E80               	movlw	low _modemResonseBuffer
 12640  0062D4  6FC6               	movwf	strncmp@s1& (0+255),b
 12641  0062D6  0E7D               	movlw	high (STR_242+12)
 12642  0062D8  6FC9               	movwf	(strncmp@s2+1)& (0+255),b
 12643  0062DA  0E0C               	movlw	low (STR_242+12)
 12644  0062DC  6FC8               	movwf	strncmp@s2& (0+255),b
 12645  0062DE  6BCB               	clrf	(strncmp@len+1)& (0+255),b
 12646  0062E0  0E02               	movlw	2
 12647  0062E2  6FCA               	movwf	strncmp@len& (0+255),b
 12648  0062E4  EC70  F020         	call	_strncmp	;wreg free
 12649  0062E8  51C7               	movf	(?_strncmp+1)& (0+255),w,b
 12650  0062EA  11C6               	iorwf	?_strncmp& (0+255),w,b
 12651  0062EC  E10B               	bnz	l10939
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;MOTEapp.c: 416: {
 12655                           ;MOTEapp.c: 417: MOTEapp_SetADR(1);
 12656  0062EE  0E01               	movlw	1
 12657  0062F0  ECF5  F019         	call	_MOTEapp_SetADR
 12658                           
 12659                           ; BSR set to: 0
 12660                           ;MOTEapp.c: 418: sendCommand("mac get dr");
 12661  0062F4  0E7E               	movlw	high STR_65
 12662  0062F6  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 12663  0062F8  0ED0               	movlw	low STR_65
 12664  0062FA  6FC7               	movwf	sendCommand@string& (0+255),b
 12665  0062FC  EC96  F01B         	call	_sendCommand	;wreg free
 12666  006300                     l10937:
 12667                           
 12668                           ;MOTEapp.c: 419: activeState = moteGetDr;
 12669  006300  0E07               	movlw	7
 12670  006302  D634               	goto	L58
 12671  006304                     l10939:
 12672                           
 12673                           ; BSR set to: 0
 12674                           ;MOTEapp.c: 421: else if(strncmp(modemResonseBuffer, "off", 2) == 0)
 12675  006304  0E01               	movlw	high _modemResonseBuffer
 12676  006306  0100               	movlb	0	; () banked
 12677  006308  6FC7               	movwf	(strncmp@s1+1)& (0+255),b
 12678  00630A  0E80               	movlw	low _modemResonseBuffer
 12679  00630C  6FC6               	movwf	strncmp@s1& (0+255),b
 12680  00630E  0E7C               	movlw	high (STR_243+12)
 12681  006310  6FC9               	movwf	(strncmp@s2+1)& (0+255),b
 12682  006312  0E28               	movlw	low (STR_243+12)
 12683  006314  6FC8               	movwf	strncmp@s2& (0+255),b
 12684  006316  6BCB               	clrf	(strncmp@len+1)& (0+255),b
 12685  006318  0E02               	movlw	2
 12686  00631A  6FCA               	movwf	strncmp@len& (0+255),b
 12687  00631C  EC70  F020         	call	_strncmp	;wreg free
 12688  006320  51C7               	movf	(?_strncmp+1)& (0+255),w,b
 12689  006322  11C6               	iorwf	?_strncmp& (0+255),w,b
 12690  006324  E001 D6BE          	bnz	l10847
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;MOTEapp.c: 422: {
 12694                           ;MOTEapp.c: 423: MOTEapp_SetADR(0);
 12695  006328  0E00               	movlw	0
 12696  00632A  ECF5  F019         	call	_MOTEapp_SetADR
 12697                           
 12698                           ; BSR set to: 0
 12699                           ;MOTEapp.c: 424: sendCommand("mac get dr");
 12700  00632E  0E7E               	movlw	high STR_65
 12701  006330  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 12702  006332  0ED0               	movlw	low STR_65
 12703  006334  6FC7               	movwf	sendCommand@string& (0+255),b
 12704  006336  EC96  F01B         	call	_sendCommand	;wreg free
 12705  00633A  D7E2               	goto	l10937
 12706  00633C                     l10949:
 12707                           
 12708                           ; BSR set to: 0
 12709                           ;MOTEapp.c: 434: if ( messageReady )
 12710  00633C  51DB               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12711  00633E  E079               	bz	l10991
 12712                           
 12713                           ; BSR set to: 0
 12714                           ;MOTEapp.c: 435: {
 12715                           ;MOTEapp.c: 436: if(strcmp(modemResonseBuffer, "invalid_param") == 0)
 12716  006340  0E01               	movlw	high _modemResonseBuffer
 12717  006342  0100               	movlb	0	; () banked
 12718  006344  6FC7               	movwf	(strcmp@s1+1)& (0+255),b
 12719  006346  0E80               	movlw	low _modemResonseBuffer
 12720  006348  6FC6               	movwf	strcmp@s1& (0+255),b
 12721  00634A  0E7D               	movlw	high STR_50
 12722  00634C  6FC9               	movwf	(strcmp@s2+1)& (0+255),b
 12723  00634E  0E58               	movlw	low STR_50
 12724  006350  6FC8               	movwf	strcmp@s2& (0+255),b
 12725  006352  EC12  F022         	call	_strcmp	;wreg free
 12726  006356  51C7               	movf	(?_strcmp+1)& (0+255),w,b
 12727  006358  11C6               	iorwf	?_strcmp& (0+255),w,b
 12728  00635A  E107               	bnz	l10957
 12729                           
 12730                           ; BSR set to: 0
 12731                           ;MOTEapp.c: 437: {
 12732                           ;MOTEapp.c: 438: sendCommand("mac get dr");
 12733  00635C  0E7E               	movlw	high STR_65
 12734  00635E  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 12735  006360  0ED0               	movlw	low STR_65
 12736  006362  6FC7               	movwf	sendCommand@string& (0+255),b
 12737  006364  EC96  F01B         	call	_sendCommand	;wreg free
 12738  006368  D7CB               	goto	l10937
 12739  00636A                     l10957:
 12740                           
 12741                           ; BSR set to: 0
 12742                           ;MOTEapp.c: 441: else
 12743                           ;MOTEapp.c: 442: {
 12744                           ;MOTEapp.c: 443: uint8_t readDataRate;
 12745                           ;MOTEapp.c: 444: readDataRate = modemResonseBuffer[0] - '0';
 12746  00636A  0101               	movlb	1	; () banked
 12747  00636C  5180               	movf	_modemResonseBuffer& (0+255),w,b
 12748  00636E  0FD0               	addlw	208
 12749  006370  0100               	movlb	0	; () banked
 12750  006372  6FDA               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 12751                           
 12752                           ; BSR set to: 0
 12753                           ;MOTEapp.c: 445: if (readDataRate > 6)
 12754  006374  0E06               	movlw	6
 12755  006376  65DA               	cpfsgt	moteJoiningProcess@readDataRate& (0+255),b
 12756  006378  D002               	goto	l10963
 12757                           
 12758                           ; BSR set to: 0
 12759                           ;MOTEapp.c: 446: readDataRate = 2;
 12760  00637A  0E02               	movlw	2
 12761  00637C  6FDA               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 12762  00637E                     l10963:
 12763                           
 12764                           ; BSR set to: 0
 12765                           ;MOTEapp.c: 447: MOTEapp_SetDataRate(readDataRate);
 12766  00637E  51DA               	movf	moteJoiningProcess@readDataRate& (0+255),w,b
 12767  006380  ECF9  F019         	call	_MOTEapp_SetDataRate
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;MOTEapp.c: 448: MOTEapp_WriteDataRate();
 12771  006384  EC21  F02A         	call	_MOTEapp_WriteDataRate	;wreg free
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;MOTEapp.c: 449: activeState = moteSetDr;
 12775  006388  0E09               	movlw	9
 12776  00638A  D014               	goto	L67
 12777  00638C                     l10969:
 12778                           
 12779                           ; BSR set to: 0
 12780                           ;MOTEapp.c: 454: if ( messageReady )
 12781  00638C  51DB               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12782  00638E  E051               	bz	l10991
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;MOTEapp.c: 455: {
 12786                           ;MOTEapp.c: 456: if(strncmp(modemResonseBuffer, "ok", 2) == 0)
 12787  006390  0E01               	movlw	high _modemResonseBuffer
 12788  006392  0100               	movlb	0	; () banked
 12789  006394  6FC7               	movwf	(strncmp@s1+1)& (0+255),b
 12790  006396  0E80               	movlw	low _modemResonseBuffer
 12791  006398  6FC6               	movwf	strncmp@s1& (0+255),b
 12792  00639A  0E7F               	movlw	high STR_32
 12793  00639C  6FC9               	movwf	(strncmp@s2+1)& (0+255),b
 12794  00639E  0EF2               	movlw	low STR_32
 12795  0063A0  6FC8               	movwf	strncmp@s2& (0+255),b
 12796  0063A2  6BCB               	clrf	(strncmp@len+1)& (0+255),b
 12797  0063A4  0E02               	movlw	2
 12798  0063A6  6FCA               	movwf	strncmp@len& (0+255),b
 12799  0063A8  EC70  F020         	call	_strncmp	;wreg free
 12800  0063AC  51C7               	movf	(?_strncmp+1)& (0+255),w,b
 12801  0063AE  11C6               	iorwf	?_strncmp& (0+255),w,b
 12802  0063B0  E103               	bnz	l10975
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;MOTEapp.c: 457: {
 12806                           ;MOTEapp.c: 458: activeState = moteDoneDr;
 12807  0063B2  0E0A               	movlw	10
 12808  0063B4                     L67:
 12809  0063B4  6F8A               	movwf	_activeState& (0+255),b
 12810                           
 12811                           ;MOTEapp.c: 459: }
 12812  0063B6  D03D               	goto	l10991
 12813  0063B8                     l10975:
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;MOTEapp.c: 460: else
 12817                           ;MOTEapp.c: 461: {
 12818                           ;MOTEapp.c: 462: sendCommand("mac get dr");
 12819  0063B8  0E7E               	movlw	high STR_65
 12820  0063BA  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 12821  0063BC  0ED0               	movlw	low STR_65
 12822  0063BE  6FC7               	movwf	sendCommand@string& (0+255),b
 12823  0063C0  EC96  F01B         	call	_sendCommand	;wreg free
 12824  0063C4  D79D               	goto	l10937
 12825  0063C6                     l10979:
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;MOTEapp.c: 468: joiningComplete = 1;
 12829  0063C6  0E01               	movlw	1
 12830  0063C8  6FD9               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 12831                           
 12832                           ;MOTEapp.c: 469: break;
 12833  0063CA  D033               	goto	l10991
 12834  0063CC                     l10981:
 12835                           
 12836                           ; BSR set to: 0
 12837                           ;MOTEapp.c: 474: DATAEE_WriteByte(0x00, 0x00);
 12838  0063CC  0E00               	movlw	0
 12839  0063CE  6BC6               	clrf	DATAEE_WriteByte@bData& (0+255),b
 12840  0063D0  EC94  F01C         	call	_DATAEE_WriteByte
 12841  0063D4                     l412:
 12842  0063D4  B082               	btfsc	3970,0,c	;volatile
 12843  0063D6  D002               	goto	l10985
 12844  0063D8  A282               	btfss	3970,1,c	;volatile
 12845  0063DA  D7FC               	goto	l412
 12846  0063DC                     l10985:
 12847                           
 12848                           ;MOTEapp.c: 476: moteApp_delayms(40);
 12849  0063DC  0100               	movlb	0	; () banked
 12850  0063DE  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12851  0063E0  0E28               	movlw	40
 12852  0063E2  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 12853  0063E4  EC81  F01B         	call	_moteApp_delayms	;wreg free
 12854  0063E8  00FF               	reset		;# 
 12855                           
 12856                           ;MOTEapp.c: 479: break;
 12857  0063EA  D023               	goto	l10991
 12858  0063EC                     l10989:
 12859                           
 12860                           ; BSR set to: 0
 12861  0063EC  518A               	movf	_activeState& (0+255),w,b
 12862                           
 12863                           ; Switch size 1, requested type "speed"
 12864                           ; Number of cases is 13, Range of values is 0 to 12
 12865                           ; switch strategies available:
 12866                           ; Name         Instructions Cycles
 12867                           ; simple_byte           40    21 (average)
 12868                           ;	Chosen strategy is simple_byte
 12869  0063EE  E101 D58E          	bz	l10789
 12870  0063F2  0A01               	xorlw	1	; case 1
 12871  0063F4  E101 D599          	bz	l10795
 12872  0063F8  0A03               	xorlw	3	; case 2
 12873  0063FA  E101 D5BC          	bz	l10805
 12874  0063FE  0A01               	xorlw	1	; case 3
 12875  006400  E101 D624          	bz	l10835
 12876  006404  0A07               	xorlw	7	; case 4
 12877  006406  E101 D66B          	bz	l10859
 12878  00640A  0A01               	xorlw	1	; case 5
 12879  00640C  E101 D6C5          	bz	l10885
 12880  006410  0A03               	xorlw	3	; case 6
 12881  006412  E101 D74A          	bz	l10923
 12882  006416  0A01               	xorlw	1	; case 7
 12883  006418  E091               	bz	l10949
 12884  00641A  0A0F               	xorlw	15	; case 8
 12885  00641C  E101 D753          	bz	l10929
 12886  006420  0A01               	xorlw	1	; case 9
 12887  006422  E0B4               	bz	l10969
 12888  006424  0A03               	xorlw	3	; case 10
 12889  006426  E0CF               	bz	l10979
 12890  006428  0A01               	xorlw	1	; case 11
 12891  00642A  E003               	bz	l10991
 12892  00642C  0A07               	xorlw	7	; case 12
 12893  00642E  E0CE               	bz	l10981
 12894  006430  D56D               	goto	l356
 12895  006432                     l10991:
 12896                           
 12897                           ;MOTEapp.c: 481: return joiningComplete;
 12898  006432  0100               	movlb	0	; () banked
 12899  006434  51D9               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 12900                           
 12901                           ; BSR set to: 0
 12902  006436  0012               	return	
 12903  006438                     __end_of_moteJoiningProcess:
 12904                           	opt stack 0
 12905                           tblptru	equ	0xFF8
 12906                           tblptrh	equ	0xFF7
 12907                           tblptrl	equ	0xFF6
 12908                           tablat	equ	0xFF5
 12909                           prodl	equ	0xFF3
 12910                           intcon	equ	0xFF2
 12911                           postinc0	equ	0xFEE
 12912                           wreg	equ	0xFE8
 12913                           postdec1	equ	0xFE5
 12914                           fsr1l	equ	0xFE1
 12915                           indf2	equ	0xFDF
 12916                           fsr2h	equ	0xFDA
 12917                           fsr2l	equ	0xFD9
 12918                           status	equ	0xFD8
 12919                           
 12920 ;; *************** function _strncmp *****************
 12921 ;; Defined at:
 12922 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\strncmp.c"
 12923 ;; Parameters:    Size  Location     Type
 12924 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 12925 ;;		 -> modemResonseBuffer(64), 
 12926 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 12927 ;;		 -> STR_219(7), STR_217(7), STR_215(7), STR_212(7), 
 12928 ;;		 -> STR_70(3), STR_66(4), STR_64(3), STR_30(3), 
 12929 ;;  len             2    4[BANK0 ] unsigned int 
 12930 ;; Auto vars:     Size  Location     Type
 12931 ;;		None
 12932 ;; Return value:  Size  Location     Type
 12933 ;;                  2    0[BANK0 ] int 
 12934 ;; Registers used:
 12935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12936 ;; Tracked objects:
 12937 ;;		On entry : F/0
 12938 ;;		On exit  : F/0
 12939 ;;		Unchanged: 0/0
 12940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12941 ;;      Params:         0       6       0       0       0       0       0       0       0
 12942 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12943 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12944 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12945 ;;Total ram usage:        7 bytes
 12946 ;; Hardware stack levels used:    1
 12947 ;; Hardware stack levels required when called:   11
 12948 ;; This function calls:
 12949 ;;		Nothing
 12950 ;; This function is called by:
 12951 ;;		_moteJoiningProcess
 12952 ;;		_moteRunningProcess
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956                           	psect	text36
 12957  0040E0                     __ptext36:
 12958                           	opt stack 0
 12959  0040E0                     _strncmp:
 12960                           	opt stack 17
 12961                           
 12962                           ; BSR set to: 0
 12963                           
 12964                           ; BSR set to: 0
 12965                           ;incstack = 0
 12966  0040E0  D02A               	goto	l10249
 12967  0040E2                     l10239:
 12968                           
 12969                           ; BSR set to: 0
 12970  0040E2  C0C6  FFD9         	movff	strncmp@s1,fsr2l
 12971  0040E6  C0C7  FFDA         	movff	strncmp@s1+1,fsr2h
 12972  0040EA  50DF               	movf	indf2,w,c
 12973  0040EC  E00E               	bz	l10243
 12974                           
 12975                           ; BSR set to: 0
 12976  0040EE  C0C8  FFF6         	movff	strncmp@s2,tblptrl
 12977  0040F2  C0C9  FFF7         	movff	strncmp@s2+1,tblptrh
 12978  0040F6                     	if	0	;tblptru may be non-zero
 12979  0040F6                     	endif
 12980  0040F6                     	if	0	;tblptru may be non-zero
 12981  0040F6                     	endif
 12982  0040F6  0008               	tblrd		*
 12983  0040F8  CFF5 F0CC          	movff	tablat,??_strncmp
 12984  0040FC  C0C6  FFD9         	movff	strncmp@s1,fsr2l
 12985  004100  C0C7  FFDA         	movff	strncmp@s1+1,fsr2h
 12986  004104  50DF               	movf	indf2,w,c
 12987  004106  19CC               	xorwf	??_strncmp& (0+255),w,b
 12988  004108  E012               	bz	l10247
 12989  00410A                     l10243:
 12990                           
 12991                           ; BSR set to: 0
 12992  00410A  C0C6  FFD9         	movff	strncmp@s1,fsr2l
 12993  00410E  C0C7  FFDA         	movff	strncmp@s1+1,fsr2h
 12994  004112  50DF               	movf	indf2,w,c
 12995  004114  6FCC               	movwf	??_strncmp& (0+255),b
 12996  004116  C0C8  FFF6         	movff	strncmp@s2,tblptrl
 12997  00411A  C0C9  FFF7         	movff	strncmp@s2+1,tblptrh
 12998  00411E                     	if	0	;tblptru may be non-zero
 12999  00411E                     	endif
 13000  00411E                     	if	0	;tblptru may be non-zero
 13001  00411E                     	endif
 13002  00411E  0008               	tblrd		*
 13003  004120  50F5               	movf	tablat,w,c
 13004  004122  5DCC               	subwf	??_strncmp& (0+255),w,b
 13005  004124  6FC6               	movwf	?_strncmp& (0+255),b
 13006  004126  6BC7               	clrf	(?_strncmp+1)& (0+255),b
 13007  004128  A0D8               	btfss	status,0,c
 13008  00412A  07C7               	decf	(?_strncmp+1)& (0+255),f,b
 13009  00412C  0012               	return	
 13010  00412E                     l10247:
 13011                           
 13012                           ; BSR set to: 0
 13013  00412E  4BC6               	infsnz	strncmp@s1& (0+255),f,b
 13014  004130  2BC7               	incf	(strncmp@s1+1)& (0+255),f,b
 13015  004132  4BC8               	infsnz	strncmp@s2& (0+255),f,b
 13016  004134  2BC9               	incf	(strncmp@s2+1)& (0+255),f,b
 13017  004136                     l10249:
 13018                           
 13019                           ; BSR set to: 0
 13020  004136  07CA               	decf	strncmp@len& (0+255),f,b
 13021  004138  A0D8               	btfss	status,0,c
 13022  00413A  07CB               	decf	(strncmp@len+1)& (0+255),f,b
 13023  00413C  0100               	movlb	0	; () banked
 13024  00413E  29CA               	incf	strncmp@len& (0+255),w,b
 13025  004140  B4D8               	btfsc	status,2,c
 13026  004142  29CB               	incf	(strncmp@len+1)& (0+255),w,b
 13027  004144  E1CE               	bnz	l10239
 13028                           
 13029                           ; BSR set to: 0
 13030  004146  6BC6               	clrf	?_strncmp& (0+255),b
 13031  004148  6BC7               	clrf	(?_strncmp+1)& (0+255),b
 13032                           
 13033                           ; BSR set to: 0
 13034  00414A  0012               	return	
 13035  00414C                     __end_of_strncmp:
 13036                           	opt stack 0
 13037                           tblptru	equ	0xFF8
 13038                           tblptrh	equ	0xFF7
 13039                           tblptrl	equ	0xFF6
 13040                           tablat	equ	0xFF5
 13041                           prodl	equ	0xFF3
 13042                           intcon	equ	0xFF2
 13043                           postinc0	equ	0xFEE
 13044                           wreg	equ	0xFE8
 13045                           postdec1	equ	0xFE5
 13046                           fsr1l	equ	0xFE1
 13047                           indf2	equ	0xFDF
 13048                           fsr2h	equ	0xFDA
 13049                           fsr2l	equ	0xFD9
 13050                           status	equ	0xFD8
 13051                           
 13052 ;; *************** function _strcmp *****************
 13053 ;; Defined at:
 13054 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\strcmp.c"
 13055 ;; Parameters:    Size  Location     Type
 13056 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 13057 ;;		 -> modemResonseBuffer(64), 
 13058 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 13059 ;;		 -> STR_211(3), STR_68(14), STR_60(11), STR_56(7), 
 13060 ;;		 -> STR_53(9), STR_52(11), STR_50(14), STR_47(14), 
 13061 ;;		 -> STR_46(3), STR_43(7), STR_40(9), STR_33(14), 
 13062 ;;		 -> STR_32(3), 
 13063 ;; Auto vars:     Size  Location     Type
 13064 ;;  t1              1    8[BANK0 ] unsigned char 
 13065 ;;  t2              1    7[BANK0 ] unsigned char 
 13066 ;;  t0              1    6[BANK0 ] unsigned char 
 13067 ;; Return value:  Size  Location     Type
 13068 ;;                  2    0[BANK0 ] int 
 13069 ;; Registers used:
 13070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13071 ;; Tracked objects:
 13072 ;;		On entry : F/0
 13073 ;;		On exit  : F/0
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13076 ;;      Params:         0       4       0       0       0       0       0       0       0
 13077 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13078 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13079 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13080 ;;Total ram usage:        9 bytes
 13081 ;; Hardware stack levels used:    1
 13082 ;; Hardware stack levels required when called:   11
 13083 ;; This function calls:
 13084 ;;		Nothing
 13085 ;; This function is called by:
 13086 ;;		_moteJoiningProcess
 13087 ;;		_moteRunningProcess
 13088 ;; This function uses a non-reentrant model
 13089 ;;
 13090                           
 13091                           	psect	text37
 13092  004424                     __ptext37:
 13093                           	opt stack 0
 13094  004424                     _strcmp:
 13095                           	opt stack 17
 13096  004424                     l7303:
 13097                           
 13098                           ; BSR set to: 0
 13099  004424  C0C6  FFD9         	movff	strcmp@s1,fsr2l
 13100  004428  C0C7  FFDA         	movff	strcmp@s1+1,fsr2h
 13101  00442C  50DF               	movf	indf2,w,c
 13102  00442E  6FCC               	movwf	strcmp@t0& (0+255),b
 13103                           
 13104                           ; BSR set to: 0
 13105  004430  C0C8  FFF6         	movff	strcmp@s2,tblptrl
 13106  004434  C0C9  FFF7         	movff	strcmp@s2+1,tblptrh
 13107  004438                     	if	0	;tblptru may be non-zero
 13108  004438                     	endif
 13109  004438                     	if	0	;tblptru may be non-zero
 13110  004438                     	endif
 13111  004438  0008               	tblrd		*
 13112  00443A  CFF5 F0CE          	movff	tablat,strcmp@t1
 13113                           
 13114                           ; BSR set to: 0
 13115  00443E  67CC               	tstfsz	strcmp@t0& (0+255),b
 13116  004440  D001               	goto	l7311
 13117  004442  D02C               	goto	l7337
 13118  004444                     l7311:
 13119                           
 13120                           ; BSR set to: 0
 13121  004444  0E02               	movlw	2
 13122  004446  27C6               	addwf	strcmp@s1& (0+255),f,b
 13123  004448  0E00               	movlw	0
 13124  00444A  23C7               	addwfc	(strcmp@s1+1)& (0+255),f,b
 13125                           
 13126                           ; BSR set to: 0
 13127  00444C  51CC               	movf	strcmp@t0& (0+255),w,b
 13128  00444E  19CE               	xorwf	strcmp@t1& (0+255),w,b
 13129  004450  E125               	bnz	l7337
 13130                           
 13131                           ; BSR set to: 0
 13132  004452  EE2F F0FF          	lfsr	2,-1
 13133  004456  51C6               	movf	strcmp@s1& (0+255),w,b
 13134  004458  26D9               	addwf	fsr2l,f,c
 13135  00445A  51C7               	movf	(strcmp@s1+1)& (0+255),w,b
 13136  00445C  22DA               	addwfc	fsr2h,f,c
 13137  00445E  50DF               	movf	indf2,w,c
 13138  004460  6FCD               	movwf	strcmp@t2& (0+255),b
 13139                           
 13140                           ; BSR set to: 0
 13141  004462  29C8               	incf	strcmp@s2& (0+255),w,b
 13142  004464  6FCA               	movwf	??_strcmp& (0+255),b
 13143  004466  0E00               	movlw	0
 13144  004468  21C9               	addwfc	(strcmp@s2+1)& (0+255),w,b
 13145  00446A  6FCB               	movwf	(??_strcmp+1)& (0+255),b
 13146  00446C  C0CA  FFF6         	movff	??_strcmp,tblptrl
 13147  004470  C0CB  FFF7         	movff	??_strcmp+1,tblptrh
 13148  004474                     	if	0	;tblptru may be non-zero
 13149  004474                     	endif
 13150  004474                     	if	0	;tblptru may be non-zero
 13151  004474                     	endif
 13152  004474  0008               	tblrd		*
 13153  004476  CFF5 F0CE          	movff	tablat,strcmp@t1
 13154                           
 13155                           ; BSR set to: 0
 13156  00447A  67CD               	tstfsz	strcmp@t2& (0+255),b
 13157  00447C  D007               	goto	l7327
 13158  00447E                     l7323:
 13159                           
 13160                           ; BSR set to: 0
 13161  00447E  51CE               	movf	strcmp@t1& (0+255),w,b
 13162  004480  5DCD               	subwf	strcmp@t2& (0+255),w,b
 13163  004482  6FC6               	movwf	?_strcmp& (0+255),b
 13164  004484  6BC7               	clrf	(?_strcmp+1)& (0+255),b
 13165  004486  A0D8               	btfss	status,0,c
 13166  004488  07C7               	decf	(?_strcmp+1)& (0+255),f,b
 13167  00448A  0012               	return	
 13168  00448C                     l7327:
 13169                           
 13170                           ; BSR set to: 0
 13171  00448C  0E02               	movlw	2
 13172  00448E  27C8               	addwf	strcmp@s2& (0+255),f,b
 13173  004490  0E00               	movlw	0
 13174  004492  23C9               	addwfc	(strcmp@s2+1)& (0+255),f,b
 13175                           
 13176                           ; BSR set to: 0
 13177  004494  51CE               	movf	strcmp@t1& (0+255),w,b
 13178  004496  19CD               	xorwf	strcmp@t2& (0+255),w,b
 13179  004498  E1F2               	bnz	l7323
 13180  00449A  D7C4               	goto	l7303
 13181  00449C                     l7337:
 13182                           
 13183                           ; BSR set to: 0
 13184  00449C  51CE               	movf	strcmp@t1& (0+255),w,b
 13185  00449E  5DCC               	subwf	strcmp@t0& (0+255),w,b
 13186  0044A0  6FC6               	movwf	?_strcmp& (0+255),b
 13187  0044A2  6BC7               	clrf	(?_strcmp+1)& (0+255),b
 13188  0044A4  A0D8               	btfss	status,0,c
 13189  0044A6  07C7               	decf	(?_strcmp+1)& (0+255),f,b
 13190                           
 13191                           ; BSR set to: 0
 13192  0044A8  0012               	return	
 13193  0044AA                     __end_of_strcmp:
 13194                           	opt stack 0
 13195                           tblptru	equ	0xFF8
 13196                           tblptrh	equ	0xFF7
 13197                           tblptrl	equ	0xFF6
 13198                           tablat	equ	0xFF5
 13199                           prodl	equ	0xFF3
 13200                           intcon	equ	0xFF2
 13201                           postinc0	equ	0xFEE
 13202                           wreg	equ	0xFE8
 13203                           postdec1	equ	0xFE5
 13204                           fsr1l	equ	0xFE1
 13205                           indf2	equ	0xFDF
 13206                           fsr2h	equ	0xFDA
 13207                           fsr2l	equ	0xFD9
 13208                           status	equ	0xFD8
 13209                           
 13210 ;; *************** function _MOTEapp_WriteDataRate *****************
 13211 ;; Defined at:
 13212 ;;		line 1102 in file "../Includes/Board/MOTEapp.c"
 13213 ;; Parameters:    Size  Location     Type
 13214 ;;		None
 13215 ;; Auto vars:     Size  Location     Type
 13216 ;;		None
 13217 ;; Return value:  Size  Location     Type
 13218 ;;		None               void
 13219 ;; Registers used:
 13220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13221 ;; Tracked objects:
 13222 ;;		On entry : F/0
 13223 ;;		On exit  : F/0
 13224 ;;		Unchanged: 0/0
 13225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13226 ;;      Params:         0       0       0       0       0       0       0       0       0
 13227 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13228 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13229 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13230 ;;Total ram usage:        0 bytes
 13231 ;; Hardware stack levels used:    1
 13232 ;; Hardware stack levels required when called:   14
 13233 ;; This function calls:
 13234 ;;		_moteApp_delayms
 13235 ;;		_sendCommand
 13236 ;; This function is called by:
 13237 ;;		_moteJoiningProcess
 13238 ;;		_moteRunningProcess
 13239 ;; This function uses a non-reentrant model
 13240 ;;
 13241                           
 13242                           	psect	text38
 13243  005442                     __ptext38:
 13244                           	opt stack 0
 13245  005442                     _MOTEapp_WriteDataRate:
 13246                           	opt stack 14
 13247                           
 13248                           ; BSR set to: 0
 13249                           ;MOTEapp.c: 1105: moteApp_delayms(100);
 13250                           
 13251                           ; BSR set to: 0
 13252                           ;incstack = 0
 13253  005442  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 13254  005444  0E64               	movlw	100
 13255  005446  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 13256  005448  EC81  F01B         	call	_moteApp_delayms	;wreg free
 13257                           
 13258                           ; BSR set to: 0
 13259                           ;MOTEapp.c: 1107: if (adrStatus)
 13260  00544C  518B               	movf	_adrStatus& (0+255),w,b
 13261  00544E  E00D               	bz	l10263
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;MOTEapp.c: 1108: {
 13265                           ;MOTEapp.c: 1109: sendCommand("mac set adr on");
 13266  005450  0E7D               	movlw	high STR_242
 13267  005452  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 13268  005454  0E00               	movlw	low STR_242
 13269  005456  6FC7               	movwf	sendCommand@string& (0+255),b
 13270  005458  EC96  F01B         	call	_sendCommand	;wreg free
 13271  00545C                     l10261:
 13272                           
 13273                           ;MOTEapp.c: 1110: moteApp_delayms(100);
 13274  00545C  0100               	movlb	0	; () banked
 13275  00545E  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 13276  005460  0E64               	movlw	100
 13277  005462  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 13278  005464  EC81  F01B         	call	_moteApp_delayms	;wreg free
 13279                           
 13280                           ;MOTEapp.c: 1111: }
 13281  005468  D03F               	goto	l10285
 13282  00546A                     l10263:
 13283                           
 13284                           ; BSR set to: 0
 13285                           ;MOTEapp.c: 1112: else
 13286                           ;MOTEapp.c: 1113: {
 13287                           ;MOTEapp.c: 1114: sendCommand("mac set adr off");
 13288  00546A  0E7C               	movlw	high STR_243
 13289  00546C  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 13290  00546E  0E1C               	movlw	low STR_243
 13291  005470  6FC7               	movwf	sendCommand@string& (0+255),b
 13292  005472  EC96  F01B         	call	_sendCommand	;wreg free
 13293  005476  D7F2               	goto	l10261
 13294  005478                     l10267:
 13295                           
 13296                           ; BSR set to: 0
 13297                           ;MOTEapp.c: 1121: sendCommand("mac set dr 0");
 13298  005478  0E7D               	movlw	high STR_244
 13299  00547A  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 13300  00547C  0E8E               	movlw	low STR_244
 13301  00547E  6FC7               	movwf	sendCommand@string& (0+255),b
 13302  005480  EC96  F01B         	call	_sendCommand	;wreg free
 13303                           
 13304                           ;MOTEapp.c: 1122: break;
 13305  005484  D041               	goto	l10287
 13306  005486                     l10269:
 13307                           
 13308                           ; BSR set to: 0
 13309                           ;MOTEapp.c: 1124: sendCommand("mac set dr 1");
 13310  005486  0E7D               	movlw	high STR_245
 13311  005488  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 13312  00548A  0E9B               	movlw	low STR_245
 13313  00548C  6FC7               	movwf	sendCommand@string& (0+255),b
 13314  00548E  EC96  F01B         	call	_sendCommand	;wreg free
 13315                           
 13316                           ;MOTEapp.c: 1125: break;
 13317  005492  D03A               	goto	l10287
 13318  005494                     l10271:
 13319                           
 13320                           ; BSR set to: 0
 13321                           ;MOTEapp.c: 1127: sendCommand("mac set dr 2");
 13322  005494  0E7D               	movlw	high STR_246
 13323  005496  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 13324  005498  0EA8               	movlw	low STR_246
 13325  00549A  6FC7               	movwf	sendCommand@string& (0+255),b
 13326  00549C  EC96  F01B         	call	_sendCommand	;wreg free
 13327                           
 13328                           ;MOTEapp.c: 1128: break;
 13329  0054A0  D033               	goto	l10287
 13330  0054A2                     l10273:
 13331                           
 13332                           ; BSR set to: 0
 13333                           ;MOTEapp.c: 1130: sendCommand("mac set dr 3");
 13334  0054A2  0E7D               	movlw	high STR_247
 13335  0054A4  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 13336  0054A6  0EB5               	movlw	low STR_247
 13337  0054A8  6FC7               	movwf	sendCommand@string& (0+255),b
 13338  0054AA  EC96  F01B         	call	_sendCommand	;wreg free
 13339                           
 13340                           ;MOTEapp.c: 1131: break;
 13341  0054AE  D02C               	goto	l10287
 13342  0054B0                     l10275:
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;MOTEapp.c: 1133: sendCommand("mac set dr 4");
 13346  0054B0  0E7D               	movlw	high STR_248
 13347  0054B2  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 13348  0054B4  0EC2               	movlw	low STR_248
 13349  0054B6  6FC7               	movwf	sendCommand@string& (0+255),b
 13350  0054B8  EC96  F01B         	call	_sendCommand	;wreg free
 13351                           
 13352                           ;MOTEapp.c: 1134: break;
 13353  0054BC  D025               	goto	l10287
 13354  0054BE                     l10277:
 13355                           
 13356                           ; BSR set to: 0
 13357                           ;MOTEapp.c: 1136: sendCommand("mac set dr 5");
 13358  0054BE  0E7D               	movlw	high STR_249
 13359  0054C0  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 13360  0054C2  0ECF               	movlw	low STR_249
 13361  0054C4  6FC7               	movwf	sendCommand@string& (0+255),b
 13362  0054C6  EC96  F01B         	call	_sendCommand	;wreg free
 13363                           
 13364                           ;MOTEapp.c: 1137: break;
 13365  0054CA  D01E               	goto	l10287
 13366  0054CC                     l10279:
 13367                           
 13368                           ; BSR set to: 0
 13369                           ;MOTEapp.c: 1139: sendCommand("mac set dr 6");
 13370  0054CC  0E7D               	movlw	high STR_250
 13371  0054CE  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 13372  0054D0  0EDC               	movlw	low STR_250
 13373  0054D2  6FC7               	movwf	sendCommand@string& (0+255),b
 13374  0054D4  EC96  F01B         	call	_sendCommand	;wreg free
 13375                           
 13376                           ;MOTEapp.c: 1140: break;
 13377  0054D8  D017               	goto	l10287
 13378  0054DA                     l10281:
 13379                           
 13380                           ; BSR set to: 0
 13381                           ;MOTEapp.c: 1142: sendCommand("mac set dr 7");
 13382  0054DA  0E7D               	movlw	high STR_251
 13383  0054DC  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 13384  0054DE  0EE9               	movlw	low STR_251
 13385  0054E0  6FC7               	movwf	sendCommand@string& (0+255),b
 13386  0054E2  EC96  F01B         	call	_sendCommand	;wreg free
 13387                           
 13388                           ;MOTEapp.c: 1143: break;
 13389  0054E6  D010               	goto	l10287
 13390  0054E8                     l10285:
 13391                           
 13392                           ; BSR set to: 0
 13393  0054E8  51FA               	movf	_dataRateSelection& (0+255),w,b
 13394                           
 13395                           ; Switch size 1, requested type "speed"
 13396                           ; Number of cases is 8, Range of values is 0 to 7
 13397                           ; switch strategies available:
 13398                           ; Name         Instructions Cycles
 13399                           ; simple_byte           25    13 (average)
 13400                           ;	Chosen strategy is simple_byte
 13401  0054EA  E0C6               	bz	l10267
 13402  0054EC  0A01               	xorlw	1	; case 1
 13403  0054EE  E0CB               	bz	l10269
 13404  0054F0  0A03               	xorlw	3	; case 2
 13405  0054F2  E0D0               	bz	l10271
 13406  0054F4  0A01               	xorlw	1	; case 3
 13407  0054F6  E0D5               	bz	l10273
 13408  0054F8  0A07               	xorlw	7	; case 4
 13409  0054FA  E0DA               	bz	l10275
 13410  0054FC  0A01               	xorlw	1	; case 5
 13411  0054FE  E0DF               	bz	l10277
 13412  005500  0A03               	xorlw	3	; case 6
 13413  005502  E0E4               	bz	l10279
 13414  005504  0A01               	xorlw	1	; case 7
 13415  005506  E0E9               	bz	l10281
 13416  005508                     l10287:
 13417                           
 13418                           ;MOTEapp.c: 1148: moteApp_delayms(100);
 13419  005508  0100               	movlb	0	; () banked
 13420  00550A  6BC7               	clrf	(moteApp_delayms@length+1)& (0+255),b
 13421  00550C  0E64               	movlw	100
 13422  00550E  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 13423  005510  EC81  F01B         	call	_moteApp_delayms	;wreg free
 13424                           
 13425                           ; BSR set to: 0
 13426                           ;MOTEapp.c: 1149: sendCommand("mac save");
 13427  005514  0E7F               	movlw	high STR_252
 13428  005516  6FC8               	movwf	(sendCommand@string+1)& (0+255),b
 13429  005518  0E48               	movlw	low STR_252
 13430  00551A  6FC7               	movwf	sendCommand@string& (0+255),b
 13431  00551C  EC96  F01B         	call	_sendCommand	;wreg free
 13432                           
 13433                           ;MOTEapp.c: 1150: moteApp_delayms(300);
 13434  005520  0E01               	movlw	1
 13435  005522  0100               	movlb	0	; () banked
 13436  005524  6FC7               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13437  005526  0E2C               	movlw	44
 13438  005528  6FC6               	movwf	moteApp_delayms@length& (0+255),b
 13439  00552A  EF81  F01B         	goto	_moteApp_delayms	;wreg free
 13440  00552E                     __end_of_MOTEapp_WriteDataRate:
 13441                           	opt stack 0
 13442                           tblptru	equ	0xFF8
 13443                           tblptrh	equ	0xFF7
 13444                           tblptrl	equ	0xFF6
 13445                           tablat	equ	0xFF5
 13446                           prodl	equ	0xFF3
 13447                           intcon	equ	0xFF2
 13448                           postinc0	equ	0xFEE
 13449                           wreg	equ	0xFE8
 13450                           postdec1	equ	0xFE5
 13451                           fsr1l	equ	0xFE1
 13452                           indf2	equ	0xFDF
 13453                           fsr2h	equ	0xFDA
 13454                           fsr2l	equ	0xFD9
 13455                           status	equ	0xFD8
 13456                           
 13457 ;; *************** function _sendCommand *****************
 13458 ;; Defined at:
 13459 ;;		line 1231 in file "../Includes/Board/MOTEapp.c"
 13460 ;; Parameters:    Size  Location     Type
 13461 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 13462 ;;		 -> STR_257(26), STR_256(26), STR_255(26), STR_254(26), 
 13463 ;;		 -> STR_253(1), STR_252(9), STR_251(13), STR_250(13), 
 13464 ;;		 -> STR_249(13), STR_248(13), STR_247(13), STR_246(13), 
 13465 ;;		 -> STR_245(13), STR_244(13), STR_243(16), STR_242(15), 
 13466 ;;		 -> STR_71(11), STR_69(11), STR_67(11), STR_65(11), 
 13467 ;;		 -> STR_63(12), STR_59(14), STR_51(14), STR_45(10), 
 13468 ;;		 -> STR_44(13), STR_39(13), STR_38(14), STR_31(13), 
 13469 ;;		 -> STR_29(12), STR_22(20), STR_21(2), 
 13470 ;; Auto vars:     Size  Location     Type
 13471 ;;		None
 13472 ;; Return value:  Size  Location     Type
 13473 ;;		None               void
 13474 ;; Registers used:
 13475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13476 ;; Tracked objects:
 13477 ;;		On entry : F/0
 13478 ;;		On exit  : 0/0
 13479 ;;		Unchanged: 0/0
 13480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13481 ;;      Params:         0       2       0       0       0       0       0       0       0
 13482 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13483 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13484 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13485 ;;Total ram usage:        2 bytes
 13486 ;; Hardware stack levels used:    1
 13487 ;; Hardware stack levels required when called:   13
 13488 ;; This function calls:
 13489 ;;		_EUSART_Write
 13490 ;;		_EndLine
 13491 ;; This function is called by:
 13492 ;;		_modemResync
 13493 ;;		_modemSleep
 13494 ;;		_moteJoiningProcess
 13495 ;;		_MOTEapp_WriteDataRate
 13496 ;;		_moteApp_toggleLeds
 13497 ;; This function uses a non-reentrant model
 13498 ;;
 13499                           
 13500                           	psect	text39
 13501  00372C                     __ptext39:
 13502                           	opt stack 0
 13503  00372C                     _sendCommand:
 13504                           	opt stack 14
 13505                           
 13506                           ; BSR set to: 0
 13507                           ;MOTEapp.c: 1234: while (*string)
 13508                           
 13509                           ; BSR set to: 0
 13510                           ;incstack = 0
 13511  00372C  D00B               	goto	l9843
 13512  00372E                     l9839:
 13513                           
 13514                           ; BSR set to: 0
 13515                           ;MOTEapp.c: 1235: {
 13516                           ;MOTEapp.c: 1236: EUSART_Write(*string++);
 13517  00372E  C0C7  FFF6         	movff	sendCommand@string,tblptrl
 13518  003732  C0C8  FFF7         	movff	sendCommand@string+1,tblptrh
 13519  003736                     	if	0	;tblptru may be non-zero
 13520  003736                     	endif
 13521  003736                     	if	0	;tblptru may be non-zero
 13522  003736                     	endif
 13523  003736  0008               	tblrd		*
 13524  003738  50F5               	movf	tablat,w,c
 13525  00373A  EC79  F01C         	call	_EUSART_Write
 13526  00373E  0100               	movlb	0	; () banked
 13527  003740  4BC7               	infsnz	sendCommand@string& (0+255),f,b
 13528  003742  2BC8               	incf	(sendCommand@string+1)& (0+255),f,b
 13529  003744                     l9843:
 13530                           
 13531                           ; BSR set to: 0
 13532  003744  C0C7  FFF6         	movff	sendCommand@string,tblptrl
 13533  003748  C0C8  FFF7         	movff	sendCommand@string+1,tblptrh
 13534  00374C                     	if	0	;tblptru may be non-zero
 13535  00374C                     	endif
 13536  00374C                     	if	0	;tblptru may be non-zero
 13537  00374C                     	endif
 13538  00374C  0008               	tblrd		*
 13539  00374E  50F5               	movf	tablat,w,c
 13540  003750  E1EE               	bnz	l9839
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;MOTEapp.c: 1237: }
 13544                           ;MOTEapp.c: 1238: EndLine();
 13545  003752  EF12  F01A         	goto	_EndLine	;wreg free
 13546  003756                     __end_of_sendCommand:
 13547                           	opt stack 0
 13548                           tblptru	equ	0xFF8
 13549                           tblptrh	equ	0xFF7
 13550                           tblptrl	equ	0xFF6
 13551                           tablat	equ	0xFF5
 13552                           prodl	equ	0xFF3
 13553                           intcon	equ	0xFF2
 13554                           postinc0	equ	0xFEE
 13555                           wreg	equ	0xFE8
 13556                           postdec1	equ	0xFE5
 13557                           fsr1l	equ	0xFE1
 13558                           indf2	equ	0xFDF
 13559                           fsr2h	equ	0xFDA
 13560                           fsr2l	equ	0xFD9
 13561                           status	equ	0xFD8
 13562                           
 13563 ;; *************** function _EndLine *****************
 13564 ;; Defined at:
 13565 ;;		line 1225 in file "../Includes/Board/MOTEapp.c"
 13566 ;; Parameters:    Size  Location     Type
 13567 ;;		None
 13568 ;; Auto vars:     Size  Location     Type
 13569 ;;		None
 13570 ;; Return value:  Size  Location     Type
 13571 ;;		None               void
 13572 ;; Registers used:
 13573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13574 ;; Tracked objects:
 13575 ;;		On entry : F/0
 13576 ;;		On exit  : 0/0
 13577 ;;		Unchanged: 0/0
 13578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13579 ;;      Params:         0       0       0       0       0       0       0       0       0
 13580 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13581 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13582 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13583 ;;Total ram usage:        0 bytes
 13584 ;; Hardware stack levels used:    1
 13585 ;; Hardware stack levels required when called:   12
 13586 ;; This function calls:
 13587 ;;		_EUSART_Write
 13588 ;; This function is called by:
 13589 ;;		_sendCommand
 13590 ;;		_sendDataCommand
 13591 ;; This function uses a non-reentrant model
 13592 ;;
 13593                           
 13594                           	psect	text40
 13595  003424                     __ptext40:
 13596                           	opt stack 0
 13597  003424                     _EndLine:
 13598                           	opt stack 14
 13599                           
 13600                           ; BSR set to: 0
 13601                           ;MOTEapp.c: 1227: EUSART_Write(0x0D);
 13602                           
 13603                           ;incstack = 0
 13604  003424  0E0D               	movlw	13
 13605  003426  EC79  F01C         	call	_EUSART_Write
 13606                           
 13607                           ;MOTEapp.c: 1228: EUSART_Write(0x0A);
 13608  00342A  0E0A               	movlw	10
 13609  00342C  EF79  F01C         	goto	_EUSART_Write
 13610  003430                     __end_of_EndLine:
 13611                           	opt stack 0
 13612                           tblptru	equ	0xFF8
 13613                           tblptrh	equ	0xFF7
 13614                           tblptrl	equ	0xFF6
 13615                           tablat	equ	0xFF5
 13616                           prodl	equ	0xFF3
 13617                           intcon	equ	0xFF2
 13618                           postinc0	equ	0xFEE
 13619                           wreg	equ	0xFE8
 13620                           postdec1	equ	0xFE5
 13621                           fsr1l	equ	0xFE1
 13622                           indf2	equ	0xFDF
 13623                           fsr2h	equ	0xFDA
 13624                           fsr2l	equ	0xFD9
 13625                           status	equ	0xFD8
 13626                           
 13627 ;; *************** function _moteApp_delayms *****************
 13628 ;; Defined at:
 13629 ;;		line 1421 in file "../Includes/Board/MOTEapp.c"
 13630 ;; Parameters:    Size  Location     Type
 13631 ;;  length          2    0[BANK0 ] unsigned int 
 13632 ;; Auto vars:     Size  Location     Type
 13633 ;;  counter         2    3[BANK0 ] unsigned int 
 13634 ;; Return value:  Size  Location     Type
 13635 ;;		None               void
 13636 ;; Registers used:
 13637 ;;		wreg, status,2, status,0
 13638 ;; Tracked objects:
 13639 ;;		On entry : F/0
 13640 ;;		On exit  : F/0
 13641 ;;		Unchanged: 0/0
 13642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13643 ;;      Params:         0       2       0       0       0       0       0       0       0
 13644 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13645 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13646 ;;      Totals:         0       5       0       0       0       0       0       0       0
 13647 ;;Total ram usage:        5 bytes
 13648 ;; Hardware stack levels used:    1
 13649 ;; Hardware stack levels required when called:   11
 13650 ;; This function calls:
 13651 ;;		Nothing
 13652 ;; This function is called by:
 13653 ;;		_main
 13654 ;;		_test_powerup
 13655 ;;		_test_switch
 13656 ;;		_test_comms
 13657 ;;		_test_leds
 13658 ;;		_test_adc
 13659 ;;		_modemResync
 13660 ;;		_modemSleep
 13661 ;;		_moteHandler
 13662 ;;		_moteJoiningProcess
 13663 ;;		_moteRunningProcess
 13664 ;;		_MOTEapp_WriteDataRate
 13665 ;;		_moteApp_toggleLeds
 13666 ;; This function uses a non-reentrant model
 13667 ;;
 13668                           
 13669                           	psect	text41
 13670  003702                     __ptext41:
 13671                           	opt stack 0
 13672  003702                     _moteApp_delayms:
 13673                           	opt stack 17
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;MOTEapp.c: 1423: uint16_t counter;
 13677                           ;MOTEapp.c: 1424: for(counter = 0; counter < length; counter++)
 13678                           
 13679                           ;incstack = 0
 13680  003702  6BC9               	clrf	moteApp_delayms@counter& (0+255),b
 13681  003704  6BCA               	clrf	(moteApp_delayms@counter+1)& (0+255),b
 13682  003706  D00B               	goto	l728
 13683  003708                     l9831:
 13684                           
 13685                           ; BSR set to: 0
 13686                           ;MOTEapp.c: 1425: {
 13687                           ;MOTEapp.c: 1426: _delay((unsigned long)((1)*(48000000/4000.0)));
 13688  003708  0E10               	movlw	16
 13689  00370A  6FC8               	movwf	??_moteApp_delayms& (0+255),b
 13690  00370C  0E94               	movlw	148
 13691  00370E                     u10597:
 13692  00370E  2EE8               	decfsz	wreg,f,c
 13693  003710  D7FE               	goto	u10597
 13694  003712  2FC8               	decfsz	??_moteApp_delayms& (0+255),f,b
 13695  003714  D7FC               	goto	u10597
 13696  003716  D000               	nop2	
 13697  003718  0100               	movlb	0	; () banked
 13698  00371A  4BC9               	infsnz	moteApp_delayms@counter& (0+255),f,b
 13699  00371C  2BCA               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 13700  00371E                     l728:
 13701                           
 13702                           ; BSR set to: 0
 13703  00371E  51C6               	movf	moteApp_delayms@length& (0+255),w,b
 13704  003720  5DC9               	subwf	moteApp_delayms@counter& (0+255),w,b
 13705  003722  51C7               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 13706  003724  59CA               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 13707  003726  B0D8               	btfsc	status,0,c
 13708  003728  0012               	return	
 13709  00372A  D7EE               	goto	l9831
 13710  00372C                     __end_of_moteApp_delayms:
 13711                           	opt stack 0
 13712                           tblptru	equ	0xFF8
 13713                           tblptrh	equ	0xFF7
 13714                           tblptrl	equ	0xFF6
 13715                           tablat	equ	0xFF5
 13716                           prodl	equ	0xFF3
 13717                           intcon	equ	0xFF2
 13718                           postinc0	equ	0xFEE
 13719                           wreg	equ	0xFE8
 13720                           postdec1	equ	0xFE5
 13721                           fsr1l	equ	0xFE1
 13722                           indf2	equ	0xFDF
 13723                           fsr2h	equ	0xFDA
 13724                           fsr2l	equ	0xFD9
 13725                           status	equ	0xFD8
 13726                           
 13727 ;; *************** function _MOTEapp_SetDataRate *****************
 13728 ;; Defined at:
 13729 ;;		line 1097 in file "../Includes/Board/MOTEapp.c"
 13730 ;; Parameters:    Size  Location     Type
 13731 ;;  dataRate        1    wreg     unsigned char 
 13732 ;; Auto vars:     Size  Location     Type
 13733 ;;  dataRate        1    0[BANK0 ] unsigned char 
 13734 ;; Return value:  Size  Location     Type
 13735 ;;		None               void
 13736 ;; Registers used:
 13737 ;;		wreg
 13738 ;; Tracked objects:
 13739 ;;		On entry : F/0
 13740 ;;		On exit  : F/0
 13741 ;;		Unchanged: F/0
 13742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13743 ;;      Params:         0       0       0       0       0       0       0       0       0
 13744 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13745 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13746 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13747 ;;Total ram usage:        1 bytes
 13748 ;; Hardware stack levels used:    1
 13749 ;; Hardware stack levels required when called:   11
 13750 ;; This function calls:
 13751 ;;		Nothing
 13752 ;; This function is called by:
 13753 ;;		_moteJoiningProcess
 13754 ;;		_moteRunningProcess
 13755 ;; This function uses a non-reentrant model
 13756 ;;
 13757                           
 13758                           	psect	text42
 13759  0033F2                     __ptext42:
 13760                           	opt stack 0
 13761  0033F2                     _MOTEapp_SetDataRate:
 13762                           	opt stack 17
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;incstack = 0
 13766                           ;MOTEapp_SetDataRate@dataRate stored from wreg
 13767  0033F2  6FC6               	movwf	MOTEapp_SetDataRate@dataRate& (0+255),b
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;MOTEapp.c: 1099: dataRateSelection = dataRate;
 13771  0033F4  C0C6  F0FA         	movff	MOTEapp_SetDataRate@dataRate,_dataRateSelection
 13772                           
 13773                           ; BSR set to: 0
 13774  0033F8  0012               	return	
 13775  0033FA                     __end_of_MOTEapp_SetDataRate:
 13776                           	opt stack 0
 13777                           tblptru	equ	0xFF8
 13778                           tblptrh	equ	0xFF7
 13779                           tblptrl	equ	0xFF6
 13780                           tablat	equ	0xFF5
 13781                           prodl	equ	0xFF3
 13782                           intcon	equ	0xFF2
 13783                           postinc0	equ	0xFEE
 13784                           wreg	equ	0xFE8
 13785                           postdec1	equ	0xFE5
 13786                           fsr1l	equ	0xFE1
 13787                           indf2	equ	0xFDF
 13788                           fsr2h	equ	0xFDA
 13789                           fsr2l	equ	0xFD9
 13790                           status	equ	0xFD8
 13791                           
 13792 ;; *************** function _MOTEapp_SetADR *****************
 13793 ;; Defined at:
 13794 ;;		line 1092 in file "../Includes/Board/MOTEapp.c"
 13795 ;; Parameters:    Size  Location     Type
 13796 ;;  state           1    wreg     unsigned char 
 13797 ;; Auto vars:     Size  Location     Type
 13798 ;;  state           1    0[BANK0 ] unsigned char 
 13799 ;; Return value:  Size  Location     Type
 13800 ;;		None               void
 13801 ;; Registers used:
 13802 ;;		wreg
 13803 ;; Tracked objects:
 13804 ;;		On entry : F/0
 13805 ;;		On exit  : F/0
 13806 ;;		Unchanged: F/0
 13807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13808 ;;      Params:         0       0       0       0       0       0       0       0       0
 13809 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13810 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13811 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13812 ;;Total ram usage:        1 bytes
 13813 ;; Hardware stack levels used:    1
 13814 ;; Hardware stack levels required when called:   11
 13815 ;; This function calls:
 13816 ;;		Nothing
 13817 ;; This function is called by:
 13818 ;;		_moteJoiningProcess
 13819 ;;		_moteRunningProcess
 13820 ;; This function uses a non-reentrant model
 13821 ;;
 13822                           
 13823                           	psect	text43
 13824  0033EA                     __ptext43:
 13825                           	opt stack 0
 13826  0033EA                     _MOTEapp_SetADR:
 13827                           	opt stack 17
 13828                           
 13829                           ; BSR set to: 0
 13830                           ;incstack = 0
 13831                           ;MOTEapp_SetADR@state stored from wreg
 13832  0033EA  6FC6               	movwf	MOTEapp_SetADR@state& (0+255),b
 13833                           
 13834                           ; BSR set to: 0
 13835                           ;MOTEapp.c: 1094: adrStatus = state;
 13836  0033EC  C0C6  F08B         	movff	MOTEapp_SetADR@state,_adrStatus
 13837                           
 13838                           ; BSR set to: 0
 13839  0033F0  0012               	return	
 13840  0033F2                     __end_of_MOTEapp_SetADR:
 13841                           	opt stack 0
 13842                           tblptru	equ	0xFF8
 13843                           tblptrh	equ	0xFF7
 13844                           tblptrl	equ	0xFF6
 13845                           tablat	equ	0xFF5
 13846                           prodl	equ	0xFF3
 13847                           intcon	equ	0xFF2
 13848                           postinc0	equ	0xFEE
 13849                           wreg	equ	0xFE8
 13850                           postdec1	equ	0xFE5
 13851                           fsr1l	equ	0xFE1
 13852                           indf2	equ	0xFDF
 13853                           fsr2h	equ	0xFDA
 13854                           fsr2l	equ	0xFD9
 13855                           status	equ	0xFD8
 13856                           
 13857 ;; *************** function _DATAEE_WriteByte *****************
 13858 ;; Defined at:
 13859 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;  bAdd            1    wreg     unsigned char 
 13862 ;;  bData           1    0[BANK0 ] unsigned char 
 13863 ;; Auto vars:     Size  Location     Type
 13864 ;;  bAdd            1    1[BANK0 ] unsigned char 
 13865 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 13866 ;; Return value:  Size  Location     Type
 13867 ;;		None               void
 13868 ;; Registers used:
 13869 ;;		wreg, status,2
 13870 ;; Tracked objects:
 13871 ;;		On entry : F/0
 13872 ;;		On exit  : 0/0
 13873 ;;		Unchanged: 0/0
 13874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13875 ;;      Params:         0       1       0       0       0       0       0       0       0
 13876 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13877 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13878 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13879 ;;Total ram usage:        3 bytes
 13880 ;; Hardware stack levels used:    1
 13881 ;; Hardware stack levels required when called:   11
 13882 ;; This function calls:
 13883 ;;		Nothing
 13884 ;; This function is called by:
 13885 ;;		_main
 13886 ;;		_moteJoiningProcess
 13887 ;; This function uses a non-reentrant model
 13888 ;;
 13889                           
 13890                           	psect	text44
 13891  003928                     __ptext44:
 13892                           	opt stack 0
 13893  003928                     _DATAEE_WriteByte:
 13894                           	opt stack 17
 13895                           
 13896                           ; BSR set to: 0
 13897                           ;incstack = 0
 13898                           ;DATAEE_WriteByte@bAdd stored from wreg
 13899  003928  6FC7               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 13900                           
 13901                           ; BSR set to: 0
 13902                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 13903  00392A  0E00               	movlw	0
 13904  00392C  BEF2               	btfsc	intcon,7,c	;volatile
 13905  00392E  0E01               	movlw	1
 13906  003930  6FC8               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 13907                           
 13908                           ; BSR set to: 0
 13909                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 13910  003932  C0C7  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 13911                           
 13912                           ; BSR set to: 0
 13913                           ;memory.c: 171: EEDATA = bData;
 13914  003936  C0C6  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 13915                           
 13916                           ; BSR set to: 0
 13917                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 13918  00393A  9EA6               	bcf	4006,7,c	;volatile
 13919                           
 13920                           ; BSR set to: 0
 13921                           ;memory.c: 173: EECON1bits.CFGS = 0;
 13922  00393C  9CA6               	bcf	4006,6,c	;volatile
 13923                           
 13924                           ; BSR set to: 0
 13925                           ;memory.c: 174: EECON1bits.WREN = 1;
 13926  00393E  84A6               	bsf	4006,2,c	;volatile
 13927                           
 13928                           ; BSR set to: 0
 13929                           ;memory.c: 175: INTCONbits.GIE = 0;
 13930  003940  9EF2               	bcf	intcon,7,c	;volatile
 13931                           
 13932                           ; BSR set to: 0
 13933                           ;memory.c: 176: EECON2 = 0x55;
 13934  003942  0E55               	movlw	85
 13935  003944  6EA7               	movwf	4007,c	;volatile
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;memory.c: 177: EECON2 = 0xAA;
 13939  003946  0EAA               	movlw	170
 13940  003948  6EA7               	movwf	4007,c	;volatile
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;memory.c: 178: EECON1bits.WR = 1;
 13944  00394A  82A6               	bsf	4006,1,c	;volatile
 13945  00394C                     l1351:
 13946                           
 13947                           ; BSR set to: 0
 13948  00394C  B2A6               	btfsc	4006,1,c	;volatile
 13949  00394E  D7FE               	goto	l1351
 13950                           
 13951                           ; BSR set to: 0
 13952                           ;memory.c: 182: }
 13953                           ;memory.c: 184: EECON1bits.WREN = 0;
 13954  003950  94A6               	bcf	4006,2,c	;volatile
 13955                           
 13956                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 13957  003952  B1C8               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 13958  003954  D002               	bra	u8355
 13959  003956  9EF2               	bcf	intcon,7,c	;volatile
 13960  003958  D001               	bra	u8356
 13961  00395A                     u8355:
 13962  00395A  8EF2               	bsf	intcon,7,c	;volatile
 13963  00395C                     u8356:
 13964  00395C  0012               	return	
 13965  00395E                     __end_of_DATAEE_WriteByte:
 13966                           	opt stack 0
 13967                           tblptru	equ	0xFF8
 13968                           tblptrh	equ	0xFF7
 13969                           tblptrl	equ	0xFF6
 13970                           tablat	equ	0xFF5
 13971                           prodl	equ	0xFF3
 13972                           intcon	equ	0xFF2
 13973                           postinc0	equ	0xFEE
 13974                           wreg	equ	0xFE8
 13975                           postdec1	equ	0xFE5
 13976                           fsr1l	equ	0xFE1
 13977                           indf2	equ	0xFDF
 13978                           fsr2h	equ	0xFDA
 13979                           fsr2l	equ	0xFD9
 13980                           status	equ	0xFD8
 13981                           
 13982 ;; *************** function _TMRapp_Handler *****************
 13983 ;; Defined at:
 13984 ;;		line 22 in file "../Includes/Drivers/TMRapp.c"
 13985 ;; Parameters:    Size  Location     Type
 13986 ;;		None
 13987 ;; Auto vars:     Size  Location     Type
 13988 ;;		None
 13989 ;; Return value:  Size  Location     Type
 13990 ;;		None               void
 13991 ;; Registers used:
 13992 ;;		wreg, status,2, status,0, cstack
 13993 ;; Tracked objects:
 13994 ;;		On entry : F/0
 13995 ;;		On exit  : F/0
 13996 ;;		Unchanged: 0/0
 13997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13998 ;;      Params:         0       0       0       0       0       0       0       0       0
 13999 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14000 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14001 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14002 ;;Total ram usage:        0 bytes
 14003 ;; Hardware stack levels used:    1
 14004 ;; Hardware stack levels required when called:   12
 14005 ;; This function calls:
 14006 ;;		___lwmod
 14007 ;; This function is called by:
 14008 ;;		_moteHandler
 14009 ;; This function uses a non-reentrant model
 14010 ;;
 14011                           
 14012                           	psect	text45
 14013  005364                     __ptext45:
 14014                           	opt stack 0
 14015  005364                     _TMRapp_Handler:
 14016                           	opt stack 17
 14017                           
 14018                           ; BSR set to: 0
 14019                           ;TMRapp.c: 25: timerMsTickCount++;
 14020                           
 14021                           ;incstack = 0
 14022  005364  4B84               	infsnz	_timerMsTickCount& (0+255),f,b
 14023  005366  2B85               	incf	(_timerMsTickCount+1)& (0+255),f,b
 14024                           
 14025                           ; BSR set to: 0
 14026                           ;TMRapp.c: 27: if ( (timerMsTickCount % 10) == 0)
 14027  005368  C084  F0C6         	movff	_timerMsTickCount,___lwmod@dividend
 14028  00536C  C085  F0C7         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 14029  005370  6BC9               	clrf	(___lwmod@divisor+1)& (0+255),b
 14030  005372  0E0A               	movlw	10
 14031  005374  6FC8               	movwf	___lwmod@divisor& (0+255),b
 14032  005376  EC24  F01D         	call	___lwmod	;wreg free
 14033  00537A  51C7               	movf	(?___lwmod+1)& (0+255),w,b
 14034  00537C  11C6               	iorwf	?___lwmod& (0+255),w,b
 14035  00537E  A4D8               	btfss	status,2,c
 14036  005380  0012               	return	
 14037                           
 14038                           ; BSR set to: 0
 14039                           ;TMRapp.c: 28: {
 14040                           ;TMRapp.c: 29: appTimer.mSecTenTick = 1;
 14041  005382  838C               	bsf	_appTimer& (0+255),1,b
 14042                           
 14043                           ; BSR set to: 0
 14044                           ;TMRapp.c: 30: if ( (timerMsTickCount % 100) == 0)
 14045  005384  C084  F0C6         	movff	_timerMsTickCount,___lwmod@dividend
 14046  005388  C085  F0C7         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 14047  00538C  6BC9               	clrf	(___lwmod@divisor+1)& (0+255),b
 14048  00538E  0E64               	movlw	100
 14049  005390  6FC8               	movwf	___lwmod@divisor& (0+255),b
 14050  005392  EC24  F01D         	call	___lwmod	;wreg free
 14051  005396  51C7               	movf	(?___lwmod+1)& (0+255),w,b
 14052  005398  11C6               	iorwf	?___lwmod& (0+255),w,b
 14053  00539A  A4D8               	btfss	status,2,c
 14054  00539C  0012               	return	
 14055                           
 14056                           ; BSR set to: 0
 14057                           ;TMRapp.c: 31: {
 14058                           ;TMRapp.c: 32: appTimer.mSecHundredTick = 1;
 14059  00539E  858C               	bsf	_appTimer& (0+255),2,b
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;TMRapp.c: 33: if ( (timerMsTickCount % 1000) == 0)
 14063  0053A0  C084  F0C6         	movff	_timerMsTickCount,___lwmod@dividend
 14064  0053A4  C085  F0C7         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 14065  0053A8  0E03               	movlw	3
 14066  0053AA  6FC9               	movwf	(___lwmod@divisor+1)& (0+255),b
 14067  0053AC  0EE8               	movlw	232
 14068  0053AE  6FC8               	movwf	___lwmod@divisor& (0+255),b
 14069  0053B0  EC24  F01D         	call	___lwmod	;wreg free
 14070  0053B4  51C7               	movf	(?___lwmod+1)& (0+255),w,b
 14071  0053B6  11C6               	iorwf	?___lwmod& (0+255),w,b
 14072  0053B8  A4D8               	btfss	status,2,c
 14073  0053BA  0012               	return	
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;TMRapp.c: 34: {
 14077                           ;TMRapp.c: 35: appTimer.SecTick = 1;
 14078  0053BC  878C               	bsf	_appTimer& (0+255),3,b
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;TMRapp.c: 36: if ( (timerMsTickCount % 60000) == 0)
 14082  0053BE  C084  F0C6         	movff	_timerMsTickCount,___lwmod@dividend
 14083  0053C2  C085  F0C7         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 14084  0053C6  0EEA               	movlw	234
 14085  0053C8  6FC9               	movwf	(___lwmod@divisor+1)& (0+255),b
 14086  0053CA  0E60               	movlw	96
 14087  0053CC  6FC8               	movwf	___lwmod@divisor& (0+255),b
 14088  0053CE  EC24  F01D         	call	___lwmod	;wreg free
 14089  0053D2  51C7               	movf	(?___lwmod+1)& (0+255),w,b
 14090  0053D4  11C6               	iorwf	?___lwmod& (0+255),w,b
 14091  0053D6  A4D8               	btfss	status,2,c
 14092  0053D8  0012               	return	
 14093                           
 14094                           ; BSR set to: 0
 14095                           ;TMRapp.c: 37: {
 14096                           ;TMRapp.c: 38: timerMinTickCount++;
 14097  0053DA  4B82               	infsnz	_timerMinTickCount& (0+255),f,b
 14098  0053DC  2B83               	incf	(_timerMinTickCount+1)& (0+255),f,b
 14099                           
 14100                           ; BSR set to: 0
 14101                           ;TMRapp.c: 39: appTimer.MinTick = 1;
 14102  0053DE  898C               	bsf	_appTimer& (0+255),4,b
 14103                           
 14104                           ; BSR set to: 0
 14105                           ;TMRapp.c: 40: if ( (timerMinTickCount % 60) == 0)
 14106  0053E0  C082  F0C6         	movff	_timerMinTickCount,___lwmod@dividend
 14107  0053E4  C083  F0C7         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 14108  0053E8  6BC9               	clrf	(___lwmod@divisor+1)& (0+255),b
 14109  0053EA  0E3C               	movlw	60
 14110  0053EC  6FC8               	movwf	___lwmod@divisor& (0+255),b
 14111  0053EE  EC24  F01D         	call	___lwmod	;wreg free
 14112  0053F2  51C7               	movf	(?___lwmod+1)& (0+255),w,b
 14113  0053F4  11C6               	iorwf	?___lwmod& (0+255),w,b
 14114  0053F6  A4D8               	btfss	status,2,c
 14115  0053F8  0012               	return	
 14116                           
 14117                           ; BSR set to: 0
 14118                           ;TMRapp.c: 41: {
 14119                           ;TMRapp.c: 42: appTimer.HourTick = 1;
 14120  0053FA  8B8C               	bsf	_appTimer& (0+255),5,b
 14121                           
 14122                           ; BSR set to: 0
 14123                           ;TMRapp.c: 43: if ( (timerMinTickCount % 720) == 0)
 14124  0053FC  C082  F0C6         	movff	_timerMinTickCount,___lwmod@dividend
 14125  005400  C083  F0C7         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 14126  005404  0E02               	movlw	2
 14127  005406  6FC9               	movwf	(___lwmod@divisor+1)& (0+255),b
 14128  005408  0ED0               	movlw	208
 14129  00540A  6FC8               	movwf	___lwmod@divisor& (0+255),b
 14130  00540C  EC24  F01D         	call	___lwmod	;wreg free
 14131  005410  51C7               	movf	(?___lwmod+1)& (0+255),w,b
 14132  005412  11C6               	iorwf	?___lwmod& (0+255),w,b
 14133  005414  A4D8               	btfss	status,2,c
 14134  005416  0012               	return	
 14135                           
 14136                           ; BSR set to: 0
 14137                           ;TMRapp.c: 44: {
 14138                           ;TMRapp.c: 45: appTimer.HalfDayTick = 1;
 14139  005418  8D8C               	bsf	_appTimer& (0+255),6,b
 14140                           
 14141                           ; BSR set to: 0
 14142                           ;TMRapp.c: 46: if ( (timerMinTickCount % 1440) == 0)
 14143  00541A  C082  F0C6         	movff	_timerMinTickCount,___lwmod@dividend
 14144  00541E  C083  F0C7         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 14145  005422  0E05               	movlw	5
 14146  005424  6FC9               	movwf	(___lwmod@divisor+1)& (0+255),b
 14147  005426  0EA0               	movlw	160
 14148  005428  6FC8               	movwf	___lwmod@divisor& (0+255),b
 14149  00542A  EC24  F01D         	call	___lwmod	;wreg free
 14150  00542E  51C7               	movf	(?___lwmod+1)& (0+255),w,b
 14151  005430  11C6               	iorwf	?___lwmod& (0+255),w,b
 14152  005432  A4D8               	btfss	status,2,c
 14153  005434  0012               	return	
 14154                           
 14155                           ; BSR set to: 0
 14156                           ;TMRapp.c: 47: {
 14157                           ;TMRapp.c: 48: appTimer.DayTick = 1;
 14158  005436  8F8C               	bsf	_appTimer& (0+255),7,b
 14159                           
 14160                           ;TMRapp.c: 50: timerMsTickCount = 0;
 14161  005438  6B84               	clrf	_timerMsTickCount& (0+255),b
 14162  00543A  6B85               	clrf	(_timerMsTickCount+1)& (0+255),b
 14163                           
 14164                           ;TMRapp.c: 51: timerMinTickCount = 0;
 14165  00543C  6B82               	clrf	_timerMinTickCount& (0+255),b
 14166  00543E  6B83               	clrf	(_timerMinTickCount+1)& (0+255),b
 14167  005440  0012               	return	
 14168  005442                     __end_of_TMRapp_Handler:
 14169                           	opt stack 0
 14170                           tblptru	equ	0xFF8
 14171                           tblptrh	equ	0xFF7
 14172                           tblptrl	equ	0xFF6
 14173                           tablat	equ	0xFF5
 14174                           prodl	equ	0xFF3
 14175                           intcon	equ	0xFF2
 14176                           postinc0	equ	0xFEE
 14177                           wreg	equ	0xFE8
 14178                           postdec1	equ	0xFE5
 14179                           fsr1l	equ	0xFE1
 14180                           indf2	equ	0xFDF
 14181                           fsr2h	equ	0xFDA
 14182                           fsr2l	equ	0xFD9
 14183                           status	equ	0xFD8
 14184                           
 14185 ;; *************** function ___lwmod *****************
 14186 ;; Defined at:
 14187 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
 14188 ;; Parameters:    Size  Location     Type
 14189 ;;  dividend        2    0[BANK0 ] unsigned int 
 14190 ;;  divisor         2    2[BANK0 ] unsigned int 
 14191 ;; Auto vars:     Size  Location     Type
 14192 ;;  counter         1    4[BANK0 ] unsigned char 
 14193 ;; Return value:  Size  Location     Type
 14194 ;;                  2    0[BANK0 ] unsigned int 
 14195 ;; Registers used:
 14196 ;;		wreg, status,2, status,0
 14197 ;; Tracked objects:
 14198 ;;		On entry : F/0
 14199 ;;		On exit  : F/0
 14200 ;;		Unchanged: 0/0
 14201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14202 ;;      Params:         0       4       0       0       0       0       0       0       0
 14203 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14204 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14205 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14206 ;;Total ram usage:        5 bytes
 14207 ;; Hardware stack levels used:    1
 14208 ;; Hardware stack levels required when called:   11
 14209 ;; This function calls:
 14210 ;;		Nothing
 14211 ;; This function is called by:
 14212 ;;		_moteApp_add16bToDataBuffer
 14213 ;;		_TMRapp_Handler
 14214 ;;		_oled_putUint16
 14215 ;; This function uses a non-reentrant model
 14216 ;;
 14217                           
 14218                           	psect	text46
 14219  003A48                     __ptext46:
 14220                           	opt stack 0
 14221  003A48                     ___lwmod:
 14222                           	opt stack 16
 14223                           
 14224                           ; BSR set to: 0
 14225                           
 14226                           ; BSR set to: 0
 14227                           ;incstack = 0
 14228  003A48  51C9               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14229  003A4A  11C8               	iorwf	___lwmod@divisor& (0+255),w,b
 14230  003A4C  E017               	bz	l2469
 14231                           
 14232                           ; BSR set to: 0
 14233  003A4E  0E01               	movlw	1
 14234  003A50  6FCA               	movwf	___lwmod@counter& (0+255),b
 14235  003A52  D004               	goto	l10161
 14236  003A54                     l10159:
 14237                           
 14238                           ; BSR set to: 0
 14239  003A54  90D8               	bcf	status,0,c
 14240  003A56  37C8               	rlcf	___lwmod@divisor& (0+255),f,b
 14241  003A58  37C9               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14242  003A5A  2BCA               	incf	___lwmod@counter& (0+255),f,b
 14243  003A5C                     l10161:
 14244                           
 14245                           ; BSR set to: 0
 14246  003A5C  AFC9               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14247  003A5E  D7FA               	goto	l10159
 14248  003A60                     l10163:
 14249                           
 14250                           ; BSR set to: 0
 14251  003A60  51C8               	movf	___lwmod@divisor& (0+255),w,b
 14252  003A62  5DC6               	subwf	___lwmod@dividend& (0+255),w,b
 14253  003A64  51C9               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14254  003A66  59C7               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14255  003A68  E304               	bnc	l10167
 14256                           
 14257                           ; BSR set to: 0
 14258  003A6A  51C8               	movf	___lwmod@divisor& (0+255),w,b
 14259  003A6C  5FC6               	subwf	___lwmod@dividend& (0+255),f,b
 14260  003A6E  51C9               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14261  003A70  5BC7               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14262  003A72                     l10167:
 14263                           
 14264                           ; BSR set to: 0
 14265  003A72  90D8               	bcf	status,0,c
 14266  003A74  33C9               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14267  003A76  33C8               	rrcf	___lwmod@divisor& (0+255),f,b
 14268                           
 14269                           ; BSR set to: 0
 14270  003A78  2FCA               	decfsz	___lwmod@counter& (0+255),f,b
 14271  003A7A  D7F2               	goto	l10163
 14272  003A7C                     l2469:
 14273                           
 14274                           ; BSR set to: 0
 14275  003A7C  C0C6  F0C6         	movff	___lwmod@dividend,?___lwmod
 14276  003A80  C0C7  F0C7         	movff	___lwmod@dividend+1,?___lwmod+1
 14277                           
 14278                           ; BSR set to: 0
 14279  003A84  0012               	return	
 14280  003A86                     __end_of___lwmod:
 14281                           	opt stack 0
 14282                           tblptru	equ	0xFF8
 14283                           tblptrh	equ	0xFF7
 14284                           tblptrl	equ	0xFF6
 14285                           tablat	equ	0xFF5
 14286                           prodl	equ	0xFF3
 14287                           intcon	equ	0xFF2
 14288                           postinc0	equ	0xFEE
 14289                           wreg	equ	0xFE8
 14290                           postdec1	equ	0xFE5
 14291                           fsr1l	equ	0xFE1
 14292                           indf2	equ	0xFDF
 14293                           fsr2h	equ	0xFDA
 14294                           fsr2l	equ	0xFD9
 14295                           status	equ	0xFD8
 14296                           
 14297 ;; *************** function _TMRapp_ClearBitFlags *****************
 14298 ;; Defined at:
 14299 ;;		line 16 in file "../Includes/Drivers/TMRapp.c"
 14300 ;; Parameters:    Size  Location     Type
 14301 ;;		None
 14302 ;; Auto vars:     Size  Location     Type
 14303 ;;		None
 14304 ;; Return value:  Size  Location     Type
 14305 ;;		None               void
 14306 ;; Registers used:
 14307 ;;		None
 14308 ;; Tracked objects:
 14309 ;;		On entry : F/0
 14310 ;;		On exit  : F/0
 14311 ;;		Unchanged: 0/0
 14312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14313 ;;      Params:         0       0       0       0       0       0       0       0       0
 14314 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14315 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14316 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14317 ;;Total ram usage:        0 bytes
 14318 ;; Hardware stack levels used:    1
 14319 ;; Hardware stack levels required when called:   11
 14320 ;; This function calls:
 14321 ;;		Nothing
 14322 ;; This function is called by:
 14323 ;;		_moteHandler
 14324 ;; This function uses a non-reentrant model
 14325 ;;
 14326                           
 14327                           	psect	text47
 14328  0033CA                     __ptext47:
 14329                           	opt stack 0
 14330  0033CA                     _TMRapp_ClearBitFlags:
 14331                           	opt stack 18
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;TMRapp.c: 19: appTimer.TicksBitMap = 0x00;
 14335                           
 14336                           ; BSR set to: 0
 14337                           ;incstack = 0
 14338  0033CA  6B8C               	clrf	_appTimer& (0+255),b
 14339                           
 14340                           ; BSR set to: 0
 14341  0033CC  0012               	return	
 14342  0033CE                     __end_of_TMRapp_ClearBitFlags:
 14343                           	opt stack 0
 14344                           tblptru	equ	0xFF8
 14345                           tblptrh	equ	0xFF7
 14346                           tblptrl	equ	0xFF6
 14347                           tablat	equ	0xFF5
 14348                           prodl	equ	0xFF3
 14349                           intcon	equ	0xFF2
 14350                           postinc0	equ	0xFEE
 14351                           wreg	equ	0xFE8
 14352                           postdec1	equ	0xFE5
 14353                           fsr1l	equ	0xFE1
 14354                           indf2	equ	0xFDF
 14355                           fsr2h	equ	0xFDA
 14356                           fsr2l	equ	0xFD9
 14357                           status	equ	0xFD8
 14358                           
 14359 ;; *************** function _MOTEapp_TimerBasedTask *****************
 14360 ;; Defined at:
 14361 ;;		line 1153 in file "../Includes/Board/MOTEapp.c"
 14362 ;; Parameters:    Size  Location     Type
 14363 ;;  timerTask       1    wreg     struct .
 14364 ;; Auto vars:     Size  Location     Type
 14365 ;;  timerTask       1    0[BANK0 ] struct .
 14366 ;; Return value:  Size  Location     Type
 14367 ;;		None               void
 14368 ;; Registers used:
 14369 ;;		wreg, status,2, status,0
 14370 ;; Tracked objects:
 14371 ;;		On entry : F/0
 14372 ;;		On exit  : F/0
 14373 ;;		Unchanged: 0/0
 14374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14375 ;;      Params:         0       0       0       0       0       0       0       0       0
 14376 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14377 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14378 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14379 ;;Total ram usage:        1 bytes
 14380 ;; Hardware stack levels used:    1
 14381 ;; Hardware stack levels required when called:   11
 14382 ;; This function calls:
 14383 ;;		Nothing
 14384 ;; This function is called by:
 14385 ;;		_moteHandler
 14386 ;; This function uses a non-reentrant model
 14387 ;;
 14388                           
 14389                           	psect	text48
 14390  003418                     __ptext48:
 14391                           	opt stack 0
 14392  003418                     _MOTEapp_TimerBasedTask:
 14393                           	opt stack 18
 14394                           
 14395                           ; BSR set to: 0
 14396                           ;incstack = 0
 14397                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 14398  003418  6FC6               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 14399                           
 14400                           ; BSR set to: 0
 14401                           ;MOTEapp.c: 1158: if (timerTask.mSecTenTick)
 14402  00341A  B3C6               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 14403                           
 14404                           ; BSR set to: 0
 14405                           ;MOTEapp.c: 1159: {
 14406                           ;MOTEapp.c: 1161: m10SecTicker++;
 14407  00341C  2B91               	incf	_m10SecTicker& (0+255),f,b
 14408                           
 14409                           ; BSR set to: 0
 14410                           ;MOTEapp.c: 1167: }
 14411                           ;MOTEapp.c: 1168: if (timerTask.SecTick)
 14412  00341E  B7C6               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 14413                           
 14414                           ; BSR set to: 0
 14415                           ;MOTEapp.c: 1169: {
 14416                           ;MOTEapp.c: 1171: secTicker++;
 14417  003420  2B97               	incf	_secTicker& (0+255),f,b
 14418  003422  0012               	return	
 14419  003424                     __end_of_MOTEapp_TimerBasedTask:
 14420                           	opt stack 0
 14421                           tblptru	equ	0xFF8
 14422                           tblptrh	equ	0xFF7
 14423                           tblptrl	equ	0xFF6
 14424                           tablat	equ	0xFF5
 14425                           prodl	equ	0xFF3
 14426                           intcon	equ	0xFF2
 14427                           postinc0	equ	0xFEE
 14428                           wreg	equ	0xFE8
 14429                           postdec1	equ	0xFE5
 14430                           fsr1l	equ	0xFE1
 14431                           indf2	equ	0xFDF
 14432                           fsr2h	equ	0xFDA
 14433                           fsr2l	equ	0xFD9
 14434                           status	equ	0xFD8
 14435                           
 14436 ;; *************** function _USBapp_handlerState *****************
 14437 ;; Defined at:
 14438 ;;		line 63 in file "../Includes/Board/USBapp.c"
 14439 ;; Parameters:    Size  Location     Type
 14440 ;;  state           1    wreg     enum E7120
 14441 ;; Auto vars:     Size  Location     Type
 14442 ;;  state           1    0[BANK0 ] enum E7120
 14443 ;; Return value:  Size  Location     Type
 14444 ;;		None               void
 14445 ;; Registers used:
 14446 ;;		wreg
 14447 ;; Tracked objects:
 14448 ;;		On entry : F/0
 14449 ;;		On exit  : F/0
 14450 ;;		Unchanged: F/0
 14451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14452 ;;      Params:         0       0       0       0       0       0       0       0       0
 14453 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14454 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14455 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14456 ;;Total ram usage:        1 bytes
 14457 ;; Hardware stack levels used:    1
 14458 ;; Hardware stack levels required when called:   11
 14459 ;; This function calls:
 14460 ;;		Nothing
 14461 ;; This function is called by:
 14462 ;;		_main
 14463 ;; This function uses a non-reentrant model
 14464 ;;
 14465                           
 14466                           	psect	text49
 14467  0033E2                     __ptext49:
 14468                           	opt stack 0
 14469  0033E2                     _USBapp_handlerState:
 14470                           	opt stack 19
 14471                           
 14472                           ; BSR set to: 0
 14473                           ;incstack = 0
 14474                           ;USBapp_handlerState@state stored from wreg
 14475  0033E2  6FC6               	movwf	USBapp_handlerState@state& (0+255),b
 14476                           
 14477                           ; BSR set to: 0
 14478                           ;USBapp.c: 65: usbState = state;
 14479  0033E4  C0C6  F09A         	movff	USBapp_handlerState@state,_usbState
 14480                           
 14481                           ; BSR set to: 0
 14482  0033E8  0012               	return	
 14483  0033EA                     __end_of_USBapp_handlerState:
 14484                           	opt stack 0
 14485                           tblptru	equ	0xFF8
 14486                           tblptrh	equ	0xFF7
 14487                           tblptrl	equ	0xFF6
 14488                           tablat	equ	0xFF5
 14489                           prodl	equ	0xFF3
 14490                           intcon	equ	0xFF2
 14491                           postinc0	equ	0xFEE
 14492                           wreg	equ	0xFE8
 14493                           postdec1	equ	0xFE5
 14494                           fsr1l	equ	0xFE1
 14495                           indf2	equ	0xFDF
 14496                           fsr2h	equ	0xFDA
 14497                           fsr2l	equ	0xFD9
 14498                           status	equ	0xFD8
 14499                           
 14500 ;; *************** function _USBapp_Handler *****************
 14501 ;; Defined at:
 14502 ;;		line 68 in file "../Includes/Board/USBapp.c"
 14503 ;; Parameters:    Size  Location     Type
 14504 ;;		None
 14505 ;; Auto vars:     Size  Location     Type
 14506 ;;		None
 14507 ;; Return value:  Size  Location     Type
 14508 ;;		None               void
 14509 ;; Registers used:
 14510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14511 ;; Tracked objects:
 14512 ;;		On entry : 0/0
 14513 ;;		On exit  : 0/0
 14514 ;;		Unchanged: 0/0
 14515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14516 ;;      Params:         0       0       0       0       0       0       0       0       0
 14517 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14518 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14519 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14520 ;;Total ram usage:        0 bytes
 14521 ;; Hardware stack levels used:    1
 14522 ;; Hardware stack levels required when called:   17
 14523 ;; This function calls:
 14524 ;;		_USBapp_DeviceCdcEmulatorHandler
 14525 ;;		_oled_clear
 14526 ;;		_oled_putString
 14527 ;; This function is called by:
 14528 ;;		_main
 14529 ;; This function uses a non-reentrant model
 14530 ;;
 14531                           
 14532                           	psect	text50
 14533  004232                     __ptext50:
 14534                           	opt stack 0
 14535  004232                     _USBapp_Handler:
 14536                           	opt stack 13
 14537                           
 14538                           ;USBapp.c: 72: {
 14539                           ;USBapp.c: 73: switch(usbState)
 14540                           
 14541                           ; BSR set to: 0
 14542                           ;incstack = 0
 14543                           ;USBapp.c: 71: do
 14544  004232  D02E               	goto	l12053
 14545  004234                     l812:
 14546                           
 14547                           ; BSR set to: 0
 14548  004234  D7FF               	goto	l812
 14549  004236                     l12033:
 14550                           
 14551                           ; BSR set to: 0
 14552                           ;USBapp.c: 80: oled_clear();
 14553  004236  EC88  F01A         	call	_oled_clear	;wreg free
 14554                           
 14555                           ; BSR set to: 0
 14556                           ;USBapp.c: 81: oled_putString("CDC Mode",1,0);
 14557  00423A  0E7F               	movlw	high STR_258
 14558  00423C  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 14559  00423E  0E2D               	movlw	low STR_258
 14560  004240  6FD3               	movwf	oled_putString@string& (0+255),b
 14561  004242  0E01               	movlw	1
 14562  004244  6FD5               	movwf	oled_putString@station_dot& (0+255),b
 14563  004246  0E00               	movlw	0
 14564  004248  6BD6               	clrf	oled_putString@start_page& (0+255),b
 14565  00424A  EC08  F020         	call	_oled_putString	;wreg free
 14566                           
 14567                           ;USBapp.c: 82: oled_putString("Command",2,1);
 14568  00424E  0E7F               	movlw	high STR_259
 14569  004250  0100               	movlb	0	; () banked
 14570  004252  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 14571  004254  0E87               	movlw	low STR_259
 14572  004256  6FD3               	movwf	oled_putString@string& (0+255),b
 14573  004258  0E02               	movlw	2
 14574  00425A  6FD5               	movwf	oled_putString@station_dot& (0+255),b
 14575  00425C  0E01               	movlw	1
 14576  00425E  6FD6               	movwf	oled_putString@start_page& (0+255),b
 14577  004260  EC08  F020         	call	_oled_putString	;wreg free
 14578                           
 14579                           ;USBapp.c: 83: oled_putString("USB Handler",0,2);
 14580  004264  0E7E               	movlw	high STR_260
 14581  004266  0100               	movlb	0	; () banked
 14582  004268  6FD4               	movwf	(oled_putString@string+1)& (0+255),b
 14583  00426A  0E37               	movlw	low STR_260
 14584  00426C  6FD3               	movwf	oled_putString@string& (0+255),b
 14585  00426E  6BD5               	clrf	oled_putString@station_dot& (0+255),b
 14586  004270  0E02               	movlw	2
 14587  004272  6FD6               	movwf	oled_putString@start_page& (0+255),b
 14588  004274  EC08  F020         	call	_oled_putString	;wreg free
 14589                           
 14590                           ;USBapp.c: 85: usbState = USB_RUNNING;
 14591  004278  0E01               	movlw	1
 14592  00427A  0100               	movlb	0	; () banked
 14593  00427C  D004               	goto	L70
 14594  00427E                     l12043:
 14595                           
 14596                           ; BSR set to: 0
 14597                           ;USBapp.c: 89: if( USBDeviceState < CONFIGURED_STATE )
 14598  00427E  0E20               	movlw	32
 14599  004280  5D89               	subwf	_USBDeviceState& (0+255),w,b	;volatile
 14600  004282  E30E               	bnc	l819
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;USBapp.c: 93: }
 14604                           ;USBapp.c: 94: usbState = USB_CDC;
 14605  004284  0E02               	movlw	2
 14606  004286                     L70:
 14607  004286  6F9A               	movwf	_usbState& (0+255),b
 14608                           
 14609                           ;USBapp.c: 95: break;
 14610  004288  D00B               	goto	l819
 14611  00428A                     l12049:
 14612                           
 14613                           ; BSR set to: 0
 14614                           ;USBapp.c: 98: USBapp_DeviceCdcEmulatorHandler();
 14615  00428A  ECBF  F025         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 14616                           
 14617                           ;USBapp.c: 101: break;
 14618  00428E  D008               	goto	l819
 14619  004290                     l12053:
 14620  004290  0100               	movlb	0	; () banked
 14621  004292  519A               	movf	_usbState& (0+255),w,b
 14622                           
 14623                           ; Switch size 1, requested type "speed"
 14624                           ; Number of cases is 3, Range of values is 0 to 2
 14625                           ; switch strategies available:
 14626                           ; Name         Instructions Cycles
 14627                           ; simple_byte           10     6 (average)
 14628                           ;	Chosen strategy is simple_byte
 14629  004294  E0D0               	bz	l12033
 14630  004296  0A01               	xorlw	1	; case 1
 14631  004298  E0F2               	bz	l12043
 14632  00429A  0A03               	xorlw	3	; case 2
 14633  00429C  E0F6               	bz	l12049
 14634  00429E  D7CA               	goto	l812
 14635  0042A0                     l819:
 14636                           
 14637                           ; BSR set to: 0
 14638                           ;USBapp.c: 103: }while(PORTAbits.RA0);
 14639  0042A0  B080               	btfsc	3968,0,c	;volatile
 14640  0042A2  D7F6               	goto	l12053
 14641                           
 14642                           ; BSR set to: 0
 14643                           ;USBapp.c: 104: __nop();
 14644  0042A4  F000               	nop	
 14645  0042A6  0012               	return	
 14646  0042A8                     __end_of_USBapp_Handler:
 14647                           	opt stack 0
 14648                           tblptru	equ	0xFF8
 14649                           tblptrh	equ	0xFF7
 14650                           tblptrl	equ	0xFF6
 14651                           tablat	equ	0xFF5
 14652                           prodl	equ	0xFF3
 14653                           intcon	equ	0xFF2
 14654                           postinc0	equ	0xFEE
 14655                           wreg	equ	0xFE8
 14656                           postdec1	equ	0xFE5
 14657                           fsr1l	equ	0xFE1
 14658                           indf2	equ	0xFDF
 14659                           fsr2h	equ	0xFDA
 14660                           fsr2l	equ	0xFD9
 14661                           status	equ	0xFD8
 14662                           
 14663 ;; *************** function _oled_putString *****************
 14664 ;; Defined at:
 14665 ;;		line 273 in file "../Includes/Drivers/SSD1306oLED.c"
 14666 ;; Parameters:    Size  Location     Type
 14667 ;;  string          2   13[BANK0 ] PTR const unsigned char 
 14668 ;;		 -> oled_putUint16@numData(6), oled_putUint8@numData(6), STR_260(12), STR_259(8), 
 14669 ;;		 -> STR_258(9), STR_241(16), STR_240(16), STR_239(16), 
 14670 ;;		 -> STR_238(15), STR_237(15), STR_236(16), STR_235(17), 
 14671 ;;		 -> STR_234(16), STR_233(17), STR_232(17), STR_231(2), 
 14672 ;;		 -> STR_230(7), STR_229(10), STR_228(17), STR_227(16), 
 14673 ;;		 -> STR_226(15), STR_225(15), STR_224(17), STR_223(16), 
 14674 ;;		 -> STR_222(17), STR_221(17), STR_220(16), STR_218(18), 
 14675 ;;		 -> STR_216(17), STR_214(17), STR_213(17), responseData(8), 
 14676 ;;		 -> responseId(16), responsePortNum(3), STR_210(12), STR_209(13), 
 14677 ;;		 -> STR_208(12), STR_205(18), STR_204(13), STR_203(17), 
 14678 ;;		 -> STR_202(16), STR_201(17), STR_200(17), STR_199(2), 
 14679 ;;		 -> STR_198(2), STR_197(2), STR_196(2), STR_195(2), 
 14680 ;;		 -> STR_194(2), STR_193(16), STR_192(17), STR_191(17), 
 14681 ;;		 -> STR_190(2), STR_189(2), STR_188(2), STR_187(15), 
 14682 ;;		 -> STR_186(15), STR_185(15), STR_184(15), STR_183(2), 
 14683 ;;		 -> STR_182(2), STR_181(2), STR_180(2), STR_179(15), 
 14684 ;;		 -> STR_178(15), STR_177(15), STR_176(15), STR_175(2), 
 14685 ;;		 -> STR_174(2), STR_173(2), STR_172(2), STR_171(15), 
 14686 ;;		 -> STR_170(15), STR_169(15), STR_168(15), STR_167(2), 
 14687 ;;		 -> STR_166(2), STR_165(2), STR_164(2), STR_163(15), 
 14688 ;;		 -> STR_162(15), STR_161(15), STR_160(15), STR_159(2), 
 14689 ;;		 -> STR_158(2), STR_157(2), STR_156(2), STR_155(2), 
 14690 ;;		 -> STR_154(15), STR_153(15), STR_152(15), STR_151(15), 
 14691 ;;		 -> STR_150(2), STR_149(2), STR_148(2), STR_147(2), 
 14692 ;;		 -> STR_146(2), STR_145(15), STR_144(15), STR_143(15), 
 14693 ;;		 -> STR_142(15), STR_141(2), STR_140(2), STR_139(2), 
 14694 ;;		 -> STR_138(2), STR_137(2), STR_136(15), STR_135(15), 
 14695 ;;		 -> STR_134(15), STR_133(15), STR_132(2), STR_131(2), 
 14696 ;;		 -> STR_130(2), STR_129(2), STR_128(2), STR_127(15), 
 14697 ;;		 -> STR_126(15), STR_125(15), STR_124(15), STR_123(2), 
 14698 ;;		 -> STR_122(2), STR_121(2), STR_120(2), STR_119(2), 
 14699 ;;		 -> STR_118(15), STR_117(15), STR_116(15), STR_115(15), 
 14700 ;;		 -> STR_114(2), STR_113(2), STR_112(2), STR_111(2), 
 14701 ;;		 -> STR_110(2), STR_109(15), STR_108(15), STR_107(15), 
 14702 ;;		 -> STR_106(15), STR_105(2), STR_104(2), STR_103(2), 
 14703 ;;		 -> STR_102(2), STR_101(2), STR_100(15), STR_99(15), 
 14704 ;;		 -> STR_98(15), STR_97(15), STR_96(2), STR_95(16), 
 14705 ;;		 -> STR_94(17), STR_93(17), STR_92(16), STR_91(16), 
 14706 ;;		 -> STR_90(16), STR_89(2), STR_88(7), STR_87(7), 
 14707 ;;		 -> STR_86(16), STR_85(16), STR_84(17), STR_83(17), 
 14708 ;;		 -> STR_82(16), STR_81(16), STR_80(16), STR_78(2), 
 14709 ;;		 -> STR_76(2), STR_75(16), STR_74(13), STR_73(12), 
 14710 ;;		 -> STR_72(17), STR_62(8), STR_61(8), STR_58(7), 
 14711 ;;		 -> STR_57(10), STR_55(11), STR_54(11), STR_49(9), 
 14712 ;;		 -> STR_48(11), STR_42(11), STR_41(10), STR_37(5), 
 14713 ;;		 -> STR_36(12), STR_35(8), STR_34(9), STR_28(17), 
 14714 ;;		 -> STR_27(17), STR_26(17), STR_25(17), STR_24(9), 
 14715 ;;		 -> STR_23(10), STR_20(9), STR_19(8), STR_18(8), 
 14716 ;;		 -> STR_17(9), STR_16(10), STR_15(11), STR_14(13), 
 14717 ;;		 -> STR_13(13), STR_12(13), STR_11(12), STR_10(13), 
 14718 ;;		 -> STR_9(9), STR_8(12), STR_7(16), STR_6(2), 
 14719 ;;		 -> STR_5(2), STR_4(9), STR_3(15), STR_2(15), 
 14720 ;;		 -> STR_1(15), 
 14721 ;;  station_dot     1   15[BANK0 ] unsigned char 
 14722 ;;  start_page      1   16[BANK0 ] unsigned char 
 14723 ;; Auto vars:     Size  Location     Type
 14724 ;;  index           1   17[BANK0 ] unsigned char 
 14725 ;; Return value:  Size  Location     Type
 14726 ;;		None               void
 14727 ;; Registers used:
 14728 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14729 ;; Tracked objects:
 14730 ;;		On entry : F/0
 14731 ;;		On exit  : 0/0
 14732 ;;		Unchanged: 0/0
 14733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14734 ;;      Params:         0       4       0       0       0       0       0       0       0
 14735 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14736 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14737 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14738 ;;Total ram usage:        5 bytes
 14739 ;; Hardware stack levels used:    1
 14740 ;; Hardware stack levels required when called:   15
 14741 ;; This function calls:
 14742 ;;		_oled_putChar
 14743 ;; This function is called by:
 14744 ;;		_main
 14745 ;;		_test_oled
 14746 ;;		_test_switch
 14747 ;;		_test_comms
 14748 ;;		_test_leds
 14749 ;;		_test_adc
 14750 ;;		_moteHandler
 14751 ;;		_moteJoiningProcess
 14752 ;;		_moteRunningProcess
 14753 ;;		_USBapp_Handler
 14754 ;;		_oled_putUint8
 14755 ;;		_oled_putUint16
 14756 ;; This function uses a non-reentrant model
 14757 ;;
 14758                           
 14759                           	psect	text51
 14760  004010                     __ptext51:
 14761                           	opt stack 0
 14762  004010                     _oled_putString:
 14763                           	opt stack 13
 14764                           
 14765                           ; BSR set to: 0
 14766                           ;SSD1306oLED.c: 275: uint8_t index;
 14767                           ;SSD1306oLED.c: 276: for(index = station_dot; index < 16; index++)
 14768                           
 14769                           ;incstack = 0
 14770  004010  C0D5  F0D7         	movff	oled_putString@station_dot,oled_putString@index
 14771  004014                     l9981:
 14772                           
 14773                           ; BSR set to: 0
 14774  004014  0E0F               	movlw	15
 14775  004016  65D7               	cpfsgt	oled_putString@index& (0+255),b
 14776  004018  D001               	goto	l9985
 14777  00401A  0C0F               	retlw	15
 14778  00401C                     l9985:
 14779                           
 14780                           ; BSR set to: 0
 14781                           ;SSD1306oLED.c: 277: {
 14782                           ;SSD1306oLED.c: 278: if (*string != 0)
 14783  00401C  C0D3  FFF6         	movff	oled_putString@string,tblptrl
 14784  004020  C0D4  FFF7         	movff	oled_putString@string+1,tblptrh
 14785  004024  6AF8               	clrf	tblptru,c
 14786  004026  0E07               	movlw	(high __ramtop+-1)
 14787  004028  64F7               	cpfsgt	tblptrh,c
 14788  00402A  D003               	bra	u8137
 14789  00402C  0008               	tblrd		*
 14790  00402E  50F5               	movf	tablat,w,c
 14791  004030  D005               	bra	u8130
 14792  004032                     u8137:
 14793  004032  CFF6 FFE1          	movff	tblptrl,fsr1l
 14794  004036  CFF7 FFE2          	movff	tblptrh,fsr1h
 14795  00403A  50E7               	movf	indf1,w,c
 14796  00403C                     u8130:
 14797  00403C  0900               	iorlw	0
 14798  00403E  B4D8               	btfsc	status,2,c
 14799  004040  0012               	return	
 14800                           
 14801                           ;SSD1306oLED.c: 279: {
 14802                           ;SSD1306oLED.c: 280: oled_putChar(*string, index, start_page);
 14803  004042  C0D7  F0C9         	movff	oled_putString@index,oled_putChar@station_dot
 14804  004046  C0D6  F0CA         	movff	oled_putString@start_page,oled_putChar@start_page
 14805  00404A  0100               	movlb	0	; () banked
 14806  00404C  C0D3  FFF6         	movff	oled_putString@string,tblptrl
 14807  004050  C0D4  FFF7         	movff	oled_putString@string+1,tblptrh
 14808  004054  6AF8               	clrf	tblptru,c
 14809  004056  0E07               	movlw	(high __ramtop+-1)
 14810  004058  64F7               	cpfsgt	tblptrh,c
 14811  00405A  D003               	bra	u8157
 14812  00405C  0008               	tblrd		*
 14813  00405E  50F5               	movf	tablat,w,c
 14814  004060  D005               	bra	u8150
 14815  004062                     u8157:
 14816  004062  CFF6 FFE1          	movff	tblptrl,fsr1l
 14817  004066  CFF7 FFE2          	movff	tblptrh,fsr1h
 14818  00406A  50E7               	movf	indf1,w,c
 14819  00406C                     u8150:
 14820  00406C  ECA6  F020         	call	_oled_putChar
 14821                           
 14822                           ; BSR set to: 0
 14823                           ;SSD1306oLED.c: 281: *string++;
 14824  004070  4BD3               	infsnz	oled_putString@string& (0+255),f,b
 14825  004072  2BD4               	incf	(oled_putString@string+1)& (0+255),f,b
 14826                           
 14827                           ; BSR set to: 0
 14828                           
 14829                           ;SSD1306oLED.c: 282: }
 14830  004074  2BD7               	incf	oled_putString@index& (0+255),f,b
 14831  004076  D7CE               	goto	l9981
 14832  004078                     __end_of_oled_putString:
 14833                           	opt stack 0
 14834                           tblptru	equ	0xFF8
 14835                           tblptrh	equ	0xFF7
 14836                           tblptrl	equ	0xFF6
 14837                           tablat	equ	0xFF5
 14838                           prodl	equ	0xFF3
 14839                           intcon	equ	0xFF2
 14840                           postinc0	equ	0xFEE
 14841                           wreg	equ	0xFE8
 14842                           indf1	equ	0xFE7
 14843                           postdec1	equ	0xFE5
 14844                           fsr1h	equ	0xFE2
 14845                           fsr1l	equ	0xFE1
 14846                           indf2	equ	0xFDF
 14847                           fsr2h	equ	0xFDA
 14848                           fsr2l	equ	0xFD9
 14849                           status	equ	0xFD8
 14850                           
 14851 ;; *************** function _oled_clear *****************
 14852 ;; Defined at:
 14853 ;;		line 290 in file "../Includes/Drivers/SSD1306oLED.c"
 14854 ;; Parameters:    Size  Location     Type
 14855 ;;		None
 14856 ;; Auto vars:     Size  Location     Type
 14857 ;;		None
 14858 ;; Return value:  Size  Location     Type
 14859 ;;		None               void
 14860 ;; Registers used:
 14861 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14862 ;; Tracked objects:
 14863 ;;		On entry : F/0
 14864 ;;		On exit  : F/0
 14865 ;;		Unchanged: 0/0
 14866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14867 ;;      Params:         0       0       0       0       0       0       0       0       0
 14868 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14869 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14870 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14871 ;;Total ram usage:        0 bytes
 14872 ;; Hardware stack levels used:    1
 14873 ;; Hardware stack levels required when called:   16
 14874 ;; This function calls:
 14875 ;;		_oled_clearRow
 14876 ;; This function is called by:
 14877 ;;		_main
 14878 ;;		_test_powerup
 14879 ;;		_test_oled
 14880 ;;		_test_switch
 14881 ;;		_test_adc
 14882 ;;		_moteHandler
 14883 ;;		_moteJoiningProcess
 14884 ;;		_moteRunningProcess
 14885 ;;		_USBapp_Handler
 14886 ;;		_oled_init
 14887 ;; This function uses a non-reentrant model
 14888 ;;
 14889                           
 14890                           	psect	text52
 14891  003510                     __ptext52:
 14892                           	opt stack 0
 14893  003510                     _oled_clear:
 14894                           	opt stack 12
 14895                           
 14896                           ; BSR set to: 0
 14897                           ;SSD1306oLED.c: 292: oled_clearRow(0);
 14898                           
 14899                           ;incstack = 0
 14900  003510  0E00               	movlw	0
 14901  003512  ECAF  F01A         	call	_oled_clearRow
 14902                           
 14903                           ;SSD1306oLED.c: 293: oled_clearRow(1);
 14904  003516  0E01               	movlw	1
 14905  003518  ECAF  F01A         	call	_oled_clearRow
 14906                           
 14907                           ;SSD1306oLED.c: 294: oled_clearRow(2);
 14908  00351C  0E02               	movlw	2
 14909  00351E  ECAF  F01A         	call	_oled_clearRow
 14910                           
 14911                           ;SSD1306oLED.c: 295: oled_clearRow(3);
 14912  003522  0E03               	movlw	3
 14913  003524  EFAF  F01A         	goto	_oled_clearRow
 14914  003528                     __end_of_oled_clear:
 14915                           	opt stack 0
 14916                           tblptru	equ	0xFF8
 14917                           tblptrh	equ	0xFF7
 14918                           tblptrl	equ	0xFF6
 14919                           tablat	equ	0xFF5
 14920                           prodl	equ	0xFF3
 14921                           intcon	equ	0xFF2
 14922                           postinc0	equ	0xFEE
 14923                           wreg	equ	0xFE8
 14924                           indf1	equ	0xFE7
 14925                           postdec1	equ	0xFE5
 14926                           fsr1h	equ	0xFE2
 14927                           fsr1l	equ	0xFE1
 14928                           indf2	equ	0xFDF
 14929                           fsr2h	equ	0xFDA
 14930                           fsr2l	equ	0xFD9
 14931                           status	equ	0xFD8
 14932                           
 14933 ;; *************** function _oled_clearRow *****************
 14934 ;; Defined at:
 14935 ;;		line 298 in file "../Includes/Drivers/SSD1306oLED.c"
 14936 ;; Parameters:    Size  Location     Type
 14937 ;;  page            1    wreg     unsigned char 
 14938 ;; Auto vars:     Size  Location     Type
 14939 ;;  page            1   13[BANK0 ] unsigned char 
 14940 ;;  index           1   14[BANK0 ] unsigned char 
 14941 ;; Return value:  Size  Location     Type
 14942 ;;		None               void
 14943 ;; Registers used:
 14944 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14945 ;; Tracked objects:
 14946 ;;		On entry : F/0
 14947 ;;		On exit  : F/0
 14948 ;;		Unchanged: 0/0
 14949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14950 ;;      Params:         0       0       0       0       0       0       0       0       0
 14951 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14952 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14953 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14954 ;;Total ram usage:        2 bytes
 14955 ;; Hardware stack levels used:    1
 14956 ;; Hardware stack levels required when called:   15
 14957 ;; This function calls:
 14958 ;;		_oled_putChar
 14959 ;; This function is called by:
 14960 ;;		_oled_clear
 14961 ;; This function uses a non-reentrant model
 14962 ;;
 14963                           
 14964                           	psect	text53
 14965  00355E                     __ptext53:
 14966                           	opt stack 0
 14967  00355E                     _oled_clearRow:
 14968                           	opt stack 12
 14969                           
 14970                           ; BSR set to: 0
 14971                           ;incstack = 0
 14972                           ;oled_clearRow@page stored from wreg
 14973  00355E  6FD3               	movwf	oled_clearRow@page& (0+255),b
 14974                           
 14975                           ; BSR set to: 0
 14976                           ;SSD1306oLED.c: 300: uint8_t index;
 14977                           ;SSD1306oLED.c: 302: for(index = 0; index < 16; index++)
 14978  003560  6BD4               	clrf	oled_clearRow@index& (0+255),b
 14979  003562                     l9823:
 14980                           
 14981                           ; BSR set to: 0
 14982                           ;SSD1306oLED.c: 303: {
 14983                           ;SSD1306oLED.c: 304: oled_putChar( ' ', index, page);
 14984  003562  C0D4  F0C9         	movff	oled_clearRow@index,oled_putChar@station_dot
 14985  003566  C0D3  F0CA         	movff	oled_clearRow@page,oled_putChar@start_page
 14986  00356A  0E20               	movlw	32
 14987  00356C  ECA6  F020         	call	_oled_putChar
 14988                           
 14989                           ; BSR set to: 0
 14990  003570  2BD4               	incf	oled_clearRow@index& (0+255),f,b
 14991                           
 14992                           ; BSR set to: 0
 14993  003572  0E0F               	movlw	15
 14994  003574  65D4               	cpfsgt	oled_clearRow@index& (0+255),b
 14995  003576  D7F5               	goto	l9823
 14996  003578  0C0F               	retlw	15
 14997  00357A                     __end_of_oled_clearRow:
 14998                           	opt stack 0
 14999                           tblptru	equ	0xFF8
 15000                           tblptrh	equ	0xFF7
 15001                           tblptrl	equ	0xFF6
 15002                           tablat	equ	0xFF5
 15003                           prodl	equ	0xFF3
 15004                           intcon	equ	0xFF2
 15005                           postinc0	equ	0xFEE
 15006                           wreg	equ	0xFE8
 15007                           indf1	equ	0xFE7
 15008                           postdec1	equ	0xFE5
 15009                           fsr1h	equ	0xFE2
 15010                           fsr1l	equ	0xFE1
 15011                           indf2	equ	0xFDF
 15012                           fsr2h	equ	0xFDA
 15013                           fsr2l	equ	0xFD9
 15014                           status	equ	0xFD8
 15015                           
 15016 ;; *************** function _oled_putChar *****************
 15017 ;; Defined at:
 15018 ;;		line 258 in file "../Includes/Drivers/SSD1306oLED.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;  k               1    wreg     unsigned char 
 15021 ;;  station_dot     1    3[BANK0 ] unsigned char 
 15022 ;;  start_page      1    4[BANK0 ] unsigned char 
 15023 ;; Auto vars:     Size  Location     Type
 15024 ;;  k               1   11[BANK0 ] unsigned char 
 15025 ;;  index           1   12[BANK0 ] unsigned char 
 15026 ;; Return value:  Size  Location     Type
 15027 ;;		None               void
 15028 ;; Registers used:
 15029 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15030 ;; Tracked objects:
 15031 ;;		On entry : 0/0
 15032 ;;		On exit  : F/0
 15033 ;;		Unchanged: 0/0
 15034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15035 ;;      Params:         0       2       0       0       0       0       0       0       0
 15036 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15037 ;;      Temps:          0       6       0       0       0       0       0       0       0
 15038 ;;      Totals:         0      10       0       0       0       0       0       0       0
 15039 ;;Total ram usage:       10 bytes
 15040 ;; Hardware stack levels used:    1
 15041 ;; Hardware stack levels required when called:   14
 15042 ;; This function calls:
 15043 ;;		_Set_Column_Address
 15044 ;;		_Set_Page_Address
 15045 ;;		_oled_writeData
 15046 ;; This function is called by:
 15047 ;;		_test_adc
 15048 ;;		_oled_putString
 15049 ;;		_oled_clearRow
 15050 ;; This function uses a non-reentrant model
 15051 ;;
 15052                           
 15053                           	psect	text54
 15054  00414C                     __ptext54:
 15055                           	opt stack 0
 15056  00414C                     _oled_putChar:
 15057                           	opt stack 13
 15058                           
 15059                           ; BSR set to: 0
 15060                           ;incstack = 0
 15061                           ;oled_putChar@k stored from wreg
 15062  00414C  0100               	movlb	0	; () banked
 15063  00414E  6FD1               	movwf	oled_putChar@k& (0+255),b
 15064                           
 15065                           ; BSR set to: 0
 15066                           ;SSD1306oLED.c: 260: uint8_t index;
 15067                           ;SSD1306oLED.c: 262: Set_Page_Address(start_page);
 15068  004150  51CA               	movf	oled_putChar@start_page& (0+255),w,b
 15069  004152  EC38  F01A         	call	_Set_Page_Address
 15070                           
 15071                           ; BSR set to: 0
 15072                           ;SSD1306oLED.c: 263: Set_Column_Address(0x00 + station_dot * 8);
 15073  004156  51C9               	movf	oled_putChar@station_dot& (0+255),w,b
 15074  004158  0D08               	mullw	8
 15075  00415A  50F3               	movf	prodl,w,c
 15076  00415C  EC94  F01A         	call	_Set_Column_Address
 15077                           
 15078                           ; BSR set to: 0
 15079                           ;SSD1306oLED.c: 265: LATBbits.LATB4 = 0;
 15080  004160  988A               	bcf	3978,4,c	;volatile
 15081                           
 15082                           ; BSR set to: 0
 15083                           ;SSD1306oLED.c: 266: for(index = 0; index < 8; index++)
 15084  004162  6BD2               	clrf	oled_putChar@index& (0+255),b
 15085  004164                     l9771:
 15086                           
 15087                           ; BSR set to: 0
 15088                           ;SSD1306oLED.c: 267: {
 15089                           ;SSD1306oLED.c: 268: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 15090  004164  6BCB               	clrf	??_oled_putChar& (0+255),b
 15091  004166  69CC               	setf	(??_oled_putChar+1)& (0+255),b
 15092  004168  51D1               	movf	oled_putChar@k& (0+255),w,b
 15093  00416A  6FCD               	movwf	(??_oled_putChar+2)& (0+255),b
 15094  00416C  6BCE               	clrf	(??_oled_putChar+3)& (0+255),b
 15095  00416E  90D8               	bcf	status,0,c
 15096  004170  37CD               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 15097  004172  37CE               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 15098  004174  90D8               	bcf	status,0,c
 15099  004176  37CD               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 15100  004178  37CE               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 15101  00417A  90D8               	bcf	status,0,c
 15102  00417C  37CD               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 15103  00417E  37CE               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 15104  004180  C0F8  F0CF         	movff	_selectedFont,??_oled_putChar+4
 15105  004184  C0F9  F0D0         	movff	_selectedFont+1,??_oled_putChar+5
 15106  004188  51CD               	movf	(??_oled_putChar+2)& (0+255),w,b
 15107  00418A  27CF               	addwf	(??_oled_putChar+4)& (0+255),f,b
 15108  00418C  51CE               	movf	(??_oled_putChar+3)& (0+255),w,b
 15109  00418E  23D0               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 15110  004190  51D2               	movf	oled_putChar@index& (0+255),w,b
 15111  004192  27CF               	addwf	(??_oled_putChar+4)& (0+255),f,b
 15112  004194  0E00               	movlw	0
 15113  004196  23D0               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 15114  004198  51CB               	movf	??_oled_putChar& (0+255),w,b
 15115  00419A  27CF               	addwf	(??_oled_putChar+4)& (0+255),f,b
 15116  00419C  51CC               	movf	(??_oled_putChar+1)& (0+255),w,b
 15117  00419E  23D0               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 15118  0041A0  C0CF  FFF6         	movff	??_oled_putChar+4,tblptrl
 15119  0041A4  C0D0  FFF7         	movff	??_oled_putChar+5,tblptrh
 15120  0041A8                     	if	0	;tblptru may be non-zero
 15121  0041A8                     	endif
 15122  0041A8                     	if	0	;tblptru may be non-zero
 15123  0041A8                     	endif
 15124  0041A8  0008               	tblrd		*
 15125  0041AA  50F5               	movf	tablat,w,c
 15126  0041AC  EC01  F01A         	call	_oled_writeData
 15127                           
 15128                           ; BSR set to: 0
 15129  0041B0  2BD2               	incf	oled_putChar@index& (0+255),f,b
 15130                           
 15131                           ; BSR set to: 0
 15132  0041B2  0E07               	movlw	7
 15133  0041B4  65D2               	cpfsgt	oled_putChar@index& (0+255),b
 15134  0041B6  D7D6               	goto	l9771
 15135                           
 15136                           ; BSR set to: 0
 15137                           ;SSD1306oLED.c: 269: }
 15138                           ;SSD1306oLED.c: 270: LATBbits.LATB4 = 1;
 15139  0041B8  888A               	bsf	3978,4,c	;volatile
 15140                           
 15141                           ; BSR set to: 0
 15142  0041BA  0C07               	retlw	7
 15143  0041BC                     __end_of_oled_putChar:
 15144                           	opt stack 0
 15145                           tblptru	equ	0xFF8
 15146                           tblptrh	equ	0xFF7
 15147                           tblptrl	equ	0xFF6
 15148                           tablat	equ	0xFF5
 15149                           prodl	equ	0xFF3
 15150                           intcon	equ	0xFF2
 15151                           postinc0	equ	0xFEE
 15152                           wreg	equ	0xFE8
 15153                           indf1	equ	0xFE7
 15154                           postdec1	equ	0xFE5
 15155                           fsr1h	equ	0xFE2
 15156                           fsr1l	equ	0xFE1
 15157                           indf2	equ	0xFDF
 15158                           fsr2h	equ	0xFDA
 15159                           fsr2l	equ	0xFD9
 15160                           status	equ	0xFD8
 15161                           
 15162 ;; *************** function _oled_writeData *****************
 15163 ;; Defined at:
 15164 ;;		line 407 in file "../Includes/Drivers/SSD1306oLED.c"
 15165 ;; Parameters:    Size  Location     Type
 15166 ;;  data            1    wreg     unsigned char 
 15167 ;; Auto vars:     Size  Location     Type
 15168 ;;  data            1    1[BANK0 ] unsigned char 
 15169 ;; Return value:  Size  Location     Type
 15170 ;;		None               void
 15171 ;; Registers used:
 15172 ;;		wreg, status,2, cstack
 15173 ;; Tracked objects:
 15174 ;;		On entry : F/0
 15175 ;;		On exit  : F/0
 15176 ;;		Unchanged: 0/0
 15177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15178 ;;      Params:         0       0       0       0       0       0       0       0       0
 15179 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15180 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15181 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15182 ;;Total ram usage:        1 bytes
 15183 ;; Hardware stack levels used:    1
 15184 ;; Hardware stack levels required when called:   12
 15185 ;; This function calls:
 15186 ;;		_SPI_Exchange8bit
 15187 ;; This function is called by:
 15188 ;;		_oled_putChar
 15189 ;; This function uses a non-reentrant model
 15190 ;;
 15191                           
 15192                           	psect	text55
 15193  003402                     __ptext55:
 15194                           	opt stack 0
 15195  003402                     _oled_writeData:
 15196                           	opt stack 14
 15197                           
 15198                           ; BSR set to: 0
 15199                           ;incstack = 0
 15200                           ;oled_writeData@data stored from wreg
 15201  003402  6FC7               	movwf	oled_writeData@data& (0+255),b
 15202                           
 15203                           ; BSR set to: 0
 15204                           ;SSD1306oLED.c: 409: LATBbits.LATB5 = 1;
 15205  003404  8A8A               	bsf	3978,5,c	;volatile
 15206                           
 15207                           ; BSR set to: 0
 15208                           ;SSD1306oLED.c: 410: SPI_Exchange8bit(data);
 15209  003406  51C7               	movf	oled_writeData@data& (0+255),w,b
 15210  003408  EF27  F01A         	goto	_SPI_Exchange8bit
 15211  00340C                     __end_of_oled_writeData:
 15212                           	opt stack 0
 15213                           tblptru	equ	0xFF8
 15214                           tblptrh	equ	0xFF7
 15215                           tblptrl	equ	0xFF6
 15216                           tablat	equ	0xFF5
 15217                           prodl	equ	0xFF3
 15218                           intcon	equ	0xFF2
 15219                           postinc0	equ	0xFEE
 15220                           wreg	equ	0xFE8
 15221                           indf1	equ	0xFE7
 15222                           postdec1	equ	0xFE5
 15223                           fsr1h	equ	0xFE2
 15224                           fsr1l	equ	0xFE1
 15225                           indf2	equ	0xFDF
 15226                           fsr2h	equ	0xFDA
 15227                           fsr2l	equ	0xFD9
 15228                           status	equ	0xFD8
 15229                           
 15230 ;; *************** function _Set_Page_Address *****************
 15231 ;; Defined at:
 15232 ;;		line 201 in file "../Includes/Drivers/SSD1306oLED.c"
 15233 ;; Parameters:    Size  Location     Type
 15234 ;;  address         1    wreg     unsigned char 
 15235 ;; Auto vars:     Size  Location     Type
 15236 ;;  address         1    2[BANK0 ] unsigned char 
 15237 ;; Return value:  Size  Location     Type
 15238 ;;		None               void
 15239 ;; Registers used:
 15240 ;;		wreg, status,2, status,0, cstack
 15241 ;; Tracked objects:
 15242 ;;		On entry : F/0
 15243 ;;		On exit  : F/0
 15244 ;;		Unchanged: 0/0
 15245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15246 ;;      Params:         0       0       0       0       0       0       0       0       0
 15247 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15248 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15249 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15250 ;;Total ram usage:        1 bytes
 15251 ;; Hardware stack levels used:    1
 15252 ;; Hardware stack levels required when called:   13
 15253 ;; This function calls:
 15254 ;;		_oled_writeCommand
 15255 ;; This function is called by:
 15256 ;;		_oled_putChar
 15257 ;; This function uses a non-reentrant model
 15258 ;;
 15259                           
 15260                           	psect	text56
 15261  003470                     __ptext56:
 15262                           	opt stack 0
 15263  003470                     _Set_Page_Address:
 15264                           	opt stack 13
 15265                           
 15266                           ; BSR set to: 0
 15267                           ;incstack = 0
 15268                           ;Set_Page_Address@address stored from wreg
 15269  003470  6FC8               	movwf	Set_Page_Address@address& (0+255),b
 15270                           
 15271                           ; BSR set to: 0
 15272                           ;SSD1306oLED.c: 203: address = 0xB0 | address;
 15273  003472  0EB0               	movlw	176
 15274  003474  13C8               	iorwf	Set_Page_Address@address& (0+255),f,b
 15275                           
 15276                           ; BSR set to: 0
 15277                           ;SSD1306oLED.c: 204: LATBbits.LATB4 = 0;
 15278  003476  988A               	bcf	3978,4,c	;volatile
 15279                           
 15280                           ; BSR set to: 0
 15281                           ;SSD1306oLED.c: 205: oled_writeCommand(address);
 15282  003478  51C8               	movf	Set_Page_Address@address& (0+255),w,b
 15283  00347A  EC06  F01A         	call	_oled_writeCommand
 15284                           
 15285                           ; BSR set to: 0
 15286                           ;SSD1306oLED.c: 206: LATBbits.LATB4 = 1;
 15287  00347E  888A               	bsf	3978,4,c	;volatile
 15288                           
 15289                           ; BSR set to: 0
 15290  003480  0012               	return	
 15291  003482                     __end_of_Set_Page_Address:
 15292                           	opt stack 0
 15293                           tblptru	equ	0xFF8
 15294                           tblptrh	equ	0xFF7
 15295                           tblptrl	equ	0xFF6
 15296                           tablat	equ	0xFF5
 15297                           prodl	equ	0xFF3
 15298                           intcon	equ	0xFF2
 15299                           postinc0	equ	0xFEE
 15300                           wreg	equ	0xFE8
 15301                           indf1	equ	0xFE7
 15302                           postdec1	equ	0xFE5
 15303                           fsr1h	equ	0xFE2
 15304                           fsr1l	equ	0xFE1
 15305                           indf2	equ	0xFDF
 15306                           fsr2h	equ	0xFDA
 15307                           fsr2l	equ	0xFD9
 15308                           status	equ	0xFD8
 15309                           
 15310 ;; *************** function _Set_Column_Address *****************
 15311 ;; Defined at:
 15312 ;;		line 210 in file "../Includes/Drivers/SSD1306oLED.c"
 15313 ;; Parameters:    Size  Location     Type
 15314 ;;  address         1    wreg     unsigned char 
 15315 ;; Auto vars:     Size  Location     Type
 15316 ;;  address         1    2[BANK0 ] unsigned char 
 15317 ;; Return value:  Size  Location     Type
 15318 ;;		None               void
 15319 ;; Registers used:
 15320 ;;		wreg, status,2, status,0, cstack
 15321 ;; Tracked objects:
 15322 ;;		On entry : F/0
 15323 ;;		On exit  : F/0
 15324 ;;		Unchanged: 0/0
 15325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15326 ;;      Params:         0       0       0       0       0       0       0       0       0
 15327 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15328 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15329 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15330 ;;Total ram usage:        1 bytes
 15331 ;; Hardware stack levels used:    1
 15332 ;; Hardware stack levels required when called:   13
 15333 ;; This function calls:
 15334 ;;		_oled_writeCommand
 15335 ;; This function is called by:
 15336 ;;		_oled_putChar
 15337 ;; This function uses a non-reentrant model
 15338 ;;
 15339                           
 15340                           	psect	text57
 15341  003528                     __ptext57:
 15342                           	opt stack 0
 15343  003528                     _Set_Column_Address:
 15344                           	opt stack 13
 15345                           
 15346                           ; BSR set to: 0
 15347                           ;incstack = 0
 15348                           ;Set_Column_Address@address stored from wreg
 15349  003528  6FC8               	movwf	Set_Column_Address@address& (0+255),b
 15350                           
 15351                           ; BSR set to: 0
 15352                           ;SSD1306oLED.c: 212: LATBbits.LATB4 = 0;
 15353  00352A  988A               	bcf	3978,4,c	;volatile
 15354                           
 15355                           ; BSR set to: 0
 15356                           ;SSD1306oLED.c: 213: oled_writeCommand(0x10 | (address >> 4) );
 15357  00352C  39C8               	swapf	Set_Column_Address@address& (0+255),w,b
 15358  00352E  0B0F               	andlw	15
 15359  003530  0910               	iorlw	16
 15360  003532  EC06  F01A         	call	_oled_writeCommand
 15361                           
 15362                           ;SSD1306oLED.c: 214: oled_writeCommand(0x0F & address);
 15363  003536  51C8               	movf	Set_Column_Address@address& (0+255),w,b
 15364  003538  0B0F               	andlw	15
 15365  00353A  EC06  F01A         	call	_oled_writeCommand
 15366                           
 15367                           ; BSR set to: 0
 15368                           ;SSD1306oLED.c: 215: LATBbits.LATB4 = 1;
 15369  00353E  888A               	bsf	3978,4,c	;volatile
 15370                           
 15371                           ; BSR set to: 0
 15372  003540  0012               	return	
 15373  003542                     __end_of_Set_Column_Address:
 15374                           	opt stack 0
 15375                           tblptru	equ	0xFF8
 15376                           tblptrh	equ	0xFF7
 15377                           tblptrl	equ	0xFF6
 15378                           tablat	equ	0xFF5
 15379                           prodl	equ	0xFF3
 15380                           intcon	equ	0xFF2
 15381                           postinc0	equ	0xFEE
 15382                           wreg	equ	0xFE8
 15383                           indf1	equ	0xFE7
 15384                           postdec1	equ	0xFE5
 15385                           fsr1h	equ	0xFE2
 15386                           fsr1l	equ	0xFE1
 15387                           indf2	equ	0xFDF
 15388                           fsr2h	equ	0xFDA
 15389                           fsr2l	equ	0xFD9
 15390                           status	equ	0xFD8
 15391                           
 15392 ;; *************** function _oled_writeCommand *****************
 15393 ;; Defined at:
 15394 ;;		line 401 in file "../Includes/Drivers/SSD1306oLED.c"
 15395 ;; Parameters:    Size  Location     Type
 15396 ;;  command         1    wreg     unsigned char 
 15397 ;; Auto vars:     Size  Location     Type
 15398 ;;  command         1    1[BANK0 ] unsigned char 
 15399 ;; Return value:  Size  Location     Type
 15400 ;;		None               void
 15401 ;; Registers used:
 15402 ;;		wreg, status,2, cstack
 15403 ;; Tracked objects:
 15404 ;;		On entry : 0/0
 15405 ;;		On exit  : F/0
 15406 ;;		Unchanged: 0/0
 15407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15408 ;;      Params:         0       0       0       0       0       0       0       0       0
 15409 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15410 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15411 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15412 ;;Total ram usage:        1 bytes
 15413 ;; Hardware stack levels used:    1
 15414 ;; Hardware stack levels required when called:   12
 15415 ;; This function calls:
 15416 ;;		_SPI_Exchange8bit
 15417 ;; This function is called by:
 15418 ;;		_Set_Page_Address
 15419 ;;		_Set_Column_Address
 15420 ;;		_oled_devInit
 15421 ;;		_oled_setDisplay
 15422 ;;		_oled_displayOff
 15423 ;; This function uses a non-reentrant model
 15424 ;;
 15425                           
 15426                           	psect	text58
 15427  00340C                     __ptext58:
 15428                           	opt stack 0
 15429  00340C                     _oled_writeCommand:
 15430                           	opt stack 13
 15431                           
 15432                           ; BSR set to: 0
 15433                           ;incstack = 0
 15434                           ;oled_writeCommand@command stored from wreg
 15435  00340C  0100               	movlb	0	; () banked
 15436  00340E  6FC7               	movwf	oled_writeCommand@command& (0+255),b
 15437                           
 15438                           ; BSR set to: 0
 15439                           ;SSD1306oLED.c: 403: LATBbits.LATB5 = 0;
 15440  003410  9A8A               	bcf	3978,5,c	;volatile
 15441                           
 15442                           ; BSR set to: 0
 15443                           ;SSD1306oLED.c: 404: SPI_Exchange8bit(command);
 15444  003412  51C7               	movf	oled_writeCommand@command& (0+255),w,b
 15445  003414  EF27  F01A         	goto	_SPI_Exchange8bit
 15446  003418                     __end_of_oled_writeCommand:
 15447                           	opt stack 0
 15448                           tblptru	equ	0xFF8
 15449                           tblptrh	equ	0xFF7
 15450                           tblptrl	equ	0xFF6
 15451                           tablat	equ	0xFF5
 15452                           prodl	equ	0xFF3
 15453                           intcon	equ	0xFF2
 15454                           postinc0	equ	0xFEE
 15455                           wreg	equ	0xFE8
 15456                           indf1	equ	0xFE7
 15457                           postdec1	equ	0xFE5
 15458                           fsr1h	equ	0xFE2
 15459                           fsr1l	equ	0xFE1
 15460                           indf2	equ	0xFDF
 15461                           fsr2h	equ	0xFDA
 15462                           fsr2l	equ	0xFD9
 15463                           status	equ	0xFD8
 15464                           
 15465 ;; *************** function _SPI_Exchange8bit *****************
 15466 ;; Defined at:
 15467 ;;		line 81 in file "../Includes/MccGenerated/spi.c"
 15468 ;; Parameters:    Size  Location     Type
 15469 ;;  data            1    wreg     unsigned char 
 15470 ;; Auto vars:     Size  Location     Type
 15471 ;;  data            1    0[BANK0 ] unsigned char 
 15472 ;; Return value:  Size  Location     Type
 15473 ;;                  1    wreg      unsigned char 
 15474 ;; Registers used:
 15475 ;;		wreg, status,2
 15476 ;; Tracked objects:
 15477 ;;		On entry : F/0
 15478 ;;		On exit  : F/0
 15479 ;;		Unchanged: F/0
 15480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15481 ;;      Params:         0       0       0       0       0       0       0       0       0
 15482 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15483 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15484 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15485 ;;Total ram usage:        1 bytes
 15486 ;; Hardware stack levels used:    1
 15487 ;; Hardware stack levels required when called:   11
 15488 ;; This function calls:
 15489 ;;		Nothing
 15490 ;; This function is called by:
 15491 ;;		_oled_writeCommand
 15492 ;;		_oled_writeData
 15493 ;; This function uses a non-reentrant model
 15494 ;;
 15495                           
 15496                           	psect	text59
 15497  00344E                     __ptext59:
 15498                           	opt stack 0
 15499  00344E                     _SPI_Exchange8bit:
 15500                           	opt stack 14
 15501                           
 15502                           ; BSR set to: 0
 15503                           ;incstack = 0
 15504                           ;SPI_Exchange8bit@data stored from wreg
 15505  00344E  6FC6               	movwf	SPI_Exchange8bit@data& (0+255),b
 15506                           
 15507                           ; BSR set to: 0
 15508                           ;spi.c: 84: SSP1CON1bits.WCOL = 0;
 15509  003450  9EC6               	bcf	4038,7,c	;volatile
 15510                           
 15511                           ; BSR set to: 0
 15512                           ;spi.c: 86: SSPBUF = data;
 15513  003452  C0C6  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 15514  003456                     l1207:
 15515                           
 15516                           ; BSR set to: 0
 15517  003456  A0C7               	btfss	4039,0,c	;volatile
 15518  003458  D7FE               	goto	l1207
 15519                           
 15520                           ; BSR set to: 0
 15521                           ;spi.c: 90: }
 15522                           ;spi.c: 92: return (SSPBUF);
 15523  00345A  50C9               	movf	4041,w,c	;volatile
 15524                           
 15525                           ; BSR set to: 0
 15526  00345C  0012               	return	
 15527  00345E                     __end_of_SPI_Exchange8bit:
 15528                           	opt stack 0
 15529                           tblptru	equ	0xFF8
 15530                           tblptrh	equ	0xFF7
 15531                           tblptrl	equ	0xFF6
 15532                           tablat	equ	0xFF5
 15533                           prodl	equ	0xFF3
 15534                           intcon	equ	0xFF2
 15535                           postinc0	equ	0xFEE
 15536                           wreg	equ	0xFE8
 15537                           indf1	equ	0xFE7
 15538                           postdec1	equ	0xFE5
 15539                           fsr1h	equ	0xFE2
 15540                           fsr1l	equ	0xFE1
 15541                           indf2	equ	0xFDF
 15542                           fsr2h	equ	0xFDA
 15543                           fsr2l	equ	0xFD9
 15544                           status	equ	0xFD8
 15545                           
 15546 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 15547 ;; Defined at:
 15548 ;;		line 125 in file "../Includes/Board/USBapp.c"
 15549 ;; Parameters:    Size  Location     Type
 15550 ;;		None
 15551 ;; Auto vars:     Size  Location     Type
 15552 ;;		None
 15553 ;; Return value:  Size  Location     Type
 15554 ;;		None               void
 15555 ;; Registers used:
 15556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15557 ;; Tracked objects:
 15558 ;;		On entry : F/0
 15559 ;;		On exit  : F/0
 15560 ;;		Unchanged: 0/0
 15561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15562 ;;      Params:         0       0       0       0       0       0       0       0       0
 15563 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15564 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15565 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15566 ;;Total ram usage:        1 bytes
 15567 ;; Hardware stack levels used:    1
 15568 ;; Hardware stack levels required when called:   13
 15569 ;; This function calls:
 15570 ;;		_CDCTxService
 15571 ;;		_EUSART_Read
 15572 ;;		_EUSART_Write
 15573 ;;		_MOTEapp_setResponseReady
 15574 ;;		_USBapp_getrxByteFlag
 15575 ;;		_getsUSBUSART
 15576 ;;		_putUSBUSART
 15577 ;; This function is called by:
 15578 ;;		_USBapp_Handler
 15579 ;; This function uses a non-reentrant model
 15580 ;;
 15581                           
 15582                           	psect	text60
 15583  004B7E                     __ptext60:
 15584                           	opt stack 0
 15585  004B7E                     _USBapp_DeviceCdcEmulatorHandler:
 15586                           	opt stack 16
 15587                           
 15588                           ; BSR set to: 0
 15589                           ;USBapp.c: 128: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 15590                           
 15591                           ; BSR set to: 0
 15592                           ;incstack = 0
 15593  004B7E  0E1F               	movlw	31
 15594  004B80  6589               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 15595  004B82  0C1F               	retlw	31
 15596                           
 15597                           ; BSR set to: 0
 15598  004B84  B260               	btfsc	3936,1,c	;volatile
 15599  004B86  0C1F               	retlw	31
 15600                           
 15601                           ; BSR set to: 0
 15602                           ;USBapp.c: 131: if (RS232_Out_Data_Rdy == 0)
 15603  004B88  6616               	tstfsz	_RS232_Out_Data_Rdy,c
 15604  004B8A  D00F               	goto	l834
 15605                           
 15606                           ; BSR set to: 0
 15607                           ;USBapp.c: 132: {
 15608                           ;USBapp.c: 133: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 15609  004B8C  0E01               	movlw	high _USB_Buffer
 15610  004B8E  0100               	movlb	0	; () banked
 15611  004B90  6FCE               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15612  004B92  0E40               	movlw	low _USB_Buffer
 15613  004B94  6FCD               	movwf	getsUSBUSART@buffer& (0+255),b
 15614  004B96  0E40               	movlw	64
 15615  004B98  6FCF               	movwf	getsUSBUSART@len& (0+255),b
 15616  004B9A  ECE2  F022         	call	_getsUSBUSART	;wreg free
 15617  004B9E  6E14               	movwf	_LastRS232Out,c
 15618                           
 15619                           ; BSR set to: 0
 15620                           ;USBapp.c: 134: if(LastRS232Out > 0)
 15621  004BA0  5014               	movf	_LastRS232Out,w,c
 15622  004BA2  E003               	bz	l834
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;USBapp.c: 135: {
 15626                           ;USBapp.c: 136: RS232_Out_Data_Rdy = 1;
 15627  004BA4  0E01               	movlw	1
 15628  004BA6  6E16               	movwf	_RS232_Out_Data_Rdy,c
 15629                           
 15630                           ; BSR set to: 0
 15631                           ;USBapp.c: 137: RS232cp = 0;
 15632  004BA8  6A17               	clrf	_RS232cp,c
 15633  004BAA                     l834:
 15634                           
 15635                           ; BSR set to: 0
 15636                           ;USBapp.c: 138: }
 15637                           ;USBapp.c: 139: }
 15638                           ;USBapp.c: 142: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 15639  004BAA  5016               	movf	_RS232_Out_Data_Rdy,w,c
 15640  004BAC  A4D8               	btfss	status,2,c
 15641                           
 15642                           ; BSR set to: 0
 15643  004BAE  A2AC               	btfss	4012,1,c	;volatile
 15644  004BB0  D00F               	goto	l11803
 15645                           
 15646                           ; BSR set to: 0
 15647                           ;USBapp.c: 143: {
 15648                           ;USBapp.c: 145: EUSART_Write(USB_Buffer[RS232cp]);
 15649  004BB2  0101               	movlb	1	; () banked
 15650  004BB4  0E40               	movlw	low _USB_Buffer
 15651  004BB6  2417               	addwf	_RS232cp,w,c
 15652  004BB8  6ED9               	movwf	fsr2l,c
 15653  004BBA  6ADA               	clrf	fsr2h,c
 15654  004BBC  0E01               	movlw	high _USB_Buffer
 15655  004BBE  22DA               	addwfc	fsr2h,f,c
 15656  004BC0  50DF               	movf	indf2,w,c
 15657  004BC2  EC79  F01C         	call	_EUSART_Write
 15658                           
 15659                           ;USBapp.c: 146: ++RS232cp;
 15660  004BC6  2A17               	incf	_RS232cp,f,c
 15661                           
 15662                           ;USBapp.c: 147: if (RS232cp == LastRS232Out)
 15663  004BC8  5014               	movf	_LastRS232Out,w,c
 15664  004BCA  6217               	cpfseq	_RS232cp,c
 15665  004BCC  D001               	goto	l11803
 15666                           
 15667                           ;USBapp.c: 148: RS232_Out_Data_Rdy = 0;
 15668  004BCE  6A16               	clrf	_RS232_Out_Data_Rdy,c
 15669  004BD0                     l11803:
 15670                           
 15671                           ;USBapp.c: 149: }
 15672                           ;USBapp.c: 152: if ((eusartRxCount))
 15673  004BD0  0100               	movlb	0	; () banked
 15674  004BD2  5190               	movf	_eusartRxCount& (0+255),w,b	;volatile
 15675  004BD4  E01D               	bz	l11819
 15676                           
 15677                           ; BSR set to: 0
 15678                           ;USBapp.c: 153: {
 15679                           ;USBapp.c: 154: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 15680  004BD6  ECE3  F019         	call	_USBapp_getrxByteFlag	;wreg free
 15681  004BDA  0900               	iorlw	0
 15682  004BDC  E019               	bz	l11819
 15683                           
 15684                           ; BSR set to: 0
 15685  004BDE  0E3F               	movlw	63
 15686  004BE0  5C15               	subwf	_NextUSBOut,w,c
 15687  004BE2  E216               	bc	l11819
 15688                           
 15689                           ; BSR set to: 0
 15690                           ;USBapp.c: 155: {
 15691                           ;USBapp.c: 156: __nop();
 15692  004BE4  F000               	nop	
 15693                           
 15694                           ;USBapp.c: 157: USB_Buffer[NextUSBOut] = EUSART_Read();
 15695  004BE6  EC31  F01C         	call	_EUSART_Read	;wreg free
 15696  004BEA  6FD3               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 15697  004BEC  0E40               	movlw	low _USB_Buffer
 15698  004BEE  2415               	addwf	_NextUSBOut,w,c
 15699  004BF0  6ED9               	movwf	fsr2l,c
 15700  004BF2  6ADA               	clrf	fsr2h,c
 15701  004BF4  0E01               	movlw	high _USB_Buffer
 15702  004BF6  22DA               	addwfc	fsr2h,f,c
 15703  004BF8  C0D3  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 15704                           
 15705                           ; BSR set to: 1
 15706                           ;USBapp.c: 158: ++NextUSBOut;
 15707  004BFC  2A15               	incf	_NextUSBOut,f,c
 15708                           
 15709                           ; BSR set to: 1
 15710                           ;USBapp.c: 159: USB_Buffer[NextUSBOut] = 0;
 15711  004BFE  0E40               	movlw	low _USB_Buffer
 15712  004C00  2415               	addwf	_NextUSBOut,w,c
 15713  004C02  6ED9               	movwf	fsr2l,c
 15714  004C04  6ADA               	clrf	fsr2h,c
 15715  004C06  0E01               	movlw	high _USB_Buffer
 15716  004C08  22DA               	addwfc	fsr2h,f,c
 15717  004C0A  0E00               	movlw	0
 15718  004C0C  6ADF               	clrf	indf2,c
 15719                           
 15720                           ; BSR set to: 1
 15721                           ;USBapp.c: 160: rxByteFlag = 0;
 15722  004C0E  6A26               	clrf	_rxByteFlag,c	;volatile
 15723  004C10                     l11819:
 15724                           
 15725                           ;USBapp.c: 161: }
 15726                           ;USBapp.c: 162: }
 15727                           ;USBapp.c: 166: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 15728  004C10  661E               	tstfsz	_cdc_trf_state,c
 15729  004C12  EF11  F02B         	goto	_CDCTxService
 15730  004C16  5015               	movf	_NextUSBOut,w,c
 15731  004C18  E00C               	bz	l11829
 15732                           
 15733                           ;USBapp.c: 167: {
 15734                           ;USBapp.c: 168: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 15735  004C1A  0E01               	movlw	high _USB_Buffer
 15736  004C1C  0100               	movlb	0	; () banked
 15737  004C1E  6FC7               	movwf	(putUSBUSART@data+1)& (0+255),b
 15738  004C20  0E40               	movlw	low _USB_Buffer
 15739  004C22  6FC6               	movwf	putUSBUSART@data& (0+255),b
 15740  004C24  C015  F0C8         	movff	_NextUSBOut,putUSBUSART@length
 15741  004C28  ECA1  F01A         	call	_putUSBUSART	;wreg free
 15742                           
 15743                           ; BSR set to: 0
 15744                           ;USBapp.c: 169: MOTEapp_setResponseReady();
 15745  004C2C  EC02  F008         	call	_MOTEapp_setResponseReady	;wreg free
 15746                           
 15747                           ; BSR set to: 0
 15748                           ;USBapp.c: 170: NextUSBOut = 0;
 15749  004C30  6A15               	clrf	_NextUSBOut,c
 15750  004C32                     l11829:
 15751                           
 15752                           ;USBapp.c: 171: }
 15753                           ;USBapp.c: 173: CDCTxService();
 15754  004C32  EF11  F02B         	goto	_CDCTxService	;wreg free
 15755  004C36                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 15756                           	opt stack 0
 15757                           tblptru	equ	0xFF8
 15758                           tblptrh	equ	0xFF7
 15759                           tblptrl	equ	0xFF6
 15760                           tablat	equ	0xFF5
 15761                           prodl	equ	0xFF3
 15762                           intcon	equ	0xFF2
 15763                           postinc0	equ	0xFEE
 15764                           wreg	equ	0xFE8
 15765                           indf1	equ	0xFE7
 15766                           postdec1	equ	0xFE5
 15767                           fsr1h	equ	0xFE2
 15768                           fsr1l	equ	0xFE1
 15769                           indf2	equ	0xFDF
 15770                           fsr2h	equ	0xFDA
 15771                           fsr2l	equ	0xFD9
 15772                           status	equ	0xFD8
 15773                           
 15774 ;; *************** function _putUSBUSART *****************
 15775 ;; Defined at:
 15776 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 15777 ;; Parameters:    Size  Location     Type
 15778 ;;  data            2    0[BANK0 ] PTR unsigned char 
 15779 ;;		 -> USB_Buffer(64), 
 15780 ;;  length          1    2[BANK0 ] unsigned char 
 15781 ;; Auto vars:     Size  Location     Type
 15782 ;;		None
 15783 ;; Return value:  Size  Location     Type
 15784 ;;		None               void
 15785 ;; Registers used:
 15786 ;;		wreg, status,2, status,0
 15787 ;; Tracked objects:
 15788 ;;		On entry : F/0
 15789 ;;		On exit  : F/0
 15790 ;;		Unchanged: 0/0
 15791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15792 ;;      Params:         0       3       0       0       0       0       0       0       0
 15793 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15794 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15795 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15796 ;;Total ram usage:        3 bytes
 15797 ;; Hardware stack levels used:    1
 15798 ;; Hardware stack levels required when called:   11
 15799 ;; This function calls:
 15800 ;;		Nothing
 15801 ;; This function is called by:
 15802 ;;		_USBapp_DeviceCdcEmulatorHandler
 15803 ;; This function uses a non-reentrant model
 15804 ;;
 15805                           
 15806                           	psect	text61
 15807  003542                     __ptext61:
 15808                           	opt stack 0
 15809  003542                     _putUSBUSART:
 15810                           	opt stack 17
 15811                           
 15812                           ; BSR set to: 0
 15813                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 15814                           
 15815                           ; BSR set to: 0
 15816                           ;incstack = 0
 15817  003542  94A3               	bcf	4003,2,c	;volatile
 15818                           
 15819                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 15820  003544  661E               	tstfsz	_cdc_trf_state,c
 15821  003546  D009               	goto	l10519
 15822                           
 15823                           ; BSR set to: 0
 15824                           ;usb_device_cdc.c: 530: {
 15825                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 15826  003548  C0C7  F074         	movff	putUSBUSART@data+1,_pCDCSrc+1
 15827  00354C  C0C6  F073         	movff	putUSBUSART@data,_pCDCSrc
 15828                           
 15829                           ; BSR set to: 0
 15830  003550  C0C8  F08E         	movff	putUSBUSART@length,_cdc_tx_len
 15831                           
 15832                           ; BSR set to: 0
 15833  003554  0E01               	movlw	1
 15834  003556  6F8D               	movwf	_cdc_mem_type& (0+255),b
 15835                           
 15836                           ; BSR set to: 0
 15837  003558  6E1E               	movwf	_cdc_trf_state,c
 15838  00355A                     l10519:
 15839                           
 15840                           ; BSR set to: 0
 15841                           ;usb_device_cdc.c: 532: }
 15842                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 15843  00355A  84A3               	bsf	4003,2,c	;volatile
 15844                           
 15845                           ; BSR set to: 0
 15846  00355C  0012               	return	
 15847  00355E                     __end_of_putUSBUSART:
 15848                           	opt stack 0
 15849                           tblptru	equ	0xFF8
 15850                           tblptrh	equ	0xFF7
 15851                           tblptrl	equ	0xFF6
 15852                           tablat	equ	0xFF5
 15853                           prodl	equ	0xFF3
 15854                           intcon	equ	0xFF2
 15855                           postinc0	equ	0xFEE
 15856                           wreg	equ	0xFE8
 15857                           indf1	equ	0xFE7
 15858                           postdec1	equ	0xFE5
 15859                           fsr1h	equ	0xFE2
 15860                           fsr1l	equ	0xFE1
 15861                           indf2	equ	0xFDF
 15862                           fsr2h	equ	0xFDA
 15863                           fsr2l	equ	0xFD9
 15864                           status	equ	0xFD8
 15865                           
 15866 ;; *************** function _getsUSBUSART *****************
 15867 ;; Defined at:
 15868 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 15869 ;; Parameters:    Size  Location     Type
 15870 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 15871 ;;		 -> USB_Buffer(64), 
 15872 ;;  len             1    9[BANK0 ] unsigned char 
 15873 ;; Auto vars:     Size  Location     Type
 15874 ;;		None
 15875 ;; Return value:  Size  Location     Type
 15876 ;;                  1    wreg      unsigned char 
 15877 ;; Registers used:
 15878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15879 ;; Tracked objects:
 15880 ;;		On entry : F/0
 15881 ;;		On exit  : F/0
 15882 ;;		Unchanged: 0/0
 15883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15884 ;;      Params:         0       3       0       0       0       0       0       0       0
 15885 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15886 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15887 ;;      Totals:         0       6       0       0       0       0       0       0       0
 15888 ;;Total ram usage:        6 bytes
 15889 ;; Hardware stack levels used:    1
 15890 ;; Hardware stack levels required when called:   12
 15891 ;; This function calls:
 15892 ;;		_USBTransferOnePacket
 15893 ;; This function is called by:
 15894 ;;		_USBapp_DeviceCdcEmulatorHandler
 15895 ;; This function uses a non-reentrant model
 15896 ;;
 15897                           
 15898                           	psect	text62
 15899  0045C4                     __ptext62:
 15900                           	opt stack 0
 15901  0045C4                     _getsUSBUSART:
 15902                           	opt stack 16
 15903                           
 15904                           ; BSR set to: 0
 15905                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 15906                           
 15907                           ; BSR set to: 0
 15908                           ;incstack = 0
 15909  0045C4  6A1D               	clrf	_cdc_rx_len,c
 15910                           
 15911                           ; BSR set to: 0
 15912                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 15913  0045C6  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 15914  0045C8  1178               	iorwf	_CDCDataOutHandle& (0+255),w,b
 15915  0045CA  E009               	bz	l1890
 15916                           
 15917                           ; BSR set to: 0
 15918  0045CC  C078  FFD9         	movff	_CDCDataOutHandle,fsr2l
 15919  0045D0  C079  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 15920  0045D4  0E01               	movlw	1
 15921  0045D6  AEDF               	btfss	indf2,7,c
 15922  0045D8  0E00               	movlw	0
 15923  0045DA  6FD1               	movwf	_getsUSBUSART$5736& (0+255),b
 15924  0045DC  D001               	goto	L71
 15925  0045DE                     l1890:
 15926                           
 15927                           ; BSR set to: 0
 15928  0045DE  6BD1               	clrf	_getsUSBUSART$5736& (0+255),b
 15929  0045E0                     L71:
 15930  0045E0  6BD2               	clrf	(_getsUSBUSART$5736+1)& (0+255),b
 15931                           
 15932                           ; BSR set to: 0
 15933  0045E2  51D2               	movf	(_getsUSBUSART$5736+1)& (0+255),w,b
 15934  0045E4  11D1               	iorwf	_getsUSBUSART$5736& (0+255),w,b
 15935  0045E6  E136               	bnz	l10501
 15936                           
 15937                           ; BSR set to: 0
 15938                           ;usb_device_cdc.c: 437: {
 15939                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 15940  0045E8  EE20 F001          	lfsr	2,1
 15941  0045EC  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 15942  0045EE  26D9               	addwf	fsr2l,f,c
 15943  0045F0  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 15944  0045F2  22DA               	addwfc	fsr2h,f,c
 15945  0045F4  50DF               	movf	indf2,w,c
 15946  0045F6  6FD0               	movwf	??_getsUSBUSART& (0+255),b
 15947  0045F8  51CF               	movf	getsUSBUSART@len& (0+255),w,b
 15948  0045FA  5DD0               	subwf	??_getsUSBUSART& (0+255),w,b
 15949  0045FC  E208               	bc	l10491
 15950                           
 15951                           ; BSR set to: 0
 15952                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 15953  0045FE  EE20 F001          	lfsr	2,1
 15954  004602  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 15955  004604  26D9               	addwf	fsr2l,f,c
 15956  004606  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 15957  004608  22DA               	addwfc	fsr2h,f,c
 15958  00460A  50DF               	movf	indf2,w,c
 15959  00460C  6FCF               	movwf	getsUSBUSART@len& (0+255),b
 15960  00460E                     l10491:
 15961                           
 15962                           ; BSR set to: 0
 15963                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 15964  00460E  6A1D               	clrf	_cdc_rx_len,c
 15965  004610  D010               	goto	l10497
 15966  004612                     l10493:
 15967                           
 15968                           ; BSR set to: 0
 15969                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 15970  004612  0E40               	movlw	64	;volatile
 15971  004614  241D               	addwf	_cdc_rx_len,w,c
 15972  004616  6ED9               	movwf	fsr2l,c
 15973  004618  6ADA               	clrf	fsr2h,c
 15974  00461A  0E05               	movlw	5	;volatile
 15975  00461C  22DA               	addwfc	fsr2h,f,c
 15976  00461E  501D               	movf	_cdc_rx_len,w,c
 15977  004620  0100               	movlb	0	; () banked
 15978  004622  25CD               	addwf	getsUSBUSART@buffer& (0+255),w,b
 15979  004624  6EE1               	movwf	fsr1l,c
 15980  004626  0E00               	movlw	0
 15981  004628  21CE               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 15982  00462A  6EE2               	movwf	fsr1h,c
 15983  00462C  CFDF FFE7          	movff	indf2,indf1
 15984                           
 15985                           ; BSR set to: 0
 15986  004630  2A1D               	incf	_cdc_rx_len,f,c
 15987  004632                     l10497:
 15988                           
 15989                           ; BSR set to: 0
 15990  004632  51CF               	movf	getsUSBUSART@len& (0+255),w,b
 15991  004634  5C1D               	subwf	_cdc_rx_len,w,c
 15992  004636  E3ED               	bnc	l10493
 15993                           
 15994                           ; BSR set to: 0
 15995                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 15996  004638  6BC6               	clrf	USBTransferOnePacket@dir& (0+255),b
 15997  00463A  0E05               	movlw	5	;volatile
 15998  00463C  0100               	movlb	0	; () banked
 15999  00463E  6FC8               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 16000  004640  0E40               	movlw	64	;volatile
 16001  004642  6FC7               	movwf	USBTransferOnePacket@data& (0+255),b
 16002  004644  6FC9               	movwf	USBTransferOnePacket@len& (0+255),b
 16003  004646  0E02               	movlw	2
 16004  004648  ECC4  F023         	call	_USBTransferOnePacket
 16005  00464C  C0C6  F078         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 16006  004650  C0C7  F079         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 16007  004654                     l10501:
 16008                           
 16009                           ; BSR set to: 0
 16010                           ;usb_device_cdc.c: 457: }
 16011                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 16012  004654  501D               	movf	_cdc_rx_len,w,c
 16013                           
 16014                           ; BSR set to: 0
 16015  004656  0012               	return	
 16016  004658                     __end_of_getsUSBUSART:
 16017                           	opt stack 0
 16018                           tblptru	equ	0xFF8
 16019                           tblptrh	equ	0xFF7
 16020                           tblptrl	equ	0xFF6
 16021                           tablat	equ	0xFF5
 16022                           prodl	equ	0xFF3
 16023                           intcon	equ	0xFF2
 16024                           postinc0	equ	0xFEE
 16025                           wreg	equ	0xFE8
 16026                           indf1	equ	0xFE7
 16027                           postdec1	equ	0xFE5
 16028                           fsr1h	equ	0xFE2
 16029                           fsr1l	equ	0xFE1
 16030                           indf2	equ	0xFDF
 16031                           fsr2h	equ	0xFDA
 16032                           fsr2l	equ	0xFD9
 16033                           status	equ	0xFD8
 16034                           
 16035 ;; *************** function _USBapp_getrxByteFlag *****************
 16036 ;; Defined at:
 16037 ;;		line 231 in file "../Includes/Board/USBapp.c"
 16038 ;; Parameters:    Size  Location     Type
 16039 ;;		None
 16040 ;; Auto vars:     Size  Location     Type
 16041 ;;		None
 16042 ;; Return value:  Size  Location     Type
 16043 ;;                  1    wreg      unsigned char 
 16044 ;; Registers used:
 16045 ;;		wreg, status,2
 16046 ;; Tracked objects:
 16047 ;;		On entry : F/0
 16048 ;;		On exit  : F/0
 16049 ;;		Unchanged: F/0
 16050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16051 ;;      Params:         0       0       0       0       0       0       0       0       0
 16052 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16053 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16054 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16055 ;;Total ram usage:        0 bytes
 16056 ;; Hardware stack levels used:    1
 16057 ;; Hardware stack levels required when called:   11
 16058 ;; This function calls:
 16059 ;;		Nothing
 16060 ;; This function is called by:
 16061 ;;		_USBapp_DeviceCdcEmulatorHandler
 16062 ;; This function uses a non-reentrant model
 16063 ;;
 16064                           
 16065                           	psect	text63
 16066  0033C6                     __ptext63:
 16067                           	opt stack 0
 16068  0033C6                     _USBapp_getrxByteFlag:
 16069                           	opt stack 17
 16070                           
 16071                           ; BSR set to: 0
 16072                           ;USBapp.c: 233: return rxByteFlag;
 16073                           
 16074                           ; BSR set to: 0
 16075                           ;incstack = 0
 16076  0033C6  5026               	movf	_rxByteFlag,w,c	;volatile
 16077                           
 16078                           ; BSR set to: 0
 16079  0033C8  0012               	return	
 16080  0033CA                     __end_of_USBapp_getrxByteFlag:
 16081                           	opt stack 0
 16082                           tblptru	equ	0xFF8
 16083                           tblptrh	equ	0xFF7
 16084                           tblptrl	equ	0xFF6
 16085                           tablat	equ	0xFF5
 16086                           prodl	equ	0xFF3
 16087                           intcon	equ	0xFF2
 16088                           postinc0	equ	0xFEE
 16089                           wreg	equ	0xFE8
 16090                           indf1	equ	0xFE7
 16091                           postdec1	equ	0xFE5
 16092                           fsr1h	equ	0xFE2
 16093                           fsr1l	equ	0xFE1
 16094                           indf2	equ	0xFDF
 16095                           fsr2h	equ	0xFDA
 16096                           fsr2l	equ	0xFD9
 16097                           status	equ	0xFD8
 16098                           
 16099 ;; *************** function _MOTEapp_setResponseReady *****************
 16100 ;; Defined at:
 16101 ;;		line 1220 in file "../Includes/Board/MOTEapp.c"
 16102 ;; Parameters:    Size  Location     Type
 16103 ;;		None
 16104 ;; Auto vars:     Size  Location     Type
 16105 ;;		None
 16106 ;; Return value:  Size  Location     Type
 16107 ;;		None               void
 16108 ;; Registers used:
 16109 ;;		None
 16110 ;; Tracked objects:
 16111 ;;		On entry : F/0
 16112 ;;		On exit  : F/0
 16113 ;;		Unchanged: F/0
 16114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16115 ;;      Params:         0       0       0       0       0       0       0       0       0
 16116 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16117 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16118 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16119 ;;Total ram usage:        0 bytes
 16120 ;; Hardware stack levels used:    1
 16121 ;; Hardware stack levels required when called:   11
 16122 ;; This function calls:
 16123 ;;		Nothing
 16124 ;; This function is called by:
 16125 ;;		_USBapp_DeviceCdcEmulatorHandler
 16126 ;; This function uses a non-reentrant model
 16127 ;;
 16128                           
 16129                           	psect	text64
 16130  001004                     __ptext64:
 16131                           	opt stack 0
 16132  001004                     _MOTEapp_setResponseReady:
 16133                           	opt stack 17
 16134                           
 16135                           ; BSR set to: 0
 16136                           
 16137                           ; BSR set to: 0
 16138                           ;incstack = 0
 16139  001004  0012               	return	
 16140  001006                     __end_of_MOTEapp_setResponseReady:
 16141                           	opt stack 0
 16142                           tblptru	equ	0xFF8
 16143                           tblptrh	equ	0xFF7
 16144                           tblptrl	equ	0xFF6
 16145                           tablat	equ	0xFF5
 16146                           prodl	equ	0xFF3
 16147                           intcon	equ	0xFF2
 16148                           postinc0	equ	0xFEE
 16149                           wreg	equ	0xFE8
 16150                           indf1	equ	0xFE7
 16151                           postdec1	equ	0xFE5
 16152                           fsr1h	equ	0xFE2
 16153                           fsr1l	equ	0xFE1
 16154                           indf2	equ	0xFDF
 16155                           fsr2h	equ	0xFDA
 16156                           fsr2l	equ	0xFD9
 16157                           status	equ	0xFD8
 16158                           
 16159 ;; *************** function _EUSART_Write *****************
 16160 ;; Defined at:
 16161 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 16162 ;; Parameters:    Size  Location     Type
 16163 ;;  txData          1    wreg     unsigned char 
 16164 ;; Auto vars:     Size  Location     Type
 16165 ;;  txData          1    0[BANK0 ] unsigned char 
 16166 ;; Return value:  Size  Location     Type
 16167 ;;		None               void
 16168 ;; Registers used:
 16169 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16170 ;; Tracked objects:
 16171 ;;		On entry : 0/0
 16172 ;;		On exit  : 0/0
 16173 ;;		Unchanged: 0/0
 16174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16175 ;;      Params:         0       0       0       0       0       0       0       0       0
 16176 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16177 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16178 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16179 ;;Total ram usage:        1 bytes
 16180 ;; Hardware stack levels used:    1
 16181 ;; Hardware stack levels required when called:   11
 16182 ;; This function calls:
 16183 ;;		Nothing
 16184 ;; This function is called by:
 16185 ;;		_EndLine
 16186 ;;		_sendCommand
 16187 ;;		_sendDataCommand
 16188 ;;		_USBapp_DeviceCdcEmulatorHandler
 16189 ;; This function uses a non-reentrant model
 16190 ;;
 16191                           
 16192                           	psect	text65
 16193  0038F2                     __ptext65:
 16194                           	opt stack 0
 16195  0038F2                     _EUSART_Write:
 16196                           	opt stack 14
 16197                           
 16198                           ; BSR set to: 0
 16199                           ;incstack = 0
 16200                           ;EUSART_Write@txData stored from wreg
 16201  0038F2  0100               	movlb	0	; () banked
 16202  0038F4  6FC6               	movwf	EUSART_Write@txData& (0+255),b
 16203  0038F6                     l9779:
 16204  0038F6  5023               	movf	_eusartTxBufferRemaining,w,c	;volatile
 16205  0038F8  E0FE               	bz	l9779
 16206                           
 16207                           ;eusart.c: 143: }
 16208                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 16209  0038FA  B89D               	btfsc	3997,4,c	;volatile
 16210  0038FC  D003               	goto	l1058
 16211                           
 16212                           ;eusart.c: 146: {
 16213                           ;eusart.c: 147: TXREG = txData;
 16214  0038FE  C0C6  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 16215                           
 16216                           ;eusart.c: 148: }
 16217  003902  D010               	goto	l9793
 16218  003904                     l1058:
 16219                           
 16220                           ;eusart.c: 149: else
 16221                           ;eusart.c: 150: {
 16222                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 16223  003904  989D               	bcf	3997,4,c	;volatile
 16224                           
 16225                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 16226  003906  0E00               	movlw	low _eusartTxBuffer
 16227  003908  2424               	addwf	_eusartTxHead,w,c
 16228  00390A  6ED9               	movwf	fsr2l,c
 16229  00390C  6ADA               	clrf	fsr2h,c
 16230  00390E  0E02               	movlw	high _eusartTxBuffer
 16231  003910  22DA               	addwfc	fsr2h,f,c
 16232  003912  0100               	movlb	0	; () banked
 16233  003914  C0C6  FFDF         	movff	EUSART_Write@txData,indf2
 16234                           
 16235                           ; BSR set to: 0
 16236  003918  2A24               	incf	_eusartTxHead,f,c
 16237                           
 16238                           ; BSR set to: 0
 16239                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 16240  00391A  0E3F               	movlw	63
 16241  00391C  6424               	cpfsgt	_eusartTxHead,c
 16242  00391E  D001               	goto	l9791
 16243                           
 16244                           ; BSR set to: 0
 16245                           ;eusart.c: 154: {
 16246                           ;eusart.c: 155: eusartTxHead = 0;
 16247  003920  6A24               	clrf	_eusartTxHead,c
 16248  003922                     l9791:
 16249                           
 16250                           ; BSR set to: 0
 16251                           ;eusart.c: 156: }
 16252                           ;eusart.c: 157: eusartTxBufferRemaining--;
 16253  003922  0623               	decf	_eusartTxBufferRemaining,f,c	;volatile
 16254  003924                     l9793:
 16255                           
 16256                           ;eusart.c: 158: }
 16257                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 16258  003924  889D               	bsf	3997,4,c	;volatile
 16259  003926  0012               	return	
 16260  003928                     __end_of_EUSART_Write:
 16261                           	opt stack 0
 16262                           tblptru	equ	0xFF8
 16263                           tblptrh	equ	0xFF7
 16264                           tblptrl	equ	0xFF6
 16265                           tablat	equ	0xFF5
 16266                           prodl	equ	0xFF3
 16267                           intcon	equ	0xFF2
 16268                           postinc0	equ	0xFEE
 16269                           wreg	equ	0xFE8
 16270                           indf1	equ	0xFE7
 16271                           postdec1	equ	0xFE5
 16272                           fsr1h	equ	0xFE2
 16273                           fsr1l	equ	0xFE1
 16274                           indf2	equ	0xFDF
 16275                           fsr2h	equ	0xFDA
 16276                           fsr2l	equ	0xFD9
 16277                           status	equ	0xFD8
 16278                           
 16279 ;; *************** function _EUSART_Read *****************
 16280 ;; Defined at:
 16281 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 16282 ;; Parameters:    Size  Location     Type
 16283 ;;		None
 16284 ;; Auto vars:     Size  Location     Type
 16285 ;;  readValue       1    0[BANK0 ] unsigned char 
 16286 ;; Return value:  Size  Location     Type
 16287 ;;                  1    wreg      unsigned char 
 16288 ;; Registers used:
 16289 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16290 ;; Tracked objects:
 16291 ;;		On entry : 0/0
 16292 ;;		On exit  : F/0
 16293 ;;		Unchanged: 0/0
 16294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16295 ;;      Params:         0       0       0       0       0       0       0       0       0
 16296 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16297 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16298 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16299 ;;Total ram usage:        1 bytes
 16300 ;; Hardware stack levels used:    1
 16301 ;; Hardware stack levels required when called:   11
 16302 ;; This function calls:
 16303 ;;		Nothing
 16304 ;; This function is called by:
 16305 ;;		_MOTEapp_getModemResponse
 16306 ;;		_USBapp_DeviceCdcEmulatorHandler
 16307 ;; This function uses a non-reentrant model
 16308 ;;
 16309                           
 16310                           	psect	text66
 16311  003862                     __ptext66:
 16312                           	opt stack 0
 16313  003862                     _EUSART_Read:
 16314                           	opt stack 14
 16315                           
 16316                           ;eusart.c: 121: while(0 == eusartRxCount)
 16317                           
 16318                           ;incstack = 0
 16319  003862  D001               	goto	l9797
 16320  003864                     l1049:
 16321                           
 16322                           ; BSR set to: 0
 16323                           ;eusart.c: 122: {
 16324                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 16325  003864  8E89               	bsf	3977,7,c	;volatile
 16326  003866                     l9797:
 16327  003866  0100               	movlb	0	; () banked
 16328  003868  5190               	movf	_eusartRxCount& (0+255),w,b	;volatile
 16329  00386A  E0FC               	bz	l1049
 16330                           
 16331                           ; BSR set to: 0
 16332                           ;eusart.c: 124: }
 16333                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 16334  00386C  9A9D               	bcf	3997,5,c	;volatile
 16335                           
 16336                           ; BSR set to: 0
 16337                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 16338  00386E  0E00               	movlw	low _eusartRxBuffer
 16339  003870  2422               	addwf	_eusartRxTail,w,c
 16340  003872  6ED9               	movwf	fsr2l,c
 16341  003874  6ADA               	clrf	fsr2h,c
 16342  003876  0E01               	movlw	high _eusartRxBuffer
 16343  003878  22DA               	addwfc	fsr2h,f,c
 16344  00387A  50DF               	movf	indf2,w,c
 16345  00387C  6FC6               	movwf	EUSART_Read@readValue& (0+255),b
 16346                           
 16347                           ; BSR set to: 0
 16348  00387E  2A22               	incf	_eusartRxTail,f,c
 16349                           
 16350                           ; BSR set to: 0
 16351                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 16352  003880  0E3F               	movlw	63
 16353  003882  6422               	cpfsgt	_eusartRxTail,c
 16354  003884  D001               	goto	l9807
 16355                           
 16356                           ; BSR set to: 0
 16357                           ;eusart.c: 130: {
 16358                           ;eusart.c: 131: eusartRxTail = 0;
 16359  003886  6A22               	clrf	_eusartRxTail,c
 16360  003888                     l9807:
 16361                           
 16362                           ; BSR set to: 0
 16363                           ;eusart.c: 132: }
 16364                           ;eusart.c: 133: eusartRxCount--;
 16365  003888  0790               	decf	_eusartRxCount& (0+255),f,b	;volatile
 16366                           
 16367                           ; BSR set to: 0
 16368                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 16369  00388A  8A9D               	bsf	3997,5,c	;volatile
 16370                           
 16371                           ; BSR set to: 0
 16372                           ;eusart.c: 136: return readValue;
 16373  00388C  51C6               	movf	EUSART_Read@readValue& (0+255),w,b
 16374                           
 16375                           ; BSR set to: 0
 16376  00388E  0012               	return	
 16377  003890                     __end_of_EUSART_Read:
 16378                           	opt stack 0
 16379                           tblptru	equ	0xFF8
 16380                           tblptrh	equ	0xFF7
 16381                           tblptrl	equ	0xFF6
 16382                           tablat	equ	0xFF5
 16383                           prodl	equ	0xFF3
 16384                           intcon	equ	0xFF2
 16385                           postinc0	equ	0xFEE
 16386                           wreg	equ	0xFE8
 16387                           indf1	equ	0xFE7
 16388                           postdec1	equ	0xFE5
 16389                           fsr1h	equ	0xFE2
 16390                           fsr1l	equ	0xFE1
 16391                           indf2	equ	0xFDF
 16392                           fsr2h	equ	0xFDA
 16393                           fsr2l	equ	0xFD9
 16394                           status	equ	0xFD8
 16395                           
 16396 ;; *************** function _CDCTxService *****************
 16397 ;; Defined at:
 16398 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 16399 ;; Parameters:    Size  Location     Type
 16400 ;;		None
 16401 ;; Auto vars:     Size  Location     Type
 16402 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
 16403 ;;  i               1    9[BANK0 ] unsigned char 
 16404 ;; Return value:  Size  Location     Type
 16405 ;;		None               void
 16406 ;; Registers used:
 16407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16408 ;; Tracked objects:
 16409 ;;		On entry : E/0
 16410 ;;		On exit  : F/0
 16411 ;;		Unchanged: 0/0
 16412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16413 ;;      Params:         0       0       0       0       0       0       0       0       0
 16414 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16415 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16416 ;;      Totals:         0       4       0       0       0       0       0       0       0
 16417 ;;Total ram usage:        4 bytes
 16418 ;; Hardware stack levels used:    1
 16419 ;; Hardware stack levels required when called:   12
 16420 ;; This function calls:
 16421 ;;		_USBTransferOnePacket
 16422 ;; This function is called by:
 16423 ;;		_USBapp_DeviceCdcEmulatorHandler
 16424 ;; This function uses a non-reentrant model
 16425 ;;
 16426                           
 16427                           	psect	text67
 16428  005622                     __ptext67:
 16429                           	opt stack 0
 16430  005622                     _CDCTxService:
 16431                           	opt stack 16
 16432                           
 16433                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 16434                           ;usb_device_cdc.c: 786: uint8_t i;
 16435                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 16436                           
 16437                           ; BSR set to: 0
 16438                           ;incstack = 0
 16439  005622  94A3               	bcf	4003,2,c	;volatile
 16440                           
 16441                           ;usb_device_cdc.c: 790: {};
 16442                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 16443  005624  0100               	movlb	0	; () banked
 16444  005626  5177               	movf	(_CDCDataInHandle+1)& (0+255),w,b
 16445  005628  1176               	iorwf	_CDCDataInHandle& (0+255),w,b
 16446  00562A  E009               	bz	l1920
 16447                           
 16448                           ; BSR set to: 0
 16449  00562C  C076  FFD9         	movff	_CDCDataInHandle,fsr2l
 16450  005630  C077  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 16451  005634  0E01               	movlw	1
 16452  005636  AEDF               	btfss	indf2,7,c
 16453  005638  0E00               	movlw	0
 16454  00563A  6FCD               	movwf	_CDCTxService$5784& (0+255),b
 16455  00563C  D001               	goto	L72
 16456  00563E                     l1920:
 16457                           
 16458                           ; BSR set to: 0
 16459  00563E  6BCD               	clrf	_CDCTxService$5784& (0+255),b
 16460  005640                     L72:
 16461  005640  6BCE               	clrf	(_CDCTxService$5784+1)& (0+255),b
 16462                           
 16463                           ; BSR set to: 0
 16464  005642  51CE               	movf	(_CDCTxService$5784+1)& (0+255),w,b
 16465  005644  11CD               	iorwf	_CDCTxService$5784& (0+255),w,b
 16466  005646  E002               	bz	l10531
 16467                           
 16468                           ; BSR set to: 0
 16469                           ;usb_device_cdc.c: 793: {
 16470                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 16471  005648  84A3               	bsf	4003,2,c	;volatile
 16472                           
 16473                           ;usb_device_cdc.c: 795: return;
 16474  00564A  0012               	return	
 16475  00564C                     l10531:
 16476                           
 16477                           ; BSR set to: 0
 16478                           ;usb_device_cdc.c: 796: }
 16479                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 16480  00564C  501E               	movf	_cdc_trf_state,w,c
 16481  00564E  0A03               	xorlw	3
 16482  005650  B4D8               	btfsc	status,2,c
 16483                           
 16484                           ; BSR set to: 0
 16485                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 16486  005652  6A1E               	clrf	_cdc_trf_state,c
 16487                           
 16488                           ; BSR set to: 0
 16489                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 16490  005654  661E               	tstfsz	_cdc_trf_state,c
 16491  005656  D002               	goto	l10537
 16492                           
 16493                           ; BSR set to: 0
 16494                           ;usb_device_cdc.c: 810: {
 16495                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 16496  005658  84A3               	bsf	4003,2,c	;volatile
 16497                           
 16498                           ;usb_device_cdc.c: 812: return;
 16499  00565A  0012               	return	
 16500  00565C                     l10537:
 16501                           
 16502                           ; BSR set to: 0
 16503                           ;usb_device_cdc.c: 813: }
 16504                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 16505  00565C  501E               	movf	_cdc_trf_state,w,c
 16506  00565E  0A02               	xorlw	2
 16507  005660  E10F               	bnz	l10543
 16508                           
 16509                           ; BSR set to: 0
 16510                           ;usb_device_cdc.c: 819: {
 16511                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 16512  005662  0E01               	movlw	1
 16513  005664  6FC6               	movwf	USBTransferOnePacket@dir& (0+255),b
 16514  005666  6BC8               	clrf	(USBTransferOnePacket@data+1)& (0+255),b
 16515  005668  6BC7               	clrf	USBTransferOnePacket@data& (0+255),b
 16516  00566A  6BC9               	clrf	USBTransferOnePacket@len& (0+255),b
 16517  00566C  0E02               	movlw	2
 16518  00566E  ECC4  F023         	call	_USBTransferOnePacket
 16519  005672  C0C6  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 16520  005676  C0C7  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 16521                           
 16522                           ; BSR set to: 0
 16523                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 16524  00567A  0E03               	movlw	3
 16525  00567C  6E1E               	movwf	_cdc_trf_state,c
 16526                           
 16527                           ;usb_device_cdc.c: 823: }
 16528  00567E  D04F               	goto	l10585
 16529  005680                     l10543:
 16530                           
 16531                           ; BSR set to: 0
 16532                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 16533  005680  041E               	decf	_cdc_trf_state,w,c
 16534  005682  E14D               	bnz	l10585
 16535                           
 16536                           ; BSR set to: 0
 16537                           ;usb_device_cdc.c: 825: {
 16538                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 16539  005684  0E40               	movlw	64
 16540  005686  658E               	cpfsgt	_cdc_tx_len& (0+255),b
 16541  005688  D002               	goto	l1929
 16542                           
 16543                           ; BSR set to: 0
 16544                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 16545  00568A  6FD0               	movwf	CDCTxService@byte_to_send& (0+255),b
 16546  00568C  D002               	goto	l10549
 16547  00568E                     l1929:
 16548                           
 16549                           ; BSR set to: 0
 16550                           ;usb_device_cdc.c: 831: else
 16551                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 16552  00568E  C08E  F0D0         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 16553  005692                     l10549:
 16554                           
 16555                           ; BSR set to: 0
 16556                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 16557  005692  51D0               	movf	CDCTxService@byte_to_send& (0+255),w,b
 16558  005694  5F8E               	subwf	_cdc_tx_len& (0+255),f,b
 16559                           
 16560                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 16561  005696  0E05               	movlw	5	;volatile
 16562  005698  0100               	movlb	0	; () banked
 16563  00569A  6F71               	movwf	(_pCDCDst+1)& (0+255),b
 16564  00569C  0E00               	movlw	0	;volatile
 16565  00569E  6B70               	clrf	_pCDCDst& (0+255),b
 16566                           
 16567                           ; BSR set to: 0
 16568                           ;usb_device_cdc.c: 841: i = byte_to_send;
 16569  0056A0  C0D0  F0CF         	movff	CDCTxService@byte_to_send,CDCTxService@i
 16570                           
 16571                           ; BSR set to: 0
 16572                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 16573  0056A4  678D               	tstfsz	_cdc_mem_type& (0+255),b
 16574  0056A6  D022               	goto	l10575
 16575  0056A8  D00F               	goto	l10565
 16576  0056AA                     l10557:
 16577                           
 16578                           ; BSR set to: 0
 16579                           ;usb_device_cdc.c: 845: {
 16580                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 16581  0056AA  C073  FFD9         	movff	_pCDCSrc,fsr2l
 16582  0056AE  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 16583  0056B2  C070  FFE1         	movff	_pCDCDst,fsr1l
 16584  0056B6  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 16585  0056BA  CFDF FFE7          	movff	indf2,indf1
 16586                           
 16587                           ; BSR set to: 0
 16588                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 16589  0056BE  4B70               	infsnz	_pCDCDst& (0+255),f,b
 16590  0056C0  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 16591                           
 16592                           ; BSR set to: 0
 16593                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 16594  0056C2  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 16595  0056C4  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 16596                           
 16597                           ; BSR set to: 0
 16598                           ;usb_device_cdc.c: 849: i--;
 16599  0056C6  07CF               	decf	CDCTxService@i& (0+255),f,b
 16600  0056C8                     l10565:
 16601                           
 16602                           ; BSR set to: 0
 16603  0056C8  67CF               	tstfsz	CDCTxService@i& (0+255),b
 16604  0056CA  D7EF               	goto	l10557
 16605  0056CC  D011               	goto	l1935
 16606  0056CE                     l10567:
 16607                           
 16608                           ; BSR set to: 0
 16609                           ;usb_device_cdc.c: 855: {
 16610                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 16611  0056CE  C073  FFD9         	movff	_pCDCSrc,fsr2l
 16612  0056D2  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 16613  0056D6  C070  FFE1         	movff	_pCDCDst,fsr1l
 16614  0056DA  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 16615  0056DE  CFDF FFE7          	movff	indf2,indf1
 16616                           
 16617                           ; BSR set to: 0
 16618                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 16619  0056E2  4B70               	infsnz	_pCDCDst& (0+255),f,b
 16620  0056E4  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 16621                           
 16622                           ; BSR set to: 0
 16623                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 16624  0056E6  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 16625  0056E8  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 16626                           
 16627                           ; BSR set to: 0
 16628                           ;usb_device_cdc.c: 859: i--;
 16629  0056EA  07CF               	decf	CDCTxService@i& (0+255),f,b
 16630  0056EC                     l10575:
 16631                           
 16632                           ; BSR set to: 0
 16633  0056EC  67CF               	tstfsz	CDCTxService@i& (0+255),b
 16634  0056EE  D7EF               	goto	l10567
 16635  0056F0                     l1935:
 16636                           
 16637                           ; BSR set to: 0
 16638                           ;usb_device_cdc.c: 860: }
 16639                           ;usb_device_cdc.c: 861: }
 16640                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 16641  0056F0  678E               	tstfsz	_cdc_tx_len& (0+255),b
 16642  0056F2  D006               	goto	l10583
 16643                           
 16644                           ; BSR set to: 0
 16645                           ;usb_device_cdc.c: 868: {
 16646                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 16647  0056F4  51D0               	movf	CDCTxService@byte_to_send& (0+255),w,b
 16648  0056F6  0A40               	xorlw	64
 16649                           
 16650                           ; BSR set to: 0
 16651                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 16652  0056F8  0E02               	movlw	2
 16653  0056FA  A4D8               	btfss	status,2,c
 16654                           
 16655                           ; BSR set to: 0
 16656                           ;usb_device_cdc.c: 871: else
 16657                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 16658  0056FC  0E03               	movlw	3
 16659  0056FE  6E1E               	movwf	_cdc_trf_state,c
 16660  005700                     l10583:
 16661                           
 16662                           ; BSR set to: 0
 16663                           ;usb_device_cdc.c: 873: }
 16664                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 16665  005700  0E01               	movlw	1
 16666  005702  6FC6               	movwf	USBTransferOnePacket@dir& (0+255),b
 16667  005704  0E05               	movlw	5	;volatile
 16668  005706  0100               	movlb	0	; () banked
 16669  005708  6FC8               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 16670  00570A  6BC7               	clrf	USBTransferOnePacket@data& (0+255),b
 16671  00570C  C0D0  F0C9         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 16672  005710  0E02               	movlw	2
 16673  005712  ECC4  F023         	call	_USBTransferOnePacket
 16674  005716  C0C6  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 16675  00571A  C0C7  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 16676  00571E                     l10585:
 16677                           
 16678                           ; BSR set to: 0
 16679                           ;usb_device_cdc.c: 876: }
 16680                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 16681  00571E  84A3               	bsf	4003,2,c	;volatile
 16682                           
 16683                           ; BSR set to: 0
 16684  005720  0012               	return	
 16685  005722                     __end_of_CDCTxService:
 16686                           	opt stack 0
 16687                           tblptru	equ	0xFF8
 16688                           tblptrh	equ	0xFF7
 16689                           tblptrl	equ	0xFF6
 16690                           tablat	equ	0xFF5
 16691                           prodl	equ	0xFF3
 16692                           intcon	equ	0xFF2
 16693                           postinc0	equ	0xFEE
 16694                           wreg	equ	0xFE8
 16695                           indf1	equ	0xFE7
 16696                           postdec1	equ	0xFE5
 16697                           fsr1h	equ	0xFE2
 16698                           fsr1l	equ	0xFE1
 16699                           indf2	equ	0xFDF
 16700                           fsr2h	equ	0xFDA
 16701                           fsr2l	equ	0xFD9
 16702                           status	equ	0xFD8
 16703                           
 16704 ;; *************** function _USBTransferOnePacket *****************
 16705 ;; Defined at:
 16706 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 16707 ;; Parameters:    Size  Location     Type
 16708 ;;  ep              1    wreg     unsigned char 
 16709 ;;  dir             1    0[BANK0 ] unsigned char 
 16710 ;;  data            2    1[BANK0 ] PTR unsigned char 
 16711 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 16712 ;;  len             1    3[BANK0 ] unsigned char 
 16713 ;; Auto vars:     Size  Location     Type
 16714 ;;  ep              1    4[BANK0 ] unsigned char 
 16715 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 16716 ;;		 -> BDT(48), NULL(0), 
 16717 ;; Return value:  Size  Location     Type
 16718 ;;                  2    0[BANK0 ] PTR void 
 16719 ;; Registers used:
 16720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16721 ;; Tracked objects:
 16722 ;;		On entry : F/0
 16723 ;;		On exit  : F/0
 16724 ;;		Unchanged: 0/0
 16725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16726 ;;      Params:         0       4       0       0       0       0       0       0       0
 16727 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16728 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16729 ;;      Totals:         0       7       0       0       0       0       0       0       0
 16730 ;;Total ram usage:        7 bytes
 16731 ;; Hardware stack levels used:    1
 16732 ;; Hardware stack levels required when called:   11
 16733 ;; This function calls:
 16734 ;;		Nothing
 16735 ;; This function is called by:
 16736 ;;		_getsUSBUSART
 16737 ;;		_CDCTxService
 16738 ;; This function uses a non-reentrant model
 16739 ;;
 16740                           
 16741                           	psect	text68
 16742  004788                     __ptext68:
 16743                           	opt stack 0
 16744  004788                     _USBTransferOnePacket:
 16745                           	opt stack 16
 16746                           
 16747                           ; BSR set to: 0
 16748                           ;incstack = 0
 16749                           ;USBTransferOnePacket@ep stored from wreg
 16750  004788  6FCA               	movwf	USBTransferOnePacket@ep& (0+255),b
 16751                           
 16752                           ; BSR set to: 0
 16753                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 16754                           ;usb_device.c: 762: if(dir != 0)
 16755  00478A  51C6               	movf	USBTransferOnePacket@dir& (0+255),w,b
 16756  00478C  E005               	bz	l10065
 16757                           
 16758                           ; BSR set to: 0
 16759                           ;usb_device.c: 763: {
 16760                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 16761  00478E  51CA               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16762  004790  0D02               	mullw	2
 16763  004792  50F3               	movf	prodl,w,c
 16764  004794  0F09               	addlw	low _pBDTEntryIn
 16765  004796  D004               	goto	L74
 16766  004798                     l10065:
 16767                           
 16768                           ; BSR set to: 0
 16769                           ;usb_device.c: 767: else
 16770                           ;usb_device.c: 768: {
 16771                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 16772  004798  51CA               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16773  00479A  0D02               	mullw	2
 16774  00479C  50F3               	movf	prodl,w,c
 16775  00479E  0F60               	addlw	low _pBDTEntryOut
 16776  0047A0                     L74:
 16777  0047A0  6ED9               	movwf	fsr2l,c
 16778  0047A2  6ADA               	clrf	fsr2h,c
 16779  0047A4  CFDE F0CB          	movff	postinc2,USBTransferOnePacket@handle
 16780  0047A8  CFDD F0CC          	movff	postdec2,USBTransferOnePacket@handle+1
 16781                           
 16782                           ; BSR set to: 0
 16783                           ;usb_device.c: 771: }
 16784                           ;usb_device.c: 775: if(handle == 0)
 16785  0047AC  51CC               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16786  0047AE  11CB               	iorwf	USBTransferOnePacket@handle& (0+255),w,b
 16787  0047B0  E103               	bnz	l10071
 16788                           
 16789                           ; BSR set to: 0
 16790                           ;usb_device.c: 776: {
 16791                           ;usb_device.c: 777: return 0;
 16792  0047B2  6BC6               	clrf	?_USBTransferOnePacket& (0+255),b
 16793  0047B4  6BC7               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
 16794  0047B6  0012               	return	
 16795  0047B8                     l10071:
 16796                           
 16797                           ; BSR set to: 0
 16798                           ;usb_device.c: 778: }
 16799                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 16800  0047B8  EE20 F002          	lfsr	2,2
 16801  0047BC  51CB               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16802  0047BE  26D9               	addwf	fsr2l,f,c
 16803  0047C0  51CC               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16804  0047C2  22DA               	addwfc	fsr2h,f,c
 16805  0047C4  C0C7  FFDE         	movff	USBTransferOnePacket@data,postinc2
 16806  0047C8  C0C8  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 16807                           
 16808                           ;usb_device.c: 781: handle->CNT = len;
 16809  0047CC  EE20 F001          	lfsr	2,1
 16810  0047D0  51CB               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16811  0047D2  26D9               	addwf	fsr2l,f,c
 16812  0047D4  51CC               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16813  0047D6  22DA               	addwfc	fsr2h,f,c
 16814  0047D8  C0C9  FFDF         	movff	USBTransferOnePacket@len,indf2
 16815                           
 16816                           ; BSR set to: 0
 16817                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 16818  0047DC  C0CB  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16819  0047E0  C0CC  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16820  0047E4  0E40               	movlw	64
 16821  0047E6  16DF               	andwf	indf2,f,c
 16822                           
 16823                           ; BSR set to: 0
 16824                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 16825  0047E8  C0CB  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16826  0047EC  C0CC  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16827  0047F0  0E00               	movlw	0
 16828  0047F2  86DB               	bsf	plusw2,3,c
 16829                           
 16830                           ; BSR set to: 0
 16831                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 16832  0047F4  C0CB  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16833  0047F8  C0CC  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16834  0047FC  8EDB               	bsf	plusw2,7,c
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;usb_device.c: 787: if(dir != 0)
 16838  0047FE  51C6               	movf	USBTransferOnePacket@dir& (0+255),w,b
 16839  004800  E005               	bz	l10083
 16840                           
 16841                           ; BSR set to: 0
 16842                           ;usb_device.c: 788: {
 16843                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 16844  004802  51CA               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16845  004804  0D02               	mullw	2
 16846  004806  50F3               	movf	prodl,w,c
 16847  004808  0F09               	addlw	low _pBDTEntryIn
 16848  00480A  D004               	goto	L75
 16849  00480C                     l10083:
 16850                           
 16851                           ; BSR set to: 0
 16852                           ;usb_device.c: 792: else
 16853                           ;usb_device.c: 793: {
 16854                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 16855  00480C  51CA               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16856  00480E  0D02               	mullw	2
 16857  004810  50F3               	movf	prodl,w,c
 16858  004812  0F60               	addlw	low _pBDTEntryOut
 16859  004814                     L75:
 16860  004814  6ED9               	movwf	fsr2l,c
 16861  004816  6ADA               	clrf	fsr2h,c
 16862  004818  0E04               	movlw	4
 16863  00481A  1ADF               	xorwf	indf2,f,c
 16864                           
 16865                           ; BSR set to: 0
 16866                           ;usb_device.c: 796: }
 16867                           ;usb_device.c: 797: return (void*)handle;
 16868  00481C  C0CC  F0C7         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 16869  004820  C0CB  F0C6         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 16870                           
 16871                           ; BSR set to: 0
 16872  004824  0C04               	retlw	4
 16873  004826                     __end_of_USBTransferOnePacket:
 16874                           	opt stack 0
 16875                           tblptru	equ	0xFF8
 16876                           tblptrh	equ	0xFF7
 16877                           tblptrl	equ	0xFF6
 16878                           tablat	equ	0xFF5
 16879                           prodl	equ	0xFF3
 16880                           intcon	equ	0xFF2
 16881                           postinc0	equ	0xFEE
 16882                           wreg	equ	0xFE8
 16883                           indf1	equ	0xFE7
 16884                           postdec1	equ	0xFE5
 16885                           fsr1h	equ	0xFE2
 16886                           fsr1l	equ	0xFE1
 16887                           indf2	equ	0xFDF
 16888                           postinc2	equ	0xFDE
 16889                           postdec2	equ	0xFDD
 16890                           plusw2	equ	0xFDB
 16891                           fsr2h	equ	0xFDA
 16892                           fsr2l	equ	0xFD9
 16893                           status	equ	0xFD8
 16894                           
 16895 ;; *************** function _USBDeviceInit *****************
 16896 ;; Defined at:
 16897 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 16898 ;; Parameters:    Size  Location     Type
 16899 ;;		None
 16900 ;; Auto vars:     Size  Location     Type
 16901 ;;  i               1    8[BANK0 ] unsigned char 
 16902 ;; Return value:  Size  Location     Type
 16903 ;;		None               void
 16904 ;; Registers used:
 16905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16906 ;; Tracked objects:
 16907 ;;		On entry : F/0
 16908 ;;		On exit  : F/0
 16909 ;;		Unchanged: 0/0
 16910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16911 ;;      Params:         0       0       0       0       0       0       0       0       0
 16912 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16913 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16914 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16915 ;;Total ram usage:        1 bytes
 16916 ;; Hardware stack levels used:    1
 16917 ;; Hardware stack levels required when called:   12
 16918 ;; This function calls:
 16919 ;;		_memset
 16920 ;; This function is called by:
 16921 ;;		_main
 16922 ;; This function uses a non-reentrant model
 16923 ;;
 16924                           
 16925                           	psect	text69
 16926  0051B4                     __ptext69:
 16927                           	opt stack 0
 16928  0051B4                     _USBDeviceInit:
 16929                           	opt stack 18
 16930                           
 16931                           ; BSR set to: 0
 16932                           ;usb_device.c: 239: uint8_t i;
 16933                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 16934                           
 16935                           ; BSR set to: 0
 16936                           ;incstack = 0
 16937  0051B4  94A3               	bcf	4003,2,c	;volatile
 16938                           
 16939                           ;usb_device.c: 244: {UEIR = 0;};
 16940  0051B6  6A67               	clrf	3943,c	;volatile
 16941                           
 16942                           ;usb_device.c: 247: {UIR = 0;};
 16943  0051B8  6A65               	clrf	3941,c	;volatile
 16944                           
 16945                           ;usb_device.c: 250: UEP0 = 0;
 16946  0051BA  6A6A               	clrf	3946,c	;volatile
 16947                           
 16948                           ; BSR set to: 0
 16949                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 16950  0051BC  0E0F               	movlw	15	;volatile
 16951  0051BE  6FC7               	movwf	(memset@p1+1)& (0+255),b
 16952  0051C0  0E6B               	movlw	107	;volatile
 16953  0051C2  6FC6               	movwf	memset@p1& (0+255),b
 16954  0051C4  6BC9               	clrf	(memset@c+1)& (0+255),b
 16955  0051C6  6BC8               	clrf	memset@c& (0+255),b
 16956  0051C8  6BCB               	clrf	(memset@n+1)& (0+255),b
 16957  0051CA  0E02               	movlw	2
 16958  0051CC  6FCA               	movwf	memset@n& (0+255),b
 16959  0051CE  EC1A  F01C         	call	_memset	;wreg free
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16963  0051D2  0E16               	movlw	22
 16964  0051D4  6E62               	movwf	3938,c	;volatile
 16965                           
 16966                           ; BSR set to: 0
 16967  0051D6  0E9F               	movlw	159
 16968  0051D8  6E66               	movwf	3942,c	;volatile
 16969                           
 16970                           ; BSR set to: 0
 16971  0051DA  0E7B               	movlw	123
 16972  0051DC  6E64               	movwf	3940,c	;volatile
 16973                           
 16974                           ; BSR set to: 0
 16975                           ;usb_device.c: 257: ;
 16976                           ;usb_device.c: 260: ;
 16977                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16978  0051DE  6BCE               	clrf	USBDeviceInit@i& (0+255),b
 16979  0051E0                     l11925:
 16980                           
 16981                           ; BSR set to: 0
 16982                           ;usb_device.c: 264: {
 16983                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 16984  0051E0  51CE               	movf	USBDeviceInit@i& (0+255),w,b
 16985  0051E2  0D04               	mullw	4
 16986  0051E4  0E00               	movlw	0	;volatile
 16987  0051E6  24F3               	addwf	prodl,w,c
 16988  0051E8  6ED9               	movwf	fsr2l,c
 16989  0051EA  0E04               	movlw	4	;volatile
 16990  0051EC  20F4               	addwfc	prodh,w,c
 16991  0051EE  6EDA               	movwf	fsr2h,c
 16992  0051F0  6ADE               	clrf	postinc2,c
 16993  0051F2  6ADE               	clrf	postinc2,c
 16994  0051F4  6ADE               	clrf	postinc2,c
 16995  0051F6  6ADD               	clrf	postdec2,c
 16996                           
 16997                           ; BSR set to: 4
 16998  0051F8  0100               	movlb	0	; () banked
 16999  0051FA  2BCE               	incf	USBDeviceInit@i& (0+255),f,b
 17000                           
 17001                           ; BSR set to: 0
 17002  0051FC  0E0B               	movlw	11
 17003  0051FE  65CE               	cpfsgt	USBDeviceInit@i& (0+255),b
 17004  005200  D7EF               	goto	l11925
 17005                           
 17006                           ; BSR set to: 0
 17007                           ;usb_device.c: 266: }
 17008                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 17009  005202  8C60               	bsf	3936,6,c	;volatile
 17010                           
 17011                           ;usb_device.c: 272: UADDR = 0x00;
 17012  005204  6A63               	clrf	3939,c	;volatile
 17013                           
 17014                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 17015  005206  9860               	bcf	3936,4,c	;volatile
 17016                           
 17017                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 17018  005208  9C60               	bcf	3936,6,c	;volatile
 17019                           
 17020                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 17021  00520A  D005               	goto	l11939
 17022  00520C                     l11931:
 17023                           
 17024                           ; BSR set to: 0
 17025                           ;usb_device.c: 282: {
 17026                           ;usb_device.c: 283: (UIR &= 0xF7);
 17027  00520C  9665               	bcf	3941,3,c	;volatile
 17028                           
 17029                           ; BSR set to: 0
 17030                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 17031  00520E  6A2B               	clrf	_inPipes+3,c	;volatile
 17032                           
 17033                           ; BSR set to: 0
 17034                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 17035  005210  6A04               	clrf	_outPipes+3,c	;volatile
 17036                           
 17037                           ; BSR set to: 0
 17038                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 17039  005212  6A05               	clrf	_outPipes+4,c	;volatile
 17040  005214  6A06               	clrf	_outPipes+5,c	;volatile
 17041  005216                     l11939:
 17042                           
 17043                           ; BSR set to: 0
 17044  005216  B665               	btfsc	3941,3,c	;volatile
 17045  005218  D7F9               	goto	l11931
 17046                           
 17047                           ; BSR set to: 0
 17048                           ;usb_device.c: 288: }
 17049                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 17050  00521A  0E01               	movlw	1
 17051  00521C  6E1A               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 17052                           
 17053                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 17054  00521E  6E1B               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 17055                           
 17056                           ; BSR set to: 0
 17057                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 17058  005220  6B87               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17059                           
 17060                           ; BSR set to: 0
 17061                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 17062  005222  6B88               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17063                           
 17064                           ; BSR set to: 0
 17065                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 17066  005224  6B86               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 17067                           
 17068                           ; BSR set to: 0
 17069                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 17070  005226  6BCE               	clrf	USBDeviceInit@i& (0+255),b
 17071  005228                     l11955:
 17072                           
 17073                           ; BSR set to: 0
 17074                           ;usb_device.c: 302: {
 17075                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 17076  005228  51CE               	movf	USBDeviceInit@i& (0+255),w,b
 17077  00522A  0D02               	mullw	2
 17078  00522C  50F3               	movf	prodl,w,c
 17079  00522E  0F09               	addlw	low _pBDTEntryIn
 17080  005230  6ED9               	movwf	fsr2l,c
 17081  005232  6ADA               	clrf	fsr2h,c
 17082  005234  6ADE               	clrf	postinc2,c
 17083  005236  6ADD               	clrf	postdec2,c
 17084                           
 17085                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 17086  005238  51CE               	movf	USBDeviceInit@i& (0+255),w,b
 17087  00523A  0D02               	mullw	2
 17088  00523C  50F3               	movf	prodl,w,c
 17089  00523E  0F60               	addlw	low _pBDTEntryOut
 17090  005240  6ED9               	movwf	fsr2l,c
 17091  005242  6ADA               	clrf	fsr2h,c
 17092  005244  6ADE               	clrf	postinc2,c
 17093  005246  6ADD               	clrf	postdec2,c
 17094                           
 17095                           ; BSR set to: 0
 17096                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 17097  005248  51CE               	movf	USBDeviceInit@i& (0+255),w,b
 17098  00524A  0F6A               	addlw	low _ep_data_in	;volatile
 17099  00524C  6ED9               	movwf	fsr2l,c
 17100  00524E  6ADA               	clrf	fsr2h,c
 17101  005250  6ADF               	clrf	indf2,c
 17102                           
 17103                           ; BSR set to: 0
 17104                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 17105  005252  51CE               	movf	USBDeviceInit@i& (0+255),w,b
 17106  005254  0F6D               	addlw	low _ep_data_out	;volatile
 17107  005256  6ED9               	movwf	fsr2l,c
 17108  005258  6ADA               	clrf	fsr2h,c
 17109  00525A  6ADF               	clrf	indf2,c
 17110                           
 17111                           ; BSR set to: 0
 17112  00525C  2BCE               	incf	USBDeviceInit@i& (0+255),f,b
 17113                           
 17114                           ; BSR set to: 0
 17115  00525E  0E02               	movlw	2
 17116  005260  65CE               	cpfsgt	USBDeviceInit@i& (0+255),b
 17117  005262  D7E2               	goto	l11955
 17118                           
 17119                           ; BSR set to: 0
 17120                           ;usb_device.c: 307: }
 17121                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17122  005264  0104               	movlb	4	; () banked
 17123  005266  0E04               	movlw	4	;volatile
 17124  005268  6E0A               	movwf	_pBDTEntryIn+1,c
 17125  00526A  0E08               	movlw	8	;volatile
 17126  00526C  6E09               	movwf	_pBDTEntryIn,c
 17127                           
 17128                           ; BSR set to: 4
 17129                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 17130  00526E  0E16               	movlw	22
 17131  005270  6E6A               	movwf	3946,c	;volatile
 17132                           
 17133                           ; BSR set to: 4
 17134                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 17135  005272  0E04               	movlw	4
 17136  005274  6F03               	movwf	3,b	;volatile
 17137  005276  0E30               	movlw	48
 17138  005278  6F02               	movwf	2,b	;volatile
 17139                           
 17140                           ; BSR set to: 4
 17141                           ;usb_device.c: 315: BDT[0].CNT = 8;
 17142  00527A  0E08               	movlw	8
 17143  00527C  6F01               	movwf	1,b	;volatile
 17144                           
 17145                           ; BSR set to: 4
 17146                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 17147  00527E  0E04               	movlw	4
 17148  005280  6F00               	movwf	0,b	;volatile
 17149                           
 17150                           ; BSR set to: 4
 17151                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 17152  005282  8F00               	bsf	0,7,b	;volatile
 17153                           
 17154                           ; BSR set to: 4
 17155                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 17156  005284  6A2E               	clrf	_USBActiveConfiguration,c	;volatile
 17157                           
 17158                           ; BSR set to: 4
 17159                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 17160  005286  0100               	movlb	0	; () banked
 17161  005288  6B89               	clrf	_USBDeviceState& (0+255),b	;volatile
 17162                           
 17163                           ; BSR set to: 0
 17164  00528A  0012               	return	
 17165  00528C                     __end_of_USBDeviceInit:
 17166                           	opt stack 0
 17167                           tblptru	equ	0xFF8
 17168                           tblptrh	equ	0xFF7
 17169                           tblptrl	equ	0xFF6
 17170                           tablat	equ	0xFF5
 17171                           prodh	equ	0xFF4
 17172                           prodl	equ	0xFF3
 17173                           intcon	equ	0xFF2
 17174                           postinc0	equ	0xFEE
 17175                           wreg	equ	0xFE8
 17176                           indf1	equ	0xFE7
 17177                           postdec1	equ	0xFE5
 17178                           fsr1h	equ	0xFE2
 17179                           fsr1l	equ	0xFE1
 17180                           indf2	equ	0xFDF
 17181                           postinc2	equ	0xFDE
 17182                           postdec2	equ	0xFDD
 17183                           plusw2	equ	0xFDB
 17184                           fsr2h	equ	0xFDA
 17185                           fsr2l	equ	0xFD9
 17186                           status	equ	0xFD8
 17187                           
 17188 ;; *************** function _memset *****************
 17189 ;; Defined at:
 17190 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memset.c"
 17191 ;; Parameters:    Size  Location     Type
 17192 ;;  p1              2    0[BANK0 ] PTR void 
 17193 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17194 ;;  c               2    2[BANK0 ] int 
 17195 ;;  n               2    4[BANK0 ] unsigned int 
 17196 ;; Auto vars:     Size  Location     Type
 17197 ;;  p               2    6[BANK0 ] PTR unsigned char 
 17198 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17199 ;; Return value:  Size  Location     Type
 17200 ;;                  2    0[BANK0 ] PTR void 
 17201 ;; Registers used:
 17202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17203 ;; Tracked objects:
 17204 ;;		On entry : F/0
 17205 ;;		On exit  : F/0
 17206 ;;		Unchanged: 0/0
 17207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17208 ;;      Params:         0       6       0       0       0       0       0       0       0
 17209 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17210 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17211 ;;      Totals:         0       8       0       0       0       0       0       0       0
 17212 ;;Total ram usage:        8 bytes
 17213 ;; Hardware stack levels used:    1
 17214 ;; Hardware stack levels required when called:   11
 17215 ;; This function calls:
 17216 ;;		Nothing
 17217 ;; This function is called by:
 17218 ;;		_USBDeviceInit
 17219 ;; This function uses a non-reentrant model
 17220 ;;
 17221                           
 17222                           	psect	text70
 17223  003834                     __ptext70:
 17224                           	opt stack 0
 17225  003834                     _memset:
 17226                           	opt stack 18
 17227                           
 17228                           ; BSR set to: 0
 17229                           
 17230                           ; BSR set to: 0
 17231                           ;incstack = 0
 17232  003834  C0C7  F0CD         	movff	memset@p1+1,memset@p+1
 17233  003838  C0C6  F0CC         	movff	memset@p1,memset@p
 17234  00383C  D008               	goto	l11891
 17235  00383E                     l11887:
 17236                           
 17237                           ; BSR set to: 0
 17238  00383E  C0CC  FFD9         	movff	memset@p,fsr2l
 17239  003842  C0CD  FFDA         	movff	memset@p+1,fsr2h
 17240  003846  C0C8  FFDF         	movff	memset@c,indf2
 17241                           
 17242                           ; BSR set to: 0
 17243  00384A  4BCC               	infsnz	memset@p& (0+255),f,b
 17244  00384C  2BCD               	incf	(memset@p+1)& (0+255),f,b
 17245  00384E                     l11891:
 17246                           
 17247                           ; BSR set to: 0
 17248  00384E  07CA               	decf	memset@n& (0+255),f,b
 17249  003850  A0D8               	btfss	status,0,c
 17250  003852  07CB               	decf	(memset@n+1)& (0+255),f,b
 17251  003854  0100               	movlb	0	; () banked
 17252  003856  29CA               	incf	memset@n& (0+255),w,b
 17253  003858  B4D8               	btfsc	status,2,c
 17254  00385A  29CB               	incf	(memset@n+1)& (0+255),w,b
 17255  00385C  B4D8               	btfsc	status,2,c
 17256  00385E  0012               	return	
 17257  003860  D7EE               	goto	l11887
 17258  003862                     __end_of_memset:
 17259                           	opt stack 0
 17260                           tblptru	equ	0xFF8
 17261                           tblptrh	equ	0xFF7
 17262                           tblptrl	equ	0xFF6
 17263                           tablat	equ	0xFF5
 17264                           prodh	equ	0xFF4
 17265                           prodl	equ	0xFF3
 17266                           intcon	equ	0xFF2
 17267                           postinc0	equ	0xFEE
 17268                           wreg	equ	0xFE8
 17269                           indf1	equ	0xFE7
 17270                           postdec1	equ	0xFE5
 17271                           fsr1h	equ	0xFE2
 17272                           fsr1l	equ	0xFE1
 17273                           indf2	equ	0xFDF
 17274                           postinc2	equ	0xFDE
 17275                           postdec2	equ	0xFDD
 17276                           plusw2	equ	0xFDB
 17277                           fsr2h	equ	0xFDA
 17278                           fsr2l	equ	0xFD9
 17279                           status	equ	0xFD8
 17280                           
 17281 ;; *************** function _USBDeviceAttach *****************
 17282 ;; Defined at:
 17283 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 17284 ;; Parameters:    Size  Location     Type
 17285 ;;		None
 17286 ;; Auto vars:     Size  Location     Type
 17287 ;;		None
 17288 ;; Return value:  Size  Location     Type
 17289 ;;		None               void
 17290 ;; Registers used:
 17291 ;;		wreg, status,2
 17292 ;; Tracked objects:
 17293 ;;		On entry : F/0
 17294 ;;		On exit  : F/0
 17295 ;;		Unchanged: 0/0
 17296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17297 ;;      Params:         0       0       0       0       0       0       0       0       0
 17298 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17299 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17300 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17301 ;;Total ram usage:        0 bytes
 17302 ;; Hardware stack levels used:    1
 17303 ;; Hardware stack levels required when called:   11
 17304 ;; This function calls:
 17305 ;;		Nothing
 17306 ;; This function is called by:
 17307 ;;		_main
 17308 ;; This function uses a non-reentrant model
 17309 ;;
 17310                           
 17311                           	psect	text71
 17312  0036D8                     __ptext71:
 17313                           	opt stack 0
 17314  0036D8                     _USBDeviceAttach:
 17315                           	opt stack 19
 17316                           
 17317                           ; BSR set to: 0
 17318                           ;usb_device.c: 1050: {
 17319                           ;usb_device.c: 1051: if(1 == 1)
 17320                           
 17321                           ; BSR set to: 0
 17322                           ;incstack = 0
 17323  0036D8  6789               	tstfsz	_USBDeviceState& (0+255),b	;volatile
 17324  0036DA  0012               	return	
 17325                           
 17326                           ; BSR set to: 0
 17327                           ;usb_device.c: 1052: {
 17328                           ;usb_device.c: 1054: UCON = 0;
 17329  0036DC  6A60               	clrf	3936,c	;volatile
 17330                           
 17331                           ;usb_device.c: 1057: UIE = 0;
 17332  0036DE  6A64               	clrf	3940,c	;volatile
 17333                           
 17334                           ; BSR set to: 0
 17335                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 17336  0036E0  0E16               	movlw	22
 17337  0036E2  6E62               	movwf	3938,c	;volatile
 17338  0036E4  0E9F               	movlw	159
 17339  0036E6  6E66               	movwf	3942,c	;volatile
 17340  0036E8  0E7B               	movlw	123
 17341  0036EA  6E64               	movwf	3940,c	;volatile
 17342                           
 17343                           ; BSR set to: 0
 17344                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 17345  0036EC  8ED0               	bsf	4048,7,c	;volatile
 17346                           
 17347                           ; BSR set to: 0
 17348  0036EE  84A5               	bsf	4005,2,c	;volatile
 17349                           
 17350                           ; BSR set to: 0
 17351  0036F0  84A3               	bsf	4003,2,c	;volatile
 17352                           
 17353                           ; BSR set to: 0
 17354  0036F2  8EF2               	bsf	intcon,7,c	;volatile
 17355                           
 17356                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 17357  0036F4  D001               	goto	l1625
 17358  0036F6                     l1626:
 17359                           
 17360                           ; BSR set to: 0
 17361  0036F6  8660               	bsf	3936,3,c	;volatile
 17362  0036F8                     l1625:
 17363                           
 17364                           ; BSR set to: 0
 17365  0036F8  A660               	btfss	3936,3,c	;volatile
 17366  0036FA  D7FD               	goto	l1626
 17367                           
 17368                           ; BSR set to: 0
 17369                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 17370  0036FC  0E01               	movlw	1
 17371  0036FE  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 17372                           
 17373                           ; BSR set to: 0
 17374  003700  0C01               	retlw	1
 17375  003702                     __end_of_USBDeviceAttach:
 17376                           	opt stack 0
 17377                           tblptru	equ	0xFF8
 17378                           tblptrh	equ	0xFF7
 17379                           tblptrl	equ	0xFF6
 17380                           tablat	equ	0xFF5
 17381                           prodh	equ	0xFF4
 17382                           prodl	equ	0xFF3
 17383                           intcon	equ	0xFF2
 17384                           postinc0	equ	0xFEE
 17385                           wreg	equ	0xFE8
 17386                           indf1	equ	0xFE7
 17387                           postdec1	equ	0xFE5
 17388                           fsr1h	equ	0xFE2
 17389                           fsr1l	equ	0xFE1
 17390                           indf2	equ	0xFDF
 17391                           postinc2	equ	0xFDE
 17392                           postdec2	equ	0xFDD
 17393                           plusw2	equ	0xFDB
 17394                           fsr2h	equ	0xFDA
 17395                           fsr2l	equ	0xFD9
 17396                           status	equ	0xFD8
 17397                           
 17398 ;; *************** function _SYSTEM_Initialize *****************
 17399 ;; Defined at:
 17400 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 17401 ;; Parameters:    Size  Location     Type
 17402 ;;		None
 17403 ;; Auto vars:     Size  Location     Type
 17404 ;;		None
 17405 ;; Return value:  Size  Location     Type
 17406 ;;		None               void
 17407 ;; Registers used:
 17408 ;;		wreg, status,2, status,0, cstack
 17409 ;; Tracked objects:
 17410 ;;		On entry : 0/0
 17411 ;;		On exit  : F/0
 17412 ;;		Unchanged: 0/0
 17413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17414 ;;      Params:         0       0       0       0       0       0       0       0       0
 17415 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17416 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17417 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17418 ;;Total ram usage:        0 bytes
 17419 ;; Hardware stack levels used:    1
 17420 ;; Hardware stack levels required when called:   13
 17421 ;; This function calls:
 17422 ;;		_ADC_Initialize
 17423 ;;		_CMP1_Initialize
 17424 ;;		_EUSART_Initialize
 17425 ;;		_OSCILLATOR_Initialize
 17426 ;;		_PIN_MANAGER_Initialize
 17427 ;;		_SPI_Initialize
 17428 ;;		_TMR1_Initialize
 17429 ;;		_TMR2_Initialize
 17430 ;; This function is called by:
 17431 ;;		_main
 17432 ;; This function uses a non-reentrant model
 17433 ;;
 17434                           
 17435                           	psect	text72
 17436  0035B4                     __ptext72:
 17437                           	opt stack 0
 17438  0035B4                     _SYSTEM_Initialize:
 17439                           	opt stack 17
 17440                           
 17441                           ;mcc.c: 95: OSCILLATOR_Initialize();
 17442                           
 17443                           ; BSR set to: 0
 17444                           ;incstack = 0
 17445  0035B4  EC71  F01A         	call	_OSCILLATOR_Initialize	;wreg free
 17446                           
 17447                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 17448  0035B8  EC64  F01D         	call	_PIN_MANAGER_Initialize	;wreg free
 17449                           
 17450                           ; BSR set to: 15
 17451                           ;mcc.c: 97: SPI_Initialize();
 17452  0035BC  EC18  F01A         	call	_SPI_Initialize	;wreg free
 17453                           
 17454                           ; BSR set to: 15
 17455                           ;mcc.c: 98: TMR1_Initialize();
 17456  0035C0  ECD6  F01B         	call	_TMR1_Initialize	;wreg free
 17457                           
 17458                           ; BSR set to: 0
 17459                           ;mcc.c: 99: TMR2_Initialize();
 17460  0035C4  EC1F  F01A         	call	_TMR2_Initialize	;wreg free
 17461                           
 17462                           ; BSR set to: 0
 17463                           ;mcc.c: 100: EUSART_Initialize();
 17464  0035C8  EC03  F01C         	call	_EUSART_Initialize	;wreg free
 17465                           
 17466                           ; BSR set to: 0
 17467                           ;mcc.c: 101: ADC_Initialize();
 17468  0035CC  EC66  F01A         	call	_ADC_Initialize	;wreg free
 17469                           
 17470                           ; BSR set to: 0
 17471                           ;mcc.c: 102: CMP1_Initialize();
 17472  0035D0  EF2F  F01A         	goto	_CMP1_Initialize	;wreg free
 17473  0035D4                     __end_of_SYSTEM_Initialize:
 17474                           	opt stack 0
 17475                           tblptru	equ	0xFF8
 17476                           tblptrh	equ	0xFF7
 17477                           tblptrl	equ	0xFF6
 17478                           tablat	equ	0xFF5
 17479                           prodh	equ	0xFF4
 17480                           prodl	equ	0xFF3
 17481                           intcon	equ	0xFF2
 17482                           postinc0	equ	0xFEE
 17483                           wreg	equ	0xFE8
 17484                           indf1	equ	0xFE7
 17485                           postdec1	equ	0xFE5
 17486                           fsr1h	equ	0xFE2
 17487                           fsr1l	equ	0xFE1
 17488                           indf2	equ	0xFDF
 17489                           postinc2	equ	0xFDE
 17490                           postdec2	equ	0xFDD
 17491                           plusw2	equ	0xFDB
 17492                           fsr2h	equ	0xFDA
 17493                           fsr2l	equ	0xFD9
 17494                           status	equ	0xFD8
 17495                           
 17496 ;; *************** function _TMR2_Initialize *****************
 17497 ;; Defined at:
 17498 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 17499 ;; Parameters:    Size  Location     Type
 17500 ;;		None
 17501 ;; Auto vars:     Size  Location     Type
 17502 ;;		None
 17503 ;; Return value:  Size  Location     Type
 17504 ;;		None               void
 17505 ;; Registers used:
 17506 ;;		wreg, status,2, cstack
 17507 ;; Tracked objects:
 17508 ;;		On entry : F/0
 17509 ;;		On exit  : F/0
 17510 ;;		Unchanged: F/0
 17511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17512 ;;      Params:         0       0       0       0       0       0       0       0       0
 17513 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17514 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17515 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17516 ;;Total ram usage:        0 bytes
 17517 ;; Hardware stack levels used:    1
 17518 ;; Hardware stack levels required when called:   12
 17519 ;; This function calls:
 17520 ;;		_TMR2_StartTimer
 17521 ;; This function is called by:
 17522 ;;		_SYSTEM_Initialize
 17523 ;; This function uses a non-reentrant model
 17524 ;;
 17525                           
 17526                           	psect	text73
 17527  00343E                     __ptext73:
 17528                           	opt stack 0
 17529  00343E                     _TMR2_Initialize:
 17530                           	opt stack 17
 17531                           
 17532                           ; BSR set to: 0
 17533                           ;tmr2.c: 62: T2CON = 0x7A;
 17534                           
 17535                           ; BSR set to: 0
 17536                           ;incstack = 0
 17537  00343E  0E7A               	movlw	122
 17538  003440  6EBA               	movwf	4026,c	;volatile
 17539                           
 17540                           ;tmr2.c: 65: PR2 = 0x9B;
 17541  003442  0E9B               	movlw	155
 17542  003444  6EBB               	movwf	4027,c	;volatile
 17543                           
 17544                           ; BSR set to: 0
 17545                           ;tmr2.c: 68: TMR2 = 0x00;
 17546  003446  6ABC               	clrf	4028,c	;volatile
 17547                           
 17548                           ; BSR set to: 0
 17549                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 17550  003448  929E               	bcf	3998,1,c	;volatile
 17551                           
 17552                           ; BSR set to: 0
 17553                           ;tmr2.c: 74: TMR2_StartTimer();
 17554  00344A  EFE1  F019         	goto	_TMR2_StartTimer	;wreg free
 17555  00344E                     __end_of_TMR2_Initialize:
 17556                           	opt stack 0
 17557                           tblptru	equ	0xFF8
 17558                           tblptrh	equ	0xFF7
 17559                           tblptrl	equ	0xFF6
 17560                           tablat	equ	0xFF5
 17561                           prodh	equ	0xFF4
 17562                           prodl	equ	0xFF3
 17563                           intcon	equ	0xFF2
 17564                           postinc0	equ	0xFEE
 17565                           wreg	equ	0xFE8
 17566                           indf1	equ	0xFE7
 17567                           postdec1	equ	0xFE5
 17568                           fsr1h	equ	0xFE2
 17569                           fsr1l	equ	0xFE1
 17570                           indf2	equ	0xFDF
 17571                           postinc2	equ	0xFDE
 17572                           postdec2	equ	0xFDD
 17573                           plusw2	equ	0xFDB
 17574                           fsr2h	equ	0xFDA
 17575                           fsr2l	equ	0xFD9
 17576                           status	equ	0xFD8
 17577                           
 17578 ;; *************** function _TMR2_StartTimer *****************
 17579 ;; Defined at:
 17580 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 17581 ;; Parameters:    Size  Location     Type
 17582 ;;		None
 17583 ;; Auto vars:     Size  Location     Type
 17584 ;;		None
 17585 ;; Return value:  Size  Location     Type
 17586 ;;		None               void
 17587 ;; Registers used:
 17588 ;;		None
 17589 ;; Tracked objects:
 17590 ;;		On entry : F/0
 17591 ;;		On exit  : F/0
 17592 ;;		Unchanged: F/0
 17593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17594 ;;      Params:         0       0       0       0       0       0       0       0       0
 17595 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17597 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17598 ;;Total ram usage:        0 bytes
 17599 ;; Hardware stack levels used:    1
 17600 ;; Hardware stack levels required when called:   11
 17601 ;; This function calls:
 17602 ;;		Nothing
 17603 ;; This function is called by:
 17604 ;;		_TMR2_Initialize
 17605 ;; This function uses a non-reentrant model
 17606 ;;
 17607                           
 17608                           	psect	text74
 17609  0033C2                     __ptext74:
 17610                           	opt stack 0
 17611  0033C2                     _TMR2_StartTimer:
 17612                           	opt stack 17
 17613                           
 17614                           ; BSR set to: 0
 17615                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;incstack = 0
 17619  0033C2  84BA               	bsf	4026,2,c	;volatile
 17620                           
 17621                           ; BSR set to: 0
 17622  0033C4  0012               	return	
 17623  0033C6                     __end_of_TMR2_StartTimer:
 17624                           	opt stack 0
 17625                           tblptru	equ	0xFF8
 17626                           tblptrh	equ	0xFF7
 17627                           tblptrl	equ	0xFF6
 17628                           tablat	equ	0xFF5
 17629                           prodh	equ	0xFF4
 17630                           prodl	equ	0xFF3
 17631                           intcon	equ	0xFF2
 17632                           postinc0	equ	0xFEE
 17633                           wreg	equ	0xFE8
 17634                           indf1	equ	0xFE7
 17635                           postdec1	equ	0xFE5
 17636                           fsr1h	equ	0xFE2
 17637                           fsr1l	equ	0xFE1
 17638                           indf2	equ	0xFDF
 17639                           postinc2	equ	0xFDE
 17640                           postdec2	equ	0xFDD
 17641                           plusw2	equ	0xFDB
 17642                           fsr2h	equ	0xFDA
 17643                           fsr2l	equ	0xFD9
 17644                           status	equ	0xFD8
 17645                           
 17646 ;; *************** function _TMR1_Initialize *****************
 17647 ;; Defined at:
 17648 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 17649 ;; Parameters:    Size  Location     Type
 17650 ;;		None
 17651 ;; Auto vars:     Size  Location     Type
 17652 ;;		None
 17653 ;; Return value:  Size  Location     Type
 17654 ;;		None               void
 17655 ;; Registers used:
 17656 ;;		wreg, status,2, status,0, cstack
 17657 ;; Tracked objects:
 17658 ;;		On entry : F/F
 17659 ;;		On exit  : F/0
 17660 ;;		Unchanged: 0/0
 17661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17662 ;;      Params:         0       0       0       0       0       0       0       0       0
 17663 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17664 ;;      Temps:          0       2       0       0       0       0       0       0       0
 17665 ;;      Totals:         0       2       0       0       0       0       0       0       0
 17666 ;;Total ram usage:        2 bytes
 17667 ;; Hardware stack levels used:    1
 17668 ;; Hardware stack levels required when called:   12
 17669 ;; This function calls:
 17670 ;;		_TMR1_StartTimer
 17671 ;; This function is called by:
 17672 ;;		_SYSTEM_Initialize
 17673 ;; This function uses a non-reentrant model
 17674 ;;
 17675                           
 17676                           	psect	text75
 17677  0037AC                     __ptext75:
 17678                           	opt stack 0
 17679  0037AC                     _TMR1_Initialize:
 17680                           	opt stack 17
 17681                           
 17682                           ; BSR set to: 15
 17683                           ;tmr1.c: 68: T1CON = 0x00;
 17684                           
 17685                           ; BSR set to: 0
 17686                           ;incstack = 0
 17687  0037AC  6ACD               	clrf	4045,c	;volatile
 17688                           
 17689                           ;tmr1.c: 71: T1GCON = 0x00;
 17690  0037AE  6ACC               	clrf	4044,c	;volatile
 17691                           
 17692                           ; BSR set to: 15
 17693                           ;tmr1.c: 74: TMR1H = 0xD0;
 17694  0037B0  0ED0               	movlw	208
 17695  0037B2  6ECF               	movwf	4047,c	;volatile
 17696                           
 17697                           ;tmr1.c: 77: TMR1L = 0x20;
 17698  0037B4  0E20               	movlw	32
 17699  0037B6  6ECE               	movwf	4046,c	;volatile
 17700                           
 17701                           ; BSR set to: 15
 17702                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 17703  0037B8  50CE               	movf	4046,w,c	;volatile
 17704  0037BA  CFCF F0C6          	movff	4047,??_TMR1_Initialize	;volatile
 17705  0037BE  0100               	movlb	0	; () banked
 17706  0037C0  6BC7               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 17707  0037C2  C0C6  F0C7         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17708  0037C6  6BC6               	clrf	??_TMR1_Initialize& (0+255),b
 17709  0037C8  11C6               	iorwf	??_TMR1_Initialize& (0+255),w,b
 17710  0037CA  6F80               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17711  0037CC  51C7               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 17712  0037CE  6F81               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17713                           
 17714                           ; BSR set to: 0
 17715                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 17716  0037D0  909E               	bcf	3998,0,c	;volatile
 17717                           
 17718                           ; BSR set to: 0
 17719                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 17720  0037D2  809D               	bsf	3997,0,c	;volatile
 17721                           
 17722                           ; BSR set to: 0
 17723                           ;tmr1.c: 89: TMR1_StartTimer();
 17724  0037D4  EFDF  F019         	goto	_TMR1_StartTimer	;wreg free
 17725  0037D8                     __end_of_TMR1_Initialize:
 17726                           	opt stack 0
 17727                           tblptru	equ	0xFF8
 17728                           tblptrh	equ	0xFF7
 17729                           tblptrl	equ	0xFF6
 17730                           tablat	equ	0xFF5
 17731                           prodh	equ	0xFF4
 17732                           prodl	equ	0xFF3
 17733                           intcon	equ	0xFF2
 17734                           postinc0	equ	0xFEE
 17735                           wreg	equ	0xFE8
 17736                           indf1	equ	0xFE7
 17737                           postdec1	equ	0xFE5
 17738                           fsr1h	equ	0xFE2
 17739                           fsr1l	equ	0xFE1
 17740                           indf2	equ	0xFDF
 17741                           postinc2	equ	0xFDE
 17742                           postdec2	equ	0xFDD
 17743                           plusw2	equ	0xFDB
 17744                           fsr2h	equ	0xFDA
 17745                           fsr2l	equ	0xFD9
 17746                           status	equ	0xFD8
 17747                           
 17748 ;; *************** function _TMR1_StartTimer *****************
 17749 ;; Defined at:
 17750 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 17751 ;; Parameters:    Size  Location     Type
 17752 ;;		None
 17753 ;; Auto vars:     Size  Location     Type
 17754 ;;		None
 17755 ;; Return value:  Size  Location     Type
 17756 ;;		None               void
 17757 ;; Registers used:
 17758 ;;		None
 17759 ;; Tracked objects:
 17760 ;;		On entry : F/0
 17761 ;;		On exit  : F/0
 17762 ;;		Unchanged: F/0
 17763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17764 ;;      Params:         0       0       0       0       0       0       0       0       0
 17765 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17766 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17767 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17768 ;;Total ram usage:        0 bytes
 17769 ;; Hardware stack levels used:    1
 17770 ;; Hardware stack levels required when called:   11
 17771 ;; This function calls:
 17772 ;;		Nothing
 17773 ;; This function is called by:
 17774 ;;		_TMR1_Initialize
 17775 ;; This function uses a non-reentrant model
 17776 ;;
 17777                           
 17778                           	psect	text76
 17779  0033BE                     __ptext76:
 17780                           	opt stack 0
 17781  0033BE                     _TMR1_StartTimer:
 17782                           	opt stack 17
 17783                           
 17784                           ; BSR set to: 0
 17785                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 17786                           
 17787                           ; BSR set to: 0
 17788                           ;incstack = 0
 17789  0033BE  80CD               	bsf	4045,0,c	;volatile
 17790                           
 17791                           ; BSR set to: 0
 17792  0033C0  0012               	return	
 17793  0033C2                     __end_of_TMR1_StartTimer:
 17794                           	opt stack 0
 17795                           tblptru	equ	0xFF8
 17796                           tblptrh	equ	0xFF7
 17797                           tblptrl	equ	0xFF6
 17798                           tablat	equ	0xFF5
 17799                           prodh	equ	0xFF4
 17800                           prodl	equ	0xFF3
 17801                           intcon	equ	0xFF2
 17802                           postinc0	equ	0xFEE
 17803                           wreg	equ	0xFE8
 17804                           indf1	equ	0xFE7
 17805                           postdec1	equ	0xFE5
 17806                           fsr1h	equ	0xFE2
 17807                           fsr1l	equ	0xFE1
 17808                           indf2	equ	0xFDF
 17809                           postinc2	equ	0xFDE
 17810                           postdec2	equ	0xFDD
 17811                           plusw2	equ	0xFDB
 17812                           fsr2h	equ	0xFDA
 17813                           fsr2l	equ	0xFD9
 17814                           status	equ	0xFD8
 17815                           
 17816 ;; *************** function _SPI_Initialize *****************
 17817 ;; Defined at:
 17818 ;;		line 64 in file "../Includes/MccGenerated/spi.c"
 17819 ;; Parameters:    Size  Location     Type
 17820 ;;		None
 17821 ;; Auto vars:     Size  Location     Type
 17822 ;;		None
 17823 ;; Return value:  Size  Location     Type
 17824 ;;		None               void
 17825 ;; Registers used:
 17826 ;;		wreg, status,2
 17827 ;; Tracked objects:
 17828 ;;		On entry : F/F
 17829 ;;		On exit  : F/F
 17830 ;;		Unchanged: E/0
 17831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17832 ;;      Params:         0       0       0       0       0       0       0       0       0
 17833 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17834 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17835 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17836 ;;Total ram usage:        0 bytes
 17837 ;; Hardware stack levels used:    1
 17838 ;; Hardware stack levels required when called:   11
 17839 ;; This function calls:
 17840 ;;		Nothing
 17841 ;; This function is called by:
 17842 ;;		_SYSTEM_Initialize
 17843 ;; This function uses a non-reentrant model
 17844 ;;
 17845                           
 17846                           	psect	text77
 17847  003430                     __ptext77:
 17848                           	opt stack 0
 17849  003430                     _SPI_Initialize:
 17850                           	opt stack 18
 17851                           
 17852                           ; BSR set to: 15
 17853                           ;spi.c: 69: SSP1STAT = 0x00;
 17854                           
 17855                           ; BSR set to: 0
 17856                           ;incstack = 0
 17857  003430  6AC7               	clrf	4039,c	;volatile
 17858                           
 17859                           ; BSR set to: 15
 17860                           ;spi.c: 72: SSP1CON1 = 0x21;
 17861  003432  0E21               	movlw	33
 17862  003434  6EC6               	movwf	4038,c	;volatile
 17863                           
 17864                           ; BSR set to: 15
 17865                           ;spi.c: 75: SSP1ADD = 0x00;
 17866  003436  6AC8               	clrf	4040,c	;volatile
 17867                           
 17868                           ; BSR set to: 15
 17869                           ;spi.c: 77: CKP = 1;
 17870  003438  88C6               	bsf	4038,4,c	;volatile
 17871                           
 17872                           ; BSR set to: 15
 17873                           ;spi.c: 78: CKE = 0;
 17874  00343A  9CC7               	bcf	4039,6,c	;volatile
 17875                           
 17876                           ; BSR set to: 15
 17877  00343C  0012               	return	
 17878  00343E                     __end_of_SPI_Initialize:
 17879                           	opt stack 0
 17880                           tblptru	equ	0xFF8
 17881                           tblptrh	equ	0xFF7
 17882                           tblptrl	equ	0xFF6
 17883                           tablat	equ	0xFF5
 17884                           prodh	equ	0xFF4
 17885                           prodl	equ	0xFF3
 17886                           intcon	equ	0xFF2
 17887                           postinc0	equ	0xFEE
 17888                           wreg	equ	0xFE8
 17889                           indf1	equ	0xFE7
 17890                           postdec1	equ	0xFE5
 17891                           fsr1h	equ	0xFE2
 17892                           fsr1l	equ	0xFE1
 17893                           indf2	equ	0xFDF
 17894                           postinc2	equ	0xFDE
 17895                           postdec2	equ	0xFDD
 17896                           plusw2	equ	0xFDB
 17897                           fsr2h	equ	0xFDA
 17898                           fsr2l	equ	0xFD9
 17899                           status	equ	0xFD8
 17900                           
 17901 ;; *************** function _PIN_MANAGER_Initialize *****************
 17902 ;; Defined at:
 17903 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 17904 ;; Parameters:    Size  Location     Type
 17905 ;;		None
 17906 ;; Auto vars:     Size  Location     Type
 17907 ;;		None
 17908 ;; Return value:  Size  Location     Type
 17909 ;;		None               void
 17910 ;; Registers used:
 17911 ;;		None
 17912 ;; Tracked objects:
 17913 ;;		On entry : 0/0
 17914 ;;		On exit  : F/F
 17915 ;;		Unchanged: 0/0
 17916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17917 ;;      Params:         0       0       0       0       0       0       0       0       0
 17918 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17919 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17920 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17921 ;;Total ram usage:        0 bytes
 17922 ;; Hardware stack levels used:    1
 17923 ;; Hardware stack levels required when called:   11
 17924 ;; This function calls:
 17925 ;;		Nothing
 17926 ;; This function is called by:
 17927 ;;		_moteApp_GoToSleep
 17928 ;;		_SYSTEM_Initialize
 17929 ;; This function uses a non-reentrant model
 17930 ;;
 17931                           
 17932                           	psect	text78
 17933  003AC8                     __ptext78:
 17934                           	opt stack 0
 17935  003AC8                     _PIN_MANAGER_Initialize:
 17936                           	opt stack 16
 17937                           
 17938                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 17939                           
 17940                           ; BSR set to: 15
 17941                           ;incstack = 0
 17942  003AC8  8092               	bsf	3986,0,c	;volatile
 17943                           
 17944                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 17945  003ACA  8292               	bsf	3986,1,c	;volatile
 17946                           
 17947                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 17948  003ACC  8492               	bsf	3986,2,c	;volatile
 17949                           
 17950                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 17951  003ACE  8692               	bsf	3986,3,c	;volatile
 17952                           
 17953                           ;pin_manager.c: 59: TRISAbits.TRISA4 = 0;
 17954  003AD0  9892               	bcf	3986,4,c	;volatile
 17955                           
 17956                           ;pin_manager.c: 60: TRISAbits.TRISA5 = 0;
 17957  003AD2  9A92               	bcf	3986,5,c	;volatile
 17958                           
 17959                           ;pin_manager.c: 61: TRISAbits.TRISA6 = 0;
 17960  003AD4  9C92               	bcf	3986,6,c	;volatile
 17961                           
 17962                           ;pin_manager.c: 62: TRISAbits.TRISA7 = 0;
 17963  003AD6  9E92               	bcf	3986,7,c	;volatile
 17964                           
 17965                           ;pin_manager.c: 64: TRISBbits.TRISB0 = 0;
 17966  003AD8  9093               	bcf	3987,0,c	;volatile
 17967                           
 17968                           ;pin_manager.c: 65: TRISBbits.TRISB1 = 0;
 17969  003ADA  9293               	bcf	3987,1,c	;volatile
 17970                           
 17971                           ;pin_manager.c: 66: TRISBbits.TRISB2 = 0;
 17972  003ADC  9493               	bcf	3987,2,c	;volatile
 17973                           
 17974                           ;pin_manager.c: 67: TRISBbits.TRISB3 = 0;
 17975  003ADE  9693               	bcf	3987,3,c	;volatile
 17976                           
 17977                           ;pin_manager.c: 68: TRISBbits.TRISB5 = 0;
 17978  003AE0  9A93               	bcf	3987,5,c	;volatile
 17979                           
 17980                           ;pin_manager.c: 70: TRISCbits.TRISC0 = 1;
 17981  003AE2  8094               	bsf	3988,0,c	;volatile
 17982                           
 17983                           ;pin_manager.c: 71: TRISCbits.TRISC1 = 1;
 17984  003AE4  8294               	bsf	3988,1,c	;volatile
 17985                           
 17986                           ;pin_manager.c: 72: TRISCbits.TRISC2 = 1;
 17987  003AE6  8494               	bsf	3988,2,c	;volatile
 17988                           
 17989                           ;pin_manager.c: 73: TRISCbits.TRISC6 = 0;
 17990  003AE8  9C94               	bcf	3988,6,c	;volatile
 17991                           
 17992                           ;pin_manager.c: 74: TRISCbits.TRISC7 = 1;
 17993  003AEA  8E94               	bsf	3988,7,c	;volatile
 17994                           
 17995                           ;pin_manager.c: 77: LATAbits.LATA4 = 1;
 17996  003AEC  8889               	bsf	3977,4,c	;volatile
 17997                           
 17998                           ;pin_manager.c: 78: LATAbits.LATA5 = 0;
 17999  003AEE  9A89               	bcf	3977,5,c	;volatile
 18000                           
 18001                           ;pin_manager.c: 79: LATAbits.LATA6 = 0;
 18002  003AF0  9C89               	bcf	3977,6,c	;volatile
 18003                           
 18004                           ;pin_manager.c: 80: LATAbits.LATA7 = 0;
 18005  003AF2  9E89               	bcf	3977,7,c	;volatile
 18006                           
 18007                           ;pin_manager.c: 82: LATBbits.LATB2 = 0;
 18008  003AF4  948A               	bcf	3978,2,c	;volatile
 18009                           
 18010                           ;pin_manager.c: 83: LATBbits.LATB0 = 0;
 18011  003AF6  908A               	bcf	3978,0,c	;volatile
 18012                           
 18013                           ;pin_manager.c: 84: LATBbits.LATB5 = 0;
 18014  003AF8  9A8A               	bcf	3978,5,c	;volatile
 18015                           
 18016                           ;pin_manager.c: 86: LATCbits.LATC2 = 0;
 18017  003AFA  948B               	bcf	3979,2,c	;volatile
 18018                           
 18019                           ;pin_manager.c: 87: LATCbits.LATC6 = 0;
 18020  003AFC  9C8B               	bcf	3979,6,c	;volatile
 18021                           
 18022                           ;pin_manager.c: 89: ANSELAbits.ANSA0 = 0;
 18023  003AFE  010F               	movlb	15	; () banked
 18024  003B00  915B               	bcf	91,0,b	;volatile
 18025                           
 18026                           ;pin_manager.c: 90: ANSELAbits.ANSA1 = 1;
 18027  003B02  835B               	bsf	91,1,b	;volatile
 18028                           
 18029                           ;pin_manager.c: 91: ANSELAbits.ANSA2 = 1;
 18030  003B04  855B               	bsf	91,2,b	;volatile
 18031                           
 18032                           ;pin_manager.c: 92: ANSELAbits.ANSA3 = 1;
 18033  003B06  875B               	bsf	91,3,b	;volatile
 18034                           
 18035                           ;pin_manager.c: 93: ANSELCbits.ANSC7 = 0;
 18036  003B08  9F5D               	bcf	93,7,b	;volatile
 18037                           
 18038                           ;pin_manager.c: 94: ANSELCbits.ANSC6 = 0;
 18039  003B0A  9D5D               	bcf	93,6,b	;volatile
 18040                           
 18041                           ; BSR set to: 15
 18042  003B0C  0012               	return	
 18043  003B0E                     __end_of_PIN_MANAGER_Initialize:
 18044                           	opt stack 0
 18045                           tblptru	equ	0xFF8
 18046                           tblptrh	equ	0xFF7
 18047                           tblptrl	equ	0xFF6
 18048                           tablat	equ	0xFF5
 18049                           prodh	equ	0xFF4
 18050                           prodl	equ	0xFF3
 18051                           intcon	equ	0xFF2
 18052                           postinc0	equ	0xFEE
 18053                           wreg	equ	0xFE8
 18054                           indf1	equ	0xFE7
 18055                           postdec1	equ	0xFE5
 18056                           fsr1h	equ	0xFE2
 18057                           fsr1l	equ	0xFE1
 18058                           indf2	equ	0xFDF
 18059                           postinc2	equ	0xFDE
 18060                           postdec2	equ	0xFDD
 18061                           plusw2	equ	0xFDB
 18062                           fsr2h	equ	0xFDA
 18063                           fsr2l	equ	0xFD9
 18064                           status	equ	0xFD8
 18065                           
 18066 ;; *************** function _OSCILLATOR_Initialize *****************
 18067 ;; Defined at:
 18068 ;;		line 105 in file "../Includes/MccGenerated/mcc.c"
 18069 ;; Parameters:    Size  Location     Type
 18070 ;;		None
 18071 ;; Auto vars:     Size  Location     Type
 18072 ;;		None
 18073 ;; Return value:  Size  Location     Type
 18074 ;;		None               void
 18075 ;; Registers used:
 18076 ;;		wreg, status,2
 18077 ;; Tracked objects:
 18078 ;;		On entry : 0/0
 18079 ;;		On exit  : 0/0
 18080 ;;		Unchanged: 0/0
 18081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18082 ;;      Params:         0       0       0       0       0       0       0       0       0
 18083 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18084 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18085 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18086 ;;Total ram usage:        0 bytes
 18087 ;; Hardware stack levels used:    1
 18088 ;; Hardware stack levels required when called:   11
 18089 ;; This function calls:
 18090 ;;		Nothing
 18091 ;; This function is called by:
 18092 ;;		_SYSTEM_Initialize
 18093 ;; This function uses a non-reentrant model
 18094 ;;
 18095                           
 18096                           	psect	text79
 18097  0034E2                     __ptext79:
 18098                           	opt stack 0
 18099  0034E2                     _OSCILLATOR_Initialize:
 18100                           	opt stack 18
 18101                           
 18102                           ;mcc.c: 107: OSCTUNE = 0x80;
 18103                           
 18104                           ; BSR set to: 15
 18105                           ;incstack = 0
 18106  0034E2  0E80               	movlw	128
 18107  0034E4  6E9B               	movwf	3995,c	;volatile
 18108                           
 18109                           ;mcc.c: 108: OSCCON = 0x70;
 18110  0034E6  0E70               	movlw	112
 18111  0034E8  6ED3               	movwf	4051,c	;volatile
 18112                           
 18113                           ;mcc.c: 109: OSCCON2 = 0x10;
 18114  0034EA  0E10               	movlw	16
 18115  0034EC  6ED2               	movwf	4050,c	;volatile
 18116  0034EE                     l1145:
 18117  0034EE  AED2               	btfss	4050,7,c	;volatile
 18118  0034F0  D7FE               	goto	l1145
 18119                           
 18120                           ;mcc.c: 111: ACTCON = 0x90;
 18121  0034F2  0E90               	movlw	144
 18122  0034F4  6EB5               	movwf	4021,c	;volatile
 18123  0034F6  0C90               	retlw	144
 18124  0034F8                     __end_of_OSCILLATOR_Initialize:
 18125                           	opt stack 0
 18126                           tblptru	equ	0xFF8
 18127                           tblptrh	equ	0xFF7
 18128                           tblptrl	equ	0xFF6
 18129                           tablat	equ	0xFF5
 18130                           prodh	equ	0xFF4
 18131                           prodl	equ	0xFF3
 18132                           intcon	equ	0xFF2
 18133                           postinc0	equ	0xFEE
 18134                           wreg	equ	0xFE8
 18135                           indf1	equ	0xFE7
 18136                           postdec1	equ	0xFE5
 18137                           fsr1h	equ	0xFE2
 18138                           fsr1l	equ	0xFE1
 18139                           indf2	equ	0xFDF
 18140                           postinc2	equ	0xFDE
 18141                           postdec2	equ	0xFDD
 18142                           plusw2	equ	0xFDB
 18143                           fsr2h	equ	0xFDA
 18144                           fsr2l	equ	0xFD9
 18145                           status	equ	0xFD8
 18146                           
 18147 ;; *************** function _EUSART_Initialize *****************
 18148 ;; Defined at:
 18149 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 18150 ;; Parameters:    Size  Location     Type
 18151 ;;		None
 18152 ;; Auto vars:     Size  Location     Type
 18153 ;;		None
 18154 ;; Return value:  Size  Location     Type
 18155 ;;		None               void
 18156 ;; Registers used:
 18157 ;;		wreg, status,2
 18158 ;; Tracked objects:
 18159 ;;		On entry : 0/F
 18160 ;;		On exit  : F/0
 18161 ;;		Unchanged: 0/0
 18162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18163 ;;      Params:         0       0       0       0       0       0       0       0       0
 18164 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18165 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18166 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18167 ;;Total ram usage:        0 bytes
 18168 ;; Hardware stack levels used:    1
 18169 ;; Hardware stack levels required when called:   11
 18170 ;; This function calls:
 18171 ;;		Nothing
 18172 ;; This function is called by:
 18173 ;;		_moteApp_GoToSleep
 18174 ;;		_SYSTEM_Initialize
 18175 ;; This function uses a non-reentrant model
 18176 ;;
 18177                           
 18178                           	psect	text80
 18179  003806                     __ptext80:
 18180                           	opt stack 0
 18181  003806                     _EUSART_Initialize:
 18182                           	opt stack 16
 18183                           
 18184                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 18185                           
 18186                           ;incstack = 0
 18187  003806  9A9D               	bcf	3997,5,c	;volatile
 18188                           
 18189                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 18190  003808  989D               	bcf	3997,4,c	;volatile
 18191                           
 18192                           ;eusart.c: 85: BAUDCON = 0x48;
 18193  00380A  0E48               	movlw	72
 18194  00380C  6EB8               	movwf	4024,c	;volatile
 18195                           
 18196                           ;eusart.c: 88: RCSTA = 0x90;
 18197  00380E  0E90               	movlw	144
 18198  003810  6EAB               	movwf	4011,c	;volatile
 18199                           
 18200                           ;eusart.c: 91: TXSTA = 0x26;
 18201  003812  0E26               	movlw	38
 18202  003814  6EAC               	movwf	4012,c	;volatile
 18203                           
 18204                           ;eusart.c: 95: SPBRG = 0x71;
 18205  003816  0E71               	movlw	113
 18206  003818  6EAF               	movwf	4015,c	;volatile
 18207                           
 18208                           ;eusart.c: 100: SPBRGH = 0x02;
 18209  00381A  0E02               	movlw	2
 18210  00381C  6EB0               	movwf	4016,c	;volatile
 18211                           
 18212                           ;eusart.c: 103: eusartTxHead = 0;
 18213  00381E  6A24               	clrf	_eusartTxHead,c
 18214                           
 18215                           ;eusart.c: 104: eusartTxTail = 0;
 18216  003820  6A25               	clrf	_eusartTxTail,c
 18217                           
 18218                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 18219  003822  0E40               	movlw	64
 18220  003824  6E23               	movwf	_eusartTxBufferRemaining,c	;volatile
 18221                           
 18222                           ;eusart.c: 107: eusartRxHead = 0;
 18223  003826  6A21               	clrf	_eusartRxHead,c
 18224                           
 18225                           ;eusart.c: 108: eusartRxTail = 0;
 18226  003828  6A22               	clrf	_eusartRxTail,c
 18227                           
 18228                           ;eusart.c: 109: eusartRxCount = 0;
 18229  00382A  0100               	movlb	0	; () banked
 18230  00382C  6B90               	clrf	_eusartRxCount& (0+255),b	;volatile
 18231                           
 18232                           ; BSR set to: 0
 18233                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 18234  00382E  8A9D               	bsf	3997,5,c	;volatile
 18235                           
 18236                           ; BSR set to: 0
 18237                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 18238  003830  88AB               	bsf	4011,4,c	;volatile
 18239                           
 18240                           ; BSR set to: 0
 18241  003832  0012               	return	
 18242  003834                     __end_of_EUSART_Initialize:
 18243                           	opt stack 0
 18244                           tblptru	equ	0xFF8
 18245                           tblptrh	equ	0xFF7
 18246                           tblptrl	equ	0xFF6
 18247                           tablat	equ	0xFF5
 18248                           prodh	equ	0xFF4
 18249                           prodl	equ	0xFF3
 18250                           intcon	equ	0xFF2
 18251                           postinc0	equ	0xFEE
 18252                           wreg	equ	0xFE8
 18253                           indf1	equ	0xFE7
 18254                           postdec1	equ	0xFE5
 18255                           fsr1h	equ	0xFE2
 18256                           fsr1l	equ	0xFE1
 18257                           indf2	equ	0xFDF
 18258                           postinc2	equ	0xFDE
 18259                           postdec2	equ	0xFDD
 18260                           plusw2	equ	0xFDB
 18261                           fsr2h	equ	0xFDA
 18262                           fsr2l	equ	0xFD9
 18263                           status	equ	0xFD8
 18264                           
 18265 ;; *************** function _CMP1_Initialize *****************
 18266 ;; Defined at:
 18267 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 18268 ;; Parameters:    Size  Location     Type
 18269 ;;		None
 18270 ;; Auto vars:     Size  Location     Type
 18271 ;;		None
 18272 ;; Return value:  Size  Location     Type
 18273 ;;		None               void
 18274 ;; Registers used:
 18275 ;;		wreg, status,2
 18276 ;; Tracked objects:
 18277 ;;		On entry : F/0
 18278 ;;		On exit  : F/0
 18279 ;;		Unchanged: F/0
 18280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18281 ;;      Params:         0       0       0       0       0       0       0       0       0
 18282 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18283 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18284 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18285 ;;Total ram usage:        0 bytes
 18286 ;; Hardware stack levels used:    1
 18287 ;; Hardware stack levels required when called:   11
 18288 ;; This function calls:
 18289 ;;		Nothing
 18290 ;; This function is called by:
 18291 ;;		_SYSTEM_Initialize
 18292 ;; This function uses a non-reentrant model
 18293 ;;
 18294                           
 18295                           	psect	text81
 18296  00345E                     __ptext81:
 18297                           	opt stack 0
 18298  00345E                     _CMP1_Initialize:
 18299                           	opt stack 18
 18300                           
 18301                           ; BSR set to: 0
 18302                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 18303                           
 18304                           ; BSR set to: 0
 18305                           ;incstack = 0
 18306  00345E  9CA0               	bcf	4000,6,c	;volatile
 18307                           
 18308                           ; BSR set to: 0
 18309                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 18310  003460  0E9C               	movlw	156
 18311  003462  6E98               	movwf	3992,c	;volatile
 18312                           
 18313                           ; BSR set to: 0
 18314                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 18315  003464  8A9A               	bsf	3994,5,c	;volatile
 18316                           
 18317                           ; BSR set to: 0
 18318                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 18319  003466  929A               	bcf	3994,1,c	;volatile
 18320                           
 18321                           ; BSR set to: 0
 18322                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 18323  003468  969A               	bcf	3994,3,c	;volatile
 18324                           
 18325                           ; BSR set to: 0
 18326                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 18327  00346A  9CA1               	bcf	4001,6,c	;volatile
 18328                           
 18329                           ; BSR set to: 0
 18330                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 18331  00346C  9CA0               	bcf	4000,6,c	;volatile
 18332                           
 18333                           ; BSR set to: 0
 18334  00346E  0C9C               	retlw	156
 18335  003470                     __end_of_CMP1_Initialize:
 18336                           	opt stack 0
 18337                           tblptru	equ	0xFF8
 18338                           tblptrh	equ	0xFF7
 18339                           tblptrl	equ	0xFF6
 18340                           tablat	equ	0xFF5
 18341                           prodh	equ	0xFF4
 18342                           prodl	equ	0xFF3
 18343                           intcon	equ	0xFF2
 18344                           postinc0	equ	0xFEE
 18345                           wreg	equ	0xFE8
 18346                           indf1	equ	0xFE7
 18347                           postdec1	equ	0xFE5
 18348                           fsr1h	equ	0xFE2
 18349                           fsr1l	equ	0xFE1
 18350                           indf2	equ	0xFDF
 18351                           postinc2	equ	0xFDE
 18352                           postdec2	equ	0xFDD
 18353                           plusw2	equ	0xFDB
 18354                           fsr2h	equ	0xFDA
 18355                           fsr2l	equ	0xFD9
 18356                           status	equ	0xFD8
 18357                           
 18358 ;; *************** function _ADC_Initialize *****************
 18359 ;; Defined at:
 18360 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 18361 ;; Parameters:    Size  Location     Type
 18362 ;;		None
 18363 ;; Auto vars:     Size  Location     Type
 18364 ;;		None
 18365 ;; Return value:  Size  Location     Type
 18366 ;;		None               void
 18367 ;; Registers used:
 18368 ;;		wreg, status,2
 18369 ;; Tracked objects:
 18370 ;;		On entry : F/0
 18371 ;;		On exit  : F/0
 18372 ;;		Unchanged: F/0
 18373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18374 ;;      Params:         0       0       0       0       0       0       0       0       0
 18375 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18376 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18377 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18378 ;;Total ram usage:        0 bytes
 18379 ;; Hardware stack levels used:    1
 18380 ;; Hardware stack levels required when called:   11
 18381 ;; This function calls:
 18382 ;;		Nothing
 18383 ;; This function is called by:
 18384 ;;		_SYSTEM_Initialize
 18385 ;; This function uses a non-reentrant model
 18386 ;;
 18387                           
 18388                           	psect	text82
 18389  0034CC                     __ptext82:
 18390                           	opt stack 0
 18391  0034CC                     _ADC_Initialize:
 18392                           	opt stack 18
 18393                           
 18394                           ; BSR set to: 0
 18395                           ;adc.c: 68: VREFCON0 = 0b10100000;
 18396                           
 18397                           ; BSR set to: 0
 18398                           ;incstack = 0
 18399  0034CC  0EA0               	movlw	160
 18400  0034CE  6E7D               	movwf	3965,c	;volatile
 18401                           
 18402                           ;adc.c: 70: ADCON0 = 0x01;
 18403  0034D0  0E01               	movlw	1
 18404  0034D2  6EC2               	movwf	4034,c	;volatile
 18405                           
 18406                           ;adc.c: 73: ADCON1 = 0x08;
 18407  0034D4  0E08               	movlw	8
 18408  0034D6  6EC1               	movwf	4033,c	;volatile
 18409                           
 18410                           ;adc.c: 76: ADCON2 = 0b10001110;
 18411  0034D8  0E8E               	movlw	142
 18412  0034DA  6EC0               	movwf	4032,c	;volatile
 18413                           
 18414                           ; BSR set to: 0
 18415                           ;adc.c: 79: ADRESL = 0x00;
 18416  0034DC  6AC3               	clrf	4035,c	;volatile
 18417                           
 18418                           ; BSR set to: 0
 18419                           ;adc.c: 82: ADRESH = 0x00;
 18420  0034DE  6AC4               	clrf	4036,c	;volatile
 18421                           
 18422                           ; BSR set to: 0
 18423  0034E0  0012               	return	
 18424  0034E2                     __end_of_ADC_Initialize:
 18425                           	opt stack 0
 18426                           tblptru	equ	0xFF8
 18427                           tblptrh	equ	0xFF7
 18428                           tblptrl	equ	0xFF6
 18429                           tablat	equ	0xFF5
 18430                           prodh	equ	0xFF4
 18431                           prodl	equ	0xFF3
 18432                           intcon	equ	0xFF2
 18433                           postinc0	equ	0xFEE
 18434                           wreg	equ	0xFE8
 18435                           indf1	equ	0xFE7
 18436                           postdec1	equ	0xFE5
 18437                           fsr1h	equ	0xFE2
 18438                           fsr1l	equ	0xFE1
 18439                           indf2	equ	0xFDF
 18440                           postinc2	equ	0xFDE
 18441                           postdec2	equ	0xFDD
 18442                           plusw2	equ	0xFDB
 18443                           fsr2h	equ	0xFDA
 18444                           fsr2l	equ	0xFD9
 18445                           status	equ	0xFD8
 18446                           
 18447 ;; *************** function _MOTEapp_handlerState *****************
 18448 ;; Defined at:
 18449 ;;		line 154 in file "../Includes/Board/MOTEapp.c"
 18450 ;; Parameters:    Size  Location     Type
 18451 ;;  state           1    wreg     enum E7150
 18452 ;; Auto vars:     Size  Location     Type
 18453 ;;  state           1    0[BANK0 ] enum E7150
 18454 ;; Return value:  Size  Location     Type
 18455 ;;		None               void
 18456 ;; Registers used:
 18457 ;;		wreg
 18458 ;; Tracked objects:
 18459 ;;		On entry : F/0
 18460 ;;		On exit  : F/0
 18461 ;;		Unchanged: F/0
 18462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18463 ;;      Params:         0       0       0       0       0       0       0       0       0
 18464 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18465 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18466 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18467 ;;Total ram usage:        1 bytes
 18468 ;; Hardware stack levels used:    1
 18469 ;; Hardware stack levels required when called:   11
 18470 ;; This function calls:
 18471 ;;		Nothing
 18472 ;; This function is called by:
 18473 ;;		_main
 18474 ;; This function uses a non-reentrant model
 18475 ;;
 18476                           
 18477                           	psect	text83
 18478  0033DA                     __ptext83:
 18479                           	opt stack 0
 18480  0033DA                     _MOTEapp_handlerState:
 18481                           	opt stack 19
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;incstack = 0
 18485                           ;MOTEapp_handlerState@state stored from wreg
 18486  0033DA  6FC6               	movwf	MOTEapp_handlerState@state& (0+255),b
 18487                           
 18488                           ; BSR set to: 0
 18489                           ;MOTEapp.c: 156: moteState = state;
 18490  0033DC  C0C6  F0FB         	movff	MOTEapp_handlerState@state,_moteState
 18491                           
 18492                           ; BSR set to: 0
 18493  0033E0  0012               	return	
 18494  0033E2                     __end_of_MOTEapp_handlerState:
 18495                           	opt stack 0
 18496                           tblptru	equ	0xFF8
 18497                           tblptrh	equ	0xFF7
 18498                           tblptrl	equ	0xFF6
 18499                           tablat	equ	0xFF5
 18500                           prodh	equ	0xFF4
 18501                           prodl	equ	0xFF3
 18502                           intcon	equ	0xFF2
 18503                           postinc0	equ	0xFEE
 18504                           wreg	equ	0xFE8
 18505                           indf1	equ	0xFE7
 18506                           postdec1	equ	0xFE5
 18507                           fsr1h	equ	0xFE2
 18508                           fsr1l	equ	0xFE1
 18509                           indf2	equ	0xFDF
 18510                           postinc2	equ	0xFDE
 18511                           postdec2	equ	0xFDD
 18512                           plusw2	equ	0xFDB
 18513                           fsr2h	equ	0xFDA
 18514                           fsr2l	equ	0xFD9
 18515                           status	equ	0xFD8
 18516                           
 18517 ;; *************** function _DATAEE_ReadByte *****************
 18518 ;; Defined at:
 18519 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 18520 ;; Parameters:    Size  Location     Type
 18521 ;;  bAdd            1    wreg     unsigned char 
 18522 ;; Auto vars:     Size  Location     Type
 18523 ;;  bAdd            1    0[BANK0 ] unsigned char 
 18524 ;; Return value:  Size  Location     Type
 18525 ;;                  1    wreg      unsigned char 
 18526 ;; Registers used:
 18527 ;;		wreg, status,2
 18528 ;; Tracked objects:
 18529 ;;		On entry : F/0
 18530 ;;		On exit  : 0/0
 18531 ;;		Unchanged: 0/0
 18532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18533 ;;      Params:         0       0       0       0       0       0       0       0       0
 18534 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18535 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18536 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18537 ;;Total ram usage:        1 bytes
 18538 ;; Hardware stack levels used:    1
 18539 ;; Hardware stack levels required when called:   11
 18540 ;; This function calls:
 18541 ;;		Nothing
 18542 ;; This function is called by:
 18543 ;;		_main
 18544 ;; This function uses a non-reentrant model
 18545 ;;
 18546                           
 18547                           	psect	text84
 18548  0034B8                     __ptext84:
 18549                           	opt stack 0
 18550  0034B8                     _DATAEE_ReadByte:
 18551                           	opt stack 19
 18552                           
 18553                           ; BSR set to: 0
 18554                           ;incstack = 0
 18555                           ;DATAEE_ReadByte@bAdd stored from wreg
 18556  0034B8  6FC6               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 18557                           
 18558                           ; BSR set to: 0
 18559                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 18560  0034BA  C0C6  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 18561                           
 18562                           ; BSR set to: 0
 18563                           ;memory.c: 191: EECON1bits.CFGS = 0;
 18564  0034BE  9CA6               	bcf	4006,6,c	;volatile
 18565                           
 18566                           ; BSR set to: 0
 18567                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 18568  0034C0  9EA6               	bcf	4006,7,c	;volatile
 18569                           
 18570                           ; BSR set to: 0
 18571                           ;memory.c: 193: EECON1bits.RD = 1;
 18572  0034C2  80A6               	bsf	4006,0,c	;volatile
 18573                           
 18574                           ; BSR set to: 0
 18575                           ;memory.c: 194: __nop();
 18576  0034C4  F000               	nop	
 18577                           
 18578                           ;memory.c: 195: __nop();
 18579  0034C6  F000               	nop	
 18580                           
 18581                           ;memory.c: 197: return (EEDATA);
 18582  0034C8  50A8               	movf	4008,w,c	;volatile
 18583  0034CA  0012               	return	
 18584  0034CC                     __end_of_DATAEE_ReadByte:
 18585                           	opt stack 0
 18586                           tblptru	equ	0xFF8
 18587                           tblptrh	equ	0xFF7
 18588                           tblptrl	equ	0xFF6
 18589                           tablat	equ	0xFF5
 18590                           prodh	equ	0xFF4
 18591                           prodl	equ	0xFF3
 18592                           intcon	equ	0xFF2
 18593                           postinc0	equ	0xFEE
 18594                           wreg	equ	0xFE8
 18595                           indf1	equ	0xFE7
 18596                           postdec1	equ	0xFE5
 18597                           fsr1h	equ	0xFE2
 18598                           fsr1l	equ	0xFE1
 18599                           indf2	equ	0xFDF
 18600                           postinc2	equ	0xFDE
 18601                           postdec2	equ	0xFDD
 18602                           plusw2	equ	0xFDB
 18603                           fsr2h	equ	0xFDA
 18604                           fsr2l	equ	0xFD9
 18605                           status	equ	0xFD8
 18606                           
 18607 ;; *************** function _INTERRUPT_InterruptManager *****************
 18608 ;; Defined at:
 18609 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 18610 ;; Parameters:    Size  Location     Type
 18611 ;;		None
 18612 ;; Auto vars:     Size  Location     Type
 18613 ;;		None
 18614 ;; Return value:  Size  Location     Type
 18615 ;;		None               void
 18616 ;; Registers used:
 18617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18618 ;; Tracked objects:
 18619 ;;		On entry : 0/0
 18620 ;;		On exit  : 0/0
 18621 ;;		Unchanged: 0/0
 18622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18623 ;;      Params:         0       0       0       0       0       0       0       0       0
 18624 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18625 ;;      Temps:         12       0       0       0       0       0       0       0       0
 18626 ;;      Totals:        12       0       0       0       0       0       0       0       0
 18627 ;;Total ram usage:       12 bytes
 18628 ;; Hardware stack levels used:    1
 18629 ;; Hardware stack levels required when called:   10
 18630 ;; This function calls:
 18631 ;;		_CMP1_ISR
 18632 ;;		_EUSART_Receive_ISR
 18633 ;;		_EUSART_Transmit_ISR
 18634 ;;		_TMR1_ISR
 18635 ;;		_TMRapp_Tick
 18636 ;;		_USBDeviceTasks
 18637 ;;		_USBapp_setrxByteFlag
 18638 ;; This function is called by:
 18639 ;;		Interrupt level 2
 18640 ;; This function uses a non-reentrant model
 18641 ;;
 18642                           
 18643                           	psect	intcode
 18644  001008                     __pintcode:
 18645                           	opt stack 0
 18646  001008                     _INTERRUPT_InterruptManager:
 18647                           	opt stack 10
 18648                           
 18649                           ;incstack = 0
 18650  001008  CFFA F053          	movff	pclath,??_INTERRUPT_InterruptManager
 18651  00100C  CFFB F054          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 18652  001010  CFE1 F055          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 18653  001014  CFE2 F056          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 18654  001018  CFD9 F057          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 18655  00101C  CFDA F058          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 18656  001020  CFF3 F059          	movff	prodl,??_INTERRUPT_InterruptManager+6
 18657  001024  CFF4 F05A          	movff	prodh,??_INTERRUPT_InterruptManager+7
 18658  001028  CFF6 F05B          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 18659  00102C  CFF7 F05C          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 18660  001030  CFF8 F05D          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 18661  001034  CFF5 F05E          	movff	tablat,??_INTERRUPT_InterruptManager+11
 18662                           
 18663                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 18664  001038  B09D               	btfsc	3997,0,c	;volatile
 18665  00103A  A09E               	btfss	3998,0,c	;volatile
 18666  00103C  D005               	goto	i2l1105
 18667                           
 18668                           ;interrupt_manager.c: 59: {
 18669                           ;interrupt_manager.c: 60: TMR1_ISR();
 18670  00103E  EC7C  F01A         	call	_TMR1_ISR	;wreg free
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;interrupt_manager.c: 62: TMRapp_Tick();
 18674  001042  ECDD  F019         	call	_TMRapp_Tick	;wreg free
 18675                           
 18676                           ;interrupt_manager.c: 63: }
 18677  001046  D016               	goto	i2l1113
 18678  001048                     i2l1105:
 18679                           
 18680                           ;interrupt_manager.c: 64: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 18681  001048  BA9D               	btfsc	3997,5,c	;volatile
 18682  00104A  AA9E               	btfss	3998,5,c	;volatile
 18683  00104C  D005               	goto	i2l1107
 18684                           
 18685                           ;interrupt_manager.c: 65: {
 18686                           ;interrupt_manager.c: 66: USBapp_setrxByteFlag();
 18687  00104E  ECEA  F019         	call	_USBapp_setrxByteFlag	;wreg free
 18688                           
 18689                           ;interrupt_manager.c: 67: EUSART_Receive_ISR();
 18690  001052  EC42  F01B         	call	_EUSART_Receive_ISR	;wreg free
 18691                           
 18692                           ;interrupt_manager.c: 68: }
 18693  001056  D00E               	goto	i2l1113
 18694  001058                     i2l1107:
 18695                           
 18696                           ;interrupt_manager.c: 69: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 18697  001058  B89D               	btfsc	3997,4,c	;volatile
 18698  00105A  A89E               	btfss	3998,4,c	;volatile
 18699  00105C  D003               	goto	i2l1109
 18700                           
 18701                           ;interrupt_manager.c: 70: {
 18702                           ;interrupt_manager.c: 71: EUSART_Transmit_ISR();
 18703  00105E  EC57  F01B         	call	_EUSART_Transmit_ISR	;wreg free
 18704                           
 18705                           ;interrupt_manager.c: 72: }
 18706  001062  D008               	goto	i2l1113
 18707  001064                     i2l1109:
 18708                           
 18709                           ;interrupt_manager.c: 73: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 18710  001064  BCA0               	btfsc	4000,6,c	;volatile
 18711  001066  ACA1               	btfss	4001,6,c	;volatile
 18712  001068  D003               	goto	i2l9691
 18713                           
 18714                           ;interrupt_manager.c: 74: {
 18715                           ;interrupt_manager.c: 75: CMP1_ISR();
 18716  00106A  ECDB  F019         	call	_CMP1_ISR	;wreg free
 18717                           
 18718                           ;interrupt_manager.c: 76: }
 18719  00106E  D002               	goto	i2l1113
 18720  001070                     i2l9691:
 18721                           
 18722                           ;interrupt_manager.c: 77: else
 18723                           ;interrupt_manager.c: 78: {
 18724                           ;interrupt_manager.c: 80: USBDeviceTasks();
 18725  001070  EC91  F02B         	call	_USBDeviceTasks	;wreg free
 18726  001074                     i2l1113:
 18727  001074  C05E  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 18728  001078  C05D  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 18729  00107C  C05C  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 18730  001080  C05B  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 18731  001084  C05A  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 18732  001088  C059  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 18733  00108C  C058  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 18734  001090  C057  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 18735  001094  C056  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 18736  001098  C055  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 18737  00109C  C054  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 18738  0010A0  C053  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 18739  0010A4  0011               	retfie		f
 18740  0010A6                     __end_of_INTERRUPT_InterruptManager:
 18741                           	opt stack 0
 18742                           pclatu	equ	0xFFB
 18743                           pclath	equ	0xFFA
 18744                           tblptru	equ	0xFF8
 18745                           tblptrh	equ	0xFF7
 18746                           tblptrl	equ	0xFF6
 18747                           tablat	equ	0xFF5
 18748                           prodh	equ	0xFF4
 18749                           prodl	equ	0xFF3
 18750                           intcon	equ	0xFF2
 18751                           postinc0	equ	0xFEE
 18752                           wreg	equ	0xFE8
 18753                           indf1	equ	0xFE7
 18754                           postdec1	equ	0xFE5
 18755                           fsr1h	equ	0xFE2
 18756                           fsr1l	equ	0xFE1
 18757                           indf2	equ	0xFDF
 18758                           postinc2	equ	0xFDE
 18759                           postdec2	equ	0xFDD
 18760                           plusw2	equ	0xFDB
 18761                           fsr2h	equ	0xFDA
 18762                           fsr2l	equ	0xFD9
 18763                           status	equ	0xFD8
 18764                           
 18765 ;; *************** function _USBapp_setrxByteFlag *****************
 18766 ;; Defined at:
 18767 ;;		line 226 in file "../Includes/Board/USBapp.c"
 18768 ;; Parameters:    Size  Location     Type
 18769 ;;		None
 18770 ;; Auto vars:     Size  Location     Type
 18771 ;;		None
 18772 ;; Return value:  Size  Location     Type
 18773 ;;		None               void
 18774 ;; Registers used:
 18775 ;;		wreg, status,2
 18776 ;; Tracked objects:
 18777 ;;		On entry : 0/0
 18778 ;;		On exit  : 0/0
 18779 ;;		Unchanged: 0/0
 18780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18781 ;;      Params:         0       0       0       0       0       0       0       0       0
 18782 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18783 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18784 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18785 ;;Total ram usage:        0 bytes
 18786 ;; Hardware stack levels used:    1
 18787 ;; This function calls:
 18788 ;;		Nothing
 18789 ;; This function is called by:
 18790 ;;		_INTERRUPT_InterruptManager
 18791 ;; This function uses a non-reentrant model
 18792 ;;
 18793                           
 18794                           	psect	text86
 18795  0033D4                     __ptext86:
 18796                           	opt stack 0
 18797  0033D4                     _USBapp_setrxByteFlag:
 18798                           	opt stack 19
 18799                           
 18800                           ;USBapp.c: 228: rxByteFlag = 1;
 18801                           
 18802                           ;incstack = 0
 18803  0033D4  0E01               	movlw	1
 18804  0033D6  6E26               	movwf	_rxByteFlag,c	;volatile
 18805  0033D8  0C01               	retlw	1
 18806  0033DA                     __end_of_USBapp_setrxByteFlag:
 18807                           	opt stack 0
 18808                           pclatu	equ	0xFFB
 18809                           pclath	equ	0xFFA
 18810                           tblptru	equ	0xFF8
 18811                           tblptrh	equ	0xFF7
 18812                           tblptrl	equ	0xFF6
 18813                           tablat	equ	0xFF5
 18814                           prodh	equ	0xFF4
 18815                           prodl	equ	0xFF3
 18816                           intcon	equ	0xFF2
 18817                           postinc0	equ	0xFEE
 18818                           wreg	equ	0xFE8
 18819                           indf1	equ	0xFE7
 18820                           postdec1	equ	0xFE5
 18821                           fsr1h	equ	0xFE2
 18822                           fsr1l	equ	0xFE1
 18823                           indf2	equ	0xFDF
 18824                           postinc2	equ	0xFDE
 18825                           postdec2	equ	0xFDD
 18826                           plusw2	equ	0xFDB
 18827                           fsr2h	equ	0xFDA
 18828                           fsr2l	equ	0xFD9
 18829                           status	equ	0xFD8
 18830                           
 18831 ;; *************** function _USBDeviceTasks *****************
 18832 ;; Defined at:
 18833 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 18834 ;; Parameters:    Size  Location     Type
 18835 ;;		None
 18836 ;; Auto vars:     Size  Location     Type
 18837 ;;  i               1   34[COMRAM] unsigned char 
 18838 ;; Return value:  Size  Location     Type
 18839 ;;		None               void
 18840 ;; Registers used:
 18841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18842 ;; Tracked objects:
 18843 ;;		On entry : 0/0
 18844 ;;		On exit  : 0/0
 18845 ;;		Unchanged: 0/0
 18846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18847 ;;      Params:         0       0       0       0       0       0       0       0       0
 18848 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18849 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18850 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18851 ;;Total ram usage:        1 bytes
 18852 ;; Hardware stack levels used:    1
 18853 ;; Hardware stack levels required when called:    9
 18854 ;; This function calls:
 18855 ;;		_USBCtrlEPAllowStatusStage
 18856 ;;		_USBCtrlEPService
 18857 ;;		_USBStallHandler
 18858 ;;		_USBSuspend
 18859 ;;		_USBWakeFromSuspend
 18860 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18861 ;;		i2_USBDeviceInit
 18862 ;; This function is called by:
 18863 ;;		_INTERRUPT_InterruptManager
 18864 ;; This function uses a non-reentrant model
 18865 ;;
 18866                           
 18867                           	psect	text87
 18868  005722                     __ptext87:
 18869                           	opt stack 0
 18870  005722                     _USBDeviceTasks:
 18871                           	opt stack 10
 18872                           
 18873                           ;usb_device.c: 430: uint8_t i;
 18874                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 18875                           
 18876                           ;incstack = 0
 18877  005722  0100               	movlb	0	; () banked
 18878  005724  0589               	decf	_USBDeviceState& (0+255),w,b	;volatile
 18879  005726  B4D8               	btfsc	status,2,c
 18880                           
 18881                           ; BSR set to: 0
 18882                           ;usb_device.c: 433: {
 18883                           ;usb_device.c: 443: if(!UCONbits.SE0)
 18884  005728  BA60               	btfsc	3936,5,c	;volatile
 18885  00572A  D005               	goto	i2l9523
 18886                           
 18887                           ; BSR set to: 0
 18888                           ;usb_device.c: 444: {
 18889                           ;usb_device.c: 445: {UIR = 0;};
 18890  00572C  6A65               	clrf	3941,c	;volatile
 18891                           
 18892                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 18893  00572E  8064               	bsf	3940,0,c	;volatile
 18894                           
 18895                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 18896  005730  8864               	bsf	3940,4,c	;volatile
 18897                           
 18898                           ; BSR set to: 0
 18899                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 18900  005732  0E02               	movlw	2
 18901  005734  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 18902  005736                     i2l9523:
 18903                           
 18904                           ; BSR set to: 0
 18905                           ;usb_device.c: 449: }
 18906                           ;usb_device.c: 450: }
 18907                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 18908  005736  B465               	btfsc	3941,2,c	;volatile
 18909                           
 18910                           ; BSR set to: 0
 18911  005738  A464               	btfss	3940,2,c	;volatile
 18912  00573A  D003               	goto	i2l9531
 18913                           
 18914                           ; BSR set to: 0
 18915                           ;usb_device.c: 455: {
 18916                           ;usb_device.c: 456: (UIR &= 0xFB);
 18917  00573C  9465               	bcf	3941,2,c	;volatile
 18918                           
 18919                           ; BSR set to: 0
 18920                           ;usb_device.c: 457: USBWakeFromSuspend();
 18921  00573E  EC0A  F01B         	call	_USBWakeFromSuspend	;wreg free
 18922  005742                     i2l9531:
 18923                           
 18924                           ;usb_device.c: 458: }
 18925                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 18926  005742  A260               	btfss	3936,1,c	;volatile
 18927  005744  D002               	goto	i2l1576
 18928                           
 18929                           ;usb_device.c: 464: {
 18930                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 18931  005746  94A4               	bcf	4004,2,c	;volatile
 18932                           
 18933                           ;usb_device.c: 466: return;
 18934  005748  0012               	return	
 18935  00574A                     i2l1576:
 18936                           
 18937                           ;usb_device.c: 467: }
 18938                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 18939  00574A  B065               	btfsc	3941,0,c	;volatile
 18940  00574C  A064               	btfss	3940,0,c	;volatile
 18941  00574E  D006               	goto	i2l9545
 18942                           
 18943                           ;usb_device.c: 480: {
 18944                           ;usb_device.c: 481: USBDeviceInit();
 18945  005750  EC6E  F028         	call	i2_USBDeviceInit	;wreg free
 18946                           
 18947                           ; BSR set to: 0
 18948                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 18949  005754  84A3               	bsf	4003,2,c	;volatile
 18950                           
 18951                           ; BSR set to: 0
 18952                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 18953  005756  0E04               	movlw	4
 18954  005758  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 18955                           
 18956                           ; BSR set to: 0
 18957                           ;usb_device.c: 489: (UIR &= 0xFE);
 18958  00575A  9065               	bcf	3941,0,c	;volatile
 18959  00575C                     i2l9545:
 18960                           
 18961                           ;usb_device.c: 490: }
 18962                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 18963  00575C  B865               	btfsc	3941,4,c	;volatile
 18964  00575E  A864               	btfss	3940,4,c	;volatile
 18965  005760  D003               	goto	i2l9553
 18966                           
 18967                           ;usb_device.c: 496: {
 18968                           ;usb_device.c: 497: USBSuspend();
 18969  005762  ECCB  F01A         	call	_USBSuspend	;wreg free
 18970                           
 18971                           ;usb_device.c: 498: (UIR &= 0xEF);
 18972  005766  9865               	bcf	3941,4,c	;volatile
 18973  005768                     i2l9553:
 18974                           
 18975                           ;usb_device.c: 499: }
 18976                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 18977  005768  AC65               	btfss	3941,6,c	;volatile
 18978  00576A  D014               	goto	i2l9569
 18979                           
 18980                           ;usb_device.c: 502: {
 18981                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 18982  00576C  AC64               	btfss	3940,6,c	;volatile
 18983  00576E  D00A               	goto	i2l9559
 18984                           
 18985                           ;usb_device.c: 504: {
 18986                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 18987  005770  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18988  005772  0E73               	movlw	115
 18989  005774  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18990  005776  6A42               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18991  005778  6A41               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18992  00577A  6A44               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18993  00577C  0E01               	movlw	1
 18994  00577E  6E43               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18995  005780  ECCF  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18996  005784                     i2l9559:
 18997                           
 18998                           ;usb_device.c: 506: }
 18999                           ;usb_device.c: 507: (UIR &= 0xBF);
 19000  005784  9C65               	bcf	3941,6,c	;volatile
 19001                           
 19002                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 19003  005786  501C               	movf	_USBStatusStageTimeoutCounter,w,c
 19004  005788  A4D8               	btfss	status,2,c
 19005                           
 19006                           ;usb_device.c: 513: {
 19007                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 19008  00578A  061C               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 19009                           
 19010                           ;usb_device.c: 515: }
 19011                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 19012  00578C  661C               	tstfsz	_USBStatusStageTimeoutCounter,c	;volatile
 19013  00578E  D002               	goto	i2l9569
 19014                           
 19015                           ;usb_device.c: 522: {
 19016                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 19017  005790  EC64  F025         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19018  005794                     i2l9569:
 19019                           
 19020                           ;usb_device.c: 524: }
 19021                           ;usb_device.c: 525: }
 19022                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 19023  005794  BA65               	btfsc	3941,5,c	;volatile
 19024  005796  AA64               	btfss	3940,5,c	;volatile
 19025  005798  D002               	goto	i2l9575
 19026                           
 19027                           ;usb_device.c: 528: {
 19028                           ;usb_device.c: 529: USBStallHandler();
 19029  00579A  EC05  F01D         	call	_USBStallHandler	;wreg free
 19030  00579E                     i2l9575:
 19031                           
 19032                           ;usb_device.c: 530: }
 19033                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 19034  00579E  B265               	btfsc	3941,1,c	;volatile
 19035  0057A0  A264               	btfss	3940,1,c	;volatile
 19036  0057A2  D00B               	goto	i2l9583
 19037                           
 19038                           ;usb_device.c: 533: {
 19039                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 19040  0057A4  0E7F               	movlw	127
 19041  0057A6  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19042  0057A8  683F               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19043  0057AA  6A42               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19044  0057AC  6A41               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19045  0057AE  6A44               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19046  0057B0  0E01               	movlw	1
 19047  0057B2  6E43               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19048  0057B4  ECCF  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19049                           
 19050                           ;usb_device.c: 535: {UEIR = 0;};
 19051  0057B8  6A67               	clrf	3943,c	;volatile
 19052  0057BA                     i2l9583:
 19053                           
 19054                           ;usb_device.c: 536: }
 19055                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 19056  0057BA  0E04               	movlw	4
 19057  0057BC  0100               	movlb	0	; () banked
 19058  0057BE  5D89               	subwf	_USBDeviceState& (0+255),w,b	;volatile
 19059  0057C0  E202               	bc	i2l1586
 19060                           
 19061                           ; BSR set to: 0
 19062                           ;usb_device.c: 544: {
 19063                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 19064  0057C2  94A4               	bcf	4004,2,c	;volatile
 19065                           
 19066                           ;usb_device.c: 546: return;
 19067  0057C4  0012               	return	
 19068  0057C6                     i2l1586:
 19069                           
 19070                           ; BSR set to: 0
 19071                           ;usb_device.c: 547: }
 19072                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 19073  0057C6  A664               	btfss	3940,3,c	;volatile
 19074  0057C8  D02B               	goto	i2l1587
 19075                           
 19076                           ; BSR set to: 0
 19077                           ;usb_device.c: 553: {
 19078                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 19079  0057CA  6A52               	clrf	USBDeviceTasks@i,c
 19080  0057CC                     i2l1588:
 19081                           
 19082                           ;usb_device.c: 555: {
 19083                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 19084  0057CC  A665               	btfss	3941,3,c	;volatile
 19085  0057CE  D028               	goto	i2l1587
 19086                           
 19087                           ;usb_device.c: 557: {
 19088                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 19089  0057D0  CF61 F02F          	movff	3937,_USTATcopy	;volatile
 19090                           
 19091                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 19092  0057D4  302F               	rrcf	_USTATcopy,w,c	;volatile
 19093  0057D6  32E8               	rrcf	wreg,f,c
 19094  0057D8  32E8               	rrcf	wreg,f,c
 19095  0057DA  0B0F               	andlw	15
 19096  0057DC  6E20               	movwf	_endpoint_number,c	;volatile
 19097                           
 19098                           ;usb_device.c: 562: (UIR &= 0xF7);
 19099  0057DE  9665               	bcf	3941,3,c	;volatile
 19100                           
 19101                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 19102  0057E0  B42F               	btfsc	_USTATcopy,2,c	;volatile
 19103  0057E2  D004               	goto	i2l9603
 19104                           
 19105                           ;usb_device.c: 567: {
 19106                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 19107  0057E4  5020               	movf	_endpoint_number,w,c
 19108  0057E6  0100               	movlb	0	; () banked
 19109  0057E8  0F6D               	addlw	low _ep_data_out	;volatile
 19110  0057EA  D003               	goto	L76
 19111  0057EC                     i2l9603:
 19112                           
 19113                           ;usb_device.c: 570: else
 19114                           ;usb_device.c: 571: {
 19115                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 19116  0057EC  5020               	movf	_endpoint_number,w,c
 19117  0057EE  0100               	movlb	0	; () banked
 19118  0057F0  0F6A               	addlw	low _ep_data_in	;volatile
 19119  0057F2                     L76:
 19120  0057F2  6ED9               	movwf	fsr2l,c
 19121  0057F4  6ADA               	clrf	fsr2h,c
 19122  0057F6  70DF               	btg	indf2,0,c
 19123                           
 19124                           ; BSR set to: 0
 19125                           ;usb_device.c: 573: }
 19126                           ;usb_device.c: 577: if(endpoint_number == 0)
 19127  0057F8  6620               	tstfsz	_endpoint_number,c	;volatile
 19128  0057FA  D003               	goto	i2l9609
 19129                           
 19130                           ; BSR set to: 0
 19131                           ;usb_device.c: 578: {
 19132                           ;usb_device.c: 579: USBCtrlEPService();
 19133  0057FC  EC77  F026         	call	_USBCtrlEPService	;wreg free
 19134                           
 19135                           ;usb_device.c: 580: }
 19136  005800  D00B               	goto	i2l9611
 19137  005802                     i2l9609:
 19138                           
 19139                           ; BSR set to: 0
 19140                           ;usb_device.c: 581: else
 19141                           ;usb_device.c: 582: {
 19142                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 19143  005802  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19144  005804  0E72               	movlw	114
 19145  005806  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19146  005808  6A42               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19147  00580A  0E2F               	movlw	low _USTATcopy	;volatile
 19148  00580C  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19149  00580E  0E00               	movlw	0
 19150  005810  6A44               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19151  005812  6A43               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19152  005814  ECCF  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19153  005818                     i2l9611:
 19154  005818  2A52               	incf	USBDeviceTasks@i,f,c
 19155  00581A  0E03               	movlw	3
 19156  00581C  6452               	cpfsgt	USBDeviceTasks@i,c
 19157  00581E  D7D6               	goto	i2l1588
 19158  005820                     i2l1587:
 19159                           
 19160                           ;usb_device.c: 589: }
 19161                           ;usb_device.c: 590: }
 19162                           ;usb_device.c: 591: }
 19163                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 19164  005820  94A4               	bcf	4004,2,c	;volatile
 19165  005822  0012               	return	
 19166  005824                     __end_of_USBDeviceTasks:
 19167                           	opt stack 0
 19168                           pclatu	equ	0xFFB
 19169                           pclath	equ	0xFFA
 19170                           tblptru	equ	0xFF8
 19171                           tblptrh	equ	0xFF7
 19172                           tblptrl	equ	0xFF6
 19173                           tablat	equ	0xFF5
 19174                           prodh	equ	0xFF4
 19175                           prodl	equ	0xFF3
 19176                           intcon	equ	0xFF2
 19177                           postinc0	equ	0xFEE
 19178                           wreg	equ	0xFE8
 19179                           indf1	equ	0xFE7
 19180                           postdec1	equ	0xFE5
 19181                           fsr1h	equ	0xFE2
 19182                           fsr1l	equ	0xFE1
 19183                           indf2	equ	0xFDF
 19184                           postinc2	equ	0xFDE
 19185                           postdec2	equ	0xFDD
 19186                           plusw2	equ	0xFDB
 19187                           fsr2h	equ	0xFDA
 19188                           fsr2l	equ	0xFD9
 19189                           status	equ	0xFD8
 19190                           
 19191 ;; *************** function i2_USBDeviceInit *****************
 19192 ;; Defined at:
 19193 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 19194 ;; Parameters:    Size  Location     Type
 19195 ;;		None
 19196 ;; Auto vars:     Size  Location     Type
 19197 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 19198 ;; Return value:  Size  Location     Type
 19199 ;;		None               void
 19200 ;; Registers used:
 19201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19202 ;; Tracked objects:
 19203 ;;		On entry : 0/0
 19204 ;;		On exit  : F/0
 19205 ;;		Unchanged: 0/0
 19206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19207 ;;      Params:         0       0       0       0       0       0       0       0       0
 19208 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19209 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19210 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19211 ;;Total ram usage:        1 bytes
 19212 ;; Hardware stack levels used:    1
 19213 ;; Hardware stack levels required when called:    1
 19214 ;; This function calls:
 19215 ;;		i2_memset
 19216 ;; This function is called by:
 19217 ;;		_USBDeviceTasks
 19218 ;; This function uses a non-reentrant model
 19219 ;;
 19220                           
 19221                           	psect	text88
 19222  0050DC                     __ptext88:
 19223                           	opt stack 0
 19224  0050DC                     i2_USBDeviceInit:
 19225                           	opt stack 17
 19226                           
 19227                           ;usb_device.c: 239: uint8_t i;
 19228                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 19229                           
 19230                           ;incstack = 0
 19231  0050DC  94A3               	bcf	4003,2,c	;volatile
 19232                           
 19233                           ;usb_device.c: 244: {UEIR = 0;};
 19234  0050DE  6A67               	clrf	3943,c	;volatile
 19235                           
 19236                           ;usb_device.c: 247: {UIR = 0;};
 19237  0050E0  6A65               	clrf	3941,c	;volatile
 19238                           
 19239                           ;usb_device.c: 250: UEP0 = 0;
 19240  0050E2  6A6A               	clrf	3946,c	;volatile
 19241                           
 19242                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 19243  0050E4  0E0F               	movlw	15	;volatile
 19244  0050E6  6E31               	movwf	i2memset@p1+1,c
 19245  0050E8  0E6B               	movlw	107	;volatile
 19246  0050EA  6E30               	movwf	i2memset@p1,c
 19247  0050EC  6A33               	clrf	i2memset@c+1,c
 19248  0050EE  6A32               	clrf	i2memset@c,c
 19249  0050F0  6A35               	clrf	i2memset@n+1,c
 19250  0050F2  0E02               	movlw	2
 19251  0050F4  6E34               	movwf	i2memset@n,c
 19252  0050F6  ECC0  F01B         	call	i2_memset	;wreg free
 19253                           
 19254                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 19255  0050FA  0E16               	movlw	22
 19256  0050FC  6E62               	movwf	3938,c	;volatile
 19257  0050FE  0E9F               	movlw	159
 19258  005100  6E66               	movwf	3942,c	;volatile
 19259  005102  0E7B               	movlw	123
 19260  005104  6E64               	movwf	3940,c	;volatile
 19261                           
 19262                           ;usb_device.c: 257: ;
 19263                           ;usb_device.c: 260: ;
 19264                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 19265  005106  6A38               	clrf	i2USBDeviceInit@i,c
 19266  005108                     i2l9145:
 19267                           
 19268                           ;usb_device.c: 264: {
 19269                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 19270  005108  5038               	movf	i2USBDeviceInit@i,w,c
 19271  00510A  0D04               	mullw	4
 19272  00510C  0E00               	movlw	0	;volatile
 19273  00510E  24F3               	addwf	prodl,w,c
 19274  005110  6ED9               	movwf	fsr2l,c
 19275  005112  0E04               	movlw	4	;volatile
 19276  005114  20F4               	addwfc	prodh,w,c
 19277  005116  6EDA               	movwf	fsr2h,c
 19278  005118  6ADE               	clrf	postinc2,c
 19279  00511A  6ADE               	clrf	postinc2,c
 19280  00511C  6ADE               	clrf	postinc2,c
 19281  00511E  6ADD               	clrf	postdec2,c
 19282                           
 19283                           ; BSR set to: 4
 19284  005120  2A38               	incf	i2USBDeviceInit@i,f,c
 19285                           
 19286                           ; BSR set to: 4
 19287  005122  0E0B               	movlw	11
 19288  005124  6438               	cpfsgt	i2USBDeviceInit@i,c
 19289  005126  D7F0               	goto	i2l9145
 19290                           
 19291                           ; BSR set to: 4
 19292                           ;usb_device.c: 266: }
 19293                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 19294  005128  8C60               	bsf	3936,6,c	;volatile
 19295                           
 19296                           ;usb_device.c: 272: UADDR = 0x00;
 19297  00512A  6A63               	clrf	3939,c	;volatile
 19298                           
 19299                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 19300  00512C  9860               	bcf	3936,4,c	;volatile
 19301                           
 19302                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 19303  00512E  9C60               	bcf	3936,6,c	;volatile
 19304                           
 19305                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 19306  005130  D005               	goto	i2l9159
 19307  005132                     i2l9151:
 19308                           
 19309                           ;usb_device.c: 282: {
 19310                           ;usb_device.c: 283: (UIR &= 0xF7);
 19311  005132  9665               	bcf	3941,3,c	;volatile
 19312                           
 19313                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 19314  005134  6A2B               	clrf	_inPipes+3,c	;volatile
 19315                           
 19316                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 19317  005136  6A04               	clrf	_outPipes+3,c	;volatile
 19318                           
 19319                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 19320  005138  6A05               	clrf	_outPipes+4,c	;volatile
 19321  00513A  6A06               	clrf	_outPipes+5,c	;volatile
 19322  00513C                     i2l9159:
 19323  00513C  B665               	btfsc	3941,3,c	;volatile
 19324  00513E  D7F9               	goto	i2l9151
 19325                           
 19326                           ;usb_device.c: 288: }
 19327                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 19328  005140  0E01               	movlw	1
 19329  005142  6E1A               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 19330                           
 19331                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 19332  005144  6E1B               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 19333                           
 19334                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 19335  005146  0100               	movlb	0	; () banked
 19336  005148  6B87               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19337                           
 19338                           ; BSR set to: 0
 19339                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 19340  00514A  6B88               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19341                           
 19342                           ; BSR set to: 0
 19343                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 19344  00514C  6B86               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 19345                           
 19346                           ; BSR set to: 0
 19347                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 19348  00514E  6A38               	clrf	i2USBDeviceInit@i,c
 19349  005150                     i2l9175:
 19350                           
 19351                           ; BSR set to: 0
 19352                           ;usb_device.c: 302: {
 19353                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 19354  005150  5038               	movf	i2USBDeviceInit@i,w,c
 19355  005152  0D02               	mullw	2
 19356  005154  50F3               	movf	prodl,w,c
 19357  005156  0F09               	addlw	low _pBDTEntryIn
 19358  005158  6ED9               	movwf	fsr2l,c
 19359  00515A  6ADA               	clrf	fsr2h,c
 19360  00515C  6ADE               	clrf	postinc2,c
 19361  00515E  6ADD               	clrf	postdec2,c
 19362                           
 19363                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 19364  005160  5038               	movf	i2USBDeviceInit@i,w,c
 19365  005162  0D02               	mullw	2
 19366  005164  50F3               	movf	prodl,w,c
 19367  005166  0F60               	addlw	low _pBDTEntryOut
 19368  005168  6ED9               	movwf	fsr2l,c
 19369  00516A  6ADA               	clrf	fsr2h,c
 19370  00516C  6ADE               	clrf	postinc2,c
 19371  00516E  6ADD               	clrf	postdec2,c
 19372                           
 19373                           ; BSR set to: 0
 19374                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 19375  005170  5038               	movf	i2USBDeviceInit@i,w,c
 19376  005172  0F6A               	addlw	low _ep_data_in	;volatile
 19377  005174  6ED9               	movwf	fsr2l,c
 19378  005176  6ADA               	clrf	fsr2h,c
 19379  005178  6ADF               	clrf	indf2,c
 19380                           
 19381                           ; BSR set to: 0
 19382                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 19383  00517A  5038               	movf	i2USBDeviceInit@i,w,c
 19384  00517C  0F6D               	addlw	low _ep_data_out	;volatile
 19385  00517E  6ED9               	movwf	fsr2l,c
 19386  005180  6ADA               	clrf	fsr2h,c
 19387  005182  6ADF               	clrf	indf2,c
 19388                           
 19389                           ; BSR set to: 0
 19390  005184  2A38               	incf	i2USBDeviceInit@i,f,c
 19391                           
 19392                           ; BSR set to: 0
 19393  005186  0E02               	movlw	2
 19394  005188  6438               	cpfsgt	i2USBDeviceInit@i,c
 19395  00518A  D7E2               	goto	i2l9175
 19396                           
 19397                           ; BSR set to: 0
 19398                           ;usb_device.c: 307: }
 19399                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 19400  00518C  0104               	movlb	4	; () banked
 19401  00518E  0E04               	movlw	4	;volatile
 19402  005190  6E0A               	movwf	_pBDTEntryIn+1,c
 19403  005192  0E08               	movlw	8	;volatile
 19404  005194  6E09               	movwf	_pBDTEntryIn,c
 19405                           
 19406                           ; BSR set to: 4
 19407                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 19408  005196  0E16               	movlw	22
 19409  005198  6E6A               	movwf	3946,c	;volatile
 19410                           
 19411                           ; BSR set to: 4
 19412                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 19413  00519A  0E04               	movlw	4
 19414  00519C  6F03               	movwf	3,b	;volatile
 19415  00519E  0E30               	movlw	48
 19416  0051A0  6F02               	movwf	2,b	;volatile
 19417                           
 19418                           ; BSR set to: 4
 19419                           ;usb_device.c: 315: BDT[0].CNT = 8;
 19420  0051A2  0E08               	movlw	8
 19421  0051A4  6F01               	movwf	1,b	;volatile
 19422                           
 19423                           ; BSR set to: 4
 19424                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 19425  0051A6  0E04               	movlw	4
 19426  0051A8  6F00               	movwf	0,b	;volatile
 19427                           
 19428                           ; BSR set to: 4
 19429                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 19430  0051AA  8F00               	bsf	0,7,b	;volatile
 19431                           
 19432                           ; BSR set to: 4
 19433                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 19434  0051AC  6A2E               	clrf	_USBActiveConfiguration,c	;volatile
 19435                           
 19436                           ; BSR set to: 4
 19437                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 19438  0051AE  0100               	movlb	0	; () banked
 19439  0051B0  6B89               	clrf	_USBDeviceState& (0+255),b	;volatile
 19440                           
 19441                           ; BSR set to: 0
 19442  0051B2  0012               	return	
 19443  0051B4                     __end_ofi2_USBDeviceInit:
 19444                           	opt stack 0
 19445                           pclatu	equ	0xFFB
 19446                           pclath	equ	0xFFA
 19447                           tblptru	equ	0xFF8
 19448                           tblptrh	equ	0xFF7
 19449                           tblptrl	equ	0xFF6
 19450                           tablat	equ	0xFF5
 19451                           prodh	equ	0xFF4
 19452                           prodl	equ	0xFF3
 19453                           intcon	equ	0xFF2
 19454                           postinc0	equ	0xFEE
 19455                           wreg	equ	0xFE8
 19456                           indf1	equ	0xFE7
 19457                           postdec1	equ	0xFE5
 19458                           fsr1h	equ	0xFE2
 19459                           fsr1l	equ	0xFE1
 19460                           indf2	equ	0xFDF
 19461                           postinc2	equ	0xFDE
 19462                           postdec2	equ	0xFDD
 19463                           plusw2	equ	0xFDB
 19464                           fsr2h	equ	0xFDA
 19465                           fsr2l	equ	0xFD9
 19466                           status	equ	0xFD8
 19467                           
 19468 ;; *************** function _USBWakeFromSuspend *****************
 19469 ;; Defined at:
 19470 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 19471 ;; Parameters:    Size  Location     Type
 19472 ;;		None
 19473 ;; Auto vars:     Size  Location     Type
 19474 ;;		None
 19475 ;; Return value:  Size  Location     Type
 19476 ;;		None               void
 19477 ;; Registers used:
 19478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19479 ;; Tracked objects:
 19480 ;;		On entry : F/0
 19481 ;;		On exit  : 0/0
 19482 ;;		Unchanged: 0/0
 19483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19484 ;;      Params:         0       0       0       0       0       0       0       0       0
 19485 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19486 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19487 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19488 ;;Total ram usage:        0 bytes
 19489 ;; Hardware stack levels used:    1
 19490 ;; Hardware stack levels required when called:    5
 19491 ;; This function calls:
 19492 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19493 ;; This function is called by:
 19494 ;;		_USBDeviceTasks
 19495 ;; This function uses a non-reentrant model
 19496 ;;
 19497                           
 19498                           	psect	text89
 19499  003614                     __ptext89:
 19500                           	opt stack 0
 19501  003614                     _USBWakeFromSuspend:
 19502                           	opt stack 13
 19503                           
 19504                           ; BSR set to: 0
 19505                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 19506                           
 19507                           ; BSR set to: 0
 19508                           ;incstack = 0
 19509  003614  6B86               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 19510                           
 19511                           ; BSR set to: 0
 19512                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 19513  003616  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19514  003618  0E74               	movlw	116
 19515  00361A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19516  00361C  0E00               	movlw	0
 19517  00361E  6A42               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19518  003620  6A41               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19519  003622  6A44               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19520  003624  6A43               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19521  003626  ECCF  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19522                           
 19523                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 19524  00362A  9260               	bcf	3936,1,c	;volatile
 19525                           
 19526                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 19527  00362C  9464               	bcf	3940,2,c	;volatile
 19528                           
 19529                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 19530  00362E  D001               	goto	i2l9069
 19531  003630                     i2l9067:
 19532                           
 19533                           ;usb_device.c: 1977: {
 19534                           ;usb_device.c: 1978: (UIR &= 0xFB);
 19535  003630  9465               	bcf	3941,2,c	;volatile
 19536  003632                     i2l9069:
 19537  003632  A465               	btfss	3941,2,c	;volatile
 19538  003634  0012               	return	
 19539  003636  D7FC               	goto	i2l9067
 19540  003638                     __end_of_USBWakeFromSuspend:
 19541                           	opt stack 0
 19542                           pclatu	equ	0xFFB
 19543                           pclath	equ	0xFFA
 19544                           tblptru	equ	0xFF8
 19545                           tblptrh	equ	0xFF7
 19546                           tblptrl	equ	0xFF6
 19547                           tablat	equ	0xFF5
 19548                           prodh	equ	0xFF4
 19549                           prodl	equ	0xFF3
 19550                           intcon	equ	0xFF2
 19551                           postinc0	equ	0xFEE
 19552                           wreg	equ	0xFE8
 19553                           indf1	equ	0xFE7
 19554                           postdec1	equ	0xFE5
 19555                           fsr1h	equ	0xFE2
 19556                           fsr1l	equ	0xFE1
 19557                           indf2	equ	0xFDF
 19558                           postinc2	equ	0xFDE
 19559                           postdec2	equ	0xFDD
 19560                           plusw2	equ	0xFDB
 19561                           fsr2h	equ	0xFDA
 19562                           fsr2l	equ	0xFD9
 19563                           status	equ	0xFD8
 19564                           
 19565 ;; *************** function _USBSuspend *****************
 19566 ;; Defined at:
 19567 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 19568 ;; Parameters:    Size  Location     Type
 19569 ;;		None
 19570 ;; Auto vars:     Size  Location     Type
 19571 ;;		None
 19572 ;; Return value:  Size  Location     Type
 19573 ;;		None               void
 19574 ;; Registers used:
 19575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19576 ;; Tracked objects:
 19577 ;;		On entry : 0/0
 19578 ;;		On exit  : 0/0
 19579 ;;		Unchanged: 0/0
 19580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19581 ;;      Params:         0       0       0       0       0       0       0       0       0
 19582 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19583 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19584 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19585 ;;Total ram usage:        0 bytes
 19586 ;; Hardware stack levels used:    1
 19587 ;; Hardware stack levels required when called:    5
 19588 ;; This function calls:
 19589 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19590 ;; This function is called by:
 19591 ;;		_USBDeviceTasks
 19592 ;; This function uses a non-reentrant model
 19593 ;;
 19594                           
 19595                           	psect	text90
 19596  003596                     __ptext90:
 19597                           	opt stack 0
 19598  003596                     _USBSuspend:
 19599                           	opt stack 13
 19600                           
 19601                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 19602                           
 19603                           ;incstack = 0
 19604  003596  8464               	bsf	3940,2,c	;volatile
 19605                           
 19606                           ;usb_device.c: 1915: (UIR &= 0xEF);
 19607  003598  9865               	bcf	3941,4,c	;volatile
 19608                           
 19609                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 19610  00359A  8260               	bsf	3936,1,c	;volatile
 19611                           
 19612                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 19613  00359C  0E01               	movlw	1
 19614  00359E  0100               	movlb	0	; () banked
 19615  0035A0  6F86               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19616                           
 19617                           ; BSR set to: 0
 19618                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 19619  0035A2  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19620  0035A4  0E75               	movlw	117
 19621  0035A6  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19622  0035A8  6A42               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19623  0035AA  6A41               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19624  0035AC  6A44               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19625  0035AE  6A43               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19626  0035B0  EFD4  F01D         	goto	i2l6409	;wreg free
 19627  0035B4                     __end_of_USBSuspend:
 19628                           	opt stack 0
 19629                           pclatu	equ	0xFFB
 19630                           pclath	equ	0xFFA
 19631                           tblptru	equ	0xFF8
 19632                           tblptrh	equ	0xFF7
 19633                           tblptrl	equ	0xFF6
 19634                           tablat	equ	0xFF5
 19635                           prodh	equ	0xFF4
 19636                           prodl	equ	0xFF3
 19637                           intcon	equ	0xFF2
 19638                           postinc0	equ	0xFEE
 19639                           wreg	equ	0xFE8
 19640                           indf1	equ	0xFE7
 19641                           postdec1	equ	0xFE5
 19642                           fsr1h	equ	0xFE2
 19643                           fsr1l	equ	0xFE1
 19644                           indf2	equ	0xFDF
 19645                           postinc2	equ	0xFDE
 19646                           postdec2	equ	0xFDD
 19647                           plusw2	equ	0xFDB
 19648                           fsr2h	equ	0xFDA
 19649                           fsr2l	equ	0xFD9
 19650                           status	equ	0xFD8
 19651                           
 19652 ;; *************** function _USBStallHandler *****************
 19653 ;; Defined at:
 19654 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 19655 ;; Parameters:    Size  Location     Type
 19656 ;;		None
 19657 ;; Auto vars:     Size  Location     Type
 19658 ;;		None
 19659 ;; Return value:  Size  Location     Type
 19660 ;;		None               void
 19661 ;; Registers used:
 19662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19663 ;; Tracked objects:
 19664 ;;		On entry : 0/0
 19665 ;;		On exit  : 0/0
 19666 ;;		Unchanged: 0/0
 19667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19668 ;;      Params:         0       0       0       0       0       0       0       0       0
 19669 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19670 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19671 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19672 ;;Total ram usage:        0 bytes
 19673 ;; Hardware stack levels used:    1
 19674 ;; This function calls:
 19675 ;;		Nothing
 19676 ;; This function is called by:
 19677 ;;		_USBDeviceTasks
 19678 ;; This function uses a non-reentrant model
 19679 ;;
 19680                           
 19681                           	psect	text91
 19682  003A0A                     __ptext91:
 19683                           	opt stack 0
 19684  003A0A                     _USBStallHandler:
 19685                           	opt stack 18
 19686                           
 19687                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 19688                           
 19689                           ;incstack = 0
 19690  003A0A  A06A               	btfss	3946,0,c	;volatile
 19691  003A0C  D01B               	goto	i2l1726
 19692                           
 19693                           ;usb_device.c: 1859: {
 19694                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 19695  003A0E  0E80               	movlw	128
 19696  003A10  C00F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19697  003A14  C010  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19698  003A18  62DF               	cpfseq	indf2,c
 19699  003A1A  D013               	goto	i2l9091
 19700  003A1C  0E84               	movlw	132
 19701  003A1E  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 19702  003A22  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19703  003A26  62DF               	cpfseq	indf2,c
 19704  003A28  D00C               	goto	i2l9091
 19705                           
 19706                           ;usb_device.c: 1862: {
 19707                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19708  003A2A  C00F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19709  003A2E  C010  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19710  003A32  0E0C               	movlw	12
 19711  003A34  6EDF               	movwf	indf2,c
 19712                           
 19713                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19714  003A36  C00F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19715  003A3A  C010  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19716  003A3E  0E00               	movlw	0
 19717  003A40  8EDB               	bsf	plusw2,7,c
 19718  003A42                     i2l9091:
 19719                           
 19720                           ;usb_device.c: 1866: }
 19721                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 19722  003A42  906A               	bcf	3946,0,c	;volatile
 19723  003A44                     i2l1726:
 19724                           
 19725                           ;usb_device.c: 1868: }
 19726                           ;usb_device.c: 1870: (UIR &= 0xDF);
 19727  003A44  9A65               	bcf	3941,5,c	;volatile
 19728  003A46  0012               	return	
 19729  003A48                     __end_of_USBStallHandler:
 19730                           	opt stack 0
 19731                           pclatu	equ	0xFFB
 19732                           pclath	equ	0xFFA
 19733                           tblptru	equ	0xFF8
 19734                           tblptrh	equ	0xFF7
 19735                           tblptrl	equ	0xFF6
 19736                           tablat	equ	0xFF5
 19737                           prodh	equ	0xFF4
 19738                           prodl	equ	0xFF3
 19739                           intcon	equ	0xFF2
 19740                           postinc0	equ	0xFEE
 19741                           wreg	equ	0xFE8
 19742                           indf1	equ	0xFE7
 19743                           postdec1	equ	0xFE5
 19744                           fsr1h	equ	0xFE2
 19745                           fsr1l	equ	0xFE1
 19746                           indf2	equ	0xFDF
 19747                           postinc2	equ	0xFDE
 19748                           postdec2	equ	0xFDD
 19749                           plusw2	equ	0xFDB
 19750                           fsr2h	equ	0xFDA
 19751                           fsr2l	equ	0xFD9
 19752                           status	equ	0xFD8
 19753                           
 19754 ;; *************** function _USBCtrlEPService *****************
 19755 ;; Defined at:
 19756 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 19757 ;; Parameters:    Size  Location     Type
 19758 ;;		None
 19759 ;; Auto vars:     Size  Location     Type
 19760 ;;  setup_cnt       1   33[COMRAM] unsigned char 
 19761 ;; Return value:  Size  Location     Type
 19762 ;;		None               void
 19763 ;; Registers used:
 19764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19765 ;; Tracked objects:
 19766 ;;		On entry : F/0
 19767 ;;		On exit  : 0/0
 19768 ;;		Unchanged: 0/0
 19769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19770 ;;      Params:         0       0       0       0       0       0       0       0       0
 19771 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19772 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19773 ;;      Totals:         3       0       0       0       0       0       0       0       0
 19774 ;;Total ram usage:        3 bytes
 19775 ;; Hardware stack levels used:    1
 19776 ;; Hardware stack levels required when called:    8
 19777 ;; This function calls:
 19778 ;;		_USBCtrlTrfInHandler
 19779 ;;		_USBCtrlTrfOutHandler
 19780 ;;		_USBCtrlTrfSetupHandler
 19781 ;; This function is called by:
 19782 ;;		_USBDeviceTasks
 19783 ;; This function uses a non-reentrant model
 19784 ;;
 19785                           
 19786                           	psect	text92
 19787  004CEE                     __ptext92:
 19788                           	opt stack 0
 19789  004CEE                     _USBCtrlEPService:
 19790                           	opt stack 10
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 19794                           
 19795                           ;incstack = 0
 19796  004CEE  0E2D               	movlw	45
 19797  004CF0  6E1C               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 19798                           
 19799                           ; BSR set to: 0
 19800                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 19801  004CF2  C02F  F04F         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19802  004CF6  0EFD               	movlw	253
 19803  004CF8  164F               	andwf	??_USBCtrlEPService,f,c
 19804  004CFA  E14C               	bnz	i2l9125
 19805                           
 19806                           ; BSR set to: 0
 19807                           ;usb_device.c: 2013: {
 19808                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 19809  004CFC  90D8               	bcf	status,0,c
 19810  004CFE  302F               	rrcf	_USTATcopy,w,c	;volatile
 19811  004D00  0B3F               	andlw	63
 19812  004D02  0D04               	mullw	4
 19813  004D04  0104               	movlb	4	; () banked
 19814  004D06  0E00               	movlw	0	;volatile
 19815  004D08  24F3               	addwf	prodl,w,c
 19816  004D0A  6E0F               	movwf	_pBDTEntryEP0OutCurrent,c
 19817  004D0C  0E04               	movlw	4	;volatile
 19818  004D0E  20F4               	addwfc	prodh,w,c
 19819  004D10  6E10               	movwf	_pBDTEntryEP0OutCurrent+1,c
 19820                           
 19821                           ; BSR set to: 4
 19822                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 19823  004D12  C010  F012         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 19824  004D16  C00F  F011         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 19825                           
 19826                           ; BSR set to: 4
 19827                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 19828  004D1A  0E04               	movlw	4
 19829  004D1C  1A11               	xorwf	_pBDTEntryEP0OutNext,f,c
 19830                           
 19831                           ; BSR set to: 4
 19832                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 19833  004D1E  C00F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19834  004D22  C010  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19835  004D26  30DF               	rrcf	indf2,w,c
 19836  004D28  32E8               	rrcf	wreg,f,c
 19837  004D2A  0B0F               	andlw	15
 19838  004D2C  0A0D               	xorlw	13
 19839  004D2E  E130               	bnz	i2l9123
 19840                           
 19841                           ; BSR set to: 4
 19842                           ;usb_device.c: 2025: {
 19843                           ;usb_device.c: 2026: unsigned char setup_cnt;
 19844                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 19845  004D30  6A51               	clrf	USBCtrlEPService@setup_cnt,c
 19846  004D32                     i2l9111:
 19847                           
 19848                           ; BSR set to: 4
 19849                           ;usb_device.c: 2033: {
 19850                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 19851  004D32  EE20 F002          	lfsr	2,2
 19852  004D36  500F               	movf	_pBDTEntryEP0OutCurrent,w,c
 19853  004D38  26D9               	addwf	fsr2l,f,c
 19854  004D3A  5010               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19855  004D3C  22DA               	addwfc	fsr2h,f,c
 19856  004D3E  CFDE F04F          	movff	postinc2,??_USBCtrlEPService
 19857  004D42  CFDD F050          	movff	postdec2,??_USBCtrlEPService+1
 19858  004D46  C04F  FFD9         	movff	??_USBCtrlEPService,fsr2l
 19859  004D4A  C050  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 19860  004D4E  0E30               	movlw	48	;volatile
 19861  004D50  2451               	addwf	USBCtrlEPService@setup_cnt,w,c
 19862  004D52  6EE1               	movwf	fsr1l,c
 19863  004D54  6AE2               	clrf	fsr1h,c
 19864  004D56  0E04               	movlw	4	;volatile
 19865  004D58  22E2               	addwfc	fsr1h,f,c
 19866  004D5A  CFDF FFE7          	movff	indf2,indf1
 19867                           
 19868                           ; BSR set to: 4
 19869                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 19870  004D5E  EE20 F002          	lfsr	2,2
 19871  004D62  500F               	movf	_pBDTEntryEP0OutCurrent,w,c
 19872  004D64  26D9               	addwf	fsr2l,f,c
 19873  004D66  5010               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19874  004D68  22DA               	addwfc	fsr2h,f,c
 19875  004D6A  2ADE               	incf	postinc2,f,c
 19876  004D6C  0E00               	movlw	0
 19877  004D6E  22DD               	addwfc	postdec2,f,c
 19878                           
 19879                           ; BSR set to: 4
 19880  004D70  2A51               	incf	USBCtrlEPService@setup_cnt,f,c
 19881                           
 19882                           ; BSR set to: 4
 19883  004D72  0E07               	movlw	7
 19884  004D74  6451               	cpfsgt	USBCtrlEPService@setup_cnt,c
 19885  004D76  D7DD               	goto	i2l9111
 19886                           
 19887                           ; BSR set to: 4
 19888                           ;usb_device.c: 2036: }
 19889                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19890  004D78  EE20 F002          	lfsr	2,2
 19891  004D7C  500F               	movf	_pBDTEntryEP0OutCurrent,w,c
 19892  004D7E  26D9               	addwf	fsr2l,f,c
 19893  004D80  5010               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19894  004D82  22DA               	addwfc	fsr2h,f,c
 19895  004D84  0E30               	movlw	48
 19896  004D86  6EDE               	movwf	postinc2,c
 19897  004D88  0E04               	movlw	4
 19898  004D8A  6EDD               	movwf	postdec2,c
 19899                           
 19900                           ; BSR set to: 4
 19901                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 19902  004D8C  EF71  F01F         	goto	_USBCtrlTrfSetupHandler	;wreg free
 19903  004D90                     i2l9123:
 19904                           
 19905                           ; BSR set to: 4
 19906                           ;usb_device.c: 2042: else
 19907                           ;usb_device.c: 2043: {
 19908                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 19909  004D90  EF69  F01E         	goto	_USBCtrlTrfOutHandler	;wreg free
 19910  004D94                     i2l9125:
 19911                           
 19912                           ; BSR set to: 0
 19913                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 19914  004D94  C02F  F04F         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19915  004D98  0EFD               	movlw	253
 19916  004D9A  164F               	andwf	??_USBCtrlEPService,f,c
 19917  004D9C  504F               	movf	??_USBCtrlEPService,w,c
 19918  004D9E  0A04               	xorlw	4
 19919  004DA0  B4D8               	btfsc	status,2,c
 19920                           
 19921                           ; BSR set to: 0
 19922                           ;usb_device.c: 2049: {
 19923                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 19924  004DA2  EC34  F027         	call	_USBCtrlTrfInHandler	;wreg free
 19925  004DA6  0012               	return	
 19926  004DA8                     __end_of_USBCtrlEPService:
 19927                           	opt stack 0
 19928                           pclatu	equ	0xFFB
 19929                           pclath	equ	0xFFA
 19930                           tblptru	equ	0xFF8
 19931                           tblptrh	equ	0xFF7
 19932                           tblptrl	equ	0xFF6
 19933                           tablat	equ	0xFF5
 19934                           prodh	equ	0xFF4
 19935                           prodl	equ	0xFF3
 19936                           intcon	equ	0xFF2
 19937                           postinc0	equ	0xFEE
 19938                           wreg	equ	0xFE8
 19939                           indf1	equ	0xFE7
 19940                           postdec1	equ	0xFE5
 19941                           fsr1h	equ	0xFE2
 19942                           fsr1l	equ	0xFE1
 19943                           indf2	equ	0xFDF
 19944                           postinc2	equ	0xFDE
 19945                           postdec2	equ	0xFDD
 19946                           plusw2	equ	0xFDB
 19947                           fsr2h	equ	0xFDA
 19948                           fsr2l	equ	0xFD9
 19949                           status	equ	0xFD8
 19950                           
 19951 ;; *************** function _USBCtrlTrfSetupHandler *****************
 19952 ;; Defined at:
 19953 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 19954 ;; Parameters:    Size  Location     Type
 19955 ;;		None
 19956 ;; Auto vars:     Size  Location     Type
 19957 ;;		None
 19958 ;; Return value:  Size  Location     Type
 19959 ;;		None               void
 19960 ;; Registers used:
 19961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19962 ;; Tracked objects:
 19963 ;;		On entry : F/4
 19964 ;;		On exit  : 0/0
 19965 ;;		Unchanged: 0/0
 19966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19967 ;;      Params:         0       0       0       0       0       0       0       0       0
 19968 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19969 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19970 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19971 ;;Total ram usage:        0 bytes
 19972 ;; Hardware stack levels used:    1
 19973 ;; Hardware stack levels required when called:    7
 19974 ;; This function calls:
 19975 ;;		_USBCheckStdRequest
 19976 ;;		_USBCtrlEPServiceComplete
 19977 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19978 ;; This function is called by:
 19979 ;;		_USBCtrlEPService
 19980 ;; This function uses a non-reentrant model
 19981 ;;
 19982                           
 19983                           	psect	text93
 19984  003EE2                     __ptext93:
 19985                           	opt stack 0
 19986  003EE2                     _USBCtrlTrfSetupHandler:
 19987                           	opt stack 10
 19988                           
 19989                           ; BSR set to: 4
 19990                           ;usb_device.c: 2102: shortPacketStatus = 0;
 19991                           
 19992                           ;incstack = 0
 19993  003EE2  6A27               	clrf	_shortPacketStatus,c	;volatile
 19994                           
 19995                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 19996  003EE4  6A19               	clrf	_USBDeferStatusStagePacket,c	;volatile
 19997                           
 19998                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 19999  003EE6  0100               	movlb	0	; () banked
 20000  003EE8  6B87               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20001                           
 20002                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 20003  003EEA  6B88               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20004                           
 20005                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 20006  003EEC  6A13               	clrf	_BothEP0OutUOWNsSet,c	;volatile
 20007                           
 20008                           ;usb_device.c: 2107: controlTransferState = 0;
 20009  003EEE  6A1F               	clrf	_controlTransferState,c	;volatile
 20010                           
 20011                           ; BSR set to: 0
 20012                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 20013  003EF0  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 20014  003EF4  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20015  003EF8  0E7F               	movlw	127
 20016  003EFA  16DF               	andwf	indf2,f,c
 20017                           
 20018                           ; BSR set to: 0
 20019                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 20020  003EFC  0E04               	movlw	4
 20021  003EFE  1A09               	xorwf	_pBDTEntryIn,f,c
 20022                           
 20023                           ; BSR set to: 0
 20024                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 20025  003F00  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 20026  003F04  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20027  003F08  0E7F               	movlw	127
 20028  003F0A  16DF               	andwf	indf2,f,c
 20029                           
 20030                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 20031  003F0C  0E04               	movlw	4
 20032  003F0E  1A09               	xorwf	_pBDTEntryIn,f,c
 20033                           
 20034                           ; BSR set to: 0
 20035                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 20036  003F10  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20037  003F14  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20038  003F18  0E7F               	movlw	127
 20039  003F1A  16DF               	andwf	indf2,f,c
 20040                           
 20041                           ; BSR set to: 0
 20042                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 20043  003F1C  6A2B               	clrf	_inPipes+3,c	;volatile
 20044                           
 20045                           ; BSR set to: 0
 20046                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 20047  003F1E  6A2C               	clrf	_inPipes+4,c	;volatile
 20048  003F20  6A2D               	clrf	_inPipes+5,c	;volatile
 20049                           
 20050                           ; BSR set to: 0
 20051                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 20052  003F22  6A04               	clrf	_outPipes+3,c	;volatile
 20053                           
 20054                           ; BSR set to: 0
 20055                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 20056  003F24  6A05               	clrf	_outPipes+4,c	;volatile
 20057  003F26  6A06               	clrf	_outPipes+5,c	;volatile
 20058                           
 20059                           ; BSR set to: 0
 20060                           ;usb_device.c: 2131: USBCheckStdRequest();
 20061  003F28  EC13  F024         	call	_USBCheckStdRequest	;wreg free
 20062                           
 20063                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 20064  003F2C  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20065  003F2E  0E03               	movlw	3
 20066  003F30  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20067  003F32  0E00               	movlw	0
 20068  003F34  6A42               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20069  003F36  6A41               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20070  003F38  6A44               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20071  003F3A  6A43               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20072  003F3C  ECCF  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20073                           
 20074                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 20075  003F40  EF04  F028         	goto	_USBCtrlEPServiceComplete	;wreg free
 20076  003F44                     __end_of_USBCtrlTrfSetupHandler:
 20077                           	opt stack 0
 20078                           pclatu	equ	0xFFB
 20079                           pclath	equ	0xFFA
 20080                           tblptru	equ	0xFF8
 20081                           tblptrh	equ	0xFF7
 20082                           tblptrl	equ	0xFF6
 20083                           tablat	equ	0xFF5
 20084                           prodh	equ	0xFF4
 20085                           prodl	equ	0xFF3
 20086                           intcon	equ	0xFF2
 20087                           postinc0	equ	0xFEE
 20088                           wreg	equ	0xFE8
 20089                           indf1	equ	0xFE7
 20090                           postdec1	equ	0xFE5
 20091                           fsr1h	equ	0xFE2
 20092                           fsr1l	equ	0xFE1
 20093                           indf2	equ	0xFDF
 20094                           postinc2	equ	0xFDE
 20095                           postdec2	equ	0xFDD
 20096                           plusw2	equ	0xFDB
 20097                           fsr2h	equ	0xFDA
 20098                           fsr2l	equ	0xFD9
 20099                           status	equ	0xFD8
 20100                           
 20101 ;; *************** function _USBCtrlEPServiceComplete *****************
 20102 ;; Defined at:
 20103 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 20104 ;; Parameters:    Size  Location     Type
 20105 ;;		None
 20106 ;; Auto vars:     Size  Location     Type
 20107 ;;		None
 20108 ;; Return value:  Size  Location     Type
 20109 ;;		None               void
 20110 ;; Registers used:
 20111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20112 ;; Tracked objects:
 20113 ;;		On entry : 0/0
 20114 ;;		On exit  : 0/0
 20115 ;;		Unchanged: 0/0
 20116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20117 ;;      Params:         0       0       0       0       0       0       0       0       0
 20118 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20119 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20120 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20121 ;;Total ram usage:        0 bytes
 20122 ;; Hardware stack levels used:    1
 20123 ;; Hardware stack levels required when called:    2
 20124 ;; This function calls:
 20125 ;;		_USBCtrlEPAllowDataStage
 20126 ;;		_USBCtrlEPAllowStatusStage
 20127 ;; This function is called by:
 20128 ;;		_USBCtrlTrfSetupHandler
 20129 ;; This function uses a non-reentrant model
 20130 ;;
 20131                           
 20132                           	psect	text94
 20133  005008                     __ptext94:
 20134                           	opt stack 0
 20135  005008                     _USBCtrlEPServiceComplete:
 20136                           	opt stack 14
 20137                           
 20138                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 20139                           
 20140                           ;incstack = 0
 20141  005008  9860               	bcf	3936,4,c	;volatile
 20142                           
 20143                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 20144  00500A  BE2B               	btfsc	_inPipes+3,7,c	;volatile
 20145  00500C  D037               	goto	i2l1650
 20146                           
 20147                           ;usb_device.c: 1295: {
 20148                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 20149  00500E  AE04               	btfss	_outPipes+3,7,c	;volatile
 20150  005010  D00A               	goto	i2l7015
 20151                           
 20152                           ;usb_device.c: 1297: {
 20153                           ;usb_device.c: 1298: controlTransferState = 2;
 20154  005012  0E02               	movlw	2
 20155  005014  6E1F               	movwf	_controlTransferState,c	;volatile
 20156                           
 20157                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 20158  005016  0100               	movlb	0	; () banked
 20159  005018  6788               	tstfsz	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20160  00501A  D002               	goto	i2l7011
 20161                           
 20162                           ; BSR set to: 0
 20163                           ;usb_device.c: 1310: {
 20164                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 20165  00501C  EC9B  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
 20166  005020                     i2l7011:
 20167                           
 20168                           ; BSR set to: 0
 20169                           ;usb_device.c: 1312: }
 20170                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 20171  005020  6A1B               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
 20172                           
 20173                           ; BSR set to: 0
 20174                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 20175  005022  6A1A               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
 20176                           
 20177                           ;usb_device.c: 1318: }
 20178  005024  0012               	return	
 20179  005026                     i2l7015:
 20180                           
 20181                           ;usb_device.c: 1319: else
 20182                           ;usb_device.c: 1320: {
 20183                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 20184  005026  EE20 F001          	lfsr	2,1
 20185  00502A  5011               	movf	_pBDTEntryEP0OutNext,w,c
 20186  00502C  26D9               	addwf	fsr2l,f,c
 20187  00502E  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 20188  005030  22DA               	addwfc	fsr2h,f,c
 20189  005032  0E08               	movlw	8
 20190  005034  6EDF               	movwf	indf2,c
 20191                           
 20192                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20193  005036  EE20 F002          	lfsr	2,2
 20194  00503A  5011               	movf	_pBDTEntryEP0OutNext,w,c
 20195  00503C  26D9               	addwf	fsr2l,f,c
 20196  00503E  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 20197  005040  22DA               	addwfc	fsr2h,f,c
 20198  005042  0E30               	movlw	48
 20199  005044  6EDE               	movwf	postinc2,c
 20200  005046  0E04               	movlw	4
 20201  005048  6EDD               	movwf	postdec2,c
 20202                           
 20203                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 20204  00504A  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20205  00504E  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20206  005052  0E0C               	movlw	12
 20207  005054  6EDF               	movwf	indf2,c
 20208                           
 20209                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20210  005056  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20211  00505A  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20212  00505E  0E00               	movlw	0
 20213  005060  8EDB               	bsf	plusw2,7,c
 20214                           
 20215                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 20216  005062  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 20217  005066  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20218  00506A  0E04               	movlw	4
 20219  00506C  6EDF               	movwf	indf2,c
 20220                           
 20221                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20222  00506E  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 20223  005072  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20224  005076  0E00               	movlw	0
 20225  005078  8EDB               	bsf	plusw2,7,c
 20226  00507A  0C00               	retlw	0
 20227  00507C                     i2l1650:
 20228                           
 20229                           ;usb_device.c: 1333: else
 20230                           ;usb_device.c: 1334: {
 20231                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 20232  00507C  0104               	movlb	4	; () banked
 20233  00507E  AF30               	btfss	48,7,b	;volatile
 20234  005080  D00D               	goto	i2l7037
 20235                           
 20236                           ; BSR set to: 4
 20237                           ;usb_device.c: 1336: {
 20238                           ;usb_device.c: 1337: controlTransferState = 1;
 20239  005082  0E01               	movlw	1
 20240  005084  6E1F               	movwf	_controlTransferState,c	;volatile
 20241                           
 20242                           ; BSR set to: 4
 20243                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 20244  005086  0100               	movlb	0	; () banked
 20245  005088  6787               	tstfsz	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20246  00508A  D002               	goto	i2l7029
 20247                           
 20248                           ; BSR set to: 0
 20249                           ;usb_device.c: 1352: {
 20250                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 20251  00508C  EC9B  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
 20252  005090                     i2l7029:
 20253                           
 20254                           ; BSR set to: 0
 20255                           ;usb_device.c: 1354: }
 20256                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 20257  005090  6A1B               	clrf	_USBStatusStageEnabledFlag2,c	;volatile
 20258                           
 20259                           ; BSR set to: 0
 20260                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 20261  005092  6A1A               	clrf	_USBStatusStageEnabledFlag1,c	;volatile
 20262                           
 20263                           ; BSR set to: 0
 20264                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 20265  005094  6619               	tstfsz	_USBDeferStatusStagePacket,c	;volatile
 20266  005096  0012               	return	
 20267                           
 20268                           ;usb_device.c: 1379: {
 20269                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 20270  005098  EF64  F025         	goto	_USBCtrlEPAllowStatusStage	;wreg free
 20271  00509C                     i2l7037:
 20272                           
 20273                           ; BSR set to: 4
 20274                           ;usb_device.c: 1383: else
 20275                           ;usb_device.c: 1384: {
 20276                           ;usb_device.c: 1395: controlTransferState = 2;
 20277  00509C  0E02               	movlw	2
 20278  00509E  6E1F               	movwf	_controlTransferState,c	;volatile
 20279                           
 20280                           ; BSR set to: 4
 20281                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 20282  0050A0  EE20 F001          	lfsr	2,1
 20283  0050A4  5011               	movf	_pBDTEntryEP0OutNext,w,c
 20284  0050A6  26D9               	addwf	fsr2l,f,c
 20285  0050A8  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 20286  0050AA  22DA               	addwfc	fsr2h,f,c
 20287  0050AC  0E08               	movlw	8
 20288  0050AE  6EDF               	movwf	indf2,c
 20289                           
 20290                           ; BSR set to: 4
 20291                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20292  0050B0  EE20 F002          	lfsr	2,2
 20293  0050B4  5011               	movf	_pBDTEntryEP0OutNext,w,c
 20294  0050B6  26D9               	addwf	fsr2l,f,c
 20295  0050B8  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 20296  0050BA  22DA               	addwfc	fsr2h,f,c
 20297  0050BC  0E30               	movlw	48
 20298  0050BE  6EDE               	movwf	postinc2,c
 20299  0050C0  0E04               	movlw	4
 20300  0050C2  6EDD               	movwf	postdec2,c
 20301                           
 20302                           ; BSR set to: 4
 20303                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 20304  0050C4  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20305  0050C8  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20306  0050CC  6EDF               	movwf	indf2,c
 20307                           
 20308                           ; BSR set to: 4
 20309                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20310  0050CE  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20311  0050D2  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20312  0050D6  0E00               	movlw	0
 20313  0050D8  8EDB               	bsf	plusw2,7,c
 20314  0050DA  D7DA               	goto	i2l7029
 20315  0050DC                     __end_of_USBCtrlEPServiceComplete:
 20316                           	opt stack 0
 20317                           pclatu	equ	0xFFB
 20318                           pclath	equ	0xFFA
 20319                           tblptru	equ	0xFF8
 20320                           tblptrh	equ	0xFF7
 20321                           tblptrl	equ	0xFF6
 20322                           tablat	equ	0xFF5
 20323                           prodh	equ	0xFF4
 20324                           prodl	equ	0xFF3
 20325                           intcon	equ	0xFF2
 20326                           postinc0	equ	0xFEE
 20327                           wreg	equ	0xFE8
 20328                           indf1	equ	0xFE7
 20329                           postdec1	equ	0xFE5
 20330                           fsr1h	equ	0xFE2
 20331                           fsr1l	equ	0xFE1
 20332                           indf2	equ	0xFDF
 20333                           postinc2	equ	0xFDE
 20334                           postdec2	equ	0xFDD
 20335                           plusw2	equ	0xFDB
 20336                           fsr2h	equ	0xFDA
 20337                           fsr2l	equ	0xFD9
 20338                           status	equ	0xFD8
 20339                           
 20340 ;; *************** function _USBCtrlEPAllowDataStage *****************
 20341 ;; Defined at:
 20342 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 20343 ;; Parameters:    Size  Location     Type
 20344 ;;		None
 20345 ;; Auto vars:     Size  Location     Type
 20346 ;;		None
 20347 ;; Return value:  Size  Location     Type
 20348 ;;		None               void
 20349 ;; Registers used:
 20350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20351 ;; Tracked objects:
 20352 ;;		On entry : F/0
 20353 ;;		On exit  : F/0
 20354 ;;		Unchanged: 0/0
 20355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20356 ;;      Params:         0       0       0       0       0       0       0       0       0
 20357 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20358 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20359 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20360 ;;Total ram usage:        0 bytes
 20361 ;; Hardware stack levels used:    1
 20362 ;; Hardware stack levels required when called:    1
 20363 ;; This function calls:
 20364 ;;		_USBCtrlTrfTxService
 20365 ;; This function is called by:
 20366 ;;		_USBCtrlEPServiceComplete
 20367 ;; This function uses a non-reentrant model
 20368 ;;
 20369                           
 20370                           	psect	text95
 20371  004536                     __ptext95:
 20372                           	opt stack 0
 20373  004536                     _USBCtrlEPAllowDataStage:
 20374                           	opt stack 14
 20375                           
 20376                           ; BSR set to: 0
 20377                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 20378                           
 20379                           ;incstack = 0
 20380  004536  6B87               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20381                           
 20382                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 20383  004538  6B88               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20384                           
 20385                           ; BSR set to: 0
 20386                           ;usb_device.c: 1178: if(controlTransferState == 2)
 20387  00453A  501F               	movf	_controlTransferState,w,c	;volatile
 20388  00453C  0A02               	xorlw	2
 20389  00453E  E11F               	bnz	i2l6675
 20390                           
 20391                           ; BSR set to: 0
 20392                           ;usb_device.c: 1179: {
 20393                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 20394  004540  EE20 F001          	lfsr	2,1
 20395  004544  5011               	movf	_pBDTEntryEP0OutNext,w,c
 20396  004546  26D9               	addwf	fsr2l,f,c
 20397  004548  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 20398  00454A  22DA               	addwfc	fsr2h,f,c
 20399  00454C  0E08               	movlw	8
 20400  00454E  6EDF               	movwf	indf2,c
 20401                           
 20402                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 20403  004550  EE20 F002          	lfsr	2,2
 20404  004554  5011               	movf	_pBDTEntryEP0OutNext,w,c
 20405  004556  26D9               	addwf	fsr2l,f,c
 20406  004558  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 20407  00455A  22DA               	addwfc	fsr2h,f,c
 20408  00455C  0E38               	movlw	56
 20409  00455E  6EDE               	movwf	postinc2,c
 20410  004560  0E04               	movlw	4
 20411  004562  6EDD               	movwf	postdec2,c
 20412                           
 20413                           ; BSR set to: 0
 20414                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 20415  004564  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20416  004568  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20417  00456C  0E48               	movlw	72
 20418  00456E  6EDF               	movwf	indf2,c
 20419                           
 20420                           ; BSR set to: 0
 20421                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20422  004570  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20423  004574  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20424  004578  0E00               	movlw	0
 20425  00457A  8EDB               	bsf	plusw2,7,c
 20426                           
 20427                           ;usb_device.c: 1185: }
 20428  00457C  0C00               	retlw	0
 20429  00457E                     i2l6675:
 20430                           
 20431                           ; BSR set to: 0
 20432                           ;usb_device.c: 1186: else
 20433                           ;usb_device.c: 1187: {
 20434                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 20435  00457E  502C               	movf	_inPipes+4,w,c	;volatile
 20436  004580  0104               	movlb	4	; () banked
 20437  004582  5D36               	subwf	54,w,b	;volatile
 20438  004584  502D               	movf	_inPipes+5,w,c	;volatile
 20439  004586  5937               	subwfb	55,w,b	;volatile
 20440  004588  E204               	bc	i2l6679
 20441                           
 20442                           ; BSR set to: 4
 20443                           ;usb_device.c: 1191: {
 20444                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 20445  00458A  C436 F02C          	movff	1078,_inPipes+4	;volatile
 20446  00458E  C437 F02D          	movff	1079,_inPipes+5	;volatile
 20447  004592                     i2l6679:
 20448                           
 20449                           ; BSR set to: 4
 20450                           ;usb_device.c: 1193: }
 20451                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 20452  004592  ECD4  F026         	call	_USBCtrlTrfTxService	;wreg free
 20453                           
 20454                           ; BSR set to: 0
 20455                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 20456  004596  EE20 F002          	lfsr	2,2
 20457  00459A  5009               	movf	_pBDTEntryIn,w,c
 20458  00459C  26D9               	addwf	fsr2l,f,c
 20459  00459E  500A               	movf	_pBDTEntryIn+1,w,c
 20460  0045A0  22DA               	addwfc	fsr2h,f,c
 20461  0045A2  0E38               	movlw	56
 20462  0045A4  6EDE               	movwf	postinc2,c
 20463  0045A6  0E04               	movlw	4
 20464  0045A8  6EDD               	movwf	postdec2,c
 20465                           
 20466                           ; BSR set to: 0
 20467                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20468  0045AA  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 20469  0045AE  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20470  0045B2  0E48               	movlw	72
 20471  0045B4  6EDF               	movwf	indf2,c
 20472                           
 20473                           ; BSR set to: 0
 20474                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20475  0045B6  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 20476  0045BA  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20477  0045BE  0E00               	movlw	0
 20478  0045C0  8EDB               	bsf	plusw2,7,c
 20479                           
 20480                           ; BSR set to: 0
 20481  0045C2  0C00               	retlw	0
 20482  0045C4                     __end_of_USBCtrlEPAllowDataStage:
 20483                           	opt stack 0
 20484                           pclatu	equ	0xFFB
 20485                           pclath	equ	0xFFA
 20486                           tblptru	equ	0xFF8
 20487                           tblptrh	equ	0xFF7
 20488                           tblptrl	equ	0xFF6
 20489                           tablat	equ	0xFF5
 20490                           prodh	equ	0xFF4
 20491                           prodl	equ	0xFF3
 20492                           intcon	equ	0xFF2
 20493                           postinc0	equ	0xFEE
 20494                           wreg	equ	0xFE8
 20495                           indf1	equ	0xFE7
 20496                           postdec1	equ	0xFE5
 20497                           fsr1h	equ	0xFE2
 20498                           fsr1l	equ	0xFE1
 20499                           indf2	equ	0xFDF
 20500                           postinc2	equ	0xFDE
 20501                           postdec2	equ	0xFDD
 20502                           plusw2	equ	0xFDB
 20503                           fsr2h	equ	0xFDA
 20504                           fsr2l	equ	0xFD9
 20505                           status	equ	0xFD8
 20506                           
 20507 ;; *************** function _USBCheckStdRequest *****************
 20508 ;; Defined at:
 20509 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 20510 ;; Parameters:    Size  Location     Type
 20511 ;;		None
 20512 ;; Auto vars:     Size  Location     Type
 20513 ;;		None
 20514 ;; Return value:  Size  Location     Type
 20515 ;;		None               void
 20516 ;; Registers used:
 20517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20518 ;; Tracked objects:
 20519 ;;		On entry : F/0
 20520 ;;		On exit  : 0/0
 20521 ;;		Unchanged: 0/0
 20522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20523 ;;      Params:         0       0       0       0       0       0       0       0       0
 20524 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20525 ;;      Temps:          1       0       0       0       0       0       0       0       0
 20526 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20527 ;;Total ram usage:        1 bytes
 20528 ;; Hardware stack levels used:    1
 20529 ;; Hardware stack levels required when called:    6
 20530 ;; This function calls:
 20531 ;;		_USBStdFeatureReqHandler
 20532 ;;		_USBStdGetDscHandler
 20533 ;;		_USBStdGetStatusHandler
 20534 ;;		_USBStdSetCfgHandler
 20535 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20536 ;; This function is called by:
 20537 ;;		_USBCtrlTrfSetupHandler
 20538 ;; This function uses a non-reentrant model
 20539 ;;
 20540                           
 20541                           	psect	text96
 20542  004826                     __ptext96:
 20543                           	opt stack 0
 20544  004826                     _USBCheckStdRequest:
 20545                           	opt stack 10
 20546                           
 20547                           ; BSR set to: 0
 20548                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 20549                           
 20550                           ; BSR set to: 0
 20551                           ;incstack = 0
 20552  004826  0104               	movlb	4	; () banked
 20553  004828  3930               	swapf	48,w,b	;volatile
 20554  00482A  32E8               	rrcf	wreg,f,c
 20555  00482C  0B03               	andlw	3
 20556  00482E  A4D8               	btfss	status,2,c
 20557  004830  0012               	return	
 20558  004832  D033               	goto	i2l7139
 20559  004834                     i2l1777:
 20560                           
 20561                           ; BSR set to: 4
 20562                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 20563  004834  8E2B               	bsf	_inPipes+3,7,c	;volatile
 20564                           
 20565                           ; BSR set to: 4
 20566                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 20567  004836  0E08               	movlw	8
 20568  004838  0100               	movlb	0	; () banked
 20569  00483A  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 20570                           
 20571                           ;usb_device.c: 2327: break;
 20572  00483C  0C08               	retlw	8
 20573  00483E                     i2l7109:
 20574                           
 20575                           ; BSR set to: 4
 20576                           ;usb_device.c: 2329: USBStdGetDscHandler();
 20577  00483E  EF12  F02C         	goto	_USBStdGetDscHandler	;wreg free
 20578  004842                     i2l7111:
 20579                           
 20580                           ; BSR set to: 4
 20581                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 20582  004842  EFB4  F024         	goto	_USBStdSetCfgHandler	;wreg free
 20583  004846                     i2l7113:
 20584                           
 20585                           ; BSR set to: 4
 20586                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 20587  004846  6A29               	clrf	_inPipes+1,c	;volatile
 20588  004848  0E2E               	movlw	low _USBActiveConfiguration	;volatile
 20589  00484A  6E28               	movwf	_inPipes,c	;volatile
 20590                           
 20591                           ; BSR set to: 4
 20592                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20593  00484C  802B               	bsf	_inPipes+3,0,c	;volatile
 20594                           
 20595                           ; BSR set to: 4
 20596                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 20597  00484E  0E01               	movlw	1
 20598  004850  6E2C               	movwf	_inPipes+4,c	;volatile
 20599                           
 20600                           ; BSR set to: 4
 20601                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 20602  004852  8E2B               	bsf	_inPipes+3,7,c	;volatile
 20603                           
 20604                           ;usb_device.c: 2339: break;
 20605  004854  0C01               	retlw	1
 20606  004856                     i2l7121:
 20607                           
 20608                           ; BSR set to: 4
 20609                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 20610  004856  EFD0  F021         	goto	_USBStdGetStatusHandler	;wreg free
 20611  00485A                     i2l7123:
 20612                           
 20613                           ; BSR set to: 4
 20614                           ;usb_device.c: 2344: case 3:
 20615                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 20616  00485A  EF7B  F02E         	goto	_USBStdFeatureReqHandler	;wreg free
 20617  00485E                     i2l7125:
 20618                           
 20619                           ; BSR set to: 4
 20620                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 20621  00485E  5134               	movf	52,w,b	;volatile
 20622  004860  0100               	movlb	0	; () banked
 20623  004862  0FC4               	addlw	low _USBAlternateInterface	;volatile
 20624  004864  6E4E               	movwf	??_USBCheckStdRequest& (0+255),c
 20625  004866  6A29               	clrf	_inPipes+1,c	;volatile
 20626  004868  C04E  F028         	movff	??_USBCheckStdRequest,_inPipes	;volatile
 20627                           
 20628                           ; BSR set to: 0
 20629                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20630  00486C  802B               	bsf	_inPipes+3,0,c	;volatile
 20631                           
 20632                           ; BSR set to: 0
 20633                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 20634  00486E  0E01               	movlw	1
 20635  004870  6E2C               	movwf	_inPipes+4,c	;volatile
 20636                           
 20637                           ; BSR set to: 0
 20638                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 20639  004872  8E2B               	bsf	_inPipes+3,7,c	;volatile
 20640                           
 20641                           ;usb_device.c: 2352: break;
 20642  004874  0C01               	retlw	1
 20643  004876                     i2l1786:
 20644                           
 20645                           ; BSR set to: 4
 20646                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 20647  004876  8E2B               	bsf	_inPipes+3,7,c	;volatile
 20648                           
 20649                           ; BSR set to: 4
 20650                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 20651  004878  5134               	movf	52,w,b	;volatile
 20652  00487A  0FC4               	addlw	low _USBAlternateInterface	;volatile
 20653  00487C  6ED9               	movwf	fsr2l,c
 20654  00487E  6ADA               	clrf	fsr2h,c
 20655  004880  0104               	movlb	4	; () banked
 20656  004882  C432 FFDF          	movff	1074,indf2	;volatile
 20657                           
 20658                           ;usb_device.c: 2356: break;
 20659  004886  0012               	return	
 20660  004888                     i2l7135:
 20661                           
 20662                           ; BSR set to: 4
 20663                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 20664  004888  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20665  00488A  0E02               	movlw	2
 20666  00488C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20667  00488E  6A42               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20668  004890  6A41               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20669  004892  6A44               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20670  004894  6A43               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20671  004896  EFD4  F01D         	goto	i2l6409	;wreg free
 20672  00489A                     i2l7139:
 20673                           
 20674                           ; BSR set to: 4
 20675  00489A  5131               	movf	49,w,b	;volatile
 20676                           
 20677                           ; Switch size 1, requested type "speed"
 20678                           ; Number of cases is 11, Range of values is 0 to 12
 20679                           ; switch strategies available:
 20680                           ; Name         Instructions Cycles
 20681                           ; simple_byte           34    18 (average)
 20682                           ;	Chosen strategy is simple_byte
 20683  00489C  E0DC               	bz	i2l7121
 20684  00489E  0A01               	xorlw	1	; case 1
 20685  0048A0  E0DC               	bz	i2l7123
 20686  0048A2  0A02               	xorlw	2	; case 3
 20687  0048A4  E0DA               	bz	i2l7123
 20688  0048A6  0A06               	xorlw	6	; case 5
 20689  0048A8  E0C5               	bz	i2l1777
 20690  0048AA  0A03               	xorlw	3	; case 6
 20691  0048AC  E0C8               	bz	i2l7109
 20692  0048AE  0A01               	xorlw	1	; case 7
 20693  0048B0  E0EB               	bz	i2l7135
 20694  0048B2  0A0F               	xorlw	15	; case 8
 20695  0048B4  E0C8               	bz	i2l7113
 20696  0048B6  0A01               	xorlw	1	; case 9
 20697  0048B8  E0C4               	bz	i2l7111
 20698  0048BA  0A03               	xorlw	3	; case 10
 20699  0048BC  E0D0               	bz	i2l7125
 20700  0048BE  0A01               	xorlw	1	; case 11
 20701  0048C0  E0DA               	bz	i2l1786
 20702  0048C2  0A07               	xorlw	7	; case 12
 20703  0048C4  0012               	return	
 20704  0048C6                     __end_of_USBCheckStdRequest:
 20705                           	opt stack 0
 20706                           pclatu	equ	0xFFB
 20707                           pclath	equ	0xFFA
 20708                           tblptru	equ	0xFF8
 20709                           tblptrh	equ	0xFF7
 20710                           tblptrl	equ	0xFF6
 20711                           tablat	equ	0xFF5
 20712                           prodh	equ	0xFF4
 20713                           prodl	equ	0xFF3
 20714                           intcon	equ	0xFF2
 20715                           postinc0	equ	0xFEE
 20716                           wreg	equ	0xFE8
 20717                           indf1	equ	0xFE7
 20718                           postdec1	equ	0xFE5
 20719                           fsr1h	equ	0xFE2
 20720                           fsr1l	equ	0xFE1
 20721                           indf2	equ	0xFDF
 20722                           postinc2	equ	0xFDE
 20723                           postdec2	equ	0xFDD
 20724                           plusw2	equ	0xFDB
 20725                           fsr2h	equ	0xFDA
 20726                           fsr2l	equ	0xFD9
 20727                           status	equ	0xFD8
 20728                           
 20729 ;; *************** function _USBStdSetCfgHandler *****************
 20730 ;; Defined at:
 20731 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 20732 ;; Parameters:    Size  Location     Type
 20733 ;;		None
 20734 ;; Auto vars:     Size  Location     Type
 20735 ;;  i               1   23[COMRAM] unsigned char 
 20736 ;; Return value:  Size  Location     Type
 20737 ;;		None               void
 20738 ;; Registers used:
 20739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20740 ;; Tracked objects:
 20741 ;;		On entry : B/4
 20742 ;;		On exit  : F/0
 20743 ;;		Unchanged: 0/0
 20744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20745 ;;      Params:         0       0       0       0       0       0       0       0       0
 20746 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20747 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20748 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20749 ;;Total ram usage:        1 bytes
 20750 ;; Hardware stack levels used:    1
 20751 ;; Hardware stack levels required when called:    5
 20752 ;; This function calls:
 20753 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20754 ;;		i2_memset
 20755 ;; This function is called by:
 20756 ;;		_USBCheckStdRequest
 20757 ;; This function uses a non-reentrant model
 20758 ;;
 20759                           
 20760                           	psect	text97
 20761  004968                     __ptext97:
 20762                           	opt stack 0
 20763  004968                     _USBStdSetCfgHandler:
 20764                           	opt stack 10
 20765                           
 20766                           ;usb_device.c: 1631: uint8_t i;
 20767                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 20768                           
 20769                           ;incstack = 0
 20770  004968  8E2B               	bsf	_inPipes+3,7,c	;volatile
 20771                           
 20772                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 20773  00496A  0E0F               	movlw	15	;volatile
 20774  00496C  6E31               	movwf	i2memset@p1+1,c
 20775  00496E  0E6B               	movlw	107	;volatile
 20776  004970  6E30               	movwf	i2memset@p1,c
 20777  004972  6A33               	clrf	i2memset@c+1,c
 20778  004974  6A32               	clrf	i2memset@c,c
 20779  004976  6A35               	clrf	i2memset@n+1,c
 20780  004978  0E02               	movlw	2
 20781  00497A  6E34               	movwf	i2memset@n,c
 20782  00497C  ECC0  F01B         	call	i2_memset	;wreg free
 20783                           
 20784                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 20785  004980  0104               	movlb	4	; () banked
 20786  004982  0E04               	movlw	4	;volatile
 20787  004984  6E31               	movwf	i2memset@p1+1,c
 20788  004986  6A30               	clrf	i2memset@p1,c
 20789  004988  6A33               	clrf	i2memset@c+1,c
 20790  00498A  6A32               	clrf	i2memset@c,c
 20791  00498C  6A35               	clrf	i2memset@n+1,c
 20792  00498E  0E30               	movlw	48
 20793  004990  6E34               	movwf	i2memset@n,c
 20794  004992  ECC0  F01B         	call	i2_memset	;wreg free
 20795                           
 20796                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 20797  004996  8C60               	bsf	3936,6,c	;volatile
 20798                           
 20799                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 20800  004998  6A47               	clrf	USBStdSetCfgHandler@i,c
 20801  00499A                     i2l6699:
 20802                           
 20803                           ;usb_device.c: 1649: {
 20804                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 20805  00499A  5047               	movf	USBStdSetCfgHandler@i,w,c
 20806  00499C  0100               	movlb	0	; () banked
 20807  00499E  0F6A               	addlw	low _ep_data_in	;volatile
 20808  0049A0  6ED9               	movwf	fsr2l,c
 20809  0049A2  6ADA               	clrf	fsr2h,c
 20810  0049A4  6ADF               	clrf	indf2,c
 20811                           
 20812                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 20813  0049A6  5047               	movf	USBStdSetCfgHandler@i,w,c
 20814  0049A8  0F6D               	addlw	low _ep_data_out	;volatile
 20815  0049AA  6ED9               	movwf	fsr2l,c
 20816  0049AC  6ADA               	clrf	fsr2h,c
 20817  0049AE  6ADF               	clrf	indf2,c
 20818                           
 20819                           ; BSR set to: 0
 20820  0049B0  2A47               	incf	USBStdSetCfgHandler@i,f,c
 20821                           
 20822                           ; BSR set to: 0
 20823  0049B2  0E02               	movlw	2
 20824  0049B4  6447               	cpfsgt	USBStdSetCfgHandler@i,c
 20825  0049B6  D7F1               	goto	i2l6699
 20826                           
 20827                           ; BSR set to: 0
 20828                           ;usb_device.c: 1652: }
 20829                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 20830  0049B8  6A31               	clrf	i2memset@p1+1,c
 20831  0049BA  0EC4               	movlw	low _USBAlternateInterface	;volatile
 20832  0049BC  6E30               	movwf	i2memset@p1,c
 20833  0049BE  6A33               	clrf	i2memset@c+1,c
 20834  0049C0  6A32               	clrf	i2memset@c,c
 20835  0049C2  6A35               	clrf	i2memset@n+1,c
 20836  0049C4  0E02               	movlw	2
 20837  0049C6  6E34               	movwf	i2memset@n,c
 20838  0049C8  ECC0  F01B         	call	i2_memset	;wreg free
 20839                           
 20840                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 20841  0049CC  9C60               	bcf	3936,6,c	;volatile
 20842                           
 20843                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 20844  0049CE  0104               	movlb	4	; () banked
 20845  0049D0  0E04               	movlw	4	;volatile
 20846  0049D2  6E0A               	movwf	_pBDTEntryIn+1,c
 20847  0049D4  0E08               	movlw	8	;volatile
 20848  0049D6  6E09               	movwf	_pBDTEntryIn,c
 20849                           
 20850                           ; BSR set to: 4
 20851                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 20852  0049D8  0E04               	movlw	4	;volatile
 20853  0049DA  6E10               	movwf	_pBDTEntryEP0OutCurrent+1,c
 20854  0049DC  0E00               	movlw	0	;volatile
 20855  0049DE  6E0F               	movwf	_pBDTEntryEP0OutCurrent,c
 20856                           
 20857                           ; BSR set to: 4
 20858                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 20859  0049E0  C010  F012         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 20860  0049E4  C00F  F011         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 20861                           
 20862                           ; BSR set to: 4
 20863                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 20864  0049E8  C432 F02E          	movff	1074,_USBActiveConfiguration	;volatile
 20865                           
 20866                           ; BSR set to: 4
 20867                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 20868  0049EC  662E               	tstfsz	_USBActiveConfiguration,c	;volatile
 20869  0049EE  D004               	goto	i2l6721
 20870                           
 20871                           ; BSR set to: 4
 20872                           ;usb_device.c: 1671: {
 20873                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 20874  0049F0  0E10               	movlw	16
 20875  0049F2  0100               	movlb	0	; () banked
 20876  0049F4  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 20877                           
 20878                           ;usb_device.c: 1674: }
 20879  0049F6  0C10               	retlw	16
 20880  0049F8                     i2l6721:
 20881                           
 20882                           ; BSR set to: 4
 20883                           ;usb_device.c: 1675: else
 20884                           ;usb_device.c: 1676: {
 20885                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 20886  0049F8  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20887  0049FA  0E01               	movlw	1
 20888  0049FC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20889  0049FE  6A42               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20890  004A00  0E2E               	movlw	low _USBActiveConfiguration	;volatile
 20891  004A02  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20892  004A04  6A44               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20893  004A06  0E01               	movlw	1
 20894  004A08  6E43               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20895  004A0A  ECCF  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20896                           
 20897                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 20898  004A0E  0E20               	movlw	32
 20899  004A10  0100               	movlb	0	; () banked
 20900  004A12  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 20901                           
 20902                           ; BSR set to: 0
 20903  004A14  0C20               	retlw	32
 20904  004A16                     __end_of_USBStdSetCfgHandler:
 20905                           	opt stack 0
 20906                           pclatu	equ	0xFFB
 20907                           pclath	equ	0xFFA
 20908                           tblptru	equ	0xFF8
 20909                           tblptrh	equ	0xFF7
 20910                           tblptrl	equ	0xFF6
 20911                           tablat	equ	0xFF5
 20912                           prodh	equ	0xFF4
 20913                           prodl	equ	0xFF3
 20914                           intcon	equ	0xFF2
 20915                           postinc0	equ	0xFEE
 20916                           wreg	equ	0xFE8
 20917                           indf1	equ	0xFE7
 20918                           postdec1	equ	0xFE5
 20919                           fsr1h	equ	0xFE2
 20920                           fsr1l	equ	0xFE1
 20921                           indf2	equ	0xFDF
 20922                           postinc2	equ	0xFDE
 20923                           postdec2	equ	0xFDD
 20924                           plusw2	equ	0xFDB
 20925                           fsr2h	equ	0xFDA
 20926                           fsr2l	equ	0xFD9
 20927                           status	equ	0xFD8
 20928                           
 20929 ;; *************** function i2_memset *****************
 20930 ;; Defined at:
 20931 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memset.c"
 20932 ;; Parameters:    Size  Location     Type
 20933 ;;  p1              2    0[COMRAM] PTR void 
 20934 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 20935 ;;  c               2    2[COMRAM] int 
 20936 ;;  n               2    4[COMRAM] unsigned int 
 20937 ;; Auto vars:     Size  Location     Type
 20938 ;;  memset          2    6[COMRAM] PTR unsigned char 
 20939 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 20940 ;; Return value:  Size  Location     Type
 20941 ;;                  2    0[COMRAM] PTR void 
 20942 ;; Registers used:
 20943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20944 ;; Tracked objects:
 20945 ;;		On entry : 0/0
 20946 ;;		On exit  : 0/0
 20947 ;;		Unchanged: 0/0
 20948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20949 ;;      Params:         6       0       0       0       0       0       0       0       0
 20950 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20951 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20952 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20953 ;;Total ram usage:        8 bytes
 20954 ;; Hardware stack levels used:    1
 20955 ;; This function calls:
 20956 ;;		Nothing
 20957 ;; This function is called by:
 20958 ;;		_USBStdSetCfgHandler
 20959 ;;		i2_USBDeviceInit
 20960 ;; This function uses a non-reentrant model
 20961 ;;
 20962                           
 20963                           	psect	text98
 20964  003780                     __ptext98:
 20965                           	opt stack 0
 20966  003780                     i2_memset:
 20967                           	opt stack 17
 20968                           
 20969                           ; BSR set to: 0
 20970                           ;incstack = 0
 20971  003780  C031  F037         	movff	i2memset@p1+1,i2memset@p+1
 20972  003784  C030  F036         	movff	i2memset@p1,i2memset@p
 20973  003788  D008               	goto	i2l6501
 20974  00378A                     i2l6497:
 20975  00378A  C036  FFD9         	movff	i2memset@p,fsr2l
 20976  00378E  C037  FFDA         	movff	i2memset@p+1,fsr2h
 20977  003792  C032  FFDF         	movff	i2memset@c,indf2
 20978  003796  4A36               	infsnz	i2memset@p,f,c
 20979  003798  2A37               	incf	i2memset@p+1,f,c
 20980  00379A                     i2l6501:
 20981  00379A  0634               	decf	i2memset@n,f,c
 20982  00379C  A0D8               	btfss	status,0,c
 20983  00379E  0635               	decf	i2memset@n+1,f,c
 20984  0037A0  2834               	incf	i2memset@n& (0+255),w,c
 20985  0037A2  B4D8               	btfsc	status,2,c
 20986  0037A4  2835               	incf	(i2memset@n+1)& (0+255),w,c
 20987  0037A6  B4D8               	btfsc	status,2,c
 20988  0037A8  0012               	return	
 20989  0037AA  D7EF               	goto	i2l6497
 20990  0037AC                     __end_ofi2_memset:
 20991                           	opt stack 0
 20992                           pclatu	equ	0xFFB
 20993                           pclath	equ	0xFFA
 20994                           tblptru	equ	0xFF8
 20995                           tblptrh	equ	0xFF7
 20996                           tblptrl	equ	0xFF6
 20997                           tablat	equ	0xFF5
 20998                           prodh	equ	0xFF4
 20999                           prodl	equ	0xFF3
 21000                           intcon	equ	0xFF2
 21001                           postinc0	equ	0xFEE
 21002                           wreg	equ	0xFE8
 21003                           indf1	equ	0xFE7
 21004                           postdec1	equ	0xFE5
 21005                           fsr1h	equ	0xFE2
 21006                           fsr1l	equ	0xFE1
 21007                           indf2	equ	0xFDF
 21008                           postinc2	equ	0xFDE
 21009                           postdec2	equ	0xFDD
 21010                           plusw2	equ	0xFDB
 21011                           fsr2h	equ	0xFDA
 21012                           fsr2l	equ	0xFD9
 21013                           status	equ	0xFD8
 21014                           
 21015 ;; *************** function _USBStdGetStatusHandler *****************
 21016 ;; Defined at:
 21017 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 21018 ;; Parameters:    Size  Location     Type
 21019 ;;		None
 21020 ;; Auto vars:     Size  Location     Type
 21021 ;;  p               2    0[COMRAM] PTR struct __BDT
 21022 ;;		 -> BDT(48), NULL(0), 
 21023 ;; Return value:  Size  Location     Type
 21024 ;;		None               void
 21025 ;; Registers used:
 21026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21027 ;; Tracked objects:
 21028 ;;		On entry : B/4
 21029 ;;		On exit  : B/0
 21030 ;;		Unchanged: 0/0
 21031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21032 ;;      Params:         0       0       0       0       0       0       0       0       0
 21033 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21034 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21035 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21036 ;;Total ram usage:        2 bytes
 21037 ;; Hardware stack levels used:    1
 21038 ;; This function calls:
 21039 ;;		Nothing
 21040 ;; This function is called by:
 21041 ;;		_USBCheckStdRequest
 21042 ;; This function uses a non-reentrant model
 21043 ;;
 21044                           
 21045                           	psect	text99
 21046  0043A0                     __ptext99:
 21047                           	opt stack 0
 21048  0043A0                     _USBStdGetStatusHandler:
 21049                           	opt stack 15
 21050                           
 21051                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 21052                           
 21053                           ;incstack = 0
 21054  0043A0  0104               	movlb	4	; () banked
 21055  0043A2  6B38               	clrf	56,b	;volatile
 21056                           
 21057                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 21058  0043A4  6B39               	clrf	57,b	;volatile
 21059                           
 21060                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 21061  0043A6  D02C               	goto	i2l6769
 21062  0043A8                     i2l1713:
 21063                           
 21064                           ; BSR set to: 4
 21065                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 21066  0043A8  8E2B               	bsf	_inPipes+3,7,c	;volatile
 21067                           
 21068                           ; BSR set to: 4
 21069                           ;usb_device.c: 1789: }
 21070                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 21071                           
 21072                           ;usb_device.c: 1786: if(0 == 1)
 21073  0043AA  0418               	decf	_RemoteWakeup,w,c	;volatile
 21074  0043AC  E130               	bnz	i2l1716
 21075                           
 21076                           ; BSR set to: 4
 21077                           ;usb_device.c: 1792: {
 21078                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 21079  0043AE  8338               	bsf	56,1,b	;volatile
 21080  0043B0  D02E               	goto	i2l1716
 21081  0043B2                     i2l1717:
 21082                           
 21083                           ; BSR set to: 4
 21084                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 21085  0043B2  8E2B               	bsf	_inPipes+3,7,c	;volatile
 21086                           
 21087                           ;usb_device.c: 1798: break;
 21088  0043B4  D02C               	goto	i2l1716
 21089  0043B6                     i2l1718:
 21090                           
 21091                           ; BSR set to: 4
 21092                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 21093  0043B6  8E2B               	bsf	_inPipes+3,7,c	;volatile
 21094                           
 21095                           ;usb_device.c: 1804: {
 21096                           ;usb_device.c: 1805: BDT_ENTRY *p;
 21097                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 21098  0043B8  BF34               	btfsc	52,7,b	;volatile
 21099  0043BA  D007               	goto	i2l6759
 21100                           
 21101                           ; BSR set to: 4
 21102                           ;usb_device.c: 1808: {
 21103                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21104  0043BC  5134               	movf	52,w,b	;volatile
 21105  0043BE  0B0F               	andlw	15
 21106  0043C0  0D02               	mullw	2
 21107  0043C2  50F3               	movf	prodl,w,c
 21108  0043C4  0100               	movlb	0	; () banked
 21109  0043C6  0F60               	addlw	low _pBDTEntryOut
 21110  0043C8  D005               	goto	L77
 21111  0043CA                     i2l6759:
 21112                           
 21113                           ; BSR set to: 4
 21114                           ;usb_device.c: 1811: else
 21115                           ;usb_device.c: 1812: {
 21116                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21117  0043CA  5134               	movf	52,w,b	;volatile
 21118  0043CC  0B0F               	andlw	15
 21119  0043CE  0D02               	mullw	2
 21120  0043D0  50F3               	movf	prodl,w,c
 21121  0043D2  0F09               	addlw	low _pBDTEntryIn
 21122  0043D4                     L77:
 21123  0043D4  6ED9               	movwf	fsr2l,c
 21124  0043D6  6ADA               	clrf	fsr2h,c
 21125  0043D8  CFDE F030          	movff	postinc2,USBStdGetStatusHandler@p
 21126  0043DC  CFDD F031          	movff	postdec2,USBStdGetStatusHandler@p+1
 21127                           
 21128                           ;usb_device.c: 1814: }
 21129                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 21130  0043E0  C030  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 21131  0043E4  C031  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 21132  0043E8  AEDF               	btfss	indf2,7,c
 21133  0043EA  D011               	goto	i2l1716
 21134  0043EC  C030  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 21135  0043F0  C031  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 21136  0043F4  A4DF               	btfss	indf2,2,c
 21137  0043F6  D00B               	goto	i2l1716
 21138                           
 21139                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 21140  0043F8  0E01               	movlw	1
 21141  0043FA  0104               	movlb	4	; () banked
 21142  0043FC  6F38               	movwf	56,b	;volatile
 21143  0043FE  D007               	goto	i2l1716
 21144  004400                     i2l6769:
 21145                           
 21146                           ; BSR set to: 4
 21147  004400  5130               	movf	48,w,b	;volatile
 21148  004402  0B1F               	andlw	31
 21149                           
 21150                           ; Switch size 1, requested type "speed"
 21151                           ; Number of cases is 3, Range of values is 0 to 2
 21152                           ; switch strategies available:
 21153                           ; Name         Instructions Cycles
 21154                           ; simple_byte           10     6 (average)
 21155                           ;	Chosen strategy is simple_byte
 21156  004404  E0D1               	bz	i2l1713
 21157  004406  0A01               	xorlw	1	; case 1
 21158  004408  E0D4               	bz	i2l1717
 21159  00440A  0A03               	xorlw	3	; case 2
 21160  00440C  E0D4               	bz	i2l1718
 21161  00440E                     i2l1716:
 21162                           
 21163                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 21164  00440E  AE2B               	btfss	_inPipes+3,7,c	;volatile
 21165  004410  0012               	return	
 21166                           
 21167                           ;usb_device.c: 1823: {
 21168                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 21169  004412  0104               	movlb	4	; () banked
 21170  004414  0E04               	movlw	4	;volatile
 21171  004416  6E29               	movwf	_inPipes+1,c	;volatile
 21172  004418  0E38               	movlw	56	;volatile
 21173  00441A  6E28               	movwf	_inPipes,c	;volatile
 21174                           
 21175                           ; BSR set to: 4
 21176                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21177  00441C  802B               	bsf	_inPipes+3,0,c	;volatile
 21178                           
 21179                           ; BSR set to: 4
 21180                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 21181  00441E  0E02               	movlw	2
 21182  004420  6E2C               	movwf	_inPipes+4,c	;volatile
 21183  004422  0C02               	retlw	2
 21184  004424                     __end_of_USBStdGetStatusHandler:
 21185                           	opt stack 0
 21186                           pclatu	equ	0xFFB
 21187                           pclath	equ	0xFFA
 21188                           tblptru	equ	0xFF8
 21189                           tblptrh	equ	0xFF7
 21190                           tblptrl	equ	0xFF6
 21191                           tablat	equ	0xFF5
 21192                           prodh	equ	0xFF4
 21193                           prodl	equ	0xFF3
 21194                           intcon	equ	0xFF2
 21195                           postinc0	equ	0xFEE
 21196                           wreg	equ	0xFE8
 21197                           indf1	equ	0xFE7
 21198                           postdec1	equ	0xFE5
 21199                           fsr1h	equ	0xFE2
 21200                           fsr1l	equ	0xFE1
 21201                           indf2	equ	0xFDF
 21202                           postinc2	equ	0xFDE
 21203                           postdec2	equ	0xFDD
 21204                           plusw2	equ	0xFDB
 21205                           fsr2h	equ	0xFDA
 21206                           fsr2l	equ	0xFD9
 21207                           status	equ	0xFD8
 21208                           
 21209 ;; *************** function _USBStdGetDscHandler *****************
 21210 ;; Defined at:
 21211 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 21212 ;; Parameters:    Size  Location     Type
 21213 ;;		None
 21214 ;; Auto vars:     Size  Location     Type
 21215 ;;		None
 21216 ;; Return value:  Size  Location     Type
 21217 ;;		None               void
 21218 ;; Registers used:
 21219 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21220 ;; Tracked objects:
 21221 ;;		On entry : B/4
 21222 ;;		On exit  : 0/0
 21223 ;;		Unchanged: 0/0
 21224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21225 ;;      Params:         0       0       0       0       0       0       0       0       0
 21226 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21227 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21228 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21229 ;;Total ram usage:        2 bytes
 21230 ;; Hardware stack levels used:    1
 21231 ;; This function calls:
 21232 ;;		Nothing
 21233 ;; This function is called by:
 21234 ;;		_USBCheckStdRequest
 21235 ;; This function uses a non-reentrant model
 21236 ;;
 21237                           
 21238                           	psect	text100
 21239  005824                     __ptext100:
 21240                           	opt stack 0
 21241  005824                     _USBStdGetDscHandler:
 21242                           	opt stack 15
 21243                           
 21244                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 21245                           
 21246                           ;incstack = 0
 21247  005824  0104               	movlb	4	; () banked
 21248  005826  5130               	movf	48,w,b	;volatile
 21249  005828  0A80               	xorlw	128
 21250  00582A  A4D8               	btfss	status,2,c
 21251  00582C  0012               	return	
 21252                           
 21253                           ; BSR set to: 4
 21254                           ;usb_device.c: 1707: {
 21255                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 21256  00582E  0EC0               	movlw	192
 21257  005830  6E2B               	movwf	_inPipes+3,c	;volatile
 21258                           
 21259                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 21260  005832  D072               	goto	i2l6747
 21261  005834                     i2l6729:
 21262                           
 21263                           ; BSR set to: 4
 21264                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 21265  005834  0E79               	movlw	high _device_dsc
 21266  005836  6E29               	movwf	_inPipes+1,c	;volatile
 21267  005838  0EF4               	movlw	low _device_dsc
 21268  00583A  6E28               	movwf	_inPipes,c	;volatile
 21269                           
 21270                           ; BSR set to: 4
 21271                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 21272  00583C  0E00               	movlw	0
 21273  00583E  6E2D               	movwf	_inPipes+5,c	;volatile
 21274  005840  0E12               	movlw	18
 21275  005842  6E2C               	movwf	_inPipes+4,c	;volatile
 21276                           
 21277                           ;usb_device.c: 1715: break;
 21278  005844  0C12               	retlw	18
 21279  005846                     i2l1702:
 21280                           
 21281                           ; BSR set to: 4
 21282                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 21283  005846  6732               	tstfsz	50,b	;volatile
 21284  005848  D03D               	goto	i2l1703
 21285                           
 21286                           ; BSR set to: 4
 21287                           ;usb_device.c: 1721: {
 21288                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 21289  00584A  5132               	movf	50,w,b	;volatile
 21290  00584C  0D02               	mullw	2
 21291  00584E  0E47               	movlw	low _USB_CD_Ptr
 21292  005850  24F3               	addwf	prodl,w,c
 21293  005852  6EF6               	movwf	tblptrl,c
 21294  005854  0E76               	movlw	high _USB_CD_Ptr
 21295  005856  20F4               	addwfc	prodh,w,c
 21296  005858  6EF7               	movwf	tblptrh,c
 21297  00585A                     	if	0	;There are less than 3 active tblptr bytes
 21298  00585A                     	endif
 21299  00585A  0009               	tblrd		*+
 21300  00585C  CFF5 F028          	movff	tablat,_inPipes	;volatile
 21301  005860  000A               	tblrd		*-
 21302  005862  CFF5 F029          	movff	tablat,_inPipes+1	;volatile
 21303                           
 21304                           ; BSR set to: 4
 21305                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 21306  005866  0E02               	movlw	2
 21307  005868  2428               	addwf	_inPipes,w,c	;volatile
 21308  00586A  6E30               	movwf	??_USBStdGetDscHandler& (0+255),c
 21309  00586C  0E00               	movlw	0
 21310  00586E  2029               	addwfc	_inPipes+1,w,c	;volatile
 21311  005870  6E31               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21312  005872  C030  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21313  005876  C031  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21314  00587A  6AF8               	clrf	tblptru,c
 21315  00587C  0E07               	movlw	(high __ramtop+-1)
 21316  00587E  64F7               	cpfsgt	tblptrh,c
 21317  005880  D003               	bra	i2u445_47
 21318  005882  0008               	tblrd		*
 21319  005884  50F5               	movf	tablat,w,c
 21320  005886  D005               	bra	i2u445_40
 21321  005888                     i2u445_47:
 21322  005888  CFF6 FFE1          	movff	tblptrl,fsr1l
 21323  00588C  CFF7 FFE2          	movff	tblptrh,fsr1h
 21324  005890  50E7               	movf	indf1,w,c
 21325  005892                     i2u445_40:
 21326  005892  6E2C               	movwf	_inPipes+4,c	;volatile
 21327                           
 21328                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 21329  005894  0E03               	movlw	3
 21330  005896  2428               	addwf	_inPipes,w,c	;volatile
 21331  005898  6E30               	movwf	??_USBStdGetDscHandler& (0+255),c
 21332  00589A  0E00               	movlw	0
 21333  00589C  2029               	addwfc	_inPipes+1,w,c	;volatile
 21334  00589E  6E31               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21335  0058A0  C030  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21336  0058A4  C031  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21337  0058A8  6AF8               	clrf	tblptru,c
 21338  0058AA  0E07               	movlw	(high __ramtop+-1)
 21339  0058AC  64F7               	cpfsgt	tblptrh,c
 21340  0058AE  D003               	bra	i2u446_47
 21341  0058B0  0008               	tblrd		*
 21342  0058B2  50F5               	movf	tablat,w,c
 21343  0058B4  D005               	bra	i2u446_40
 21344  0058B6                     i2u446_47:
 21345  0058B6  CFF6 FFE1          	movff	tblptrl,fsr1l
 21346  0058BA  CFF7 FFE2          	movff	tblptrh,fsr1h
 21347  0058BE  50E7               	movf	indf1,w,c
 21348  0058C0                     i2u446_40:
 21349  0058C0  6E2D               	movwf	_inPipes+5,c	;volatile
 21350                           
 21351                           ;usb_device.c: 1729: }
 21352  0058C2  0012               	return	
 21353  0058C4                     i2l1703:
 21354                           
 21355                           ; BSR set to: 4
 21356                           ;usb_device.c: 1730: else
 21357                           ;usb_device.c: 1731: {
 21358                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 21359  0058C4  6A2B               	clrf	_inPipes+3,c	;volatile
 21360  0058C6  0012               	return	
 21361  0058C8                     i2l6739:
 21362                           
 21363                           ; BSR set to: 4
 21364                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 21365  0058C8  0E03               	movlw	3
 21366  0058CA  5D32               	subwf	50,w,b	;volatile
 21367  0058CC  E221               	bc	i2l1706
 21368                           
 21369                           ; BSR set to: 4
 21370                           ;usb_device.c: 1740: {
 21371                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 21372  0058CE  5132               	movf	50,w,b	;volatile
 21373  0058D0  0D02               	mullw	2
 21374  0058D2  0E41               	movlw	low _USB_SD_Ptr
 21375  0058D4  24F3               	addwf	prodl,w,c
 21376  0058D6  6EF6               	movwf	tblptrl,c
 21377  0058D8  0E76               	movlw	high _USB_SD_Ptr
 21378  0058DA  20F4               	addwfc	prodh,w,c
 21379  0058DC  6EF7               	movwf	tblptrh,c
 21380  0058DE                     	if	0	;There are less than 3 active tblptr bytes
 21381  0058DE                     	endif
 21382  0058DE  0009               	tblrd		*+
 21383  0058E0  CFF5 F028          	movff	tablat,_inPipes	;volatile
 21384  0058E4  000A               	tblrd		*-
 21385  0058E6  CFF5 F029          	movff	tablat,_inPipes+1	;volatile
 21386                           
 21387                           ; BSR set to: 4
 21388                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 21389  0058EA  C028  FFF6         	movff	_inPipes,tblptrl	;volatile
 21390  0058EE  C029  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 21391  0058F2  6AF8               	clrf	tblptru,c
 21392  0058F4  0E07               	movlw	(high __ramtop+-1)
 21393  0058F6  64F7               	cpfsgt	tblptrh,c
 21394  0058F8  D003               	bra	i2u448_47
 21395  0058FA  0008               	tblrd		*
 21396  0058FC  50F5               	movf	tablat,w,c
 21397  0058FE  D005               	bra	i2u448_40
 21398  005900                     i2u448_47:
 21399  005900  CFF6 FFE1          	movff	tblptrl,fsr1l
 21400  005904  CFF7 FFE2          	movff	tblptrh,fsr1h
 21401  005908  50E7               	movf	indf1,w,c
 21402  00590A                     i2u448_40:
 21403  00590A  6E2C               	movwf	_inPipes+4,c	;volatile
 21404  00590C  6A2D               	clrf	_inPipes+5,c	;volatile
 21405                           
 21406                           ;usb_device.c: 1745: }
 21407  00590E  0012               	return	
 21408  005910                     i2l1706:
 21409                           
 21410                           ; BSR set to: 4
 21411                           ;usb_device.c: 1746: else
 21412                           ;usb_device.c: 1747: {
 21413                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 21414  005910  6A2B               	clrf	_inPipes+3,c	;volatile
 21415  005912  0012               	return	
 21416  005914                     i2l1708:
 21417                           
 21418                           ; BSR set to: 4
 21419                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 21420  005914  6A2B               	clrf	_inPipes+3,c	;volatile
 21421                           
 21422                           ;usb_device.c: 1753: break;
 21423  005916  0012               	return	
 21424  005918                     i2l6747:
 21425                           
 21426                           ; BSR set to: 4
 21427  005918  5133               	movf	51,w,b	;volatile
 21428                           
 21429                           ; Switch size 1, requested type "speed"
 21430                           ; Number of cases is 3, Range of values is 1 to 3
 21431                           ; switch strategies available:
 21432                           ; Name         Instructions Cycles
 21433                           ; simple_byte           10     6 (average)
 21434                           ;	Chosen strategy is simple_byte
 21435  00591A  0A01               	xorlw	1	; case 1
 21436  00591C  E08B               	bz	i2l6729
 21437  00591E  0A03               	xorlw	3	; case 2
 21438  005920  E092               	bz	i2l1702
 21439  005922  0A01               	xorlw	1	; case 3
 21440  005924  E0D1               	bz	i2l6739
 21441  005926  D7F6               	goto	i2l1708
 21442  005928                     __end_of_USBStdGetDscHandler:
 21443                           	opt stack 0
 21444                           pclatu	equ	0xFFB
 21445                           pclath	equ	0xFFA
 21446                           tblptru	equ	0xFF8
 21447                           tblptrh	equ	0xFF7
 21448                           tblptrl	equ	0xFF6
 21449                           tablat	equ	0xFF5
 21450                           prodh	equ	0xFF4
 21451                           prodl	equ	0xFF3
 21452                           intcon	equ	0xFF2
 21453                           postinc0	equ	0xFEE
 21454                           wreg	equ	0xFE8
 21455                           indf1	equ	0xFE7
 21456                           postdec1	equ	0xFE5
 21457                           fsr1h	equ	0xFE2
 21458                           fsr1l	equ	0xFE1
 21459                           indf2	equ	0xFDF
 21460                           postinc2	equ	0xFDE
 21461                           postdec2	equ	0xFDD
 21462                           plusw2	equ	0xFDB
 21463                           fsr2h	equ	0xFDA
 21464                           fsr2l	equ	0xFD9
 21465                           status	equ	0xFD8
 21466                           
 21467 ;; *************** function _USBStdFeatureReqHandler *****************
 21468 ;; Defined at:
 21469 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 21470 ;; Parameters:    Size  Location     Type
 21471 ;;		None
 21472 ;; Auto vars:     Size  Location     Type
 21473 ;;  p               2   28[COMRAM] PTR struct __BDT
 21474 ;;		 -> BDT(48), NULL(0), 
 21475 ;;  pUEP            2   25[COMRAM] PTR unsigned char 
 21476 ;;		 -> UEP0(1), 
 21477 ;;  current_ep_d    1   27[COMRAM] struct .
 21478 ;; Return value:  Size  Location     Type
 21479 ;;		None               void
 21480 ;; Registers used:
 21481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21482 ;; Tracked objects:
 21483 ;;		On entry : B/4
 21484 ;;		On exit  : B/0
 21485 ;;		Unchanged: 0/0
 21486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21487 ;;      Params:         0       0       0       0       0       0       0       0       0
 21488 ;;      Locals:         5       0       0       0       0       0       0       0       0
 21489 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21490 ;;      Totals:         7       0       0       0       0       0       0       0       0
 21491 ;;Total ram usage:        7 bytes
 21492 ;; Hardware stack levels used:    1
 21493 ;; Hardware stack levels required when called:    5
 21494 ;; This function calls:
 21495 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21496 ;; This function is called by:
 21497 ;;		_USBCheckStdRequest
 21498 ;; This function uses a non-reentrant model
 21499 ;;
 21500                           
 21501                           	psect	text101
 21502  005CF6                     __ptext101:
 21503                           	opt stack 0
 21504  005CF6                     _USBStdFeatureReqHandler:
 21505                           	opt stack 10
 21506                           
 21507                           ;usb_device.c: 2387: BDT_ENTRY *p;
 21508                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 21509                           ;usb_device.c: 2390: unsigned char* pUEP;
 21510                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 21511                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 21512                           
 21513                           ;incstack = 0
 21514  005CF6  0104               	movlb	4	; () banked
 21515  005CF8  0532               	decf	50,w,b	;volatile
 21516  005CFA  E10B               	bnz	i2l1792
 21517                           
 21518                           ; BSR set to: 4
 21519  005CFC  5130               	movf	48,w,b	;volatile
 21520  005CFE  0B1F               	andlw	31
 21521  005D00  E108               	bnz	i2l1792
 21522                           
 21523                           ; BSR set to: 4
 21524                           ;usb_device.c: 2395: {
 21525                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 21526  005D02  8E2B               	bsf	_inPipes+3,7,c	;volatile
 21527                           
 21528                           ; BSR set to: 4
 21529                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 21530  005D04  5131               	movf	49,w,b	;volatile
 21531  005D06  0A03               	xorlw	3
 21532  005D08  E103               	bnz	i2l1793
 21533                           
 21534                           ; BSR set to: 4
 21535                           ;usb_device.c: 2398: RemoteWakeup = 1;
 21536  005D0A  0E01               	movlw	1
 21537  005D0C  6E18               	movwf	_RemoteWakeup,c	;volatile
 21538  005D0E  D001               	goto	i2l1792
 21539  005D10                     i2l1793:
 21540                           
 21541                           ; BSR set to: 4
 21542                           ;usb_device.c: 2399: else
 21543                           ;usb_device.c: 2400: RemoteWakeup = 0;
 21544  005D10  6A18               	clrf	_RemoteWakeup,c	;volatile
 21545  005D12                     i2l1792:
 21546                           
 21547                           ; BSR set to: 4
 21548                           ;usb_device.c: 2401: }
 21549                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 21550                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 21551                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 21552                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 21553  005D12  6732               	tstfsz	50,b	;volatile
 21554  005D14  0012               	return	
 21555                           
 21556                           ; BSR set to: 4
 21557  005D16  5130               	movf	48,w,b	;volatile
 21558  005D18  0B1F               	andlw	31
 21559  005D1A  0A02               	xorlw	2
 21560  005D1C  A4D8               	btfss	status,2,c
 21561  005D1E  0012               	return	
 21562                           
 21563                           ; BSR set to: 4
 21564  005D20  5134               	movf	52,w,b	;volatile
 21565  005D22  0B0F               	andlw	15
 21566  005D24  B4D8               	btfsc	status,2,c
 21567  005D26  0012               	return	
 21568                           
 21569                           ; BSR set to: 4
 21570  005D28  5134               	movf	52,w,b	;volatile
 21571  005D2A  0B0F               	andlw	15
 21572  005D2C  6E47               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21573  005D2E  0E03               	movlw	3
 21574  005D30  5C47               	subwf	??_USBStdFeatureReqHandler,w,c
 21575  005D32  B0D8               	btfsc	status,0,c
 21576  005D34  0012               	return	
 21577                           
 21578                           ; BSR set to: 4
 21579  005D36  0100               	movlb	0	; () banked
 21580  005D38  5189               	movf	_USBDeviceState& (0+255),w,b	;volatile
 21581  005D3A  0A20               	xorlw	32
 21582  005D3C  A4D8               	btfss	status,2,c
 21583  005D3E  0012               	return	
 21584                           
 21585                           ; BSR set to: 0
 21586                           ;usb_device.c: 2408: {
 21587                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 21588  005D40  8E2B               	bsf	_inPipes+3,7,c	;volatile
 21589                           
 21590                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 21591  005D42  0104               	movlb	4	; () banked
 21592  005D44  BF34               	btfsc	52,7,b	;volatile
 21593  005D46  D011               	goto	i2l6801
 21594                           
 21595                           ; BSR set to: 4
 21596                           ;usb_device.c: 2415: {
 21597                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21598  005D48  5134               	movf	52,w,b	;volatile
 21599  005D4A  0B0F               	andlw	15
 21600  005D4C  0D02               	mullw	2
 21601  005D4E  50F3               	movf	prodl,w,c
 21602  005D50  0F60               	addlw	low _pBDTEntryOut
 21603  005D52  6ED9               	movwf	fsr2l,c
 21604  005D54  6ADA               	clrf	fsr2h,c
 21605  005D56  CFDE F04C          	movff	postinc2,USBStdFeatureReqHandler@p
 21606  005D5A  CFDD F04D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21607                           
 21608                           ; BSR set to: 0
 21609                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 21610  005D5E  5134               	movf	52,w,b	;volatile
 21611  005D60  0B0F               	andlw	15
 21612  005D62  6E47               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21613  005D64  5047               	movf	??_USBStdFeatureReqHandler,w,c
 21614  005D66  0F6D               	addlw	low _ep_data_out	;volatile
 21615  005D68  D010               	goto	L78
 21616  005D6A                     i2l6801:
 21617                           
 21618                           ; BSR set to: 4
 21619                           ;usb_device.c: 2419: else
 21620                           ;usb_device.c: 2420: {
 21621                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21622  005D6A  5134               	movf	52,w,b	;volatile
 21623  005D6C  0B0F               	andlw	15
 21624  005D6E  0D02               	mullw	2
 21625  005D70  50F3               	movf	prodl,w,c
 21626  005D72  0F09               	addlw	low _pBDTEntryIn
 21627  005D74  6ED9               	movwf	fsr2l,c
 21628  005D76  6ADA               	clrf	fsr2h,c
 21629  005D78  CFDE F04C          	movff	postinc2,USBStdFeatureReqHandler@p
 21630  005D7C  CFDD F04D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21631                           
 21632                           ; BSR set to: 4
 21633                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 21634  005D80  5134               	movf	52,w,b	;volatile
 21635  005D82  0B0F               	andlw	15
 21636  005D84  6E47               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21637  005D86  5047               	movf	??_USBStdFeatureReqHandler,w,c
 21638  005D88  0F6A               	addlw	low _ep_data_in	;volatile
 21639  005D8A                     L78:
 21640  005D8A  6ED9               	movwf	fsr2l,c
 21641  005D8C  6ADA               	clrf	fsr2h,c
 21642  005D8E  50DF               	movf	indf2,w,c
 21643  005D90  6E4B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 21644                           
 21645                           ; BSR set to: 0
 21646                           ;usb_device.c: 2423: }
 21647                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 21648  005D92  B04B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 21649  005D94  D002               	goto	i2l6809
 21650                           
 21651                           ; BSR set to: 0
 21652                           ;usb_device.c: 2429: {
 21653                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 21654  005D96  944C               	bcf	USBStdFeatureReqHandler@p,2,c
 21655                           
 21656                           ;usb_device.c: 2431: }
 21657  005D98  D001               	goto	i2l6811
 21658  005D9A                     i2l6809:
 21659                           
 21660                           ; BSR set to: 0
 21661                           ;usb_device.c: 2432: else
 21662                           ;usb_device.c: 2433: {
 21663                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 21664  005D9A  844C               	bsf	USBStdFeatureReqHandler@p,2,c
 21665  005D9C                     i2l6811:
 21666                           
 21667                           ; BSR set to: 0
 21668                           ;usb_device.c: 2435: }
 21669                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 21670  005D9C  0104               	movlb	4	; () banked
 21671  005D9E  BF34               	btfsc	52,7,b	;volatile
 21672  005DA0  D006               	goto	i2l6815
 21673                           
 21674                           ; BSR set to: 4
 21675                           ;usb_device.c: 2440: {
 21676                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21677  005DA2  5134               	movf	52,w,b	;volatile
 21678  005DA4  0B0F               	andlw	15
 21679  005DA6  0D02               	mullw	2
 21680  005DA8  50F3               	movf	prodl,w,c
 21681  005DAA  0F60               	addlw	low _pBDTEntryOut
 21682  005DAC  D005               	goto	L79
 21683  005DAE                     i2l6815:
 21684                           
 21685                           ; BSR set to: 4
 21686                           ;usb_device.c: 2443: else
 21687                           ;usb_device.c: 2444: {
 21688                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21689  005DAE  5134               	movf	52,w,b	;volatile
 21690  005DB0  0B0F               	andlw	15
 21691  005DB2  0D02               	mullw	2
 21692  005DB4  50F3               	movf	prodl,w,c
 21693  005DB6  0F09               	addlw	low _pBDTEntryIn
 21694  005DB8                     L79:
 21695  005DB8  6ED9               	movwf	fsr2l,c
 21696  005DBA  6ADA               	clrf	fsr2h,c
 21697  005DBC  C04C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 21698  005DC0  C04D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 21699                           
 21700                           ;usb_device.c: 2446: }
 21701                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 21702  005DC4  0104               	movlb	4	; () banked
 21703  005DC6  5131               	movf	49,w,b	;volatile
 21704  005DC8  0A03               	xorlw	3
 21705  005DCA  E124               	bnz	i2l6827
 21706                           
 21707                           ; BSR set to: 4
 21708                           ;usb_device.c: 2450: {
 21709                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 21710  005DCC  C04C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21711  005DD0  C04D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21712  005DD4  AEDF               	btfss	indf2,7,c
 21713  005DD6  D012               	goto	i2l1803
 21714                           
 21715                           ; BSR set to: 4
 21716                           ;usb_device.c: 2452: {
 21717                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 21718  005DD8  BF34               	btfsc	52,7,b	;volatile
 21719  005DDA  D007               	goto	i2l6825
 21720                           
 21721                           ; BSR set to: 4
 21722                           ;usb_device.c: 2456: {
 21723                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 21724  005DDC  5134               	movf	52,w,b	;volatile
 21725  005DDE  0B0F               	andlw	15
 21726  005DE0  6E47               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21727  005DE2  5047               	movf	??_USBStdFeatureReqHandler,w,c
 21728  005DE4  0100               	movlb	0	; () banked
 21729  005DE6  0F6D               	addlw	low _ep_data_out	;volatile
 21730  005DE8  D006               	goto	L80
 21731  005DEA                     i2l6825:
 21732                           
 21733                           ; BSR set to: 4
 21734                           ;usb_device.c: 2459: else
 21735                           ;usb_device.c: 2460: {
 21736                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 21737  005DEA  5134               	movf	52,w,b	;volatile
 21738  005DEC  0B0F               	andlw	15
 21739  005DEE  6E47               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21740  005DF0  5047               	movf	??_USBStdFeatureReqHandler,w,c
 21741  005DF2  0100               	movlb	0	; () banked
 21742  005DF4  0F6A               	addlw	low _ep_data_in	;volatile
 21743  005DF6                     L80:
 21744  005DF6  6ED9               	movwf	fsr2l,c
 21745  005DF8  6ADA               	clrf	fsr2h,c
 21746  005DFA  82DF               	bsf	indf2,1,c
 21747  005DFC                     i2l1803:
 21748                           
 21749                           ;usb_device.c: 2462: }
 21750                           ;usb_device.c: 2463: }
 21751                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 21752  005DFC  C04C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21753  005E00  C04D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21754  005E04  0E00               	movlw	0
 21755  005E06  84DB               	bsf	plusw2,2,c
 21756                           
 21757                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 21758  005E08  C04C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21759  005E0C  C04D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21760  005E10  8EDB               	bsf	plusw2,7,c
 21761                           
 21762                           ;usb_device.c: 2468: }
 21763  005E12  0C00               	retlw	0
 21764  005E14                     i2l6827:
 21765                           
 21766                           ; BSR set to: 4
 21767                           ;usb_device.c: 2469: else
 21768                           ;usb_device.c: 2470: {
 21769                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 21770  005E14  0E04               	movlw	4
 21771  005E16  1A4C               	xorwf	USBStdFeatureReqHandler@p,f,c
 21772                           
 21773                           ; BSR set to: 4
 21774                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 21775  005E18  C04C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21776  005E1C  C04D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21777  005E20  AEDF               	btfss	indf2,7,c
 21778  005E22  D019               	goto	i2l6837
 21779                           
 21780                           ; BSR set to: 4
 21781                           ;usb_device.c: 2476: {
 21782                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 21783  005E24  C04C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21784  005E28  C04D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21785  005E2C  0E7F               	movlw	127
 21786  005E2E  16DF               	andwf	indf2,f,c
 21787                           
 21788                           ; BSR set to: 4
 21789                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 21790  005E30  C04C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21791  005E34  C04D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21792  005E38  0E00               	movlw	0
 21793  005E3A  8CDB               	bsf	plusw2,6,c
 21794                           
 21795                           ; BSR set to: 4
 21796                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 21797  005E3C  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21798  005E3E  0E05               	movlw	5
 21799  005E40  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21800  005E42  C04D  F042         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 21801  005E46  C04C  F041         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 21802  005E4A  6A44               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21803  005E4C  0E02               	movlw	2
 21804  005E4E  6E43               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21805  005E50  ECCF  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21806                           
 21807                           ;usb_device.c: 2482: }
 21808  005E54  D006               	goto	i2l6839
 21809  005E56                     i2l6837:
 21810                           
 21811                           ; BSR set to: 4
 21812                           ;usb_device.c: 2483: else
 21813                           ;usb_device.c: 2484: {
 21814                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 21815  005E56  C04C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21816  005E5A  C04D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21817  005E5E  0E00               	movlw	0
 21818  005E60  8CDB               	bsf	plusw2,6,c
 21819  005E62                     i2l6839:
 21820                           
 21821                           ;usb_device.c: 2487: }
 21822                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 21823  005E62  0E04               	movlw	4
 21824  005E64  1A4C               	xorwf	USBStdFeatureReqHandler@p,f,c
 21825                           
 21826                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 21827  005E66  B24B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 21828  005E68  D006               	goto	i2l1811
 21829  005E6A  C04C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21830  005E6E  C04D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21831  005E72  AEDF               	btfss	indf2,7,c
 21832  005E74  D026               	goto	i2l6853
 21833  005E76                     i2l1811:
 21834                           
 21835                           ;usb_device.c: 2498: {
 21836                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 21837  005E76  0104               	movlb	4	; () banked
 21838  005E78  BF34               	btfsc	52,7,b	;volatile
 21839  005E7A  D007               	goto	i2l6847
 21840                           
 21841                           ; BSR set to: 4
 21842                           ;usb_device.c: 2500: {
 21843                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 21844  005E7C  5134               	movf	52,w,b	;volatile
 21845  005E7E  0B0F               	andlw	15
 21846  005E80  6E47               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21847  005E82  5047               	movf	??_USBStdFeatureReqHandler,w,c
 21848  005E84  0100               	movlb	0	; () banked
 21849  005E86  0F6D               	addlw	low _ep_data_out	;volatile
 21850  005E88  D006               	goto	L81
 21851  005E8A                     i2l6847:
 21852                           
 21853                           ; BSR set to: 4
 21854                           ;usb_device.c: 2503: else
 21855                           ;usb_device.c: 2504: {
 21856                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 21857  005E8A  5134               	movf	52,w,b	;volatile
 21858  005E8C  0B0F               	andlw	15
 21859  005E8E  6E47               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21860  005E90  5047               	movf	??_USBStdFeatureReqHandler,w,c
 21861  005E92  0100               	movlb	0	; () banked
 21862  005E94  0F6A               	addlw	low _ep_data_in	;volatile
 21863  005E96                     L81:
 21864  005E96  6ED9               	movwf	fsr2l,c
 21865  005E98  6ADA               	clrf	fsr2h,c
 21866  005E9A  92DF               	bcf	indf2,1,c
 21867                           
 21868                           ; BSR set to: 0
 21869                           ;usb_device.c: 2506: }
 21870                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 21871  005E9C  C04C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21872  005EA0  C04D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21873  005EA4  0E3B               	movlw	59
 21874  005EA6  16DF               	andwf	indf2,f,c
 21875                           
 21876                           ; BSR set to: 0
 21877                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 21878  005EA8  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21879  005EAA  0E05               	movlw	5
 21880  005EAC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21881  005EAE  C04D  F042         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 21882  005EB2  C04C  F041         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 21883  005EB6  6A44               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21884  005EB8  0E02               	movlw	2
 21885  005EBA  6E43               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21886  005EBC  ECCF  F01D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21887                           
 21888                           ;usb_device.c: 2512: }
 21889  005EC0  D006               	goto	i2l6855
 21890  005EC2                     i2l6853:
 21891                           
 21892                           ;usb_device.c: 2513: else
 21893                           ;usb_device.c: 2514: {
 21894                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 21895  005EC2  C04C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21896  005EC6  C04D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21897  005ECA  0E3B               	movlw	59
 21898  005ECC  16DF               	andwf	indf2,f,c
 21899  005ECE                     i2l6855:
 21900                           
 21901                           ;usb_device.c: 2517: }
 21902                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 21903  005ECE  0E6A               	movlw	106	;volatile
 21904  005ED0  6E47               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21905  005ED2  0E0F               	movlw	15	;volatile
 21906  005ED4  6E48               	movwf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 21907  005ED6  0104               	movlb	4	; () banked
 21908  005ED8  5134               	movf	52,w,b	;volatile
 21909  005EDA  0B0F               	andlw	15
 21910  005EDC  2647               	addwf	??_USBStdFeatureReqHandler,f,c
 21911  005EDE  0E00               	movlw	0
 21912  005EE0  2248               	addwfc	??_USBStdFeatureReqHandler+1,f,c
 21913  005EE2  C047  F049         	movff	??_USBStdFeatureReqHandler,USBStdFeatureReqHandler@pUEP
 21914  005EE6  C048  F04A         	movff	??_USBStdFeatureReqHandler+1,USBStdFeatureReqHandler@pUEP+1
 21915                           
 21916                           ; BSR set to: 4
 21917                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 21918  005EEA  C049  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 21919  005EEE  C04A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 21920  005EF2  0EFE               	movlw	254
 21921  005EF4  16DF               	andwf	indf2,f,c
 21922  005EF6  0CFE               	retlw	254
 21923  005EF8                     __end_of_USBStdFeatureReqHandler:
 21924                           	opt stack 0
 21925                           pclatu	equ	0xFFB
 21926                           pclath	equ	0xFFA
 21927                           tblptru	equ	0xFF8
 21928                           tblptrh	equ	0xFF7
 21929                           tblptrl	equ	0xFF6
 21930                           tablat	equ	0xFF5
 21931                           prodh	equ	0xFF4
 21932                           prodl	equ	0xFF3
 21933                           intcon	equ	0xFF2
 21934                           postinc0	equ	0xFEE
 21935                           wreg	equ	0xFE8
 21936                           indf1	equ	0xFE7
 21937                           postdec1	equ	0xFE5
 21938                           fsr1h	equ	0xFE2
 21939                           fsr1l	equ	0xFE1
 21940                           indf2	equ	0xFDF
 21941                           postinc2	equ	0xFDE
 21942                           postdec2	equ	0xFDD
 21943                           plusw2	equ	0xFDB
 21944                           fsr2h	equ	0xFDA
 21945                           fsr2l	equ	0xFD9
 21946                           status	equ	0xFD8
 21947                           
 21948 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 21949 ;; Defined at:
 21950 ;;		line 271 in file "../Includes/Board/USBapp.c"
 21951 ;; Parameters:    Size  Location     Type
 21952 ;;  event           2   15[COMRAM] enum E7256
 21953 ;;  pdata           2   17[COMRAM] PTR void 
 21954 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 21955 ;;  size            2   19[COMRAM] unsigned int 
 21956 ;; Auto vars:     Size  Location     Type
 21957 ;;		None
 21958 ;; Return value:  Size  Location     Type
 21959 ;;                  1    wreg      unsigned char 
 21960 ;; Registers used:
 21961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21962 ;; Tracked objects:
 21963 ;;		On entry : 0/0
 21964 ;;		On exit  : 0/0
 21965 ;;		Unchanged: 0/0
 21966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21967 ;;      Params:         6       0       0       0       0       0       0       0       0
 21968 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21969 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21970 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21971 ;;Total ram usage:        8 bytes
 21972 ;; Hardware stack levels used:    1
 21973 ;; Hardware stack levels required when called:    4
 21974 ;; This function calls:
 21975 ;;		_USBCheckCDCRequest
 21976 ;;		_USBapp_CdcEmulatorInitialize
 21977 ;; This function is called by:
 21978 ;;		_USBDeviceTasks
 21979 ;;		_USBStdSetCfgHandler
 21980 ;;		_USBSuspend
 21981 ;;		_USBWakeFromSuspend
 21982 ;;		_USBCtrlTrfSetupHandler
 21983 ;;		_USBCheckStdRequest
 21984 ;;		_USBStdFeatureReqHandler
 21985 ;; This function uses a non-reentrant model
 21986 ;;
 21987                           
 21988                           	psect	text102
 21989  003B9E                     __ptext102:
 21990                           	opt stack 0
 21991  003B9E                     _USER_USB_CALLBACK_EVENT_HANDLER:
 21992                           	opt stack 14
 21993                           
 21994                           ;USBapp.c: 273: switch( (int) event )
 21995                           
 21996                           ;incstack = 0
 21997  003B9E  D004               	goto	i2l6409
 21998  003BA0                     i2l6403:
 21999                           
 22000                           ;USBapp.c: 297: USBapp_CdcEmulatorInitialize();
 22001  003BA0  EFE7  F01C         	goto	_USBapp_CdcEmulatorInitialize	;wreg free
 22002  003BA4                     i2l6405:
 22003                           
 22004                           ;USBapp.c: 306: USBCheckCDCRequest();
 22005  003BA4  EF76  F023         	goto	_USBCheckCDCRequest	;wreg free
 22006  003BA8                     i2l6409:
 22007  003BA8  C03F  F045         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 22008  003BAC  C040  F046         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 22009                           
 22010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 22011                           ; Switch size 1, requested type "speed"
 22012                           ; Number of cases is 2, Range of values is 0 to 127
 22013                           ; switch strategies available:
 22014                           ; Name         Instructions Cycles
 22015                           ; simple_byte            7     4 (average)
 22016                           ;	Chosen strategy is simple_byte
 22017  003BB0  5046               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 22018  003BB2  E004               	bz	i2l12267
 22019  003BB4  0A7F               	xorlw	127	; case 127
 22020  003BB6  A4D8               	btfss	status,2,c
 22021  003BB8  0012               	return	
 22022  003BBA  D015               	goto	i2l12269
 22023  003BBC                     i2l12267:
 22024                           
 22025                           ; Switch size 1, requested type "speed"
 22026                           ; Number of cases is 8, Range of values is 1 to 117
 22027                           ; switch strategies available:
 22028                           ; Name         Instructions Cycles
 22029                           ; simple_byte           25    13 (average)
 22030                           ;	Chosen strategy is simple_byte
 22031  003BBC  5045               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 22032  003BBE  0A01               	xorlw	1	; case 1
 22033  003BC0  E0EF               	bz	i2l6403
 22034  003BC2  0A03               	xorlw	3	; case 2
 22035  003BC4  B4D8               	btfsc	status,2,c
 22036  003BC6  0012               	return	
 22037  003BC8  0A01               	xorlw	1	; case 3
 22038  003BCA  E0EC               	bz	i2l6405
 22039  003BCC  0A06               	xorlw	6	; case 5
 22040  003BCE  B4D8               	btfsc	status,2,c
 22041  003BD0  0012               	return	
 22042  003BD2  0A77               	xorlw	119	; case 114
 22043  003BD4  B4D8               	btfsc	status,2,c
 22044  003BD6  0012               	return	
 22045  003BD8  0A01               	xorlw	1	; case 115
 22046  003BDA  B4D8               	btfsc	status,2,c
 22047  003BDC  0012               	return	
 22048  003BDE  0A07               	xorlw	7	; case 116
 22049  003BE0  A4D8               	btfss	status,2,c
 22050  003BE2  0A01               	xorlw	1	; case 117
 22051  003BE4  0012               	return	
 22052  003BE6                     i2l12269:
 22053                           
 22054                           ; Switch size 1, requested type "speed"
 22055                           ; Number of cases is 1, Range of values is 255 to 255
 22056                           ; switch strategies available:
 22057                           ; Name         Instructions Cycles
 22058                           ; simple_byte            4     3 (average)
 22059                           ;	Chosen strategy is simple_byte
 22060  003BE6  1C45               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 22061  003BE8  0012               	return	
 22062  003BEA                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 22063                           	opt stack 0
 22064                           pclatu	equ	0xFFB
 22065                           pclath	equ	0xFFA
 22066                           tblptru	equ	0xFF8
 22067                           tblptrh	equ	0xFF7
 22068                           tblptrl	equ	0xFF6
 22069                           tablat	equ	0xFF5
 22070                           prodh	equ	0xFF4
 22071                           prodl	equ	0xFF3
 22072                           intcon	equ	0xFF2
 22073                           postinc0	equ	0xFEE
 22074                           wreg	equ	0xFE8
 22075                           indf1	equ	0xFE7
 22076                           postdec1	equ	0xFE5
 22077                           fsr1h	equ	0xFE2
 22078                           fsr1l	equ	0xFE1
 22079                           indf2	equ	0xFDF
 22080                           postinc2	equ	0xFDE
 22081                           postdec2	equ	0xFDD
 22082                           plusw2	equ	0xFDB
 22083                           fsr2h	equ	0xFDA
 22084                           fsr2l	equ	0xFD9
 22085                           status	equ	0xFD8
 22086                           
 22087 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 22088 ;; Defined at:
 22089 ;;		line 107 in file "../Includes/Board/USBapp.c"
 22090 ;; Parameters:    Size  Location     Type
 22091 ;;		None
 22092 ;; Auto vars:     Size  Location     Type
 22093 ;;  i               1   14[COMRAM] unsigned char 
 22094 ;; Return value:  Size  Location     Type
 22095 ;;		None               void
 22096 ;; Registers used:
 22097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22098 ;; Tracked objects:
 22099 ;;		On entry : 0/0
 22100 ;;		On exit  : F/1
 22101 ;;		Unchanged: 0/0
 22102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22103 ;;      Params:         0       0       0       0       0       0       0       0       0
 22104 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22105 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22106 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22107 ;;Total ram usage:        1 bytes
 22108 ;; Hardware stack levels used:    1
 22109 ;; Hardware stack levels required when called:    3
 22110 ;; This function calls:
 22111 ;;		_CDCInitEP
 22112 ;;		i2_EUSART_Initialize
 22113 ;; This function is called by:
 22114 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22115 ;; This function uses a non-reentrant model
 22116 ;;
 22117                           
 22118                           	psect	text103
 22119  0039CE                     __ptext103:
 22120                           	opt stack 0
 22121  0039CE                     _USBapp_CdcEmulatorInitialize:
 22122                           	opt stack 14
 22123                           
 22124                           ;USBapp.c: 110: CDCInitEP();
 22125                           
 22126                           ;incstack = 0
 22127  0039CE  EC41  F01E         	call	_CDCInitEP	;wreg free
 22128                           
 22129                           ; BSR set to: 0
 22130                           ;USBapp.c: 111: line_coding.bCharFormat = 0;
 22131  0039D2  6BBE               	clrf	(_line_coding+4)& (0+255),b
 22132                           
 22133                           ; BSR set to: 0
 22134                           ;USBapp.c: 112: line_coding.bDataBits = 8;
 22135  0039D4  0E08               	movlw	8
 22136  0039D6  6FC0               	movwf	(_line_coding+6)& (0+255),b
 22137                           
 22138                           ; BSR set to: 0
 22139                           ;USBapp.c: 113: line_coding.bParityType = 0;
 22140  0039D8  6BBF               	clrf	(_line_coding+5)& (0+255),b
 22141                           
 22142                           ; BSR set to: 0
 22143                           ;USBapp.c: 114: line_coding.dwDTERate = 19200;
 22144  0039DA  6BBA               	clrf	_line_coding& (0+255),b
 22145  0039DC  0E4B               	movlw	75
 22146  0039DE  6FBB               	movwf	(_line_coding+1)& (0+255),b
 22147  0039E0  0E00               	movlw	0
 22148  0039E2  6BBC               	clrf	(_line_coding+2)& (0+255),b
 22149  0039E4  6BBD               	clrf	(_line_coding+3)& (0+255),b
 22150                           
 22151                           ; BSR set to: 0
 22152                           ;USBapp.c: 115: EUSART_Initialize();
 22153  0039E6  ECEC  F01B         	call	i2_EUSART_Initialize	;wreg free
 22154                           
 22155                           ; BSR set to: 0
 22156                           ;USBapp.c: 117: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 22157  0039EA  6A3E               	clrf	USBapp_CdcEmulatorInitialize@i,c
 22158  0039EC                     i2l6329:
 22159                           
 22160                           ;USBapp.c: 118: {
 22161                           ;USBapp.c: 119: USB_Buffer[i] = 0;
 22162  0039EC  0101               	movlb	1	; () banked
 22163  0039EE  0E40               	movlw	low _USB_Buffer
 22164  0039F0  243E               	addwf	USBapp_CdcEmulatorInitialize@i,w,c
 22165  0039F2  6ED9               	movwf	fsr2l,c
 22166  0039F4  6ADA               	clrf	fsr2h,c
 22167  0039F6  0E01               	movlw	high _USB_Buffer
 22168  0039F8  22DA               	addwfc	fsr2h,f,c
 22169  0039FA  6ADF               	clrf	indf2,c
 22170                           
 22171                           ; BSR set to: 1
 22172  0039FC  2A3E               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 22173                           
 22174                           ; BSR set to: 1
 22175  0039FE  0E3F               	movlw	63
 22176  003A00  643E               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 22177  003A02  D7F4               	goto	i2l6329
 22178                           
 22179                           ; BSR set to: 1
 22180                           ;USBapp.c: 120: }
 22181                           ;USBapp.c: 121: NextUSBOut = 0;
 22182  003A04  6A15               	clrf	_NextUSBOut,c
 22183                           
 22184                           ;USBapp.c: 122: LastRS232Out = 0;
 22185  003A06  6A14               	clrf	_LastRS232Out,c
 22186                           
 22187                           ; BSR set to: 1
 22188  003A08  0012               	return	
 22189  003A0A                     __end_of_USBapp_CdcEmulatorInitialize:
 22190                           	opt stack 0
 22191                           pclatu	equ	0xFFB
 22192                           pclath	equ	0xFFA
 22193                           tblptru	equ	0xFF8
 22194                           tblptrh	equ	0xFF7
 22195                           tblptrl	equ	0xFF6
 22196                           tablat	equ	0xFF5
 22197                           prodh	equ	0xFF4
 22198                           prodl	equ	0xFF3
 22199                           intcon	equ	0xFF2
 22200                           postinc0	equ	0xFEE
 22201                           wreg	equ	0xFE8
 22202                           indf1	equ	0xFE7
 22203                           postdec1	equ	0xFE5
 22204                           fsr1h	equ	0xFE2
 22205                           fsr1l	equ	0xFE1
 22206                           indf2	equ	0xFDF
 22207                           postinc2	equ	0xFDE
 22208                           postdec2	equ	0xFDD
 22209                           plusw2	equ	0xFDB
 22210                           fsr2h	equ	0xFDA
 22211                           fsr2l	equ	0xFD9
 22212                           status	equ	0xFD8
 22213                           
 22214 ;; *************** function _CDCInitEP *****************
 22215 ;; Defined at:
 22216 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 22217 ;; Parameters:    Size  Location     Type
 22218 ;;		None
 22219 ;; Auto vars:     Size  Location     Type
 22220 ;;		None
 22221 ;; Return value:  Size  Location     Type
 22222 ;;		None               void
 22223 ;; Registers used:
 22224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22225 ;; Tracked objects:
 22226 ;;		On entry : 0/0
 22227 ;;		On exit  : F/0
 22228 ;;		Unchanged: 0/0
 22229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22230 ;;      Params:         0       0       0       0       0       0       0       0       0
 22231 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22232 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22233 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22234 ;;Total ram usage:        0 bytes
 22235 ;; Hardware stack levels used:    1
 22236 ;; Hardware stack levels required when called:    2
 22237 ;; This function calls:
 22238 ;;		_USBEnableEndpoint
 22239 ;;		i2_USBTransferOnePacket
 22240 ;; This function is called by:
 22241 ;;		_USBapp_CdcEmulatorInitialize
 22242 ;; This function uses a non-reentrant model
 22243 ;;
 22244                           
 22245                           	psect	text104
 22246  003C82                     __ptext104:
 22247                           	opt stack 0
 22248  003C82                     _CDCInitEP:
 22249                           	opt stack 14
 22250                           
 22251                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 22252                           
 22253                           ; BSR set to: 1
 22254                           ;incstack = 0
 22255  003C82  0100               	movlb	0	; () banked
 22256  003C84  6BBA               	clrf	_line_coding& (0+255),b
 22257  003C86  0E4B               	movlw	75
 22258  003C88  6FBB               	movwf	(_line_coding+1)& (0+255),b
 22259  003C8A  6BBC               	clrf	(_line_coding+2)& (0+255),b
 22260  003C8C  6BBD               	clrf	(_line_coding+3)& (0+255),b
 22261                           
 22262                           ; BSR set to: 0
 22263                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 22264  003C8E  6BBE               	clrf	(_line_coding+4)& (0+255),b
 22265                           
 22266                           ; BSR set to: 0
 22267                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 22268  003C90  6BBF               	clrf	(_line_coding+5)& (0+255),b
 22269                           
 22270                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 22271  003C92  0E08               	movlw	8
 22272  003C94  6FC0               	movwf	(_line_coding+6)& (0+255),b
 22273                           
 22274                           ; BSR set to: 0
 22275                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 22276  003C96  6A1D               	clrf	_cdc_rx_len,c
 22277                           
 22278                           ; BSR set to: 0
 22279                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 22280  003C98  0E1A               	movlw	26
 22281  003C9A  6E38               	movwf	USBEnableEndpoint@options,c
 22282  003C9C  0E01               	movlw	1
 22283  003C9E  EC43  F01D         	call	_USBEnableEndpoint
 22284                           
 22285                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 22286  003CA2  0E1E               	movlw	30
 22287  003CA4  6E38               	movwf	USBEnableEndpoint@options,c
 22288  003CA6  0E02               	movlw	2
 22289  003CA8  EC43  F01D         	call	_USBEnableEndpoint
 22290                           
 22291                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 22292  003CAC  6A30               	clrf	i2USBTransferOnePacket@dir,c
 22293  003CAE  0105               	movlb	5	; () banked
 22294  003CB0  0E05               	movlw	5	;volatile
 22295  003CB2  6E32               	movwf	i2USBTransferOnePacket@data+1,c
 22296  003CB4  0E40               	movlw	64	;volatile
 22297  003CB6  6E31               	movwf	i2USBTransferOnePacket@data,c
 22298  003CB8  6E33               	movwf	i2USBTransferOnePacket@len,c
 22299  003CBA  0E02               	movlw	2
 22300  003CBC  EC63  F024         	call	i2_USBTransferOnePacket
 22301  003CC0  C030  F078         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 22302  003CC4  C031  F079         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 22303                           
 22304                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 22305  003CC8  0100               	movlb	0	; () banked
 22306  003CCA  6B76               	clrf	_CDCDataInHandle& (0+255),b
 22307  003CCC  6B77               	clrf	(_CDCDataInHandle+1)& (0+255),b
 22308                           
 22309                           ; BSR set to: 0
 22310                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 22311  003CCE  6A1E               	clrf	_cdc_trf_state,c
 22312                           
 22313                           ; BSR set to: 0
 22314  003CD0  0012               	return	
 22315  003CD2                     __end_of_CDCInitEP:
 22316                           	opt stack 0
 22317                           pclatu	equ	0xFFB
 22318                           pclath	equ	0xFFA
 22319                           tblptru	equ	0xFF8
 22320                           tblptrh	equ	0xFF7
 22321                           tblptrl	equ	0xFF6
 22322                           tablat	equ	0xFF5
 22323                           prodh	equ	0xFF4
 22324                           prodl	equ	0xFF3
 22325                           intcon	equ	0xFF2
 22326                           postinc0	equ	0xFEE
 22327                           wreg	equ	0xFE8
 22328                           indf1	equ	0xFE7
 22329                           postdec1	equ	0xFE5
 22330                           fsr1h	equ	0xFE2
 22331                           fsr1l	equ	0xFE1
 22332                           indf2	equ	0xFDF
 22333                           postinc2	equ	0xFDE
 22334                           postdec2	equ	0xFDD
 22335                           plusw2	equ	0xFDB
 22336                           fsr2h	equ	0xFDA
 22337                           fsr2l	equ	0xFD9
 22338                           status	equ	0xFD8
 22339                           
 22340 ;; *************** function i2_USBTransferOnePacket *****************
 22341 ;; Defined at:
 22342 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 22343 ;; Parameters:    Size  Location     Type
 22344 ;;  ep              1    wreg     unsigned char 
 22345 ;;  dir             1    0[COMRAM] unsigned char 
 22346 ;;  data            2    1[COMRAM] PTR unsigned char 
 22347 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 22348 ;;  len             1    3[COMRAM] unsigned char 
 22349 ;; Auto vars:     Size  Location     Type
 22350 ;;  ep              1    4[COMRAM] unsigned char 
 22351 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 22352 ;;		 -> BDT(48), NULL(0), 
 22353 ;; Return value:  Size  Location     Type
 22354 ;;                  2    0[COMRAM] PTR void 
 22355 ;; Registers used:
 22356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22357 ;; Tracked objects:
 22358 ;;		On entry : F/5
 22359 ;;		On exit  : A/0
 22360 ;;		Unchanged: 0/0
 22361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22362 ;;      Params:         4       0       0       0       0       0       0       0       0
 22363 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22364 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22365 ;;      Totals:         7       0       0       0       0       0       0       0       0
 22366 ;;Total ram usage:        7 bytes
 22367 ;; Hardware stack levels used:    1
 22368 ;; This function calls:
 22369 ;;		Nothing
 22370 ;; This function is called by:
 22371 ;;		_CDCInitEP
 22372 ;; This function uses a non-reentrant model
 22373 ;;
 22374                           
 22375                           	psect	text105
 22376  0048C6                     __ptext105:
 22377                           	opt stack 0
 22378  0048C6                     i2_USBTransferOnePacket:
 22379                           	opt stack 15
 22380                           
 22381                           ; BSR set to: 0
 22382                           ;incstack = 0
 22383                           ;i2USBTransferOnePacket@ep stored from wreg
 22384  0048C6  6E34               	movwf	i2USBTransferOnePacket@ep,c
 22385                           
 22386                           ; BSR set to: 5
 22387                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 22388                           ;usb_device.c: 762: if(dir != 0)
 22389  0048C8  5030               	movf	i2USBTransferOnePacket@dir,w,c
 22390  0048CA  E005               	bz	i2l6197
 22391                           
 22392                           ; BSR set to: 5
 22393                           ;usb_device.c: 763: {
 22394                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 22395  0048CC  5034               	movf	i2USBTransferOnePacket@ep,w,c
 22396  0048CE  0D02               	mullw	2
 22397  0048D0  50F3               	movf	prodl,w,c
 22398  0048D2  0F09               	addlw	low _pBDTEntryIn
 22399  0048D4  D005               	goto	L82
 22400  0048D6                     i2l6197:
 22401                           
 22402                           ; BSR set to: 5
 22403                           ;usb_device.c: 767: else
 22404                           ;usb_device.c: 768: {
 22405                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 22406  0048D6  5034               	movf	i2USBTransferOnePacket@ep,w,c
 22407  0048D8  0D02               	mullw	2
 22408  0048DA  50F3               	movf	prodl,w,c
 22409  0048DC  0100               	movlb	0	; () banked
 22410  0048DE  0F60               	addlw	low _pBDTEntryOut
 22411  0048E0                     L82:
 22412  0048E0  6ED9               	movwf	fsr2l,c
 22413  0048E2  6ADA               	clrf	fsr2h,c
 22414  0048E4  CFDE F035          	movff	postinc2,i2USBTransferOnePacket@handle
 22415  0048E8  CFDD F036          	movff	postdec2,i2USBTransferOnePacket@handle+1
 22416                           
 22417                           ;usb_device.c: 771: }
 22418                           ;usb_device.c: 775: if(handle == 0)
 22419  0048EC  5036               	movf	i2USBTransferOnePacket@handle+1,w,c
 22420  0048EE  1035               	iorwf	i2USBTransferOnePacket@handle,w,c
 22421  0048F0  E103               	bnz	i2l6203
 22422                           
 22423                           ;usb_device.c: 776: {
 22424                           ;usb_device.c: 777: return 0;
 22425  0048F2  6A30               	clrf	?i2_USBTransferOnePacket,c
 22426  0048F4  6A31               	clrf	?i2_USBTransferOnePacket+1,c
 22427  0048F6  0012               	return	
 22428  0048F8                     i2l6203:
 22429                           
 22430                           ;usb_device.c: 778: }
 22431                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 22432  0048F8  EE20 F002          	lfsr	2,2
 22433  0048FC  5035               	movf	i2USBTransferOnePacket@handle,w,c
 22434  0048FE  26D9               	addwf	fsr2l,f,c
 22435  004900  5036               	movf	i2USBTransferOnePacket@handle+1,w,c
 22436  004902  22DA               	addwfc	fsr2h,f,c
 22437  004904  C031  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 22438  004908  C032  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 22439                           
 22440                           ;usb_device.c: 781: handle->CNT = len;
 22441  00490C  EE20 F001          	lfsr	2,1
 22442  004910  5035               	movf	i2USBTransferOnePacket@handle,w,c
 22443  004912  26D9               	addwf	fsr2l,f,c
 22444  004914  5036               	movf	i2USBTransferOnePacket@handle+1,w,c
 22445  004916  22DA               	addwfc	fsr2h,f,c
 22446  004918  C033  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 22447                           
 22448                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 22449  00491C  C035  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22450  004920  C036  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22451  004924  0E40               	movlw	64
 22452  004926  16DF               	andwf	indf2,f,c
 22453                           
 22454                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 22455  004928  C035  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22456  00492C  C036  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22457  004930  0E00               	movlw	0
 22458  004932  86DB               	bsf	plusw2,3,c
 22459                           
 22460                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 22461  004934  C035  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22462  004938  C036  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22463  00493C  8EDB               	bsf	plusw2,7,c
 22464                           
 22465                           ;usb_device.c: 787: if(dir != 0)
 22466  00493E  5030               	movf	i2USBTransferOnePacket@dir,w,c
 22467  004940  E005               	bz	i2l6215
 22468                           
 22469                           ;usb_device.c: 788: {
 22470                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 22471  004942  5034               	movf	i2USBTransferOnePacket@ep,w,c
 22472  004944  0D02               	mullw	2
 22473  004946  50F3               	movf	prodl,w,c
 22474  004948  0F09               	addlw	low _pBDTEntryIn
 22475  00494A  D005               	goto	L83
 22476  00494C                     i2l6215:
 22477                           
 22478                           ;usb_device.c: 792: else
 22479                           ;usb_device.c: 793: {
 22480                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 22481  00494C  5034               	movf	i2USBTransferOnePacket@ep,w,c
 22482  00494E  0D02               	mullw	2
 22483  004950  50F3               	movf	prodl,w,c
 22484  004952  0100               	movlb	0	; () banked
 22485  004954  0F60               	addlw	low _pBDTEntryOut
 22486  004956                     L83:
 22487  004956  6ED9               	movwf	fsr2l,c
 22488  004958  6ADA               	clrf	fsr2h,c
 22489  00495A  0E04               	movlw	4
 22490  00495C  1ADF               	xorwf	indf2,f,c
 22491                           
 22492                           ;usb_device.c: 796: }
 22493                           ;usb_device.c: 797: return (void*)handle;
 22494  00495E  C036  F031         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 22495  004962  C035  F030         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 22496  004966  0C04               	retlw	4
 22497  004968                     __end_ofi2_USBTransferOnePacket:
 22498                           	opt stack 0
 22499                           pclatu	equ	0xFFB
 22500                           pclath	equ	0xFFA
 22501                           tblptru	equ	0xFF8
 22502                           tblptrh	equ	0xFF7
 22503                           tblptrl	equ	0xFF6
 22504                           tablat	equ	0xFF5
 22505                           prodh	equ	0xFF4
 22506                           prodl	equ	0xFF3
 22507                           intcon	equ	0xFF2
 22508                           postinc0	equ	0xFEE
 22509                           wreg	equ	0xFE8
 22510                           indf1	equ	0xFE7
 22511                           postdec1	equ	0xFE5
 22512                           fsr1h	equ	0xFE2
 22513                           fsr1l	equ	0xFE1
 22514                           indf2	equ	0xFDF
 22515                           postinc2	equ	0xFDE
 22516                           postdec2	equ	0xFDD
 22517                           plusw2	equ	0xFDB
 22518                           fsr2h	equ	0xFDA
 22519                           fsr2l	equ	0xFD9
 22520                           status	equ	0xFD8
 22521                           
 22522 ;; *************** function _USBEnableEndpoint *****************
 22523 ;; Defined at:
 22524 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 22525 ;; Parameters:    Size  Location     Type
 22526 ;;  ep              1    wreg     unsigned char 
 22527 ;;  options         1    8[COMRAM] unsigned char 
 22528 ;; Auto vars:     Size  Location     Type
 22529 ;;  ep              1   13[COMRAM] unsigned char 
 22530 ;;  p               2   11[COMRAM] PTR unsigned char 
 22531 ;;		 -> UEP0(1), 
 22532 ;; Return value:  Size  Location     Type
 22533 ;;		None               void
 22534 ;; Registers used:
 22535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22536 ;; Tracked objects:
 22537 ;;		On entry : 0/0
 22538 ;;		On exit  : 0/0
 22539 ;;		Unchanged: 0/0
 22540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22541 ;;      Params:         1       0       0       0       0       0       0       0       0
 22542 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22543 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22544 ;;      Totals:         6       0       0       0       0       0       0       0       0
 22545 ;;Total ram usage:        6 bytes
 22546 ;; Hardware stack levels used:    1
 22547 ;; Hardware stack levels required when called:    1
 22548 ;; This function calls:
 22549 ;;		_USBConfigureEndpoint
 22550 ;; This function is called by:
 22551 ;;		_CDCInitEP
 22552 ;; This function uses a non-reentrant model
 22553 ;;
 22554                           
 22555                           	psect	text106
 22556  003A86                     __ptext106:
 22557                           	opt stack 0
 22558  003A86                     _USBEnableEndpoint:
 22559                           	opt stack 14
 22560                           
 22561                           ;incstack = 0
 22562                           ;USBEnableEndpoint@ep stored from wreg
 22563  003A86  6E3D               	movwf	USBEnableEndpoint@ep,c
 22564                           
 22565                           ;usb_device.c: 647: unsigned char* p;
 22566                           ;usb_device.c: 651: if(options & 0x04)
 22567  003A88  A438               	btfss	USBEnableEndpoint@options,2,c
 22568  003A8A  D004               	goto	i2l6185
 22569                           
 22570                           ;usb_device.c: 652: {
 22571                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 22572  003A8C  6A30               	clrf	USBConfigureEndpoint@direction,c
 22573  003A8E  503D               	movf	USBEnableEndpoint@ep,w,c
 22574  003A90  EC55  F022         	call	_USBConfigureEndpoint
 22575  003A94                     i2l6185:
 22576                           
 22577                           ;usb_device.c: 654: }
 22578                           ;usb_device.c: 655: if(options & 0x02)
 22579  003A94  A238               	btfss	USBEnableEndpoint@options,1,c
 22580  003A96  D005               	goto	i2l6189
 22581                           
 22582                           ;usb_device.c: 656: {
 22583                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 22584  003A98  0E01               	movlw	1
 22585  003A9A  6E30               	movwf	USBConfigureEndpoint@direction,c
 22586  003A9C  503D               	movf	USBEnableEndpoint@ep,w,c
 22587  003A9E  EC55  F022         	call	_USBConfigureEndpoint
 22588  003AA2                     i2l6189:
 22589                           
 22590                           ;usb_device.c: 658: }
 22591                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 22592  003AA2  0E6A               	movlw	106	;volatile
 22593  003AA4  6E39               	movwf	??_USBEnableEndpoint& (0+255),c
 22594  003AA6  0E0F               	movlw	15	;volatile
 22595  003AA8  6E3A               	movwf	(??_USBEnableEndpoint+1)& (0+255),c
 22596  003AAA  503D               	movf	USBEnableEndpoint@ep,w,c
 22597  003AAC  2639               	addwf	??_USBEnableEndpoint,f,c
 22598  003AAE  0E00               	movlw	0
 22599  003AB0  223A               	addwfc	??_USBEnableEndpoint+1,f,c
 22600  003AB2  C039  F03B         	movff	??_USBEnableEndpoint,USBEnableEndpoint@p
 22601  003AB6  C03A  F03C         	movff	??_USBEnableEndpoint+1,USBEnableEndpoint@p+1
 22602                           
 22603                           ;usb_device.c: 664: *p = options;
 22604  003ABA  C03B  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 22605  003ABE  C03C  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 22606  003AC2  C038  FFDF         	movff	USBEnableEndpoint@options,indf2
 22607  003AC6  0C00               	retlw	0
 22608  003AC8                     __end_of_USBEnableEndpoint:
 22609                           	opt stack 0
 22610                           pclatu	equ	0xFFB
 22611                           pclath	equ	0xFFA
 22612                           tblptru	equ	0xFF8
 22613                           tblptrh	equ	0xFF7
 22614                           tblptrl	equ	0xFF6
 22615                           tablat	equ	0xFF5
 22616                           prodh	equ	0xFF4
 22617                           prodl	equ	0xFF3
 22618                           intcon	equ	0xFF2
 22619                           postinc0	equ	0xFEE
 22620                           wreg	equ	0xFE8
 22621                           indf1	equ	0xFE7
 22622                           postdec1	equ	0xFE5
 22623                           fsr1h	equ	0xFE2
 22624                           fsr1l	equ	0xFE1
 22625                           indf2	equ	0xFDF
 22626                           postinc2	equ	0xFDE
 22627                           postdec2	equ	0xFDD
 22628                           plusw2	equ	0xFDB
 22629                           fsr2h	equ	0xFDA
 22630                           fsr2l	equ	0xFD9
 22631                           status	equ	0xFD8
 22632                           
 22633 ;; *************** function _USBConfigureEndpoint *****************
 22634 ;; Defined at:
 22635 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 22636 ;; Parameters:    Size  Location     Type
 22637 ;;  EPNum           1    wreg     unsigned char 
 22638 ;;  direction       1    0[COMRAM] unsigned char 
 22639 ;; Auto vars:     Size  Location     Type
 22640 ;;  EPNum           1    5[COMRAM] unsigned char 
 22641 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 22642 ;;		 -> BDT(48), 
 22643 ;; Return value:  Size  Location     Type
 22644 ;;		None               void
 22645 ;; Registers used:
 22646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22647 ;; Tracked objects:
 22648 ;;		On entry : 0/0
 22649 ;;		On exit  : B/0
 22650 ;;		Unchanged: 0/0
 22651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22652 ;;      Params:         1       0       0       0       0       0       0       0       0
 22653 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22654 ;;      Temps:          4       0       0       0       0       0       0       0       0
 22655 ;;      Totals:         8       0       0       0       0       0       0       0       0
 22656 ;;Total ram usage:        8 bytes
 22657 ;; Hardware stack levels used:    1
 22658 ;; This function calls:
 22659 ;;		Nothing
 22660 ;; This function is called by:
 22661 ;;		_USBEnableEndpoint
 22662 ;; This function uses a non-reentrant model
 22663 ;;
 22664                           
 22665                           	psect	text107
 22666  0044AA                     __ptext107:
 22667                           	opt stack 0
 22668  0044AA                     _USBConfigureEndpoint:
 22669                           	opt stack 14
 22670                           
 22671                           ;incstack = 0
 22672                           ;USBConfigureEndpoint@EPNum stored from wreg
 22673  0044AA  6E35               	movwf	USBConfigureEndpoint@EPNum,c
 22674                           
 22675                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 22676                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 22677  0044AC  0104               	movlb	4	; () banked
 22678  0044AE  0E04               	movlw	4	;volatile
 22679  0044B0  6E37               	movwf	USBConfigureEndpoint@handle+1,c
 22680  0044B2  6A36               	clrf	USBConfigureEndpoint@handle,c
 22681                           
 22682                           ; BSR set to: 4
 22683                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 22684  0044B4  5030               	movf	USBConfigureEndpoint@direction,w,c
 22685  0044B6  6E31               	movwf	??_USBConfigureEndpoint& (0+255),c
 22686  0044B8  6A32               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 22687  0044BA  90D8               	bcf	status,0,c
 22688  0044BC  3631               	rlcf	??_USBConfigureEndpoint,f,c
 22689  0044BE  3632               	rlcf	??_USBConfigureEndpoint+1,f,c
 22690  0044C0  5035               	movf	USBConfigureEndpoint@EPNum,w,c
 22691  0044C2  6E33               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 22692  0044C4  6A34               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 22693  0044C6  90D8               	bcf	status,0,c
 22694  0044C8  3633               	rlcf	??_USBConfigureEndpoint+2,f,c
 22695  0044CA  3634               	rlcf	??_USBConfigureEndpoint+3,f,c
 22696  0044CC  90D8               	bcf	status,0,c
 22697  0044CE  3633               	rlcf	??_USBConfigureEndpoint+2,f,c
 22698  0044D0  3634               	rlcf	??_USBConfigureEndpoint+3,f,c
 22699  0044D2  5031               	movf	??_USBConfigureEndpoint,w,c
 22700  0044D4  2633               	addwf	??_USBConfigureEndpoint+2,f,c
 22701  0044D6  5032               	movf	??_USBConfigureEndpoint+1,w,c
 22702  0044D8  2234               	addwfc	??_USBConfigureEndpoint+3,f,c
 22703  0044DA  90D8               	bcf	status,0,c
 22704  0044DC  3633               	rlcf	??_USBConfigureEndpoint+2,f,c
 22705  0044DE  3634               	rlcf	??_USBConfigureEndpoint+3,f,c
 22706  0044E0  90D8               	bcf	status,0,c
 22707  0044E2  3633               	rlcf	??_USBConfigureEndpoint+2,f,c
 22708  0044E4  3634               	rlcf	??_USBConfigureEndpoint+3,f,c
 22709  0044E6  5033               	movf	??_USBConfigureEndpoint+2,w,c
 22710  0044E8  2636               	addwf	USBConfigureEndpoint@handle,f,c
 22711  0044EA  5034               	movf	??_USBConfigureEndpoint+3,w,c
 22712  0044EC  2237               	addwfc	USBConfigureEndpoint@handle+1,f,c
 22713                           
 22714                           ; BSR set to: 4
 22715                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 22716  0044EE  C036  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 22717  0044F2  C037  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 22718  0044F6  9EDF               	bcf	indf2,7,c
 22719                           
 22720                           ; BSR set to: 4
 22721                           ;usb_device.c: 1242: if(direction == 0)
 22722  0044F8  6630               	tstfsz	USBConfigureEndpoint@direction,c
 22723  0044FA  D006               	goto	i2l6171
 22724                           
 22725                           ; BSR set to: 4
 22726                           ;usb_device.c: 1243: {
 22727                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 22728  0044FC  5035               	movf	USBConfigureEndpoint@EPNum,w,c
 22729  0044FE  0D02               	mullw	2
 22730  004500  50F3               	movf	prodl,w,c
 22731  004502  0100               	movlb	0	; () banked
 22732  004504  0F60               	addlw	low _pBDTEntryOut
 22733  004506  D004               	goto	L84
 22734  004508                     i2l6171:
 22735                           
 22736                           ; BSR set to: 4
 22737                           ;usb_device.c: 1246: else
 22738                           ;usb_device.c: 1247: {
 22739                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 22740  004508  5035               	movf	USBConfigureEndpoint@EPNum,w,c
 22741  00450A  0D02               	mullw	2
 22742  00450C  50F3               	movf	prodl,w,c
 22743  00450E  0F09               	addlw	low _pBDTEntryIn
 22744  004510                     L84:
 22745  004510  6ED9               	movwf	fsr2l,c
 22746  004512  6ADA               	clrf	fsr2h,c
 22747  004514  C036  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 22748  004518  C037  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 22749                           
 22750                           ;usb_device.c: 1249: }
 22751                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 22752  00451C  C036  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 22753  004520  C037  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 22754  004524  9CDF               	bcf	indf2,6,c
 22755                           
 22756                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 22757  004526  EE20 F004          	lfsr	2,4
 22758  00452A  5036               	movf	USBConfigureEndpoint@handle,w,c
 22759  00452C  26D9               	addwf	fsr2l,f,c
 22760  00452E  5037               	movf	USBConfigureEndpoint@handle+1,w,c
 22761  004530  22DA               	addwfc	fsr2h,f,c
 22762  004532  8CDF               	bsf	indf2,6,c
 22763  004534  0012               	return	
 22764  004536                     __end_of_USBConfigureEndpoint:
 22765                           	opt stack 0
 22766                           pclatu	equ	0xFFB
 22767                           pclath	equ	0xFFA
 22768                           tblptru	equ	0xFF8
 22769                           tblptrh	equ	0xFF7
 22770                           tblptrl	equ	0xFF6
 22771                           tablat	equ	0xFF5
 22772                           prodh	equ	0xFF4
 22773                           prodl	equ	0xFF3
 22774                           intcon	equ	0xFF2
 22775                           postinc0	equ	0xFEE
 22776                           wreg	equ	0xFE8
 22777                           indf1	equ	0xFE7
 22778                           postdec1	equ	0xFE5
 22779                           fsr1h	equ	0xFE2
 22780                           fsr1l	equ	0xFE1
 22781                           indf2	equ	0xFDF
 22782                           postinc2	equ	0xFDE
 22783                           postdec2	equ	0xFDD
 22784                           plusw2	equ	0xFDB
 22785                           fsr2h	equ	0xFDA
 22786                           fsr2l	equ	0xFD9
 22787                           status	equ	0xFD8
 22788                           
 22789 ;; *************** function _USBCheckCDCRequest *****************
 22790 ;; Defined at:
 22791 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 22792 ;; Parameters:    Size  Location     Type
 22793 ;;		None
 22794 ;; Auto vars:     Size  Location     Type
 22795 ;;		None
 22796 ;; Return value:  Size  Location     Type
 22797 ;;		None               void
 22798 ;; Registers used:
 22799 ;;		wreg, status,2, status,0
 22800 ;; Tracked objects:
 22801 ;;		On entry : 0/0
 22802 ;;		On exit  : A/0
 22803 ;;		Unchanged: 0/0
 22804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22805 ;;      Params:         0       0       0       0       0       0       0       0       0
 22806 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22807 ;;      Temps:          1       0       0       0       0       0       0       0       0
 22808 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22809 ;;Total ram usage:        1 bytes
 22810 ;; Hardware stack levels used:    1
 22811 ;; This function calls:
 22812 ;;		Nothing
 22813 ;; This function is called by:
 22814 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22815 ;; This function uses a non-reentrant model
 22816 ;;
 22817                           
 22818                           	psect	text108
 22819  0046EC                     __ptext108:
 22820                           	opt stack 0
 22821  0046EC                     _USBCheckCDCRequest:
 22822                           	opt stack 17
 22823                           
 22824                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 22825                           
 22826                           ;incstack = 0
 22827  0046EC  0104               	movlb	4	; () banked
 22828  0046EE  5130               	movf	48,w,b	;volatile
 22829  0046F0  0B1F               	andlw	31
 22830  0046F2  6E30               	movwf	??_USBCheckCDCRequest& (0+255),c
 22831  0046F4  0430               	decf	??_USBCheckCDCRequest,w,c
 22832  0046F6  A4D8               	btfss	status,2,c
 22833  0046F8  0012               	return	
 22834                           
 22835                           ; BSR set to: 4
 22836                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 22837  0046FA  3930               	swapf	48,w,b	;volatile
 22838  0046FC  32E8               	rrcf	wreg,f,c
 22839  0046FE  0B03               	andlw	3
 22840  004700  6E30               	movwf	??_USBCheckCDCRequest& (0+255),c
 22841  004702  0430               	decf	??_USBCheckCDCRequest,w,c
 22842  004704  A4D8               	btfss	status,2,c
 22843  004706  0012               	return	
 22844                           
 22845                           ; BSR set to: 4
 22846                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 22847                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 22848  004708  5134               	movf	52,w,b	;volatile
 22849  00470A  E032               	bz	i2l6377
 22850                           
 22851                           ; BSR set to: 4
 22852  00470C  0534               	decf	52,w,b	;volatile
 22853  00470E  A4D8               	btfss	status,2,c
 22854  004710  0012               	return	
 22855  004712  D02E               	goto	i2l6377
 22856  004714                     i2l6349:
 22857                           
 22858                           ; BSR set to: 4
 22859                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22860  004714  0101               	movlb	1	; () banked
 22861  004716  0E01               	movlw	high _dummy_encapsulated_cmd_response
 22862  004718  6E29               	movwf	_inPipes+1,c	;volatile
 22863  00471A  0ED0               	movlw	low _dummy_encapsulated_cmd_response
 22864  00471C  6E28               	movwf	_inPipes,c	;volatile
 22865                           
 22866                           ; BSR set to: 1
 22867                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 22868  00471E  0E00               	movlw	0
 22869  004720  6E2D               	movwf	_inPipes+5,c	;volatile
 22870  004722  0E08               	movlw	8
 22871  004724  6E2C               	movwf	_inPipes+4,c	;volatile
 22872                           
 22873                           ; BSR set to: 1
 22874                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22875  004726  802B               	bsf	_inPipes+3,0,c	;volatile
 22876                           
 22877                           ; BSR set to: 1
 22878                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 22879  004728  8E2B               	bsf	_inPipes+3,7,c	;volatile
 22880                           
 22881                           ;usb_device_cdc.c: 212: break;
 22882  00472A  0C08               	retlw	8
 22883  00472C                     i2l6357:
 22884                           
 22885                           ; BSR set to: 4
 22886                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22887  00472C  0101               	movlb	1	; () banked
 22888  00472E  0E01               	movlw	high _dummy_encapsulated_cmd_response
 22889  004730  6E29               	movwf	_inPipes+1,c	;volatile
 22890  004732  0ED0               	movlw	low _dummy_encapsulated_cmd_response
 22891  004734  6E28               	movwf	_inPipes,c	;volatile
 22892                           
 22893                           ; BSR set to: 1
 22894                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 22895  004736  8E2B               	bsf	_inPipes+3,7,c	;volatile
 22896                           
 22897                           ;usb_device_cdc.c: 217: break;
 22898  004738  0012               	return	
 22899  00473A                     i2l1870:
 22900                           
 22901                           ; BSR set to: 4
 22902                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 22903  00473A  C436 F005          	movff	1078,_outPipes+4	;volatile
 22904  00473E  C437 F006          	movff	1079,_outPipes+5	;volatile
 22905                           
 22906                           ; BSR set to: 4
 22907                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 22908  004742  0100               	movlb	0	; () banked
 22909  004744  0EA8               	movlw	low _cdc_notice
 22910  004746  6E01               	movwf	_outPipes,c	;volatile
 22911                           
 22912                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 22913  004748  0E3F               	movlw	high _USART_mySetLineCodingHandler
 22914  00474A  6E08               	movwf	_outPipes+7,c	;volatile
 22915  00474C  0E44               	movlw	low _USART_mySetLineCodingHandler
 22916  00474E  6E07               	movwf	_outPipes+6,c	;volatile
 22917                           
 22918                           ; BSR set to: 0
 22919                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 22920  004750  8E04               	bsf	_outPipes+3,7,c	;volatile
 22921                           
 22922                           ;usb_device_cdc.c: 224: break;
 22923  004752  0012               	return	
 22924  004754                     i2l6365:
 22925                           
 22926                           ; BSR set to: 4
 22927                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 22928  004754  6A29               	clrf	_inPipes+1,c	;volatile
 22929  004756  0100               	movlb	0	; () banked
 22930  004758  0EBA               	movlw	low _line_coding
 22931  00475A  6E28               	movwf	_inPipes,c	;volatile
 22932                           
 22933                           ; BSR set to: 0
 22934  00475C  0E00               	movlw	0
 22935  00475E  6E2D               	movwf	_inPipes+5,c	;volatile
 22936  004760  0E07               	movlw	7
 22937  004762  6E2C               	movwf	_inPipes+4,c	;volatile
 22938                           
 22939                           ; BSR set to: 0
 22940  004764  0EC1               	movlw	193
 22941  004766  6E2B               	movwf	_inPipes+3,c	;volatile
 22942                           
 22943                           ;usb_device_cdc.c: 231: break;
 22944  004768  0CC1               	retlw	193
 22945  00476A                     i2l6371:
 22946                           
 22947                           ; BSR set to: 4
 22948                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 22949  00476A  5132               	movf	50,w,b	;volatile
 22950                           
 22951                           ; BSR set to: 4
 22952                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 22953  00476C  8E2B               	bsf	_inPipes+3,7,c	;volatile
 22954                           
 22955                           ;usb_device_cdc.c: 256: break;
 22956  00476E  0012               	return	
 22957  004770                     i2l6377:
 22958                           
 22959                           ; BSR set to: 4
 22960  004770  5131               	movf	49,w,b	;volatile
 22961                           
 22962                           ; Switch size 1, requested type "speed"
 22963                           ; Number of cases is 5, Range of values is 0 to 34
 22964                           ; switch strategies available:
 22965                           ; Name         Instructions Cycles
 22966                           ; simple_byte           16     9 (average)
 22967                           ;	Chosen strategy is simple_byte
 22968  004772  E0D0               	bz	i2l6349
 22969  004774  0A01               	xorlw	1	; case 1
 22970  004776  E0DA               	bz	i2l6357
 22971  004778  0A21               	xorlw	33	; case 32
 22972  00477A  E0DF               	bz	i2l1870
 22973  00477C  0A01               	xorlw	1	; case 33
 22974  00477E  E0EA               	bz	i2l6365
 22975  004780  0A03               	xorlw	3	; case 34
 22976  004782  A4D8               	btfss	status,2,c
 22977  004784  0012               	return	
 22978  004786  D7F1               	goto	i2l6371
 22979  004788                     __end_of_USBCheckCDCRequest:
 22980                           	opt stack 0
 22981                           pclatu	equ	0xFFB
 22982                           pclath	equ	0xFFA
 22983                           tblptru	equ	0xFF8
 22984                           tblptrh	equ	0xFF7
 22985                           tblptrl	equ	0xFF6
 22986                           tablat	equ	0xFF5
 22987                           prodh	equ	0xFF4
 22988                           prodl	equ	0xFF3
 22989                           intcon	equ	0xFF2
 22990                           postinc0	equ	0xFEE
 22991                           wreg	equ	0xFE8
 22992                           indf1	equ	0xFE7
 22993                           postdec1	equ	0xFE5
 22994                           fsr1h	equ	0xFE2
 22995                           fsr1l	equ	0xFE1
 22996                           indf2	equ	0xFDF
 22997                           postinc2	equ	0xFDE
 22998                           postdec2	equ	0xFDD
 22999                           plusw2	equ	0xFDB
 23000                           fsr2h	equ	0xFDA
 23001                           fsr2l	equ	0xFD9
 23002                           status	equ	0xFD8
 23003                           
 23004 ;; *************** function _USBCtrlTrfOutHandler *****************
 23005 ;; Defined at:
 23006 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 23007 ;; Parameters:    Size  Location     Type
 23008 ;;		None
 23009 ;; Auto vars:     Size  Location     Type
 23010 ;;		None
 23011 ;; Return value:  Size  Location     Type
 23012 ;;		None               void
 23013 ;; Registers used:
 23014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 23015 ;; Tracked objects:
 23016 ;;		On entry : F/4
 23017 ;;		On exit  : 0/0
 23018 ;;		Unchanged: 0/0
 23019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23020 ;;      Params:         0       0       0       0       0       0       0       0       0
 23021 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23022 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23023 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23024 ;;Total ram usage:        0 bytes
 23025 ;; Hardware stack levels used:    1
 23026 ;; Hardware stack levels required when called:    3
 23027 ;; This function calls:
 23028 ;;		_USBCtrlTrfRxService
 23029 ;; This function is called by:
 23030 ;;		_USBCtrlEPService
 23031 ;; This function uses a non-reentrant model
 23032 ;;
 23033                           
 23034                           	psect	text109
 23035  003CD2                     __ptext109:
 23036                           	opt stack 0
 23037  003CD2                     _USBCtrlTrfOutHandler:
 23038                           	opt stack 14
 23039                           
 23040                           ; BSR set to: 4
 23041                           ;usb_device.c: 2171: if(controlTransferState == 2)
 23042                           
 23043                           ;incstack = 0
 23044  003CD2  501F               	movf	_controlTransferState,w,c	;volatile
 23045  003CD4  0A02               	xorlw	2
 23046  003CD6  E102               	bnz	i2l1753
 23047                           
 23048                           ; BSR set to: 4
 23049                           ;usb_device.c: 2172: {
 23050                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 23051  003CD8  EF19  F02D         	goto	_USBCtrlTrfRxService	;wreg free
 23052  003CDC                     i2l1753:
 23053                           
 23054                           ; BSR set to: 4
 23055                           ;usb_device.c: 2175: else
 23056                           ;usb_device.c: 2176: {
 23057                           ;usb_device.c: 2179: controlTransferState = 0;
 23058  003CDC  6A1F               	clrf	_controlTransferState,c	;volatile
 23059                           
 23060                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 23061  003CDE  6613               	tstfsz	_BothEP0OutUOWNsSet,c	;volatile
 23062  003CE0  D01F               	goto	i2l1755
 23063                           
 23064                           ; BSR set to: 4
 23065                           ;usb_device.c: 2187: {
 23066                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 23067  003CE2  EE20 F001          	lfsr	2,1
 23068  003CE6  5011               	movf	_pBDTEntryEP0OutNext,w,c
 23069  003CE8  26D9               	addwf	fsr2l,f,c
 23070  003CEA  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 23071  003CEC  22DA               	addwfc	fsr2h,f,c
 23072  003CEE  0E08               	movlw	8
 23073  003CF0  6EDF               	movwf	indf2,c
 23074                           
 23075                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23076  003CF2  EE20 F002          	lfsr	2,2
 23077  003CF6  5011               	movf	_pBDTEntryEP0OutNext,w,c
 23078  003CF8  26D9               	addwf	fsr2l,f,c
 23079  003CFA  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 23080  003CFC  22DA               	addwfc	fsr2h,f,c
 23081  003CFE  0E30               	movlw	48
 23082  003D00  6EDE               	movwf	postinc2,c
 23083  003D02  0E04               	movlw	4
 23084  003D04  6EDD               	movwf	postdec2,c
 23085                           
 23086                           ; BSR set to: 4
 23087                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 23088  003D06  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23089  003D0A  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23090  003D0E  0E0C               	movlw	12
 23091  003D10  6EDF               	movwf	indf2,c
 23092                           
 23093                           ; BSR set to: 4
 23094                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23095  003D12  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23096  003D16  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23097  003D1A  0E00               	movlw	0
 23098  003D1C  8EDB               	bsf	plusw2,7,c
 23099                           
 23100                           ;usb_device.c: 2192: }
 23101  003D1E  0C00               	retlw	0
 23102  003D20                     i2l1755:
 23103                           
 23104                           ; BSR set to: 4
 23105                           ;usb_device.c: 2193: else
 23106                           ;usb_device.c: 2194: {
 23107                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 23108  003D20  6A13               	clrf	_BothEP0OutUOWNsSet,c	;volatile
 23109  003D22  0012               	return	
 23110  003D24                     __end_of_USBCtrlTrfOutHandler:
 23111                           	opt stack 0
 23112                           pclatu	equ	0xFFB
 23113                           pclath	equ	0xFFA
 23114                           tblptru	equ	0xFF8
 23115                           tblptrh	equ	0xFF7
 23116                           tblptrl	equ	0xFF6
 23117                           tablat	equ	0xFF5
 23118                           prodh	equ	0xFF4
 23119                           prodl	equ	0xFF3
 23120                           intcon	equ	0xFF2
 23121                           postinc0	equ	0xFEE
 23122                           wreg	equ	0xFE8
 23123                           indf1	equ	0xFE7
 23124                           postdec1	equ	0xFE5
 23125                           fsr1h	equ	0xFE2
 23126                           fsr1l	equ	0xFE1
 23127                           indf2	equ	0xFDF
 23128                           postinc2	equ	0xFDE
 23129                           postdec2	equ	0xFDD
 23130                           plusw2	equ	0xFDB
 23131                           fsr2h	equ	0xFDA
 23132                           fsr2l	equ	0xFD9
 23133                           status	equ	0xFD8
 23134                           
 23135 ;; *************** function _USBCtrlTrfRxService *****************
 23136 ;; Defined at:
 23137 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 23138 ;; Parameters:    Size  Location     Type
 23139 ;;		None
 23140 ;; Auto vars:     Size  Location     Type
 23141 ;;  byteToRead      1   22[COMRAM] unsigned char 
 23142 ;;  i               1   21[COMRAM] unsigned char 
 23143 ;; Return value:  Size  Location     Type
 23144 ;;		None               void
 23145 ;; Registers used:
 23146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 23147 ;; Tracked objects:
 23148 ;;		On entry : F/4
 23149 ;;		On exit  : 0/0
 23150 ;;		Unchanged: 0/0
 23151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23152 ;;      Params:         0       0       0       0       0       0       0       0       0
 23153 ;;      Locals:         2       0       0       0       0       0       0       0       0
 23154 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23155 ;;      Totals:         2       0       0       0       0       0       0       0       0
 23156 ;;Total ram usage:        2 bytes
 23157 ;; Hardware stack levels used:    1
 23158 ;; Hardware stack levels required when called:    2
 23159 ;; This function calls:
 23160 ;;		_USART_mySetLineCodingHandler
 23161 ;;		_USBCtrlEPAllowStatusStage
 23162 ;; This function is called by:
 23163 ;;		_USBCtrlTrfOutHandler
 23164 ;; This function uses a non-reentrant model
 23165 ;;
 23166                           
 23167                           	psect	text110
 23168  005A32                     __ptext110:
 23169                           	opt stack 0
 23170  005A32                     _USBCtrlTrfRxService:
 23171                           	opt stack 14
 23172                           
 23173                           ; BSR set to: 4
 23174                           ;usb_device.c: 1520: uint8_t byteToRead;
 23175                           ;usb_device.c: 1521: uint8_t i;
 23176                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 23177                           
 23178                           ;incstack = 0
 23179  005A32  EE20 F001          	lfsr	2,1
 23180  005A36  500F               	movf	_pBDTEntryEP0OutCurrent,w,c
 23181  005A38  26D9               	addwf	fsr2l,f,c
 23182  005A3A  5010               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23183  005A3C  22DA               	addwfc	fsr2h,f,c
 23184  005A3E  50DF               	movf	indf2,w,c
 23185  005A40  6E46               	movwf	USBCtrlTrfRxService@byteToRead,c
 23186                           
 23187                           ; BSR set to: 4
 23188                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 23189  005A42  5046               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23190  005A44  5C05               	subwf	_outPipes+4,w,c	;volatile
 23191  005A46  0E00               	movlw	0
 23192  005A48  5806               	subwfb	_outPipes+5,w,c	;volatile
 23193  005A4A  A0D8               	btfss	status,0,c
 23194                           
 23195                           ; BSR set to: 4
 23196                           ;usb_device.c: 1532: {
 23197                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 23198  005A4C  C005  F046         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 23199                           
 23200                           ; BSR set to: 4
 23201                           ;usb_device.c: 1534: }
 23202                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 23203  005A50  5046               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23204  005A52  5E05               	subwf	_outPipes+4,f,c	;volatile
 23205  005A54  0E00               	movlw	0
 23206  005A56  5A06               	subwfb	_outPipes+5,f,c	;volatile
 23207                           
 23208                           ; BSR set to: 4
 23209                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 23210  005A58  6A45               	clrf	USBCtrlTrfRxService@i,c
 23211  005A5A  D00D               	goto	i2l7071
 23212  005A5C                     i2l7065:
 23213                           
 23214                           ; BSR set to: 4
 23215                           ;usb_device.c: 1541: {
 23216                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 23217  005A5C  0E38               	movlw	56	;volatile
 23218  005A5E  2445               	addwf	USBCtrlTrfRxService@i,w,c
 23219  005A60  6ED9               	movwf	fsr2l,c
 23220  005A62  6ADA               	clrf	fsr2h,c
 23221  005A64  0E04               	movlw	4	;volatile
 23222  005A66  22DA               	addwfc	fsr2h,f,c
 23223  005A68  5001               	movf	_outPipes,w,c	;volatile
 23224  005A6A  6EE1               	movwf	fsr1l,c
 23225  005A6C  6AE2               	clrf	fsr1h,c
 23226  005A6E  CFDF FFE7          	movff	indf2,indf1
 23227                           
 23228                           ; BSR set to: 4
 23229  005A72  2A01               	incf	_outPipes,f,c	;volatile
 23230                           
 23231                           ; BSR set to: 4
 23232  005A74  2A45               	incf	USBCtrlTrfRxService@i,f,c
 23233  005A76                     i2l7071:
 23234                           
 23235                           ; BSR set to: 4
 23236  005A76  5046               	movf	USBCtrlTrfRxService@byteToRead,w,c
 23237  005A78  5C45               	subwf	USBCtrlTrfRxService@i,w,c
 23238  005A7A  E3F0               	bnc	i2l7065
 23239                           
 23240                           ; BSR set to: 4
 23241                           ;usb_device.c: 1543: }
 23242                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 23243  005A7C  5006               	movf	_outPipes+5,w,c	;volatile
 23244  005A7E  1005               	iorwf	_outPipes+4,w,c	;volatile
 23245  005A80  E032               	bz	i2l7087
 23246                           
 23247                           ; BSR set to: 4
 23248                           ;usb_device.c: 1548: {
 23249                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 23250  005A82  EE20 F001          	lfsr	2,1
 23251  005A86  5011               	movf	_pBDTEntryEP0OutNext,w,c
 23252  005A88  26D9               	addwf	fsr2l,f,c
 23253  005A8A  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 23254  005A8C  22DA               	addwfc	fsr2h,f,c
 23255  005A8E  0E08               	movlw	8
 23256  005A90  6EDF               	movwf	indf2,c
 23257                           
 23258                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 23259  005A92  EE20 F002          	lfsr	2,2
 23260  005A96  5011               	movf	_pBDTEntryEP0OutNext,w,c
 23261  005A98  26D9               	addwf	fsr2l,f,c
 23262  005A9A  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 23263  005A9C  22DA               	addwfc	fsr2h,f,c
 23264  005A9E  0E38               	movlw	56
 23265  005AA0  6EDE               	movwf	postinc2,c
 23266  005AA2  0E04               	movlw	4
 23267  005AA4  6EDD               	movwf	postdec2,c
 23268                           
 23269                           ; BSR set to: 4
 23270                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 23271  005AA6  C00F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23272  005AAA  C010  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23273  005AAE  BCDF               	btfsc	indf2,6,c
 23274  005AB0  D00D               	goto	i2l7083
 23275                           
 23276                           ; BSR set to: 4
 23277                           ;usb_device.c: 1552: {
 23278                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 23279  005AB2  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23280  005AB6  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23281  005ABA  0E48               	movlw	72
 23282  005ABC  6EDF               	movwf	indf2,c
 23283                           
 23284                           ; BSR set to: 4
 23285                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23286  005ABE  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23287  005AC2  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23288  005AC6  0E00               	movlw	0
 23289  005AC8  8EDB               	bsf	plusw2,7,c
 23290                           
 23291                           ;usb_device.c: 1555: }
 23292  005ACA  0C00               	retlw	0
 23293  005ACC                     i2l7083:
 23294                           
 23295                           ; BSR set to: 4
 23296                           ;usb_device.c: 1556: else
 23297                           ;usb_device.c: 1557: {
 23298                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 23299  005ACC  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23300  005AD0  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23301  005AD4  0E08               	movlw	8
 23302  005AD6  6EDF               	movwf	indf2,c
 23303                           
 23304                           ; BSR set to: 4
 23305                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23306  005AD8  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23307  005ADC  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23308  005AE0  0E00               	movlw	0
 23309  005AE2  8EDB               	bsf	plusw2,7,c
 23310  005AE4  0C00               	retlw	0
 23311  005AE6                     i2l7087:
 23312                           
 23313                           ; BSR set to: 4
 23314                           ;usb_device.c: 1562: else
 23315                           ;usb_device.c: 1563: {
 23316                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 23317  005AE6  EE20 F001          	lfsr	2,1
 23318  005AEA  5011               	movf	_pBDTEntryEP0OutNext,w,c
 23319  005AEC  26D9               	addwf	fsr2l,f,c
 23320  005AEE  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 23321  005AF0  22DA               	addwfc	fsr2h,f,c
 23322  005AF2  0E08               	movlw	8
 23323  005AF4  6EDF               	movwf	indf2,c
 23324                           
 23325                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23326  005AF6  EE20 F002          	lfsr	2,2
 23327  005AFA  5011               	movf	_pBDTEntryEP0OutNext,w,c
 23328  005AFC  26D9               	addwf	fsr2l,f,c
 23329  005AFE  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 23330  005B00  22DA               	addwfc	fsr2h,f,c
 23331  005B02  0E30               	movlw	48
 23332  005B04  6EDE               	movwf	postinc2,c
 23333  005B06  0E04               	movlw	4
 23334  005B08  6EDD               	movwf	postdec2,c
 23335                           
 23336                           ; BSR set to: 4
 23337                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 23338  005B0A  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23339  005B0E  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23340  005B12  6EDF               	movwf	indf2,c
 23341                           
 23342                           ; BSR set to: 4
 23343                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23344  005B14  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23345  005B18  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23346  005B1C  0E00               	movlw	0
 23347  005B1E  8EDB               	bsf	plusw2,7,c
 23348                           
 23349                           ; BSR set to: 4
 23350                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 23351  005B20  5008               	movf	_outPipes+7,w,c	;volatile
 23352  005B22  1007               	iorwf	_outPipes+6,w,c	;volatile
 23353  005B24  E00E               	bz	i2l7097
 23354                           
 23355                           ; BSR set to: 4
 23356                           ;usb_device.c: 1581: {
 23357                           ;usb_device.c: 1586: outPipes[0].pFunc();
 23358  005B26  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 23359  005B2A  D801               	call	i2u500_48
 23360  005B2C  D00A               	goto	i2l7097
 23361  005B2E                     i2u500_48:
 23362  005B2E  0005               	push	
 23363  005B30  6EFA               	movwf	pclath,c
 23364  005B32  50DE               	movf	postinc2,w,c
 23365  005B34  6EFD               	movwf	tosl,c
 23366  005B36  50DE               	movf	postinc2,w,c
 23367  005B38  6EFE               	movwf	tosh,c
 23368  005B3A  50F8               	movf	tblptru,w,c
 23369  005B3C  6EFF               	movwf	tosu,c
 23370  005B3E  50FA               	movf	pclath,w,c
 23371  005B40  0012               	return		;indir
 23372  005B42                     i2l7097:
 23373                           
 23374                           ;usb_device.c: 1588: }
 23375                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 23376  005B42  9E04               	bcf	_outPipes+3,7,c	;volatile
 23377                           
 23378                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 23379  005B44  6619               	tstfsz	_USBDeferStatusStagePacket,c	;volatile
 23380  005B46  0012               	return	
 23381                           
 23382                           ;usb_device.c: 1604: {
 23383                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 23384  005B48  EF64  F025         	goto	_USBCtrlEPAllowStatusStage	;wreg free
 23385  005B4C                     __end_of_USBCtrlTrfRxService:
 23386                           	opt stack 0
 23387                           tosu	equ	0xFFF
 23388                           tosh	equ	0xFFE
 23389                           tosl	equ	0xFFD
 23390                           pclatu	equ	0xFFB
 23391                           pclath	equ	0xFFA
 23392                           tblptru	equ	0xFF8
 23393                           tblptrh	equ	0xFF7
 23394                           tblptrl	equ	0xFF6
 23395                           tablat	equ	0xFF5
 23396                           prodh	equ	0xFF4
 23397                           prodl	equ	0xFF3
 23398                           intcon	equ	0xFF2
 23399                           postinc0	equ	0xFEE
 23400                           wreg	equ	0xFE8
 23401                           indf1	equ	0xFE7
 23402                           postdec1	equ	0xFE5
 23403                           fsr1h	equ	0xFE2
 23404                           fsr1l	equ	0xFE1
 23405                           indf2	equ	0xFDF
 23406                           postinc2	equ	0xFDE
 23407                           postdec2	equ	0xFDD
 23408                           plusw2	equ	0xFDB
 23409                           fsr2h	equ	0xFDA
 23410                           fsr2l	equ	0xFD9
 23411                           status	equ	0xFD8
 23412                           
 23413 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 23414 ;; Defined at:
 23415 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 23416 ;; Parameters:    Size  Location     Type
 23417 ;;		None
 23418 ;; Auto vars:     Size  Location     Type
 23419 ;;		None
 23420 ;; Return value:  Size  Location     Type
 23421 ;;		None               void
 23422 ;; Registers used:
 23423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23424 ;; Tracked objects:
 23425 ;;		On entry : 0/0
 23426 ;;		On exit  : 0/0
 23427 ;;		Unchanged: 0/0
 23428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23429 ;;      Params:         0       0       0       0       0       0       0       0       0
 23430 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23431 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23432 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23433 ;;Total ram usage:        0 bytes
 23434 ;; Hardware stack levels used:    1
 23435 ;; This function calls:
 23436 ;;		Nothing
 23437 ;; This function is called by:
 23438 ;;		_USBDeviceTasks
 23439 ;;		_USBCtrlEPServiceComplete
 23440 ;;		_USBCtrlTrfRxService
 23441 ;; This function uses a non-reentrant model
 23442 ;;
 23443                           
 23444                           	psect	text111
 23445  004AC8                     __ptext111:
 23446                           	opt stack 0
 23447  004AC8                     _USBCtrlEPAllowStatusStage:
 23448                           	opt stack 15
 23449                           
 23450                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 23451                           
 23452                           ;incstack = 0
 23453  004AC8  661A               	tstfsz	_USBStatusStageEnabledFlag1,c	;volatile
 23454  004ACA  0012               	return	
 23455                           
 23456                           ;usb_device.c: 1112: {
 23457                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 23458  004ACC  0E01               	movlw	1
 23459  004ACE  6E1A               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 23460                           
 23461                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 23462  004AD0  661B               	tstfsz	_USBStatusStageEnabledFlag2,c	;volatile
 23463  004AD2  0C01               	retlw	1
 23464                           
 23465                           ;usb_device.c: 1115: {
 23466                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 23467  004AD4  6E1B               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 23468                           
 23469                           ;usb_device.c: 1120: if(controlTransferState == 2)
 23470  004AD6  501F               	movf	_controlTransferState,w,c	;volatile
 23471  004AD8  0A02               	xorlw	2
 23472  004ADA  E115               	bnz	i2l6647
 23473                           
 23474                           ;usb_device.c: 1121: {
 23475                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 23476  004ADC  EE20 F001          	lfsr	2,1
 23477  004AE0  5009               	movf	_pBDTEntryIn,w,c
 23478  004AE2  26D9               	addwf	fsr2l,f,c
 23479  004AE4  500A               	movf	_pBDTEntryIn+1,w,c
 23480  004AE6  22DA               	addwfc	fsr2h,f,c
 23481  004AE8  0E00               	movlw	0
 23482  004AEA  6EDF               	movwf	indf2,c
 23483                           
 23484                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23485  004AEC  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 23486  004AF0  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23487  004AF4  0E48               	movlw	72
 23488  004AF6  6EDF               	movwf	indf2,c
 23489                           
 23490                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23491  004AF8  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 23492  004AFC  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23493  004B00  0E00               	movlw	0
 23494  004B02  8EDB               	bsf	plusw2,7,c
 23495                           
 23496                           ;usb_device.c: 1125: }
 23497  004B04  0C00               	retlw	0
 23498  004B06                     i2l6647:
 23499                           
 23500                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 23501  004B06  041F               	decf	_controlTransferState,w,c	;volatile
 23502  004B08  A4D8               	btfss	status,2,c
 23503  004B0A  0012               	return	
 23504                           
 23505                           ;usb_device.c: 1127: {
 23506                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 23507  004B0C  6A13               	clrf	_BothEP0OutUOWNsSet,c	;volatile
 23508                           
 23509                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 23510  004B0E  EE20 F001          	lfsr	2,1
 23511  004B12  500F               	movf	_pBDTEntryEP0OutCurrent,w,c
 23512  004B14  26D9               	addwf	fsr2l,f,c
 23513  004B16  5010               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23514  004B18  22DA               	addwfc	fsr2h,f,c
 23515  004B1A  0E08               	movlw	8
 23516  004B1C  6EDF               	movwf	indf2,c
 23517                           
 23518                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 23519  004B1E  EE20 F002          	lfsr	2,2
 23520  004B22  500F               	movf	_pBDTEntryEP0OutCurrent,w,c
 23521  004B24  26D9               	addwf	fsr2l,f,c
 23522  004B26  5010               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23523  004B28  22DA               	addwfc	fsr2h,f,c
 23524  004B2A  0E30               	movlw	48
 23525  004B2C  6EDE               	movwf	postinc2,c
 23526  004B2E  0E04               	movlw	4
 23527  004B30  6EDD               	movwf	postdec2,c
 23528                           
 23529                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 23530  004B32  C00F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23531  004B36  C010  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23532  004B3A  6EDF               	movwf	indf2,c
 23533                           
 23534                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 23535  004B3C  C00F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23536  004B40  C010  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23537  004B44  0E00               	movlw	0
 23538  004B46  8EDB               	bsf	plusw2,7,c
 23539                           
 23540                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 23541  004B48  0E01               	movlw	1
 23542  004B4A  6E13               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 23543                           
 23544                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 23545  004B4C  EE20 F001          	lfsr	2,1
 23546  004B50  5011               	movf	_pBDTEntryEP0OutNext,w,c
 23547  004B52  26D9               	addwf	fsr2l,f,c
 23548  004B54  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 23549  004B56  22DA               	addwfc	fsr2h,f,c
 23550  004B58  0E08               	movlw	8
 23551  004B5A  6EDF               	movwf	indf2,c
 23552                           
 23553                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23554  004B5C  EE20 F002          	lfsr	2,2
 23555  004B60  5011               	movf	_pBDTEntryEP0OutNext,w,c
 23556  004B62  26D9               	addwf	fsr2l,f,c
 23557  004B64  5012               	movf	_pBDTEntryEP0OutNext+1,w,c
 23558  004B66  22DA               	addwfc	fsr2h,f,c
 23559  004B68  0E30               	movlw	48
 23560  004B6A  6EDE               	movwf	postinc2,c
 23561  004B6C  0E04               	movlw	4
 23562  004B6E  6EDD               	movwf	postdec2,c
 23563                           
 23564                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 23565  004B70  C011  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23566  004B74  C012  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23567  004B78  0E80               	movlw	128
 23568  004B7A  6EDF               	movwf	indf2,c
 23569  004B7C  0C80               	retlw	128
 23570  004B7E                     __end_of_USBCtrlEPAllowStatusStage:
 23571                           	opt stack 0
 23572                           tosu	equ	0xFFF
 23573                           tosh	equ	0xFFE
 23574                           tosl	equ	0xFFD
 23575                           pclatu	equ	0xFFB
 23576                           pclath	equ	0xFFA
 23577                           tblptru	equ	0xFF8
 23578                           tblptrh	equ	0xFF7
 23579                           tblptrl	equ	0xFF6
 23580                           tablat	equ	0xFF5
 23581                           prodh	equ	0xFF4
 23582                           prodl	equ	0xFF3
 23583                           intcon	equ	0xFF2
 23584                           postinc0	equ	0xFEE
 23585                           wreg	equ	0xFE8
 23586                           indf1	equ	0xFE7
 23587                           postdec1	equ	0xFE5
 23588                           fsr1h	equ	0xFE2
 23589                           fsr1l	equ	0xFE1
 23590                           indf2	equ	0xFDF
 23591                           postinc2	equ	0xFDE
 23592                           postdec2	equ	0xFDD
 23593                           plusw2	equ	0xFDB
 23594                           fsr2h	equ	0xFDA
 23595                           fsr2l	equ	0xFD9
 23596                           status	equ	0xFD8
 23597                           
 23598 ;; *************** function _USBCtrlTrfInHandler *****************
 23599 ;; Defined at:
 23600 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 23601 ;; Parameters:    Size  Location     Type
 23602 ;;		None
 23603 ;; Auto vars:     Size  Location     Type
 23604 ;;  lastDTS         1   21[COMRAM] unsigned char 
 23605 ;; Return value:  Size  Location     Type
 23606 ;;		None               void
 23607 ;; Registers used:
 23608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 23609 ;; Tracked objects:
 23610 ;;		On entry : F/0
 23611 ;;		On exit  : F/0
 23612 ;;		Unchanged: 0/0
 23613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23614 ;;      Params:         0       0       0       0       0       0       0       0       0
 23615 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23616 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23617 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23618 ;;Total ram usage:        1 bytes
 23619 ;; Hardware stack levels used:    1
 23620 ;; Hardware stack levels required when called:    2
 23621 ;; This function calls:
 23622 ;;		_USART_mySetLineCodingHandler
 23623 ;;		_USBCtrlTrfTxService
 23624 ;; This function is called by:
 23625 ;;		_USBCtrlEPService
 23626 ;; This function uses a non-reentrant model
 23627 ;;
 23628                           
 23629                           	psect	text112
 23630  004E68                     __ptext112:
 23631                           	opt stack 0
 23632  004E68                     _USBCtrlTrfInHandler:
 23633                           	opt stack 15
 23634                           
 23635                           ; BSR set to: 0
 23636                           ;usb_device.c: 2225: uint8_t lastDTS;
 23637                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 23638                           
 23639                           ;incstack = 0
 23640  004E68  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 23641  004E6C  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23642  004E70  0E00               	movlw	0
 23643  004E72  BCDF               	btfsc	indf2,6,c
 23644  004E74  0E01               	movlw	1
 23645  004E76  6E45               	movwf	USBCtrlTrfInHandler@lastDTS,c
 23646                           
 23647                           ; BSR set to: 0
 23648                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 23649  004E78  0E04               	movlw	4
 23650  004E7A  1A09               	xorwf	_pBDTEntryIn,f,c
 23651                           
 23652                           ; BSR set to: 0
 23653                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 23654  004E7C  5189               	movf	_USBDeviceState& (0+255),w,b	;volatile
 23655  004E7E  0A08               	xorlw	8
 23656  004E80  E10A               	bnz	i2l7729
 23657                           
 23658                           ; BSR set to: 0
 23659                           ;usb_device.c: 2236: {
 23660                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 23661  004E82  0104               	movlb	4	; () banked
 23662  004E84  5132               	movf	50,w,b	;volatile
 23663  004E86  0B7F               	andlw	127
 23664  004E88  6E63               	movwf	3939,c	;volatile
 23665                           
 23666                           ; BSR set to: 4
 23667                           ;usb_device.c: 2238: if(UADDR != 0u)
 23668  004E8A  5063               	movf	3939,w,c
 23669                           
 23670                           ; BSR set to: 4
 23671                           ;usb_device.c: 2239: {
 23672                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 23673  004E8C  0E10               	movlw	16
 23674  004E8E  B4D8               	btfsc	status,2,c
 23675                           
 23676                           ; BSR set to: 4
 23677                           ;usb_device.c: 2242: else
 23678                           ;usb_device.c: 2243: {
 23679                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 23680                           
 23681                           ;usb_device.c: 2241: }
 23682  004E90  0E04               	movlw	4
 23683  004E92  0100               	movlb	0	; () banked
 23684  004E94  6F89               	movwf	_USBDeviceState& (0+255),b	;volatile
 23685  004E96                     i2l7729:
 23686                           
 23687                           ; BSR set to: 0
 23688                           ;usb_device.c: 2245: }
 23689                           ;usb_device.c: 2246: }
 23690                           ;usb_device.c: 2249: if(controlTransferState == 1)
 23691  004E96  041F               	decf	_controlTransferState,w,c	;volatile
 23692  004E98  E138               	bnz	i2l1763
 23693                           
 23694                           ; BSR set to: 0
 23695                           ;usb_device.c: 2250: {
 23696                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 23697  004E9A  EE20 F002          	lfsr	2,2
 23698  004E9E  5009               	movf	_pBDTEntryIn,w,c
 23699  004EA0  26D9               	addwf	fsr2l,f,c
 23700  004EA2  500A               	movf	_pBDTEntryIn+1,w,c
 23701  004EA4  22DA               	addwfc	fsr2h,f,c
 23702  004EA6  0E38               	movlw	56
 23703  004EA8  6EDE               	movwf	postinc2,c
 23704  004EAA  0E04               	movlw	4
 23705  004EAC  6EDD               	movwf	postdec2,c
 23706                           
 23707                           ; BSR set to: 0
 23708                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 23709  004EAE  ECD4  F026         	call	_USBCtrlTrfTxService	;wreg free
 23710                           
 23711                           ; BSR set to: 0
 23712                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 23713  004EB2  5027               	movf	_shortPacketStatus,w,c	;volatile
 23714  004EB4  0A02               	xorlw	2
 23715  004EB6  E10D               	bnz	i2l1764
 23716                           
 23717                           ; BSR set to: 0
 23718                           ;usb_device.c: 2259: {
 23719                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 23720  004EB8  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 23721  004EBC  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23722  004EC0  0E04               	movlw	4
 23723  004EC2  6EDF               	movwf	indf2,c
 23724                           
 23725                           ; BSR set to: 0
 23726                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23727  004EC4  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 23728  004EC8  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23729  004ECC  0E00               	movlw	0
 23730  004ECE  8EDB               	bsf	plusw2,7,c
 23731                           
 23732                           ;usb_device.c: 2264: }
 23733  004ED0  0C00               	retlw	0
 23734  004ED2                     i2l1764:
 23735                           
 23736                           ; BSR set to: 0
 23737                           ;usb_device.c: 2265: else
 23738                           ;usb_device.c: 2266: {
 23739                           ;usb_device.c: 2267: if(lastDTS == 0)
 23740  004ED2  6645               	tstfsz	USBCtrlTrfInHandler@lastDTS,c
 23741  004ED4  D00D               	goto	i2l7745
 23742                           
 23743                           ; BSR set to: 0
 23744                           ;usb_device.c: 2268: {
 23745                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23746  004ED6  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 23747  004EDA  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23748  004EDE  0E48               	movlw	72
 23749  004EE0  6EDF               	movwf	indf2,c
 23750                           
 23751                           ; BSR set to: 0
 23752                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23753  004EE2  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 23754  004EE6  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23755  004EEA  0E00               	movlw	0
 23756  004EEC  8EDB               	bsf	plusw2,7,c
 23757                           
 23758                           ;usb_device.c: 2271: }
 23759  004EEE  0C00               	retlw	0
 23760  004EF0                     i2l7745:
 23761                           
 23762                           ; BSR set to: 0
 23763                           ;usb_device.c: 2272: else
 23764                           ;usb_device.c: 2273: {
 23765                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 23766  004EF0  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 23767  004EF4  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23768  004EF8  0E08               	movlw	8
 23769  004EFA  6EDF               	movwf	indf2,c
 23770                           
 23771                           ; BSR set to: 0
 23772                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23773  004EFC  C009  FFD9         	movff	_pBDTEntryIn,fsr2l
 23774  004F00  C00A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23775  004F04  0E00               	movlw	0
 23776  004F06  8EDB               	bsf	plusw2,7,c
 23777  004F08  0C00               	retlw	0
 23778  004F0A                     i2l1763:
 23779                           
 23780                           ; BSR set to: 0
 23781                           ;usb_device.c: 2279: else
 23782                           ;usb_device.c: 2280: {
 23783                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 23784  004F0A  AE04               	btfss	_outPipes+3,7,c	;volatile
 23785  004F0C  D012               	goto	i2l7755
 23786                           
 23787                           ; BSR set to: 0
 23788                           ;usb_device.c: 2285: {
 23789                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 23790  004F0E  5008               	movf	_outPipes+7,w,c	;volatile
 23791  004F10  1007               	iorwf	_outPipes+6,w,c	;volatile
 23792  004F12  E00E               	bz	i2l7753
 23793                           
 23794                           ; BSR set to: 0
 23795                           ;usb_device.c: 2287: {
 23796                           ;usb_device.c: 2288: outPipes[0].pFunc();
 23797  004F14  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 23798  004F18  D801               	call	i2u566_48
 23799  004F1A  D00A               	goto	i2l7753
 23800  004F1C                     i2u566_48:
 23801  004F1C  0005               	push	
 23802  004F1E  6EFA               	movwf	pclath,c
 23803  004F20  50DE               	movf	postinc2,w,c
 23804  004F22  6EFD               	movwf	tosl,c
 23805  004F24  50DE               	movf	postinc2,w,c
 23806  004F26  6EFE               	movwf	tosh,c
 23807  004F28  50F8               	movf	tblptru,w,c
 23808  004F2A  6EFF               	movwf	tosu,c
 23809  004F2C  50FA               	movf	pclath,w,c
 23810  004F2E  0012               	return		;indir
 23811  004F30                     i2l7753:
 23812                           
 23813                           ; BSR set to: 0
 23814                           ;usb_device.c: 2289: }
 23815                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 23816  004F30  9E04               	bcf	_outPipes+3,7,c	;volatile
 23817  004F32                     i2l7755:
 23818                           
 23819                           ; BSR set to: 0
 23820                           ;usb_device.c: 2291: }
 23821                           ;usb_device.c: 2293: controlTransferState = 0;
 23822  004F32  6A1F               	clrf	_controlTransferState,c	;volatile
 23823                           
 23824                           ; BSR set to: 0
 23825  004F34  0012               	return	
 23826  004F36                     __end_of_USBCtrlTrfInHandler:
 23827                           	opt stack 0
 23828                           tosu	equ	0xFFF
 23829                           tosh	equ	0xFFE
 23830                           tosl	equ	0xFFD
 23831                           pclatu	equ	0xFFB
 23832                           pclath	equ	0xFFA
 23833                           tblptru	equ	0xFF8
 23834                           tblptrh	equ	0xFF7
 23835                           tblptrl	equ	0xFF6
 23836                           tablat	equ	0xFF5
 23837                           prodh	equ	0xFF4
 23838                           prodl	equ	0xFF3
 23839                           intcon	equ	0xFF2
 23840                           postinc0	equ	0xFEE
 23841                           wreg	equ	0xFE8
 23842                           indf1	equ	0xFE7
 23843                           postdec1	equ	0xFE5
 23844                           fsr1h	equ	0xFE2
 23845                           fsr1l	equ	0xFE1
 23846                           indf2	equ	0xFDF
 23847                           postinc2	equ	0xFDE
 23848                           postdec2	equ	0xFDD
 23849                           plusw2	equ	0xFDB
 23850                           fsr2h	equ	0xFDA
 23851                           fsr2l	equ	0xFD9
 23852                           status	equ	0xFD8
 23853                           
 23854 ;; *************** function _USBCtrlTrfTxService *****************
 23855 ;; Defined at:
 23856 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 23857 ;; Parameters:    Size  Location     Type
 23858 ;;		None
 23859 ;; Auto vars:     Size  Location     Type
 23860 ;;  byteToSend      1    0[COMRAM] unsigned char 
 23861 ;; Return value:  Size  Location     Type
 23862 ;;		None               void
 23863 ;; Registers used:
 23864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 23865 ;; Tracked objects:
 23866 ;;		On entry : B/4
 23867 ;;		On exit  : F/0
 23868 ;;		Unchanged: 0/0
 23869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23870 ;;      Params:         0       0       0       0       0       0       0       0       0
 23871 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23872 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23873 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23874 ;;Total ram usage:        1 bytes
 23875 ;; Hardware stack levels used:    1
 23876 ;; This function calls:
 23877 ;;		Nothing
 23878 ;; This function is called by:
 23879 ;;		_USBCtrlEPAllowDataStage
 23880 ;;		_USBCtrlTrfInHandler
 23881 ;; This function uses a non-reentrant model
 23882 ;;
 23883                           
 23884                           	psect	text113
 23885  004DA8                     __ptext113:
 23886                           	opt stack 0
 23887  004DA8                     _USBCtrlTrfTxService:
 23888                           	opt stack 14
 23889                           
 23890                           ;usb_device.c: 1439: uint8_t byteToSend;
 23891                           ;usb_device.c: 1443: byteToSend = 8;
 23892                           
 23893                           ; BSR set to: 0
 23894                           ;incstack = 0
 23895  004DA8  0E08               	movlw	8
 23896  004DAA  6E30               	movwf	USBCtrlTrfTxService@byteToSend,c
 23897                           
 23898                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 23899  004DAC  5C2C               	subwf	_inPipes+4,w,c	;volatile
 23900  004DAE  0E00               	movlw	0
 23901  004DB0  582D               	subwfb	_inPipes+5,w,c	;volatile
 23902  004DB2  E20A               	bc	i2l6443
 23903                           
 23904                           ;usb_device.c: 1445: {
 23905                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 23906  004DB4  C02C  F030         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 23907                           
 23908                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 23909  004DB8  6627               	tstfsz	_shortPacketStatus,c	;volatile
 23910  004DBA  D002               	goto	i2l6439
 23911                           
 23912                           ;usb_device.c: 1454: {
 23913                           ;usb_device.c: 1455: shortPacketStatus = 1;
 23914  004DBC  0E01               	movlw	1
 23915  004DBE  D003               	goto	L86
 23916  004DC0                     i2l6439:
 23917                           
 23918                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 23919  004DC0  0427               	decf	_shortPacketStatus,w,c	;volatile
 23920  004DC2  E102               	bnz	i2l6443
 23921                           
 23922                           ;usb_device.c: 1458: {
 23923                           ;usb_device.c: 1459: shortPacketStatus = 2;
 23924  004DC4  0E02               	movlw	2
 23925  004DC6                     L86:
 23926  004DC6  6E27               	movwf	_shortPacketStatus,c	;volatile
 23927  004DC8                     i2l6443:
 23928                           
 23929                           ;usb_device.c: 1460: }
 23930                           ;usb_device.c: 1461: }
 23931                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 23932  004DC8  5030               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23933  004DCA  5E2C               	subwf	_inPipes+4,f,c	;volatile
 23934  004DCC  0E00               	movlw	0
 23935  004DCE  5A2D               	subwfb	_inPipes+5,f,c	;volatile
 23936                           
 23937                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 23938  004DD0  EE20 F001          	lfsr	2,1
 23939  004DD4  5009               	movf	_pBDTEntryIn,w,c
 23940  004DD6  26D9               	addwf	fsr2l,f,c
 23941  004DD8  500A               	movf	_pBDTEntryIn+1,w,c
 23942  004DDA  22DA               	addwfc	fsr2h,f,c
 23943  004DDC  C030  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 23944                           
 23945                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 23946  004DE0  0E04               	movlw	4	;volatile
 23947  004DE2  0100               	movlb	0	; () banked
 23948  004DE4  6F7D               	movwf	(_pDst+1)& (0+255),b
 23949  004DE6  0E38               	movlw	56	;volatile
 23950  004DE8  6F7C               	movwf	_pDst& (0+255),b
 23951                           
 23952                           ; BSR set to: 0
 23953                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 23954  004DEA  A02B               	btfss	_inPipes+3,0,c	;volatile
 23955  004DEC  D01C               	goto	i2l6461
 23956  004DEE  D039               	goto	i2l6471
 23957  004DF0                     i2l6453:
 23958                           
 23959                           ; BSR set to: 0
 23960                           ;usb_device.c: 1478: {
 23961                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 23962  004DF0  C028  FFF6         	movff	_inPipes,tblptrl	;volatile
 23963  004DF4  C029  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 23964  004DF8  6AF8               	clrf	tblptru,c
 23965  004DFA  C07C  FFD9         	movff	_pDst,fsr2l
 23966  004DFE  C07D  FFDA         	movff	_pDst+1,fsr2h
 23967  004E02  0E07               	movlw	(high __ramtop+-1)
 23968  004E04  64F7               	cpfsgt	tblptrh,c
 23969  004E06  D003               	bra	i2u420_47
 23970  004E08  0008               	tblrd		*
 23971  004E0A  50F5               	movf	tablat,w,c
 23972  004E0C  D005               	bra	i2u420_40
 23973  004E0E                     i2u420_47:
 23974  004E0E  CFF6 FFE1          	movff	tblptrl,fsr1l
 23975  004E12  CFF7 FFE2          	movff	tblptrh,fsr1h
 23976  004E16  50E7               	movf	indf1,w,c
 23977  004E18                     i2u420_40:
 23978  004E18  6EDF               	movwf	indf2,c
 23979  004E1A  4A28               	infsnz	_inPipes,f,c	;volatile
 23980  004E1C  2A29               	incf	_inPipes+1,f,c	;volatile
 23981  004E1E  0100               	movlb	0	; () banked
 23982  004E20  4B7C               	infsnz	_pDst& (0+255),f,b
 23983  004E22  2B7D               	incf	(_pDst+1)& (0+255),f,b
 23984                           
 23985                           ; BSR set to: 0
 23986                           ;usb_device.c: 1480: byteToSend--;
 23987  004E24  0630               	decf	USBCtrlTrfTxService@byteToSend,f,c
 23988  004E26                     i2l6461:
 23989                           
 23990                           ; BSR set to: 0
 23991  004E26  6630               	tstfsz	USBCtrlTrfTxService@byteToSend,c
 23992  004E28  D7E3               	goto	i2l6453
 23993  004E2A  0012               	return	
 23994  004E2C                     i2l6463:
 23995                           
 23996                           ; BSR set to: 0
 23997                           ;usb_device.c: 1486: {
 23998                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 23999  004E2C  C028  FFF6         	movff	_inPipes,tblptrl	;volatile
 24000  004E30  C029  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 24001  004E34  6AF8               	clrf	tblptru,c
 24002  004E36  C07C  FFD9         	movff	_pDst,fsr2l
 24003  004E3A  C07D  FFDA         	movff	_pDst+1,fsr2h
 24004  004E3E  0E07               	movlw	(high __ramtop+-1)
 24005  004E40  64F7               	cpfsgt	tblptrh,c
 24006  004E42  D003               	bra	i2u422_47
 24007  004E44  0008               	tblrd		*
 24008  004E46  50F5               	movf	tablat,w,c
 24009  004E48  D005               	bra	i2u422_40
 24010  004E4A                     i2u422_47:
 24011  004E4A  CFF6 FFE1          	movff	tblptrl,fsr1l
 24012  004E4E  CFF7 FFE2          	movff	tblptrh,fsr1h
 24013  004E52  50E7               	movf	indf1,w,c
 24014  004E54                     i2u422_40:
 24015  004E54  6EDF               	movwf	indf2,c
 24016  004E56  4A28               	infsnz	_inPipes,f,c	;volatile
 24017  004E58  2A29               	incf	_inPipes+1,f,c	;volatile
 24018  004E5A  0100               	movlb	0	; () banked
 24019  004E5C  4B7C               	infsnz	_pDst& (0+255),f,b
 24020  004E5E  2B7D               	incf	(_pDst+1)& (0+255),f,b
 24021                           
 24022                           ; BSR set to: 0
 24023                           ;usb_device.c: 1488: byteToSend--;
 24024  004E60  0630               	decf	USBCtrlTrfTxService@byteToSend,f,c
 24025  004E62                     i2l6471:
 24026                           
 24027                           ; BSR set to: 0
 24028  004E62  6630               	tstfsz	USBCtrlTrfTxService@byteToSend,c
 24029  004E64  D7E3               	goto	i2l6463
 24030  004E66  0012               	return	
 24031  004E68                     __end_of_USBCtrlTrfTxService:
 24032                           	opt stack 0
 24033                           tosu	equ	0xFFF
 24034                           tosh	equ	0xFFE
 24035                           tosl	equ	0xFFD
 24036                           pclatu	equ	0xFFB
 24037                           pclath	equ	0xFFA
 24038                           tblptru	equ	0xFF8
 24039                           tblptrh	equ	0xFF7
 24040                           tblptrl	equ	0xFF6
 24041                           tablat	equ	0xFF5
 24042                           prodh	equ	0xFF4
 24043                           prodl	equ	0xFF3
 24044                           intcon	equ	0xFF2
 24045                           postinc0	equ	0xFEE
 24046                           wreg	equ	0xFE8
 24047                           indf1	equ	0xFE7
 24048                           postdec1	equ	0xFE5
 24049                           fsr1h	equ	0xFE2
 24050                           fsr1l	equ	0xFE1
 24051                           indf2	equ	0xFDF
 24052                           postinc2	equ	0xFDE
 24053                           postdec2	equ	0xFDD
 24054                           plusw2	equ	0xFDB
 24055                           fsr2h	equ	0xFDA
 24056                           fsr2l	equ	0xFD9
 24057                           status	equ	0xFD8
 24058                           
 24059 ;; *************** function _USART_mySetLineCodingHandler *****************
 24060 ;; Defined at:
 24061 ;;		line 236 in file "../Includes/Board/USBapp.c"
 24062 ;; Parameters:    Size  Location     Type
 24063 ;;		None
 24064 ;; Auto vars:     Size  Location     Type
 24065 ;;  dwBaud          4   17[COMRAM] unsigned long 
 24066 ;; Return value:  Size  Location     Type
 24067 ;;		None               void
 24068 ;; Registers used:
 24069 ;;		wreg, status,2, status,0, cstack
 24070 ;; Tracked objects:
 24071 ;;		On entry : B/4
 24072 ;;		On exit  : F/0
 24073 ;;		Unchanged: 0/0
 24074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24075 ;;      Params:         0       0       0       0       0       0       0       0       0
 24076 ;;      Locals:         4       0       0       0       0       0       0       0       0
 24077 ;;      Temps:          4       0       0       0       0       0       0       0       0
 24078 ;;      Totals:         8       0       0       0       0       0       0       0       0
 24079 ;;Total ram usage:        8 bytes
 24080 ;; Hardware stack levels used:    1
 24081 ;; Hardware stack levels required when called:    1
 24082 ;; This function calls:
 24083 ;;		___lldiv
 24084 ;;		i2_EUSART_Initialize
 24085 ;; This function is called by:
 24086 ;;		_USBCheckCDCRequest
 24087 ;;		_USBCtrlTrfRxService
 24088 ;;		_USBCtrlTrfInHandler
 24089 ;; This function uses a non-reentrant model
 24090 ;;
 24091                           
 24092                           	psect	text114
 24093  003F44                     __ptext114:
 24094                           	opt stack 0
 24095  003F44                     _USART_mySetLineCodingHandler:
 24096                           	opt stack 14
 24097                           
 24098                           ;USBapp.c: 239: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 24099                           
 24100                           ; BSR set to: 0
 24101                           ;incstack = 0
 24102  003F44  C0A8  F0BA         	movff	_cdc_notice,_line_coding
 24103  003F48  C0A9  F0BB         	movff	_cdc_notice+1,_line_coding+1
 24104  003F4C  C0AA  F0BC         	movff	_cdc_notice+2,_line_coding+2
 24105  003F50  C0AB  F0BD         	movff	_cdc_notice+3,_line_coding+3
 24106                           
 24107                           ;USBapp.c: 241: uint32_t dwBaud;
 24108                           ;USBapp.c: 242: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 24109  003F54  6A30               	clrf	___lldiv@dividend,c
 24110  003F56  0E1B               	movlw	27
 24111  003F58  6E31               	movwf	___lldiv@dividend+1,c
 24112  003F5A  0EB7               	movlw	183
 24113  003F5C  6E32               	movwf	___lldiv@dividend+2,c
 24114  003F5E  0E00               	movlw	0
 24115  003F60  6A33               	clrf	___lldiv@dividend+3,c
 24116  003F62  C0BA  F034         	movff	_line_coding,___lldiv@divisor
 24117  003F66  C0BB  F035         	movff	_line_coding+1,___lldiv@divisor+1
 24118  003F6A  C0BC  F036         	movff	_line_coding+2,___lldiv@divisor+2
 24119  003F6E  C0BD  F037         	movff	_line_coding+3,___lldiv@divisor+3
 24120  003F72  ECDE  F020         	call	___lldiv	;wreg free
 24121  003F76  C030  F03D         	movff	?___lldiv,??_USART_mySetLineCodingHandler
 24122  003F7A  C031  F03E         	movff	?___lldiv+1,??_USART_mySetLineCodingHandler+1
 24123  003F7E  C032  F03F         	movff	?___lldiv+2,??_USART_mySetLineCodingHandler+2
 24124  003F82  C033  F040         	movff	?___lldiv+3,??_USART_mySetLineCodingHandler+3
 24125  003F86  0EFF               	movlw	255
 24126  003F88  243D               	addwf	??_USART_mySetLineCodingHandler,w,c
 24127  003F8A  6E41               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 24128  003F8C  0EFF               	movlw	255
 24129  003F8E  203E               	addwfc	??_USART_mySetLineCodingHandler+1,w,c
 24130  003F90  6E42               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 24131  003F92  0EFF               	movlw	255
 24132  003F94  203F               	addwfc	??_USART_mySetLineCodingHandler+2,w,c
 24133  003F96  6E43               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 24134  003F98  0EFF               	movlw	255
 24135  003F9A  2040               	addwfc	??_USART_mySetLineCodingHandler+3,w,c
 24136  003F9C  6E44               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 24137                           
 24138                           ;USBapp.c: 243: SPBRG = (uint8_t) dwBaud;
 24139  003F9E  C041  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 24140                           
 24141                           ;USBapp.c: 244: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 24142  003FA2  C042  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 24143                           
 24144                           ;USBapp.c: 246: EUSART_Initialize();
 24145  003FA6  EFEC  F01B         	goto	i2_EUSART_Initialize	;wreg free
 24146  003FAA                     __end_of_USART_mySetLineCodingHandler:
 24147                           	opt stack 0
 24148                           tosu	equ	0xFFF
 24149                           tosh	equ	0xFFE
 24150                           tosl	equ	0xFFD
 24151                           pclatu	equ	0xFFB
 24152                           pclath	equ	0xFFA
 24153                           tblptru	equ	0xFF8
 24154                           tblptrh	equ	0xFF7
 24155                           tblptrl	equ	0xFF6
 24156                           tablat	equ	0xFF5
 24157                           prodh	equ	0xFF4
 24158                           prodl	equ	0xFF3
 24159                           intcon	equ	0xFF2
 24160                           postinc0	equ	0xFEE
 24161                           wreg	equ	0xFE8
 24162                           indf1	equ	0xFE7
 24163                           postdec1	equ	0xFE5
 24164                           fsr1h	equ	0xFE2
 24165                           fsr1l	equ	0xFE1
 24166                           indf2	equ	0xFDF
 24167                           postinc2	equ	0xFDE
 24168                           postdec2	equ	0xFDD
 24169                           plusw2	equ	0xFDB
 24170                           fsr2h	equ	0xFDA
 24171                           fsr2l	equ	0xFD9
 24172                           status	equ	0xFD8
 24173                           
 24174 ;; *************** function i2_EUSART_Initialize *****************
 24175 ;; Defined at:
 24176 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 24177 ;; Parameters:    Size  Location     Type
 24178 ;;		None
 24179 ;; Auto vars:     Size  Location     Type
 24180 ;;		None
 24181 ;; Return value:  Size  Location     Type
 24182 ;;		None               void
 24183 ;; Registers used:
 24184 ;;		wreg, status,2
 24185 ;; Tracked objects:
 24186 ;;		On entry : B/0
 24187 ;;		On exit  : F/0
 24188 ;;		Unchanged: 0/0
 24189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24190 ;;      Params:         0       0       0       0       0       0       0       0       0
 24191 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24192 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24193 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24194 ;;Total ram usage:        0 bytes
 24195 ;; Hardware stack levels used:    1
 24196 ;; This function calls:
 24197 ;;		Nothing
 24198 ;; This function is called by:
 24199 ;;		_USBapp_CdcEmulatorInitialize
 24200 ;;		_USART_mySetLineCodingHandler
 24201 ;; This function uses a non-reentrant model
 24202 ;;
 24203                           
 24204                           	psect	text115
 24205  0037D8                     __ptext115:
 24206                           	opt stack 0
 24207  0037D8                     i2_EUSART_Initialize:
 24208                           	opt stack 16
 24209                           
 24210                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 24211                           
 24212                           ; BSR set to: 0
 24213                           ;incstack = 0
 24214  0037D8  9A9D               	bcf	3997,5,c	;volatile
 24215                           
 24216                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 24217  0037DA  989D               	bcf	3997,4,c	;volatile
 24218                           
 24219                           ;eusart.c: 85: BAUDCON = 0x48;
 24220  0037DC  0E48               	movlw	72
 24221  0037DE  6EB8               	movwf	4024,c	;volatile
 24222                           
 24223                           ;eusart.c: 88: RCSTA = 0x90;
 24224  0037E0  0E90               	movlw	144
 24225  0037E2  6EAB               	movwf	4011,c	;volatile
 24226                           
 24227                           ;eusart.c: 91: TXSTA = 0x26;
 24228  0037E4  0E26               	movlw	38
 24229  0037E6  6EAC               	movwf	4012,c	;volatile
 24230                           
 24231                           ;eusart.c: 95: SPBRG = 0x71;
 24232  0037E8  0E71               	movlw	113
 24233  0037EA  6EAF               	movwf	4015,c	;volatile
 24234                           
 24235                           ;eusart.c: 100: SPBRGH = 0x02;
 24236  0037EC  0E02               	movlw	2
 24237  0037EE  6EB0               	movwf	4016,c	;volatile
 24238                           
 24239                           ;eusart.c: 103: eusartTxHead = 0;
 24240  0037F0  6A24               	clrf	_eusartTxHead,c
 24241                           
 24242                           ;eusart.c: 104: eusartTxTail = 0;
 24243  0037F2  6A25               	clrf	_eusartTxTail,c
 24244                           
 24245                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 24246  0037F4  0E40               	movlw	64
 24247  0037F6  6E23               	movwf	_eusartTxBufferRemaining,c	;volatile
 24248                           
 24249                           ;eusart.c: 107: eusartRxHead = 0;
 24250  0037F8  6A21               	clrf	_eusartRxHead,c
 24251                           
 24252                           ;eusart.c: 108: eusartRxTail = 0;
 24253  0037FA  6A22               	clrf	_eusartRxTail,c
 24254                           
 24255                           ;eusart.c: 109: eusartRxCount = 0;
 24256  0037FC  0100               	movlb	0	; () banked
 24257  0037FE  6B90               	clrf	_eusartRxCount& (0+255),b	;volatile
 24258                           
 24259                           ; BSR set to: 0
 24260                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 24261  003800  8A9D               	bsf	3997,5,c	;volatile
 24262                           
 24263                           ; BSR set to: 0
 24264                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 24265  003802  88AB               	bsf	4011,4,c	;volatile
 24266                           
 24267                           ; BSR set to: 0
 24268  003804  0012               	return	
 24269  003806                     __end_ofi2_EUSART_Initialize:
 24270                           	opt stack 0
 24271                           tosu	equ	0xFFF
 24272                           tosh	equ	0xFFE
 24273                           tosl	equ	0xFFD
 24274                           pclatu	equ	0xFFB
 24275                           pclath	equ	0xFFA
 24276                           tblptru	equ	0xFF8
 24277                           tblptrh	equ	0xFF7
 24278                           tblptrl	equ	0xFF6
 24279                           tablat	equ	0xFF5
 24280                           prodh	equ	0xFF4
 24281                           prodl	equ	0xFF3
 24282                           intcon	equ	0xFF2
 24283                           postinc0	equ	0xFEE
 24284                           wreg	equ	0xFE8
 24285                           indf1	equ	0xFE7
 24286                           postdec1	equ	0xFE5
 24287                           fsr1h	equ	0xFE2
 24288                           fsr1l	equ	0xFE1
 24289                           indf2	equ	0xFDF
 24290                           postinc2	equ	0xFDE
 24291                           postdec2	equ	0xFDD
 24292                           plusw2	equ	0xFDB
 24293                           fsr2h	equ	0xFDA
 24294                           fsr2l	equ	0xFD9
 24295                           status	equ	0xFD8
 24296                           
 24297 ;; *************** function ___lldiv *****************
 24298 ;; Defined at:
 24299 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
 24300 ;; Parameters:    Size  Location     Type
 24301 ;;  dividend        4    0[COMRAM] unsigned long 
 24302 ;;  divisor         4    4[COMRAM] unsigned long 
 24303 ;; Auto vars:     Size  Location     Type
 24304 ;;  quotient        4    8[COMRAM] unsigned long 
 24305 ;;  counter         1   12[COMRAM] unsigned char 
 24306 ;; Return value:  Size  Location     Type
 24307 ;;                  4    0[COMRAM] unsigned long 
 24308 ;; Registers used:
 24309 ;;		wreg, status,2, status,0
 24310 ;; Tracked objects:
 24311 ;;		On entry : B/4
 24312 ;;		On exit  : B/0
 24313 ;;		Unchanged: B/0
 24314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24315 ;;      Params:         8       0       0       0       0       0       0       0       0
 24316 ;;      Locals:         5       0       0       0       0       0       0       0       0
 24317 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24318 ;;      Totals:        13       0       0       0       0       0       0       0       0
 24319 ;;Total ram usage:       13 bytes
 24320 ;; Hardware stack levels used:    1
 24321 ;; This function calls:
 24322 ;;		Nothing
 24323 ;; This function is called by:
 24324 ;;		_USART_mySetLineCodingHandler
 24325 ;; This function uses a non-reentrant model
 24326 ;;
 24327                           
 24328                           	psect	text116
 24329  0041BC                     __ptext116:
 24330                           	opt stack 0
 24331  0041BC                     ___lldiv:
 24332                           	opt stack 14
 24333                           
 24334                           ; BSR set to: 0
 24335                           ;incstack = 0
 24336  0041BC  6A38               	clrf	___lldiv@quotient,c
 24337  0041BE  6A39               	clrf	___lldiv@quotient+1,c
 24338  0041C0  6A3A               	clrf	___lldiv@quotient+2,c
 24339  0041C2  6A3B               	clrf	___lldiv@quotient+3,c
 24340  0041C4  5037               	movf	___lldiv@divisor+3,w,c
 24341  0041C6  1034               	iorwf	___lldiv@divisor,w,c
 24342  0041C8  1035               	iorwf	___lldiv@divisor+1,w,c
 24343  0041CA  1036               	iorwf	___lldiv@divisor+2,w,c
 24344  0041CC  E029               	bz	i2l2396
 24345  0041CE  0E01               	movlw	1
 24346  0041D0  6E3C               	movwf	___lldiv@counter,c
 24347  0041D2  D006               	goto	i2l6481
 24348  0041D4                     i2l6479:
 24349  0041D4  90D8               	bcf	status,0,c
 24350  0041D6  3634               	rlcf	___lldiv@divisor,f,c
 24351  0041D8  3635               	rlcf	___lldiv@divisor+1,f,c
 24352  0041DA  3636               	rlcf	___lldiv@divisor+2,f,c
 24353  0041DC  3637               	rlcf	___lldiv@divisor+3,f,c
 24354  0041DE  2A3C               	incf	___lldiv@counter,f,c
 24355  0041E0                     i2l6481:
 24356  0041E0  AE37               	btfss	___lldiv@divisor+3,7,c
 24357  0041E2  D7F8               	goto	i2l6479
 24358  0041E4                     i2l6483:
 24359  0041E4  90D8               	bcf	status,0,c
 24360  0041E6  3638               	rlcf	___lldiv@quotient,f,c
 24361  0041E8  3639               	rlcf	___lldiv@quotient+1,f,c
 24362  0041EA  363A               	rlcf	___lldiv@quotient+2,f,c
 24363  0041EC  363B               	rlcf	___lldiv@quotient+3,f,c
 24364  0041EE  5034               	movf	___lldiv@divisor,w,c
 24365  0041F0  5C30               	subwf	___lldiv@dividend,w,c
 24366  0041F2  5035               	movf	___lldiv@divisor+1,w,c
 24367  0041F4  5831               	subwfb	___lldiv@dividend+1,w,c
 24368  0041F6  5036               	movf	___lldiv@divisor+2,w,c
 24369  0041F8  5832               	subwfb	___lldiv@dividend+2,w,c
 24370  0041FA  5037               	movf	___lldiv@divisor+3,w,c
 24371  0041FC  5833               	subwfb	___lldiv@dividend+3,w,c
 24372  0041FE  E309               	bnc	i2l6491
 24373  004200  5034               	movf	___lldiv@divisor,w,c
 24374  004202  5E30               	subwf	___lldiv@dividend,f,c
 24375  004204  5035               	movf	___lldiv@divisor+1,w,c
 24376  004206  5A31               	subwfb	___lldiv@dividend+1,f,c
 24377  004208  5036               	movf	___lldiv@divisor+2,w,c
 24378  00420A  5A32               	subwfb	___lldiv@dividend+2,f,c
 24379  00420C  5037               	movf	___lldiv@divisor+3,w,c
 24380  00420E  5A33               	subwfb	___lldiv@dividend+3,f,c
 24381  004210  8038               	bsf	___lldiv@quotient,0,c
 24382  004212                     i2l6491:
 24383  004212  90D8               	bcf	status,0,c
 24384  004214  3237               	rrcf	___lldiv@divisor+3,f,c
 24385  004216  3236               	rrcf	___lldiv@divisor+2,f,c
 24386  004218  3235               	rrcf	___lldiv@divisor+1,f,c
 24387  00421A  3234               	rrcf	___lldiv@divisor,f,c
 24388  00421C  2E3C               	decfsz	___lldiv@counter,f,c
 24389  00421E  D7E2               	goto	i2l6483
 24390  004220                     i2l2396:
 24391  004220  C038  F030         	movff	___lldiv@quotient,?___lldiv
 24392  004224  C039  F031         	movff	___lldiv@quotient+1,?___lldiv+1
 24393  004228  C03A  F032         	movff	___lldiv@quotient+2,?___lldiv+2
 24394  00422C  C03B  F033         	movff	___lldiv@quotient+3,?___lldiv+3
 24395  004230  0012               	return	
 24396  004232                     __end_of___lldiv:
 24397                           	opt stack 0
 24398                           tosu	equ	0xFFF
 24399                           tosh	equ	0xFFE
 24400                           tosl	equ	0xFFD
 24401                           pclatu	equ	0xFFB
 24402                           pclath	equ	0xFFA
 24403                           tblptru	equ	0xFF8
 24404                           tblptrh	equ	0xFF7
 24405                           tblptrl	equ	0xFF6
 24406                           tablat	equ	0xFF5
 24407                           prodh	equ	0xFF4
 24408                           prodl	equ	0xFF3
 24409                           intcon	equ	0xFF2
 24410                           postinc0	equ	0xFEE
 24411                           wreg	equ	0xFE8
 24412                           indf1	equ	0xFE7
 24413                           postdec1	equ	0xFE5
 24414                           fsr1h	equ	0xFE2
 24415                           fsr1l	equ	0xFE1
 24416                           indf2	equ	0xFDF
 24417                           postinc2	equ	0xFDE
 24418                           postdec2	equ	0xFDD
 24419                           plusw2	equ	0xFDB
 24420                           fsr2h	equ	0xFDA
 24421                           fsr2l	equ	0xFD9
 24422                           status	equ	0xFD8
 24423                           
 24424 ;; *************** function _TMRapp_Tick *****************
 24425 ;; Defined at:
 24426 ;;		line 10 in file "../Includes/Drivers/TMRapp.c"
 24427 ;; Parameters:    Size  Location     Type
 24428 ;;		None
 24429 ;; Auto vars:     Size  Location     Type
 24430 ;;		None
 24431 ;; Return value:  Size  Location     Type
 24432 ;;		None               void
 24433 ;; Registers used:
 24434 ;;		None
 24435 ;; Tracked objects:
 24436 ;;		On entry : F/0
 24437 ;;		On exit  : F/0
 24438 ;;		Unchanged: 0/0
 24439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24440 ;;      Params:         0       0       0       0       0       0       0       0       0
 24441 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24442 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24443 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24444 ;;Total ram usage:        0 bytes
 24445 ;; Hardware stack levels used:    1
 24446 ;; This function calls:
 24447 ;;		Nothing
 24448 ;; This function is called by:
 24449 ;;		_INTERRUPT_InterruptManager
 24450 ;; This function uses a non-reentrant model
 24451 ;;
 24452                           
 24453                           	psect	text117
 24454  0033BA                     __ptext117:
 24455                           	opt stack 0
 24456  0033BA                     _TMRapp_Tick:
 24457                           	opt stack 19
 24458                           
 24459                           ; BSR set to: 0
 24460                           ;TMRapp.c: 13: appTimer.mSecTick = 1;
 24461                           
 24462                           ;incstack = 0
 24463  0033BA  818C               	bsf	_appTimer& (0+255),0,b
 24464                           
 24465                           ; BSR set to: 0
 24466  0033BC  0012               	return	
 24467  0033BE                     __end_of_TMRapp_Tick:
 24468                           	opt stack 0
 24469                           tosu	equ	0xFFF
 24470                           tosh	equ	0xFFE
 24471                           tosl	equ	0xFFD
 24472                           pclatu	equ	0xFFB
 24473                           pclath	equ	0xFFA
 24474                           tblptru	equ	0xFF8
 24475                           tblptrh	equ	0xFF7
 24476                           tblptrl	equ	0xFF6
 24477                           tablat	equ	0xFF5
 24478                           prodh	equ	0xFF4
 24479                           prodl	equ	0xFF3
 24480                           intcon	equ	0xFF2
 24481                           postinc0	equ	0xFEE
 24482                           wreg	equ	0xFE8
 24483                           indf1	equ	0xFE7
 24484                           postdec1	equ	0xFE5
 24485                           fsr1h	equ	0xFE2
 24486                           fsr1l	equ	0xFE1
 24487                           indf2	equ	0xFDF
 24488                           postinc2	equ	0xFDE
 24489                           postdec2	equ	0xFDD
 24490                           plusw2	equ	0xFDB
 24491                           fsr2h	equ	0xFDA
 24492                           fsr2l	equ	0xFD9
 24493                           status	equ	0xFD8
 24494                           
 24495 ;; *************** function _TMR1_ISR *****************
 24496 ;; Defined at:
 24497 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 24498 ;; Parameters:    Size  Location     Type
 24499 ;;		None
 24500 ;; Auto vars:     Size  Location     Type
 24501 ;;		None
 24502 ;; Return value:  Size  Location     Type
 24503 ;;		None               void
 24504 ;; Registers used:
 24505 ;;		wreg, status,2
 24506 ;; Tracked objects:
 24507 ;;		On entry : 0/0
 24508 ;;		On exit  : F/0
 24509 ;;		Unchanged: 0/0
 24510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24511 ;;      Params:         0       0       0       0       0       0       0       0       0
 24512 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24513 ;;      Temps:          3       0       0       0       0       0       0       0       0
 24514 ;;      Totals:         3       0       0       0       0       0       0       0       0
 24515 ;;Total ram usage:        3 bytes
 24516 ;; Hardware stack levels used:    1
 24517 ;; This function calls:
 24518 ;;		Nothing
 24519 ;; This function is called by:
 24520 ;;		_INTERRUPT_InterruptManager
 24521 ;; This function uses a non-reentrant model
 24522 ;;
 24523                           
 24524                           	psect	text118
 24525  0034F8                     __ptext118:
 24526                           	opt stack 0
 24527  0034F8                     _TMR1_ISR:
 24528                           	opt stack 19
 24529                           
 24530                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 24531                           
 24532                           ; BSR set to: 0
 24533                           ;incstack = 0
 24534  0034F8  909E               	bcf	3998,0,c	;volatile
 24535                           
 24536                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 24537  0034FA  0100               	movlb	0	; () banked
 24538  0034FC  C081  F030         	movff	_timer1ReloadVal+1,??_TMR1_ISR	;volatile
 24539  003500  C030  F031         	movff	??_TMR1_ISR,??_TMR1_ISR+1
 24540  003504  6A32               	clrf	(??_TMR1_ISR+2)& (0+255),c
 24541  003506  5031               	movf	??_TMR1_ISR+1,w,c
 24542  003508  6ECF               	movwf	4047,c	;volatile
 24543                           
 24544                           ; BSR set to: 0
 24545                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 24546  00350A  C080  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 24547                           
 24548                           ; BSR set to: 0
 24549  00350E  0012               	return	
 24550  003510                     __end_of_TMR1_ISR:
 24551                           	opt stack 0
 24552                           tosu	equ	0xFFF
 24553                           tosh	equ	0xFFE
 24554                           tosl	equ	0xFFD
 24555                           pclatu	equ	0xFFB
 24556                           pclath	equ	0xFFA
 24557                           tblptru	equ	0xFF8
 24558                           tblptrh	equ	0xFF7
 24559                           tblptrl	equ	0xFF6
 24560                           tablat	equ	0xFF5
 24561                           prodh	equ	0xFF4
 24562                           prodl	equ	0xFF3
 24563                           intcon	equ	0xFF2
 24564                           postinc0	equ	0xFEE
 24565                           wreg	equ	0xFE8
 24566                           indf1	equ	0xFE7
 24567                           postdec1	equ	0xFE5
 24568                           fsr1h	equ	0xFE2
 24569                           fsr1l	equ	0xFE1
 24570                           indf2	equ	0xFDF
 24571                           postinc2	equ	0xFDE
 24572                           postdec2	equ	0xFDD
 24573                           plusw2	equ	0xFDB
 24574                           fsr2h	equ	0xFDA
 24575                           fsr2l	equ	0xFD9
 24576                           status	equ	0xFD8
 24577                           
 24578 ;; *************** function _EUSART_Transmit_ISR *****************
 24579 ;; Defined at:
 24580 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 24581 ;; Parameters:    Size  Location     Type
 24582 ;;		None
 24583 ;; Auto vars:     Size  Location     Type
 24584 ;;		None
 24585 ;; Return value:  Size  Location     Type
 24586 ;;		None               void
 24587 ;; Registers used:
 24588 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24589 ;; Tracked objects:
 24590 ;;		On entry : 0/0
 24591 ;;		On exit  : 0/0
 24592 ;;		Unchanged: 0/0
 24593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24594 ;;      Params:         0       0       0       0       0       0       0       0       0
 24595 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24597 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24598 ;;Total ram usage:        0 bytes
 24599 ;; Hardware stack levels used:    1
 24600 ;; This function calls:
 24601 ;;		Nothing
 24602 ;; This function is called by:
 24603 ;;		_INTERRUPT_InterruptManager
 24604 ;; This function uses a non-reentrant model
 24605 ;;
 24606                           
 24607                           	psect	text119
 24608  0036AE                     __ptext119:
 24609                           	opt stack 0
 24610  0036AE                     _EUSART_Transmit_ISR:
 24611                           	opt stack 19
 24612                           
 24613                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 24614                           
 24615                           ; BSR set to: 0
 24616                           ;incstack = 0
 24617  0036AE  0E40               	movlw	64
 24618  0036B0  5C23               	subwf	_eusartTxBufferRemaining,w,c
 24619  0036B2  E210               	bc	i2l1064
 24620                           
 24621                           ;eusart.c: 167: {
 24622                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 24623  0036B4  0102               	movlb	2	; () banked
 24624  0036B6  0E00               	movlw	low _eusartTxBuffer
 24625  0036B8  2425               	addwf	_eusartTxTail,w,c
 24626  0036BA  6ED9               	movwf	fsr2l,c
 24627  0036BC  6ADA               	clrf	fsr2h,c
 24628  0036BE  0E02               	movlw	high _eusartTxBuffer
 24629  0036C0  22DA               	addwfc	fsr2h,f,c
 24630  0036C2  50DF               	movf	indf2,w,c
 24631  0036C4  6EAD               	movwf	4013,c	;volatile
 24632                           
 24633                           ; BSR set to: 2
 24634  0036C6  2A25               	incf	_eusartTxTail,f,c
 24635                           
 24636                           ; BSR set to: 2
 24637                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 24638  0036C8  0E3F               	movlw	63
 24639  0036CA  6425               	cpfsgt	_eusartTxTail,c
 24640  0036CC  D001               	goto	i2l9493
 24641                           
 24642                           ; BSR set to: 2
 24643                           ;eusart.c: 170: {
 24644                           ;eusart.c: 171: eusartTxTail = 0;
 24645  0036CE  6A25               	clrf	_eusartTxTail,c
 24646  0036D0                     i2l9493:
 24647                           
 24648                           ; BSR set to: 2
 24649                           ;eusart.c: 172: }
 24650                           ;eusart.c: 173: eusartTxBufferRemaining++;
 24651  0036D0  2A23               	incf	_eusartTxBufferRemaining,f,c	;volatile
 24652                           
 24653                           ;eusart.c: 174: }
 24654  0036D2  0012               	return	
 24655  0036D4                     i2l1064:
 24656                           
 24657                           ;eusart.c: 175: else
 24658                           ;eusart.c: 176: {
 24659                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 24660  0036D4  989D               	bcf	3997,4,c	;volatile
 24661  0036D6  0012               	return	
 24662  0036D8                     __end_of_EUSART_Transmit_ISR:
 24663                           	opt stack 0
 24664                           tosu	equ	0xFFF
 24665                           tosh	equ	0xFFE
 24666                           tosl	equ	0xFFD
 24667                           pclatu	equ	0xFFB
 24668                           pclath	equ	0xFFA
 24669                           tblptru	equ	0xFF8
 24670                           tblptrh	equ	0xFF7
 24671                           tblptrl	equ	0xFF6
 24672                           tablat	equ	0xFF5
 24673                           prodh	equ	0xFF4
 24674                           prodl	equ	0xFF3
 24675                           intcon	equ	0xFF2
 24676                           postinc0	equ	0xFEE
 24677                           wreg	equ	0xFE8
 24678                           indf1	equ	0xFE7
 24679                           postdec1	equ	0xFE5
 24680                           fsr1h	equ	0xFE2
 24681                           fsr1l	equ	0xFE1
 24682                           indf2	equ	0xFDF
 24683                           postinc2	equ	0xFDE
 24684                           postdec2	equ	0xFDD
 24685                           plusw2	equ	0xFDB
 24686                           fsr2h	equ	0xFDA
 24687                           fsr2l	equ	0xFD9
 24688                           status	equ	0xFD8
 24689                           
 24690 ;; *************** function _EUSART_Receive_ISR *****************
 24691 ;; Defined at:
 24692 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 24693 ;; Parameters:    Size  Location     Type
 24694 ;;		None
 24695 ;; Auto vars:     Size  Location     Type
 24696 ;;		None
 24697 ;; Return value:  Size  Location     Type
 24698 ;;		None               void
 24699 ;; Registers used:
 24700 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24701 ;; Tracked objects:
 24702 ;;		On entry : 0/0
 24703 ;;		On exit  : 0/0
 24704 ;;		Unchanged: 0/0
 24705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24706 ;;      Params:         0       0       0       0       0       0       0       0       0
 24707 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24708 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24709 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24710 ;;Total ram usage:        0 bytes
 24711 ;; Hardware stack levels used:    1
 24712 ;; This function calls:
 24713 ;;		Nothing
 24714 ;; This function is called by:
 24715 ;;		_INTERRUPT_InterruptManager
 24716 ;; This function uses a non-reentrant model
 24717 ;;
 24718                           
 24719                           	psect	text120
 24720  003684                     __ptext120:
 24721                           	opt stack 0
 24722  003684                     _EUSART_Receive_ISR:
 24723                           	opt stack 19
 24724                           
 24725                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 24726                           
 24727                           ;incstack = 0
 24728  003684  A2AB               	btfss	4011,1,c	;volatile
 24729  003686  D003               	goto	i2l9499
 24730                           
 24731                           ;eusart.c: 184: {
 24732                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 24733  003688  98AB               	bcf	4011,4,c	;volatile
 24734                           
 24735                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 24736  00368A  88AB               	bsf	4011,4,c	;volatile
 24737                           
 24738                           ;eusart.c: 189: }
 24739  00368C  0012               	return	
 24740  00368E                     i2l9499:
 24741                           
 24742                           ;eusart.c: 190: else
 24743                           ;eusart.c: 191: {
 24744                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 24745  00368E  0E00               	movlw	low _eusartRxBuffer
 24746  003690  2421               	addwf	_eusartRxHead,w,c
 24747  003692  6ED9               	movwf	fsr2l,c
 24748  003694  6ADA               	clrf	fsr2h,c
 24749  003696  0E01               	movlw	high _eusartRxBuffer
 24750  003698  22DA               	addwfc	fsr2h,f,c
 24751  00369A  CFAE FFDF          	movff	4014,indf2	;volatile
 24752                           
 24753                           ; BSR set to: 1
 24754  00369E  2A21               	incf	_eusartRxHead,f,c
 24755                           
 24756                           ; BSR set to: 1
 24757                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 24758  0036A0  0E3F               	movlw	63
 24759  0036A2  6421               	cpfsgt	_eusartRxHead,c
 24760  0036A4  D001               	goto	i2l9507
 24761                           
 24762                           ; BSR set to: 1
 24763                           ;eusart.c: 195: {
 24764                           ;eusart.c: 196: eusartRxHead = 0;
 24765  0036A6  6A21               	clrf	_eusartRxHead,c
 24766  0036A8                     i2l9507:
 24767                           
 24768                           ; BSR set to: 1
 24769                           ;eusart.c: 197: }
 24770                           ;eusart.c: 198: eusartRxCount++;
 24771  0036A8  0100               	movlb	0	; () banked
 24772  0036AA  2B90               	incf	_eusartRxCount& (0+255),f,b	;volatile
 24773  0036AC  0012               	return	
 24774  0036AE                     __end_of_EUSART_Receive_ISR:
 24775                           	opt stack 0
 24776                           tosu	equ	0xFFF
 24777                           tosh	equ	0xFFE
 24778                           tosl	equ	0xFFD
 24779                           pclatu	equ	0xFFB
 24780                           pclath	equ	0xFFA
 24781                           tblptru	equ	0xFF8
 24782                           tblptrh	equ	0xFF7
 24783                           tblptrl	equ	0xFF6
 24784                           tablat	equ	0xFF5
 24785                           prodh	equ	0xFF4
 24786                           prodl	equ	0xFF3
 24787                           intcon	equ	0xFF2
 24788                           postinc0	equ	0xFEE
 24789                           wreg	equ	0xFE8
 24790                           indf1	equ	0xFE7
 24791                           postdec1	equ	0xFE5
 24792                           fsr1h	equ	0xFE2
 24793                           fsr1l	equ	0xFE1
 24794                           indf2	equ	0xFDF
 24795                           postinc2	equ	0xFDE
 24796                           postdec2	equ	0xFDD
 24797                           plusw2	equ	0xFDB
 24798                           fsr2h	equ	0xFDA
 24799                           fsr2l	equ	0xFD9
 24800                           status	equ	0xFD8
 24801                           
 24802 ;; *************** function _CMP1_ISR *****************
 24803 ;; Defined at:
 24804 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 24805 ;; Parameters:    Size  Location     Type
 24806 ;;		None
 24807 ;; Auto vars:     Size  Location     Type
 24808 ;;		None
 24809 ;; Return value:  Size  Location     Type
 24810 ;;		None               void
 24811 ;; Registers used:
 24812 ;;		None
 24813 ;; Tracked objects:
 24814 ;;		On entry : 0/0
 24815 ;;		On exit  : 0/0
 24816 ;;		Unchanged: 0/0
 24817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24818 ;;      Params:         0       0       0       0       0       0       0       0       0
 24819 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24820 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24821 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24822 ;;Total ram usage:        0 bytes
 24823 ;; Hardware stack levels used:    1
 24824 ;; This function calls:
 24825 ;;		Nothing
 24826 ;; This function is called by:
 24827 ;;		_INTERRUPT_InterruptManager
 24828 ;; This function uses a non-reentrant model
 24829 ;;
 24830                           
 24831                           	psect	text121
 24832  0033B6                     __ptext121:
 24833                           	opt stack 0
 24834  0033B6                     _CMP1_ISR:
 24835                           	opt stack 19
 24836                           
 24837                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 24838                           
 24839                           ;incstack = 0
 24840  0033B6  9CA1               	bcf	4001,6,c	;volatile
 24841  0033B8  0012               	return	
 24842  0033BA                     __end_of_CMP1_ISR:
 24843                           	opt stack 0
 24844                           tosu	equ	0xFFF
 24845                           tosh	equ	0xFFE
 24846                           tosl	equ	0xFFD
 24847                           pclatu	equ	0xFFB
 24848                           pclath	equ	0xFFA
 24849                           tblptru	equ	0xFF8
 24850                           tblptrh	equ	0xFF7
 24851                           tblptrl	equ	0xFF6
 24852                           tablat	equ	0xFF5
 24853                           prodh	equ	0xFF4
 24854                           prodl	equ	0xFF3
 24855                           intcon	equ	0xFF2
 24856                           postinc0	equ	0xFEE
 24857                           wreg	equ	0xFE8
 24858                           indf1	equ	0xFE7
 24859                           postdec1	equ	0xFE5
 24860                           fsr1h	equ	0xFE2
 24861                           fsr1l	equ	0xFE1
 24862                           indf2	equ	0xFDF
 24863                           postinc2	equ	0xFDE
 24864                           postdec2	equ	0xFDD
 24865                           plusw2	equ	0xFDB
 24866                           fsr2h	equ	0xFDA
 24867                           fsr2l	equ	0xFD9
 24868                           status	equ	0xFD8
 24869                           tosu	equ	0xFFF
 24870                           tosh	equ	0xFFE
 24871                           tosl	equ	0xFFD
 24872                           pclatu	equ	0xFFB
 24873                           pclath	equ	0xFFA
 24874                           tblptru	equ	0xFF8
 24875                           tblptrh	equ	0xFF7
 24876                           tblptrl	equ	0xFF6
 24877                           tablat	equ	0xFF5
 24878                           prodh	equ	0xFF4
 24879                           prodl	equ	0xFF3
 24880                           intcon	equ	0xFF2
 24881                           postinc0	equ	0xFEE
 24882                           wreg	equ	0xFE8
 24883                           indf1	equ	0xFE7
 24884                           postdec1	equ	0xFE5
 24885                           fsr1h	equ	0xFE2
 24886                           fsr1l	equ	0xFE1
 24887                           indf2	equ	0xFDF
 24888                           postinc2	equ	0xFDE
 24889                           postdec2	equ	0xFDD
 24890                           plusw2	equ	0xFDB
 24891                           fsr2h	equ	0xFDA
 24892                           fsr2l	equ	0xFD9
 24893                           status	equ	0xFD8
 24894                           
 24895                           	psect	text122
 24896  000000                     __ptext122:
 24897                           	opt stack 0
 24898                           tosu	equ	0xFFF
 24899                           tosh	equ	0xFFE
 24900                           tosl	equ	0xFFD
 24901                           pclatu	equ	0xFFB
 24902                           pclath	equ	0xFFA
 24903                           tblptru	equ	0xFF8
 24904                           tblptrh	equ	0xFF7
 24905                           tblptrl	equ	0xFF6
 24906                           tablat	equ	0xFF5
 24907                           prodh	equ	0xFF4
 24908                           prodl	equ	0xFF3
 24909                           intcon	equ	0xFF2
 24910                           postinc0	equ	0xFEE
 24911                           wreg	equ	0xFE8
 24912                           indf1	equ	0xFE7
 24913                           postdec1	equ	0xFE5
 24914                           fsr1h	equ	0xFE2
 24915                           fsr1l	equ	0xFE1
 24916                           indf2	equ	0xFDF
 24917                           postinc2	equ	0xFDE
 24918                           postdec2	equ	0xFDD
 24919                           plusw2	equ	0xFDB
 24920                           fsr2h	equ	0xFDA
 24921                           fsr2l	equ	0xFD9
 24922                           status	equ	0xFD8
 24923                           
 24924                           	psect	rparam
 24925  0000                     tosu	equ	0xFFF
 24926                           tosh	equ	0xFFE
 24927                           tosl	equ	0xFFD
 24928                           pclatu	equ	0xFFB
 24929                           pclath	equ	0xFFA
 24930                           tblptru	equ	0xFF8
 24931                           tblptrh	equ	0xFF7
 24932                           tblptrl	equ	0xFF6
 24933                           tablat	equ	0xFF5
 24934                           prodh	equ	0xFF4
 24935                           prodl	equ	0xFF3
 24936                           intcon	equ	0xFF2
 24937                           postinc0	equ	0xFEE
 24938                           wreg	equ	0xFE8
 24939                           indf1	equ	0xFE7
 24940                           postdec1	equ	0xFE5
 24941                           fsr1h	equ	0xFE2
 24942                           fsr1l	equ	0xFE1
 24943                           indf2	equ	0xFDF
 24944                           postinc2	equ	0xFDE
 24945                           postdec2	equ	0xFDD
 24946                           plusw2	equ	0xFDB
 24947                           fsr2h	equ	0xFDA
 24948                           fsr2l	equ	0xFD9
 24949                           status	equ	0xFD8


Data Sizes:
    Strings     1525
    Constant    969
    Data        5
    BSS         429
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     47      94
    BANK0           160     50     157
    BANK1           256      0     216
    BANK2           256      0      64
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_219(CODE[7]), STR_217(CODE[7]), STR_215(CODE[7]), STR_212(CODE[7]), 
		 -> STR_70(CODE[3]), STR_66(CODE[4]), STR_64(CODE[3]), STR_30(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_211(CODE[3]), STR_68(CODE[14]), STR_60(CODE[11]), STR_56(CODE[7]), 
		 -> STR_53(CODE[9]), STR_52(CODE[11]), STR_50(CODE[14]), STR_47(CODE[14]), 
		 -> STR_46(CODE[3]), STR_43(CODE[7]), STR_40(CODE[9]), STR_33(CODE[14]), 
		 -> STR_32(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(ABS[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(ABS[1]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5368_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5368_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5368_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5368_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(ABS[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(ABS[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4081$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    S4071$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4071$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4047$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4047$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4047$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4047$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(ABS[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 18
		 -> oled_putUint16@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_260(CODE[12]), STR_259(CODE[8]), 
		 -> STR_258(CODE[9]), STR_241(CODE[16]), STR_240(CODE[16]), STR_239(CODE[16]), 
		 -> STR_238(CODE[15]), STR_237(CODE[15]), STR_236(CODE[16]), STR_235(CODE[17]), 
		 -> STR_234(CODE[16]), STR_233(CODE[17]), STR_232(CODE[17]), STR_231(CODE[2]), 
		 -> STR_230(CODE[7]), STR_229(CODE[10]), STR_228(CODE[17]), STR_227(CODE[16]), 
		 -> STR_226(CODE[15]), STR_225(CODE[15]), STR_224(CODE[17]), STR_223(CODE[16]), 
		 -> STR_222(CODE[17]), STR_221(CODE[17]), STR_220(CODE[16]), STR_218(CODE[18]), 
		 -> STR_216(CODE[17]), STR_214(CODE[17]), STR_213(CODE[17]), responseData(BANK0[8]), 
		 -> responseId(BANK1[16]), responsePortNum(BANK0[3]), STR_210(CODE[12]), STR_209(CODE[13]), 
		 -> STR_208(CODE[12]), STR_205(CODE[18]), STR_204(CODE[13]), STR_203(CODE[17]), 
		 -> STR_202(CODE[16]), STR_201(CODE[17]), STR_200(CODE[17]), STR_199(CODE[2]), 
		 -> STR_198(CODE[2]), STR_197(CODE[2]), STR_196(CODE[2]), STR_195(CODE[2]), 
		 -> STR_194(CODE[2]), STR_193(CODE[16]), STR_192(CODE[17]), STR_191(CODE[17]), 
		 -> STR_190(CODE[2]), STR_189(CODE[2]), STR_188(CODE[2]), STR_187(CODE[15]), 
		 -> STR_186(CODE[15]), STR_185(CODE[15]), STR_184(CODE[15]), STR_183(CODE[2]), 
		 -> STR_182(CODE[2]), STR_181(CODE[2]), STR_180(CODE[2]), STR_179(CODE[15]), 
		 -> STR_178(CODE[15]), STR_177(CODE[15]), STR_176(CODE[15]), STR_175(CODE[2]), 
		 -> STR_174(CODE[2]), STR_173(CODE[2]), STR_172(CODE[2]), STR_171(CODE[15]), 
		 -> STR_170(CODE[15]), STR_169(CODE[15]), STR_168(CODE[15]), STR_167(CODE[2]), 
		 -> STR_166(CODE[2]), STR_165(CODE[2]), STR_164(CODE[2]), STR_163(CODE[15]), 
		 -> STR_162(CODE[15]), STR_161(CODE[15]), STR_160(CODE[15]), STR_159(CODE[2]), 
		 -> STR_158(CODE[2]), STR_157(CODE[2]), STR_156(CODE[2]), STR_155(CODE[2]), 
		 -> STR_154(CODE[15]), STR_153(CODE[15]), STR_152(CODE[15]), STR_151(CODE[15]), 
		 -> STR_150(CODE[2]), STR_149(CODE[2]), STR_148(CODE[2]), STR_147(CODE[2]), 
		 -> STR_146(CODE[2]), STR_145(CODE[15]), STR_144(CODE[15]), STR_143(CODE[15]), 
		 -> STR_142(CODE[15]), STR_141(CODE[2]), STR_140(CODE[2]), STR_139(CODE[2]), 
		 -> STR_138(CODE[2]), STR_137(CODE[2]), STR_136(CODE[15]), STR_135(CODE[15]), 
		 -> STR_134(CODE[15]), STR_133(CODE[15]), STR_132(CODE[2]), STR_131(CODE[2]), 
		 -> STR_130(CODE[2]), STR_129(CODE[2]), STR_128(CODE[2]), STR_127(CODE[15]), 
		 -> STR_126(CODE[15]), STR_125(CODE[15]), STR_124(CODE[15]), STR_123(CODE[2]), 
		 -> STR_122(CODE[2]), STR_121(CODE[2]), STR_120(CODE[2]), STR_119(CODE[2]), 
		 -> STR_118(CODE[15]), STR_117(CODE[15]), STR_116(CODE[15]), STR_115(CODE[15]), 
		 -> STR_114(CODE[2]), STR_113(CODE[2]), STR_112(CODE[2]), STR_111(CODE[2]), 
		 -> STR_110(CODE[2]), STR_109(CODE[15]), STR_108(CODE[15]), STR_107(CODE[15]), 
		 -> STR_106(CODE[15]), STR_105(CODE[2]), STR_104(CODE[2]), STR_103(CODE[2]), 
		 -> STR_102(CODE[2]), STR_101(CODE[2]), STR_100(CODE[15]), STR_99(CODE[15]), 
		 -> STR_98(CODE[15]), STR_97(CODE[15]), STR_96(CODE[2]), STR_95(CODE[16]), 
		 -> STR_94(CODE[17]), STR_93(CODE[17]), STR_92(CODE[16]), STR_91(CODE[16]), 
		 -> STR_90(CODE[16]), STR_89(CODE[2]), STR_88(CODE[7]), STR_87(CODE[7]), 
		 -> STR_86(CODE[16]), STR_85(CODE[16]), STR_84(CODE[17]), STR_83(CODE[17]), 
		 -> STR_82(CODE[16]), STR_81(CODE[16]), STR_80(CODE[16]), STR_78(CODE[2]), 
		 -> STR_76(CODE[2]), STR_75(CODE[16]), STR_74(CODE[13]), STR_73(CODE[12]), 
		 -> STR_72(CODE[17]), STR_62(CODE[8]), STR_61(CODE[8]), STR_58(CODE[7]), 
		 -> STR_57(CODE[10]), STR_55(CODE[11]), STR_54(CODE[11]), STR_49(CODE[9]), 
		 -> STR_48(CODE[11]), STR_42(CODE[11]), STR_41(CODE[10]), STR_37(CODE[5]), 
		 -> STR_36(CODE[12]), STR_35(CODE[8]), STR_34(CODE[9]), STR_28(CODE[17]), 
		 -> STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[9]), 
		 -> STR_23(CODE[10]), STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), 
		 -> STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), 
		 -> STR_9(CODE[9]), STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendDataCommand@appData	PTR unsigned char  size(1) Largest target is 12
		 -> dataBuffer(BANK0[12]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_207(CODE[12]), STR_206(CODE[14]), STR_79(CODE[14]), STR_77(CODE[12]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_257(CODE[26]), STR_256(CODE[26]), STR_255(CODE[26]), STR_254(CODE[26]), 
		 -> STR_253(CODE[1]), STR_252(CODE[9]), STR_251(CODE[13]), STR_250(CODE[13]), 
		 -> STR_249(CODE[13]), STR_248(CODE[13]), STR_247(CODE[13]), STR_246(CODE[13]), 
		 -> STR_245(CODE[13]), STR_244(CODE[13]), STR_243(CODE[16]), STR_242(CODE[15]), 
		 -> STR_71(CODE[11]), STR_69(CODE[11]), STR_67(CODE[11]), STR_65(CODE[11]), 
		 -> STR_63(CODE[12]), STR_59(CODE[14]), STR_51(CODE[14]), STR_45(CODE[10]), 
		 -> STR_44(CODE[13]), STR_39(CODE[13]), STR_38(CODE[14]), STR_31(CODE[13]), 
		 -> STR_29(CODE[12]), STR_22(CODE[20]), STR_21(CODE[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_test_adc
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_moteApp_delayms
    _test_adc->_oled_putUint16
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_oled_putUint16
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _oled_putUint16->_oled_putString
    _moteApp_add8bToDataBuffer->___lbdiv
    _moteApp_add8bToDataBuffer->___lbmod
    _moteApp_add16bToDataBuffer->___lwdiv
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _modemSleep->_moteApp_delayms
    _modemResync->_moteApp_delayms
    _MOTEapp_getModemResponse->_EUSART_Read
    _ADC_TempConversion->___lwdiv
    _moteJoiningProcess->_oled_putString
    _MOTEapp_WriteDataRate->_moteApp_delayms
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _TMRapp_Handler->___lwmod
    _USBapp_Handler->_oled_putString
    _oled_putString->_oled_putChar
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _oled_writeData->_SPI_Exchange8bit
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _oled_writeCommand->_SPI_Exchange8bit
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1111171
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                        _modemResync
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  520025
                    _moteApp_delayms
                         _oled_clear
                           _test_adc
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          3     3      0   72898
                                             18 BANK0      3     3      0
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   68012
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   71596
                    _moteApp_delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   79832
                    _moteApp_delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   1     1      0    8236
                                              5 BANK0      1     1      0
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _test_adc                                             8     8      0  221647
                                             28 BANK0      6     6      0
                  _ADC_GetConversion
                 _ADC_TempConversion
                    _moteApp_delayms
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          9     9      0  433959
                                             41 BANK0      9     9      0
                  _ADC_GetConversion
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
           _MOTEapp_getModemResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                    _moteApp_delayms
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  14    11      3  264711
                                             28 BANK0     13    10      3
                  _ADC_GetConversion
                 _ADC_TempConversion
                     _MOTEapp_SetADR
                _MOTEapp_SetDataRate
              _MOTEapp_WriteDataRate
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
                              _unhex
 ---------------------------------------------------------------------------------
 (3) _unhex                                                1     1      0     186
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      7     3      4    1948
                                              1 BANK0      7     3      4
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     158
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   69919
                                             18 BANK0      9     7      2
                            ___lbdiv
                            ___lbmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint16                                      10     6      4   75427
                                             18 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 3     3      0     297
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            2     1      1    2183
                                              4 BANK0      2     1      1
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     856
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     657
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           3     0      3    6743
                                              7 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   18481
                                             15 BANK0      1     1      0
                 _EUSART_FlushBuffer
                  _EUSART_Initialize
             _PIN_MANAGER_Initialize
                        _modemResync
                         _modemSleep
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1552
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0      62
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      93
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _modemSleep                                           0     0      0    8205
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _modemResync                                          3     3      0    8483
                                              5 BANK0      3     3      0
           _MOTEapp_getModemResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (5) _MOTEapp_getModemResponse                             2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   2     2      0    2178
                                              7 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    2113
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   4     3      1   89495
                                             18 BANK0      4     3      1
                   _DATAEE_WriteByte
                     _MOTEapp_SetADR
                _MOTEapp_SetDataRate
              _MOTEapp_WriteDataRate
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     1      6    2200
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               9     5      4    2019
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_WriteDataRate                                0     0      0    8205
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    3393
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _moteApp_delayms                                      5     3      2    4812
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRate                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetADR                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     304
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3768
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3768
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       0     0      0   72570
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   66784
                                             13 BANK0      5     1      4
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1228
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1228
                                             13 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1098
                                              3 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0     124
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4558
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     209
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2146
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         4     4      0    2104
                                              7 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1866
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   30063
                                             35 COMRAM    12    12      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (12) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   30063
                                             34 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   17698
                                             31 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  1     1      0   12636
                                             30 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4401
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             7     7      0    4286
                                             23 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             15 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (14) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             14 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   6     5      1     733
                                              8 COMRAM     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     499
                                             21 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     500
                                             21 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _USART_mySetLineCodingHandler                        8     8      0     385
                                             13 COMRAM     8     8      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (12) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _USBapp_handlerState
   _modemResync
     _MOTEapp_getModemResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_GetConversion
     _ADC_TempConversion
       ___lwdiv
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModemResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___lwmod
     _moteApp_delayms
     _moteJoiningProcess
       _DATAEE_WriteByte
       _MOTEapp_SetADR
       _MOTEapp_SetDataRate
       _MOTEapp_WriteDataRate
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _MOTEapp_SetADR
       _MOTEapp_SetDataRate
       _MOTEapp_WriteDataRate
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _EUSART_Initialize
         _PIN_MANAGER_Initialize
         _modemResync
           _MOTEapp_getModemResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _modemSleep
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_displayOff
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _Set_Page_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _oled_writeData
                   _SPI_Exchange8bit
           _oled_devInit
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setDisplay
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
       _moteApp_add8bToDataBuffer
         ___lbdiv
         ___lbmod
       _moteApp_clearBuffers
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
       _unhex
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_devInit
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setDisplay
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setFont
   _oled_putString
     _oled_putChar
       _Set_Column_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _Set_Page_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _oled_writeData
         _SPI_Exchange8bit
   _test_powerup
     _moteApp_delayms
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_adc
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
     _test_comms
       _moteApp_delayms
       _moteApp_toggleLeds
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_leds
       _moteApp_delayms
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_switch
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      40       9       25.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D8       7       84.4%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     32      9D       5       98.1%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2F      5E       1       98.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     213      14        0.0%
DATA                 0      0     213       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Nov 13 12:34:01 2015

                            _SPI_Initialize 3430                                  _USB_SD_Ptr 7641  
               ?_moteApp_add16bToDataBuffer 00CD                                test_adc@Traw 00E4  
                                        l55 4FDC                           ??_CMP1_Initialize 00C6  
                                _USB_Buffer 0140                         moteRunningProcess@i 00E7  
                             _USBDeviceInit 51B4                     EUSART_FlushBuffer@index 00C6  
                    __end_of_oled_writeData 340C                        ??_moteApp_toggleLeds 00CB  
                        __size_of_CDCInitEP 0050                    USBapp_handlerState@state 00C6  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
      USER_USB_CALLBACK_EVENT_HANDLER@event 003F        USER_USB_CALLBACK_EVENT_HANDLER@pdata 0041  
                                       l120 4A6A                                         l310 3586  
                                       l412 63D4                                         l324 5B9A  
               __end_of_USBStdGetDscHandler 5928                                         l351 5F06  
                                       l610 75A4                                         l338 5C28  
                                       l363 5F70                                         l356 5F0C  
                                       l452 660E                                         l542 6DF2  
                                       l560 6F5A                                         l448 660C  
                                       l298 3FCE                                         l538 6D5C  
                                       l812 4234                                         l709 40D4  
                                       l583 72A6                                         l728 371E  
                                       l834 4BAA                                         l819 42A0  
                                       l596 7412                                         _BDT 000400  
                                       l599 74E2                                         _CKE 007E3E  
                                       l696 4322                                         l896 3C62  
                                       _CKP 007E34                                         _GIE 007F97  
                              __CFG_CPB$OFF 000000                                         _PR2 000FBB  
                              __CFG_CPD$OFF 000000                          _moteJoiningProcess 5EF8  
                                       _UIE 000F64                                         _UIR 000F65  
                             test_adc@count 00E7                             _timer1ReloadVal 0080  
                                _USBSuspend 3596                       ??_MOTEapp_SetDataRate 00C6  
              __end_of_moteApp_clearBuffers 3B54                        USBStdSetCfgHandler@i 0047  
                           _TMR2_Initialize 343E                                         prod 000FF3  
                                       tosl 000FFD                                         wreg 000FE8  
                            _USBDeviceTasks 5722                         MOTEapp_SetADR@state 00C6  
                            _USBDeviceState 0089                       moteApp_delayms@length 00C6  
                     ??_USBCtrlTrfRxService 0045                    __size_ofi2_USBDeviceInit 00D8  
                            ??_getsUSBUSART 00D0                                ?_EUSART_Read 0030  
                  USBEnableEndpoint@options 0038                                __CFG_LVP$OFF 000000  
                       ?_moteJoiningProcess 00D8                                        l1207 3456  
                                      l1145 34EE                                        l1049 3864  
                                      l1058 3904                                        l1351 394C  
                                      l1179 397C                                        l1625 36F8  
                                      l1626 36F6                  USBConfigureEndpoint@handle 0036  
                                      l1920 563E                                        l2459 3B94  
                                      l2469 3A7C                                        l1935 56F0  
                                      l1929 568E                                        l1890 45DE  
                                      l7311 4444                                        l7303 4424  
                                      l7323 447E                                        l7327 448C  
                                      l7337 449C                                        l9807 3888  
                                      l9823 3562                                        l9831 3708  
                                      l9771 4164                                        l9843 3744  
                                      l9791 3922                                        l9839 372E  
                                      l9863 3C14                                        l9871 3C32  
                                      STR_1 7D2D                                        STR_2 7D1E  
                                      l9793 3924                                        STR_3 7D0F  
                                      STR_4 7F63                                        l9779 38F6  
                                      l9971 3FF4                                        STR_5 7C86  
                                      STR_6 7C95                                        l9797 3866  
                                      l9981 4014                                        l9973 3FFA  
                                      STR_7 7C3C                                        STR_8 7E97  
                                      STR_9 7F6C                                        l9985 401C  
                                      l9969 3FEC                                        l9977 400A  
           __size_of_MOTEapp_TimerBasedTask 000C                                        _PEIE 007F96  
                                      u8130 403C                                        u8150 406C  
                     ??_USBCtrlTrfTxService 0030                                        u8137 4032  
                                      u8157 4062                                        _UCFG 000F62  
                                      u8355 395A                                        u8356 395C  
                                      _UEP0 000F6A                                        _UEP1 000F6B  
                                      _UEIE 000F66                                        _UEIR 000F67  
                                      _UCON 000F60                                        _TMR2 000FBC  
                   __size_of_MOTEapp_SetADR 0008                             _CDCDataInHandle 0076  
    USBStdFeatureReqHandler@current_ep_data 004B                                        _pDst 007C  
                                      _main 4F36                    ??i2_USBTransferOnePacket 0034  
         __end_of_moteApp_add8bToDataBuffer 3EE2                                        fsr1h 000FE2  
                                      fsr2h 000FDA                                        indf1 000FE7  
                                      fsr1l 000FE1                                        indf2 000FDF  
                                      fsr2l 000FD9                             _USBDeviceAttach 36D8  
                             __CFG_BORV$190 000000                                        pclat 000FFA  
                                      prodh 000FF4                                        prodl 000FF3  
                      _USBapp_setrxByteFlag 33D4                                        start 10A6  
                           ?_oled_putUint16 00D8                               __CFG_IESO$OFF 000000  
                           __end_of_EndLine 3430                      __end_of_SPI_Initialize 343E  
                          __end_of_CMP1_ISR 33BA                             ?_oled_putString 00D3  
                __end_of_USBCheckStdRequest 48C6                      ??_USBCtrlTrfOutHandler 0047  
               __size_of_moteRunningProcess 1208                            ?_oled_setDisplay 0030  
                             __CFG_MCLRE$ON 000000                            _modemBufferIndex 0092  
                 ??_USBStdFeatureReqHandler 0047                                 _TMRapp_Tick 33BA  
                      ??_moteJoiningProcess 00D9                      moteApp_delayms@counter 00C9  
             ?_USART_mySetLineCodingHandler 0030                      sendDataCommand@appData 00C9  
                         sendCommand@string 00C7                    ??_USBStdGetStatusHandler 0030  
              __end_of_USBapp_getrxByteFlag 33CA                   __size_of_DATAEE_WriteByte 0036  
                            ?_USBDeviceInit 0030                               ?_EUSART_Write 0030  
                      oled_putUint16@number 00D8              __size_of_OSCILLATOR_Initialize 0016  
                           ?_oled_writeData 0030               __end_of_OSCILLATOR_Initialize 34F8  
                                     l10101 38D6                                       l10111 38EE  
                                     l10007 3670                                       l10033 3894  
                                     l10017 3682                                       l10201 40B0  
                                     l10107 38E6                                       l11011 6468  
                                     l10141 3B6C                                       l11021 6492  
                                     l10071 47B8                                       l10151 3B8A  
                                     l10143 3B70                                       l10127 3656  
                                     l10119 3640                                       l11031 64B4  
                                     l11007 6462                                       l10065 4798  
                                     l10161 3A5C                                       l11105 6656  
                                     l11025 6498                                       l11017 6484  
                                     l10083 480C                                       l10163 3A60  
                                     l10243 410A                                       l10139 3B64  
                                     l11107 665E                                       l10501 4654  
                                     l10261 545C                                       l10309 3B26  
                                     l11221 6960                                       l11205 68F0  
                                     l11117 66A0                                       l10167 3A72  
                                     l10159 3A54                                       l10271 5494  
                                     l10263 546A                                       l10247 412E  
                                     l10239 40E2                                       l10095 38CC  
                                     l10319 3B40                                       l11143 6772  
                                     l11135 6734                                       l11119 66A8  
                                     l11063 6566                                       l12033 4236  
                                     l10281 54DA                                       l10273 54A2  
                                     l10249 4136                                       l11313 6B34  
                                     l11305 6B08                                       l11233 6974  
                                     l11225 6966                                       l11153 67B2  
                                     l11137 673C                                       l11081 65C6  
                                     l12105 5BC0                                       l10531 564C  
                                     l12043 427E                                       l10275 54B0  
                                     l10267 5478                                       l10099 38D2  
                                     l10355 465A                                       l11163 67F4  
                                     l11059 655C                                       l12211 4FDE  
                                     l12053 4290                                       l10277 54BE  
                                     l10269 5486                                       l10285 54E8  
                                     l10365 4680                                       l11413 6D56  
                                     l11341 6BC2                                       l11333 6BAC  
                                     l11317 6B3A                                       l11309 6B20  
                                     l11261 69FA                                       l11253 69EC  
                                     l11229 696E                                       l11165 67FC  
                                     l11085 65F0                                       l10543 5680  
                                     l10519 355A                                       l10279 54CC  
                                     l10287 5508                                       l10463 4384  
                                     l10375 46B0                                       l10359 4670  
                                     l10391 376C                                       l11191 68BC  
                                     l11183 6886                                       l12119 5BEC  
                                     l10631 4AA2                                       l10537 565C  
                                     l12049 428A                                       l11441 6DFC  
                                     l11361 6C3A                                       l11345 6BC8  
                                     l11337 6BB4                                       l11281 6A74  
                                     l11257 69F4                                       l11249 69E4  
                                     l11097 6618                                       l11089 65FE  
                                     l12137 5C2A                                       l12129 5C16  
                                     l12073 5B6E                                       l12065 5B5C  
                                     l10625 4A86                                       l10617 4A3E  
                                     l12217 4FEE                                       l12225 4FFE  
                                     l10491 460E                                       l10811 5F9C  
                                     l10803 5F6A                                       l10467 438A  
                                     l10299 3B12                                       l10379 46E2  
                                     l11507 6FB4                                       l11419 6D72  
                                     l11187 68A0                                       l11195 68D6  
                                     l12163 5CCA                                       l10619 4A54  
                                     l10557 56AA                                       l10565 56C8  
                                     l10549 5692                                       l10493 4612  
                                     l10805 5F76                                       l11701 742E  
                                     l11517 6FF6                                       l11461 6E72  
                                     l11437 6DF8                                       l11373 6C62  
                                     l11365 6C42                                       l11285 6A7C  
                                     l11277 6A6C                                       l11197 68DE  
                                     l12149 5C74                                       l12093 5BA8  
                                     l12085 5B8C                                       l10637 4AB4  
                                     l10583 5700                                       l10567 56CE  
                                     l10575 56EC                                       l10831 603E  
                                     l10399 377E                                       l11623 71FE  
                                     l11543 7062                                       l11519 6FFE  
                                     l12167 5CDE                                       l12079 5B80  
                                     l10585 571E                                       l10497 4632  
                                     l10913 625C                                       l11617 71F4  
                                     l11561 70BA                                       l11457 6E6C  
                                     l11393 6CDC                                       l11369 6C4A  
                                     l11289 6A96                                       l12169 5CF0  
                                     l12089 5B9C                                       l11803 4BD0  
                                     l10923 62AA                                       l10835 604C  
                                     l11643 725C                                       l11635 724E  
                                     l11619 71F6                                       l11539 7058  
                                     l11467 6E78                                       l10771 3C66  
                                     l10763 3C3E                                       l10829 603A  
                                     l11565 70D4                                       l11557 70A2  
                                     l11493 6F2A                                       l11485 6F06  
                                     l11397 6CE4                                       l11389 6CD4  
                                     l11469 6EB6                                       l12197 4F84  
                                     l10855 60D2                                       l10847 60A4  
                                     l11727 74EC                                       l11663 730A  
                                     l11671 7374                                       l11639 7254  
                                     l10775 3C78                                       l10937 6300  
                                     l10929 62C6                                       l10881 617A  
                                     l10865 6106                                       l10849 60A8  
                                     l10793 5F26                                       l11737 752C  
                                     l11657 72D2                                       l11673 7380  
                                     l11569 70E0                                       l11497 6F46  
                                     l10777 3C7A                                       l10769 3C5E  
                                     l10697 4C86                                       l11931 520C  
                                     l11819 4C10                                       l10963 637E  
                                     l10939 6304                                       l10875 6150  
                                     l10859 60E0                                       l10795 5F2A  
                                     l11755 757C                                       l11747 7562  
                                     l11667 7340                                       l11595 7186  
                                     l11587 715E                                       l10779 3C7E  
                                     l11925 51E0                                       l11829 4C32  
                                     l10981 63CC                                       l10957 636A  
                                     l10949 633C                                       l10885 619A  
                                     l10789 5F0E                                       l11765 75A0  
                                     l11677 738A                                       l10975 63B8  
                                     l10991 6432                                       l11759 758E  
                                     l11687 73CC                                       l10985 63DC  
                                     l10969 638C                                       l11697 7400  
                                     l11891 384E                                       l11955 5228  
                                     l11939 5216                                       l10979 63C6  
                                     l10899 61F6                                       l11779 75EC  
                                     l10989 63EC                                       l11887 383E  
                                     ?_main 0030                             __end_of___lbdiv 38F2  
                                     _EEADR 000FA9                                       STR_10 7E03  
                                     STR_11 7EA3                                       STR_20 7F75  
                                     STR_12 7E2A                                       STR_21 7FFD  
                                     STR_13 7E10                                       STR_30 7FEF  
                                     STR_14 7E1D                                       STR_22 7A72  
                                     STR_23 7F05                                       STR_15 7EE6  
                                     STR_31 7DF6                                       STR_32 7FF2  
                                     STR_24 7F51                                       STR_40 7F3F  
                                     STR_16 7F23                                       STR_17 7F7E  
                                     STR_41 7EFB                                       STR_33 7D66  
                                     STR_25 7B54                                       STR_18 7FA7  
                                     STR_34 7F5A                                       STR_42 7EC5  
                                     STR_50 7D58                                       STR_26 7BA9  
                                     STR_51 7D4A                                       STR_43 7FCC  
                                     STR_19 7FAF                                       STR_35 7F9F  
                                     STR_27 7BBA                                       STR_60 7EBA  
                                     STR_44 7DF6                                       STR_52 7EBA  
                                     STR_36 7E73                                       STR_28 7B10  
                                     STR_53 7F3F                                       STR_37 7F14  
                                     STR_61 7F8F                                       STR_45 7F19  
                                     STR_29 7E8B                                       STR_70 7FF2  
                                     STR_46 7FF2                                       STR_62 7F97  
                                     STR_54 7EAF                                       STR_38 7D4A  
                                     STR_55 7EC5                                       STR_39 7DF6  
                                     STR_71 7ED0                                       STR_47 7D66  
                                     STR_63 7E7F                                       STR_56 7FCC  
                                     STR_64 7D0C                                       STR_48 7EDB  
                                     STR_80 7BEC                                       STR_72 7B65  
                                     STR_49 7F36                                       STR_57 7F0F  
                                     STR_65 7ED0                                       STR_73 7E43  
                                     STR_81 7BDC                                       STR_90 7BEC  
                                     STR_82 7BFC                                       STR_66 7C28  
                                     STR_58 7FC5                                       STR_74 7D81  
                                     STR_91 7BDC                                       STR_59 7D4A  
                                     STR_67 7ED0                                       STR_75 7BFC  
                                     STR_83 7ACC                                       STR_92 7BFC  
                                     STR_68 7D58                                       STR_76 7FF9  
                                     STR_84 7ABB                             __end_of___lbmod 365E  
                                     STR_85 7BFC                                       STR_69 7ED0  
                                     STR_77 7E67                                       STR_93 7AFF  
                                     STR_86 7BEC                                       STR_78 7FFB  
                                     STR_94 7B32                                       STR_95 7BFC  
                                     STR_87 7FBE                                       STR_79 7D3C  
                                     STR_96 7FF7                                       STR_88 7FB7  
                                     STR_89 7FF9                                       STR_97 7C79  
                                     STR_98 7C88                                       STR_99 7C97  
         __size_of_USBCtrlEPServiceComplete 00D4                             _TMR1_StartTimer 33BE  
                           __end_of___lldiv 4232           __size_of_MOTEapp_setResponseReady 0002  
                                     _T1CON 000FCD                      __end_of_USBDeviceTasks 5824  
                                     u10547 5294                                       u10557 52A2  
                                     u10567 52B8                                       _T2CON 000FBA  
                                     u10577 52CC                                       u10587 3976  
                                     u10597 370E                     __end_of_sendDataCommand 46EC  
                 ?_USBCtrlEPServiceComplete 0030                             __end_of___lwdiv 3B9E  
                           __end_of___lwmod 3A86                   ?_MOTEapp_setResponseReady 0030  
                       oled_putUint8@number 00DA                                       _UADDR 000F63  
                                     _RCREG 000FAE                                       _RCSTA 000FAB  
                                     _TMR1H 000FCF                                       _TMR1L 000FCE  
                                     _SPBRG 000FAF    moteApp_add16bToDataBuffer@bufferLocation 00CF  
   moteApp_add8bToDataBuffer@bufferLocation 00CA                                       _USTAT 000F61  
                                     _TXREG 000FAD                                       _TXSTA 000FAC  
                             __CFG_WRT0$OFF 000000          __size_of_USBCtrlEPAllowStatusStage 00B6  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                         moteHandler@i_1340 00F6                               __CFG_WRT3$OFF 000000  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                            __CFG_EBTR3$OFF 000000             __end_of_USBCtrlEPAllowDataStage 45C4  
                         oled_putChar@index 00D2                            __end_of_TMR1_ISR 3510  
                                     _sd000 7A06                                       _sd001 798C  
           service_pushbutton@Release_Timer 009B                                       _sd002 79C0  
                             __CFG_WRTB$OFF 000000                      moteRunningProcess@Traw 00E5  
                             __CFG_WRTC$OFF 000000                               __CFG_WRTD$OFF 000000  
                           _DATAEE_ReadByte 34B8                              __CFG_EBTRB$OFF 000000  
                                i2memset@p1 0030                                       _light 007A  
                                     _unhex 3756                     __end_of_TMR1_Initialize 37D8  
                              _runningState 0096                                       pclath 000FFA  
                                     tablat 000FF5                 MOTEapp_SetDataRate@dataRate 00C6  
                                     plusw2 000FDB                           __end_of_CDCInitEP 3CD2  
                oled_setDisplay@displayType 00C8                                ?_modemResync 0030  
                                     status 000FD8                              __CFG_T3CMX$RC0 000000  
                           _TMR2_StartTimer 33C2                             __end_of_strncmp 414C  
                           ___lbdiv@divisor 00C6                              __CFG_ICPRT$OFF 000000  
                     ?_USBapp_setrxByteFlag 0030                            __end_ofi2_memset 37AC  
                           ___lbdiv@counter 00C8                                _m10SecTicker 0091  
                           ?_SPI_Initialize 0030                             putUSBUSART@data 00C6  
        USART_mySetLineCodingHandler@dwBaud 0041                __size_of_USBStdSetCfgHandler 00AE  
                           __initialization 3E2A                       TMR2_ReadTimer@readVal 00C6  
             __size_of_TMRapp_ClearBitFlags 0004                                __end_of_main 5008  
             __size_of_MOTEapp_handlerState 0008                      _MOTEapp_TimerBasedTask 3418  
                            ??_EUSART_Write 00C6                     __end_of_TMR2_Initialize 344E  
                              ?_sendCommand 00C7                 ?_INTERRUPT_InterruptManager 0030  
                 __size_of_USBCtrlEPService 00BA                                      ??_main 00F8  
                              ?_moteHandler 0030                               __activetblptr 000002  
                        _modemResonseBuffer 0180                             ?_USBDeviceTasks 0030  
                       i2_EUSART_Initialize 37D8                       oled_putUint16@numData 00DC  
                 sendDataCommand@dataLength 00CA                                 ?_USBSuspend 0030  
                                _NextUSBOut 0015                              __CFG_SDOMX$RB3 000000  
                           __CFG_CCP2MX$RC1 000000                                _cdc_mem_type 008D  
                  __end_of_SPI_Exchange8bit 345E                     __end_of_USBDeviceAttach 3702  
                                    _ADCON0 000FC2                                      _ADCON1 000FC1  
                                    _ADCON2 000FC0                            _CDCDataOutHandle 0078  
                         _getsUSBUSART$5736 00D1                                      _ACTCON 000FB5  
                                    STR_100 7CA6                                      STR_101 7FF5  
                                    STR_110 7FF5                                      STR_102 7FF5  
                                    STR_111 7FF5                                      STR_103 7FF5  
                                    STR_120 7FF5                                      STR_112 7FF5  
                                    STR_104 7FF5                                      STR_200 7AEE  
                                    STR_121 7FF5                                      STR_113 7FF5  
                                    STR_105 7FF7                                      STR_201 7ADD  
                                    STR_202 7BFC                                      STR_130 7FF5  
                                    STR_122 7FF5                                      STR_106 7C79  
                                    STR_114 7FF7                                      STR_210 7E4F  
                                    _ADRESH 000FC4                                      STR_131 7FF5  
                                    STR_115 7C88                                      STR_107 7C88  
                                    STR_123 7FF7                                      STR_211 7FF2  
                                    STR_203 7B98                                      STR_140 7FF5  
                                    STR_124 7C97                                      STR_116 7C97  
                                    STR_108 7C97                                      STR_132 7FF7  
                                    STR_212 7FE1                                      STR_204 7D74  
                                    STR_220 7C2C                                      STR_221 7AFF  
                                    STR_133 7CA6                                      STR_125 7CA6  
                                    STR_117 7CA6                                      STR_109 7CA6  
                                    STR_141 7FF7                                      STR_213 7B21  
                                    STR_205 7A86                                      STR_230 7E60  
                                    STR_206 7D3C                                      STR_222 7B32  
                                    STR_142 7CB5                                      STR_134 7CB5  
                                    STR_126 7CB5                                      STR_150 7FF7  
                                    STR_118 7CB5                                      STR_214 7AAA  
                                    _ADRESL 000FC3                                      STR_231 7C59  
                                    STR_223 7BFC                                      STR_207 7E67  
                                    STR_119 7FF5                                      STR_151 7CC4  
                                    STR_143 7CC4                                      STR_135 7CC4  
                                    STR_215 7FE8                                      STR_127 7CC4  
                                    STR_240 7BDC                                      STR_232 7AEE  
                                    STR_128 7FF5                                      STR_160 7CD3  
                                    STR_152 7CD3                                      STR_144 7CD3  
                                    STR_208 7E5B                                      STR_136 7CD3  
                                    STR_216 7B76                                      STR_224 7B43  
                                    STR_233 7ADD                                      STR_241 7BFC  
                                    STR_209 7D81                                      STR_137 7FF5  
                                    STR_129 7FF5                                      STR_161 7CE2  
                                    STR_153 7CE2                                      STR_217 7FDA  
                                    STR_145 7CE2                                      STR_225 7C5B  
                                    STR_170 7C4C                                      STR_234 7BFC  
                                    STR_146 7FF5                                      STR_138 7FF5  
                                    STR_162 7CF1                                      STR_250 7DDC  
                                    STR_242 7D00                                      STR_154 7CF1  
                                    STR_226 7C6A                                      STR_218 7A98  
                                    STR_227 7BFC                                      STR_155 7FF5  
                                    STR_147 7FF5                                      STR_139 7FF5  
                                    STR_171 7C79                                      STR_219 7FD3  
                                    STR_251 7DE9                                      STR_163 7C4C  
                                    STR_243 7C1C                                      STR_235 7B87  
                                    STR_180 7FF5                                      STR_172 7FF5  
                                    STR_164 7FF5                                      STR_156 7FF5  
                                    STR_148 7FF5                                      STR_252 7F48  
                                    STR_260 7E37                                      STR_244 7D8E  
                                    STR_236 7C0C                                      STR_228 7BCB  
                                    STR_237 7C6A                                      STR_181 7FF5  
                                    STR_173 7FF5                                      STR_165 7FF5  
                                    STR_157 7FF5                                      STR_149 7FF5  
                                    STR_229 7EF1                                      STR_245 7D9B  
                                    _EEDATA 000FA8                                      STR_238 7C5B  
                                    STR_190 7FF5                                      STR_182 7FF5  
                                    STR_174 7FF5                                      STR_166 7FF5  
                                    STR_158 7FF5                                      STR_246 7DA8  
                                    STR_254 7A3E                                      STR_191 7ACC  
                                    STR_239 7BEC                                      STR_183 7FF7  
                                    STR_175 7FF7                                      STR_167 7FF7  
                                    STR_159 7FF7                                      STR_247 7DB5  
                                    STR_255 7A58                                      STR_184 7C4C  
                                    STR_192 7ABB                                      STR_168 7CE2  
                                    STR_176 7CF1                                      STR_248 7DC2  
                                    STR_256 7A0A                                      STR_177 7C4C  
                                    STR_193 7BFC                                      STR_185 7C79  
                                    STR_169 7CF1                                      STR_249 7DCF  
                                    STR_257 7A24                                      STR_194 7C59  
                                    STR_178 7C79                                      STR_186 7C88  
                                    STR_258 7F2D                                      STR_195 7FF5  
                                    STR_179 7C88                                      STR_187 7C97  
                                    STR_259 7F87                                      STR_196 7FF5  
                                    STR_188 7FF5                                      STR_197 7C59  
                                    STR_189 7FF5                                      STR_198 7C59  
                                    STR_199 7C59                                      _EECON2 000FA7  
                                    ?_unhex 0030           __size_of_MOTEapp_getModemResponse 004C  
                           getsUSBUSART@len 00CF                                      _T1GCON 000FCC  
                      oled_putUint8@numData 00DB                   ?_MOTEapp_getModemResponse 0030  
                     __size_of_CDCTxService 0100                                      i2l1113 1074  
                                    i2l1105 1048                                      i2l1107 1058  
                                    i2l1109 1064                                      i2l1064 36D4  
                                    i2l1702 5846                                      i2l1703 58C4  
                                    i2l1713 43A8                                      i2l1706 5910  
                                    i2l1650 507C                                      i2l1811 5E76  
                                    i2l1803 5DFC                                      i2l1708 5914  
                                    i2l1716 440E                                      i2l1717 43B2  
                                    i2l1718 43B6                                      i2l1726 3A44  
                                    i2l1576 574A                                      i2l1753 3CDC  
                                    i2l1586 57C6                                      i2l1763 4F0A  
                                    i2l1755 3D20                                      i2l1587 5820  
                                    i2l2396 4220                                      i2l1764 4ED2  
                                    i2l1588 57CC                                      i2l1870 473A  
                                    i2l1792 5D12                                      i2l1793 5D10  
                                    i2l1777 4834                                      i2l1786 4876  
                                    i2l6203 48F8                                      i2l7011 5020  
                                    i2l6215 494C                                      i2l7111 4842  
                                    i2l7015 5026                                      i2l7121 4856  
                                    i2l7113 4846                                      i2l6171 4508  
                                    i2l6403 3BA0                                      i2l7123 485A  
                                    i2l6405 3BA4                                      i2l6501 379A  
                                    i2l7125 485E                                      i2l7109 483E  
                                    i2l7029 5090                                      i2l7037 509C  
                                    i2l7071 5A76                                      i2l7135 4888  
                                    i2l7065 5A5C                                      i2l6185 3A94  
                                    i2l6329 39EC                                      i2l6409 3BA8  
                                    i2l6443 4DC8                                      i2l7083 5ACC  
                                    i2l6371 476A                                      i2l7139 489A  
                                    i2l6453 4DF0                                      i2l6461 4E26  
                                    i2l6365 4754                                      i2l6357 472C  
                                    i2l6349 4714                                      i2l6189 3AA2  
                                    i2l6197 48D6                                      i2l6463 4E2C  
                                    i2l6471 4E62                                      i2l6439 4DC0  
                                    i2l7087 5AE6                                      i2l9111 4D32  
                                    i2l6481 41E0                                      i2l7097 5B42  
                                    i2l6377 4770                                      i2l6801 5D6A  
                                    i2l6721 49F8                                      i2l6491 4212  
                                    i2l6483 41E4                                      i2l6811 5D9C  
                                    i2l9123 4D90                                      i2l9125 4D94  
                                    _TABLAT 000FF5                                      i2l6479 41D4  
                                    i2l6647 4B06                                      i2l6815 5DAE  
                                    i2l9151 5132                                      i2l6825 5DEA  
                                    i2l6809 5D9A                                      i2l6729 5834  
                                    i2l6497 378A                                      i2l9145 5108  
                                    i2l6827 5E14                                      i2l6739 58C8  
                                    i2l6747 5918                                      i2l6675 457E  
                                    i2l9091 3A42                                      i2l9067 3630  
                                    i2l6853 5EC2                                      i2l6837 5E56  
                                    i2l9069 3632                                      i2l6855 5ECE  
                                    i2l6847 5E8A                                      i2l6839 5E62  
                                    i2l6759 43CA                                      i2l6679 4592  
                                    i2l9175 5150                                      i2l9159 513C  
                                    i2l7753 4F30                                      i2l7745 4EF0  
                                    i2l7729 4E96                                      i2l6769 4400  
                                    i2l9507 36A8                                      i2l7755 4F32  
                                    i2l6699 499A                                      i2l9611 5818  
                                    i2l9603 57EC                                      i2l9531 5742  
                                    i2l9523 5736                                      i2l9609 5802  
                                    i2l9553 5768                                      i2l9545 575C  
                                    i2l9493 36D0                                      i2l9583 57BA  
                                    i2l9575 579E                                      i2l9559 5784  
                                    i2l9569 5794                                      i2l9499 368E  
                                    i2l9691 1070                                   ??_EndLine 00C7  
                                    _OSCCON 000FD3                               CDCTxService@i 00CF  
                                    _SPBRGH 000FB0                                      _SSPBUF 000FC9  
                  i2USBTransferOnePacket@ep 0034                           ??i2_USBDeviceInit 0038  
           __size_ofi2_USBTransferOnePacket 00A2                        ?i2_EUSART_Initialize 0030  
                      oled_displayOff@state 00C8                               oled_putChar@k 00D1  
                         _shortPacketStatus 0027              moteRunningProcess@changeStates 00EE  
                            __CFG_XINST$OFF 000000                        _moteApp_clearBuffers 3B0E  
                           USBDeviceTasks@i 0052                  __end_of_Set_Column_Address 3542  
               USBStdFeatureReqHandler@pUEP 0049                            __end_of_hexToStr 3684  
                  USBTransferOnePacket@data 00C7                  USBCtrlTrfInHandler@lastDTS 0045  
                           ??_USBDeviceInit 00CE                   __size_of_Set_Page_Address 0012  
                   __end_of_TMR1_StartTimer 33C2                                ?_putUSBUSART 00C6  
                                 ??___lbdiv 00C7                              __CFG_STVREN$ON 000000  
                    modemResync@escapeEvent 00CD                                   ??___lbmod 00C7  
                                 ??___lldiv 0038                        __end_of_getsUSBUSART 4658  
                                 ??___lwdiv 00CA                                   ??___lwmod 00CA  
                         _USBEnableEndpoint 3A86             __size_of_USBStdGetStatusHandler 0084  
                       _EUSART_Transmit_ISR 36AE                                      _memset 3834  
                                    clear_0 3E30                                      clear_1 3E3C  
                                    clear_2 3E48                                      clear_3 3E54  
                        ?_USBEnableEndpoint 0038              ??_USART_mySetLineCodingHandler 003D  
                   __end_of_DATAEE_ReadByte 34CC                                      _strcmp 4424  
                __end_of_ADC_TempConversion 35F4               __size_of_USBTransferOnePacket 009E  
                          ?_sendDataCommand 00C7                             _moteApp_delayms 3702  
               __size_of_service_pushbutton 004C                                _CDCTxService 5622  
                              __mediumconst 7640                            __end_of_test_adc 4CEE  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                         ??_USBEnableEndpoint 0039  
                  ADC_GetConversion@channel 00CA                                      unhex@c 00C6  
                                 ?_CMP1_ISR 0030                     __end_of_TMR2_StartTimer 33C6  
                               _CtrlTrfData 000438              __size_of_MOTEapp_WriteDataRate 00EC  
                                 ??_strncmp 00CC                            ___lbdiv@dividend 00C7  
                             ?_oled_devInit 0030                        ?_EUSART_Transmit_ISR 0030  
             __end_of_MOTEapp_WriteDataRate 552E                        _controlTransferState 001F  
                            _MOTEapp_SetADR 33EA                        _USBapp_getrxByteFlag 33C6  
                          ?_TMR1_Initialize 0030                        __CFG_LS48MHZ$SYS48X8 000000  
                      __size_of_EUSART_Read 002E                           _SYSTEM_Initialize 35B4  
              __size_of_USBapp_handlerState 0008                             ___lbmod@divisor 00C6  
                                __accesstop 0060                     __end_of__initialization 3E7A  
                    ??_USBapp_setrxByteFlag 0030                             ___lbmod@counter 00C8  
                           __CFG_PBADEN$OFF 000000                                ?_test_switch 0030  
                     ??i2_EUSART_Initialize 0030                             _CMP1_Initialize 345E  
                        ?_SYSTEM_Initialize 0030                          oled_writeData@data 00C7  
                             ?_oled_setFont 00C6                    __size_of_USBStallHandler 003E  
                             ?_oled_putChar 00C9                       ?_moteApp_clearBuffers 0030  
                       __size_of_USBSuspend 001E                 __size_of_EUSART_FlushBuffer 002E  
                            __pcstackCOMRAM 0030                   __end_of_USBEnableEndpoint 3AC8  
                          __CFG_nPWRTEN$OFF 000000                               __end_of_sd000 7A0A  
                             __end_of_sd001 79C0                               __end_of_sd002 79F4  
                              __pidataBANK0 33CF                         ??_SYSTEM_Initialize 00C8  
                 oled_putUint16@station_dot 00DA                                   ?_TMR1_ISR 0030  
          __size_of_USBCtrlEPAllowDataStage 008E                            _DATAEE_WriteByte 3928  
             __size_of_USBConfigureEndpoint 008C                               __end_of_unhex 3780  
               __end_of_USBCtrlTrfInHandler 4F36                            ?_TMR2_Initialize 0030  
                          ___lbdiv@quotient 00C9                      i2_USBTransferOnePacket 48C6  
                           __CFG_PCLKEN$OFF 000000                              __CFG_nLPBOR$ON 000000  
                         __end_of_OledFont0 7949                           _CDCTxService$5784 00CD  
                                _cdc_notice 00A8                                   ?i2_memset 0030  
                                _cdc_rx_len 001D                                  _cdc_tx_len 008E  
                                ??_CMP1_ISR 0030                             _responsePortNum 00C1  
                  ??_USBCtrlTrfSetupHandler 004F                      __end_of_MOTEapp_SetADR 33F2  
                                _dataBuffer 009C                              ??_oled_devInit 00C8  
                          ?_USBDeviceAttach 0030                   __end_of_SYSTEM_Initialize 35D4  
                     ??_EUSART_Transmit_ISR 0030                      _USBStdGetStatusHandler 43A0  
                                   ??_unhex 00C6                       ?_USBapp_getrxByteFlag 0030  
                      service_pushbutton@bs 00C6                            ??_oled_putUint16 00DC  
                                __pbssBANK0 0060                                  __pbssBANK1 0100  
                                __pbssBANK2 0200                        __end_of_EUSART_Write 3928  
                   __size_of_TMR2_ReadTimer 0008                            ??_oled_putString 00D7  
                            ??_oled_setFont 00C8                 __size_of_EUSART_Receive_ISR 002A  
                       oled_putString@index 00D7                              ??_oled_putChar 00CB  
               __size_of_USBWakeFromSuspend 0024                                 _pBDTEntryIn 0009  
                    __size_of_oled_clearRow 001C                        __size_of_modemResync 0066  
                  sendDataCommand@byteCount 00CC            __end_of_USBCtrlEPServiceComplete 50DC  
          __end_of_MOTEapp_setResponseReady 1006                      oled_putChar@start_page 00CA  
               __size_of_USBCheckCDCRequest 009C                           __CFG_PLLSEL$PLL3X 000000  
                        __size_of_oled_init 0020                            ??_oled_writeData 00C7  
                      USBCtrlTrfRxService@i 0045                                ?_TMRapp_Tick 0030  
                          ?_TMR1_StartTimer 0030                                  ??_TMR1_ISR 0030  
                  oled_putUint16@start_page 00DB                     __end_of_moteApp_delayms 372C  
                                   _CM1CON0 000F98          MOTEapp_getModemResponse@bufferByte 00C8  
               __end_of_MOTEapp_SetDataRate 33FA                     __size_of_USBapp_Handler 0076  
                   __size_of_TMRapp_Handler 00DE                moteRunningProcess@dummyRead1 00E9  
              moteRunningProcess@dummyRead2 00EA                                     _BAUDCON 000FB8  
                                   ?_memset 00C6                                  _device_dsc 79F4  
                 Set_Column_Address@address 00C8                    __size_of_oled_displayOff 0012  
                          _USBCtrlEPService 4CEE                 __size_of_moteApp_toggleLeds 0068  
                                _ep_data_in 006A                     __size_of_ADC_Initialize 0016  
                                   ?_strcmp 00C6                            ?_DATAEE_ReadByte 0030  
               __end_of_USBCtrlTrfRxService 5B4C                        __size_of_sendCommand 002A  
                        _USBCheckStdRequest 4826                               _eusartRxCount 0090  
                         _configDescriptor1 7949                                     i2l12267 3BBC  
                                   i2l12269 3BE6                                     _RS232cp 0017  
                           __CFG_WDTEN$SWON 000000                          __size_of_test_leds 0054  
                                ??i2_memset 0036                          __size_of_test_oled 007A  
               __end_of_USBCtrlTrfTxService 4E68                        __size_of_moteHandler 01AA  
                       _USBStdSetCfgHandler 4968                                     _OSCCON2 000FD2  
                                   _TBLPTRH 000FF7                                     _TBLPTRL 000FF6  
                                   _TBLPTRU 000FF8                                     _OSCTUNE 000F9B  
                    __size_of_oled_putUint8 0058                                     _SSP1ADD 000FC8  
                           ?_MOTEapp_SetADR 0030                     __end_of_CMP1_Initialize 3470  
                       ?_USBCheckStdRequest 0030                            ?_TMR2_StartTimer 0030  
              __size_of_USBStdGetDscHandler 0104                                     _UIEbits 000F64  
                                 ?_hexToStr 0030                                     _UIRbits 000F65  
                    test_switch@buttonCheck 00DA             moteRunningProcess@bufferReadPos 00ED  
                          ??_SPI_Initialize 00C6                                     _EndLine 3424  
                             _cdc_trf_state 001E                        DATAEE_WriteByte@bAdd 00C7  
                __end_of_moteRunningProcess 7640                      ??_moteApp_clearBuffers 00C6  
                ?_moteApp_add8bToDataBuffer 00CA                                     _pCDCDst 0070  
                                   _pCDCSrc 0073                       __size_of_getsUSBUSART 0094  
                                   __Hparam 0000                        ?_USBStdSetCfgHandler 0030  
                                 _CDCInitEP 3C82                     ?_MOTEapp_TimerBasedTask 0030  
                                   __Lparam 0000                    moteRunningProcess@i_1410 00E8  
                __size_of_USBEnableEndpoint 0042                         moteHandler@s2Button 00F3  
                          _Set_Page_Address 3470                                   ?_test_adc 0030  
                      ??_USBCheckStdRequest 004E                moteRunningProcess@sleepEvent 00E4  
                         _timerMinTickCount 0082               __size_of_USBCtrlTrfOutHandler 0052  
               __size_of_moteJoiningProcess 0540                                     ___lbdiv 38BE  
                                   ___lbmod 3638                                     ___lldiv 41BC  
                          ??_USBDeviceTasks 0052                                     ___lwdiv 3B54  
                         ??_USBStallHandler 0030                                     ___lwmod 3A48  
                      __size_of_putUSBUSART 001C                                     __pcinit 3E2A  
                        getsUSBUSART@buffer 00CD                             __size_of_memset 002E  
                 __end_of_configDescriptor1 798C                                     __ramtop 0800  
                         hexToStr@character 00C6            __end_of_MOTEapp_getModemResponse 3C36  
                                   __ptext0 4F36                                     __ptext1 3996  
                                   __ptext2 4A16                                     __ptext3 42A8  
                                   __ptext4 3D24                                     __ptext5 3DD0  
                                   __ptext6 4078                                     __ptext7 4C36  
                                   __ptext8 5B4C                                     __ptext9 3C36  
                  __size_of_oled_setDisplay 0012                                     _inPipes 0028  
               _USBDeferOUTDataStagePackets 0088                             __size_of_strcmp 0086  
                 moteRunningProcess@counter 00EB                            oled_setFont@font 00C6  
                                 _T1CONbits 000FCD                       _OSCILLATOR_Initialize 34E2  
                              ??_USBSuspend 0047                               _oled_clearRow 355E  
                                 _T2CONbits 000FBA                                  _modemSleep 357A  
           moteApp_add8bToDataBuffer@number 00CB                                  _oled_clear 3510  
                  ??_PIN_MANAGER_Initialize 00C6                __end_of_TMRapp_ClearBitFlags 33CE  
                              _LastRS232Out 0014                             i2_USBDeviceInit 50DC  
                          i2USBDeviceInit@i 0038                           __end_of_oled_init 3614  
                         ?_SPI_Exchange8bit 0030                __end_of_MOTEapp_handlerState 33E2  
                    ??_USBapp_getrxByteFlag 00C6                          __end_of_USB_CD_Ptr 7649  
                __size_of_SYSTEM_Initialize 0020             __size_of_USBCtrlTrfSetupHandler 0062  
                                ??_hexToStr 00C6                                     _strncmp 40E0  
                      end_of_initialization 3E7A                                _getsUSBUSART 45C4  
             sendDataCommand@byteCount_1637 00CD                          ??_SPI_Exchange8bit 00C6  
                      SPI_Exchange8bit@data 00C6                          __end_of_USB_SD_Ptr 7647  
                       _pBDTEntryEP0OutNext 0011                                     memset@c 00C8  
                                   memset@n 00CA                                     memset@p 00CC  
                             __Lmediumconst 7640             _dummy_encapsulated_cmd_response 01D0  
                  ?_USBStdFeatureReqHandler 0030              __end_of_MOTEapp_TimerBasedTask 3424  
                         _EUSART_Initialize 3806                                  _rxByteFlag 0026  
                     ??_USBStdSetCfgHandler 0047                             ___lldiv@divisor 0034  
                      __size_of_test_switch 00B2                                  ?_CDCInitEP 0030  
                           ___lldiv@counter 003C                           __end_of_test_leds 3D78  
                         __end_of_test_oled 4322                          ?_EUSART_Initialize 0030  
                             _oled_putUint8 3D78                          __end_of_USBSuspend 35B4  
            ??_USBapp_CdcEmulatorInitialize 003E                     _USBCtrlEPAllowDataStage 4536  
                                 _RCSTAbits 000FAB                                  ??_test_adc 00E2  
                        test_switch@timeout 00D8                                     postdec1 000FE5  
                                   postdec2 000FDD                                     postinc0 000FEE  
                                   postinc2 000FDE                        __end_of_oled_devInit 5364  
                  _USBCtrlEPServiceComplete 5008                     moteApp_toggleLeds@state 00CB  
                                _responseId 01C0                            ?_moteApp_delayms 00C6  
                             _randomPortNum 0095                    _MOTEapp_setResponseReady 1004  
                _USBStatusStageEnabledFlag1 001A                  _USBStatusStageEnabledFlag2 001B  
                       _USBapp_handlerState 33E2                         ??_EUSART_Initialize 00C6  
                        USBEnableEndpoint@p 003B                                   _PORTAbits 000F80  
                                 _PORTCbits 000F82                     oled_putUint8@start_page 00D9  
                            ?_oled_clearRow 0030                                  _test_comms 3DD0  
                      __end_of_oled_setFont 34B8                          _Set_Column_Address 3528  
                      __end_of_oled_putChar 41BC                            ___lbmod@dividend 00C7  
                                 _TRISAbits 000F92                                   _TRISBbits 000F93  
                                 _TRISCbits 000F94                           ??_oled_displayOff 00C8  
                     __size_of_EUSART_Write 0036                          _BothEP0OutUOWNsSet 0013  
                             ?_test_powerup 0030                            ?_CMP1_Initialize 0030  
                 USBConfigureEndpoint@EPNum 0035                  ?_USBCtrlEPAllowStatusStage 0030  
                  __end_of_DATAEE_WriteByte 395E                         ?_Set_Column_Address 0030  
            moteRunningProcess@counter_1556 00EC         USER_USB_CALLBACK_EVENT_HANDLER@size 0043  
                            _TMR2_ReadTimer 33FA                                   _USTATcopy 002F  
                         __size_of_CMP1_ISR 0004                        ?_USBapp_handlerState 0030  
                        _ADC_TempConversion 35D4                    oled_putString@start_page 00D6  
                               _CM1CON0bits 000F98                                 ___lbmod@rem 00C9  
                 __end_of_EUSART_Initialize 3834                __end_of_USBTransferOnePacket 4826  
                               _CM2CON1bits 000F9A                                   _TXSTAbits 000FAC  
                           moteHandler@Traw 00F1                              ?_oled_putUint8 00D8  
                         putUSBUSART@length 00C8                         ?_ADC_TempConversion 0030  
                    _USBCtrlTrfSetupHandler 3EE2                        ??_Set_Column_Address 00C8  
                   ?i2_USBTransferOnePacket 0030                       __end_of_USBDeviceInit 528C  
                            _TMRapp_Handler 5364                              _USBapp_Handler 4232  
                      __size_of_TMRapp_Tick 0004                ??_moteApp_add16bToDataBuffer 00D0  
                              _EUSART_Write 38F2                       sendDataCommand@string 00C7  
                   __end_ofi2_USBDeviceInit 51B4                           __size_of_TMR1_ISR 0018  
                __end_of_service_pushbutton 3C82                              _ADC_Initialize 34CC  
               moteApp_clearBuffers@counter 00C6                     moteApp_GoToSleep@status 00D5  
                                 i2memset@c 0032                                   i2memset@n 0034  
                                 i2memset@p 0036                      ?_OSCILLATOR_Initialize 0030  
                            __end_of_memset 3862                           _USBBusIsSuspended 0086  
                  oled_writeCommand@command 00C7                                 ?_modemSleep 0030  
                            __end_of_strcmp 44AA                                 ?_oled_clear 0030  
                       start_initialization 3E2A                        ??_ADC_TempConversion 00CD  
                   ?_USBStdGetStatusHandler 0030               USBCtrlTrfRxService@byteToRead 0046  
                            ??_test_powerup 00E8                    _MOTEapp_getModemResponse 3BEA  
           __size_of_PIN_MANAGER_Initialize 0046                           ??_oled_setDisplay 00C8  
                             ??_EUSART_Read 00C6                      __end_of_TMR2_ReadTimer 3402  
                               _cdc_data_rx 000540                                 _cdc_data_tx 000500  
               __end_ofi2_EUSART_Initialize 3806                           __size_ofi2_memset 002C  
                                 _OledFont0 7649                __end_of_USBConfigureEndpoint 4536  
           __end_of_USBStdFeatureReqHandler 5EF8                    __size_of_sendDataCommand 0094  
                     ??_USBapp_handlerState 00C6           __end_of_USBCtrlEPAllowStatusStage 4B7E  
                             _periodicState 00FC                    __end_of_USBCtrlEPService 4DA8  
                     _MOTEapp_WriteDataRate 5442        __end_of_USART_mySetLineCodingHandler 3FAA  
     __size_of_USART_mySetLineCodingHandler 0066                _USART_mySetLineCodingHandler 3F44  
                __end_of_EUSART_FlushBuffer 38BE                         DATAEE_ReadByte@bAdd 00C6  
             __size_of_USBapp_setrxByteFlag 0006         __size_of_moteApp_add16bToDataBuffer 010A  
                 ??_USBCtrlEPAllowDataStage 0031                                 ??_CDCInitEP 003E  
                            USBDeviceInit@i 00CE                      _pBDTEntryEP0OutCurrent 000F  
                  __size_of_TMR1_Initialize 002C                     USBTransferOnePacket@dir 00C6  
                   USBTransferOnePacket@len 00C9                      __end_of_USBapp_Handler 42A8  
                    __end_of_TMRapp_Handler 5442              __end_ofi2_USBTransferOnePacket 4968  
                      _TMRapp_ClearBitFlags 33CA                         _USBStdGetDscHandler 5824  
                      _MOTEapp_handlerState 33DA                      __end_of_ADC_Initialize 34E2  
                               __pdataBANK0 00F8                                    ??_memset 00CC  
                           ??_oled_clearRow 00D3  MOTEapp_getModemResponse@terminatorReceived 00C7  
           MOTEapp_TimerBasedTask@timerTask 00C6                                    ??_strcmp 00CA  
                               ?_test_comms 0030                   oled_putString@station_dot 00D5  
                    _USBActiveConfiguration 002E              __end_of_USBStdGetStatusHandler 4424  
                          ??_MOTEapp_SetADR 00C6                 __end_of_EUSART_Transmit_ISR 36D8  
                               __pbssCOMRAM 0001                  service_pushbutton@PB_Timer 0066  
                             __pcstackBANK0 00C6                __size_of_USBCtrlTrfInHandler 00CE  
                  __size_of_TMR2_Initialize 0010                         __end_of__stringdata 7FFF  
                  __end_of_Set_Page_Address 3482                             ?_TMR2_ReadTimer 0030  
                               _activeState 008A                        ?_USBStdGetDscHandler 0030  
                 ADC_TempConversion@tempRaw 00CD                  __end_of_EUSART_Receive_ISR 36AE  
            moteRunningProcess@messageReady 00E3                                    ?_EndLine 0030  
                                 _adrStatus 008B                  __end_of_USBWakeFromSuspend 3638  
                             ??_modemResync 00CB                  __size_of_EUSART_Initialize 002E  
                         __size_of_hexToStr 0026                             _USBStallHandler 3A0A  
                              _pBDTEntryOut 0060                         __end_of_EUSART_Read 3890  
                __end_of_USBCheckCDCRequest 4788                             ??_oled_putUint8 00DA  
                      oled_putString@string 00D3                    __size_of_USBDeviceAttach 002A  
               ??_moteApp_add8bToDataBuffer 00CB                           _oled_writeCommand 340C  
                     __size_of_oled_devInit 00D8                     oled_putChar@station_dot 00C9  
                       __size_of_modemSleep 001C                            ___lwdiv@dividend 00C6  
                    _PIN_MANAGER_Initialize 3AC8                         __size_of_oled_clear 0018  
                     ?_TMRapp_ClearBitFlags 0030                        EUSART_Read@readValue 00C6  
                           ?_TMRapp_Handler 0030                             ?_USBapp_Handler 0030  
                                 __pintcode 1008                          ?_oled_writeCommand 0030  
                             __pmediumconst 7640               moteJoiningProcess@switchEvent 00D8  
                     ?_MOTEapp_handlerState 0030                                   __ptext100 5824  
                                 __ptext101 5CF6                                    ?___lbdiv 00C6  
                                 __ptext110 5A32                                   __ptext102 3B9E  
                                 __ptext111 4AC8                                   __ptext103 39CE  
                                 __ptext120 3684                                   __ptext112 4E68  
                                 __ptext104 3C82                                   __ptext121 33B6  
                                 __ptext113 4DA8                                   __ptext105 48C6  
                                 __ptext122 0000                                   __ptext114 3F44  
                                 __ptext106 3A86                                   __ptext115 37D8  
                                 __ptext107 44AA                                   __ptext116 41BC  
                                 __ptext108 46EC                                   __ptext117 33BA  
                                 __ptext109 3CD2                                   __ptext118 34F8  
                                 __ptext119 36AE                                    ?___lbmod 00C6  
                __end_of_moteApp_toggleLeds 40E0                                    ?___lldiv 0030  
                                  ?___lwdiv 00C6                                    ?___lwmod 00C6  
                           ?_ADC_Initialize 0030                       __size_of_oled_setFont 0012  
                              _eusartRxHead 0021                               ??_sendCommand 00C9  
                              _eusartTxHead 0024                                _eusartRxTail 0022  
                              _eusartTxTail 0025                           __size_of_test_adc 00B8  
                     __size_of_oled_putChar 0070                          _moteRunningProcess 6438  
              ??_INTERRUPT_InterruptManager 0053                            ?i2_USBDeviceInit 0030  
                    moteHandler@readMessage 00F7                         ??_oled_writeCommand 00C7  
                             ??_moteHandler 00EF                     _eusartTxBufferRemaining 0023  
                      _USBTransferOnePacket 4788                                moteHandler@i 00F5  
          moteApp_add16bToDataBuffer@number 00CD                    __size_of_TMR1_StartTimer 0004  
                    moteHandler@buttonPress 00F4                __size_of_MOTEapp_SetDataRate 0008  
                       ?_moteRunningProcess 00E2                __end_of_USBCtrlTrfOutHandler 3D24  
                     ??_USBStdGetDscHandler 0030                                    _CMP1_ISR 33B6  
                               _ep_data_out 006D                            ___lwdiv@quotient 00CB  
              __size_of_USBCtrlTrfRxService 011A                                   _secTicker 0097  
             USBConfigureEndpoint@direction 0030                    __size_of_DATAEE_ReadByte 0014  
                                  ?_strncmp 00C6                              __size_of_unhex 002A  
                              _oled_devInit 528C                      ?_MOTEapp_WriteDataRate 0030  
                            _eusartRxBuffer 0100                           _dataRateSelection 00FA  
                          _timerMsTickCount 0084                                   _oled_init 35F4  
              __size_of_USBCtrlTrfTxService 00C0                              _eusartTxBuffer 0200  
                                  _LATAbits 000F89                                    _IOCCbits 000F87  
                 __end_of_oled_writeCommand 3418                                    _LATBbits 000F8A  
                                  _LATCbits 000F8B                  ??_USBCtrlEPServiceComplete 0031  
                ??_MOTEapp_setResponseReady 00C6                                    _PIE1bits 000F9D  
                                  _IPR3bits 000FA5                                    _PIE2bits 000FA0  
                                  _PIE3bits 000FA3                         __size_of_test_comms 005A  
                  __size_of_TMR2_StartTimer 0004                                _oled_setFont 34A6  
                                 _moteState 00FB                           ??_sendDataCommand 00CB  
                             _operationType 0093                        ??_moteRunningProcess 00E5  
                __end_of_moteJoiningProcess 6438         __size_of_INTERRUPT_InterruptManager 009E  
                              _oled_putChar 414C                                    i2u420_40 4E18  
                                  i2u420_47 4E0E                                    i2u500_48 5B2E  
                                  i2u422_40 4E54                                    i2u422_47 4E4A  
                                  _PIR1bits 000F9E                                    _PIR2bits 000FA1  
             __size_of_moteApp_clearBuffers 0046                                    i2u445_40 5892  
                                  _PIR3bits 000FA4                                    i2u445_47 5888  
                                  i2u446_40 58C0                                    i2u446_47 58B6  
                                  i2u448_40 590A                                    i2u448_47 5900  
                                  i2u566_48 4F1C                   USBCtrlEPService@setup_cnt 0051  
                 __size_of_SPI_Exchange8bit 0010                         __end_of_modemResync 4010  
                                  _RCONbits 000FD0                        __end_of_test_powerup 39CE  
                   __size_of_oled_putUint16 00F4                               ??_putUSBUSART 00C9  
                          __CFG_WDTPS$32768 000000                                    _UEP0bits 000F6A  
                _USBDeferINDataStagePackets 0087                                    _SSP1CON1 000FC6  
        __end_of_moteApp_add16bToDataBuffer 5A32                  _moteApp_add16bToDataBuffer 5928  
               __size_of_USBCheckStdRequest 00A0                                    _TMR1_ISR 34F8  
                   __size_of_oled_putString 0068                                    _SSP1STAT 000FC7  
                                  _UCONbits 000F60                             _oled_displayOff 3482  
                                 _test_leds 3D24                                    _VREFCON0 000F7D  
            moteRunningProcess@selectButton 00E2                        _USBConfigureEndpoint 44AA  
                                 _test_oled 42A8            __size_of_USBStdFeatureReqHandler 0202  
                         ??_TMR1_Initialize 00C6                                  _ADCON0bits 000FC2  
                   Set_Page_Address@address 00C8                                 __stringdata 7A0A  
                     ?_USBTransferOnePacket 00C6                      ADC_TempConversion@temp 00CE  
                 _moteApp_add8bToDataBuffer 3E84                     __size_of_oled_writeData 000A  
                             ?_CDCTxService 0030                    moteHandler@gotoNextState 00F0  
                              _RemoteWakeup 0018                         __end_of_sendCommand 3756  
                                  i2_memset 3780                           __CFG_CFGPLLEN$OFF 000000  
                     DATAEE_WriteByte@bData 00C6                          _RS232_Out_Data_Rdy 0016  
                   __end_of_USBStallHandler 3A48                         __end_of_moteHandler 5CF6  
                               _EUSART_Read 3862                           _moteApp_GoToSleep 4322  
                                 copy_data0 3E6E                 ??_USBCtrlEPAllowStatusStage 0030  
               __end_of_USBStdSetCfgHandler 4A16                           ?_DATAEE_WriteByte 00C6  
             __size_of_USBapp_getrxByteFlag 0004                          ?_moteApp_GoToSleep 0030  
                                ?_oled_init 0030                           ??_TMR2_Initialize 00C6  
                             ??_test_switch 00D8                            __size_of_EndLine 000C  
                        ??_DATAEE_WriteByte 00C7                          __end_of_device_dsc 7A06  
                                _EECON1bits 000FA6                     ?_USBCtrlTrfSetupHandler 0030  
             USBapp_CdcEmulatorInitialize@i 003E                      ??_TMRapp_ClearBitFlags 00C6  
                   USBStdGetStatusHandler@p 0030                                    __Hrparam 0000  
                       ??_moteApp_GoToSleep 00D5                                    __Lrparam 0000  
                    USBTransferOnePacket@ep 00CA                      ??_MOTEapp_handlerState 00C6  
                         _ADC_GetConversion 395E                          __CFG_BOREN$SBORDIS 000000  
                                  _SetupPkt 000430                     __size_of_SPI_Initialize 000E  
                   ??_OSCILLATOR_Initialize 00C6                       ?_USBConfigureEndpoint 0030  
                        ?_ADC_GetConversion 00C6                           ??_USBDeviceAttach 00C6  
                                ?_test_leds 0030                            __size_of___lbdiv 0034  
                                ?_test_oled 0030                            __size_of___lbmod 0026  
                ??_MOTEapp_getModemResponse 00C7              moteJoiningProcess@readDataRate 00DA  
                              _selectedFont 00F8                            __size_of___lldiv 0076  
          moteApp_clearBuffers@counter_1700 00C7            moteApp_clearBuffers@counter_1701 00C8  
                           _oled_setDisplay 3494                            __size_of___lwdiv 004A  
                          __size_of___lwmod 003E                   MOTEapp_handlerState@state 00C6  
                                _ANSELAbits 000F5B                         __end_of_putUSBUSART 355E  
                               _line_coding 00BA                                  _ANSELCbits 000F5D  
                            ??_CDCTxService 00CD                                ??_modemSleep 00CB  
                       ??_ADC_GetConversion 00C8                                ??_oled_clear 00D5  
                  modemResync@escapeCounter 00CB                    __size_of_moteApp_delayms 002A  
                 __end_of_moteApp_GoToSleep 43A0                     __size_of_USBDeviceTasks 0102  
                           ___lwdiv@divisor 00C8                                    _appTimer 008C  
                           ___lwdiv@counter 00CA                                    __ptext10 6438  
                                  __ptext11 3756                                    __ptext20 5928  
                                  __ptext12 4658                                    __ptext21 4322  
                                  __ptext13 365E                                  _T1GCONbits 000FCC  
                                  __ptext30 3890                                    __ptext22 35F4  
                                  __ptext14 3D78                                    __ptext31 33FA  
                                  __ptext23 34A6                                    __ptext15 552E  
                                  __ptext40 3424                                    __ptext32 35D4  
                                  __ptext24 3494                                    __ptext16 3B0E  
                                  __ptext41 3702                                    __ptext33 3B54  
                                  __ptext25 528C                                    __ptext17 3E84  
                                  __ptext50 4232                                    __ptext42 33F2  
                                  __ptext34 395E                                    __ptext26 3482  
                                  __ptext18 3638                                    __ptext51 4010  
                                  __ptext43 33EA                                    __ptext35 5EF8  
                                  __ptext27 357A                                    __ptext19 38BE  
                                  __ptext60 4B7E                                    __ptext52 3510  
                                  __ptext44 3928                                    __ptext36 40E0  
                                  __ptext28 3FAA                                    __ptext61 3542  
                                  __ptext53 355E                                    __ptext45 5364  
                                  __ptext37 4424                                    __ptext29 3BEA  
                                  __ptext70 3834                                    __ptext62 45C4  
                                  __ptext54 414C                                    __ptext46 3A48  
                                  __ptext38 5442                                    __ptext71 36D8  
                                  __ptext63 33C6                                    __ptext55 3402  
                                  __ptext47 33CA                                    __ptext39 372C  
                                  __ptext80 3806                                    __ptext72 35B4  
                                  __ptext64 1004                                    __ptext56 3470  
                                  __ptext48 3418                                    __ptext81 345E  
                                  __ptext73 343E                                    __ptext65 38F2  
                                  __ptext57 3528                                    __ptext49 33E2  
                                  __ptext90 3596                                    __ptext82 34CC  
                                  __ptext74 33C2                                    __ptext66 3862  
                                  __ptext58 340C                                    __ptext91 3A0A  
                                  __ptext83 33DA                                    __ptext75 37AC  
                                  __ptext67 5622                                    __ptext59 344E  
                                  __ptext92 4CEE                                    __ptext84 34B8  
                                  __ptext76 33BE                                    __ptext68 4788  
                                  __ptext93 3EE2                                    __ptext77 3430  
                                  __ptext69 51B4                                    __ptext94 5008  
                                  __ptext86 33D4                                    __ptext78 3AC8  
                                  __ptext95 4536                                    __ptext87 5722  
                                  __ptext79 34E2                                    __ptext96 4826  
                                  __ptext88 50DC                                    __ptext97 4968  
                                  __ptext89 3614                                    __ptext98 3780  
                                  __ptext99 43A0        __end_of_USBapp_CdcEmulatorInitialize 3A0A  
     __size_of_USBapp_CdcEmulatorInitialize 003C                _USBapp_CdcEmulatorInitialize 39CE  
                              _SSP1CON1bits 000FC6                                    _hexToStr 365E  
                        _service_pushbutton 3C36                           ??_TMR1_StartTimer 00C6  
               DATAEE_WriteByte@GIEBitValue 00C8                                 _OSCCON2bits 000FD2  
                          __size_of_strncmp 006C                                 _modemResync 3FAA  
            __end_of_USBCtrlTrfSetupHandler 3F44                               __size_of_main 00D2  
                         ?_USBCtrlEPService 0030                  __size_of_oled_writeCommand 000C  
                                strncmp@len 00CA                         ?_service_pushbutton 0030  
                         ??_DATAEE_ReadByte 00C6                   __end_of_ADC_GetConversion 3996  
                  __size_of_CMP1_Initialize 0012                     __end_of_oled_displayOff 3494  
                        ??_USBCtrlEPService 004F                         _USBCtrlTrfInHandler 4E68  
                             ??_TMRapp_Tick 0030                          __end_of_modemSleep 3596  
                          _dataRatePosition 008F                          __end_of_oled_clear 3528  
                       __end_of_test_switch 4AC8                                    _outPipes 0001  
                                  _test_adc 4C36                        _USBCtrlTrfOutHandler 3CD2  
                                  _usbState 009A                   _USBCtrlEPAllowStatusStage 4AC8  
                                 test_adc@L 00E2                                   test_adc@T 00E6  
               __size_of_Set_Column_Address 001A                           ??_TMR2_StartTimer 00C6  
        __end_of_INTERRUPT_InterruptManager 10A6                  _INTERRUPT_InterruptManager 1008  
                              _SSP1STATbits 000FC7                                 _sendCommand 372C  
                    ??_USBTransferOnePacket 00CA                          oled_clearRow@index 00D4  
                        _EUSART_FlushBuffer 3890                                ??_test_comms 00D8  
              __end_of_USBapp_setrxByteFlag 33DA                                 _moteHandler 5B4C  
                          ??_TMR2_ReadTimer 00C6                        ??_service_pushbutton 00C6  
                 _USBDeferStatusStagePacket 0019                    CDCTxService@byte_to_send 00D0  
                                _INTCONbits 000FF2                 __end_of_USBapp_handlerState 33EA  
                      ?_USBCtrlTrfInHandler 0030                         ?_EUSART_FlushBuffer 0030  
               __size_of_ADC_TempConversion 0020               USBCtrlTrfTxService@byteToSend 0030  
                                  memset@p1 00C6                            ?_USBStallHandler 0030  
                  USBStdFeatureReqHandler@p 004C                           ?_Set_Page_Address 0030  
                  ??_MOTEapp_TimerBasedTask 00C6                                _responseData 00B2  
             ?_USBapp_CdcEmulatorInitialize 0030                                    intlevel2 0000  
                               ??_oled_init 00D5                          ??_Set_Page_Address 00C8  
                    __size_of_USBDeviceInit 00D8     __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3BEA  
  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 004C           ??_USER_USB_CALLBACK_EVENT_HANDLER 0045  
          ?_USER_USB_CALLBACK_EVENT_HANDLER 003F             _USER_USB_CALLBACK_EVENT_HANDLER 3B9E  
            moteJoiningProcess@messageReady 00DB                            ___lwmod@dividend 00C6  
              i2USBTransferOnePacket@handle 0035                                _VREFCON0bits 000F7D  
                          ___lldiv@dividend 0030                     ?_PIN_MANAGER_Initialize 0030  
                          ??_USBapp_Handler 00D8                            ??_TMRapp_Handler 00CB  
                     __size_of_test_powerup 0038                        moteHandler@gotoSleep 00EF  
              __size_ofi2_EUSART_Initialize 002E                                   strncmp@s1 00C6  
                                 strncmp@s2 00C8                            ??_ADC_Initialize 00C6  
                        __end_of_test_comms 3E2A                        ??_EUSART_FlushBuffer 00C6  
                   __end_of_oled_setDisplay 34A6                         _MOTEapp_SetDataRate 33F2  
                            _oled_putUint16 552E                            _SPI_Exchange8bit 344E  
                i2USBTransferOnePacket@data 0031                                 _sleepTicker 0098  
                    ??_USBConfigureEndpoint 0031                       ?_USBCtrlTrfOutHandler 0030  
                            _oled_putString 4010                                 _putUSBUSART 3542  
                        _EUSART_Receive_ISR 3684                           oled_clearRow@page 00D3  
                      __CFG_CPUDIV$NOCLKDIV 000000                         _USBCtrlTrfRxService 5A32  
                        _USBWakeFromSuspend 3614                                 ??_test_leds 00D8  
                             _powerOnStatus 0094                                 ??_test_oled 00D8  
                   _USBStdFeatureReqHandler 5CF6     __end_of_USBapp_DeviceCdcEmulatorHandler 4C36  
  __size_of_USBapp_DeviceCdcEmulatorHandler 00B8            ?_USBapp_DeviceCdcEmulatorHandler 0030  
         ??_USBapp_DeviceCdcEmulatorHandler 00D3             _USBapp_DeviceCdcEmulatorHandler 4B7E  
                        _USBCheckCDCRequest 46EC                         _USBCtrlTrfTxService 4DA8  
                       __end_of_TMRapp_Tick 33BE                           _sleepTxOccurances 0099  
                     __end_of_oled_clearRow 357A                                 _temperature 007E  
                       ?_EUSART_Receive_ISR 0030                              _oled_writeData 3402  
                       ?_USBWakeFromSuspend 0030                                    strcmp@s1 00C6  
                                  strcmp@t0 00CC                                    strcmp@s2 00C8  
                                  strcmp@t1 00CE                                    strcmp@t2 00CD  
                          ___lldiv@quotient 0038                             ___lwmod@divisor 00C8  
                     ??_USBCtrlTrfInHandler 0045                       _USBAlternateInterface 00C4  
                           ___lwmod@counter 00CA                        ?_MOTEapp_SetDataRate 0030  
                       ?_USBCheckCDCRequest 0030                  __size_of_moteApp_GoToSleep 007E  
                 i2USBTransferOnePacket@dir 0030                          _moteApp_toggleLeds 4078  
                 i2USBTransferOnePacket@len 0033                     ??_MOTEapp_WriteDataRate 00CB  
                       USBEnableEndpoint@ep 003D                             _endpoint_number 0020  
                                _WDTCONbits 000FD1                                _test_powerup 3996  
                           _sendDataCommand 4658                        ?_USBCtrlTrfRxService 0030  
                             ?_getsUSBUSART 00CD                    oled_putUint8@station_dot 00D8  
                        __CFG_FOSC$INTOSCIO 000000                          EUSART_Write@txData 00C6  
              __size_of_EUSART_Transmit_ISR 002A              __end_of_PIN_MANAGER_Initialize 3B0E  
                  ?_USBCtrlEPAllowDataStage 0030          __size_of_moteApp_add8bToDataBuffer 005E  
                      ?_USBCtrlTrfTxService 0030                           ??_moteApp_delayms 00C8  
                       ?_moteApp_toggleLeds 0030                _USBStatusStageTimeoutCounter 001C  
                               _test_switch 4A16                        ??_EUSART_Receive_ISR 0030  
                      ??_USBWakeFromSuspend 0047                      __end_of_oled_putUint16 5622  
                USBTransferOnePacket@handle 00CB                  __size_of_ADC_GetConversion 0038  
                      __end_of_CDCTxService 5722                             _TMR1_Initialize 37AC  
         moteJoiningProcess@joiningComplete 00D9                            ?_oled_displayOff 0030  
                     __end_of_oled_putUint8 3DD0                      __end_of_oled_putString 4078  
                      ??_USBCheckCDCRequest 0030                                  _USB_CD_Ptr 7647  
