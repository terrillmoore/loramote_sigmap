

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -357222284 
                                                                                               Thu Nov 12 16:40:12 2015

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201506240628
     1                           	processor	18LF25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1
   119                           	psect	text103,global,reloc=2,class=CODE,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,delta=1
   122                           	psect	text106,global,reloc=2,class=CODE,delta=1
   123                           	psect	text107,global,reloc=2,class=CODE,delta=1
   124                           	psect	text108,global,reloc=2,class=CODE,delta=1
   125                           	psect	text109,global,reloc=2,class=CODE,delta=1
   126                           	psect	text110,global,reloc=2,class=CODE,delta=1
   127                           	psect	text111,global,reloc=2,class=CODE,delta=1
   128                           	psect	text112,global,reloc=2,class=CODE,delta=1
   129                           	psect	text113,global,reloc=2,class=CODE,delta=1
   130                           	psect	text114,global,reloc=2,class=CODE,delta=1
   131                           	psect	text115,global,reloc=2,class=CODE,delta=1
   132                           	psect	text116,global,reloc=2,class=CODE,delta=1
   133                           	psect	text117,global,reloc=2,class=CODE,delta=1
   134                           	psect	text118,global,reloc=2,class=CODE,delta=1
   135                           	psect	text119,global,reloc=2,class=CODE,delta=1
   136                           	psect	text120,global,reloc=2,class=CODE,delta=1
   137                           	psect	text121,global,reloc=2,class=CODE,delta=1
   138                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   139                           	psect	text122,global,reloc=2,class=CODE,delta=1
   140                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   141                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   142                           	dabs	1,0x400,48,_BDT
   143                           	dabs	1,0x500,64,_cdc_data_tx
   144                           	dabs	1,0x438,8,_CtrlTrfData
   145                           	dabs	1,0x430,8,_SetupPkt
   146                           	dabs	1,0x540,64,_cdc_data_rx
   147  0000                     
   148                           	psect	idataBANK0
   149  0034B9                     __pidataBANK0:
   150                           	opt stack 0
   151                           
   152                           ;initializer for _selectedFont
   153  0034B9  49                 	db	low _OledFont0
   154  0034BA  76                 	db	high _OledFont0
   155                           
   156                           ;initializer for _dataRateSelection
   157  0034BB  02                 	db	2
   158                           
   159                           ;initializer for _moteState
   160  0034BC  01                 	db	1
   161                           
   162                           ;initializer for _periodicState
   163  0034BD  01                 	db	1
   164                           
   165                           	psect	mediumconst
   166  007640                     __pmediumconst:
   167                           	opt stack 0
   168  007640  00                 	db	0
   169  007641                     _USB_SD_Ptr:
   170                           	opt stack 0
   171  007641  06                 	db	low _sd000
   172  007642  7A                 	db	high _sd000
   173  007643  8C                 	db	low _sd001
   174  007644  79                 	db	high _sd001
   175  007645  C0                 	db	low _sd002
   176  007646  79                 	db	high _sd002
   177  007647                     __end_of_USB_SD_Ptr:
   178                           	opt stack 0
   179  007647                     _USB_CD_Ptr:
   180                           	opt stack 0
   181  007647  49                 	db	low _configDescriptor1
   182  007648  79                 	db	high _configDescriptor1
   183  007649                     __end_of_USB_CD_Ptr:
   184                           	opt stack 0
   185  007649                     _OledFont0:
   186                           	opt stack 0
   187  007649  00                 	db	0
   188  00764A  00                 	db	0
   189  00764B  00                 	db	0
   190  00764C  00                 	db	0
   191  00764D  00                 	db	0
   192  00764E  00                 	db	0
   193  00764F  00                 	db	0
   194  007650  00                 	db	0
   195  007651  00                 	db	0
   196  007652  00                 	db	0
   197  007653  00                 	db	0
   198  007654  5F                 	db	95
   199  007655  00                 	db	0
   200  007656  00                 	db	0
   201  007657  00                 	db	0
   202  007658  00                 	db	0
   203  007659  00                 	db	0
   204  00765A  00                 	db	0
   205  00765B  03                 	db	3
   206  00765C  00                 	db	0
   207  00765D  03                 	db	3
   208  00765E  00                 	db	0
   209  00765F  00                 	db	0
   210  007660  00                 	db	0
   211  007661  64                 	db	100
   212  007662  3C                 	db	60
   213  007663  26                 	db	38
   214  007664  64                 	db	100
   215  007665  3C                 	db	60
   216  007666  26                 	db	38
   217  007667  24                 	db	36
   218  007668  00                 	db	0
   219  007669  26                 	db	38
   220  00766A  49                 	db	73
   221  00766B  49                 	db	73
   222  00766C  7F                 	db	127
   223  00766D  49                 	db	73
   224  00766E  49                 	db	73
   225  00766F  32                 	db	50
   226  007670  00                 	db	0
   227  007671  42                 	db	66
   228  007672  25                 	db	37
   229  007673  12                 	db	18
   230  007674  08                 	db	8
   231  007675  24                 	db	36
   232  007676  52                 	db	82
   233  007677  21                 	db	33
   234  007678  00                 	db	0
   235  007679  20                 	db	32
   236  00767A  50                 	db	80
   237  00767B  4E                 	db	78
   238  00767C  55                 	db	85
   239  00767D  22                 	db	34
   240  00767E  58                 	db	88
   241  00767F  28                 	db	40
   242  007680  00                 	db	0
   243  007681  00                 	db	0
   244  007682  00                 	db	0
   245  007683  00                 	db	0
   246  007684  03                 	db	3
   247  007685  00                 	db	0
   248  007686  00                 	db	0
   249  007687  00                 	db	0
   250  007688  00                 	db	0
   251  007689  00                 	db	0
   252  00768A  00                 	db	0
   253  00768B  1C                 	db	28
   254  00768C  22                 	db	34
   255  00768D  41                 	db	65
   256  00768E  00                 	db	0
   257  00768F  00                 	db	0
   258  007690  00                 	db	0
   259  007691  00                 	db	0
   260  007692  00                 	db	0
   261  007693  00                 	db	0
   262  007694  41                 	db	65
   263  007695  22                 	db	34
   264  007696  1C                 	db	28
   265  007697  00                 	db	0
   266  007698  00                 	db	0
   267  007699  00                 	db	0
   268  00769A  15                 	db	21
   269  00769B  15                 	db	21
   270  00769C  0E                 	db	14
   271  00769D  0E                 	db	14
   272  00769E  15                 	db	21
   273  00769F  15                 	db	21
   274  0076A0  00                 	db	0
   275  0076A1  00                 	db	0
   276  0076A2  08                 	db	8
   277  0076A3  08                 	db	8
   278  0076A4  3E                 	db	62
   279  0076A5  08                 	db	8
   280  0076A6  08                 	db	8
   281  0076A7  00                 	db	0
   282  0076A8  00                 	db	0
   283  0076A9  00                 	db	0
   284  0076AA  00                 	db	0
   285  0076AB  00                 	db	0
   286  0076AC  50                 	db	80
   287  0076AD  30                 	db	48
   288  0076AE  00                 	db	0
   289  0076AF  00                 	db	0
   290  0076B0  00                 	db	0
   291  0076B1  00                 	db	0
   292  0076B2  08                 	db	8
   293  0076B3  08                 	db	8
   294  0076B4  08                 	db	8
   295  0076B5  08                 	db	8
   296  0076B6  08                 	db	8
   297  0076B7  00                 	db	0
   298  0076B8  00                 	db	0
   299  0076B9  00                 	db	0
   300  0076BA  00                 	db	0
   301  0076BB  00                 	db	0
   302  0076BC  40                 	db	64
   303  0076BD  00                 	db	0
   304  0076BE  00                 	db	0
   305  0076BF  00                 	db	0
   306  0076C0  00                 	db	0
   307  0076C1  40                 	db	64
   308  0076C2  20                 	db	32
   309  0076C3  10                 	db	16
   310  0076C4  08                 	db	8
   311  0076C5  04                 	db	4
   312  0076C6  02                 	db	2
   313  0076C7  01                 	db	1
   314  0076C8  00                 	db	0
   315  0076C9  00                 	db	0
   316  0076CA  3E                 	db	62
   317  0076CB  41                 	db	65
   318  0076CC  41                 	db	65
   319  0076CD  41                 	db	65
   320  0076CE  3E                 	db	62
   321  0076CF  00                 	db	0
   322  0076D0  00                 	db	0
   323  0076D1  00                 	db	0
   324  0076D2  00                 	db	0
   325  0076D3  41                 	db	65
   326  0076D4  7F                 	db	127
   327  0076D5  40                 	db	64
   328  0076D6  00                 	db	0
   329  0076D7  00                 	db	0
   330  0076D8  00                 	db	0
   331  0076D9  00                 	db	0
   332  0076DA  42                 	db	66
   333  0076DB  61                 	db	97
   334  0076DC  51                 	db	81
   335  0076DD  49                 	db	73
   336  0076DE  6E                 	db	110
   337  0076DF  00                 	db	0
   338  0076E0  00                 	db	0
   339  0076E1  00                 	db	0
   340  0076E2  22                 	db	34
   341  0076E3  41                 	db	65
   342  0076E4  49                 	db	73
   343  0076E5  49                 	db	73
   344  0076E6  36                 	db	54
   345  0076E7  00                 	db	0
   346  0076E8  00                 	db	0
   347  0076E9  00                 	db	0
   348  0076EA  18                 	db	24
   349  0076EB  14                 	db	20
   350  0076EC  12                 	db	18
   351  0076ED  7F                 	db	127
   352  0076EE  10                 	db	16
   353  0076EF  00                 	db	0
   354  0076F0  00                 	db	0
   355  0076F1  00                 	db	0
   356  0076F2  27                 	db	39
   357  0076F3  49                 	db	73
   358  0076F4  49                 	db	73
   359  0076F5  49                 	db	73
   360  0076F6  71                 	db	113
   361  0076F7  00                 	db	0
   362  0076F8  00                 	db	0
   363  0076F9  00                 	db	0
   364  0076FA  3C                 	db	60
   365  0076FB  4A                 	db	74
   366  0076FC  49                 	db	73
   367  0076FD  48                 	db	72
   368  0076FE  70                 	db	112
   369  0076FF  00                 	db	0
   370  007700  00                 	db	0
   371  007701  00                 	db	0
   372  007702  43                 	db	67
   373  007703  21                 	db	33
   374  007704  11                 	db	17
   375  007705  0D                 	db	13
   376  007706  03                 	db	3
   377  007707  00                 	db	0
   378  007708  00                 	db	0
   379  007709  00                 	db	0
   380  00770A  36                 	db	54
   381  00770B  49                 	db	73
   382  00770C  49                 	db	73
   383  00770D  49                 	db	73
   384  00770E  36                 	db	54
   385  00770F  00                 	db	0
   386  007710  00                 	db	0
   387  007711  00                 	db	0
   388  007712  06                 	db	6
   389  007713  09                 	db	9
   390  007714  49                 	db	73
   391  007715  29                 	db	41
   392  007716  1E                 	db	30
   393  007717  00                 	db	0
   394  007718  00                 	db	0
   395  007719  00                 	db	0
   396  00771A  00                 	db	0
   397  00771B  00                 	db	0
   398  00771C  12                 	db	18
   399  00771D  00                 	db	0
   400  00771E  00                 	db	0
   401  00771F  00                 	db	0
   402  007720  00                 	db	0
   403  007721  00                 	db	0
   404  007722  00                 	db	0
   405  007723  00                 	db	0
   406  007724  52                 	db	82
   407  007725  30                 	db	48
   408  007726  00                 	db	0
   409  007727  00                 	db	0
   410  007728  00                 	db	0
   411  007729  00                 	db	0
   412  00772A  00                 	db	0
   413  00772B  08                 	db	8
   414  00772C  14                 	db	20
   415  00772D  14                 	db	20
   416  00772E  22                 	db	34
   417  00772F  00                 	db	0
   418  007730  00                 	db	0
   419  007731  00                 	db	0
   420  007732  14                 	db	20
   421  007733  14                 	db	20
   422  007734  14                 	db	20
   423  007735  14                 	db	20
   424  007736  14                 	db	20
   425  007737  14                 	db	20
   426  007738  00                 	db	0
   427  007739  00                 	db	0
   428  00773A  00                 	db	0
   429  00773B  22                 	db	34
   430  00773C  14                 	db	20
   431  00773D  14                 	db	20
   432  00773E  08                 	db	8
   433  00773F  00                 	db	0
   434  007740  00                 	db	0
   435  007741  00                 	db	0
   436  007742  02                 	db	2
   437  007743  01                 	db	1
   438  007744  59                 	db	89
   439  007745  05                 	db	5
   440  007746  02                 	db	2
   441  007747  00                 	db	0
   442  007748  00                 	db	0
   443  007749  3E                 	db	62
   444  00774A  41                 	db	65
   445  00774B  5D                 	db	93
   446  00774C  55                 	db	85
   447  00774D  4D                 	db	77
   448  00774E  51                 	db	81
   449  00774F  2E                 	db	46
   450  007750  00                 	db	0
   451  007751  40                 	db	64
   452  007752  7C                 	db	124
   453  007753  4A                 	db	74
   454  007754  09                 	db	9
   455  007755  4A                 	db	74
   456  007756  7C                 	db	124
   457  007757  40                 	db	64
   458  007758  00                 	db	0
   459  007759  41                 	db	65
   460  00775A  7F                 	db	127
   461  00775B  49                 	db	73
   462  00775C  49                 	db	73
   463  00775D  49                 	db	73
   464  00775E  49                 	db	73
   465  00775F  36                 	db	54
   466  007760  00                 	db	0
   467  007761  1C                 	db	28
   468  007762  22                 	db	34
   469  007763  41                 	db	65
   470  007764  41                 	db	65
   471  007765  41                 	db	65
   472  007766  41                 	db	65
   473  007767  22                 	db	34
   474  007768  00                 	db	0
   475  007769  41                 	db	65
   476  00776A  7F                 	db	127
   477  00776B  41                 	db	65
   478  00776C  41                 	db	65
   479  00776D  41                 	db	65
   480  00776E  22                 	db	34
   481  00776F  1C                 	db	28
   482  007770  00                 	db	0
   483  007771  41                 	db	65
   484  007772  7F                 	db	127
   485  007773  49                 	db	73
   486  007774  49                 	db	73
   487  007775  5D                 	db	93
   488  007776  41                 	db	65
   489  007777  63                 	db	99
   490  007778  00                 	db	0
   491  007779  41                 	db	65
   492  00777A  7F                 	db	127
   493  00777B  49                 	db	73
   494  00777C  09                 	db	9
   495  00777D  1D                 	db	29
   496  00777E  01                 	db	1
   497  00777F  03                 	db	3
   498  007780  00                 	db	0
   499  007781  1C                 	db	28
   500  007782  22                 	db	34
   501  007783  41                 	db	65
   502  007784  49                 	db	73
   503  007785  49                 	db	73
   504  007786  3A                 	db	58
   505  007787  08                 	db	8
   506  007788  00                 	db	0
   507  007789  41                 	db	65
   508  00778A  7F                 	db	127
   509  00778B  08                 	db	8
   510  00778C  08                 	db	8
   511  00778D  08                 	db	8
   512  00778E  7F                 	db	127
   513  00778F  41                 	db	65
   514  007790  00                 	db	0
   515  007791  00                 	db	0
   516  007792  41                 	db	65
   517  007793  41                 	db	65
   518  007794  7F                 	db	127
   519  007795  41                 	db	65
   520  007796  41                 	db	65
   521  007797  00                 	db	0
   522  007798  00                 	db	0
   523  007799  30                 	db	48
   524  00779A  40                 	db	64
   525  00779B  41                 	db	65
   526  00779C  41                 	db	65
   527  00779D  3F                 	db	63
   528  00779E  01                 	db	1
   529  00779F  01                 	db	1
   530  0077A0  00                 	db	0
   531  0077A1  41                 	db	65
   532  0077A2  7F                 	db	127
   533  0077A3  08                 	db	8
   534  0077A4  0C                 	db	12
   535  0077A5  12                 	db	18
   536  0077A6  61                 	db	97
   537  0077A7  41                 	db	65
   538  0077A8  00                 	db	0
   539  0077A9  41                 	db	65
   540  0077AA  7F                 	db	127
   541  0077AB  41                 	db	65
   542  0077AC  40                 	db	64
   543  0077AD  40                 	db	64
   544  0077AE  40                 	db	64
   545  0077AF  60                 	db	96
   546  0077B0  00                 	db	0
   547  0077B1  41                 	db	65
   548  0077B2  7F                 	db	127
   549  0077B3  42                 	db	66
   550  0077B4  0C                 	db	12
   551  0077B5  42                 	db	66
   552  0077B6  7F                 	db	127
   553  0077B7  41                 	db	65
   554  0077B8  00                 	db	0
   555  0077B9  41                 	db	65
   556  0077BA  7F                 	db	127
   557  0077BB  42                 	db	66
   558  0077BC  0C                 	db	12
   559  0077BD  11                 	db	17
   560  0077BE  7F                 	db	127
   561  0077BF  01                 	db	1
   562  0077C0  00                 	db	0
   563  0077C1  1C                 	db	28
   564  0077C2  22                 	db	34
   565  0077C3  41                 	db	65
   566  0077C4  41                 	db	65
   567  0077C5  41                 	db	65
   568  0077C6  22                 	db	34
   569  0077C7  1C                 	db	28
   570  0077C8  00                 	db	0
   571  0077C9  41                 	db	65
   572  0077CA  7F                 	db	127
   573  0077CB  49                 	db	73
   574  0077CC  09                 	db	9
   575  0077CD  09                 	db	9
   576  0077CE  09                 	db	9
   577  0077CF  06                 	db	6
   578  0077D0  00                 	db	0
   579  0077D1  0C                 	db	12
   580  0077D2  12                 	db	18
   581  0077D3  21                 	db	33
   582  0077D4  21                 	db	33
   583  0077D5  61                 	db	97
   584  0077D6  52                 	db	82
   585  0077D7  4C                 	db	76
   586  0077D8  00                 	db	0
   587  0077D9  41                 	db	65
   588  0077DA  7F                 	db	127
   589  0077DB  09                 	db	9
   590  0077DC  09                 	db	9
   591  0077DD  19                 	db	25
   592  0077DE  69                 	db	105
   593  0077DF  46                 	db	70
   594  0077E0  00                 	db	0
   595  0077E1  66                 	db	102
   596  0077E2  49                 	db	73
   597  0077E3  49                 	db	73
   598  0077E4  49                 	db	73
   599  0077E5  49                 	db	73
   600  0077E6  49                 	db	73
   601  0077E7  33                 	db	51
   602  0077E8  00                 	db	0
   603  0077E9  03                 	db	3
   604  0077EA  01                 	db	1
   605  0077EB  41                 	db	65
   606  0077EC  7F                 	db	127
   607  0077ED  41                 	db	65
   608  0077EE  01                 	db	1
   609  0077EF  03                 	db	3
   610  0077F0  00                 	db	0
   611  0077F1  01                 	db	1
   612  0077F2  3F                 	db	63
   613  0077F3  41                 	db	65
   614  0077F4  40                 	db	64
   615  0077F5  41                 	db	65
   616  0077F6  3F                 	db	63
   617  0077F7  01                 	db	1
   618  0077F8  00                 	db	0
   619  0077F9  01                 	db	1
   620  0077FA  0F                 	db	15
   621  0077FB  31                 	db	49
   622  0077FC  40                 	db	64
   623  0077FD  31                 	db	49
   624  0077FE  0F                 	db	15
   625  0077FF  01                 	db	1
   626  007800  00                 	db	0
   627  007801  01                 	db	1
   628  007802  1F                 	db	31
   629  007803  61                 	db	97
   630  007804  14                 	db	20
   631  007805  61                 	db	97
   632  007806  1F                 	db	31
   633  007807  01                 	db	1
   634  007808  00                 	db	0
   635  007809  41                 	db	65
   636  00780A  41                 	db	65
   637  00780B  36                 	db	54
   638  00780C  08                 	db	8
   639  00780D  36                 	db	54
   640  00780E  41                 	db	65
   641  00780F  41                 	db	65
   642  007810  00                 	db	0
   643  007811  01                 	db	1
   644  007812  03                 	db	3
   645  007813  44                 	db	68
   646  007814  78                 	db	120
   647  007815  44                 	db	68
   648  007816  03                 	db	3
   649  007817  01                 	db	1
   650  007818  00                 	db	0
   651  007819  43                 	db	67
   652  00781A  61                 	db	97
   653  00781B  51                 	db	81
   654  00781C  49                 	db	73
   655  00781D  45                 	db	69
   656  00781E  43                 	db	67
   657  00781F  61                 	db	97
   658  007820  00                 	db	0
   659  007821  00                 	db	0
   660  007822  00                 	db	0
   661  007823  7F                 	db	127
   662  007824  41                 	db	65
   663  007825  41                 	db	65
   664  007826  00                 	db	0
   665  007827  00                 	db	0
   666  007828  00                 	db	0
   667  007829  01                 	db	1
   668  00782A  02                 	db	2
   669  00782B  04                 	db	4
   670  00782C  08                 	db	8
   671  00782D  10                 	db	16
   672  00782E  20                 	db	32
   673  00782F  40                 	db	64
   674  007830  00                 	db	0
   675  007831  00                 	db	0
   676  007832  00                 	db	0
   677  007833  41                 	db	65
   678  007834  41                 	db	65
   679  007835  7F                 	db	127
   680  007836  00                 	db	0
   681  007837  00                 	db	0
   682  007838  00                 	db	0
   683  007839  00                 	db	0
   684  00783A  04                 	db	4
   685  00783B  02                 	db	2
   686  00783C  01                 	db	1
   687  00783D  01                 	db	1
   688  00783E  02                 	db	2
   689  00783F  04                 	db	4
   690  007840  00                 	db	0
   691  007841  00                 	db	0
   692  007842  40                 	db	64
   693  007843  40                 	db	64
   694  007844  40                 	db	64
   695  007845  40                 	db	64
   696  007846  40                 	db	64
   697  007847  40                 	db	64
   698  007848  00                 	db	0
   699  007849  00                 	db	0
   700  00784A  01                 	db	1
   701  00784B  02                 	db	2
   702  00784C  00                 	db	0
   703  00784D  00                 	db	0
   704  00784E  00                 	db	0
   705  00784F  00                 	db	0
   706  007850  00                 	db	0
   707  007851  00                 	db	0
   708  007852  34                 	db	52
   709  007853  4A                 	db	74
   710  007854  4A                 	db	74
   711  007855  4A                 	db	74
   712  007856  3C                 	db	60
   713  007857  40                 	db	64
   714  007858  00                 	db	0
   715  007859  00                 	db	0
   716  00785A  41                 	db	65
   717  00785B  3F                 	db	63
   718  00785C  48                 	db	72
   719  00785D  48                 	db	72
   720  00785E  48                 	db	72
   721  00785F  30                 	db	48
   722  007860  00                 	db	0
   723  007861  00                 	db	0
   724  007862  3C                 	db	60
   725  007863  42                 	db	66
   726  007864  42                 	db	66
   727  007865  42                 	db	66
   728  007866  24                 	db	36
   729  007867  00                 	db	0
   730  007868  00                 	db	0
   731  007869  00                 	db	0
   732  00786A  30                 	db	48
   733  00786B  48                 	db	72
   734  00786C  48                 	db	72
   735  00786D  49                 	db	73
   736  00786E  3F                 	db	63
   737  00786F  40                 	db	64
   738  007870  00                 	db	0
   739  007871  00                 	db	0
   740  007872  3C                 	db	60
   741  007873  4A                 	db	74
   742  007874  4A                 	db	74
   743  007875  4A                 	db	74
   744  007876  2C                 	db	44
   745  007877  00                 	db	0
   746  007878  00                 	db	0
   747  007879  00                 	db	0
   748  00787A  00                 	db	0
   749  00787B  48                 	db	72
   750  00787C  7E                 	db	126
   751  00787D  49                 	db	73
   752  00787E  09                 	db	9
   753  00787F  00                 	db	0
   754  007880  00                 	db	0
   755  007881  00                 	db	0
   756  007882  26                 	db	38
   757  007883  49                 	db	73
   758  007884  49                 	db	73
   759  007885  49                 	db	73
   760  007886  3F                 	db	63
   761  007887  01                 	db	1
   762  007888  00                 	db	0
   763  007889  41                 	db	65
   764  00788A  7F                 	db	127
   765  00788B  48                 	db	72
   766  00788C  04                 	db	4
   767  00788D  44                 	db	68
   768  00788E  78                 	db	120
   769  00788F  40                 	db	64
   770  007890  00                 	db	0
   771  007891  00                 	db	0
   772  007892  00                 	db	0
   773  007893  44                 	db	68
   774  007894  7D                 	db	125
   775  007895  40                 	db	64
   776  007896  00                 	db	0
   777  007897  00                 	db	0
   778  007898  00                 	db	0
   779  007899  00                 	db	0
   780  00789A  00                 	db	0
   781  00789B  40                 	db	64
   782  00789C  44                 	db	68
   783  00789D  3D                 	db	61
   784  00789E  00                 	db	0
   785  00789F  00                 	db	0
   786  0078A0  00                 	db	0
   787  0078A1  41                 	db	65
   788  0078A2  7F                 	db	127
   789  0078A3  10                 	db	16
   790  0078A4  18                 	db	24
   791  0078A5  24                 	db	36
   792  0078A6  42                 	db	66
   793  0078A7  42                 	db	66
   794  0078A8  00                 	db	0
   795  0078A9  00                 	db	0
   796  0078AA  40                 	db	64
   797  0078AB  41                 	db	65
   798  0078AC  7F                 	db	127
   799  0078AD  40                 	db	64
   800  0078AE  40                 	db	64
   801  0078AF  00                 	db	0
   802  0078B0  00                 	db	0
   803  0078B1  42                 	db	66
   804  0078B2  7E                 	db	126
   805  0078B3  02                 	db	2
   806  0078B4  7C                 	db	124
   807  0078B5  02                 	db	2
   808  0078B6  7E                 	db	126
   809  0078B7  40                 	db	64
   810  0078B8  00                 	db	0
   811  0078B9  42                 	db	66
   812  0078BA  7E                 	db	126
   813  0078BB  44                 	db	68
   814  0078BC  02                 	db	2
   815  0078BD  42                 	db	66
   816  0078BE  7C                 	db	124
   817  0078BF  40                 	db	64
   818  0078C0  00                 	db	0
   819  0078C1  00                 	db	0
   820  0078C2  3C                 	db	60
   821  0078C3  42                 	db	66
   822  0078C4  42                 	db	66
   823  0078C5  42                 	db	66
   824  0078C6  3C                 	db	60
   825  0078C7  00                 	db	0
   826  0078C8  00                 	db	0
   827  0078C9  00                 	db	0
   828  0078CA  41                 	db	65
   829  0078CB  7F                 	db	127
   830  0078CC  49                 	db	73
   831  0078CD  09                 	db	9
   832  0078CE  09                 	db	9
   833  0078CF  06                 	db	6
   834  0078D0  00                 	db	0
   835  0078D1  00                 	db	0
   836  0078D2  06                 	db	6
   837  0078D3  09                 	db	9
   838  0078D4  09                 	db	9
   839  0078D5  49                 	db	73
   840  0078D6  7F                 	db	127
   841  0078D7  41                 	db	65
   842  0078D8  00                 	db	0
   843  0078D9  00                 	db	0
   844  0078DA  42                 	db	66
   845  0078DB  7E                 	db	126
   846  0078DC  44                 	db	68
   847  0078DD  02                 	db	2
   848  0078DE  02                 	db	2
   849  0078DF  04                 	db	4
   850  0078E0  00                 	db	0
   851  0078E1  00                 	db	0
   852  0078E2  64                 	db	100
   853  0078E3  4A                 	db	74
   854  0078E4  4A                 	db	74
   855  0078E5  4A                 	db	74
   856  0078E6  36                 	db	54
   857  0078E7  00                 	db	0
   858  0078E8  00                 	db	0
   859  0078E9  00                 	db	0
   860  0078EA  04                 	db	4
   861  0078EB  3F                 	db	63
   862  0078EC  44                 	db	68
   863  0078ED  44                 	db	68
   864  0078EE  20                 	db	32
   865  0078EF  00                 	db	0
   866  0078F0  00                 	db	0
   867  0078F1  00                 	db	0
   868  0078F2  02                 	db	2
   869  0078F3  3E                 	db	62
   870  0078F4  40                 	db	64
   871  0078F5  40                 	db	64
   872  0078F6  22                 	db	34
   873  0078F7  7E                 	db	126
   874  0078F8  40                 	db	64
   875  0078F9  02                 	db	2
   876  0078FA  0E                 	db	14
   877  0078FB  32                 	db	50
   878  0078FC  40                 	db	64
   879  0078FD  32                 	db	50
   880  0078FE  0E                 	db	14
   881  0078FF  02                 	db	2
   882  007900  00                 	db	0
   883  007901  02                 	db	2
   884  007902  1E                 	db	30
   885  007903  62                 	db	98
   886  007904  18                 	db	24
   887  007905  62                 	db	98
   888  007906  1E                 	db	30
   889  007907  02                 	db	2
   890  007908  00                 	db	0
   891  007909  42                 	db	66
   892  00790A  62                 	db	98
   893  00790B  14                 	db	20
   894  00790C  08                 	db	8
   895  00790D  14                 	db	20
   896  00790E  62                 	db	98
   897  00790F  42                 	db	66
   898  007910  00                 	db	0
   899  007911  01                 	db	1
   900  007912  43                 	db	67
   901  007913  45                 	db	69
   902  007914  38                 	db	56
   903  007915  05                 	db	5
   904  007916  03                 	db	3
   905  007917  01                 	db	1
   906  007918  00                 	db	0
   907  007919  00                 	db	0
   908  00791A  46                 	db	70
   909  00791B  62                 	db	98
   910  00791C  52                 	db	82
   911  00791D  4A                 	db	74
   912  00791E  46                 	db	70
   913  00791F  62                 	db	98
   914  007920  00                 	db	0
   915  007921  00                 	db	0
   916  007922  00                 	db	0
   917  007923  08                 	db	8
   918  007924  36                 	db	54
   919  007925  41                 	db	65
   920  007926  00                 	db	0
   921  007927  00                 	db	0
   922  007928  00                 	db	0
   923  007929  00                 	db	0
   924  00792A  00                 	db	0
   925  00792B  00                 	db	0
   926  00792C  7F                 	db	127
   927  00792D  00                 	db	0
   928  00792E  00                 	db	0
   929  00792F  00                 	db	0
   930  007930  00                 	db	0
   931  007931  00                 	db	0
   932  007932  00                 	db	0
   933  007933  00                 	db	0
   934  007934  41                 	db	65
   935  007935  36                 	db	54
   936  007936  08                 	db	8
   937  007937  00                 	db	0
   938  007938  00                 	db	0
   939  007939  00                 	db	0
   940  00793A  18                 	db	24
   941  00793B  08                 	db	8
   942  00793C  08                 	db	8
   943  00793D  10                 	db	16
   944  00793E  10                 	db	16
   945  00793F  18                 	db	24
   946  007940  00                 	db	0
   947  007941  AA                 	db	170
   948  007942  55                 	db	85
   949  007943  AA                 	db	170
   950  007944  55                 	db	85
   951  007945  AA                 	db	170
   952  007946  55                 	db	85
   953  007947  AA                 	db	170
   954  007948  55                 	db	85
   955  007949                     __end_of_OledFont0:
   956                           	opt stack 0
   957  007949                     _configDescriptor1:
   958                           	opt stack 0
   959  007949  09                 	db	9
   960  00794A  02                 	db	2
   961  00794B  43                 	db	67
   962  00794C  00                 	db	0
   963  00794D  02                 	db	2
   964  00794E  01                 	db	1
   965  00794F  00                 	db	0
   966  007950  C0                 	db	192
   967  007951  32                 	db	50
   968  007952  09                 	db	9
   969  007953  04                 	db	4
   970  007954  00                 	db	0
   971  007955  00                 	db	0
   972  007956  01                 	db	1
   973  007957  02                 	db	2
   974  007958  02                 	db	2
   975  007959  01                 	db	1
   976  00795A  00                 	db	0
   977  00795B  05                 	db	5
   978  00795C  24                 	db	36
   979  00795D  00                 	db	0
   980  00795E  10                 	db	16
   981  00795F  01                 	db	1
   982  007960  04                 	db	4
   983  007961  24                 	db	36
   984  007962  02                 	db	2
   985  007963  02                 	db	2
   986  007964  05                 	db	5
   987  007965  24                 	db	36
   988  007966  06                 	db	6
   989  007967  00                 	db	0
   990  007968  01                 	db	1
   991  007969  05                 	db	5
   992  00796A  24                 	db	36
   993  00796B  01                 	db	1
   994  00796C  00                 	db	0
   995  00796D  01                 	db	1
   996  00796E  07                 	db	7
   997  00796F  05                 	db	5
   998  007970  81                 	db	129
   999  007971  03                 	db	3
  1000  007972  08                 	db	8
  1001  007973  00                 	db	0
  1002  007974  02                 	db	2
  1003  007975  09                 	db	9
  1004  007976  04                 	db	4
  1005  007977  01                 	db	1
  1006  007978  00                 	db	0
  1007  007979  02                 	db	2
  1008  00797A  0A                 	db	10
  1009  00797B  00                 	db	0
  1010  00797C  00                 	db	0
  1011  00797D  00                 	db	0
  1012  00797E  07                 	db	7
  1013  00797F  05                 	db	5
  1014  007980  02                 	db	2
  1015  007981  02                 	db	2
  1016  007982  40                 	db	64
  1017  007983  00                 	db	0
  1018  007984  00                 	db	0
  1019  007985  07                 	db	7
  1020  007986  05                 	db	5
  1021  007987  82                 	db	130
  1022  007988  02                 	db	2
  1023  007989  40                 	db	64
  1024  00798A  00                 	db	0
  1025  00798B  00                 	db	0
  1026  00798C                     __end_of_configDescriptor1:
  1027                           	opt stack 0
  1028  00798C                     _sd001:
  1029                           	opt stack 0
  1030  00798C  34                 	db	52
  1031  00798D  03                 	db	3
  1032  00798E  004D               	dw	77
  1033  007990  0069               	dw	105
  1034  007992  0063               	dw	99
  1035  007994  0072               	dw	114
  1036  007996  006F               	dw	111
  1037  007998  0063               	dw	99
  1038  00799A  0068               	dw	104
  1039  00799C  0069               	dw	105
  1040  00799E  0070               	dw	112
  1041  0079A0  0020               	dw	32
  1042  0079A2  0054               	dw	84
  1043  0079A4  0065               	dw	101
  1044  0079A6  0063               	dw	99
  1045  0079A8  0068               	dw	104
  1046  0079AA  006E               	dw	110
  1047  0079AC  006F               	dw	111
  1048  0079AE  006C               	dw	108
  1049  0079B0  006F               	dw	111
  1050  0079B2  0067               	dw	103
  1051  0079B4  0079               	dw	121
  1052  0079B6  0020               	dw	32
  1053  0079B8  0049               	dw	73
  1054  0079BA  006E               	dw	110
  1055  0079BC  0063               	dw	99
  1056  0079BE  002E               	dw	46
  1057  0079C0                     __end_of_sd001:
  1058                           	opt stack 0
  1059  0079C0                     _sd002:
  1060                           	opt stack 0
  1061  0079C0  34                 	db	52
  1062  0079C1  03                 	db	3
  1063  0079C2  0043               	dw	67
  1064  0079C4  0044               	dw	68
  1065  0079C6  0043               	dw	67
  1066  0079C8  0020               	dw	32
  1067  0079CA  0052               	dw	82
  1068  0079CC  0053               	dw	83
  1069  0079CE  002D               	dw	45
  1070  0079D0  0032               	dw	50
  1071  0079D2  0033               	dw	51
  1072  0079D4  0032               	dw	50
  1073  0079D6  0020               	dw	32
  1074  0079D8  0045               	dw	69
  1075  0079DA  006D               	dw	109
  1076  0079DC  0075               	dw	117
  1077  0079DE  006C               	dw	108
  1078  0079E0  0061               	dw	97
  1079  0079E2  0074               	dw	116
  1080  0079E4  0069               	dw	105
  1081  0079E6  006F               	dw	111
  1082  0079E8  006E               	dw	110
  1083  0079EA  0020               	dw	32
  1084  0079EC  0044               	dw	68
  1085  0079EE  0065               	dw	101
  1086  0079F0  006D               	dw	109
  1087  0079F2  006F               	dw	111
  1088  0079F4                     __end_of_sd002:
  1089                           	opt stack 0
  1090  0079F4                     _device_dsc:
  1091                           	opt stack 0
  1092  0079F4  12                 	db	18
  1093  0079F5  01                 	db	1
  1094  0079F6  0200               	dw	512
  1095  0079F8  02                 	db	2
  1096  0079F9  00                 	db	0
  1097  0079FA  00                 	db	0
  1098  0079FB  08                 	db	8
  1099  0079FC  04D8               	dw	1240
  1100  0079FE  000A               	dw	10
  1101  007A00  0100               	dw	256
  1102  007A02  01                 	db	1
  1103  007A03  02                 	db	2
  1104  007A04  00                 	db	0
  1105  007A05  01                 	db	1
  1106  007A06                     __end_of_device_dsc:
  1107                           	opt stack 0
  1108  007A06                     _sd000:
  1109                           	opt stack 0
  1110  007A06  04                 	db	4
  1111  007A07  03                 	db	3
  1112  007A08  0409               	dw	1033
  1113  007A0A                     __end_of_sd000:
  1114                           	opt stack 0
  1115  0000                     _ANSELAbits	set	3931
  1116  0000                     _ANSELCbits	set	3933
  1117  0000                     _ACTCON	set	4021
  1118  0000                     _ADCON0	set	4034
  1119  0000                     _ADCON0bits	set	4034
  1120  0000                     _ADCON1	set	4033
  1121  0000                     _ADCON2	set	4032
  1122  0000                     _ADRESH	set	4036
  1123  0000                     _ADRESL	set	4035
  1124  0000                     _BAUDCON	set	4024
  1125  0000                     _CM1CON0	set	3992
  1126  0000                     _CM2CON1bits	set	3994
  1127  0000                     _EEADR	set	4009
  1128  0000                     _EECON1bits	set	4006
  1129  0000                     _EECON2	set	4007
  1130  0000                     _EEDATA	set	4008
  1131  0000                     _INTCONbits	set	4082
  1132  0000                     _IOCCbits	set	3975
  1133  0000                     _IPR3bits	set	4005
  1134  0000                     _LATAbits	set	3977
  1135  0000                     _LATBbits	set	3978
  1136  0000                     _LATCbits	set	3979
  1137  0000                     _OSCCON	set	4051
  1138  0000                     _OSCCON2	set	4050
  1139  0000                     _OSCCON2bits	set	4050
  1140  0000                     _OSCTUNE	set	3995
  1141  0000                     _PIE1bits	set	3997
  1142  0000                     _PIE2bits	set	4000
  1143  0000                     _PIE3bits	set	4003
  1144  0000                     _PIR1bits	set	3998
  1145  0000                     _PIR2bits	set	4001
  1146  0000                     _PIR3bits	set	4004
  1147  0000                     _PORTAbits	set	3968
  1148  0000                     _PORTCbits	set	3970
  1149  0000                     _PR2	set	4027
  1150  0000                     _RCONbits	set	4048
  1151  0000                     _RCREG	set	4014
  1152  0000                     _RCSTA	set	4011
  1153  0000                     _RCSTAbits	set	4011
  1154  0000                     _SPBRG	set	4015
  1155  0000                     _SPBRGH	set	4016
  1156  0000                     _SSP1ADD	set	4040
  1157  0000                     _SSP1CON1	set	4038
  1158  0000                     _SSP1CON1bits	set	4038
  1159  0000                     _SSP1STAT	set	4039
  1160  0000                     _SSP1STATbits	set	4039
  1161  0000                     _SSPBUF	set	4041
  1162  0000                     _T1CON	set	4045
  1163  0000                     _T1CONbits	set	4045
  1164  0000                     _T1GCON	set	4044
  1165  0000                     _T2CON	set	4026
  1166  0000                     _T2CONbits	set	4026
  1167  0000                     _TMR1H	set	4047
  1168  0000                     _TMR1L	set	4046
  1169  0000                     _TMR2	set	4028
  1170  0000                     _TRISAbits	set	3986
  1171  0000                     _TRISBbits	set	3987
  1172  0000                     _TRISCbits	set	3988
  1173  0000                     _TXREG	set	4013
  1174  0000                     _TXSTA	set	4012
  1175  0000                     _TXSTAbits	set	4012
  1176  0000                     _UADDR	set	3939
  1177  0000                     _UCFG	set	3938
  1178  0000                     _UCON	set	3936
  1179  0000                     _UCONbits	set	3936
  1180  0000                     _UEIE	set	3942
  1181  0000                     _UEIR	set	3943
  1182  0000                     _UEP0bits	set	3946
  1183  0000                     _UIE	set	3940
  1184  0000                     _UIEbits	set	3940
  1185  0000                     _UIR	set	3941
  1186  0000                     _UIRbits	set	3941
  1187  0000                     _USTAT	set	3937
  1188  0000                     _VREFCON0	set	3965
  1189  0000                     _WDTCONbits	set	4049
  1190  0000                     _UEP0	set	3946
  1191  0000                     _UEP1	set	3947
  1192  0000                     _CKE	set	32318
  1193  0000                     _CKP	set	32308
  1194  0000                     _GIE	set	32663
  1195  0000                     _PEIE	set	32662
  1196  007A0A                     STR_256:
  1197  007A0A  73                 	db	115	;'s'
  1198  007A0B  79                 	db	121	;'y'
  1199  007A0C  73                 	db	115	;'s'
  1200  007A0D  20                 	db	32
  1201  007A0E  73                 	db	115	;'s'
  1202  007A0F  65                 	db	101	;'e'
  1203  007A10  74                 	db	116	;'t'
  1204  007A11  20                 	db	32
  1205  007A12  70                 	db	112	;'p'
  1206  007A13  69                 	db	105	;'i'
  1207  007A14  6E                 	db	110	;'n'
  1208  007A15  64                 	db	100	;'d'
  1209  007A16  69                 	db	105	;'i'
  1210  007A17  67                 	db	103	;'g'
  1211  007A18  20                 	db	32
  1212  007A19  47                 	db	71	;'G'
  1213  007A1A  50                 	db	80	;'P'
  1214  007A1B  49                 	db	73	;'I'
  1215  007A1C  4F                 	db	79	;'O'
  1216  007A1D  31                 	db	49	;'1'
  1217  007A1E  30                 	db	48	;'0'
  1218  007A1F  20                 	db	32
  1219  007A20  30                 	db	48	;'0'
  1220  007A21  0D                 	db	13
  1221  007A22  0A                 	db	10
  1222  007A23  00                 	db	0
  1223  007A24                     STR_257:
  1224  007A24  73                 	db	115	;'s'
  1225  007A25  79                 	db	121	;'y'
  1226  007A26  73                 	db	115	;'s'
  1227  007A27  20                 	db	32
  1228  007A28  73                 	db	115	;'s'
  1229  007A29  65                 	db	101	;'e'
  1230  007A2A  74                 	db	116	;'t'
  1231  007A2B  20                 	db	32
  1232  007A2C  70                 	db	112	;'p'
  1233  007A2D  69                 	db	105	;'i'
  1234  007A2E  6E                 	db	110	;'n'
  1235  007A2F  64                 	db	100	;'d'
  1236  007A30  69                 	db	105	;'i'
  1237  007A31  67                 	db	103	;'g'
  1238  007A32  20                 	db	32
  1239  007A33  47                 	db	71	;'G'
  1240  007A34  50                 	db	80	;'P'
  1241  007A35  49                 	db	73	;'I'
  1242  007A36  4F                 	db	79	;'O'
  1243  007A37  31                 	db	49	;'1'
  1244  007A38  31                 	db	49	;'1'
  1245  007A39  20                 	db	32
  1246  007A3A  30                 	db	48	;'0'
  1247  007A3B  0D                 	db	13
  1248  007A3C  0A                 	db	10
  1249  007A3D  00                 	db	0
  1250  007A3E                     STR_254:
  1251  007A3E  73                 	db	115	;'s'
  1252  007A3F  79                 	db	121	;'y'
  1253  007A40  73                 	db	115	;'s'
  1254  007A41  20                 	db	32
  1255  007A42  73                 	db	115	;'s'
  1256  007A43  65                 	db	101	;'e'
  1257  007A44  74                 	db	116	;'t'
  1258  007A45  20                 	db	32
  1259  007A46  70                 	db	112	;'p'
  1260  007A47  69                 	db	105	;'i'
  1261  007A48  6E                 	db	110	;'n'
  1262  007A49  64                 	db	100	;'d'
  1263  007A4A  69                 	db	105	;'i'
  1264  007A4B  67                 	db	103	;'g'
  1265  007A4C  20                 	db	32
  1266  007A4D  47                 	db	71	;'G'
  1267  007A4E  50                 	db	80	;'P'
  1268  007A4F  49                 	db	73	;'I'
  1269  007A50  4F                 	db	79	;'O'
  1270  007A51  31                 	db	49	;'1'
  1271  007A52  30                 	db	48	;'0'
  1272  007A53  20                 	db	32
  1273  007A54  31                 	db	49	;'1'
  1274  007A55  0D                 	db	13
  1275  007A56  0A                 	db	10
  1276  007A57  00                 	db	0
  1277  007A58                     STR_255:
  1278  007A58  73                 	db	115	;'s'
  1279  007A59  79                 	db	121	;'y'
  1280  007A5A  73                 	db	115	;'s'
  1281  007A5B  20                 	db	32
  1282  007A5C  73                 	db	115	;'s'
  1283  007A5D  65                 	db	101	;'e'
  1284  007A5E  74                 	db	116	;'t'
  1285  007A5F  20                 	db	32
  1286  007A60  70                 	db	112	;'p'
  1287  007A61  69                 	db	105	;'i'
  1288  007A62  6E                 	db	110	;'n'
  1289  007A63  64                 	db	100	;'d'
  1290  007A64  69                 	db	105	;'i'
  1291  007A65  67                 	db	103	;'g'
  1292  007A66  20                 	db	32
  1293  007A67  47                 	db	71	;'G'
  1294  007A68  50                 	db	80	;'P'
  1295  007A69  49                 	db	73	;'I'
  1296  007A6A  4F                 	db	79	;'O'
  1297  007A6B  31                 	db	49	;'1'
  1298  007A6C  31                 	db	49	;'1'
  1299  007A6D  20                 	db	32
  1300  007A6E  31                 	db	49	;'1'
  1301  007A6F  0D                 	db	13
  1302  007A70  0A                 	db	10
  1303  007A71  00                 	db	0
  1304  007A72                     STR_22:
  1305  007A72  73                 	db	115	;'s'
  1306  007A73  79                 	db	121	;'y'
  1307  007A74  73                 	db	115	;'s'
  1308  007A75  20                 	db	32
  1309  007A76  73                 	db	115	;'s'
  1310  007A77  6C                 	db	108	;'l'
  1311  007A78  65                 	db	101	;'e'
  1312  007A79  65                 	db	101	;'e'
  1313  007A7A  70                 	db	112	;'p'
  1314  007A7B  20                 	db	32
  1315  007A7C  39                 	db	57	;'9'
  1316  007A7D  39                 	db	57	;'9'
  1317  007A7E  39                 	db	57	;'9'
  1318  007A7F  39                 	db	57	;'9'
  1319  007A80  39                 	db	57	;'9'
  1320  007A81  39                 	db	57	;'9'
  1321  007A82  39                 	db	57	;'9'
  1322  007A83  39                 	db	57	;'9'
  1323  007A84  39                 	db	57	;'9'
  1324  007A85  00                 	db	0
  1325  007A86                     STR_205:
  1326  007A86  28                 	db	40
  1327  007A87  55                 	db	85	;'U'
  1328  007A88  4E                 	db	78	;'N'
  1329  007A89  43                 	db	67	;'C'
  1330  007A8A  4E                 	db	78	;'N'
  1331  007A8B  46                 	db	70	;'F'
  1332  007A8C  29                 	db	41
  1333  007A8D  20                 	db	32
  1334  007A8E  20                 	db	32
  1335  007A8F  20                 	db	32
  1336  007A90  20                 	db	32
  1337  007A91  28                 	db	40
  1338  007A92  43                 	db	67	;'C'
  1339  007A93  4E                 	db	78	;'N'
  1340  007A94  46                 	db	70	;'F'
  1341  007A95  29                 	db	41
  1342  007A96  20                 	db	32
  1343  007A97  00                 	db	0
  1344  007A98                     STR_218:
  1345  007A98  4D                 	db	77	;'M'
  1346  007A99  61                 	db	97	;'a'
  1347  007A9A  63                 	db	99	;'c'
  1348  007A9B  20                 	db	32
  1349  007A9C  45                 	db	69	;'E'
  1350  007A9D  72                 	db	114	;'r'
  1351  007A9E  72                 	db	114	;'r'
  1352  007A9F  6F                 	db	111	;'o'
  1353  007AA0  72                 	db	114	;'r'
  1354  007AA1  20                 	db	32
  1355  007AA2  4F                 	db	79	;'O'
  1356  007AA3  63                 	db	99	;'c'
  1357  007AA4  63                 	db	99	;'c'
  1358  007AA5  75                 	db	117	;'u'
  1359  007AA6  72                 	db	114	;'r'
  1360  007AA7  65                 	db	101	;'e'
  1361  007AA8  64                 	db	100	;'d'
  1362  007AA9  00                 	db	0
  1363  007AAA                     STR_214:
  1364  007AAA  20                 	db	32
  1365  007AAB  20                 	db	32
  1366  007AAC  20                 	db	32
  1367  007AAD  20                 	db	32
  1368  007AAE  52                 	db	82	;'R'
  1369  007AAF  65                 	db	101	;'e'
  1370  007AB0  63                 	db	99	;'c'
  1371  007AB1  65                 	db	101	;'e'
  1372  007AB2  69                 	db	105	;'i'
  1373  007AB3  76                 	db	118	;'v'
  1374  007AB4  65                 	db	101	;'e'
  1375  007AB5  64                 	db	100	;'d'
  1376  007AB6  20                 	db	32
  1377  007AB7  20                 	db	32
  1378  007AB8  20                 	db	32
  1379  007AB9  20                 	db	32
  1380  007ABA  00                 	db	0
  1381  007ABB                     STR_84:
  1382  007ABB  20                 	db	32
  1383  007ABC  20                 	db	32
  1384  007ABD  20                 	db	32
  1385  007ABE  44                 	db	68	;'D'
  1386  007ABF  61                 	db	97	;'a'
  1387  007AC0  74                 	db	116	;'t'
  1388  007AC1  61                 	db	97	;'a'
  1389  007AC2  20                 	db	32
  1390  007AC3  52                 	db	82	;'R'
  1391  007AC4  61                 	db	97	;'a'
  1392  007AC5  74                 	db	116	;'t'
  1393  007AC6  65                 	db	101	;'e'
  1394  007AC7  20                 	db	32
  1395  007AC8  20                 	db	32
  1396  007AC9  20                 	db	32
  1397  007ACA  20                 	db	32
  1398  007ACB  00                 	db	0
  1399  007ACC                     STR_83:
  1400  007ACC  20                 	db	32
  1401  007ACD  20                 	db	32
  1402  007ACE  53                 	db	83	;'S'
  1403  007ACF  65                 	db	101	;'e'
  1404  007AD0  6C                 	db	108	;'l'
  1405  007AD1  65                 	db	101	;'e'
  1406  007AD2  63                 	db	99	;'c'
  1407  007AD3  74                 	db	116	;'t'
  1408  007AD4  20                 	db	32
  1409  007AD5  4C                 	db	76	;'L'
  1410  007AD6  6F                 	db	111	;'o'
  1411  007AD7  52                 	db	82	;'R'
  1412  007AD8  61                 	db	97	;'a'
  1413  007AD9  20                 	db	32
  1414  007ADA  20                 	db	32
  1415  007ADB  20                 	db	32
  1416  007ADC  00                 	db	0
  1417  007ADD                     STR_201:
  1418  007ADD  20                 	db	32
  1419  007ADE  20                 	db	32
  1420  007ADF  4C                 	db	76	;'L'
  1421  007AE0  61                 	db	97	;'a'
  1422  007AE1  73                 	db	115	;'s'
  1423  007AE2  74                 	db	116	;'t'
  1424  007AE3  20                 	db	32
  1425  007AE4  4D                 	db	77	;'M'
  1426  007AE5  65                 	db	101	;'e'
  1427  007AE6  73                 	db	115	;'s'
  1428  007AE7  73                 	db	115	;'s'
  1429  007AE8  61                 	db	97	;'a'
  1430  007AE9  67                 	db	103	;'g'
  1431  007AEA  65                 	db	101	;'e'
  1432  007AEB  20                 	db	32
  1433  007AEC  20                 	db	32
  1434  007AED  00                 	db	0
  1435  007AEE                     STR_200:
  1436  007AEE  20                 	db	32
  1437  007AEF  56                 	db	86	;'V'
  1438  007AF0  69                 	db	105	;'i'
  1439  007AF1  65                 	db	101	;'e'
  1440  007AF2  77                 	db	119	;'w'
  1441  007AF3  20                 	db	32
  1442  007AF4  44                 	db	68	;'D'
  1443  007AF5  6F                 	db	111	;'o'
  1444  007AF6  77                 	db	119	;'w'
  1445  007AF7  6E                 	db	110	;'n'
  1446  007AF8  6C                 	db	108	;'l'
  1447  007AF9  69                 	db	105	;'i'
  1448  007AFA  6E                 	db	110	;'n'
  1449  007AFB  6B                 	db	107	;'k'
  1450  007AFC  20                 	db	32
  1451  007AFD  20                 	db	32
  1452  007AFE  00                 	db	0
  1453  007AFF                     STR_93:
  1454  007AFF  20                 	db	32
  1455  007B00  20                 	db	32
  1456  007B01  49                 	db	73	;'I'
  1457  007B02  73                 	db	115	;'s'
  1458  007B03  73                 	db	115	;'s'
  1459  007B04  75                 	db	117	;'u'
  1460  007B05  65                 	db	101	;'e'
  1461  007B06  20                 	db	32
  1462  007B07  55                 	db	85	;'U'
  1463  007B08  70                 	db	112	;'p'
  1464  007B09  6C                 	db	108	;'l'
  1465  007B0A  69                 	db	105	;'i'
  1466  007B0B  6E                 	db	110	;'n'
  1467  007B0C  6B                 	db	107	;'k'
  1468  007B0D  20                 	db	32
  1469  007B0E  20                 	db	32
  1470  007B0F  00                 	db	0
  1471  007B10                     STR_28:
  1472  007B10  20                 	db	32
  1473  007B11  28                 	db	40
  1474  007B12  53                 	db	83	;'S'
  1475  007B13  31                 	db	49	;'1'
  1476  007B14  29                 	db	41
  1477  007B15  20                 	db	32
  1478  007B16  20                 	db	32
  1479  007B17  20                 	db	32
  1480  007B18  20                 	db	32
  1481  007B19  20                 	db	32
  1482  007B1A  20                 	db	32
  1483  007B1B  28                 	db	40
  1484  007B1C  53                 	db	83	;'S'
  1485  007B1D  32                 	db	50	;'2'
  1486  007B1E  29                 	db	41
  1487  007B1F  20                 	db	32
  1488  007B20  00                 	db	0
  1489  007B21                     STR_213:
  1490  007B21  53                 	db	83	;'S'
  1491  007B22  65                 	db	101	;'e'
  1492  007B23  72                 	db	114	;'r'
  1493  007B24  76                 	db	118	;'v'
  1494  007B25  65                 	db	101	;'e'
  1495  007B26  72                 	db	114	;'r'
  1496  007B27  20                 	db	32
  1497  007B28  52                 	db	82	;'R'
  1498  007B29  65                 	db	101	;'e'
  1499  007B2A  73                 	db	115	;'s'
  1500  007B2B  70                 	db	112	;'p'
  1501  007B2C  6F                 	db	111	;'o'
  1502  007B2D  6E                 	db	110	;'n'
  1503  007B2E  73                 	db	115	;'s'
  1504  007B2F  65                 	db	101	;'e'
  1505  007B30  20                 	db	32
  1506  007B31  00                 	db	0
  1507  007B32                     STR_94:
  1508  007B32  20                 	db	32
  1509  007B33  4C                 	db	76	;'L'
  1510  007B34  6F                 	db	111	;'o'
  1511  007B35  52                 	db	82	;'R'
  1512  007B36  61                 	db	97	;'a'
  1513  007B37  57                 	db	87	;'W'
  1514  007B38  41                 	db	65	;'A'
  1515  007B39  4E                 	db	78	;'N'
  1516  007B3A  20                 	db	32
  1517  007B3B  50                 	db	80	;'P'
  1518  007B3C  61                 	db	97	;'a'
  1519  007B3D  63                 	db	99	;'c'
  1520  007B3E  6B                 	db	107	;'k'
  1521  007B3F  65                 	db	101	;'e'
  1522  007B40  74                 	db	116	;'t'
  1523  007B41  20                 	db	32
  1524  007B42  00                 	db	0
  1525  007B43                     STR_224:
  1526  007B43  20                 	db	32
  1527  007B44  54                 	db	84	;'T'
  1528  007B45  78                 	db	120	;'x'
  1529  007B46  20                 	db	32
  1530  007B47  53                 	db	83	;'S'
  1531  007B48  6C                 	db	108	;'l'
  1532  007B49  65                 	db	101	;'e'
  1533  007B4A  65                 	db	101	;'e'
  1534  007B4B  70                 	db	112	;'p'
  1535  007B4C  20                 	db	32
  1536  007B4D  45                 	db	69	;'E'
  1537  007B4E  76                 	db	118	;'v'
  1538  007B4F  65                 	db	101	;'e'
  1539  007B50  6E                 	db	110	;'n'
  1540  007B51  74                 	db	116	;'t'
  1541  007B52  20                 	db	32
  1542  007B53  00                 	db	0
  1543  007B54                     STR_25:
  1544  007B54  52                 	db	82	;'R'
  1545  007B55  65                 	db	101	;'e'
  1546  007B56  52                 	db	82	;'R'
  1547  007B57  75                 	db	117	;'u'
  1548  007B58  6E                 	db	110	;'n'
  1549  007B59  20                 	db	32
  1550  007B5A  50                 	db	80	;'P'
  1551  007B5B  77                 	db	119	;'w'
  1552  007B5C  72                 	db	114	;'r'
  1553  007B5D  54                 	db	84	;'T'
  1554  007B5E  73                 	db	115	;'s'
  1555  007B5F  74                 	db	116	;'t'
  1556  007B60  3C                 	db	60	;'<'
  1557  007B61  53                 	db	83	;'S'
  1558  007B62  32                 	db	50	;'2'
  1559  007B63  3E                 	db	62	;'>'
  1560  007B64  00                 	db	0
  1561  007B65                     STR_72:
  1562  007B65  49                 	db	73	;'I'
  1563  007B66  73                 	db	115	;'s'
  1564  007B67  73                 	db	115	;'s'
  1565  007B68  75                 	db	117	;'u'
  1566  007B69  65                 	db	101	;'e'
  1567  007B6A  20                 	db	32
  1568  007B6B  50                 	db	80	;'P'
  1569  007B6C  65                 	db	101	;'e'
  1570  007B6D  72                 	db	114	;'r'
  1571  007B6E  6F                 	db	111	;'o'
  1572  007B6F  64                 	db	100	;'d'
  1573  007B70  69                 	db	105	;'i'
  1574  007B71  63                 	db	99	;'c'
  1575  007B72  20                 	db	32
  1576  007B73  54                 	db	84	;'T'
  1577  007B74  58                 	db	88	;'X'
  1578  007B75  00                 	db	0
  1579  007B76                     STR_216:
  1580  007B76  44                 	db	68	;'D'
  1581  007B77  61                 	db	97	;'a'
  1582  007B78  74                 	db	116	;'t'
  1583  007B79  61                 	db	97	;'a'
  1584  007B7A  20                 	db	32
  1585  007B7B  54                 	db	84	;'T'
  1586  007B7C  72                 	db	114	;'r'
  1587  007B7D  61                 	db	97	;'a'
  1588  007B7E  6E                 	db	110	;'n'
  1589  007B7F  73                 	db	115	;'s'
  1590  007B80  6D                 	db	109	;'m'
  1591  007B81  69                 	db	105	;'i'
  1592  007B82  74                 	db	116	;'t'
  1593  007B83  74                 	db	116	;'t'
  1594  007B84  65                 	db	101	;'e'
  1595  007B85  64                 	db	100	;'d'
  1596  007B86  00                 	db	0
  1597  007B87                     STR_235:
  1598  007B87  45                 	db	69	;'E'
  1599  007B88  6E                 	db	110	;'n'
  1600  007B89  74                 	db	116	;'t'
  1601  007B8A  65                 	db	101	;'e'
  1602  007B8B  72                 	db	114	;'r'
  1603  007B8C  20                 	db	32
  1604  007B8D  53                 	db	83	;'S'
  1605  007B8E  6C                 	db	108	;'l'
  1606  007B8F  65                 	db	101	;'e'
  1607  007B90  65                 	db	101	;'e'
  1608  007B91  70                 	db	112	;'p'
  1609  007B92  20                 	db	32
  1610  007B93  4D                 	db	77	;'M'
  1611  007B94  6F                 	db	111	;'o'
  1612  007B95  64                 	db	100	;'d'
  1613  007B96  65                 	db	101	;'e'
  1614  007B97  00                 	db	0
  1615  007B98                     STR_203:
  1616  007B98  55                 	db	85	;'U'
  1617  007B99  70                 	db	112	;'p'
  1618  007B9A  6C                 	db	108	;'l'
  1619  007B9B  69                 	db	105	;'i'
  1620  007B9C  6E                 	db	110	;'n'
  1621  007B9D  6B                 	db	107	;'k'
  1622  007B9E  20                 	db	32
  1623  007B9F  50                 	db	80	;'P'
  1624  007BA0  63                 	db	99	;'c'
  1625  007BA1  6B                 	db	107	;'k'
  1626  007BA2  74                 	db	116	;'t'
  1627  007BA3  20                 	db	32
  1628  007BA4  54                 	db	84	;'T'
  1629  007BA5  79                 	db	121	;'y'
  1630  007BA6  70                 	db	112	;'p'
  1631  007BA7  65                 	db	101	;'e'
  1632  007BA8  00                 	db	0
  1633  007BA9                     STR_26:
  1634  007BA9  4D                 	db	77	;'M'
  1635  007BAA  6F                 	db	111	;'o'
  1636  007BAB  62                 	db	98	;'b'
  1637  007BAC  69                 	db	105	;'i'
  1638  007BAD  6C                 	db	108	;'l'
  1639  007BAE  65                 	db	101	;'e'
  1640  007BAF  20                 	db	32
  1641  007BB0  4D                 	db	77	;'M'
  1642  007BB1  6F                 	db	111	;'o'
  1643  007BB2  74                 	db	116	;'t'
  1644  007BB3  65                 	db	101	;'e'
  1645  007BB4  20                 	db	32
  1646  007BB5  2D                 	db	45
  1647  007BB6  41                 	db	65	;'A'
  1648  007BB7  70                 	db	112	;'p'
  1649  007BB8  70                 	db	112	;'p'
  1650  007BB9  00                 	db	0
  1651  007BBA                     STR_27:
  1652  007BBA  4E                 	db	78	;'N'
  1653  007BBB  61                 	db	97	;'a'
  1654  007BBC  76                 	db	118	;'v'
  1655  007BBD  69                 	db	105	;'i'
  1656  007BBE  67                 	db	103	;'g'
  1657  007BBF  61                 	db	97	;'a'
  1658  007BC0  74                 	db	116	;'t'
  1659  007BC1  65                 	db	101	;'e'
  1660  007BC2  20                 	db	32
  1661  007BC3  20                 	db	32
  1662  007BC4  53                 	db	83	;'S'
  1663  007BC5  65                 	db	101	;'e'
  1664  007BC6  6C                 	db	108	;'l'
  1665  007BC7  65                 	db	101	;'e'
  1666  007BC8  63                 	db	99	;'c'
  1667  007BC9  74                 	db	116	;'t'
  1668  007BCA  00                 	db	0
  1669  007BCB                     STR_228:
  1670  007BCB  44                 	db	68	;'D'
  1671  007BCC  6F                 	db	111	;'o'
  1672  007BCD  77                 	db	119	;'w'
  1673  007BCE  6E                 	db	110	;'n'
  1674  007BCF  6C                 	db	108	;'l'
  1675  007BD0  69                 	db	105	;'i'
  1676  007BD1  6E                 	db	110	;'n'
  1677  007BD2  6B                 	db	107	;'k'
  1678  007BD3  20                 	db	32
  1679  007BD4  44                 	db	68	;'D'
  1680  007BD5  69                 	db	105	;'i'
  1681  007BD6  73                 	db	115	;'s'
  1682  007BD7  70                 	db	112	;'p'
  1683  007BD8  6C                 	db	108	;'l'
  1684  007BD9  61                 	db	97	;'a'
  1685  007BDA  79                 	db	121	;'y'
  1686  007BDB  00                 	db	0
  1687  007BDC                     STR_81:
  1688  007BDC  20                 	db	32
  1689  007BDD  20                 	db	32
  1690  007BDE  20                 	db	32
  1691  007BDF  20                 	db	32
  1692  007BE0  44                 	db	68	;'D'
  1693  007BE1  69                 	db	105	;'i'
  1694  007BE2  73                 	db	115	;'s'
  1695  007BE3  70                 	db	112	;'p'
  1696  007BE4  6C                 	db	108	;'l'
  1697  007BE5  61                 	db	97	;'a'
  1698  007BE6  79                 	db	121	;'y'
  1699  007BE7  20                 	db	32
  1700  007BE8  20                 	db	32
  1701  007BE9  20                 	db	32
  1702  007BEA  20                 	db	32
  1703  007BEB  00                 	db	0
  1704  007BEC                     STR_80:
  1705  007BEC  20                 	db	32
  1706  007BED  20                 	db	32
  1707  007BEE  53                 	db	83	;'S'
  1708  007BEF  65                 	db	101	;'e'
  1709  007BF0  6E                 	db	110	;'n'
  1710  007BF1  73                 	db	115	;'s'
  1711  007BF2  6F                 	db	111	;'o'
  1712  007BF3  72                 	db	114	;'r'
  1713  007BF4  20                 	db	32
  1714  007BF5  44                 	db	68	;'D'
  1715  007BF6  61                 	db	97	;'a'
  1716  007BF7  74                 	db	116	;'t'
  1717  007BF8  61                 	db	97	;'a'
  1718  007BF9  20                 	db	32
  1719  007BFA  20                 	db	32
  1720  007BFB  00                 	db	0
  1721  007BFC                     STR_75:
  1722  007BFC  28                 	db	40
  1723  007BFD  4E                 	db	78	;'N'
  1724  007BFE  41                 	db	65	;'A'
  1725  007BFF  56                 	db	86	;'V'
  1726  007C00  29                 	db	41
  1727  007C01  20                 	db	32
  1728  007C02  20                 	db	32
  1729  007C03  20                 	db	32
  1730  007C04  20                 	db	32
  1731  007C05  28                 	db	40
  1732  007C06  53                 	db	83	;'S'
  1733  007C07  45                 	db	69	;'E'
  1734  007C08  4C                 	db	76	;'L'
  1735  007C09  29                 	db	41
  1736  007C0A  20                 	db	32
  1737  007C0B  00                 	db	0
  1738  007C0C                     STR_236:
  1739  007C0C  28                 	db	40
  1740  007C0D  4E                 	db	78	;'N'
  1741  007C0E  41                 	db	65	;'A'
  1742  007C0F  56                 	db	86	;'V'
  1743  007C10  29                 	db	41
  1744  007C11  20                 	db	32
  1745  007C12  20                 	db	32
  1746  007C13  20                 	db	32
  1747  007C14  20                 	db	32
  1748  007C15  28                 	db	40
  1749  007C16  53                 	db	83	;'S'
  1750  007C17  4C                 	db	76	;'L'
  1751  007C18  50                 	db	80	;'P'
  1752  007C19  29                 	db	41
  1753  007C1A  20                 	db	32
  1754  007C1B  00                 	db	0
  1755  007C1C                     STR_243:
  1756  007C1C  6D                 	db	109	;'m'
  1757  007C1D  61                 	db	97	;'a'
  1758  007C1E  63                 	db	99	;'c'
  1759  007C1F  20                 	db	32
  1760  007C20  73                 	db	115	;'s'
  1761  007C21  65                 	db	101	;'e'
  1762  007C22  74                 	db	116	;'t'
  1763  007C23  20                 	db	32
  1764  007C24  61                 	db	97	;'a'
  1765  007C25  64                 	db	100	;'d'
  1766  007C26  72                 	db	114	;'r'
  1767  007C27  20                 	db	32
  1768  007C28  6F                 	db	111	;'o'
  1769  007C29  66                 	db	102	;'f'
  1770  007C2A  66                 	db	102	;'f'
  1771  007C2B  00                 	db	0
  1772  007C2C                     STR_220:
  1773  007C2C  4E                 	db	78	;'N'
  1774  007C2D  6F                 	db	111	;'o'
  1775  007C2E  20                 	db	32
  1776  007C2F  46                 	db	70	;'F'
  1777  007C30  72                 	db	114	;'r'
  1778  007C31  65                 	db	101	;'e'
  1779  007C32  65                 	db	101	;'e'
  1780  007C33  20                 	db	32
  1781  007C34  43                 	db	67	;'C'
  1782  007C35  68                 	db	104	;'h'
  1783  007C36  61                 	db	97	;'a'
  1784  007C37  6E                 	db	110	;'n'
  1785  007C38  6E                 	db	110	;'n'
  1786  007C39  65                 	db	101	;'e'
  1787  007C3A  6C                 	db	108	;'l'
  1788  007C3B  00                 	db	0
  1789  007C3C                     STR_7:
  1790  007C3C  42                 	db	66	;'B'
  1791  007C3D  75                 	db	117	;'u'
  1792  007C3E  69                 	db	105	;'i'
  1793  007C3F  6C                 	db	108	;'l'
  1794  007C40  64                 	db	100	;'d'
  1795  007C41  20                 	db	32
  1796  007C42  44                 	db	68	;'D'
  1797  007C43  61                 	db	97	;'a'
  1798  007C44  74                 	db	116	;'t'
  1799  007C45  65                 	db	101	;'e'
  1800  007C46  2F                 	db	47
  1801  007C47  54                 	db	84	;'T'
  1802  007C48  69                 	db	105	;'i'
  1803  007C49  6D                 	db	109	;'m'
  1804  007C4A  65                 	db	101	;'e'
  1805  007C4B  00                 	db	0
  1806  007C4C                     STR_163:
  1807  007C4C  45                 	db	69	;'E'
  1808  007C4D  78                 	db	120	;'x'
  1809  007C4E  69                 	db	105	;'i'
  1810  007C4F  74                 	db	116	;'t'
  1811  007C50  20                 	db	32
  1812  007C51  4D                 	db	77	;'M'
  1813  007C52  65                 	db	101	;'e'
  1814  007C53  6E                 	db	110	;'n'
  1815  007C54  75                 	db	117	;'u'
  1816  007C55  20                 	db	32
  1817  007C56  20                 	db	32
  1818  007C57  20                 	db	32
  1819  007C58  20                 	db	32
  1820  007C59  20                 	db	32
  1821  007C5A  00                 	db	0
  1822  007C5B                     STR_225:
  1823  007C5B  20                 	db	32
  1824  007C5C  20                 	db	32
  1825  007C5D  20                 	db	32
  1826  007C5E  20                 	db	32
  1827  007C5F  45                 	db	69	;'E'
  1828  007C60  6E                 	db	110	;'n'
  1829  007C61  61                 	db	97	;'a'
  1830  007C62  62                 	db	98	;'b'
  1831  007C63  6C                 	db	108	;'l'
  1832  007C64  65                 	db	101	;'e'
  1833  007C65  64                 	db	100	;'d'
  1834  007C66  20                 	db	32
  1835  007C67  20                 	db	32
  1836  007C68  20                 	db	32
  1837  007C69  00                 	db	0
  1838  007C6A                     STR_226:
  1839  007C6A  20                 	db	32
  1840  007C6B  20                 	db	32
  1841  007C6C  20                 	db	32
  1842  007C6D  20                 	db	32
  1843  007C6E  44                 	db	68	;'D'
  1844  007C6F  69                 	db	105	;'i'
  1845  007C70  73                 	db	115	;'s'
  1846  007C71  61                 	db	97	;'a'
  1847  007C72  62                 	db	98	;'b'
  1848  007C73  6C                 	db	108	;'l'
  1849  007C74  65                 	db	101	;'e'
  1850  007C75  64                 	db	100	;'d'
  1851  007C76  20                 	db	32
  1852  007C77  20                 	db	32
  1853  007C78  00                 	db	0
  1854  007C79                     STR_97:
  1855  007C79  44                 	db	68	;'D'
  1856  007C7A  61                 	db	97	;'a'
  1857  007C7B  74                 	db	116	;'t'
  1858  007C7C  61                 	db	97	;'a'
  1859  007C7D  20                 	db	32
  1860  007C7E  52                 	db	82	;'R'
  1861  007C7F  61                 	db	97	;'a'
  1862  007C80  74                 	db	116	;'t'
  1863  007C81  65                 	db	101	;'e'
  1864  007C82  3A                 	db	58	;':'
  1865  007C83  20                 	db	32
  1866  007C84  20                 	db	32
  1867  007C85  20                 	db	32
  1868  007C86  30                 	db	48	;'0'
  1869  007C87  00                 	db	0
  1870  007C88                     STR_98:
  1871  007C88  44                 	db	68	;'D'
  1872  007C89  61                 	db	97	;'a'
  1873  007C8A  74                 	db	116	;'t'
  1874  007C8B  61                 	db	97	;'a'
  1875  007C8C  20                 	db	32
  1876  007C8D  52                 	db	82	;'R'
  1877  007C8E  61                 	db	97	;'a'
  1878  007C8F  74                 	db	116	;'t'
  1879  007C90  65                 	db	101	;'e'
  1880  007C91  3A                 	db	58	;':'
  1881  007C92  20                 	db	32
  1882  007C93  20                 	db	32
  1883  007C94  20                 	db	32
  1884  007C95  31                 	db	49	;'1'
  1885  007C96  00                 	db	0
  1886  007C97                     STR_99:
  1887  007C97  44                 	db	68	;'D'
  1888  007C98  61                 	db	97	;'a'
  1889  007C99  74                 	db	116	;'t'
  1890  007C9A  61                 	db	97	;'a'
  1891  007C9B  20                 	db	32
  1892  007C9C  52                 	db	82	;'R'
  1893  007C9D  61                 	db	97	;'a'
  1894  007C9E  74                 	db	116	;'t'
  1895  007C9F  65                 	db	101	;'e'
  1896  007CA0  3A                 	db	58	;':'
  1897  007CA1  20                 	db	32
  1898  007CA2  20                 	db	32
  1899  007CA3  20                 	db	32
  1900  007CA4  32                 	db	50	;'2'
  1901  007CA5  00                 	db	0
  1902  007CA6                     STR_100:
  1903  007CA6  44                 	db	68	;'D'
  1904  007CA7  61                 	db	97	;'a'
  1905  007CA8  74                 	db	116	;'t'
  1906  007CA9  61                 	db	97	;'a'
  1907  007CAA  20                 	db	32
  1908  007CAB  52                 	db	82	;'R'
  1909  007CAC  61                 	db	97	;'a'
  1910  007CAD  74                 	db	116	;'t'
  1911  007CAE  65                 	db	101	;'e'
  1912  007CAF  3A                 	db	58	;':'
  1913  007CB0  20                 	db	32
  1914  007CB1  20                 	db	32
  1915  007CB2  20                 	db	32
  1916  007CB3  33                 	db	51	;'3'
  1917  007CB4  00                 	db	0
  1918  007CB5                     STR_118:
  1919  007CB5  44                 	db	68	;'D'
  1920  007CB6  61                 	db	97	;'a'
  1921  007CB7  74                 	db	116	;'t'
  1922  007CB8  61                 	db	97	;'a'
  1923  007CB9  20                 	db	32
  1924  007CBA  52                 	db	82	;'R'
  1925  007CBB  61                 	db	97	;'a'
  1926  007CBC  74                 	db	116	;'t'
  1927  007CBD  65                 	db	101	;'e'
  1928  007CBE  3A                 	db	58	;':'
  1929  007CBF  20                 	db	32
  1930  007CC0  20                 	db	32
  1931  007CC1  20                 	db	32
  1932  007CC2  34                 	db	52	;'4'
  1933  007CC3  00                 	db	0
  1934  007CC4                     STR_127:
  1935  007CC4  44                 	db	68	;'D'
  1936  007CC5  61                 	db	97	;'a'
  1937  007CC6  74                 	db	116	;'t'
  1938  007CC7  61                 	db	97	;'a'
  1939  007CC8  20                 	db	32
  1940  007CC9  52                 	db	82	;'R'
  1941  007CCA  61                 	db	97	;'a'
  1942  007CCB  74                 	db	116	;'t'
  1943  007CCC  65                 	db	101	;'e'
  1944  007CCD  3A                 	db	58	;':'
  1945  007CCE  20                 	db	32
  1946  007CCF  20                 	db	32
  1947  007CD0  20                 	db	32
  1948  007CD1  35                 	db	53	;'5'
  1949  007CD2  00                 	db	0
  1950  007CD3                     STR_136:
  1951  007CD3  44                 	db	68	;'D'
  1952  007CD4  61                 	db	97	;'a'
  1953  007CD5  74                 	db	116	;'t'
  1954  007CD6  61                 	db	97	;'a'
  1955  007CD7  20                 	db	32
  1956  007CD8  52                 	db	82	;'R'
  1957  007CD9  61                 	db	97	;'a'
  1958  007CDA  74                 	db	116	;'t'
  1959  007CDB  65                 	db	101	;'e'
  1960  007CDC  3A                 	db	58	;':'
  1961  007CDD  20                 	db	32
  1962  007CDE  20                 	db	32
  1963  007CDF  20                 	db	32
  1964  007CE0  36                 	db	54	;'6'
  1965  007CE1  00                 	db	0
  1966  007CE2                     STR_145:
  1967  007CE2  44                 	db	68	;'D'
  1968  007CE3  61                 	db	97	;'a'
  1969  007CE4  74                 	db	116	;'t'
  1970  007CE5  61                 	db	97	;'a'
  1971  007CE6  20                 	db	32
  1972  007CE7  52                 	db	82	;'R'
  1973  007CE8  61                 	db	97	;'a'
  1974  007CE9  74                 	db	116	;'t'
  1975  007CEA  65                 	db	101	;'e'
  1976  007CEB  3A                 	db	58	;':'
  1977  007CEC  20                 	db	32
  1978  007CED  20                 	db	32
  1979  007CEE  20                 	db	32
  1980  007CEF  37                 	db	55	;'7'
  1981  007CF0  00                 	db	0
  1982  007CF1                     STR_154:
  1983  007CF1  41                 	db	65	;'A'
  1984  007CF2  75                 	db	117	;'u'
  1985  007CF3  74                 	db	116	;'t'
  1986  007CF4  6F                 	db	111	;'o'
  1987  007CF5  20                 	db	32
  1988  007CF6  44                 	db	68	;'D'
  1989  007CF7  61                 	db	97	;'a'
  1990  007CF8  74                 	db	116	;'t'
  1991  007CF9  61                 	db	97	;'a'
  1992  007CFA  20                 	db	32
  1993  007CFB  52                 	db	82	;'R'
  1994  007CFC  61                 	db	97	;'a'
  1995  007CFD  74                 	db	116	;'t'
  1996  007CFE  65                 	db	101	;'e'
  1997  007CFF  00                 	db	0
  1998  007D00                     STR_242:
  1999  007D00  6D                 	db	109	;'m'
  2000  007D01  61                 	db	97	;'a'
  2001  007D02  63                 	db	99	;'c'
  2002  007D03  20                 	db	32
  2003  007D04  73                 	db	115	;'s'
  2004  007D05  65                 	db	101	;'e'
  2005  007D06  74                 	db	116	;'t'
  2006  007D07  20                 	db	32
  2007  007D08  61                 	db	97	;'a'
  2008  007D09  64                 	db	100	;'d'
  2009  007D0A  72                 	db	114	;'r'
  2010  007D0B  20                 	db	32
  2011  007D0C  6F                 	db	111	;'o'
  2012  007D0D  6E                 	db	110	;'n'
  2013  007D0E  00                 	db	0
  2014  007D0F                     STR_3:
  2015  007D0F  20                 	db	32
  2016  007D10  20                 	db	32
  2017  007D11  20                 	db	32
  2018  007D12  52                 	db	82	;'R'
  2019  007D13  43                 	db	67	;'C'
  2020  007D14  33                 	db	51	;'3'
  2021  007D15  20                 	db	32
  2022  007D16  43                 	db	67	;'C'
  2023  007D17  6F                 	db	111	;'o'
  2024  007D18  64                 	db	100	;'d'
  2025  007D19  65                 	db	101	;'e'
  2026  007D1A  20                 	db	32
  2027  007D1B  20                 	db	32
  2028  007D1C  20                 	db	32
  2029  007D1D  00                 	db	0
  2030  007D1E                     STR_2:
  2031  007D1E  20                 	db	32
  2032  007D1F  20                 	db	32
  2033  007D20  20                 	db	32
  2034  007D21  4C                 	db	76	;'L'
  2035  007D22  6F                 	db	111	;'o'
  2036  007D23  52                 	db	82	;'R'
  2037  007D24  61                 	db	97	;'a'
  2038  007D25  20                 	db	32
  2039  007D26  44                 	db	68	;'D'
  2040  007D27  65                 	db	101	;'e'
  2041  007D28  6D                 	db	109	;'m'
  2042  007D29  6F                 	db	111	;'o'
  2043  007D2A  20                 	db	32
  2044  007D2B  20                 	db	32
  2045  007D2C  00                 	db	0
  2046  007D2D                     STR_1:
  2047  007D2D  4D                 	db	77	;'M'
  2048  007D2E  69                 	db	105	;'i'
  2049  007D2F  63                 	db	99	;'c'
  2050  007D30  72                 	db	114	;'r'
  2051  007D31  6F                 	db	111	;'o'
  2052  007D32  63                 	db	99	;'c'
  2053  007D33  68                 	db	104	;'h'
  2054  007D34  69                 	db	105	;'i'
  2055  007D35  70                 	db	112	;'p'
  2056  007D36  20                 	db	32
  2057  007D37  4D                 	db	77	;'M'
  2058  007D38  6F                 	db	111	;'o'
  2059  007D39  74                 	db	116	;'t'
  2060  007D3A  65                 	db	101	;'e'
  2061  007D3B  00                 	db	0
  2062  007D3C                     STR_79:
  2063  007D3C  6D                 	db	109	;'m'
  2064  007D3D  61                 	db	97	;'a'
  2065  007D3E  63                 	db	99	;'c'
  2066  007D3F  20                 	db	32
  2067  007D40  74                 	db	116	;'t'
  2068  007D41  78                 	db	120	;'x'
  2069  007D42  20                 	db	32
  2070  007D43  75                 	db	117	;'u'
  2071  007D44  6E                 	db	110	;'n'
  2072  007D45  63                 	db	99	;'c'
  2073  007D46  6E                 	db	110	;'n'
  2074  007D47  66                 	db	102	;'f'
  2075  007D48  20                 	db	32
  2076  007D49  00                 	db	0
  2077  007D4A                     STR_38:
  2078  007D4A  6D                 	db	109	;'m'
  2079  007D4B  61                 	db	97	;'a'
  2080  007D4C  63                 	db	99	;'c'
  2081  007D4D  20                 	db	32
  2082  007D4E  6A                 	db	106	;'j'
  2083  007D4F  6F                 	db	111	;'o'
  2084  007D50  69                 	db	105	;'i'
  2085  007D51  6E                 	db	110	;'n'
  2086  007D52  20                 	db	32
  2087  007D53  6F                 	db	111	;'o'
  2088  007D54  74                 	db	116	;'t'
  2089  007D55  61                 	db	97	;'a'
  2090  007D56  61                 	db	97	;'a'
  2091  007D57  00                 	db	0
  2092  007D58                     STR_50:
  2093  007D58  69                 	db	105	;'i'
  2094  007D59  6E                 	db	110	;'n'
  2095  007D5A  76                 	db	118	;'v'
  2096  007D5B  61                 	db	97	;'a'
  2097  007D5C  6C                 	db	108	;'l'
  2098  007D5D  69                 	db	105	;'i'
  2099  007D5E  64                 	db	100	;'d'
  2100  007D5F  5F                 	db	95	;'_'
  2101  007D60  70                 	db	112	;'p'
  2102  007D61  61                 	db	97	;'a'
  2103  007D62  72                 	db	114	;'r'
  2104  007D63  61                 	db	97	;'a'
  2105  007D64  6D                 	db	109	;'m'
  2106  007D65  00                 	db	0
  2107  007D66                     STR_33:
  2108  007D66  6B                 	db	107	;'k'
  2109  007D67  65                 	db	101	;'e'
  2110  007D68  79                 	db	121	;'y'
  2111  007D69  73                 	db	115	;'s'
  2112  007D6A  5F                 	db	95	;'_'
  2113  007D6B  6E                 	db	110	;'n'
  2114  007D6C  6F                 	db	111	;'o'
  2115  007D6D  74                 	db	116	;'t'
  2116  007D6E  5F                 	db	95	;'_'
  2117  007D6F  69                 	db	105	;'i'
  2118  007D70  6E                 	db	110	;'n'
  2119  007D71  69                 	db	105	;'i'
  2120  007D72  74                 	db	116	;'t'
  2121  007D73  00                 	db	0
  2122  007D74                     STR_204:
  2123  007D74  54                 	db	84	;'T'
  2124  007D75  68                 	db	104	;'h'
  2125  007D76  72                 	db	114	;'r'
  2126  007D77  6F                 	db	111	;'o'
  2127  007D78  75                 	db	117	;'u'
  2128  007D79  20                 	db	32
  2129  007D7A  50                 	db	80	;'P'
  2130  007D7B  6F                 	db	111	;'o'
  2131  007D7C  72                 	db	114	;'r'
  2132  007D7D  74                 	db	116	;'t'
  2133  007D7E  23                 	db	35
  2134  007D7F  20                 	db	32
  2135  007D80  00                 	db	0
  2136  007D81                     STR_74:
  2137  007D81  4C                 	db	76	;'L'
  2138  007D82  3A                 	db	58	;':'
  2139  007D83  20                 	db	32
  2140  007D84  20                 	db	32
  2141  007D85  20                 	db	32
  2142  007D86  20                 	db	32
  2143  007D87  20                 	db	32
  2144  007D88  20                 	db	32
  2145  007D89  20                 	db	32
  2146  007D8A  54                 	db	84	;'T'
  2147  007D8B  3A                 	db	58	;':'
  2148  007D8C  20                 	db	32
  2149  007D8D  00                 	db	0
  2150  007D8E                     STR_244:
  2151  007D8E  6D                 	db	109	;'m'
  2152  007D8F  61                 	db	97	;'a'
  2153  007D90  63                 	db	99	;'c'
  2154  007D91  20                 	db	32
  2155  007D92  73                 	db	115	;'s'
  2156  007D93  65                 	db	101	;'e'
  2157  007D94  74                 	db	116	;'t'
  2158  007D95  20                 	db	32
  2159  007D96  64                 	db	100	;'d'
  2160  007D97  72                 	db	114	;'r'
  2161  007D98  20                 	db	32
  2162  007D99  30                 	db	48	;'0'
  2163  007D9A  00                 	db	0
  2164  007D9B                     STR_245:
  2165  007D9B  6D                 	db	109	;'m'
  2166  007D9C  61                 	db	97	;'a'
  2167  007D9D  63                 	db	99	;'c'
  2168  007D9E  20                 	db	32
  2169  007D9F  73                 	db	115	;'s'
  2170  007DA0  65                 	db	101	;'e'
  2171  007DA1  74                 	db	116	;'t'
  2172  007DA2  20                 	db	32
  2173  007DA3  64                 	db	100	;'d'
  2174  007DA4  72                 	db	114	;'r'
  2175  007DA5  20                 	db	32
  2176  007DA6  31                 	db	49	;'1'
  2177  007DA7  00                 	db	0
  2178  007DA8                     STR_246:
  2179  007DA8  6D                 	db	109	;'m'
  2180  007DA9  61                 	db	97	;'a'
  2181  007DAA  63                 	db	99	;'c'
  2182  007DAB  20                 	db	32
  2183  007DAC  73                 	db	115	;'s'
  2184  007DAD  65                 	db	101	;'e'
  2185  007DAE  74                 	db	116	;'t'
  2186  007DAF  20                 	db	32
  2187  007DB0  64                 	db	100	;'d'
  2188  007DB1  72                 	db	114	;'r'
  2189  007DB2  20                 	db	32
  2190  007DB3  32                 	db	50	;'2'
  2191  007DB4  00                 	db	0
  2192  007DB5                     STR_247:
  2193  007DB5  6D                 	db	109	;'m'
  2194  007DB6  61                 	db	97	;'a'
  2195  007DB7  63                 	db	99	;'c'
  2196  007DB8  20                 	db	32
  2197  007DB9  73                 	db	115	;'s'
  2198  007DBA  65                 	db	101	;'e'
  2199  007DBB  74                 	db	116	;'t'
  2200  007DBC  20                 	db	32
  2201  007DBD  64                 	db	100	;'d'
  2202  007DBE  72                 	db	114	;'r'
  2203  007DBF  20                 	db	32
  2204  007DC0  33                 	db	51	;'3'
  2205  007DC1  00                 	db	0
  2206  007DC2                     STR_248:
  2207  007DC2  6D                 	db	109	;'m'
  2208  007DC3  61                 	db	97	;'a'
  2209  007DC4  63                 	db	99	;'c'
  2210  007DC5  20                 	db	32
  2211  007DC6  73                 	db	115	;'s'
  2212  007DC7  65                 	db	101	;'e'
  2213  007DC8  74                 	db	116	;'t'
  2214  007DC9  20                 	db	32
  2215  007DCA  64                 	db	100	;'d'
  2216  007DCB  72                 	db	114	;'r'
  2217  007DCC  20                 	db	32
  2218  007DCD  34                 	db	52	;'4'
  2219  007DCE  00                 	db	0
  2220  007DCF                     STR_249:
  2221  007DCF  6D                 	db	109	;'m'
  2222  007DD0  61                 	db	97	;'a'
  2223  007DD1  63                 	db	99	;'c'
  2224  007DD2  20                 	db	32
  2225  007DD3  73                 	db	115	;'s'
  2226  007DD4  65                 	db	101	;'e'
  2227  007DD5  74                 	db	116	;'t'
  2228  007DD6  20                 	db	32
  2229  007DD7  64                 	db	100	;'d'
  2230  007DD8  72                 	db	114	;'r'
  2231  007DD9  20                 	db	32
  2232  007DDA  35                 	db	53	;'5'
  2233  007DDB  00                 	db	0
  2234  007DDC                     STR_250:
  2235  007DDC  6D                 	db	109	;'m'
  2236  007DDD  61                 	db	97	;'a'
  2237  007DDE  63                 	db	99	;'c'
  2238  007DDF  20                 	db	32
  2239  007DE0  73                 	db	115	;'s'
  2240  007DE1  65                 	db	101	;'e'
  2241  007DE2  74                 	db	116	;'t'
  2242  007DE3  20                 	db	32
  2243  007DE4  64                 	db	100	;'d'
  2244  007DE5  72                 	db	114	;'r'
  2245  007DE6  20                 	db	32
  2246  007DE7  36                 	db	54	;'6'
  2247  007DE8  00                 	db	0
  2248  007DE9                     STR_251:
  2249  007DE9  6D                 	db	109	;'m'
  2250  007DEA  61                 	db	97	;'a'
  2251  007DEB  63                 	db	99	;'c'
  2252  007DEC  20                 	db	32
  2253  007DED  73                 	db	115	;'s'
  2254  007DEE  65                 	db	101	;'e'
  2255  007DEF  74                 	db	116	;'t'
  2256  007DF0  20                 	db	32
  2257  007DF1  64                 	db	100	;'d'
  2258  007DF2  72                 	db	114	;'r'
  2259  007DF3  20                 	db	32
  2260  007DF4  37                 	db	55	;'7'
  2261  007DF5  00                 	db	0
  2262  007DF6                     STR_31:
  2263  007DF6  6D                 	db	109	;'m'
  2264  007DF7  61                 	db	97	;'a'
  2265  007DF8  63                 	db	99	;'c'
  2266  007DF9  20                 	db	32
  2267  007DFA  6A                 	db	106	;'j'
  2268  007DFB  6F                 	db	111	;'o'
  2269  007DFC  69                 	db	105	;'i'
  2270  007DFD  6E                 	db	110	;'n'
  2271  007DFE  20                 	db	32
  2272  007DFF  61                 	db	97	;'a'
  2273  007E00  62                 	db	98	;'b'
  2274  007E01  70                 	db	112	;'p'
  2275  007E02  00                 	db	0
  2276  007E03                     STR_10:
  2277  007E03  42                 	db	66	;'B'
  2278  007E04  75                 	db	117	;'u'
  2279  007E05  74                 	db	116	;'t'
  2280  007E06  74                 	db	116	;'t'
  2281  007E07  6F                 	db	111	;'o'
  2282  007E08  6E                 	db	110	;'n'
  2283  007E09  20                 	db	32
  2284  007E0A  54                 	db	84	;'T'
  2285  007E0B  65                 	db	101	;'e'
  2286  007E0C  73                 	db	115	;'s'
  2287  007E0D  74                 	db	116	;'t'
  2288  007E0E  3A                 	db	58	;':'
  2289  007E0F  00                 	db	0
  2290  007E10                     STR_13:
  2291  007E10  42                 	db	66	;'B'
  2292  007E11  75                 	db	117	;'u'
  2293  007E12  74                 	db	116	;'t'
  2294  007E13  74                 	db	116	;'t'
  2295  007E14  6F                 	db	111	;'o'
  2296  007E15  6E                 	db	110	;'n'
  2297  007E16  31                 	db	49	;'1'
  2298  007E17  20                 	db	32
  2299  007E18  50                 	db	80	;'P'
  2300  007E19  41                 	db	65	;'A'
  2301  007E1A  53                 	db	83	;'S'
  2302  007E1B  53                 	db	83	;'S'
  2303  007E1C  00                 	db	0
  2304  007E1D                     STR_14:
  2305  007E1D  42                 	db	66	;'B'
  2306  007E1E  75                 	db	117	;'u'
  2307  007E1F  74                 	db	116	;'t'
  2308  007E20  74                 	db	116	;'t'
  2309  007E21  6F                 	db	111	;'o'
  2310  007E22  6E                 	db	110	;'n'
  2311  007E23  32                 	db	50	;'2'
  2312  007E24  20                 	db	32
  2313  007E25  50                 	db	80	;'P'
  2314  007E26  41                 	db	65	;'A'
  2315  007E27  53                 	db	83	;'S'
  2316  007E28  53                 	db	83	;'S'
  2317  007E29  00                 	db	0
  2318  007E2A                     STR_12:
  2319  007E2A  50                 	db	80	;'P'
  2320  007E2B  72                 	db	114	;'r'
  2321  007E2C  65                 	db	101	;'e'
  2322  007E2D  73                 	db	115	;'s'
  2323  007E2E  73                 	db	115	;'s'
  2324  007E2F  20                 	db	32
  2325  007E30  42                 	db	66	;'B'
  2326  007E31  75                 	db	117	;'u'
  2327  007E32  74                 	db	116	;'t'
  2328  007E33  74                 	db	116	;'t'
  2329  007E34  6F                 	db	111	;'o'
  2330  007E35  6E                 	db	110	;'n'
  2331  007E36  00                 	db	0
  2332  007E37                     STR_260:
  2333  007E37  55                 	db	85	;'U'
  2334  007E38  53                 	db	83	;'S'
  2335  007E39  42                 	db	66	;'B'
  2336  007E3A  20                 	db	32
  2337  007E3B  48                 	db	72	;'H'
  2338  007E3C  61                 	db	97	;'a'
  2339  007E3D  6E                 	db	110	;'n'
  2340  007E3E  64                 	db	100	;'d'
  2341  007E3F  6C                 	db	108	;'l'
  2342  007E40  65                 	db	101	;'e'
  2343  007E41  72                 	db	114	;'r'
  2344  007E42  00                 	db	0
  2345  007E43                     STR_73:
  2346  007E43  4F                 	db	79	;'O'
  2347  007E44  6E                 	db	110	;'n'
  2348  007E45  20                 	db	32
  2349  007E46  50                 	db	80	;'P'
  2350  007E47  6F                 	db	111	;'o'
  2351  007E48  72                 	db	114	;'r'
  2352  007E49  74                 	db	116	;'t'
  2353  007E4A  20                 	db	32
  2354  007E4B  23                 	db	35
  2355  007E4C  3A                 	db	58	;':'
  2356  007E4D  20                 	db	32
  2357  007E4E  00                 	db	0
  2358  007E4F                     STR_210:
  2359  007E4F  54                 	db	84	;'T'
  2360  007E50  78                 	db	120	;'x'
  2361  007E51  20                 	db	32
  2362  007E52  50                 	db	80	;'P'
  2363  007E53  6F                 	db	111	;'o'
  2364  007E54  72                 	db	114	;'r'
  2365  007E55  74                 	db	116	;'t'
  2366  007E56  20                 	db	32
  2367  007E57  23                 	db	35
  2368  007E58  3A                 	db	58	;':'
  2369  007E59  20                 	db	32
  2370  007E5A  00                 	db	0
  2371  007E5B                     STR_208:
  2372  007E5B  53                 	db	83	;'S'
  2373  007E5C  65                 	db	101	;'e'
  2374  007E5D  6E                 	db	110	;'n'
  2375  007E5E  74                 	db	116	;'t'
  2376  007E5F  20                 	db	32
  2377  007E60  44                 	db	68	;'D'
  2378  007E61  61                 	db	97	;'a'
  2379  007E62  74                 	db	116	;'t'
  2380  007E63  61                 	db	97	;'a'
  2381  007E64  3A                 	db	58	;':'
  2382  007E65  20                 	db	32
  2383  007E66  00                 	db	0
  2384  007E67                     STR_77:
  2385  007E67  6D                 	db	109	;'m'
  2386  007E68  61                 	db	97	;'a'
  2387  007E69  63                 	db	99	;'c'
  2388  007E6A  20                 	db	32
  2389  007E6B  74                 	db	116	;'t'
  2390  007E6C  78                 	db	120	;'x'
  2391  007E6D  20                 	db	32
  2392  007E6E  63                 	db	99	;'c'
  2393  007E6F  6E                 	db	110	;'n'
  2394  007E70  66                 	db	102	;'f'
  2395  007E71  20                 	db	32
  2396  007E72  00                 	db	0
  2397  007E73                     STR_36:
  2398  007E73  54                 	db	84	;'T'
  2399  007E74  72                 	db	114	;'r'
  2400  007E75  79                 	db	121	;'y'
  2401  007E76  69                 	db	105	;'i'
  2402  007E77  6E                 	db	110	;'n'
  2403  007E78  67                 	db	103	;'g'
  2404  007E79  20                 	db	32
  2405  007E7A  4F                 	db	79	;'O'
  2406  007E7B  54                 	db	84	;'T'
  2407  007E7C  41                 	db	65	;'A'
  2408  007E7D  41                 	db	65	;'A'
  2409  007E7E  00                 	db	0
  2410  007E7F                     STR_63:
  2411  007E7F  6D                 	db	109	;'m'
  2412  007E80  61                 	db	97	;'a'
  2413  007E81  63                 	db	99	;'c'
  2414  007E82  20                 	db	32
  2415  007E83  67                 	db	103	;'g'
  2416  007E84  65                 	db	101	;'e'
  2417  007E85  74                 	db	116	;'t'
  2418  007E86  20                 	db	32
  2419  007E87  61                 	db	97	;'a'
  2420  007E88  64                 	db	100	;'d'
  2421  007E89  72                 	db	114	;'r'
  2422  007E8A  00                 	db	0
  2423  007E8B                     STR_29:
  2424  007E8B  73                 	db	115	;'s'
  2425  007E8C  79                 	db	121	;'y'
  2426  007E8D  73                 	db	115	;'s'
  2427  007E8E  20                 	db	32
  2428  007E8F  67                 	db	103	;'g'
  2429  007E90  65                 	db	101	;'e'
  2430  007E91  74                 	db	116	;'t'
  2431  007E92  20                 	db	32
  2432  007E93  76                 	db	118	;'v'
  2433  007E94  65                 	db	101	;'e'
  2434  007E95  72                 	db	114	;'r'
  2435  007E96  00                 	db	0
  2436  007E97                     STR_8:
  2437  007E97  4E                 	db	78	;'N'
  2438  007E98  6F                 	db	111	;'o'
  2439  007E99  76                 	db	118	;'v'
  2440  007E9A  20                 	db	32
  2441  007E9B  31                 	db	49	;'1'
  2442  007E9C  32                 	db	50	;'2'
  2443  007E9D  20                 	db	32
  2444  007E9E  32                 	db	50	;'2'
  2445  007E9F  30                 	db	48	;'0'
  2446  007EA0  31                 	db	49	;'1'
  2447  007EA1  35                 	db	53	;'5'
  2448  007EA2  00                 	db	0
  2449  007EA3                     STR_11:
  2450  007EA3  42                 	db	66	;'B'
  2451  007EA4  75                 	db	117	;'u'
  2452  007EA5  74                 	db	116	;'t'
  2453  007EA6  74                 	db	116	;'t'
  2454  007EA7  6F                 	db	111	;'o'
  2455  007EA8  6E                 	db	110	;'n'
  2456  007EA9  20                 	db	32
  2457  007EAA  46                 	db	70	;'F'
  2458  007EAB  41                 	db	65	;'A'
  2459  007EAC  49                 	db	73	;'I'
  2460  007EAD  4C                 	db	76	;'L'
  2461  007EAE  00                 	db	0
  2462  007EAF                     STR_54:
  2463  007EAF  4F                 	db	79	;'O'
  2464  007EB0  54                 	db	84	;'T'
  2465  007EB1  41                 	db	65	;'A'
  2466  007EB2  41                 	db	65	;'A'
  2467  007EB3  20                 	db	32
  2468  007EB4  4A                 	db	74	;'J'
  2469  007EB5  6F                 	db	111	;'o'
  2470  007EB6  69                 	db	105	;'i'
  2471  007EB7  6E                 	db	110	;'n'
  2472  007EB8  20                 	db	32
  2473  007EB9  00                 	db	0
  2474  007EBA                     STR_52:
  2475  007EBA  6E                 	db	110	;'n'
  2476  007EBB  6F                 	db	111	;'o'
  2477  007EBC  5F                 	db	95	;'_'
  2478  007EBD  66                 	db	102	;'f'
  2479  007EBE  72                 	db	114	;'r'
  2480  007EBF  65                 	db	101	;'e'
  2481  007EC0  65                 	db	101	;'e'
  2482  007EC1  5F                 	db	95	;'_'
  2483  007EC2  63                 	db	99	;'c'
  2484  007EC3  68                 	db	104	;'h'
  2485  007EC4  00                 	db	0
  2486  007EC5                     STR_42:
  2487  007EC5  53                 	db	83	;'S'
  2488  007EC6  75                 	db	117	;'u'
  2489  007EC7  63                 	db	99	;'c'
  2490  007EC8  63                 	db	99	;'c'
  2491  007EC9  65                 	db	101	;'e'
  2492  007ECA  73                 	db	115	;'s'
  2493  007ECB  73                 	db	115	;'s'
  2494  007ECC  66                 	db	102	;'f'
  2495  007ECD  75                 	db	117	;'u'
  2496  007ECE  6C                 	db	108	;'l'
  2497  007ECF  00                 	db	0
  2498  007ED0                     STR_65:
  2499  007ED0  6D                 	db	109	;'m'
  2500  007ED1  61                 	db	97	;'a'
  2501  007ED2  63                 	db	99	;'c'
  2502  007ED3  20                 	db	32
  2503  007ED4  67                 	db	103	;'g'
  2504  007ED5  65                 	db	101	;'e'
  2505  007ED6  74                 	db	116	;'t'
  2506  007ED7  20                 	db	32
  2507  007ED8  64                 	db	100	;'d'
  2508  007ED9  72                 	db	114	;'r'
  2509  007EDA  00                 	db	0
  2510  007EDB                     STR_48:
  2511  007EDB  56                 	db	86	;'V'
  2512  007EDC  61                 	db	97	;'a'
  2513  007EDD  6C                 	db	108	;'l'
  2514  007EDE  69                 	db	105	;'i'
  2515  007EDF  64                 	db	100	;'d'
  2516  007EE0  20                 	db	32
  2517  007EE1  4B                 	db	75	;'K'
  2518  007EE2  65                 	db	101	;'e'
  2519  007EE3  79                 	db	121	;'y'
  2520  007EE4  73                 	db	115	;'s'
  2521  007EE5  00                 	db	0
  2522  007EE6                     STR_15:
  2523  007EE6  43                 	db	67	;'C'
  2524  007EE7  6F                 	db	111	;'o'
  2525  007EE8  6D                 	db	109	;'m'
  2526  007EE9  6D                 	db	109	;'m'
  2527  007EEA  20                 	db	32
  2528  007EEB  54                 	db	84	;'T'
  2529  007EEC  65                 	db	101	;'e'
  2530  007EED  73                 	db	115	;'s'
  2531  007EEE  74                 	db	116	;'t'
  2532  007EEF  3A                 	db	58	;':'
  2533  007EF0  00                 	db	0
  2534  007EF1                     STR_229:
  2535  007EF1  52                 	db	82	;'R'
  2536  007EF2  78                 	db	120	;'x'
  2537  007EF3  20                 	db	32
  2538  007EF4  50                 	db	80	;'P'
  2539  007EF5  6F                 	db	111	;'o'
  2540  007EF6  72                 	db	114	;'r'
  2541  007EF7  74                 	db	116	;'t'
  2542  007EF8  23                 	db	35
  2543  007EF9  20                 	db	32
  2544  007EFA  00                 	db	0
  2545  007EFB                     STR_41:
  2546  007EFB  41                 	db	65	;'A'
  2547  007EFC  42                 	db	66	;'B'
  2548  007EFD  50                 	db	80	;'P'
  2549  007EFE  20                 	db	32
  2550  007EFF  4A                 	db	74	;'J'
  2551  007F00  6F                 	db	111	;'o'
  2552  007F01  69                 	db	105	;'i'
  2553  007F02  6E                 	db	110	;'n'
  2554  007F03  20                 	db	32
  2555  007F04  00                 	db	0
  2556  007F05                     STR_23:
  2557  007F05  4D                 	db	77	;'M'
  2558  007F06  4F                 	db	79	;'O'
  2559  007F07  54                 	db	84	;'T'
  2560  007F08  45                 	db	69	;'E'
  2561  007F09  20                 	db	32
  2562  007F0A  4D                 	db	77	;'M'
  2563  007F0B  6F                 	db	111	;'o'
  2564  007F0C  64                 	db	100	;'d'
  2565  007F0D  65                 	db	101	;'e'
  2566  007F0E  00                 	db	0
  2567  007F0F                     STR_57:
  2568  007F0F  4F                 	db	79	;'O'
  2569  007F10  54                 	db	84	;'T'
  2570  007F11  41                 	db	65	;'A'
  2571  007F12  41                 	db	65	;'A'
  2572  007F13  20                 	db	32
  2573  007F14  4A                 	db	74	;'J'
  2574  007F15  6F                 	db	111	;'o'
  2575  007F16  69                 	db	105	;'i'
  2576  007F17  6E                 	db	110	;'n'
  2577  007F18  00                 	db	0
  2578  007F19                     STR_45:
  2579  007F19  6D                 	db	109	;'m'
  2580  007F1A  61                 	db	97	;'a'
  2581  007F1B  63                 	db	99	;'c'
  2582  007F1C  20                 	db	32
  2583  007F1D  72                 	db	114	;'r'
  2584  007F1E  65                 	db	101	;'e'
  2585  007F1F  73                 	db	115	;'s'
  2586  007F20  65                 	db	101	;'e'
  2587  007F21  74                 	db	116	;'t'
  2588  007F22  00                 	db	0
  2589  007F23                     STR_16:
  2590  007F23  4C                 	db	76	;'L'
  2591  007F24  45                 	db	69	;'E'
  2592  007F25  44                 	db	68	;'D'
  2593  007F26  20                 	db	32
  2594  007F27  54                 	db	84	;'T'
  2595  007F28  65                 	db	101	;'e'
  2596  007F29  73                 	db	115	;'s'
  2597  007F2A  74                 	db	116	;'t'
  2598  007F2B  3A                 	db	58	;':'
  2599  007F2C  00                 	db	0
  2600  007F2D                     STR_258:
  2601  007F2D  43                 	db	67	;'C'
  2602  007F2E  44                 	db	68	;'D'
  2603  007F2F  43                 	db	67	;'C'
  2604  007F30  20                 	db	32
  2605  007F31  4D                 	db	77	;'M'
  2606  007F32  6F                 	db	111	;'o'
  2607  007F33  64                 	db	100	;'d'
  2608  007F34  65                 	db	101	;'e'
  2609  007F35  00                 	db	0
  2610  007F36                     STR_49:
  2611  007F36  52                 	db	82	;'R'
  2612  007F37  65                 	db	101	;'e'
  2613  007F38  71                 	db	113	;'q'
  2614  007F39  75                 	db	117	;'u'
  2615  007F3A  69                 	db	105	;'i'
  2616  007F3B  72                 	db	114	;'r'
  2617  007F3C  65                 	db	101	;'e'
  2618  007F3D  64                 	db	100	;'d'
  2619  007F3E  00                 	db	0
  2620  007F3F                     STR_40:
  2621  007F3F  61                 	db	97	;'a'
  2622  007F40  63                 	db	99	;'c'
  2623  007F41  63                 	db	99	;'c'
  2624  007F42  65                 	db	101	;'e'
  2625  007F43  70                 	db	112	;'p'
  2626  007F44  74                 	db	116	;'t'
  2627  007F45  65                 	db	101	;'e'
  2628  007F46  64                 	db	100	;'d'
  2629  007F47  00                 	db	0
  2630  007F48                     STR_252:
  2631  007F48  6D                 	db	109	;'m'
  2632  007F49  61                 	db	97	;'a'
  2633  007F4A  63                 	db	99	;'c'
  2634  007F4B  20                 	db	32
  2635  007F4C  73                 	db	115	;'s'
  2636  007F4D  61                 	db	97	;'a'
  2637  007F4E  76                 	db	118	;'v'
  2638  007F4F  65                 	db	101	;'e'
  2639  007F50  00                 	db	0
  2640  007F51                     STR_24:
  2641  007F51  53                 	db	83	;'S'
  2642  007F52  74                 	db	116	;'t'
  2643  007F53  61                 	db	97	;'a'
  2644  007F54  72                 	db	114	;'r'
  2645  007F55  74                 	db	116	;'t'
  2646  007F56  69                 	db	105	;'i'
  2647  007F57  6E                 	db	110	;'n'
  2648  007F58  67                 	db	103	;'g'
  2649  007F59  00                 	db	0
  2650  007F5A                     STR_34:
  2651  007F5A  41                 	db	65	;'A'
  2652  007F5B  42                 	db	66	;'B'
  2653  007F5C  50                 	db	80	;'P'
  2654  007F5D  20                 	db	32
  2655  007F5E  4A                 	db	74	;'J'
  2656  007F5F  6F                 	db	111	;'o'
  2657  007F60  69                 	db	105	;'i'
  2658  007F61  6E                 	db	110	;'n'
  2659  007F62  00                 	db	0
  2660  007F63                     STR_4:
  2661  007F63  4D                 	db	77	;'M'
  2662  007F64  6F                 	db	111	;'o'
  2663  007F65  54                 	db	84	;'T'
  2664  007F66  65                 	db	101	;'e'
  2665  007F67  20                 	db	32
  2666  007F68  76                 	db	118	;'v'
  2667  007F69  20                 	db	32
  2668  007F6A  2E                 	db	46
  2669  007F6B  00                 	db	0
  2670  007F6C                     STR_9:
  2671  007F6C  31                 	db	49	;'1'
  2672  007F6D  36                 	db	54	;'6'
  2673  007F6E  3A                 	db	58	;':'
  2674  007F6F  33                 	db	51	;'3'
  2675  007F70  39                 	db	57	;'9'
  2676  007F71  3A                 	db	58	;':'
  2677  007F72  34                 	db	52	;'4'
  2678  007F73  35                 	db	53	;'5'
  2679  007F74  00                 	db	0
  2680  007F75  52                 	db	82	;'R'
  2681  007F76  46                 	db	70	;'F'
  2682  007F77  20                 	db	32
  2683  007F78  54                 	db	84	;'T'
  2684  007F79  65                 	db	101	;'e'
  2685  007F7A  73                 	db	115	;'s'
  2686  007F7B  74                 	db	116	;'t'
  2687  007F7C  3A                 	db	58	;':'
  2688  007F7D  00                 	db	0
  2689  007F7E                     STR_17:
  2690  007F7E  41                 	db	65	;'A'
  2691  007F7F  44                 	db	68	;'D'
  2692  007F80  43                 	db	67	;'C'
  2693  007F81  20                 	db	32
  2694  007F82  54                 	db	84	;'T'
  2695  007F83  65                 	db	101	;'e'
  2696  007F84  73                 	db	115	;'s'
  2697  007F85  74                 	db	116	;'t'
  2698  007F86  00                 	db	0
  2699  007F87                     STR_259:
  2700  007F87  43                 	db	67	;'C'
  2701  007F88  6F                 	db	111	;'o'
  2702  007F89  6D                 	db	109	;'m'
  2703  007F8A  6D                 	db	109	;'m'
  2704  007F8B  61                 	db	97	;'a'
  2705  007F8C  6E                 	db	110	;'n'
  2706  007F8D  64                 	db	100	;'d'
  2707  007F8E  00                 	db	0
  2708  007F8F                     STR_61:
  2709  007F8F  4E                 	db	78	;'N'
  2710  007F90  4F                 	db	79	;'O'
  2711  007F91  20                 	db	32
  2712  007F92  46                 	db	70	;'F'
  2713  007F93  52                 	db	82	;'R'
  2714  007F94  45                 	db	69	;'E'
  2715  007F95  45                 	db	69	;'E'
  2716  007F96  00                 	db	0
  2717  007F97                     STR_62:
  2718  007F97  43                 	db	67	;'C'
  2719  007F98  48                 	db	72	;'H'
  2720  007F99  41                 	db	65	;'A'
  2721  007F9A  4E                 	db	78	;'N'
  2722  007F9B  4E                 	db	78	;'N'
  2723  007F9C  45                 	db	69	;'E'
  2724  007F9D  4C                 	db	76	;'L'
  2725  007F9E  00                 	db	0
  2726  007F9F                     STR_35:
  2727  007F9F  4E                 	db	78	;'N'
  2728  007FA0  6F                 	db	111	;'o'
  2729  007FA1  20                 	db	32
  2730  007FA2  4B                 	db	75	;'K'
  2731  007FA3  65                 	db	101	;'e'
  2732  007FA4  79                 	db	121	;'y'
  2733  007FA5  73                 	db	115	;'s'
  2734  007FA6  00                 	db	0
  2735  007FA7                     STR_18:
  2736  007FA7  54                 	db	84	;'T'
  2737  007FA8  65                 	db	101	;'e'
  2738  007FA9  6D                 	db	109	;'m'
  2739  007FAA  70                 	db	112	;'p'
  2740  007FAB  20                 	db	32
  2741  007FAC  20                 	db	32
  2742  007FAD  3D                 	db	61	;'='
  2743  007FAE  00                 	db	0
  2744  007FAF                     STR_19:
  2745  007FAF  4C                 	db	76	;'L'
  2746  007FB0  69                 	db	105	;'i'
  2747  007FB1  67                 	db	103	;'g'
  2748  007FB2  68                 	db	104	;'h'
  2749  007FB3  74                 	db	116	;'t'
  2750  007FB4  20                 	db	32
  2751  007FB5  3D                 	db	61	;'='
  2752  007FB6  00                 	db	0
  2753  007FB7                     STR_88:
  2754  007FB7  54                 	db	84	;'T'
  2755  007FB8  65                 	db	101	;'e'
  2756  007FB9  6D                 	db	109	;'m'
  2757  007FBA  70                 	db	112	;'p'
  2758  007FBB  20                 	db	32
  2759  007FBC  3A                 	db	58	;':'
  2760  007FBD  00                 	db	0
  2761  007FBE                     STR_87:
  2762  007FBE  4C                 	db	76	;'L'
  2763  007FBF  69                 	db	105	;'i'
  2764  007FC0  67                 	db	103	;'g'
  2765  007FC1  68                 	db	104	;'h'
  2766  007FC2  74                 	db	116	;'t'
  2767  007FC3  3A                 	db	58	;':'
  2768  007FC4  00                 	db	0
  2769  007FC5                     STR_58:
  2770  007FC5  44                 	db	68	;'D'
  2771  007FC6  65                 	db	101	;'e'
  2772  007FC7  6E                 	db	110	;'n'
  2773  007FC8  69                 	db	105	;'i'
  2774  007FC9  65                 	db	101	;'e'
  2775  007FCA  64                 	db	100	;'d'
  2776  007FCB  00                 	db	0
  2777  007FCC                     STR_43:
  2778  007FCC  64                 	db	100	;'d'
  2779  007FCD  65                 	db	101	;'e'
  2780  007FCE  6E                 	db	110	;'n'
  2781  007FCF  69                 	db	105	;'i'
  2782  007FD0  65                 	db	101	;'e'
  2783  007FD1  64                 	db	100	;'d'
  2784  007FD2  00                 	db	0
  2785  007FD3                     STR_219:
  2786  007FD3  6E                 	db	110	;'n'
  2787  007FD4  6F                 	db	111	;'o'
  2788  007FD5  5F                 	db	95	;'_'
  2789  007FD6  66                 	db	102	;'f'
  2790  007FD7  72                 	db	114	;'r'
  2791  007FD8  65                 	db	101	;'e'
  2792  007FD9  00                 	db	0
  2793  007FDA                     STR_217:
  2794  007FDA  6D                 	db	109	;'m'
  2795  007FDB  61                 	db	97	;'a'
  2796  007FDC  63                 	db	99	;'c'
  2797  007FDD  5F                 	db	95	;'_'
  2798  007FDE  65                 	db	101	;'e'
  2799  007FDF  72                 	db	114	;'r'
  2800  007FE0  00                 	db	0
  2801  007FE1                     STR_212:
  2802  007FE1  6D                 	db	109	;'m'
  2803  007FE2  61                 	db	97	;'a'
  2804  007FE3  63                 	db	99	;'c'
  2805  007FE4  5F                 	db	95	;'_'
  2806  007FE5  72                 	db	114	;'r'
  2807  007FE6  78                 	db	120	;'x'
  2808  007FE7  00                 	db	0
  2809  007FE8                     STR_215:
  2810  007FE8  6D                 	db	109	;'m'
  2811  007FE9  61                 	db	97	;'a'
  2812  007FEA  63                 	db	99	;'c'
  2813  007FEB  5F                 	db	95	;'_'
  2814  007FEC  74                 	db	116	;'t'
  2815  007FED  78                 	db	120	;'x'
  2816  007FEE  00                 	db	0
  2817  007FEF                     STR_30:
  2818  007FEF  52                 	db	82	;'R'
  2819  007FF0  4E                 	db	78	;'N'
  2820  007FF1  00                 	db	0
  2821  007FF2                     STR_32:
  2822  007FF2  6F                 	db	111	;'o'
  2823  007FF3  6B                 	db	107	;'k'
  2824  007FF4  00                 	db	0
  2825  007FF5                     STR_101:
  2826  007FF5  2A                 	db	42
  2827  007FF6  00                 	db	0
  2828  007FF7                     STR_96:
  2829  007FF7  3C                 	db	60	;'<'
  2830  007FF8  00                 	db	0
  2831  007FF9                     STR_76:
  2832  007FF9  43                 	db	67	;'C'
  2833  007FFA  00                 	db	0
  2834  007FFB                     STR_78:
  2835  007FFB  55                 	db	85	;'U'
  2836  007FFC  00                 	db	0
  2837  007FFD                     STR_21:
  2838  007FFD  7A                 	db	122	;'z'
  2839  007FFE  00                 	db	0
  2840  0000                     
  2841                           ; #config settings
  2842  007FFF  00                 	db	0	; dummy byte at the end
  2843  0000                     
  2844                           	psect	cinit
  2845  003FB2                     __pcinit:
  2846                           	opt stack 0
  2847  003FB2                     start_initialization:
  2848                           	opt stack 0
  2849  003FB2                     __initialization:
  2850                           	opt stack 0
  2851                           
  2852                           ; Clear objects allocated to BANK2 (64 bytes)
  2853  003FB2  EE02  F000         	lfsr	0,__pbssBANK2
  2854  003FB6  0E40               	movlw	64
  2855  003FB8                     clear_0:
  2856  003FB8  6AEE               	clrf	postinc0,c
  2857  003FBA  06E8               	decf	wreg,f,c
  2858  003FBC  E1FD               	bnz	clear_0
  2859                           
  2860                           ; Clear objects allocated to BANK1 (216 bytes)
  2861  003FBE  EE01  F000         	lfsr	0,__pbssBANK1
  2862  003FC2  0ED8               	movlw	216
  2863  003FC4                     clear_1:
  2864  003FC4  6AEE               	clrf	postinc0,c
  2865  003FC6  06E8               	decf	wreg,f,c
  2866  003FC8  E1FD               	bnz	clear_1
  2867                           
  2868                           ; Clear objects allocated to BANK0 (104 bytes)
  2869  003FCA  EE00  F060         	lfsr	0,__pbssBANK0
  2870  003FCE  0E68               	movlw	104
  2871  003FD0                     clear_2:
  2872  003FD0  6AEE               	clrf	postinc0,c
  2873  003FD2  06E8               	decf	wreg,f,c
  2874  003FD4  E1FD               	bnz	clear_2
  2875                           
  2876                           ; Clear objects allocated to COMRAM (45 bytes)
  2877  003FD6  EE00  F001         	lfsr	0,__pbssCOMRAM
  2878  003FDA  0E2D               	movlw	45
  2879  003FDC                     clear_3:
  2880  003FDC  6AEE               	clrf	postinc0,c
  2881  003FDE  06E8               	decf	wreg,f,c
  2882  003FE0  E1FD               	bnz	clear_3
  2883                           
  2884                           ; Initialize objects allocated to BANK0 (5 bytes)
  2885                           ; load TBLPTR registers with __pidataBANK0
  2886  003FE2  0EB9               	movlw	low __pidataBANK0
  2887  003FE4  6EF6               	movwf	tblptrl,c
  2888  003FE6  0E34               	movlw	high __pidataBANK0
  2889  003FE8  6EF7               	movwf	tblptrh,c
  2890  003FEA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2891  003FEC  6EF8               	movwf	tblptru,c
  2892  003FEE  EE00  F0F5         	lfsr	0,__pdataBANK0
  2893  003FF2  EE10 F005          	lfsr	1,5
  2894  003FF6                     copy_data0:
  2895  003FF6  0009               	tblrd		*+
  2896  003FF8  CFF5 FFEE          	movff	tablat,postinc0
  2897  003FFC  50E5               	movf	postdec1,w,c
  2898  003FFE  50E1               	movf	fsr1l,w,c
  2899  004000  E1FA               	bnz	copy_data0
  2900  004002                     end_of_initialization:
  2901                           	opt stack 0
  2902  004002                     __end_of__initialization:
  2903                           	opt stack 0
  2904  004002  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2905  004004  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2906  004006  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2907  004008  6EF8               	movwf	tblptru,c
  2908  00400A  0100               	movlb	0
  2909  00400C  EFE3  F027         	goto	_main	;jump to C main() function
  2910                           tblptru	equ	0xFF8
  2911                           tblptrh	equ	0xFF7
  2912                           tblptrl	equ	0xFF6
  2913                           tablat	equ	0xFF5
  2914                           postinc0	equ	0xFEE
  2915                           wreg	equ	0xFE8
  2916                           postdec1	equ	0xFE5
  2917                           fsr1l	equ	0xFE1
  2918                           
  2919                           	psect	bssCOMRAM
  2920  000001                     __pbssCOMRAM:
  2921                           	opt stack 0
  2922  000001                     _outPipes:
  2923                           	opt stack 0
  2924  000001                     	ds	8
  2925  000009                     _inPipes:
  2926                           	opt stack 0
  2927  000009                     	ds	6
  2928  00000F                     _pBDTEntryIn:
  2929                           	opt stack 0
  2930  00000F                     	ds	6
  2931  000015                     _pBDTEntryEP0OutCurrent:
  2932                           	opt stack 0
  2933  000015                     	ds	2
  2934  000017                     _pBDTEntryEP0OutNext:
  2935                           	opt stack 0
  2936  000017                     	ds	2
  2937  000019                     _LastRS232Out:
  2938                           	opt stack 0
  2939  000019                     	ds	1
  2940  00001A                     _NextUSBOut:
  2941                           	opt stack 0
  2942  00001A                     	ds	1
  2943  00001B                     _RS232_Out_Data_Rdy:
  2944                           	opt stack 0
  2945  00001B                     	ds	1
  2946  00001C                     _RS232cp:
  2947                           	opt stack 0
  2948  00001C                     	ds	1
  2949  00001D                     _RemoteWakeup:
  2950                           	opt stack 0
  2951  00001D                     	ds	1
  2952  00001E                     _USBDeferStatusStagePacket:
  2953                           	opt stack 0
  2954  00001E                     	ds	1
  2955  00001F                     _USBStatusStageTimeoutCounter:
  2956                           	opt stack 0
  2957  00001F                     	ds	1
  2958  000020                     _cdc_trf_state:
  2959                           	opt stack 0
  2960  000020                     	ds	1
  2961  000021                     _controlTransferState:
  2962                           	opt stack 0
  2963  000021                     	ds	1
  2964  000022                     _endpoint_number:
  2965                           	opt stack 0
  2966  000022                     	ds	1
  2967  000023                     _eusartRxCount:
  2968                           	opt stack 0
  2969  000023                     	ds	1
  2970  000024                     _eusartRxHead:
  2971                           	opt stack 0
  2972  000024                     	ds	1
  2973  000025                     _eusartRxTail:
  2974                           	opt stack 0
  2975  000025                     	ds	1
  2976  000026                     _eusartTxBufferRemaining:
  2977                           	opt stack 0
  2978  000026                     	ds	1
  2979  000027                     _eusartTxHead:
  2980                           	opt stack 0
  2981  000027                     	ds	1
  2982  000028                     _eusartTxTail:
  2983                           	opt stack 0
  2984  000028                     	ds	1
  2985  000029                     _modemBufferIndex:
  2986                           	opt stack 0
  2987  000029                     	ds	1
  2988  00002A                     _rxByteFlag:
  2989                           	opt stack 0
  2990  00002A                     	ds	1
  2991  00002B                     _shortPacketStatus:
  2992                           	opt stack 0
  2993  00002B                     	ds	1
  2994  00002C                     _USBActiveConfiguration:
  2995                           	opt stack 0
  2996  00002C                     	ds	1
  2997  00002D                     _USTATcopy:
  2998                           	opt stack 0
  2999  00002D                     	ds	1
  3000                           tblptru	equ	0xFF8
  3001                           tblptrh	equ	0xFF7
  3002                           tblptrl	equ	0xFF6
  3003                           tablat	equ	0xFF5
  3004                           postinc0	equ	0xFEE
  3005                           wreg	equ	0xFE8
  3006                           postdec1	equ	0xFE5
  3007                           fsr1l	equ	0xFE1
  3008                           
  3009                           	psect	bssBANK0
  3010  000060                     __pbssBANK0:
  3011                           	opt stack 0
  3012  000060                     _pBDTEntryOut:
  3013                           	opt stack 0
  3014  000060                     	ds	6
  3015  000066                     service_pushbutton@PB_Timer:
  3016                           	opt stack 0
  3017  000066                     	ds	4
  3018  00006A                     _ep_data_in:
  3019                           	opt stack 0
  3020  00006A                     	ds	3
  3021  00006D                     _ep_data_out:
  3022                           	opt stack 0
  3023  00006D                     	ds	3
  3024  000070                     _pCDCDst:
  3025                           	opt stack 0
  3026  000070                     	ds	3
  3027  000073                     _pCDCSrc:
  3028                           	opt stack 0
  3029  000073                     	ds	3
  3030  000076                     _CDCDataInHandle:
  3031                           	opt stack 0
  3032  000076                     	ds	2
  3033  000078                     _CDCDataOutHandle:
  3034                           	opt stack 0
  3035  000078                     	ds	2
  3036  00007A                     _light:
  3037                           	opt stack 0
  3038  00007A                     	ds	2
  3039  00007C                     _pDst:
  3040                           	opt stack 0
  3041  00007C                     	ds	2
  3042  00007E                     _temperature:
  3043                           	opt stack 0
  3044  00007E                     	ds	2
  3045  000080                     _timer1ReloadVal:
  3046                           	opt stack 0
  3047  000080                     	ds	2
  3048  000082                     _timerMinTickCount:
  3049                           	opt stack 0
  3050  000082                     	ds	2
  3051  000084                     _timerMsTickCount:
  3052                           	opt stack 0
  3053  000084                     	ds	2
  3054  000086                     _BothEP0OutUOWNsSet:
  3055                           	opt stack 0
  3056  000086                     	ds	1
  3057  000087                     _USBBusIsSuspended:
  3058                           	opt stack 0
  3059  000087                     	ds	1
  3060  000088                     _USBDeferINDataStagePackets:
  3061                           	opt stack 0
  3062  000088                     	ds	1
  3063  000089                     _USBDeferOUTDataStagePackets:
  3064                           	opt stack 0
  3065  000089                     	ds	1
  3066  00008A                     _USBDeviceState:
  3067                           	opt stack 0
  3068  00008A                     	ds	1
  3069  00008B                     _USBStatusStageEnabledFlag1:
  3070                           	opt stack 0
  3071  00008B                     	ds	1
  3072  00008C                     _USBStatusStageEnabledFlag2:
  3073                           	opt stack 0
  3074  00008C                     	ds	1
  3075  00008D                     _activeState:
  3076                           	opt stack 0
  3077  00008D                     	ds	1
  3078  00008E                     _adrStatus:
  3079                           	opt stack 0
  3080  00008E                     	ds	1
  3081  00008F                     _appTimer:
  3082                           	opt stack 0
  3083  00008F                     	ds	1
  3084  000090                     _cdc_mem_type:
  3085                           	opt stack 0
  3086  000090                     	ds	1
  3087  000091                     _cdc_rx_len:
  3088                           	opt stack 0
  3089  000091                     	ds	1
  3090  000092                     _cdc_tx_len:
  3091                           	opt stack 0
  3092  000092                     	ds	1
  3093  000093                     _dataRatePosition:
  3094                           	opt stack 0
  3095  000093                     	ds	1
  3096  000094                     _m10SecTicker:
  3097                           	opt stack 0
  3098  000094                     	ds	1
  3099  000095                     _operationType:
  3100                           	opt stack 0
  3101  000095                     	ds	1
  3102  000096                     _powerOnStatus:
  3103                           	opt stack 0
  3104  000096                     	ds	1
  3105  000097                     _randomPortNum:
  3106                           	opt stack 0
  3107  000097                     	ds	1
  3108  000098                     _runningState:
  3109                           	opt stack 0
  3110  000098                     	ds	1
  3111  000099                     _secTicker:
  3112                           	opt stack 0
  3113  000099                     	ds	1
  3114  00009A                     _sleepTicker:
  3115                           	opt stack 0
  3116  00009A                     	ds	1
  3117  00009B                     _sleepTxOccurances:
  3118                           	opt stack 0
  3119  00009B                     	ds	1
  3120  00009C                     _usbState:
  3121                           	opt stack 0
  3122  00009C                     	ds	1
  3123  00009D                     service_pushbutton@Release_Timer:
  3124                           	opt stack 0
  3125  00009D                     	ds	1
  3126  00009E                     _dataBuffer:
  3127                           	opt stack 0
  3128  00009E                     	ds	12
  3129  0000AA                     _cdc_notice:
  3130                           	opt stack 0
  3131  0000AA                     	ds	10
  3132  0000B4                     _responseData:
  3133                           	opt stack 0
  3134  0000B4                     	ds	8
  3135  0000BC                     _line_coding:
  3136                           	opt stack 0
  3137  0000BC                     	ds	7
  3138  0000C3                     _responsePortNum:
  3139                           	opt stack 0
  3140  0000C3                     	ds	3
  3141  0000C6                     _USBAlternateInterface:
  3142                           	opt stack 0
  3143  0000C6                     	ds	2
  3144                           tblptru	equ	0xFF8
  3145                           tblptrh	equ	0xFF7
  3146                           tblptrl	equ	0xFF6
  3147                           tablat	equ	0xFF5
  3148                           postinc0	equ	0xFEE
  3149                           wreg	equ	0xFE8
  3150                           postdec1	equ	0xFE5
  3151                           fsr1l	equ	0xFE1
  3152                           
  3153                           	psect	dataBANK0
  3154  0000F5                     __pdataBANK0:
  3155                           	opt stack 0
  3156  0000F5                     _selectedFont:
  3157                           	opt stack 0
  3158  0000F5                     	ds	2
  3159  0000F7                     _dataRateSelection:
  3160                           	opt stack 0
  3161  0000F7                     	ds	1
  3162  0000F8                     _moteState:
  3163                           	opt stack 0
  3164  0000F8                     	ds	1
  3165  0000F9                     _periodicState:
  3166                           	opt stack 0
  3167  0000F9                     	ds	1
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           postinc0	equ	0xFEE
  3173                           wreg	equ	0xFE8
  3174                           postdec1	equ	0xFE5
  3175                           fsr1l	equ	0xFE1
  3176                           
  3177                           	psect	bssBANK1
  3178  000100                     __pbssBANK1:
  3179                           	opt stack 0
  3180  000100                     _eusartRxBuffer:
  3181                           	opt stack 0
  3182  000100                     	ds	64
  3183  000140                     _USB_Buffer:
  3184                           	opt stack 0
  3185  000140                     	ds	64
  3186  000180                     _modemResonseBuffer:
  3187                           	opt stack 0
  3188  000180                     	ds	64
  3189  0001C0                     _responseId:
  3190                           	opt stack 0
  3191  0001C0                     	ds	16
  3192  0001D0                     _dummy_encapsulated_cmd_response:
  3193                           	opt stack 0
  3194  0001D0                     	ds	8
  3195                           tblptru	equ	0xFF8
  3196                           tblptrh	equ	0xFF7
  3197                           tblptrl	equ	0xFF6
  3198                           tablat	equ	0xFF5
  3199                           postinc0	equ	0xFEE
  3200                           wreg	equ	0xFE8
  3201                           postdec1	equ	0xFE5
  3202                           fsr1l	equ	0xFE1
  3203                           
  3204                           	psect	bssBANK2
  3205  000200                     __pbssBANK2:
  3206                           	opt stack 0
  3207  000200                     _eusartTxBuffer:
  3208                           	opt stack 0
  3209  000200                     	ds	64
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           postinc0	equ	0xFEE
  3215                           wreg	equ	0xFE8
  3216                           postdec1	equ	0xFE5
  3217                           fsr1l	equ	0xFE1
  3218                           
  3219                           	psect	cstackBANK1
  3220  0001D8                     __pcstackBANK1:
  3221                           	opt stack 0
  3222  0001D8                     moteHandler@gotoSleep:
  3223                           	opt stack 0
  3224                           
  3225                           ; 1 bytes @ 0x0
  3226  0001D8                     	ds	1
  3227  0001D9                     moteHandler@gotoNextState:
  3228                           	opt stack 0
  3229                           
  3230                           ; 1 bytes @ 0x1
  3231  0001D9                     	ds	1
  3232  0001DA                     moteHandler@Traw:
  3233                           	opt stack 0
  3234                           
  3235                           ; 2 bytes @ 0x2
  3236  0001DA                     	ds	2
  3237  0001DC                     moteHandler@s2Button:
  3238                           	opt stack 0
  3239                           
  3240                           ; 1 bytes @ 0x4
  3241  0001DC                     	ds	1
  3242  0001DD                     moteHandler@buttonPress:
  3243                           	opt stack 0
  3244                           
  3245                           ; 1 bytes @ 0x5
  3246  0001DD                     	ds	1
  3247  0001DE                     moteHandler@i:
  3248                           	opt stack 0
  3249                           
  3250                           ; 1 bytes @ 0x6
  3251  0001DE                     	ds	1
  3252  0001DF                     moteHandler@i_1340:
  3253                           	opt stack 0
  3254                           
  3255                           ; 1 bytes @ 0x7
  3256  0001DF                     	ds	1
  3257  0001E0                     moteHandler@readMessage:
  3258                           	opt stack 0
  3259                           
  3260                           ; 1 bytes @ 0x8
  3261  0001E0                     	ds	1
  3262                           tblptru	equ	0xFF8
  3263                           tblptrh	equ	0xFF7
  3264                           tblptrl	equ	0xFF6
  3265                           tablat	equ	0xFF5
  3266                           postinc0	equ	0xFEE
  3267                           wreg	equ	0xFE8
  3268                           postdec1	equ	0xFE5
  3269                           fsr1l	equ	0xFE1
  3270                           
  3271                           	psect	cstackBANK0
  3272  0000C8                     __pcstackBANK0:
  3273                           	opt stack 0
  3274  0000C8                     ??_TMR1_Initialize:
  3275  0000C8                     ?_ADC_GetConversion:
  3276                           	opt stack 0
  3277  0000C8                     ?_strncmp:
  3278                           	opt stack 0
  3279  0000C8                     ?_strcmp:
  3280                           	opt stack 0
  3281  0000C8                     ?_USBTransferOnePacket:
  3282                           	opt stack 0
  3283  0000C8                     ?___lwdiv:
  3284                           	opt stack 0
  3285  0000C8                     ?___lwmod:
  3286                           	opt stack 0
  3287  0000C8                     MOTEapp_handlerState@state:
  3288                           	opt stack 0
  3289  0000C8                     MOTEapp_SetADR@state:
  3290                           	opt stack 0
  3291  0000C8                     MOTEapp_SetDataRate@dataRate:
  3292                           	opt stack 0
  3293  0000C8                     MOTEapp_TimerBasedTask@timerTask:
  3294                           	opt stack 0
  3295  0000C8                     unhex@c:
  3296                           	opt stack 0
  3297  0000C8                     hexToStr@character:
  3298                           	opt stack 0
  3299  0000C8                     moteApp_clearBuffers@counter:
  3300                           	opt stack 0
  3301  0000C8                     USBapp_handlerState@state:
  3302                           	opt stack 0
  3303  0000C8                     service_pushbutton@bs:
  3304                           	opt stack 0
  3305  0000C8                     EUSART_Read@readValue:
  3306                           	opt stack 0
  3307  0000C8                     EUSART_Write@txData:
  3308                           	opt stack 0
  3309  0000C8                     EUSART_FlushBuffer@index:
  3310                           	opt stack 0
  3311  0000C8                     SPI_Exchange8bit@data:
  3312                           	opt stack 0
  3313  0000C8                     DATAEE_WriteByte@bData:
  3314                           	opt stack 0
  3315  0000C8                     DATAEE_ReadByte@bAdd:
  3316                           	opt stack 0
  3317  0000C8                     TMR2_ReadTimer@readVal:
  3318                           	opt stack 0
  3319  0000C8                     USBTransferOnePacket@dir:
  3320                           	opt stack 0
  3321  0000C8                     ___lbdiv@divisor:
  3322                           	opt stack 0
  3323  0000C8                     ___lbmod@divisor:
  3324                           	opt stack 0
  3325  0000C8                     moteApp_delayms@length:
  3326                           	opt stack 0
  3327  0000C8                     oled_setFont@font:
  3328                           	opt stack 0
  3329  0000C8                     putUSBUSART@data:
  3330                           	opt stack 0
  3331  0000C8                     ___lwdiv@dividend:
  3332                           	opt stack 0
  3333  0000C8                     ___lwmod@dividend:
  3334                           	opt stack 0
  3335  0000C8                     memset@p1:
  3336                           	opt stack 0
  3337  0000C8                     strcmp@s1:
  3338                           	opt stack 0
  3339  0000C8                     strncmp@s1:
  3340                           	opt stack 0
  3341                           
  3342                           ; 2 bytes @ 0x0
  3343  0000C8                     	ds	1
  3344  0000C9                     MOTEapp_getModemResponse@terminatorReceived:
  3345                           	opt stack 0
  3346  0000C9                     moteApp_clearBuffers@counter_1700:
  3347                           	opt stack 0
  3348  0000C9                     oled_writeCommand@command:
  3349                           	opt stack 0
  3350  0000C9                     oled_writeData@data:
  3351                           	opt stack 0
  3352  0000C9                     DATAEE_WriteByte@bAdd:
  3353                           	opt stack 0
  3354  0000C9                     ___lbdiv@dividend:
  3355                           	opt stack 0
  3356  0000C9                     ___lbmod@dividend:
  3357                           	opt stack 0
  3358  0000C9                     sendCommand@string:
  3359                           	opt stack 0
  3360  0000C9                     sendDataCommand@string:
  3361                           	opt stack 0
  3362  0000C9                     USBTransferOnePacket@data:
  3363                           	opt stack 0
  3364                           
  3365                           ; 2 bytes @ 0x1
  3366  0000C9                     	ds	1
  3367  0000CA                     ??_moteApp_delayms:
  3368  0000CA                     ??_ADC_GetConversion:
  3369  0000CA                     ??_oled_devInit:
  3370  0000CA                     MOTEapp_getModemResponse@bufferByte:
  3371                           	opt stack 0
  3372  0000CA                     moteApp_clearBuffers@counter_1701:
  3373                           	opt stack 0
  3374  0000CA                     Set_Page_Address@address:
  3375                           	opt stack 0
  3376  0000CA                     Set_Column_Address@address:
  3377                           	opt stack 0
  3378  0000CA                     oled_setDisplay@displayType:
  3379                           	opt stack 0
  3380  0000CA                     oled_displayOff@state:
  3381                           	opt stack 0
  3382  0000CA                     DATAEE_WriteByte@GIEBitValue:
  3383                           	opt stack 0
  3384  0000CA                     putUSBUSART@length:
  3385                           	opt stack 0
  3386  0000CA                     ___lbdiv@counter:
  3387                           	opt stack 0
  3388  0000CA                     ___lbmod@counter:
  3389                           	opt stack 0
  3390  0000CA                     ___lwdiv@divisor:
  3391                           	opt stack 0
  3392  0000CA                     ___lwmod@divisor:
  3393                           	opt stack 0
  3394  0000CA                     memset@c:
  3395                           	opt stack 0
  3396  0000CA                     strcmp@s2:
  3397                           	opt stack 0
  3398  0000CA                     strncmp@s2:
  3399                           	opt stack 0
  3400                           
  3401                           ; 2 bytes @ 0x2
  3402  0000CA                     	ds	1
  3403  0000CB                     sendDataCommand@appData:
  3404                           	opt stack 0
  3405  0000CB                     oled_putChar@station_dot:
  3406                           	opt stack 0
  3407  0000CB                     USBTransferOnePacket@len:
  3408                           	opt stack 0
  3409  0000CB                     ___lbdiv@quotient:
  3410                           	opt stack 0
  3411  0000CB                     ___lbmod@rem:
  3412                           	opt stack 0
  3413  0000CB                     moteApp_delayms@counter:
  3414                           	opt stack 0
  3415                           
  3416                           ; 2 bytes @ 0x3
  3417  0000CB                     	ds	1
  3418  0000CC                     ??_strcmp:
  3419  0000CC                     sendDataCommand@dataLength:
  3420                           	opt stack 0
  3421  0000CC                     moteApp_add8bToDataBuffer@bufferLocation:
  3422                           	opt stack 0
  3423  0000CC                     oled_putChar@start_page:
  3424                           	opt stack 0
  3425  0000CC                     ADC_GetConversion@channel:
  3426                           	opt stack 0
  3427  0000CC                     USBTransferOnePacket@ep:
  3428                           	opt stack 0
  3429  0000CC                     ___lwdiv@counter:
  3430                           	opt stack 0
  3431  0000CC                     ___lwmod@counter:
  3432                           	opt stack 0
  3433  0000CC                     memset@n:
  3434                           	opt stack 0
  3435  0000CC                     strncmp@len:
  3436                           	opt stack 0
  3437                           
  3438                           ; 2 bytes @ 0x4
  3439  0000CC                     	ds	1
  3440  0000CD                     ??_oled_putChar:
  3441  0000CD                     ??_sendDataCommand:
  3442  0000CD                     moteApp_toggleLeds@state:
  3443                           	opt stack 0
  3444  0000CD                     moteApp_add8bToDataBuffer@number:
  3445                           	opt stack 0
  3446  0000CD                     modemResync@escapeCounter:
  3447                           	opt stack 0
  3448  0000CD                     USBTransferOnePacket@handle:
  3449                           	opt stack 0
  3450  0000CD                     ___lwdiv@quotient:
  3451                           	opt stack 0
  3452                           
  3453                           ; 2 bytes @ 0x5
  3454  0000CD                     	ds	1
  3455  0000CE                     ??_strncmp:
  3456  0000CE                     sendDataCommand@byteCount:
  3457                           	opt stack 0
  3458  0000CE                     strcmp@t0:
  3459                           	opt stack 0
  3460  0000CE                     memset@p:
  3461                           	opt stack 0
  3462                           
  3463                           ; 2 bytes @ 0x6
  3464  0000CE                     	ds	1
  3465  0000CF                     modemResync@escapeEvent:
  3466                           	opt stack 0
  3467  0000CF                     sendDataCommand@byteCount_1637:
  3468                           	opt stack 0
  3469  0000CF                     ADC_TempConversion@tempRaw:
  3470                           	opt stack 0
  3471  0000CF                     strcmp@t2:
  3472                           	opt stack 0
  3473  0000CF                     moteApp_add16bToDataBuffer@number:
  3474                           	opt stack 0
  3475  0000CF                     getsUSBUSART@buffer:
  3476                           	opt stack 0
  3477  0000CF                     _CDCTxService$5786:
  3478                           	opt stack 0
  3479                           
  3480                           ; 2 bytes @ 0x7
  3481  0000CF                     	ds	1
  3482  0000D0                     ADC_TempConversion@temp:
  3483                           	opt stack 0
  3484  0000D0                     USBDeviceInit@i:
  3485                           	opt stack 0
  3486  0000D0                     strcmp@t1:
  3487                           	opt stack 0
  3488                           
  3489                           ; 1 bytes @ 0x8
  3490  0000D0                     	ds	1
  3491  0000D1                     moteApp_add16bToDataBuffer@bufferLocation:
  3492                           	opt stack 0
  3493  0000D1                     getsUSBUSART@len:
  3494                           	opt stack 0
  3495  0000D1                     CDCTxService@i:
  3496                           	opt stack 0
  3497                           
  3498                           ; 1 bytes @ 0x9
  3499  0000D1                     	ds	1
  3500  0000D2                     CDCTxService@byte_to_send:
  3501                           	opt stack 0
  3502                           
  3503                           ; 1 bytes @ 0xA
  3504  0000D2                     	ds	1
  3505  0000D3                     oled_putChar@k:
  3506                           	opt stack 0
  3507  0000D3                     _getsUSBUSART$5738:
  3508                           	opt stack 0
  3509                           
  3510                           ; 2 bytes @ 0xB
  3511  0000D3                     	ds	1
  3512  0000D4                     oled_putChar@index:
  3513                           	opt stack 0
  3514                           
  3515                           ; 1 bytes @ 0xC
  3516  0000D4                     	ds	1
  3517  0000D5                     ??_USBapp_DeviceCdcEmulatorHandler:
  3518  0000D5                     oled_clearRow@page:
  3519                           	opt stack 0
  3520  0000D5                     oled_putString@string:
  3521                           	opt stack 0
  3522                           
  3523                           ; 2 bytes @ 0xD
  3524  0000D5                     	ds	1
  3525  0000D6                     oled_clearRow@index:
  3526                           	opt stack 0
  3527                           
  3528                           ; 1 bytes @ 0xE
  3529  0000D6                     	ds	1
  3530  0000D7                     moteApp_GoToSleep@status:
  3531                           	opt stack 0
  3532  0000D7                     oled_putString@station_dot:
  3533                           	opt stack 0
  3534                           
  3535                           ; 1 bytes @ 0xF
  3536  0000D7                     	ds	1
  3537  0000D8                     oled_putString@start_page:
  3538                           	opt stack 0
  3539                           
  3540                           ; 1 bytes @ 0x10
  3541  0000D8                     	ds	1
  3542  0000D9                     oled_putString@index:
  3543                           	opt stack 0
  3544                           
  3545                           ; 1 bytes @ 0x11
  3546  0000D9                     	ds	1
  3547  0000DA                     moteJoiningProcess@switchEvent:
  3548                           	opt stack 0
  3549  0000DA                     oled_putUint8@station_dot:
  3550                           	opt stack 0
  3551  0000DA                     test_switch@timeout:
  3552                           	opt stack 0
  3553  0000DA                     oled_putUint16@number:
  3554                           	opt stack 0
  3555                           
  3556                           ; 2 bytes @ 0x12
  3557  0000DA                     	ds	1
  3558  0000DB                     moteJoiningProcess@readDataRate:
  3559                           	opt stack 0
  3560  0000DB                     oled_putUint8@start_page:
  3561                           	opt stack 0
  3562                           
  3563                           ; 1 bytes @ 0x13
  3564  0000DB                     	ds	1
  3565  0000DC                     test_switch@buttonCheck:
  3566                           	opt stack 0
  3567  0000DC                     moteJoiningProcess@joiningComplete:
  3568                           	opt stack 0
  3569  0000DC                     oled_putUint8@number:
  3570                           	opt stack 0
  3571  0000DC                     oled_putUint16@station_dot:
  3572                           	opt stack 0
  3573                           
  3574                           ; 1 bytes @ 0x14
  3575  0000DC                     	ds	1
  3576  0000DD                     moteJoiningProcess@messageReady:
  3577                           	opt stack 0
  3578  0000DD                     oled_putUint16@start_page:
  3579                           	opt stack 0
  3580  0000DD                     oled_putUint8@numData:
  3581                           	opt stack 0
  3582                           
  3583                           ; 6 bytes @ 0x15
  3584  0000DD                     	ds	1
  3585  0000DE                     oled_putUint16@numData:
  3586                           	opt stack 0
  3587                           
  3588                           ; 6 bytes @ 0x16
  3589  0000DE                     	ds	6
  3590  0000E4                     moteRunningProcess@selectButton:
  3591                           	opt stack 0
  3592  0000E4                     test_adc@L:
  3593                           	opt stack 0
  3594                           
  3595                           ; 2 bytes @ 0x1C
  3596  0000E4                     	ds	1
  3597  0000E5                     moteRunningProcess@messageReady:
  3598                           	opt stack 0
  3599                           
  3600                           ; 1 bytes @ 0x1D
  3601  0000E5                     	ds	1
  3602  0000E6                     moteRunningProcess@sleepEvent:
  3603                           	opt stack 0
  3604  0000E6                     test_adc@Traw:
  3605                           	opt stack 0
  3606                           
  3607                           ; 2 bytes @ 0x1E
  3608  0000E6                     	ds	1
  3609  0000E7                     ??_moteRunningProcess:
  3610                           
  3611                           ; 0 bytes @ 0x1F
  3612  0000E7                     	ds	1
  3613  0000E8                     test_adc@T:
  3614                           	opt stack 0
  3615                           
  3616                           ; 1 bytes @ 0x20
  3617  0000E8                     	ds	1
  3618  0000E9                     test_adc@count:
  3619                           	opt stack 0
  3620  0000E9                     moteRunningProcess@Traw:
  3621                           	opt stack 0
  3622                           
  3623                           ; 2 bytes @ 0x21
  3624  0000E9                     	ds	1
  3625  0000EA                     
  3626                           ; 0 bytes @ 0x22
  3627  0000EA                     	ds	1
  3628  0000EB                     moteRunningProcess@i:
  3629                           	opt stack 0
  3630                           
  3631                           ; 1 bytes @ 0x23
  3632  0000EB                     	ds	1
  3633  0000EC                     moteRunningProcess@i_1410:
  3634                           	opt stack 0
  3635                           
  3636                           ; 1 bytes @ 0x24
  3637  0000EC                     	ds	1
  3638  0000ED                     moteRunningProcess@dummyRead1:
  3639                           	opt stack 0
  3640                           
  3641                           ; 1 bytes @ 0x25
  3642  0000ED                     	ds	1
  3643  0000EE                     moteRunningProcess@dummyRead2:
  3644                           	opt stack 0
  3645                           
  3646                           ; 1 bytes @ 0x26
  3647  0000EE                     	ds	1
  3648  0000EF                     moteRunningProcess@counter:
  3649                           	opt stack 0
  3650                           
  3651                           ; 1 bytes @ 0x27
  3652  0000EF                     	ds	1
  3653  0000F0                     moteRunningProcess@counter_1556:
  3654                           	opt stack 0
  3655                           
  3656                           ; 1 bytes @ 0x28
  3657  0000F0                     	ds	1
  3658  0000F1                     moteRunningProcess@bufferReadPos:
  3659                           	opt stack 0
  3660                           
  3661                           ; 1 bytes @ 0x29
  3662  0000F1                     	ds	1
  3663  0000F2                     moteRunningProcess@changeStates:
  3664                           	opt stack 0
  3665                           
  3666                           ; 1 bytes @ 0x2A
  3667  0000F2                     	ds	1
  3668  0000F3                     ??_moteHandler:
  3669                           
  3670                           ; 0 bytes @ 0x2B
  3671  0000F3                     	ds	2
  3672  0000F5                     tblptru	equ	0xFF8
  3673                           tblptrh	equ	0xFF7
  3674                           tblptrl	equ	0xFF6
  3675                           tablat	equ	0xFF5
  3676                           postinc0	equ	0xFEE
  3677                           wreg	equ	0xFE8
  3678                           postdec1	equ	0xFE5
  3679                           fsr1l	equ	0xFE1
  3680                           
  3681                           ; 0 bytes @ 0x2D
  3682                           
  3683                           	psect	cstackCOMRAM
  3684  00002E                     __pcstackCOMRAM:
  3685                           	opt stack 0
  3686  00002E                     ??_USBStdGetDscHandler:
  3687  00002E                     ?i2_USBTransferOnePacket:
  3688                           	opt stack 0
  3689  00002E                     ?___lldiv:
  3690                           	opt stack 0
  3691  00002E                     USBConfigureEndpoint@direction:
  3692                           	opt stack 0
  3693  00002E                     USBCtrlTrfTxService@byteToSend:
  3694                           	opt stack 0
  3695  00002E                     i2USBTransferOnePacket@dir:
  3696                           	opt stack 0
  3697  00002E                     USBStdGetStatusHandler@p:
  3698                           	opt stack 0
  3699  00002E                     i2memset@p1:
  3700                           	opt stack 0
  3701  00002E                     ___lldiv@dividend:
  3702                           	opt stack 0
  3703                           
  3704                           ; 4 bytes @ 0x0
  3705  00002E                     	ds	1
  3706  00002F                     ??_USBConfigureEndpoint:
  3707  00002F                     i2USBTransferOnePacket@data:
  3708                           	opt stack 0
  3709                           
  3710                           ; 2 bytes @ 0x1
  3711  00002F                     	ds	1
  3712  000030                     i2memset@c:
  3713                           	opt stack 0
  3714                           
  3715                           ; 2 bytes @ 0x2
  3716  000030                     	ds	1
  3717  000031                     i2USBTransferOnePacket@len:
  3718                           	opt stack 0
  3719                           
  3720                           ; 1 bytes @ 0x3
  3721  000031                     	ds	1
  3722  000032                     i2USBTransferOnePacket@ep:
  3723                           	opt stack 0
  3724  000032                     i2memset@n:
  3725                           	opt stack 0
  3726  000032                     ___lldiv@divisor:
  3727                           	opt stack 0
  3728                           
  3729                           ; 4 bytes @ 0x4
  3730  000032                     	ds	1
  3731  000033                     USBConfigureEndpoint@EPNum:
  3732                           	opt stack 0
  3733  000033                     i2USBTransferOnePacket@handle:
  3734                           	opt stack 0
  3735                           
  3736                           ; 2 bytes @ 0x5
  3737  000033                     	ds	1
  3738  000034                     USBConfigureEndpoint@handle:
  3739                           	opt stack 0
  3740  000034                     i2memset@p:
  3741                           	opt stack 0
  3742                           
  3743                           ; 2 bytes @ 0x6
  3744  000034                     	ds	2
  3745  000036                     USBEnableEndpoint@options:
  3746                           	opt stack 0
  3747  000036                     i2USBDeviceInit@i:
  3748                           	opt stack 0
  3749  000036                     ___lldiv@quotient:
  3750                           	opt stack 0
  3751                           
  3752                           ; 4 bytes @ 0x8
  3753  000036                     	ds	1
  3754  000037                     USBEnableEndpoint@p:
  3755                           	opt stack 0
  3756                           
  3757                           ; 2 bytes @ 0x9
  3758  000037                     	ds	2
  3759  000039                     USBEnableEndpoint@ep:
  3760                           	opt stack 0
  3761                           
  3762                           ; 1 bytes @ 0xB
  3763  000039                     	ds	1
  3764  00003A                     USBapp_CdcEmulatorInitialize@i:
  3765                           	opt stack 0
  3766  00003A                     ___lldiv@counter:
  3767                           	opt stack 0
  3768                           
  3769                           ; 1 bytes @ 0xC
  3770  00003A                     	ds	1
  3771  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3772                           	opt stack 0
  3773  00003B                     USART_mySetLineCodingHandler@dwBaud:
  3774                           	opt stack 0
  3775                           
  3776                           ; 4 bytes @ 0xD
  3777  00003B                     	ds	2
  3778  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3779                           	opt stack 0
  3780                           
  3781                           ; 2 bytes @ 0xF
  3782  00003D                     	ds	2
  3783  00003F                     USBCtrlTrfRxService@i:
  3784                           	opt stack 0
  3785  00003F                     USBCtrlTrfInHandler@lastDTS:
  3786                           	opt stack 0
  3787  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3788                           	opt stack 0
  3789                           
  3790                           ; 2 bytes @ 0x11
  3791  00003F                     	ds	1
  3792  000040                     USBCtrlTrfRxService@byteToRead:
  3793                           	opt stack 0
  3794                           
  3795                           ; 1 bytes @ 0x12
  3796  000040                     	ds	1
  3797  000041                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3798                           
  3799                           ; 0 bytes @ 0x13
  3800  000041                     	ds	2
  3801  000043                     ??_USBStdFeatureReqHandler:
  3802  000043                     USBStdSetCfgHandler@i:
  3803                           	opt stack 0
  3804                           
  3805                           ; 1 bytes @ 0x15
  3806  000043                     	ds	2
  3807  000045                     USBStdFeatureReqHandler@pUEP:
  3808                           	opt stack 0
  3809                           
  3810                           ; 2 bytes @ 0x17
  3811  000045                     	ds	2
  3812  000047                     USBStdFeatureReqHandler@current_ep_data:
  3813                           	opt stack 0
  3814                           
  3815                           ; 1 bytes @ 0x19
  3816  000047                     	ds	1
  3817  000048                     USBStdFeatureReqHandler@p:
  3818                           	opt stack 0
  3819                           
  3820                           ; 2 bytes @ 0x1A
  3821  000048                     	ds	2
  3822  00004A                     ??_USBCheckStdRequest:
  3823                           
  3824                           ; 0 bytes @ 0x1C
  3825  00004A                     	ds	1
  3826  00004B                     ??_USBCtrlEPService:
  3827  00004B                     
  3828                           ; 0 bytes @ 0x1D
  3829  00004B                     	ds	2
  3830  00004D                     USBCtrlEPService@setup_cnt:
  3831                           	opt stack 0
  3832                           
  3833                           ; 1 bytes @ 0x1F
  3834  00004D                     	ds	1
  3835  00004E                     USBDeviceTasks@i:
  3836                           	opt stack 0
  3837                           
  3838                           ; 1 bytes @ 0x20
  3839  00004E                     	ds	1
  3840  00004F                     ??_INTERRUPT_InterruptManager:
  3841                           
  3842                           ; 0 bytes @ 0x21
  3843  00004F                     	ds	12
  3844                           tblptru	equ	0xFF8
  3845                           tblptrh	equ	0xFF7
  3846                           tblptrl	equ	0xFF6
  3847                           tablat	equ	0xFF5
  3848                           postinc0	equ	0xFEE
  3849                           wreg	equ	0xFE8
  3850                           postdec1	equ	0xFE5
  3851                           fsr1l	equ	0xFE1
  3852                           
  3853 ;;
  3854 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3855 ;;
  3856 ;; *************** function _main *****************
  3857 ;; Defined at:
  3858 ;;		line 40 in file "main.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;		None
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;		None               void
  3865 ;; Registers used:
  3866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : F/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3872 ;;      Params:         0       0       0       0       0       0       0       0       0
  3873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3875 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3876 ;;Total ram usage:        0 bytes
  3877 ;; Hardware stack levels required when called:   21
  3878 ;; This function calls:
  3879 ;;		_DATAEE_ReadByte
  3880 ;;		_DATAEE_WriteByte
  3881 ;;		_MOTEapp_handlerState
  3882 ;;		_SYSTEM_Initialize
  3883 ;;		_USBDeviceAttach
  3884 ;;		_USBDeviceInit
  3885 ;;		_USBapp_Handler
  3886 ;;		_USBapp_handlerState
  3887 ;;		_modemResync
  3888 ;;		_moteApp_delayms
  3889 ;;		_moteHandler
  3890 ;;		_oled_clear
  3891 ;;		_oled_init
  3892 ;;		_oled_putString
  3893 ;;		_test_powerup
  3894 ;; This function is called by:
  3895 ;;		Startup code after reset
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text0
  3900  004FC6                     __ptext0:
  3901                           	opt stack 0
  3902  004FC6                     _main:
  3903                           	opt stack 10
  3904                           
  3905                           ;main.c: 43: SYSTEM_Initialize();
  3906                           
  3907                           ;incstack = 0
  3908  004FC6  EC53  F01B         	call	_SYSTEM_Initialize	;wreg free
  3909                           
  3910                           ;main.c: 45: oled_init();
  3911  004FCA  EC85  F01B         	call	_oled_init	;wreg free
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;main.c: 46: USBDeviceInit();
  3915  004FCE  EC4C  F028         	call	_USBDeviceInit	;wreg free
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;main.c: 48: USBDeviceAttach();
  3919  004FD2  EC8E  F01C         	call	_USBDeviceAttach	;wreg free
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;main.c: 50: PEIE = 1;
  3923  004FD6  8CF2               	bsf	intcon,6,c	;volatile
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;main.c: 51: GIE = 1;
  3927  004FD8  8EF2               	bsf	intcon,7,c	;volatile
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;main.c: 53: moteApp_delayms(300);
  3931  004FDA  0E01               	movlw	1
  3932  004FDC  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3933  004FDE  0E2C               	movlw	44
  3934  004FE0  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  3935  004FE2  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;main.c: 54: modemResync();
  3939  004FE6  EC38  F020         	call	_modemResync	;wreg free
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;main.c: 55: moteApp_delayms(300);
  3943  004FEA  0E01               	movlw	1
  3944  004FEC  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3945  004FEE  0E2C               	movlw	44
  3946  004FF0  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  3947  004FF2  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  3948                           
  3949                           ;main.c: 59: powerOnStatus = DATAEE_ReadByte(0x00);
  3950  004FF6  0E00               	movlw	0
  3951  004FF8  ECCA  F01A         	call	_DATAEE_ReadByte
  3952  004FFC  0100               	movlb	0	; () banked
  3953  004FFE  6F96               	movwf	_powerOnStatus& (0+255),b
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;main.c: 60: if ( powerOnStatus != 0x55)
  3957  005000  0E55               	movlw	85
  3958  005002  1996               	xorwf	_powerOnStatus& (0+255),w,b
  3959  005004  E007               	bz	l12275
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;main.c: 61: {
  3963                           ;main.c: 62: test_powerup();
  3964  005006  EC3D  F01D         	call	_test_powerup	;wreg free
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;main.c: 63: DATAEE_WriteByte(0x00, 0x55);
  3968  00500A  0E55               	movlw	85
  3969  00500C  6FC8               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3970  00500E  0E00               	movlw	0
  3971  005010  EC59  F01D         	call	_DATAEE_WriteByte
  3972  005014                     l12275:
  3973                           
  3974                           ;main.c: 64: }
  3975                           ;main.c: 67: operationType = USB;
  3976  005014  0100               	movlb	0	; () banked
  3977  005016  6B95               	clrf	_operationType& (0+255),b
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;main.c: 68: USBapp_handlerState(USB_STARTUP);
  3981  005018  0E00               	movlw	0
  3982  00501A  EC69  F01A         	call	_USBapp_handlerState
  3983                           
  3984                           ;main.c: 70: oled_clear();
  3985  00501E  ECFE  F01A         	call	_oled_clear	;wreg free
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;main.c: 71: oled_putString("Microchip Mote",0,0);
  3989  005022  0E2D               	movlw	low STR_1
  3990  005024  6FD5               	movwf	oled_putString@string& (0+255),b
  3991  005026  0E7D               	movlw	high STR_1
  3992  005028  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  3993  00502A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  3994  00502C  6BD8               	clrf	oled_putString@start_page& (0+255),b
  3995  00502E  EC6A  F020         	call	_oled_putString	;wreg free
  3996                           
  3997                           ;main.c: 72: oled_putString("   LoRa Demo  ",0,1);
  3998  005032  0E1E               	movlw	low STR_2
  3999  005034  0100               	movlb	0	; () banked
  4000  005036  6FD5               	movwf	oled_putString@string& (0+255),b
  4001  005038  0E7D               	movlw	high STR_2
  4002  00503A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4003  00503C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4004  00503E  0E01               	movlw	1
  4005  005040  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4006  005042  EC6A  F020         	call	_oled_putString	;wreg free
  4007                           
  4008                           ;main.c: 73: oled_putString("   RC3 Code   ",0,3);
  4009  005046  0E0F               	movlw	low STR_3
  4010  005048  0100               	movlb	0	; () banked
  4011  00504A  6FD5               	movwf	oled_putString@string& (0+255),b
  4012  00504C  0E7D               	movlw	high STR_3
  4013  00504E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4014  005050  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4015  005052  0E03               	movlw	3
  4016  005054  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4017  005056  EC6A  F020         	call	_oled_putString	;wreg free
  4018                           
  4019                           ;main.c: 74: moteApp_delayms(700);
  4020  00505A  0E02               	movlw	2
  4021  00505C  0100               	movlb	0	; () banked
  4022  00505E  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4023  005060  0EBC               	movlw	188
  4024  005062  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4025  005064  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4026  005068  D011               	goto	l12303
  4027  00506A                     l55:
  4028  00506A  D7FF               	goto	l55
  4029  00506C                     l12289:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;main.c: 86: USBapp_Handler();
  4033  00506C  EC7B  F021         	call	_USBapp_Handler	;wreg free
  4034                           
  4035                           ;main.c: 88: operationType = MOTE;
  4036  005070  0E01               	movlw	1
  4037  005072  0100               	movlb	0	; () banked
  4038  005074  6F95               	movwf	_operationType& (0+255),b
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;main.c: 89: MOTEapp_handlerState(MOTE_STARTUP);
  4042  005076  EC65  F01A         	call	_MOTEapp_handlerState
  4043                           
  4044                           ;main.c: 90: break;
  4045  00507A  D008               	goto	l12303
  4046  00507C                     l12295:
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;main.c: 92: if (moteHandler() == MOTE_SWAP)
  4050  00507C  ECF4  F02D         	call	_moteHandler	;wreg free
  4051  005080  0A04               	xorlw	4
  4052  005082  E104               	bnz	l12303
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;main.c: 93: {
  4056                           ;main.c: 95: operationType = USB;
  4057  005084  6B95               	clrf	_operationType& (0+255),b
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;main.c: 96: USBapp_handlerState(USB_STARTUP);
  4061  005086  0E00               	movlw	0
  4062  005088  EC69  F01A         	call	_USBapp_handlerState
  4063  00508C                     l12303:
  4064  00508C  0100               	movlb	0	; () banked
  4065  00508E  5195               	movf	_operationType& (0+255),w,b
  4066                           
  4067                           ; Switch size 1, requested type "speed"
  4068                           ; Number of cases is 2, Range of values is 0 to 1
  4069                           ; switch strategies available:
  4070                           ; Name         Instructions Cycles
  4071                           ; simple_byte            7     4 (average)
  4072                           ;	Chosen strategy is simple_byte
  4073  005090  E0ED               	bz	l12289
  4074  005092  0A01               	xorlw	1	; case 1
  4075  005094  E0F3               	bz	l12295
  4076  005096  D7E9               	goto	l55
  4077  005098                     __end_of_main:
  4078                           	opt stack 0
  4079                           tblptru	equ	0xFF8
  4080                           tblptrh	equ	0xFF7
  4081                           tblptrl	equ	0xFF6
  4082                           tablat	equ	0xFF5
  4083                           intcon	equ	0xFF2
  4084                           postinc0	equ	0xFEE
  4085                           wreg	equ	0xFE8
  4086                           postdec1	equ	0xFE5
  4087                           fsr1l	equ	0xFE1
  4088                           
  4089 ;; *************** function _test_powerup *****************
  4090 ;; Defined at:
  4091 ;;		line 27 in file "../Includes/Board/poweruptest.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;		None               void
  4098 ;; Registers used:
  4099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : F/0
  4102 ;;		On exit  : F/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4105 ;;      Params:         0       0       0       0       0       0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4108 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4109 ;;Total ram usage:        0 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:   18
  4112 ;; This function calls:
  4113 ;;		_moteApp_delayms
  4114 ;;		_oled_clear
  4115 ;;		_test_adc
  4116 ;;		_test_comms
  4117 ;;		_test_leds
  4118 ;;		_test_oled
  4119 ;;		_test_switch
  4120 ;; This function is called by:
  4121 ;;		_main
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text1
  4126  003A7A                     __ptext1:
  4127                           	opt stack 0
  4128  003A7A                     _test_powerup:
  4129                           	opt stack 12
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;poweruptest.c: 30: test_oled();
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;incstack = 0
  4136  003A7A  ECB6  F021         	call	_test_oled	;wreg free
  4137                           
  4138                           ;poweruptest.c: 31: moteApp_delayms(20);
  4139  003A7E  0100               	movlb	0	; () banked
  4140  003A80  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4141  003A82  0E14               	movlw	20
  4142  003A84  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4143  003A86  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;poweruptest.c: 33: test_switch();
  4147  003A8A  EC57  F025         	call	_test_switch	;wreg free
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;poweruptest.c: 35: oled_clear();
  4151  003A8E  ECFE  F01A         	call	_oled_clear	;wreg free
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;poweruptest.c: 36: moteApp_delayms(20);
  4155  003A92  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4156  003A94  0E14               	movlw	20
  4157  003A96  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4158  003A98  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;poweruptest.c: 37: test_comms();
  4162  003A9C  EC51  F01F         	call	_test_comms	;wreg free
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;poweruptest.c: 39: test_leds();
  4166  003AA0  EC27  F01F         	call	_test_leds	;wreg free
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;poweruptest.c: 41: test_adc();
  4170  003AA4  EC62  F026         	call	_test_adc	;wreg free
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;poweruptest.c: 44: moteApp_delayms(20);
  4174  003AA8  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4175  003AAA  0E14               	movlw	20
  4176  003AAC  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4177  003AAE  EFD1  F01B         	goto	_moteApp_delayms	;wreg free
  4178  003AB2                     __end_of_test_powerup:
  4179                           	opt stack 0
  4180                           tblptru	equ	0xFF8
  4181                           tblptrh	equ	0xFF7
  4182                           tblptrl	equ	0xFF6
  4183                           tablat	equ	0xFF5
  4184                           intcon	equ	0xFF2
  4185                           postinc0	equ	0xFEE
  4186                           wreg	equ	0xFE8
  4187                           postdec1	equ	0xFE5
  4188                           fsr1l	equ	0xFE1
  4189                           
  4190 ;; *************** function _test_switch *****************
  4191 ;; Defined at:
  4192 ;;		line 60 in file "../Includes/Board/poweruptest.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  timeout         2   18[BANK0 ] unsigned int 
  4197 ;;  buttonCheck     1   20[BANK0 ] unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;		None               void
  4200 ;; Registers used:
  4201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : F/0
  4204 ;;		On exit  : F/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0
  4208 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4210 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4211 ;;Total ram usage:        3 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:   17
  4214 ;; This function calls:
  4215 ;;		_moteApp_delayms
  4216 ;;		_oled_clear
  4217 ;;		_oled_putString
  4218 ;; This function is called by:
  4219 ;;		_test_powerup
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text2
  4224  004AAE                     __ptext2:
  4225                           	opt stack 0
  4226  004AAE                     _test_switch:
  4227                           	opt stack 12
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;poweruptest.c: 62: uint16_t timeout = 500;
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;incstack = 0
  4234  004AAE  0E01               	movlw	1
  4235  004AB0  6FDB               	movwf	(test_switch@timeout+1)& (0+255),b
  4236  004AB2  0EF4               	movlw	244
  4237  004AB4  6FDA               	movwf	test_switch@timeout& (0+255),b
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;poweruptest.c: 63: uint8_t buttonCheck = 0x00;
  4241  004AB6  6BDC               	clrf	test_switch@buttonCheck& (0+255),b
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;poweruptest.c: 64: oled_clear();
  4245  004AB8  ECFE  F01A         	call	_oled_clear	;wreg free
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;poweruptest.c: 65: oled_putString("Button Test:",0,0);
  4249  004ABC  0E03               	movlw	low STR_10
  4250  004ABE  6FD5               	movwf	oled_putString@string& (0+255),b
  4251  004AC0  0E7E               	movlw	high STR_10
  4252  004AC2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4253  004AC4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4254  004AC6  6BD8               	clrf	oled_putString@start_page& (0+255),b
  4255  004AC8  EC6A  F020         	call	_oled_putString	;wreg free
  4256                           
  4257                           ;poweruptest.c: 67: if( (PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  4258  004ACC  A082               	btfss	3970,0,c	;volatile
  4259  004ACE  D002               	goto	l10689
  4260  004AD0  B282               	btfsc	3970,1,c	;volatile
  4261  004AD2  D00B               	goto	l10691
  4262  004AD4                     l10689:
  4263                           
  4264                           ;poweruptest.c: 68: {
  4265                           ;poweruptest.c: 69: oled_putString("Button FAIL",0,3);
  4266  004AD4  0EA3               	movlw	low STR_11
  4267  004AD6  0100               	movlb	0	; () banked
  4268  004AD8  6FD5               	movwf	oled_putString@string& (0+255),b
  4269  004ADA  0E7E               	movlw	high STR_11
  4270  004ADC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4271  004ADE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4272  004AE0  0E03               	movlw	3
  4273  004AE2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4274  004AE4  EC6A  F020         	call	_oled_putString	;wreg free
  4275                           
  4276                           ;poweruptest.c: 70: }
  4277  004AE8  D030               	goto	l10709
  4278  004AEA                     l10691:
  4279                           
  4280                           ;poweruptest.c: 71: else
  4281                           ;poweruptest.c: 72: {
  4282                           ;poweruptest.c: 73: oled_putString("Press Button",0,1);
  4283  004AEA  0E2A               	movlw	low STR_12
  4284  004AEC  0100               	movlb	0	; () banked
  4285  004AEE  6FD5               	movwf	oled_putString@string& (0+255),b
  4286  004AF0  0E7E               	movlw	high STR_12
  4287  004AF2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4288  004AF4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4289  004AF6  0E01               	movlw	1
  4290  004AF8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4291  004AFA  EC6A  F020         	call	_oled_putString	;wreg free
  4292  004AFE  D025               	goto	l10709
  4293  004B00                     l120:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;poweruptest.c: 76: {
  4297                           ;poweruptest.c: 77: if(PORTCbits.RC0 == 0)
  4298  004B00  B082               	btfsc	3970,0,c	;volatile
  4299  004B02  D00C               	goto	l10697
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;poweruptest.c: 78: {
  4303                           ;poweruptest.c: 79: oled_putString("Button1 PASS",0,2);
  4304  004B04  0E10               	movlw	low STR_13
  4305  004B06  6FD5               	movwf	oled_putString@string& (0+255),b
  4306  004B08  0E7E               	movlw	high STR_13
  4307  004B0A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4308  004B0C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4309  004B0E  0E02               	movlw	2
  4310  004B10  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4311  004B12  EC6A  F020         	call	_oled_putString	;wreg free
  4312                           
  4313                           ;poweruptest.c: 80: buttonCheck = buttonCheck + 0x08;
  4314  004B16  0E08               	movlw	8
  4315  004B18  0100               	movlb	0	; () banked
  4316  004B1A  27DC               	addwf	test_switch@buttonCheck& (0+255),f,b
  4317  004B1C                     l10697:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;poweruptest.c: 81: }
  4321                           ;poweruptest.c: 82: if(PORTCbits.RC1 == 0)
  4322  004B1C  B282               	btfsc	3970,1,c	;volatile
  4323  004B1E  D00C               	goto	l10703
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;poweruptest.c: 83: {
  4327                           ;poweruptest.c: 84: oled_putString("Button2 PASS",0,3);
  4328  004B20  0E1D               	movlw	low STR_14
  4329  004B22  6FD5               	movwf	oled_putString@string& (0+255),b
  4330  004B24  0E7E               	movlw	high STR_14
  4331  004B26  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4332  004B28  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4333  004B2A  0E03               	movlw	3
  4334  004B2C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4335  004B2E  EC6A  F020         	call	_oled_putString	;wreg free
  4336                           
  4337                           ;poweruptest.c: 85: buttonCheck = buttonCheck + 0x80;
  4338  004B32  0E80               	movlw	128
  4339  004B34  0100               	movlb	0	; () banked
  4340  004B36  27DC               	addwf	test_switch@buttonCheck& (0+255),f,b
  4341  004B38                     l10703:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;poweruptest.c: 86: }
  4345                           ;poweruptest.c: 87: if (buttonCheck == 0x88)
  4346  004B38  0E88               	movlw	136
  4347  004B3A  19DC               	xorwf	test_switch@buttonCheck& (0+255),w,b
  4348  004B3C  E101               	bnz	l10707
  4349  004B3E  0012               	return	
  4350  004B40                     l10707:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;poweruptest.c: 90: }
  4354                           ;poweruptest.c: 91: moteApp_delayms(10);
  4355  004B40  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4356  004B42  0E0A               	movlw	10
  4357  004B44  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4358  004B46  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4359  004B4A                     l10709:
  4360  004B4A  0100               	movlb	0	; () banked
  4361  004B4C  07DA               	decf	test_switch@timeout& (0+255),f,b
  4362  004B4E  A0D8               	btfss	status,0,c
  4363  004B50  07DB               	decf	(test_switch@timeout+1)& (0+255),f,b
  4364  004B52  29DA               	incf	test_switch@timeout& (0+255),w,b
  4365  004B54  E1D5               	bnz	l120
  4366  004B56  29DB               	incf	(test_switch@timeout+1)& (0+255),w,b
  4367  004B58  E1D3               	bnz	l120
  4368                           
  4369                           ; BSR set to: 0
  4370  004B5A  0012               	return		;funcret
  4371  004B5C                     __end_of_test_switch:
  4372                           	opt stack 0
  4373                           tblptru	equ	0xFF8
  4374                           tblptrh	equ	0xFF7
  4375                           tblptrl	equ	0xFF6
  4376                           tablat	equ	0xFF5
  4377                           intcon	equ	0xFF2
  4378                           postinc0	equ	0xFEE
  4379                           wreg	equ	0xFE8
  4380                           postdec1	equ	0xFE5
  4381                           fsr1l	equ	0xFE1
  4382                           status	equ	0xFD8
  4383                           
  4384 ;; *************** function _test_oled *****************
  4385 ;; Defined at:
  4386 ;;		line 47 in file "../Includes/Board/poweruptest.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;		None
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;		None
  4391 ;; Return value:  Size  Location     Type
  4392 ;;		None               void
  4393 ;; Registers used:
  4394 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : F/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0
  4401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4403 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4404 ;;Total ram usage:        0 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:   17
  4407 ;; This function calls:
  4408 ;;		_oled_clear
  4409 ;;		_oled_putString
  4410 ;; This function is called by:
  4411 ;;		_test_powerup
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text3
  4416  00436C                     __ptext3:
  4417                           	opt stack 0
  4418  00436C                     _test_oled:
  4419                           	opt stack 12
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;poweruptest.c: 49: oled_clear();
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;incstack = 0
  4426  00436C  ECFE  F01A         	call	_oled_clear	;wreg free
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;poweruptest.c: 51: oled_putString("MoTe v .",0,0);
  4430  004370  0E63               	movlw	low STR_4
  4431  004372  6FD5               	movwf	oled_putString@string& (0+255),b
  4432  004374  0E7F               	movlw	high STR_4
  4433  004376  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4434  004378  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4435  00437A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  4436  00437C  EC6A  F020         	call	_oled_putString	;wreg free
  4437                           
  4438                           ;poweruptest.c: 52: oled_putString("0",0,6);
  4439  004380  0E86               	movlw	low (STR_97+13)
  4440  004382  0100               	movlb	0	; () banked
  4441  004384  6FD5               	movwf	oled_putString@string& (0+255),b
  4442  004386  0E7C               	movlw	high (STR_97+13)
  4443  004388  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4444  00438A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4445  00438C  0E06               	movlw	6
  4446  00438E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4447  004390  EC6A  F020         	call	_oled_putString	;wreg free
  4448                           
  4449                           ;poweruptest.c: 53: oled_putString("1",0,8);
  4450  004394  0E95               	movlw	low (STR_98+13)
  4451  004396  0100               	movlb	0	; () banked
  4452  004398  6FD5               	movwf	oled_putString@string& (0+255),b
  4453  00439A  0E7C               	movlw	high (STR_98+13)
  4454  00439C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4455  00439E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4456  0043A0  0E08               	movlw	8
  4457  0043A2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4458  0043A4  EC6A  F020         	call	_oled_putString	;wreg free
  4459                           
  4460                           ;poweruptest.c: 54: oled_putString("Build Date/Time",0,1);
  4461  0043A8  0E3C               	movlw	low STR_7
  4462  0043AA  0100               	movlb	0	; () banked
  4463  0043AC  6FD5               	movwf	oled_putString@string& (0+255),b
  4464  0043AE  0E7C               	movlw	high STR_7
  4465  0043B0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4466  0043B2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4467  0043B4  0E01               	movlw	1
  4468  0043B6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4469  0043B8  EC6A  F020         	call	_oled_putString	;wreg free
  4470                           
  4471                           ;poweruptest.c: 55: oled_putString("Nov 12 2015",0,2);
  4472  0043BC  0E97               	movlw	low STR_8
  4473  0043BE  0100               	movlb	0	; () banked
  4474  0043C0  6FD5               	movwf	oled_putString@string& (0+255),b
  4475  0043C2  0E7E               	movlw	high STR_8
  4476  0043C4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4477  0043C6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4478  0043C8  0E02               	movlw	2
  4479  0043CA  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4480  0043CC  EC6A  F020         	call	_oled_putString	;wreg free
  4481                           
  4482                           ;poweruptest.c: 56: oled_putString("16:39:45",0,3);
  4483  0043D0  0E6C               	movlw	low STR_9
  4484  0043D2  0100               	movlb	0	; () banked
  4485  0043D4  6FD5               	movwf	oled_putString@string& (0+255),b
  4486  0043D6  0E7F               	movlw	high STR_9
  4487  0043D8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4488  0043DA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4489  0043DC  0E03               	movlw	3
  4490  0043DE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4491  0043E0  EF6A  F020         	goto	_oled_putString	;wreg free
  4492  0043E4                     __end_of_test_oled:
  4493                           	opt stack 0
  4494                           tblptru	equ	0xFF8
  4495                           tblptrh	equ	0xFF7
  4496                           tblptrl	equ	0xFF6
  4497                           tablat	equ	0xFF5
  4498                           intcon	equ	0xFF2
  4499                           postinc0	equ	0xFEE
  4500                           wreg	equ	0xFE8
  4501                           postdec1	equ	0xFE5
  4502                           fsr1l	equ	0xFE1
  4503                           status	equ	0xFD8
  4504                           
  4505 ;; *************** function _test_leds *****************
  4506 ;; Defined at:
  4507 ;;		line 108 in file "../Includes/Board/poweruptest.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;		None
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;		None
  4512 ;; Return value:  Size  Location     Type
  4513 ;;		None               void
  4514 ;; Registers used:
  4515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : F/0
  4518 ;;		On exit  : F/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4521 ;;      Params:         0       0       0       0       0       0       0       0       0
  4522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4524 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4525 ;;Total ram usage:        0 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:   16
  4528 ;; This function calls:
  4529 ;;		_moteApp_delayms
  4530 ;;		_oled_putString
  4531 ;; This function is called by:
  4532 ;;		_test_powerup
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text4
  4537  003E4E                     __ptext4:
  4538                           	opt stack 0
  4539  003E4E                     _test_leds:
  4540                           	opt stack 13
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;poweruptest.c: 110: oled_putString("LED Test:",0,1);
  4544                           
  4545                           ;incstack = 0
  4546  003E4E  0E23               	movlw	low STR_16
  4547  003E50  6FD5               	movwf	oled_putString@string& (0+255),b
  4548  003E52  0E7F               	movlw	high STR_16
  4549  003E54  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4550  003E56  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4551  003E58  0E01               	movlw	1
  4552  003E5A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4553  003E5C  EC6A  F020         	call	_oled_putString	;wreg free
  4554                           
  4555                           ;poweruptest.c: 112: LATAbits.LATA6 = 1;
  4556  003E60  8C89               	bsf	3977,6,c	;volatile
  4557                           
  4558                           ;poweruptest.c: 113: LATAbits.LATA7 = 1;
  4559  003E62  8E89               	bsf	3977,7,c	;volatile
  4560                           
  4561                           ;poweruptest.c: 114: moteApp_delayms(500);
  4562  003E64  0E01               	movlw	1
  4563  003E66  0100               	movlb	0	; () banked
  4564  003E68  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4565  003E6A  0EF4               	movlw	244
  4566  003E6C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4567  003E6E  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;poweruptest.c: 115: LATAbits.LATA6 = 0;
  4571  003E72  9C89               	bcf	3977,6,c	;volatile
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;poweruptest.c: 116: LATAbits.LATA7 = 0;
  4575  003E74  9E89               	bcf	3977,7,c	;volatile
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;poweruptest.c: 117: moteApp_delayms(500);
  4579  003E76  0E01               	movlw	1
  4580  003E78  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4581  003E7A  0EF4               	movlw	244
  4582  003E7C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4583  003E7E  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;poweruptest.c: 118: LATAbits.LATA6 = 1;
  4587  003E82  8C89               	bsf	3977,6,c	;volatile
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;poweruptest.c: 119: LATAbits.LATA7 = 1;
  4591  003E84  8E89               	bsf	3977,7,c	;volatile
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;poweruptest.c: 120: moteApp_delayms(500);
  4595  003E86  0E01               	movlw	1
  4596  003E88  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4597  003E8A  0EF4               	movlw	244
  4598  003E8C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4599  003E8E  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;poweruptest.c: 121: LATAbits.LATA6 = 0;
  4603  003E92  9C89               	bcf	3977,6,c	;volatile
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;poweruptest.c: 122: LATAbits.LATA7 = 0;
  4607  003E94  9E89               	bcf	3977,7,c	;volatile
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;poweruptest.c: 123: moteApp_delayms(500);
  4611  003E96  0E01               	movlw	1
  4612  003E98  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4613  003E9A  0EF4               	movlw	244
  4614  003E9C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4615  003E9E  EFD1  F01B         	goto	_moteApp_delayms	;wreg free
  4616  003EA2                     __end_of_test_leds:
  4617                           	opt stack 0
  4618                           tblptru	equ	0xFF8
  4619                           tblptrh	equ	0xFF7
  4620                           tblptrl	equ	0xFF6
  4621                           tablat	equ	0xFF5
  4622                           intcon	equ	0xFF2
  4623                           postinc0	equ	0xFEE
  4624                           wreg	equ	0xFE8
  4625                           postdec1	equ	0xFE5
  4626                           fsr1l	equ	0xFE1
  4627                           status	equ	0xFD8
  4628                           
  4629 ;; *************** function _test_comms *****************
  4630 ;; Defined at:
  4631 ;;		line 95 in file "../Includes/Board/poweruptest.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;		None               void
  4638 ;; Registers used:
  4639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : F/0
  4642 ;;		On exit  : F/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0
  4646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4648 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4649 ;;Total ram usage:        0 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:   16
  4652 ;; This function calls:
  4653 ;;		_moteApp_delayms
  4654 ;;		_moteApp_toggleLeds
  4655 ;;		_oled_putString
  4656 ;; This function is called by:
  4657 ;;		_test_powerup
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text5
  4662  003EA2                     __ptext5:
  4663                           	opt stack 0
  4664  003EA2                     _test_comms:
  4665                           	opt stack 13
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;poweruptest.c: 97: oled_putString("Comm Test:",0,0);
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;incstack = 0
  4672  003EA2  0EE6               	movlw	low STR_15
  4673  003EA4  6FD5               	movwf	oled_putString@string& (0+255),b
  4674  003EA6  0E7E               	movlw	high STR_15
  4675  003EA8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4676  003EAA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4677  003EAC  6BD8               	clrf	oled_putString@start_page& (0+255),b
  4678  003EAE  EC6A  F020         	call	_oled_putString	;wreg free
  4679                           
  4680                           ;poweruptest.c: 98: moteApp_toggleLeds(1);
  4681  003EB2  0E01               	movlw	1
  4682  003EB4  ECD1  F020         	call	_moteApp_toggleLeds
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;poweruptest.c: 99: moteApp_delayms(500);
  4686  003EB8  0E01               	movlw	1
  4687  003EBA  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4688  003EBC  0EF4               	movlw	244
  4689  003EBE  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4690  003EC0  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;poweruptest.c: 100: moteApp_toggleLeds(0);
  4694  003EC4  0E00               	movlw	0
  4695  003EC6  ECD1  F020         	call	_moteApp_toggleLeds
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;poweruptest.c: 101: moteApp_delayms(500);
  4699  003ECA  0E01               	movlw	1
  4700  003ECC  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4701  003ECE  0EF4               	movlw	244
  4702  003ED0  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4703  003ED2  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;poweruptest.c: 102: moteApp_toggleLeds(1);
  4707  003ED6  0E01               	movlw	1
  4708  003ED8  ECD1  F020         	call	_moteApp_toggleLeds
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;poweruptest.c: 103: moteApp_delayms(500);
  4712  003EDC  0E01               	movlw	1
  4713  003EDE  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4714  003EE0  0EF4               	movlw	244
  4715  003EE2  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4716  003EE4  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;poweruptest.c: 104: moteApp_toggleLeds(0);
  4720  003EE8  0E00               	movlw	0
  4721  003EEA  ECD1  F020         	call	_moteApp_toggleLeds
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;poweruptest.c: 105: moteApp_delayms(500);
  4725  003EEE  0E01               	movlw	1
  4726  003EF0  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4727  003EF2  0EF4               	movlw	244
  4728  003EF4  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4729  003EF6  EFD1  F01B         	goto	_moteApp_delayms	;wreg free
  4730  003EFA                     __end_of_test_comms:
  4731                           	opt stack 0
  4732                           tblptru	equ	0xFF8
  4733                           tblptrh	equ	0xFF7
  4734                           tblptrl	equ	0xFF6
  4735                           tablat	equ	0xFF5
  4736                           intcon	equ	0xFF2
  4737                           postinc0	equ	0xFEE
  4738                           wreg	equ	0xFE8
  4739                           postdec1	equ	0xFE5
  4740                           fsr1l	equ	0xFE1
  4741                           status	equ	0xFD8
  4742                           
  4743 ;; *************** function _moteApp_toggleLeds *****************
  4744 ;; Defined at:
  4745 ;;		line 1363 in file "../Includes/Board/MOTEapp.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  state           1    wreg     unsigned char 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  state           1    5[BANK0 ] unsigned char 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;		None               void
  4752 ;; Registers used:
  4753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : F/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4759 ;;      Params:         0       0       0       0       0       0       0       0       0
  4760 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4762 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4763 ;;Total ram usage:        1 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:   14
  4766 ;; This function calls:
  4767 ;;		_moteApp_delayms
  4768 ;;		_sendCommand
  4769 ;; This function is called by:
  4770 ;;		_test_comms
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text6
  4775  0041A2                     __ptext6:
  4776                           	opt stack 0
  4777  0041A2                     _moteApp_toggleLeds:
  4778                           	opt stack 14
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;incstack = 0
  4782                           ;moteApp_toggleLeds@state stored from wreg
  4783  0041A2  0100               	movlb	0	; () banked
  4784  0041A4  6FCD               	movwf	moteApp_toggleLeds@state& (0+255),b
  4785                           
  4786                           ;MOTEapp.c: 1365: moteApp_delayms(50);
  4787  0041A6  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4788  0041A8  0E32               	movlw	50
  4789  0041AA  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4790  0041AC  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;MOTEapp.c: 1366: if (state)
  4794  0041B0  51CD               	movf	moteApp_toggleLeds@state& (0+255),w,b
  4795  0041B2  E013               	bz	l10233
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;MOTEapp.c: 1367: {
  4799                           ;MOTEapp.c: 1368: sendCommand("sys set pindig GPIO10 1\r\n");
  4800  0041B4  0E3E               	movlw	low STR_254
  4801  0041B6  6FC9               	movwf	sendCommand@string& (0+255),b
  4802  0041B8  0E7A               	movlw	high STR_254
  4803  0041BA  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
  4804  0041BC  EC37  F01C         	call	_sendCommand	;wreg free
  4805                           
  4806                           ;MOTEapp.c: 1369: moteApp_delayms(50);
  4807  0041C0  0100               	movlb	0	; () banked
  4808  0041C2  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4809  0041C4  0E32               	movlw	50
  4810  0041C6  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4811  0041C8  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;MOTEapp.c: 1370: sendCommand("sys set pindig GPIO11 1\r\n");
  4815  0041CC  0E58               	movlw	low STR_255
  4816  0041CE  6FC9               	movwf	sendCommand@string& (0+255),b
  4817  0041D0  0E7A               	movlw	high STR_255
  4818  0041D2  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
  4819  0041D4  EC37  F01C         	call	_sendCommand	;wreg free
  4820                           
  4821                           ;MOTEapp.c: 1371: }
  4822  0041D8  D012               	goto	l708
  4823  0041DA                     l10233:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;MOTEapp.c: 1372: else
  4827                           ;MOTEapp.c: 1373: {
  4828                           ;MOTEapp.c: 1374: sendCommand("sys set pindig GPIO10 0\r\n");
  4829  0041DA  0E0A               	movlw	low STR_256
  4830  0041DC  6FC9               	movwf	sendCommand@string& (0+255),b
  4831  0041DE  0E7A               	movlw	high STR_256
  4832  0041E0  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
  4833  0041E2  EC37  F01C         	call	_sendCommand	;wreg free
  4834                           
  4835                           ;MOTEapp.c: 1375: moteApp_delayms(50);
  4836  0041E6  0100               	movlb	0	; () banked
  4837  0041E8  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4838  0041EA  0E32               	movlw	50
  4839  0041EC  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4840  0041EE  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;MOTEapp.c: 1376: sendCommand("sys set pindig GPIO11 0\r\n");
  4844  0041F2  0E24               	movlw	low STR_257
  4845  0041F4  6FC9               	movwf	sendCommand@string& (0+255),b
  4846  0041F6  0E7A               	movlw	high STR_257
  4847  0041F8  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
  4848  0041FA  EC37  F01C         	call	_sendCommand	;wreg free
  4849  0041FE                     l708:
  4850                           
  4851                           ;MOTEapp.c: 1377: }
  4852                           ;MOTEapp.c: 1378: moteApp_delayms(50);
  4853  0041FE  0100               	movlb	0	; () banked
  4854  004200  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4855  004202  0E32               	movlw	50
  4856  004204  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4857  004206  EFD1  F01B         	goto	_moteApp_delayms	;wreg free
  4858  00420A                     __end_of_moteApp_toggleLeds:
  4859                           	opt stack 0
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           intcon	equ	0xFF2
  4865                           postinc0	equ	0xFEE
  4866                           wreg	equ	0xFE8
  4867                           postdec1	equ	0xFE5
  4868                           fsr1l	equ	0xFE1
  4869                           status	equ	0xFD8
  4870                           
  4871 ;; *************** function _test_adc *****************
  4872 ;; Defined at:
  4873 ;;		line 126 in file "../Includes/Board/poweruptest.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  Traw            2   30[BANK0 ] unsigned int 
  4878 ;;  L               2   28[BANK0 ] unsigned int 
  4879 ;;  F               2    0        unsigned int 
  4880 ;;  count           1   33[BANK0 ] unsigned char 
  4881 ;;  T               1   32[BANK0 ] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;		None               void
  4884 ;; Registers used:
  4885 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : F/0
  4888 ;;		On exit  : F/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4891 ;;      Params:         0       0       0       0       0       0       0       0       0
  4892 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4894 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4895 ;;Total ram usage:        6 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:   17
  4898 ;; This function calls:
  4899 ;;		_ADC_GetConversion
  4900 ;;		_ADC_TempConversion
  4901 ;;		_moteApp_delayms
  4902 ;;		_oled_clear
  4903 ;;		_oled_putChar
  4904 ;;		_oled_putString
  4905 ;;		_oled_putUint16
  4906 ;;		_oled_putUint8
  4907 ;; This function is called by:
  4908 ;;		_test_powerup
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text7
  4913  004CC4                     __ptext7:
  4914                           	opt stack 0
  4915  004CC4                     _test_adc:
  4916                           	opt stack 12
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;poweruptest.c: 128: uint16_t L,Traw,F;
  4920                           ;poweruptest.c: 129: uint8_t count, T;
  4921                           ;poweruptest.c: 131: oled_clear();
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;incstack = 0
  4925  004CC4  ECFE  F01A         	call	_oled_clear	;wreg free
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;poweruptest.c: 132: oled_putString("ADC Test",0,0);
  4929  004CC8  0E7E               	movlw	low STR_17
  4930  004CCA  6FD5               	movwf	oled_putString@string& (0+255),b
  4931  004CCC  0E7F               	movlw	high STR_17
  4932  004CCE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4933  004CD0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4934  004CD2  6BD8               	clrf	oled_putString@start_page& (0+255),b
  4935  004CD4  EC6A  F020         	call	_oled_putString	;wreg free
  4936                           
  4937                           ;poweruptest.c: 133: oled_putString("Temp  =",0,1);
  4938  004CD8  0EA7               	movlw	low STR_18
  4939  004CDA  0100               	movlb	0	; () banked
  4940  004CDC  6FD5               	movwf	oled_putString@string& (0+255),b
  4941  004CDE  0E7F               	movlw	high STR_18
  4942  004CE0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4943  004CE2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4944  004CE4  0E01               	movlw	1
  4945  004CE6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4946  004CE8  EC6A  F020         	call	_oled_putString	;wreg free
  4947                           
  4948                           ;poweruptest.c: 134: oled_putChar('C',14,1);
  4949  004CEC  0E0E               	movlw	14
  4950  004CEE  0100               	movlb	0	; () banked
  4951  004CF0  6FCB               	movwf	oled_putChar@station_dot& (0+255),b
  4952  004CF2  0E01               	movlw	1
  4953  004CF4  6FCC               	movwf	oled_putChar@start_page& (0+255),b
  4954  004CF6  0E43               	movlw	67
  4955  004CF8  EC40  F021         	call	_oled_putChar
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;poweruptest.c: 135: oled_putString("Light =",0,2);
  4959  004CFC  0EAF               	movlw	low STR_19
  4960  004CFE  6FD5               	movwf	oled_putString@string& (0+255),b
  4961  004D00  0E7F               	movlw	high STR_19
  4962  004D02  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4963  004D04  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4964  004D06  0E02               	movlw	2
  4965  004D08  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4966  004D0A  EC6A  F020         	call	_oled_putString	;wreg free
  4967                           
  4968                           ;poweruptest.c: 137: for(count=0;count< 50;count++)
  4969  004D0E  0100               	movlb	0	; () banked
  4970  004D10  6BE9               	clrf	test_adc@count& (0+255),b
  4971  004D12                     l10769:
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;poweruptest.c: 138: {
  4975                           ;poweruptest.c: 140: moteApp_delayms(50);
  4976  004D12  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4977  004D14  0E32               	movlw	50
  4978  004D16  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4979  004D18  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4980                           
  4981                           ;poweruptest.c: 141: Traw = ADC_GetConversion(Temp_channel);
  4982  004D1C  0E02               	movlw	2
  4983  004D1E  EC76  F01D         	call	_ADC_GetConversion
  4984  004D22  C0C8  F0E6         	movff	?_ADC_GetConversion,test_adc@Traw
  4985  004D26  C0C9  F0E7         	movff	?_ADC_GetConversion+1,test_adc@Traw+1
  4986                           
  4987                           ;poweruptest.c: 142: T = ADC_TempConversion(Traw);
  4988  004D2A  51E6               	movf	test_adc@Traw& (0+255),w,b
  4989  004D2C  EC74  F01B         	call	_ADC_TempConversion
  4990  004D30  6FE8               	movwf	test_adc@T& (0+255),b
  4991                           
  4992                           ;poweruptest.c: 144: moteApp_delayms(50);
  4993  004D32  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4994  004D34  0E32               	movlw	50
  4995  004D36  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4996  004D38  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  4997                           
  4998                           ;poweruptest.c: 145: L = ADC_GetConversion(Light_channel);
  4999  004D3C  0E03               	movlw	3
  5000  004D3E  EC76  F01D         	call	_ADC_GetConversion
  5001  004D42  C0C8  F0E4         	movff	?_ADC_GetConversion,test_adc@L
  5002  004D46  C0C9  F0E5         	movff	?_ADC_GetConversion+1,test_adc@L+1
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;poweruptest.c: 147: oled_putUint8(T,10,1);
  5006  004D4A  0E0A               	movlw	10
  5007  004D4C  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  5008  004D4E  0E01               	movlw	1
  5009  004D50  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  5010  004D52  51E8               	movf	test_adc@T& (0+255),w,b
  5011  004D54  EC7D  F01F         	call	_oled_putUint8
  5012                           
  5013                           ;poweruptest.c: 148: oled_putUint16(L,10,2);
  5014  004D58  C0E4  F0DA         	movff	test_adc@L,oled_putUint16@number
  5015  004D5C  C0E5  F0DB         	movff	test_adc@L+1,oled_putUint16@number+1
  5016  004D60  0E0A               	movlw	10
  5017  004D62  0100               	movlb	0	; () banked
  5018  004D64  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  5019  004D66  0E02               	movlw	2
  5020  004D68  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  5021  004D6A  ECE7  F02A         	call	_oled_putUint16	;wreg free
  5022  004D6E  0100               	movlb	0	; () banked
  5023  004D70  2BE9               	incf	test_adc@count& (0+255),f,b
  5024                           
  5025                           ; BSR set to: 0
  5026  004D72  0E31               	movlw	49
  5027  004D74  65E9               	cpfsgt	test_adc@count& (0+255),b
  5028  004D76  D7CD               	goto	l10769
  5029  004D78  0C31               	retlw	49
  5030  004D7A                     __end_of_test_adc:
  5031                           	opt stack 0
  5032                           tblptru	equ	0xFF8
  5033                           tblptrh	equ	0xFF7
  5034                           tblptrl	equ	0xFF6
  5035                           tablat	equ	0xFF5
  5036                           intcon	equ	0xFF2
  5037                           postinc0	equ	0xFEE
  5038                           wreg	equ	0xFE8
  5039                           postdec1	equ	0xFE5
  5040                           fsr1l	equ	0xFE1
  5041                           status	equ	0xFD8
  5042                           
  5043 ;; *************** function _moteHandler *****************
  5044 ;; Defined at:
  5045 ;;		line 159 in file "../Includes/Board/MOTEapp.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;		None
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  i               1    7[BANK1 ] unsigned char 
  5050 ;;  i               1    6[BANK1 ] unsigned char 
  5051 ;;  Traw            2    2[BANK1 ] unsigned int 
  5052 ;;  readMessage     1    8[BANK1 ] unsigned char 
  5053 ;;  buttonPress     1    5[BANK1 ] enum E6421
  5054 ;;  s2Button        1    4[BANK1 ] unsigned char 
  5055 ;;  gotoNextStat    1    1[BANK1 ] unsigned char 
  5056 ;;  gotoSleep       1    0[BANK1 ] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      enum E7396
  5059 ;; Registers used:
  5060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : F/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0
  5067 ;;      Locals:         0       0       9       0       0       0       0       0       0
  5068 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5069 ;;      Totals:         0       2       9       0       0       0       0       0       0
  5070 ;;Total ram usage:       11 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:   20
  5073 ;; This function calls:
  5074 ;;		_ADC_GetConversion
  5075 ;;		_ADC_TempConversion
  5076 ;;		_MOTEapp_TimerBasedTask
  5077 ;;		_MOTEapp_getModemResponse
  5078 ;;		_TMRapp_ClearBitFlags
  5079 ;;		_TMRapp_Handler
  5080 ;;		_moteApp_delayms
  5081 ;;		_moteJoiningProcess
  5082 ;;		_moteRunningProcess
  5083 ;;		_oled_clear
  5084 ;;		_oled_putString
  5085 ;;		_service_pushbutton
  5086 ;; This function is called by:
  5087 ;;		_main
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text8
  5092  005BE8                     __ptext8:
  5093                           	opt stack 0
  5094  005BE8                     _moteHandler:
  5095                           	opt stack 10
  5096                           
  5097                           ;MOTEapp.c: 161: bool gotoSleep = 0;
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;incstack = 0
  5101  005BE8  0101               	movlb	1	; () banked
  5102  005BEA  6BD8               	clrf	moteHandler@gotoSleep& (0+255),b
  5103                           
  5104                           ;MOTEapp.c: 162: bool gotoNextState = 0;
  5105  005BEC  6BD9               	clrf	moteHandler@gotoNextState& (0+255),b
  5106                           
  5107                           ;MOTEapp.c: 163: bool s2Button = 0;
  5108  005BEE  6BDC               	clrf	moteHandler@s2Button& (0+255),b
  5109                           
  5110                           ; BSR set to: 1
  5111                           ;MOTEapp.c: 168: if (PORTAbits.RA0)
  5112                           
  5113                           ; BSR set to: 1
  5114  005BF0  A080               	btfss	3968,0,c	;volatile
  5115  005BF2  D003               	goto	l12143
  5116                           
  5117                           ; BSR set to: 1
  5118                           ;MOTEapp.c: 169: moteState = MOTE_SWAP;
  5119  005BF4  0E04               	movlw	4
  5120  005BF6  0100               	movlb	0	; () banked
  5121  005BF8  6FF8               	movwf	_moteState& (0+255),b
  5122  005BFA                     l12143:
  5123                           
  5124                           ;MOTEapp.c: 172: if ( appTimer.mSecTick )
  5125  005BFA  0100               	movlb	0	; () banked
  5126  005BFC  A18F               	btfss	_appTimer& (0+255),0,b
  5127  005BFE  D007               	goto	l12151
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;MOTEapp.c: 173: {
  5131                           ;MOTEapp.c: 175: TMRapp_ClearBitFlags();
  5132  005C00  EC5A  F01A         	call	_TMRapp_ClearBitFlags	;wreg free
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;MOTEapp.c: 177: TMRapp_Handler();
  5136  005C04  EC8F  F029         	call	_TMRapp_Handler	;wreg free
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;MOTEapp.c: 178: MOTEapp_TimerBasedTask(appTimer);
  5140  005C08  518F               	movf	_appTimer& (0+255),w,b
  5141  005C0A  EC98  F01A         	call	_MOTEapp_TimerBasedTask
  5142  005C0E                     l12151:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;MOTEapp.c: 179: }
  5146                           ;MOTEapp.c: 182: buttonPress = service_pushbutton();
  5147  005C0E  EC85  F01E         	call	_service_pushbutton	;wreg free
  5148  005C12  0101               	movlb	1	; () banked
  5149  005C14  6FDD               	movwf	moteHandler@buttonPress& (0+255),b
  5150                           
  5151                           ;MOTEapp.c: 183: if (buttonPress == ShortPress1)
  5152  005C16  05DD               	decf	moteHandler@buttonPress& (0+255),w,b
  5153  005C18  E106               	bnz	l12157
  5154                           
  5155                           ; BSR set to: 1
  5156                           ;MOTEapp.c: 184: {
  5157                           ;MOTEapp.c: 185: secTicker = 0;
  5158  005C1A  0100               	movlb	0	; () banked
  5159  005C1C  6B99               	clrf	_secTicker& (0+255),b
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;MOTEapp.c: 186: gotoNextState = 1;
  5163  005C1E  0E01               	movlw	1
  5164  005C20  0101               	movlb	1	; () banked
  5165  005C22  6FD9               	movwf	moteHandler@gotoNextState& (0+255),b
  5166                           
  5167                           ;MOTEapp.c: 187: }
  5168  005C24  D008               	goto	l12163
  5169  005C26                     l12157:
  5170                           
  5171                           ; BSR set to: 1
  5172                           ;MOTEapp.c: 188: else if (buttonPress == ShortPress2)
  5173  005C26  0E02               	movlw	2
  5174  005C28  19DD               	xorwf	moteHandler@buttonPress& (0+255),w,b
  5175  005C2A  E105               	bnz	l12163
  5176                           
  5177                           ; BSR set to: 1
  5178                           ;MOTEapp.c: 189: {
  5179                           ;MOTEapp.c: 190: secTicker = 0;
  5180  005C2C  0100               	movlb	0	; () banked
  5181  005C2E  6B99               	clrf	_secTicker& (0+255),b
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;MOTEapp.c: 191: s2Button = 1;
  5185  005C30  0E01               	movlw	1
  5186  005C32  0101               	movlb	1	; () banked
  5187  005C34  6FDC               	movwf	moteHandler@s2Button& (0+255),b
  5188  005C36                     l12163:
  5189                           
  5190                           ; BSR set to: 1
  5191                           ;MOTEapp.c: 192: }
  5192                           ;MOTEapp.c: 195: if ( MOTEapp_getModemResponse() )
  5193  005C36  EC60  F01E         	call	_MOTEapp_getModemResponse	;wreg free
  5194  005C3A  0900               	iorlw	0
  5195  005C3C  E004               	bz	l324
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;MOTEapp.c: 196: readMessage = 1;
  5199  005C3E  0E01               	movlw	1
  5200  005C40  0101               	movlb	1	; () banked
  5201  005C42  6FE0               	movwf	moteHandler@readMessage& (0+255),b
  5202  005C44  D002               	goto	l12167
  5203  005C46                     l324:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;MOTEapp.c: 197: else
  5207                           ;MOTEapp.c: 198: readMessage = 0;
  5208  005C46  0101               	movlb	1	; () banked
  5209  005C48  6BE0               	clrf	moteHandler@readMessage& (0+255),b
  5210  005C4A                     l12167:
  5211                           
  5212                           ; BSR set to: 1
  5213                           ;MOTEapp.c: 201: if ( (runningState == runningUplink) || (runningState == runningSensorM
      +                          enu) )
  5214  005C4A  0E06               	movlw	6
  5215  005C4C  0100               	movlb	0	; () banked
  5216  005C4E  1998               	xorwf	_runningState& (0+255),w,b
  5217  005C50  E003               	bz	l12171
  5218                           
  5219                           ; BSR set to: 0
  5220  005C52  0E02               	movlw	2
  5221  005C54  1998               	xorwf	_runningState& (0+255),w,b
  5222  005C56  E146               	bnz	l12207
  5223  005C58                     l12171:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;MOTEapp.c: 202: {
  5227                           ;MOTEapp.c: 204: if (m10SecTicker >= 5)
  5228  005C58  0E04               	movlw	4
  5229  005C5A  6594               	cpfsgt	_m10SecTicker& (0+255),b
  5230  005C5C  D043               	goto	l12207
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;MOTEapp.c: 205: {
  5234                           ;MOTEapp.c: 206: uint16_t Traw = 0;
  5235  005C5E  0101               	movlb	1	; () banked
  5236  005C60  6BDA               	clrf	moteHandler@Traw& (0+255),b
  5237  005C62  6BDB               	clrf	(moteHandler@Traw+1)& (0+255),b
  5238                           
  5239                           ; BSR set to: 1
  5240                           ;MOTEapp.c: 207: moteApp_delayms(10);
  5241  005C64  0100               	movlb	0	; () banked
  5242  005C66  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5243  005C68  0E0A               	movlw	10
  5244  005C6A  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  5245  005C6C  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;MOTEapp.c: 208: for(uint8_t i = 32; i>0; i--)
  5249  005C70  0E20               	movlw	32
  5250  005C72  0101               	movlb	1	; () banked
  5251  005C74  6FDE               	movwf	moteHandler@i& (0+255),b
  5252  005C76                     l12183:
  5253                           
  5254                           ; BSR set to: 1
  5255                           ;MOTEapp.c: 209: {
  5256                           ;MOTEapp.c: 210: light = (light + ADC_GetConversion(Light_channel)) / 2;
  5257  005C76  0E03               	movlw	3
  5258  005C78  EC76  F01D         	call	_ADC_GetConversion
  5259  005C7C  517A               	movf	_light& (0+255),w,b
  5260  005C7E  27C8               	addwf	?_ADC_GetConversion& (0+255),f,b
  5261  005C80  517B               	movf	(_light+1)& (0+255),w,b
  5262  005C82  23C9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5263  005C84  90D8               	bcf	status,0,c
  5264  005C86  31C9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5265  005C88  6FF3               	movwf	??_moteHandler& (0+255),b
  5266  005C8A  31C8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5267  005C8C  6F7A               	movwf	_light& (0+255),b
  5268  005C8E  C0F3  F07B         	movff	??_moteHandler,_light+1
  5269                           
  5270                           ; BSR set to: 0
  5271  005C92  0101               	movlb	1	; () banked
  5272  005C94  07DE               	decf	moteHandler@i& (0+255),f,b
  5273                           
  5274                           ; BSR set to: 1
  5275  005C96  51DE               	movf	moteHandler@i& (0+255),w,b
  5276  005C98  E1EE               	bnz	l12183
  5277                           
  5278                           ; BSR set to: 1
  5279                           ;MOTEapp.c: 211: }
  5280                           ;MOTEapp.c: 212: moteApp_delayms(10);
  5281  005C9A  0100               	movlb	0	; () banked
  5282  005C9C  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5283  005C9E  0E0A               	movlw	10
  5284  005CA0  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  5285  005CA2  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;MOTEapp.c: 213: for(uint8_t i = 32; i>0; i--)
  5289  005CA6  0E20               	movlw	32
  5290  005CA8  0101               	movlb	1	; () banked
  5291  005CAA  6FDF               	movwf	moteHandler@i_1340& (0+255),b
  5292  005CAC                     l12197:
  5293                           
  5294                           ; BSR set to: 1
  5295                           ;MOTEapp.c: 214: {
  5296                           ;MOTEapp.c: 215: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  5297  005CAC  0E02               	movlw	2
  5298  005CAE  EC76  F01D         	call	_ADC_GetConversion
  5299  005CB2  0101               	movlb	1	; () banked
  5300  005CB4  51DA               	movf	moteHandler@Traw& (0+255),w,b
  5301  005CB6  0100               	movlb	0	; () banked
  5302  005CB8  27C8               	addwf	?_ADC_GetConversion& (0+255),f,b
  5303  005CBA  0101               	movlb	1	; () banked
  5304  005CBC  51DB               	movf	(moteHandler@Traw+1)& (0+255),w,b
  5305  005CBE  0100               	movlb	0	; () banked
  5306  005CC0  23C9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5307  005CC2  90D8               	bcf	status,0,c
  5308  005CC4  31C9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5309  005CC6  6FF3               	movwf	??_moteHandler& (0+255),b
  5310  005CC8  31C8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5311  005CCA  0101               	movlb	1	; () banked
  5312  005CCC  6FDA               	movwf	moteHandler@Traw& (0+255),b
  5313  005CCE  C0F3  F1DB         	movff	??_moteHandler,moteHandler@Traw+1
  5314                           
  5315                           ; BSR set to: 1
  5316  005CD2  07DF               	decf	moteHandler@i_1340& (0+255),f,b
  5317                           
  5318                           ; BSR set to: 1
  5319  005CD4  51DF               	movf	moteHandler@i_1340& (0+255),w,b
  5320  005CD6  E1EA               	bnz	l12197
  5321                           
  5322                           ; BSR set to: 1
  5323                           ;MOTEapp.c: 216: }
  5324                           ;MOTEapp.c: 217: temperature = ADC_TempConversion(Traw);
  5325  005CD8  51DA               	movf	moteHandler@Traw& (0+255),w,b
  5326  005CDA  EC74  F01B         	call	_ADC_TempConversion
  5327  005CDE  6F7E               	movwf	_temperature& (0+255),b
  5328  005CE0  6B7F               	clrf	(_temperature+1)& (0+255),b
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;MOTEapp.c: 218: m10SecTicker = 0;
  5332  005CE2  6B94               	clrf	_m10SecTicker& (0+255),b
  5333  005CE4                     l12207:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;MOTEapp.c: 219: }
  5337                           ;MOTEapp.c: 220: }
  5338                           ;MOTEapp.c: 222: if(secTicker)
  5339  005CE4  5199               	movf	_secTicker& (0+255),w,b
  5340  005CE6  E064               	bz	l12245
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;MOTEapp.c: 223: {
  5344                           ;MOTEapp.c: 224: if (secTicker >= 10)
  5345  005CE8  0E09               	movlw	9
  5346  005CEA  6599               	cpfsgt	_secTicker& (0+255),b
  5347  005CEC  D061               	goto	l12245
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;MOTEapp.c: 225: {
  5351                           ;MOTEapp.c: 226: gotoSleep = 1;
  5352  005CEE  0E01               	movlw	1
  5353  005CF0  0101               	movlb	1	; () banked
  5354  005CF2  6FD8               	movwf	moteHandler@gotoSleep& (0+255),b
  5355                           
  5356                           ; BSR set to: 1
  5357                           ;MOTEapp.c: 227: secTicker = 0;
  5358  005CF4  0100               	movlb	0	; () banked
  5359  005CF6  6B99               	clrf	_secTicker& (0+255),b
  5360  005CF8  D05B               	goto	l12245
  5361  005CFA                     l338:
  5362                           
  5363                           ; BSR set to: 0
  5364  005CFA  D7FF               	goto	l338
  5365  005CFC                     l12215:
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;MOTEapp.c: 237: oled_clear();
  5369  005CFC  ECFE  F01A         	call	_oled_clear	;wreg free
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;MOTEapp.c: 238: oled_putString("MOTE Mode",1,0);
  5373  005D00  0E05               	movlw	low STR_23
  5374  005D02  6FD5               	movwf	oled_putString@string& (0+255),b
  5375  005D04  0E7F               	movlw	high STR_23
  5376  005D06  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5377  005D08  0E01               	movlw	1
  5378  005D0A  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  5379  005D0C  6BD8               	clrf	oled_putString@start_page& (0+255),b
  5380  005D0E  EC6A  F020         	call	_oled_putString	;wreg free
  5381                           
  5382                           ;MOTEapp.c: 239: oled_putString("Starting",2,1);
  5383  005D12  0E51               	movlw	low STR_24
  5384  005D14  0100               	movlb	0	; () banked
  5385  005D16  6FD5               	movwf	oled_putString@string& (0+255),b
  5386  005D18  0E7F               	movlw	high STR_24
  5387  005D1A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5388  005D1C  0E02               	movlw	2
  5389  005D1E  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  5390  005D20  0E01               	movlw	1
  5391  005D22  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5392  005D24  EC6A  F020         	call	_oled_putString	;wreg free
  5393                           
  5394                           ;MOTEapp.c: 240: oled_putString("ReRun PwrTst<S2>",0,3);
  5395  005D28  0E54               	movlw	low STR_25
  5396  005D2A  0100               	movlb	0	; () banked
  5397  005D2C  6FD5               	movwf	oled_putString@string& (0+255),b
  5398  005D2E  0E7B               	movlw	high STR_25
  5399  005D30  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5400  005D32  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5401  005D34  0E03               	movlw	3
  5402  005D36  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5403  005D38  EC6A  F020         	call	_oled_putString	;wreg free
  5404                           
  5405                           ;MOTEapp.c: 241: activeState = moteStartup;
  5406  005D3C  0100               	movlb	0	; () banked
  5407  005D3E  6B8D               	clrf	_activeState& (0+255),b
  5408                           
  5409                           ; BSR set to: 0
  5410                           ;MOTEapp.c: 242: moteState = MOTE_JOINING;
  5411  005D40  0E02               	movlw	2
  5412  005D42  D029               	goto	L1
  5413  005D44                     l12227:
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;MOTEapp.c: 245: if ( moteJoiningProcess(readMessage, s2Button) )
  5417  005D44  C1DC  F0DA         	movff	moteHandler@s2Button,moteJoiningProcess@switchEvent
  5418  005D48  0101               	movlb	1	; () banked
  5419  005D4A  51E0               	movf	moteHandler@readMessage& (0+255),w,b
  5420  005D4C  ECDE  F02F         	call	_moteJoiningProcess
  5421  005D50  0900               	iorlw	0
  5422  005D52  E037               	bz	l12247
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;MOTEapp.c: 246: {
  5426                           ;MOTEapp.c: 247: oled_clear();
  5427  005D54  ECFE  F01A         	call	_oled_clear	;wreg free
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;MOTEapp.c: 248: oled_putString("Mobile Mote -App",0,0);
  5431  005D58  0EA9               	movlw	low STR_26
  5432  005D5A  6FD5               	movwf	oled_putString@string& (0+255),b
  5433  005D5C  0E7B               	movlw	high STR_26
  5434  005D5E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5435  005D60  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5436  005D62  6BD8               	clrf	oled_putString@start_page& (0+255),b
  5437  005D64  EC6A  F020         	call	_oled_putString	;wreg free
  5438                           
  5439                           ;MOTEapp.c: 249: oled_putString("Navigate  Select", 0,2);
  5440  005D68  0EBA               	movlw	low STR_27
  5441  005D6A  0100               	movlb	0	; () banked
  5442  005D6C  6FD5               	movwf	oled_putString@string& (0+255),b
  5443  005D6E  0E7B               	movlw	high STR_27
  5444  005D70  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5445  005D72  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5446  005D74  0E02               	movlw	2
  5447  005D76  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5448  005D78  EC6A  F020         	call	_oled_putString	;wreg free
  5449                           
  5450                           ;MOTEapp.c: 250: oled_putString(" (S1)      (S2) ", 0,3);
  5451  005D7C  0E10               	movlw	low STR_28
  5452  005D7E  0100               	movlb	0	; () banked
  5453  005D80  6FD5               	movwf	oled_putString@string& (0+255),b
  5454  005D82  0E7B               	movlw	high STR_28
  5455  005D84  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5456  005D86  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5457  005D88  0E03               	movlw	3
  5458  005D8A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5459  005D8C  EC6A  F020         	call	_oled_putString	;wreg free
  5460                           
  5461                           ;MOTEapp.c: 251: runningState = runningEnter;
  5462  005D90  0100               	movlb	0	; () banked
  5463  005D92  6B98               	clrf	_runningState& (0+255),b
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;MOTEapp.c: 252: moteState = MOTE_RUNNING;
  5467  005D94  0E03               	movlw	3
  5468  005D96                     L1:
  5469  005D96  6FF8               	movwf	_moteState& (0+255),b
  5470  005D98  D014               	goto	l12247
  5471  005D9A                     l12241:
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;MOTEapp.c: 256: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  5475  005D9A  C1DC  F0E4         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  5476  005D9E  C1E0  F0E5         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  5477  005DA2  C1D8  F0E6         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  5478  005DA6  0101               	movlb	1	; () banked
  5479  005DA8  51D9               	movf	moteHandler@gotoNextState& (0+255),w,b
  5480  005DAA  EC66  F032         	call	_moteRunningProcess
  5481                           
  5482                           ;MOTEapp.c: 257: break;
  5483  005DAE  D009               	goto	l12247
  5484  005DB0                     l12245:
  5485                           
  5486                           ; BSR set to: 0
  5487  005DB0  51F8               	movf	_moteState& (0+255),w,b
  5488                           
  5489                           ; Switch size 1, requested type "speed"
  5490                           ; Number of cases is 4, Range of values is 1 to 4
  5491                           ; switch strategies available:
  5492                           ; Name         Instructions Cycles
  5493                           ; simple_byte           13     7 (average)
  5494                           ;	Chosen strategy is simple_byte
  5495  005DB2  0A01               	xorlw	1	; case 1
  5496  005DB4  E0A3               	bz	l12215
  5497  005DB6  0A03               	xorlw	3	; case 2
  5498  005DB8  E0C5               	bz	l12227
  5499  005DBA  0A01               	xorlw	1	; case 3
  5500  005DBC  E0EE               	bz	l12241
  5501  005DBE  0A07               	xorlw	7	; case 4
  5502  005DC0  E19C               	bnz	l338
  5503  005DC2                     l12247:
  5504                           
  5505                           ;MOTEapp.c: 262: return moteState;
  5506  005DC2  0100               	movlb	0	; () banked
  5507  005DC4  51F8               	movf	_moteState& (0+255),w,b
  5508                           
  5509                           ; BSR set to: 0
  5510  005DC6  0012               	return		;funcret
  5511  005DC8                     __end_of_moteHandler:
  5512                           	opt stack 0
  5513                           tblptru	equ	0xFF8
  5514                           tblptrh	equ	0xFF7
  5515                           tblptrl	equ	0xFF6
  5516                           tablat	equ	0xFF5
  5517                           intcon	equ	0xFF2
  5518                           postinc0	equ	0xFEE
  5519                           wreg	equ	0xFE8
  5520                           postdec1	equ	0xFE5
  5521                           fsr1l	equ	0xFE1
  5522                           status	equ	0xFD8
  5523                           
  5524 ;; *************** function _service_pushbutton *****************
  5525 ;; Defined at:
  5526 ;;		line 14 in file "../Includes/Drivers/buttons.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;		None
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  bs              1    0[BANK0 ] enum E6333
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      enum E6421
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0
  5535 ;; Tracked objects:
  5536 ;;		On entry : F/0
  5537 ;;		On exit  : F/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5540 ;;      Params:         0       0       0       0       0       0       0       0       0
  5541 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5543 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5544 ;;Total ram usage:        1 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:   11
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_moteHandler
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text9
  5555  003D0A                     __ptext9:
  5556                           	opt stack 0
  5557  003D0A                     _service_pushbutton:
  5558                           	opt stack 18
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;buttons.c: 20: if ((PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;incstack = 0
  5565  003D0A  A082               	btfss	3970,0,c	;volatile
  5566  003D0C  D002               	goto	l10835
  5567                           
  5568                           ; BSR set to: 0
  5569  003D0E  B282               	btfsc	3970,1,c	;volatile
  5570  003D10  D014               	goto	l10843
  5571  003D12                     l10835:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;buttons.c: 21: {
  5575                           ;buttons.c: 22: ++PB_Timer;
  5576  003D12  2B66               	incf	service_pushbutton@PB_Timer& (0+255),f,b
  5577  003D14  0E00               	movlw	0
  5578  003D16  2367               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
  5579  003D18  2368               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
  5580  003D1A  2369               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
  5581                           
  5582                           ;buttons.c: 26: if (PB_Timer == 55)
  5583  003D1C  0E37               	movlw	55
  5584  003D1E  1966               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
  5585  003D20  1167               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
  5586  003D22  1168               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
  5587  003D24  1169               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
  5588  003D26  E107               	bnz	l895
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;buttons.c: 27: {
  5592                           ;buttons.c: 28: Release_Timer = 0;
  5593  003D28  6B9D               	clrf	service_pushbutton@Release_Timer& (0+255),b
  5594                           
  5595                           ;buttons.c: 30: if (PORTCbits.RC0 == 0)
  5596  003D2A  B082               	btfsc	3970,0,c	;volatile
  5597  003D2C  D002               	goto	l10841
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;buttons.c: 31: {
  5601                           ;buttons.c: 32: bs = ShortPress1;
  5602  003D2E  0E01               	movlw	1
  5603  003D30  D00F               	goto	L2
  5604  003D32                     l10841:
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;buttons.c: 34: else
  5608                           ;buttons.c: 35: {
  5609                           ;buttons.c: 36: bs = ShortPress2;
  5610  003D32  0E02               	movlw	2
  5611  003D34  D00D               	goto	L2
  5612  003D36                     l895:
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;buttons.c: 39: else
  5616                           ;buttons.c: 40: {
  5617                           ;buttons.c: 41: bs = NoButton;
  5618  003D36  6BC8               	clrf	service_pushbutton@bs& (0+255),b
  5619  003D38  D00C               	goto	l10851
  5620  003D3A                     l10843:
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;buttons.c: 44: else
  5624                           ;buttons.c: 45: {
  5625                           ;buttons.c: 46: if (Release_Timer == 20)
  5626  003D3A  0E14               	movlw	20
  5627  003D3C  199D               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
  5628  003D3E  E106               	bnz	l10847
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;buttons.c: 47: {
  5632                           ;buttons.c: 48: PB_Timer = 0;
  5633  003D40  6B66               	clrf	service_pushbutton@PB_Timer& (0+255),b
  5634  003D42  6B67               	clrf	(service_pushbutton@PB_Timer+1)& (0+255),b
  5635  003D44  6B68               	clrf	(service_pushbutton@PB_Timer+2)& (0+255),b
  5636  003D46  6B69               	clrf	(service_pushbutton@PB_Timer+3)& (0+255),b
  5637                           
  5638                           ;buttons.c: 49: Release_Timer = 0;
  5639  003D48  6B9D               	clrf	service_pushbutton@Release_Timer& (0+255),b
  5640                           
  5641                           ;buttons.c: 50: }
  5642  003D4A  D001               	goto	l10849
  5643  003D4C                     l10847:
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;buttons.c: 51: else
  5647                           ;buttons.c: 52: {
  5648                           ;buttons.c: 53: Release_Timer++;
  5649  003D4C  2B9D               	incf	service_pushbutton@Release_Timer& (0+255),f,b
  5650  003D4E                     l10849:
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;buttons.c: 54: }
  5654                           ;buttons.c: 55: bs = Released;
  5655  003D4E  0E03               	movlw	3
  5656  003D50                     L2:
  5657  003D50  6FC8               	movwf	service_pushbutton@bs& (0+255),b
  5658  003D52                     l10851:
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;buttons.c: 56: }
  5662                           ;buttons.c: 58: return bs;
  5663  003D52  51C8               	movf	service_pushbutton@bs& (0+255),w,b
  5664                           
  5665                           ; BSR set to: 0
  5666  003D54  0012               	return		;funcret
  5667  003D56                     __end_of_service_pushbutton:
  5668                           	opt stack 0
  5669                           tblptru	equ	0xFF8
  5670                           tblptrh	equ	0xFF7
  5671                           tblptrl	equ	0xFF6
  5672                           tablat	equ	0xFF5
  5673                           intcon	equ	0xFF2
  5674                           postinc0	equ	0xFEE
  5675                           wreg	equ	0xFE8
  5676                           postdec1	equ	0xFE5
  5677                           fsr1l	equ	0xFE1
  5678                           status	equ	0xFD8
  5679                           
  5680 ;; *************** function _moteRunningProcess *****************
  5681 ;; Defined at:
  5682 ;;		line 490 in file "../Includes/Board/MOTEapp.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  changeStates    1    wreg     unsigned char 
  5685 ;;  selectButton    1   28[BANK0 ] unsigned char 
  5686 ;;  messageReady    1   29[BANK0 ] unsigned char 
  5687 ;;  sleepEvent      1   30[BANK0 ] unsigned char 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  changeStates    1   42[BANK0 ] unsigned char 
  5690 ;;  counter         1   40[BANK0 ] unsigned char 
  5691 ;;  counter         1   39[BANK0 ] unsigned char 
  5692 ;;  bufferReadPo    1   41[BANK0 ] unsigned char 
  5693 ;;  dummyRead2      1   38[BANK0 ] unsigned char 
  5694 ;;  dummyRead1      1   37[BANK0 ] unsigned char 
  5695 ;;  i               1   36[BANK0 ] unsigned char 
  5696 ;;  i               1   35[BANK0 ] unsigned char 
  5697 ;;  Traw            2   33[BANK0 ] unsigned int 
  5698 ;;  readByte        1    0        unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      enum E6659
  5701 ;; Registers used:
  5702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : F/1
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5708 ;;      Params:         0       3       0       0       0       0       0       0       0
  5709 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5710 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5711 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5712 ;;Total ram usage:       15 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:   19
  5715 ;; This function calls:
  5716 ;;		_ADC_GetConversion
  5717 ;;		_ADC_TempConversion
  5718 ;;		_MOTEapp_SetADR
  5719 ;;		_MOTEapp_SetDataRate
  5720 ;;		_MOTEapp_WriteDataRate
  5721 ;;		_TMR2_ReadTimer
  5722 ;;		_moteApp_GoToSleep
  5723 ;;		_moteApp_add16bToDataBuffer
  5724 ;;		_moteApp_add8bToDataBuffer
  5725 ;;		_moteApp_clearBuffers
  5726 ;;		_moteApp_delayms
  5727 ;;		_oled_clear
  5728 ;;		_oled_putString
  5729 ;;		_oled_putUint16
  5730 ;;		_oled_putUint8
  5731 ;;		_sendDataCommand
  5732 ;;		_strcmp
  5733 ;;		_strncmp
  5734 ;;		_unhex
  5735 ;; This function is called by:
  5736 ;;		_moteHandler
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text10
  5741  0064CC                     __ptext10:
  5742                           	opt stack 0
  5743  0064CC                     _moteRunningProcess:
  5744                           	opt stack 10
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;incstack = 0
  5748                           ;moteRunningProcess@changeStates stored from wreg
  5749  0064CC  0100               	movlb	0	; () banked
  5750  0064CE  6FF2               	movwf	moteRunningProcess@changeStates& (0+255),b
  5751                           
  5752                           ;MOTEapp.c: 494: if ((sleepEvent) && (periodicState))
  5753  0064D0  51E6               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  5754  0064D2  E102 EFF6  F03A    	bz	l11855
  5755                           
  5756                           ; BSR set to: 0
  5757  0064D8  51F9               	movf	_periodicState& (0+255),w,b
  5758  0064DA  E102 EFF6  F03A    	bz	l11855
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;MOTEapp.c: 495: {
  5762                           ;MOTEapp.c: 496: if (sleepTicker >= 33)
  5763  0064E0  0E20               	movlw	32
  5764  0064E2  659A               	cpfsgt	_sleepTicker& (0+255),b
  5765  0064E4  D0D8               	goto	l11157
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;MOTEapp.c: 497: {
  5769                           ;MOTEapp.c: 499: uint16_t Traw = 0;
  5770  0064E6  6BE9               	clrf	moteRunningProcess@Traw& (0+255),b
  5771  0064E8  6BEA               	clrf	(moteRunningProcess@Traw+1)& (0+255),b
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;MOTEapp.c: 500: moteApp_delayms(10);
  5775  0064EA  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5776  0064EC  0E0A               	movlw	10
  5777  0064EE  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  5778  0064F0  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;MOTEapp.c: 501: for(uint8_t i = 32; i>0; i--)
  5782  0064F4  0E20               	movlw	32
  5783  0064F6  6FEB               	movwf	moteRunningProcess@i& (0+255),b
  5784  0064F8                     l11075:
  5785                           
  5786                           ; BSR set to: 0
  5787  0064F8  51EB               	movf	moteRunningProcess@i& (0+255),w,b
  5788  0064FA  E010               	bz	l11085
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;MOTEapp.c: 502: {
  5792                           ;MOTEapp.c: 503: light = (light + ADC_GetConversion(Light_channel)) / 2;
  5793  0064FC  0E03               	movlw	3
  5794  0064FE  EC76  F01D         	call	_ADC_GetConversion
  5795  006502  517A               	movf	_light& (0+255),w,b
  5796  006504  27C8               	addwf	?_ADC_GetConversion& (0+255),f,b
  5797  006506  517B               	movf	(_light+1)& (0+255),w,b
  5798  006508  23C9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5799  00650A  90D8               	bcf	status,0,c
  5800  00650C  31C9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5801  00650E  6FE7               	movwf	??_moteRunningProcess& (0+255),b
  5802  006510  31C8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5803  006512  6F7A               	movwf	_light& (0+255),b
  5804  006514  C0E7  F07B         	movff	??_moteRunningProcess,_light+1
  5805                           
  5806                           ; BSR set to: 0
  5807  006518  07EB               	decf	moteRunningProcess@i& (0+255),f,b
  5808  00651A  D7EE               	goto	l11075
  5809  00651C                     l11085:
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;MOTEapp.c: 504: }
  5813                           ;MOTEapp.c: 505: moteApp_delayms(10);
  5814  00651C  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5815  00651E  0E0A               	movlw	10
  5816  006520  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  5817  006522  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;MOTEapp.c: 506: for(uint8_t i = 32; i>0; i--)
  5821  006526  0E20               	movlw	32
  5822  006528  6FEC               	movwf	moteRunningProcess@i_1410& (0+255),b
  5823  00652A                     l11089:
  5824                           
  5825                           ; BSR set to: 0
  5826  00652A  51EC               	movf	moteRunningProcess@i_1410& (0+255),w,b
  5827  00652C  E010               	bz	l11099
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;MOTEapp.c: 507: {
  5831                           ;MOTEapp.c: 508: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  5832  00652E  0E02               	movlw	2
  5833  006530  EC76  F01D         	call	_ADC_GetConversion
  5834  006534  51E9               	movf	moteRunningProcess@Traw& (0+255),w,b
  5835  006536  27C8               	addwf	?_ADC_GetConversion& (0+255),f,b
  5836  006538  51EA               	movf	(moteRunningProcess@Traw+1)& (0+255),w,b
  5837  00653A  23C9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5838  00653C  90D8               	bcf	status,0,c
  5839  00653E  31C9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5840  006540  6FE7               	movwf	??_moteRunningProcess& (0+255),b
  5841  006542  31C8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5842  006544  6FE9               	movwf	moteRunningProcess@Traw& (0+255),b
  5843  006546  C0E7  F0EA         	movff	??_moteRunningProcess,moteRunningProcess@Traw+1
  5844                           
  5845                           ; BSR set to: 0
  5846  00654A  07EC               	decf	moteRunningProcess@i_1410& (0+255),f,b
  5847  00654C  D7EE               	goto	l11089
  5848  00654E                     l11099:
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;MOTEapp.c: 509: }
  5852                           ;MOTEapp.c: 510: temperature = ADC_TempConversion(Traw);
  5853  00654E  51E9               	movf	moteRunningProcess@Traw& (0+255),w,b
  5854  006550  EC74  F01B         	call	_ADC_TempConversion
  5855  006554  6F7E               	movwf	_temperature& (0+255),b
  5856  006556  6B7F               	clrf	(_temperature+1)& (0+255),b
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;MOTEapp.c: 512: sleepTicker = 0;
  5860  006558  6B9A               	clrf	_sleepTicker& (0+255),b
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;MOTEapp.c: 513: oled_clear();
  5864  00655A  ECFE  F01A         	call	_oled_clear	;wreg free
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;MOTEapp.c: 514: oled_putString("Issue Perodic TX",0,0);
  5868  00655E  0E65               	movlw	low STR_72
  5869  006560  6FD5               	movwf	oled_putString@string& (0+255),b
  5870  006562  0E7B               	movlw	high STR_72
  5871  006564  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5872  006566  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5873  006568  6BD8               	clrf	oled_putString@start_page& (0+255),b
  5874  00656A  EC6A  F020         	call	_oled_putString	;wreg free
  5875                           
  5876                           ;MOTEapp.c: 515: oled_putString("On Port #: ",0,1);
  5877  00656E  0E43               	movlw	low STR_73
  5878  006570  0100               	movlb	0	; () banked
  5879  006572  6FD5               	movwf	oled_putString@string& (0+255),b
  5880  006574  0E7E               	movlw	high STR_73
  5881  006576  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5882  006578  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5883  00657A  0E01               	movlw	1
  5884  00657C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5885  00657E  EC6A  F020         	call	_oled_putString	;wreg free
  5886                           
  5887                           ;MOTEapp.c: 516: oled_putUint8(randomPortNum,10,1);
  5888  006582  0E0A               	movlw	10
  5889  006584  0100               	movlb	0	; () banked
  5890  006586  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  5891  006588  0E01               	movlw	1
  5892  00658A  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  5893  00658C  5197               	movf	_randomPortNum& (0+255),w,b
  5894  00658E  EC7D  F01F         	call	_oled_putUint8
  5895                           
  5896                           ;MOTEapp.c: 517: oled_putString("L:       T: ",0,2);
  5897  006592  0E81               	movlw	low STR_74
  5898  006594  0100               	movlb	0	; () banked
  5899  006596  6FD5               	movwf	oled_putString@string& (0+255),b
  5900  006598  0E7D               	movlw	high STR_74
  5901  00659A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5902  00659C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5903  00659E  0E02               	movlw	2
  5904  0065A0  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5905  0065A2  EC6A  F020         	call	_oled_putString	;wreg free
  5906                           
  5907                           ;MOTEapp.c: 518: oled_putUint16(light,3,2);
  5908  0065A6  C07A  F0DA         	movff	_light,oled_putUint16@number
  5909  0065AA  C07B  F0DB         	movff	_light+1,oled_putUint16@number+1
  5910  0065AE  0E03               	movlw	3
  5911  0065B0  0100               	movlb	0	; () banked
  5912  0065B2  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  5913  0065B4  0E02               	movlw	2
  5914  0065B6  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  5915  0065B8  ECE7  F02A         	call	_oled_putUint16	;wreg free
  5916                           
  5917                           ;MOTEapp.c: 519: oled_putUint8(temperature,12,2);
  5918  0065BC  0E0C               	movlw	12
  5919  0065BE  0100               	movlb	0	; () banked
  5920  0065C0  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  5921  0065C2  0E02               	movlw	2
  5922  0065C4  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  5923  0065C6  517E               	movf	_temperature& (0+255),w,b
  5924  0065C8  EC7D  F01F         	call	_oled_putUint8
  5925                           
  5926                           ;MOTEapp.c: 520: oled_putString("(NAV)    (SEL) ",0,3);
  5927  0065CC  0EFC               	movlw	low STR_75
  5928  0065CE  0100               	movlb	0	; () banked
  5929  0065D0  6FD5               	movwf	oled_putString@string& (0+255),b
  5930  0065D2  0E7B               	movlw	high STR_75
  5931  0065D4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5932  0065D6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5933  0065D8  0E03               	movlw	3
  5934  0065DA  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5935  0065DC  EC6A  F020         	call	_oled_putString	;wreg free
  5936                           
  5937                           ;MOTEapp.c: 522: moteApp_clearBuffers();
  5938  0065E0  ECD1  F01D         	call	_moteApp_clearBuffers	;wreg free
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;MOTEapp.c: 523: randomPortNum = TMR2_ReadTimer();
  5942  0065E4  EC75  F01A         	call	_TMR2_ReadTimer	;wreg free
  5943  0065E8  6F97               	movwf	_randomPortNum& (0+255),b
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;MOTEapp.c: 525: if (!randomPortNum)
  5947  0065EA  5197               	movf	_randomPortNum& (0+255),w,b
  5948  0065EC  E103               	bnz	l11127
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;MOTEapp.c: 526: randomPortNum = 5;
  5952  0065EE  0E05               	movlw	5
  5953  0065F0  6F97               	movwf	_randomPortNum& (0+255),b
  5954  0065F2  D005               	goto	l11131
  5955  0065F4                     l11127:
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;MOTEapp.c: 527: else if (randomPortNum > 223)
  5959  0065F4  0EDF               	movlw	223
  5960  0065F6  6597               	cpfsgt	_randomPortNum& (0+255),b
  5961  0065F8  D002               	goto	l11131
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;MOTEapp.c: 528: randomPortNum = randomPortNum - 50;
  5965  0065FA  0ECE               	movlw	206
  5966  0065FC  2797               	addwf	_randomPortNum& (0+255),f,b
  5967  0065FE                     l11131:
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;MOTEapp.c: 530: moteApp_add8bToDataBuffer(randomPortNum, 0);
  5971  0065FE  6BCC               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  5972  006600  5197               	movf	_randomPortNum& (0+255),w,b
  5973  006602  EC08  F020         	call	_moteApp_add8bToDataBuffer
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;MOTEapp.c: 531: dataBuffer[3] = 0x20;
  5977  006606  0E20               	movlw	32
  5978  006608  6FA1               	movwf	(_dataBuffer+3)& (0+255),b
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;MOTEapp.c: 532: moteApp_add16bToDataBuffer(light, 4);
  5982  00660A  C07A  F0CF         	movff	_light,moteApp_add16bToDataBuffer@number
  5983  00660E  C07B  F0D0         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  5984  006612  0E04               	movlw	4
  5985  006614  6FD1               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  5986  006616  ECE1  F02C         	call	_moteApp_add16bToDataBuffer	;wreg free
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;MOTEapp.c: 533: moteApp_add8bToDataBuffer(temperature, 9);
  5990  00661A  0E09               	movlw	9
  5991  00661C  6FCC               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  5992  00661E  517E               	movf	_temperature& (0+255),w,b
  5993  006620  EC08  F020         	call	_moteApp_add8bToDataBuffer
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;MOTEapp.c: 534: __nop();
  5997  006624  F000               	nop	
  5998                           
  5999                           ;MOTEapp.c: 535: if(++sleepTxOccurances > 3)
  6000  006626  0100               	movlb	0	; () banked
  6001  006628  2B9B               	incf	_sleepTxOccurances& (0+255),f,b
  6002  00662A  0E03               	movlw	3
  6003  00662C  659B               	cpfsgt	_sleepTxOccurances& (0+255),b
  6004  00662E  D017               	goto	l11149
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;MOTEapp.c: 536: {
  6008                           ;MOTEapp.c: 537: sleepTxOccurances = 0;
  6009  006630  6B9B               	clrf	_sleepTxOccurances& (0+255),b
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;MOTEapp.c: 538: oled_putString("C",15,1);
  6013  006632  0EF9               	movlw	low STR_76
  6014  006634  6FD5               	movwf	oled_putString@string& (0+255),b
  6015  006636  0E7F               	movlw	high STR_76
  6016  006638  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6017  00663A  0E0F               	movlw	15
  6018  00663C  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6019  00663E  0E01               	movlw	1
  6020  006640  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6021  006642  EC6A  F020         	call	_oled_putString	;wreg free
  6022                           
  6023                           ;MOTEapp.c: 539: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  6024  006646  0E67               	movlw	low STR_77
  6025  006648  0100               	movlb	0	; () banked
  6026  00664A  6FC9               	movwf	sendDataCommand@string& (0+255),b
  6027  00664C  0E7E               	movlw	high STR_77
  6028  00664E  6FCA               	movwf	(sendDataCommand@string+1)& (0+255),b
  6029  006650  0E9E               	movlw	low _dataBuffer
  6030  006652  6FCB               	movwf	sendDataCommand@appData& (0+255),b
  6031  006654  0E0C               	movlw	12
  6032  006656  6FCC               	movwf	sendDataCommand@dataLength& (0+255),b
  6033  006658  ECCB  F023         	call	_sendDataCommand	;wreg free
  6034                           
  6035                           ;MOTEapp.c: 540: }
  6036  00665C  D015               	goto	l11153
  6037  00665E                     l11149:
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;MOTEapp.c: 542: else
  6041                           ;MOTEapp.c: 543: {
  6042                           ;MOTEapp.c: 544: oled_putString("U",15,1);
  6043  00665E  0EFB               	movlw	low STR_78
  6044  006660  6FD5               	movwf	oled_putString@string& (0+255),b
  6045  006662  0E7F               	movlw	high STR_78
  6046  006664  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6047  006666  0E0F               	movlw	15
  6048  006668  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6049  00666A  0E01               	movlw	1
  6050  00666C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6051  00666E  EC6A  F020         	call	_oled_putString	;wreg free
  6052                           
  6053                           ;MOTEapp.c: 545: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6054  006672  0E3C               	movlw	low STR_79
  6055  006674  0100               	movlb	0	; () banked
  6056  006676  6FC9               	movwf	sendDataCommand@string& (0+255),b
  6057  006678  0E7D               	movlw	high STR_79
  6058  00667A  6FCA               	movwf	(sendDataCommand@string+1)& (0+255),b
  6059  00667C  0E9E               	movlw	low _dataBuffer
  6060  00667E  6FCB               	movwf	sendDataCommand@appData& (0+255),b
  6061  006680  0E0C               	movlw	12
  6062  006682  6FCC               	movwf	sendDataCommand@dataLength& (0+255),b
  6063  006684  ECCB  F023         	call	_sendDataCommand	;wreg free
  6064  006688                     l11153:
  6065                           
  6066                           ;MOTEapp.c: 546: }
  6067                           ;MOTEapp.c: 547: secTicker = 10 - (10 / 3);
  6068  006688  0E07               	movlw	7
  6069  00668A  0100               	movlb	0	; () banked
  6070  00668C  6F99               	movwf	_secTicker& (0+255),b
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;MOTEapp.c: 548: runningState = runningUplinkTransmit;
  6074  00668E  0E08               	movlw	8
  6075  006690  6F98               	movwf	_runningState& (0+255),b
  6076                           
  6077                           ;MOTEapp.c: 549: }
  6078  006692  EFF6  F03A         	goto	l11855
  6079  006696                     l11157:
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;MOTEapp.c: 550: else
  6083                           ;MOTEapp.c: 551: {
  6084                           ;MOTEapp.c: 552: sleepTicker++;
  6085  006696  2B9A               	incf	_sleepTicker& (0+255),f,b
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;MOTEapp.c: 553: runningState = runningSleep;
  6089  006698  0E0E               	movlw	14
  6090  00669A  6F98               	movwf	_runningState& (0+255),b
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;MOTEapp.c: 554: selectButton = 1;
  6094  00669C  0E01               	movlw	1
  6095  00669E  6FE4               	movwf	moteRunningProcess@selectButton& (0+255),b
  6096  0066A0  EFF6  F03A         	goto	l11855
  6097  0066A4                     l447:
  6098  0066A4  D7FF               	goto	l447
  6099  0066A6                     l11163:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;MOTEapp.c: 565: if ( (changeStates) || (selectButton) )
  6103  0066A6  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6104  0066A8  E103               	bnz	l11167
  6105                           
  6106                           ; BSR set to: 0
  6107  0066AA  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6108  0066AC  B4D8               	btfsc	status,2,c
  6109  0066AE  0012               	return	
  6110  0066B0                     l11167:
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;MOTEapp.c: 566: {
  6114                           ;MOTEapp.c: 567: oled_clear();
  6115  0066B0  ECFE  F01A         	call	_oled_clear	;wreg free
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;MOTEapp.c: 568: oled_putString("  Sensor Data  ",0,0);
  6119  0066B4  0EEC               	movlw	low STR_80
  6120  0066B6  6FD5               	movwf	oled_putString@string& (0+255),b
  6121  0066B8  0E7B               	movlw	high STR_80
  6122  0066BA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6123  0066BC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6124  0066BE  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6125  0066C0  EC6A  F020         	call	_oled_putString	;wreg free
  6126                           
  6127                           ;MOTEapp.c: 569: oled_putString("    Display    ",0,1);
  6128  0066C4  0EDC               	movlw	low STR_81
  6129  0066C6  0100               	movlb	0	; () banked
  6130  0066C8  6FD5               	movwf	oled_putString@string& (0+255),b
  6131  0066CA  0E7B               	movlw	high STR_81
  6132  0066CC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6133  0066CE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6134  0066D0  0E01               	movlw	1
  6135  0066D2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6136  0066D4  EC6A  F020         	call	_oled_putString	;wreg free
  6137                           
  6138                           ;MOTEapp.c: 570: oled_putString("(NAV)    (SEL) ",0,3);
  6139  0066D8  0EFC               	movlw	low STR_75
  6140  0066DA  0100               	movlb	0	; () banked
  6141  0066DC  6FD5               	movwf	oled_putString@string& (0+255),b
  6142  0066DE  0E7B               	movlw	high STR_75
  6143  0066E0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6144  0066E2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6145  0066E4  0E03               	movlw	3
  6146  0066E6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6147  0066E8  EC6A  F020         	call	_oled_putString	;wreg free
  6148  0066EC                     l11175:
  6149                           
  6150                           ;MOTEapp.c: 571: runningState = runningSensor;
  6151  0066EC  0E01               	movlw	1
  6152  0066EE  0100               	movlb	0	; () banked
  6153  0066F0  6F98               	movwf	_runningState& (0+255),b
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;MOTEapp.c: 572: }
  6157                           ;MOTEapp.c: 573: break;
  6158  0066F2  0C01               	retlw	1
  6159  0066F4                     l11177:
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;MOTEapp.c: 575: if (changeStates)
  6163  0066F4  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6164  0066F6  E022               	bz	l11189
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;MOTEapp.c: 576: {
  6168                           ;MOTEapp.c: 577: oled_clear();
  6169  0066F8  ECFE  F01A         	call	_oled_clear	;wreg free
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;MOTEapp.c: 578: oled_putString("  Select LoRa   ",0,0);
  6173  0066FC  0ECC               	movlw	low STR_83
  6174  0066FE  6FD5               	movwf	oled_putString@string& (0+255),b
  6175  006700  0E7A               	movlw	high STR_83
  6176  006702  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6177  006704  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6178  006706  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6179  006708  EC6A  F020         	call	_oled_putString	;wreg free
  6180                           
  6181                           ;MOTEapp.c: 579: oled_putString("   Data Rate    ",0,1);
  6182  00670C  0EBB               	movlw	low STR_84
  6183  00670E  0100               	movlb	0	; () banked
  6184  006710  6FD5               	movwf	oled_putString@string& (0+255),b
  6185  006712  0E7A               	movlw	high STR_84
  6186  006714  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6187  006716  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6188  006718  0E01               	movlw	1
  6189  00671A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6190  00671C  EC6A  F020         	call	_oled_putString	;wreg free
  6191                           
  6192                           ;MOTEapp.c: 580: oled_putString("(NAV)    (SEL) ",0,3);
  6193  006720  0EFC               	movlw	low STR_75
  6194  006722  0100               	movlb	0	; () banked
  6195  006724  6FD5               	movwf	oled_putString@string& (0+255),b
  6196  006726  0E7B               	movlw	high STR_75
  6197  006728  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6198  00672A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6199  00672C  0E03               	movlw	3
  6200  00672E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6201  006730  EC6A  F020         	call	_oled_putString	;wreg free
  6202  006734                     l11187:
  6203                           
  6204                           ;MOTEapp.c: 581: runningState = runningDataRateDisplay;
  6205  006734  0E03               	movlw	3
  6206  006736  0100               	movlb	0	; () banked
  6207  006738  6F98               	movwf	_runningState& (0+255),b
  6208                           
  6209                           ;MOTEapp.c: 582: }
  6210  00673A  0C03               	retlw	3
  6211  00673C                     l11189:
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;MOTEapp.c: 583: else if (selectButton)
  6215  00673C  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6216  00673E  B4D8               	btfsc	status,2,c
  6217  006740  0012               	return	
  6218                           
  6219                           ; BSR set to: 0
  6220                           ;MOTEapp.c: 584: {
  6221                           ;MOTEapp.c: 585: oled_clear();
  6222  006742  ECFE  F01A         	call	_oled_clear	;wreg free
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;MOTEapp.c: 586: oled_putString("  Sensor Data  ",0,0);
  6226  006746  0EEC               	movlw	low STR_80
  6227  006748  6FD5               	movwf	oled_putString@string& (0+255),b
  6228  00674A  0E7B               	movlw	high STR_80
  6229  00674C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6230  00674E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6231  006750  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6232  006752  EC6A  F020         	call	_oled_putString	;wreg free
  6233                           
  6234                           ;MOTEapp.c: 587: oled_putString("Light:",0,1);
  6235  006756  0EBE               	movlw	low STR_87
  6236  006758  0100               	movlb	0	; () banked
  6237  00675A  6FD5               	movwf	oled_putString@string& (0+255),b
  6238  00675C  0E7F               	movlw	high STR_87
  6239  00675E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6240  006760  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6241  006762  0E01               	movlw	1
  6242  006764  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6243  006766  EC6A  F020         	call	_oled_putString	;wreg free
  6244                           
  6245                           ;MOTEapp.c: 588: oled_putString("Temp :",0,2);
  6246  00676A  0EB7               	movlw	low STR_88
  6247  00676C  0100               	movlb	0	; () banked
  6248  00676E  6FD5               	movwf	oled_putString@string& (0+255),b
  6249  006770  0E7F               	movlw	high STR_88
  6250  006772  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6251  006774  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6252  006776  0E02               	movlw	2
  6253  006778  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6254  00677A  EC6A  F020         	call	_oled_putString	;wreg free
  6255                           
  6256                           ;MOTEapp.c: 589: oled_putString("C",12,2);
  6257  00677E  0EF9               	movlw	low STR_76
  6258  006780  0100               	movlb	0	; () banked
  6259  006782  6FD5               	movwf	oled_putString@string& (0+255),b
  6260  006784  0E7F               	movlw	high STR_76
  6261  006786  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6262  006788  0E0C               	movlw	12
  6263  00678A  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6264  00678C  0E02               	movlw	2
  6265  00678E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6266  006790  EC6A  F020         	call	_oled_putString	;wreg free
  6267                           
  6268                           ;MOTEapp.c: 590: if (temperature)
  6269  006794  0100               	movlb	0	; () banked
  6270  006796  517E               	movf	_temperature& (0+255),w,b
  6271  006798  117F               	iorwf	(_temperature+1)& (0+255),w,b
  6272  00679A  E015               	bz	l11205
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;MOTEapp.c: 591: {
  6276                           ;MOTEapp.c: 592: oled_putUint16(light,6,1);
  6277  00679C  C07A  F0DA         	movff	_light,oled_putUint16@number
  6278  0067A0  C07B  F0DB         	movff	_light+1,oled_putUint16@number+1
  6279  0067A4  0E06               	movlw	6
  6280  0067A6  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  6281  0067A8  0E01               	movlw	1
  6282  0067AA  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  6283  0067AC  ECE7  F02A         	call	_oled_putUint16	;wreg free
  6284                           
  6285                           ;MOTEapp.c: 593: oled_putUint16(temperature,6,2);
  6286  0067B0  C07E  F0DA         	movff	_temperature,oled_putUint16@number
  6287  0067B4  C07F  F0DB         	movff	_temperature+1,oled_putUint16@number+1
  6288  0067B8  0E06               	movlw	6
  6289  0067BA  0100               	movlb	0	; () banked
  6290  0067BC  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  6291  0067BE  0E02               	movlw	2
  6292  0067C0  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  6293  0067C2  ECE7  F02A         	call	_oled_putUint16	;wreg free
  6294  0067C6                     l11205:
  6295                           
  6296                           ;MOTEapp.c: 594: }
  6297                           ;MOTEapp.c: 595: runningState = runningSensorMenu;
  6298  0067C6  0E02               	movlw	2
  6299  0067C8  0100               	movlb	0	; () banked
  6300  0067CA  6F98               	movwf	_runningState& (0+255),b
  6301  0067CC  0C02               	retlw	2
  6302  0067CE                     l11207:
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;MOTEapp.c: 599: oled_putUint16(light,6,1);
  6306  0067CE  C07A  F0DA         	movff	_light,oled_putUint16@number
  6307  0067D2  C07B  F0DB         	movff	_light+1,oled_putUint16@number+1
  6308  0067D6  0E06               	movlw	6
  6309  0067D8  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  6310  0067DA  0E01               	movlw	1
  6311  0067DC  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  6312  0067DE  ECE7  F02A         	call	_oled_putUint16	;wreg free
  6313                           
  6314                           ;MOTEapp.c: 600: oled_putUint16(temperature,6,2);
  6315  0067E2  C07E  F0DA         	movff	_temperature,oled_putUint16@number
  6316  0067E6  C07F  F0DB         	movff	_temperature+1,oled_putUint16@number+1
  6317  0067EA  0E06               	movlw	6
  6318  0067EC  0100               	movlb	0	; () banked
  6319  0067EE  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  6320  0067F0  0E02               	movlw	2
  6321  0067F2  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  6322  0067F4  ECE7  F02A         	call	_oled_putUint16	;wreg free
  6323                           
  6324                           ;MOTEapp.c: 601: if ( (changeStates) || (selectButton) )
  6325  0067F8  0100               	movlb	0	; () banked
  6326  0067FA  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6327  0067FC  E103               	bnz	l11213
  6328                           
  6329                           ; BSR set to: 0
  6330  0067FE  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6331  006800  B4D8               	btfsc	status,2,c
  6332  006802  0012               	return	
  6333  006804                     l11213:
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;MOTEapp.c: 602: {
  6337                           ;MOTEapp.c: 603: oled_clear();
  6338  006804  ECFE  F01A         	call	_oled_clear	;wreg free
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;MOTEapp.c: 604: oled_putString("  Sensor Data  ",0,0);
  6342  006808  0EEC               	movlw	low STR_80
  6343  00680A  6FD5               	movwf	oled_putString@string& (0+255),b
  6344  00680C  0E7B               	movlw	high STR_80
  6345  00680E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6346  006810  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6347  006812  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6348  006814  EC6A  F020         	call	_oled_putString	;wreg free
  6349                           
  6350                           ;MOTEapp.c: 605: oled_putString("    Display    ",0,1);
  6351  006818  0EDC               	movlw	low STR_81
  6352  00681A  0100               	movlb	0	; () banked
  6353  00681C  6FD5               	movwf	oled_putString@string& (0+255),b
  6354  00681E  0E7B               	movlw	high STR_81
  6355  006820  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6356  006822  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6357  006824  0E01               	movlw	1
  6358  006826  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6359  006828  EC6A  F020         	call	_oled_putString	;wreg free
  6360                           
  6361                           ;MOTEapp.c: 606: oled_putString("(NAV)    (SEL) ",0,3);
  6362  00682C  0EFC               	movlw	low STR_75
  6363  00682E  0100               	movlb	0	; () banked
  6364  006830  6FD5               	movwf	oled_putString@string& (0+255),b
  6365  006832  0E7B               	movlw	high STR_75
  6366  006834  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6367  006836  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6368  006838  0E03               	movlw	3
  6369  00683A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6370  00683C  EC6A  F020         	call	_oled_putString	;wreg free
  6371  006840  D755               	goto	l11175
  6372  006842                     l11223:
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;MOTEapp.c: 611: if (changeStates)
  6376  006842  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6377  006844  E022               	bz	l11235
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;MOTEapp.c: 612: {
  6381                           ;MOTEapp.c: 613: oled_clear();
  6382  006846  ECFE  F01A         	call	_oled_clear	;wreg free
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;MOTEapp.c: 614: oled_putString("  Issue Uplink  ",0,0);
  6386  00684A  0EFF               	movlw	low STR_93
  6387  00684C  6FD5               	movwf	oled_putString@string& (0+255),b
  6388  00684E  0E7A               	movlw	high STR_93
  6389  006850  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6390  006852  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6391  006854  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6392  006856  EC6A  F020         	call	_oled_putString	;wreg free
  6393                           
  6394                           ;MOTEapp.c: 615: oled_putString(" LoRaWAN Packet ",0,1);
  6395  00685A  0E32               	movlw	low STR_94
  6396  00685C  0100               	movlb	0	; () banked
  6397  00685E  6FD5               	movwf	oled_putString@string& (0+255),b
  6398  006860  0E7B               	movlw	high STR_94
  6399  006862  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6400  006864  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6401  006866  0E01               	movlw	1
  6402  006868  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6403  00686A  EC6A  F020         	call	_oled_putString	;wreg free
  6404                           
  6405                           ;MOTEapp.c: 616: oled_putString("(NAV)    (SEL) ",0,3);
  6406  00686E  0EFC               	movlw	low STR_75
  6407  006870  0100               	movlb	0	; () banked
  6408  006872  6FD5               	movwf	oled_putString@string& (0+255),b
  6409  006874  0E7B               	movlw	high STR_75
  6410  006876  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6411  006878  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6412  00687A  0E03               	movlw	3
  6413  00687C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6414  00687E  EC6A  F020         	call	_oled_putString	;wreg free
  6415  006882                     l11233:
  6416                           
  6417                           ;MOTEapp.c: 617: runningState = runningUplink;
  6418  006882  0E06               	movlw	6
  6419  006884  0100               	movlb	0	; () banked
  6420  006886  6F98               	movwf	_runningState& (0+255),b
  6421                           
  6422                           ;MOTEapp.c: 618: }
  6423  006888  0C06               	retlw	6
  6424  00688A                     l11235:
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;MOTEapp.c: 619: else if (selectButton)
  6428  00688A  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6429  00688C  B4D8               	btfsc	status,2,c
  6430  00688E  0012               	return	
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;MOTEapp.c: 620: {
  6434                           ;MOTEapp.c: 621: oled_clear();
  6435  006890  ECFE  F01A         	call	_oled_clear	;wreg free
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;MOTEapp.c: 622: oled_putString("<", 15,0);
  6439  006894  0EF7               	movlw	low STR_96
  6440  006896  6FD5               	movwf	oled_putString@string& (0+255),b
  6441  006898  0E7F               	movlw	high STR_96
  6442  00689A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6443  00689C  0E0F               	movlw	15
  6444  00689E  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6445  0068A0  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6446  0068A2  EC6A  F020         	call	_oled_putString	;wreg free
  6447                           
  6448                           ;MOTEapp.c: 623: oled_putString("Data Rate:   0", 0,0);
  6449  0068A6  0E79               	movlw	low STR_97
  6450  0068A8  0100               	movlb	0	; () banked
  6451  0068AA  6FD5               	movwf	oled_putString@string& (0+255),b
  6452  0068AC  0E7C               	movlw	high STR_97
  6453  0068AE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6454  0068B0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6455  0068B2  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6456  0068B4  EC6A  F020         	call	_oled_putString	;wreg free
  6457                           
  6458                           ;MOTEapp.c: 624: oled_putString("Data Rate:   1", 0,1);
  6459  0068B8  0E88               	movlw	low STR_98
  6460  0068BA  0100               	movlb	0	; () banked
  6461  0068BC  6FD5               	movwf	oled_putString@string& (0+255),b
  6462  0068BE  0E7C               	movlw	high STR_98
  6463  0068C0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6464  0068C2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6465  0068C4  0E01               	movlw	1
  6466  0068C6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6467  0068C8  EC6A  F020         	call	_oled_putString	;wreg free
  6468                           
  6469                           ;MOTEapp.c: 625: oled_putString("Data Rate:   2", 0,2);
  6470  0068CC  0E97               	movlw	low STR_99
  6471  0068CE  0100               	movlb	0	; () banked
  6472  0068D0  6FD5               	movwf	oled_putString@string& (0+255),b
  6473  0068D2  0E7C               	movlw	high STR_99
  6474  0068D4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6475  0068D6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6476  0068D8  0E02               	movlw	2
  6477  0068DA  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6478  0068DC  EC6A  F020         	call	_oled_putString	;wreg free
  6479                           
  6480                           ;MOTEapp.c: 626: oled_putString("Data Rate:   3", 0,3);
  6481  0068E0  0EA6               	movlw	low STR_100
  6482  0068E2  0100               	movlb	0	; () banked
  6483  0068E4  6FD5               	movwf	oled_putString@string& (0+255),b
  6484  0068E6  0E7C               	movlw	high STR_100
  6485  0068E8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6486  0068EA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6487  0068EC  0E03               	movlw	3
  6488  0068EE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6489  0068F0  EC6A  F020         	call	_oled_putString	;wreg free
  6490                           
  6491                           ;MOTEapp.c: 628: if (dataRateSelection == 0)
  6492  0068F4  0100               	movlb	0	; () banked
  6493  0068F6  51F7               	movf	_dataRateSelection& (0+255),w,b
  6494  0068F8  E10A               	bnz	l11253
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;MOTEapp.c: 629: oled_putString("*", 14,0);
  6498  0068FA  0EF5               	movlw	low STR_101
  6499  0068FC  6FD5               	movwf	oled_putString@string& (0+255),b
  6500  0068FE  0E7F               	movlw	high STR_101
  6501  006900  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6502  006902  0E0E               	movlw	14
  6503  006904  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6504  006906  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6505  006908  EC6A  F020         	call	_oled_putString	;wreg free
  6506  00690C  D028               	goto	l11265
  6507  00690E                     l11253:
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;MOTEapp.c: 630: else if (dataRateSelection == 1)
  6511  00690E  05F7               	decf	_dataRateSelection& (0+255),w,b
  6512  006910  E10B               	bnz	l11257
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;MOTEapp.c: 631: oled_putString("*", 14,1);
  6516  006912  0EF5               	movlw	low STR_101
  6517  006914  6FD5               	movwf	oled_putString@string& (0+255),b
  6518  006916  0E7F               	movlw	high STR_101
  6519  006918  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6520  00691A  0E0E               	movlw	14
  6521  00691C  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6522  00691E  0E01               	movlw	1
  6523  006920  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6524  006922  EC6A  F020         	call	_oled_putString	;wreg free
  6525  006926  D01B               	goto	l11265
  6526  006928                     l11257:
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;MOTEapp.c: 632: else if (dataRateSelection == 2)
  6530  006928  0E02               	movlw	2
  6531  00692A  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6532  00692C  E10B               	bnz	l11261
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;MOTEapp.c: 633: oled_putString("*", 14,2);
  6536  00692E  0EF5               	movlw	low STR_101
  6537  006930  6FD5               	movwf	oled_putString@string& (0+255),b
  6538  006932  0E7F               	movlw	high STR_101
  6539  006934  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6540  006936  0E0E               	movlw	14
  6541  006938  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6542  00693A  0E02               	movlw	2
  6543  00693C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6544  00693E  EC6A  F020         	call	_oled_putString	;wreg free
  6545  006942  D00D               	goto	l11265
  6546  006944                     l11261:
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;MOTEapp.c: 634: else if (dataRateSelection == 3)
  6550  006944  0E03               	movlw	3
  6551  006946  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6552  006948  E10A               	bnz	l11265
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;MOTEapp.c: 635: oled_putString("*", 14,3);
  6556  00694A  0EF5               	movlw	low STR_101
  6557  00694C  6FD5               	movwf	oled_putString@string& (0+255),b
  6558  00694E  0E7F               	movlw	high STR_101
  6559  006950  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6560  006952  0E0E               	movlw	14
  6561  006954  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6562  006956  0E03               	movlw	3
  6563  006958  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6564  00695A  EC6A  F020         	call	_oled_putString	;wreg free
  6565  00695E                     l11265:
  6566                           
  6567                           ;MOTEapp.c: 636: runningState = runningDataRateSelect;
  6568  00695E  0E04               	movlw	4
  6569  006960  0100               	movlb	0	; () banked
  6570  006962  6F98               	movwf	_runningState& (0+255),b
  6571  006964  0C04               	retlw	4
  6572  006966                     l11267:
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;MOTEapp.c: 640: if (changeStates)
  6576  006966  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6577  006968  E101 D2C0          	bz	l11543
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;MOTEapp.c: 641: {
  6581                           ;MOTEapp.c: 642: dataRatePosition++;
  6582  00696C  2B93               	incf	_dataRatePosition& (0+255),f,b
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;MOTEapp.c: 644: if (dataRatePosition > 9)
  6586  00696E  0E09               	movlw	9
  6587  006970  6593               	cpfsgt	_dataRatePosition& (0+255),b
  6588  006972  D29D               	goto	l11541
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;MOTEapp.c: 645: dataRatePosition = 0;
  6592  006974  6B93               	clrf	_dataRatePosition& (0+255),b
  6593  006976  D29B               	goto	l11541
  6594  006978                     l11275:
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;MOTEapp.c: 650: oled_clear();
  6598  006978  ECFE  F01A         	call	_oled_clear	;wreg free
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;MOTEapp.c: 651: oled_putString("<", 15,0);
  6602  00697C  0EF7               	movlw	low STR_96
  6603  00697E  6FD5               	movwf	oled_putString@string& (0+255),b
  6604  006980  0E7F               	movlw	high STR_96
  6605  006982  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6606  006984  0E0F               	movlw	15
  6607  006986  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6608  006988  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6609  00698A  EC6A  F020         	call	_oled_putString	;wreg free
  6610                           
  6611                           ;MOTEapp.c: 652: oled_putString("Data Rate:   0", 0,0);
  6612  00698E  0E79               	movlw	low STR_97
  6613  006990  0100               	movlb	0	; () banked
  6614  006992  6FD5               	movwf	oled_putString@string& (0+255),b
  6615  006994  0E7C               	movlw	high STR_97
  6616  006996  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6617  006998  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6618  00699A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6619  00699C  EC6A  F020         	call	_oled_putString	;wreg free
  6620                           
  6621                           ;MOTEapp.c: 653: oled_putString("Data Rate:   1", 0,1);
  6622  0069A0  0E88               	movlw	low STR_98
  6623  0069A2  0100               	movlb	0	; () banked
  6624  0069A4  6FD5               	movwf	oled_putString@string& (0+255),b
  6625  0069A6  0E7C               	movlw	high STR_98
  6626  0069A8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6627  0069AA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6628  0069AC  0E01               	movlw	1
  6629  0069AE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6630  0069B0  EC6A  F020         	call	_oled_putString	;wreg free
  6631                           
  6632                           ;MOTEapp.c: 654: oled_putString("Data Rate:   2", 0,2);
  6633  0069B4  0E97               	movlw	low STR_99
  6634  0069B6  0100               	movlb	0	; () banked
  6635  0069B8  6FD5               	movwf	oled_putString@string& (0+255),b
  6636  0069BA  0E7C               	movlw	high STR_99
  6637  0069BC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6638  0069BE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6639  0069C0  0E02               	movlw	2
  6640  0069C2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6641  0069C4  EC6A  F020         	call	_oled_putString	;wreg free
  6642                           
  6643                           ;MOTEapp.c: 655: oled_putString("Data Rate:   3", 0,3);
  6644  0069C8  0EA6               	movlw	low STR_100
  6645  0069CA  0100               	movlb	0	; () banked
  6646  0069CC  6FD5               	movwf	oled_putString@string& (0+255),b
  6647  0069CE  0E7C               	movlw	high STR_100
  6648  0069D0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6649  0069D2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6650  0069D4  0E03               	movlw	3
  6651  0069D6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6652  0069D8  EC6A  F020         	call	_oled_putString	;wreg free
  6653                           
  6654                           ;MOTEapp.c: 657: if (dataRateSelection == 0)
  6655  0069DC  0100               	movlb	0	; () banked
  6656  0069DE  51F7               	movf	_dataRateSelection& (0+255),w,b
  6657  0069E0  E101               	bnz	l11291
  6658  0069E2  D214               	goto	l11505
  6659  0069E4                     l11291:
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;MOTEapp.c: 659: else if (dataRateSelection == 1)
  6663  0069E4  05F7               	decf	_dataRateSelection& (0+255),w,b
  6664  0069E6  E101               	bnz	l11295
  6665  0069E8  D0C2               	goto	l11377
  6666  0069EA                     l11295:
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;MOTEapp.c: 661: else if (dataRateSelection == 2)
  6670  0069EA  0E02               	movlw	2
  6671  0069EC  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6672  0069EE  E101               	bnz	l11299
  6673  0069F0  D0CA               	goto	l11381
  6674  0069F2                     l11299:
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;MOTEapp.c: 663: else if (dataRateSelection == 3)
  6678  0069F2  0E03               	movlw	3
  6679  0069F4  D080               	goto	L38
  6680  0069F6                     l11303:
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;MOTEapp.c: 667: oled_clear();
  6684  0069F6  ECFE  F01A         	call	_oled_clear	;wreg free
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;MOTEapp.c: 668: oled_putString("<", 15,0);
  6688  0069FA  0EF7               	movlw	low STR_96
  6689  0069FC  6FD5               	movwf	oled_putString@string& (0+255),b
  6690  0069FE  0E7F               	movlw	high STR_96
  6691  006A00  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6692  006A02  0E0F               	movlw	15
  6693  006A04  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6694  006A06  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6695  006A08  EC6A  F020         	call	_oled_putString	;wreg free
  6696                           
  6697                           ;MOTEapp.c: 669: oled_putString("Data Rate:   1", 0,0);
  6698  006A0C  0E88               	movlw	low STR_98
  6699  006A0E  0100               	movlb	0	; () banked
  6700  006A10  6FD5               	movwf	oled_putString@string& (0+255),b
  6701  006A12  0E7C               	movlw	high STR_98
  6702  006A14  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6703  006A16  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6704  006A18  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6705  006A1A  EC6A  F020         	call	_oled_putString	;wreg free
  6706                           
  6707                           ;MOTEapp.c: 670: oled_putString("Data Rate:   2", 0,1);
  6708  006A1E  0E97               	movlw	low STR_99
  6709  006A20  0100               	movlb	0	; () banked
  6710  006A22  6FD5               	movwf	oled_putString@string& (0+255),b
  6711  006A24  0E7C               	movlw	high STR_99
  6712  006A26  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6713  006A28  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6714  006A2A  0E01               	movlw	1
  6715  006A2C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6716  006A2E  EC6A  F020         	call	_oled_putString	;wreg free
  6717                           
  6718                           ;MOTEapp.c: 671: oled_putString("Data Rate:   3", 0,2);
  6719  006A32  0EA6               	movlw	low STR_100
  6720  006A34  0100               	movlb	0	; () banked
  6721  006A36  6FD5               	movwf	oled_putString@string& (0+255),b
  6722  006A38  0E7C               	movlw	high STR_100
  6723  006A3A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6724  006A3C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6725  006A3E  0E02               	movlw	2
  6726  006A40  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6727  006A42  EC6A  F020         	call	_oled_putString	;wreg free
  6728                           
  6729                           ;MOTEapp.c: 672: oled_putString("Data Rate:   4", 0,3);
  6730  006A46  0EB5               	movlw	low STR_118
  6731  006A48  0100               	movlb	0	; () banked
  6732  006A4A  6FD5               	movwf	oled_putString@string& (0+255),b
  6733  006A4C  0E7C               	movlw	high STR_118
  6734  006A4E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6735  006A50  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6736  006A52  0E03               	movlw	3
  6737  006A54  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6738  006A56  EC6A  F020         	call	_oled_putString	;wreg free
  6739                           
  6740                           ;MOTEapp.c: 674: if (dataRateSelection == 1)
  6741  006A5A  0100               	movlb	0	; () banked
  6742  006A5C  05F7               	decf	_dataRateSelection& (0+255),w,b
  6743  006A5E  E101               	bnz	l11319
  6744  006A60  D1D5               	goto	l11505
  6745  006A62                     l11319:
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;MOTEapp.c: 676: else if (dataRateSelection == 2)
  6749  006A62  0E02               	movlw	2
  6750  006A64  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6751  006A66  E101               	bnz	l11323
  6752  006A68  D082               	goto	l11377
  6753  006A6A                     l11323:
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;MOTEapp.c: 678: else if (dataRateSelection == 3)
  6757  006A6A  0E03               	movlw	3
  6758  006A6C  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6759  006A6E  E101               	bnz	l11327
  6760  006A70  D08A               	goto	l11381
  6761  006A72                     l11327:
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;MOTEapp.c: 680: else if (dataRateSelection == 4)
  6765  006A72  0E04               	movlw	4
  6766  006A74  D040               	goto	L38
  6767  006A76                     l11331:
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;MOTEapp.c: 684: oled_clear();
  6771  006A76  ECFE  F01A         	call	_oled_clear	;wreg free
  6772                           
  6773                           ; BSR set to: 0
  6774                           ;MOTEapp.c: 685: oled_putString("<", 15,0);
  6775  006A7A  0EF7               	movlw	low STR_96
  6776  006A7C  6FD5               	movwf	oled_putString@string& (0+255),b
  6777  006A7E  0E7F               	movlw	high STR_96
  6778  006A80  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6779  006A82  0E0F               	movlw	15
  6780  006A84  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6781  006A86  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6782  006A88  EC6A  F020         	call	_oled_putString	;wreg free
  6783                           
  6784                           ;MOTEapp.c: 686: oled_putString("Data Rate:   2", 0,0);
  6785  006A8C  0E97               	movlw	low STR_99
  6786  006A8E  0100               	movlb	0	; () banked
  6787  006A90  6FD5               	movwf	oled_putString@string& (0+255),b
  6788  006A92  0E7C               	movlw	high STR_99
  6789  006A94  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6790  006A96  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6791  006A98  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6792  006A9A  EC6A  F020         	call	_oled_putString	;wreg free
  6793                           
  6794                           ;MOTEapp.c: 687: oled_putString("Data Rate:   3", 0,1);
  6795  006A9E  0EA6               	movlw	low STR_100
  6796  006AA0  0100               	movlb	0	; () banked
  6797  006AA2  6FD5               	movwf	oled_putString@string& (0+255),b
  6798  006AA4  0E7C               	movlw	high STR_100
  6799  006AA6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6800  006AA8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6801  006AAA  0E01               	movlw	1
  6802  006AAC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6803  006AAE  EC6A  F020         	call	_oled_putString	;wreg free
  6804                           
  6805                           ;MOTEapp.c: 688: oled_putString("Data Rate:   4", 0,2);
  6806  006AB2  0EB5               	movlw	low STR_118
  6807  006AB4  0100               	movlb	0	; () banked
  6808  006AB6  6FD5               	movwf	oled_putString@string& (0+255),b
  6809  006AB8  0E7C               	movlw	high STR_118
  6810  006ABA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6811  006ABC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6812  006ABE  0E02               	movlw	2
  6813  006AC0  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6814  006AC2  EC6A  F020         	call	_oled_putString	;wreg free
  6815                           
  6816                           ;MOTEapp.c: 689: oled_putString("Data Rate:   5", 0,3);
  6817  006AC6  0EC4               	movlw	low STR_127
  6818  006AC8  0100               	movlb	0	; () banked
  6819  006ACA  6FD5               	movwf	oled_putString@string& (0+255),b
  6820  006ACC  0E7C               	movlw	high STR_127
  6821  006ACE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6822  006AD0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6823  006AD2  0E03               	movlw	3
  6824  006AD4  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6825  006AD6  EC6A  F020         	call	_oled_putString	;wreg free
  6826                           
  6827                           ;MOTEapp.c: 691: if (dataRateSelection == 2)
  6828  006ADA  0E02               	movlw	2
  6829  006ADC  0100               	movlb	0	; () banked
  6830  006ADE  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6831  006AE0  E101               	bnz	l11347
  6832  006AE2  D194               	goto	l11505
  6833  006AE4                     l11347:
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;MOTEapp.c: 693: else if (dataRateSelection == 3)
  6837  006AE4  0E03               	movlw	3
  6838  006AE6  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6839  006AE8  E101               	bnz	l11351
  6840  006AEA  D041               	goto	l11377
  6841  006AEC                     l11351:
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;MOTEapp.c: 695: else if (dataRateSelection == 4)
  6845  006AEC  0E04               	movlw	4
  6846  006AEE  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6847  006AF0  E101               	bnz	l11355
  6848  006AF2  D049               	goto	l11381
  6849  006AF4                     l11355:
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;MOTEapp.c: 697: else if (dataRateSelection == 5)
  6853  006AF4  0E05               	movlw	5
  6854  006AF6                     L38:
  6855  006AF6  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6856  006AF8  D04F               	goto	L34
  6857  006AFA                     l11359:
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;MOTEapp.c: 701: oled_clear();
  6861  006AFA  ECFE  F01A         	call	_oled_clear	;wreg free
  6862                           
  6863                           ; BSR set to: 0
  6864                           ;MOTEapp.c: 702: oled_putString("<", 15,0);
  6865  006AFE  0EF7               	movlw	low STR_96
  6866  006B00  6FD5               	movwf	oled_putString@string& (0+255),b
  6867  006B02  0E7F               	movlw	high STR_96
  6868  006B04  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6869  006B06  0E0F               	movlw	15
  6870  006B08  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6871  006B0A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6872  006B0C  EC6A  F020         	call	_oled_putString	;wreg free
  6873                           
  6874                           ;MOTEapp.c: 703: oled_putString("Data Rate:   3", 0,0);
  6875  006B10  0EA6               	movlw	low STR_100
  6876  006B12  0100               	movlb	0	; () banked
  6877  006B14  6FD5               	movwf	oled_putString@string& (0+255),b
  6878  006B16  0E7C               	movlw	high STR_100
  6879  006B18  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6880  006B1A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6881  006B1C  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6882  006B1E  EC6A  F020         	call	_oled_putString	;wreg free
  6883                           
  6884                           ;MOTEapp.c: 704: oled_putString("Data Rate:   4", 0,1);
  6885  006B22  0EB5               	movlw	low STR_118
  6886  006B24  0100               	movlb	0	; () banked
  6887  006B26  6FD5               	movwf	oled_putString@string& (0+255),b
  6888  006B28  0E7C               	movlw	high STR_118
  6889  006B2A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6890  006B2C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6891  006B2E  0E01               	movlw	1
  6892  006B30  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6893  006B32  EC6A  F020         	call	_oled_putString	;wreg free
  6894                           
  6895                           ;MOTEapp.c: 705: oled_putString("Data Rate:   5", 0,2);
  6896  006B36  0EC4               	movlw	low STR_127
  6897  006B38  0100               	movlb	0	; () banked
  6898  006B3A  6FD5               	movwf	oled_putString@string& (0+255),b
  6899  006B3C  0E7C               	movlw	high STR_127
  6900  006B3E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6901  006B40  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6902  006B42  0E02               	movlw	2
  6903  006B44  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6904  006B46  EC6A  F020         	call	_oled_putString	;wreg free
  6905                           
  6906                           ;MOTEapp.c: 706: oled_putString("Data Rate:   6", 0,3);
  6907  006B4A  0ED3               	movlw	low STR_136
  6908  006B4C  0100               	movlb	0	; () banked
  6909  006B4E  6FD5               	movwf	oled_putString@string& (0+255),b
  6910  006B50  0E7C               	movlw	high STR_136
  6911  006B52  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6912  006B54  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6913  006B56  0E03               	movlw	3
  6914  006B58  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6915  006B5A  EC6A  F020         	call	_oled_putString	;wreg free
  6916                           
  6917                           ;MOTEapp.c: 708: if (dataRateSelection == 3)
  6918  006B5E  0E03               	movlw	3
  6919  006B60  0100               	movlb	0	; () banked
  6920  006B62  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6921  006B64  E101               	bnz	l11375
  6922  006B66  D152               	goto	l11505
  6923  006B68                     l11375:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;MOTEapp.c: 710: else if (dataRateSelection == 4)
  6927  006B68  0E04               	movlw	4
  6928  006B6A  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6929  006B6C  E109               	bnz	l11379
  6930  006B6E                     l11377:
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;MOTEapp.c: 711: oled_putString("*", 14,1);
  6934  006B6E  0EF5               	movlw	low STR_101
  6935  006B70  6FD5               	movwf	oled_putString@string& (0+255),b
  6936  006B72  0E7F               	movlw	high STR_101
  6937  006B74  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6938  006B76  0E0E               	movlw	14
  6939  006B78  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6940  006B7A  0E01               	movlw	1
  6941  006B7C  EFBC  F03A         	goto	L29
  6942  006B80                     l11379:
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;MOTEapp.c: 712: else if (dataRateSelection == 5)
  6946  006B80  0E05               	movlw	5
  6947  006B82  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6948  006B84  E107               	bnz	l11383
  6949  006B86                     l11381:
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;MOTEapp.c: 713: oled_putString("*", 14,2);
  6953  006B86  0EF5               	movlw	low STR_101
  6954  006B88  6FD5               	movwf	oled_putString@string& (0+255),b
  6955  006B8A  0E7F               	movlw	high STR_101
  6956  006B8C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6957  006B8E  0E0E               	movlw	14
  6958  006B90  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6959  006B92  D044               	goto	L35
  6960  006B94                     l11383:
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;MOTEapp.c: 714: else if (dataRateSelection == 6)
  6964  006B94  0E06               	movlw	6
  6965  006B96  D7AF               	goto	L38
  6966  006B98                     L34:
  6967  006B98  A4D8               	btfss	status,2,c
  6968  006B9A  0012               	return	
  6969  006B9C  D180               	goto	L70
  6970  006B9E                     l11387:
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;MOTEapp.c: 718: oled_clear();
  6974  006B9E  ECFE  F01A         	call	_oled_clear	;wreg free
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;MOTEapp.c: 719: oled_putString("<", 15,0);
  6978  006BA2  0EF7               	movlw	low STR_96
  6979  006BA4  6FD5               	movwf	oled_putString@string& (0+255),b
  6980  006BA6  0E7F               	movlw	high STR_96
  6981  006BA8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6982  006BAA  0E0F               	movlw	15
  6983  006BAC  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6984  006BAE  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6985  006BB0  EC6A  F020         	call	_oled_putString	;wreg free
  6986                           
  6987                           ;MOTEapp.c: 720: oled_putString("Data Rate:   4", 0,0);
  6988  006BB4  0EB5               	movlw	low STR_118
  6989  006BB6  0100               	movlb	0	; () banked
  6990  006BB8  6FD5               	movwf	oled_putString@string& (0+255),b
  6991  006BBA  0E7C               	movlw	high STR_118
  6992  006BBC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6993  006BBE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6994  006BC0  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6995  006BC2  EC6A  F020         	call	_oled_putString	;wreg free
  6996                           
  6997                           ;MOTEapp.c: 721: oled_putString("Data Rate:   5", 0,1);
  6998  006BC6  0EC4               	movlw	low STR_127
  6999  006BC8  0100               	movlb	0	; () banked
  7000  006BCA  6FD5               	movwf	oled_putString@string& (0+255),b
  7001  006BCC  0E7C               	movlw	high STR_127
  7002  006BCE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7003  006BD0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7004  006BD2  0E01               	movlw	1
  7005  006BD4  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7006  006BD6  EC6A  F020         	call	_oled_putString	;wreg free
  7007                           
  7008                           ;MOTEapp.c: 722: oled_putString("Data Rate:   6", 0,2);
  7009  006BDA  0ED3               	movlw	low STR_136
  7010  006BDC  0100               	movlb	0	; () banked
  7011  006BDE  6FD5               	movwf	oled_putString@string& (0+255),b
  7012  006BE0  0E7C               	movlw	high STR_136
  7013  006BE2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7014  006BE4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7015  006BE6  0E02               	movlw	2
  7016  006BE8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7017  006BEA  EC6A  F020         	call	_oled_putString	;wreg free
  7018                           
  7019                           ;MOTEapp.c: 723: oled_putString("Data Rate:   7", 0,3);
  7020  006BEE  0EE2               	movlw	low STR_145
  7021  006BF0  0100               	movlb	0	; () banked
  7022  006BF2  6FD5               	movwf	oled_putString@string& (0+255),b
  7023  006BF4  0E7C               	movlw	high STR_145
  7024  006BF6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7025  006BF8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7026  006BFA  0E03               	movlw	3
  7027  006BFC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7028  006BFE  EC6A  F020         	call	_oled_putString	;wreg free
  7029                           
  7030                           ;MOTEapp.c: 725: if (dataRateSelection == 4)
  7031  006C02  0E04               	movlw	4
  7032  006C04  0100               	movlb	0	; () banked
  7033  006C06  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7034  006C08  E101               	bnz	l11403
  7035  006C0A  D100               	goto	l11505
  7036  006C0C                     l11403:
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;MOTEapp.c: 727: else if (dataRateSelection == 5)
  7040  006C0C  0E05               	movlw	5
  7041  006C0E  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7042  006C10  E101               	bnz	l11407
  7043  006C12  D7AD               	goto	l11377
  7044  006C14                     l11407:
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;MOTEapp.c: 729: else if (dataRateSelection == 6)
  7048  006C14  0E06               	movlw	6
  7049  006C16  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7050  006C18  E104               	bnz	l11411
  7051  006C1A  D7B5               	goto	l11381
  7052  006C1C                     L35:
  7053  006C1C  0E02               	movlw	2
  7054  006C1E  EFBC  F03A         	goto	L29
  7055  006C22                     l11411:
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;MOTEapp.c: 731: else if (dataRateSelection == 7)
  7059  006C22  0E07               	movlw	7
  7060  006C24  D768               	goto	L38
  7061  006C26                     l11415:
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;MOTEapp.c: 735: oled_clear();
  7065  006C26  ECFE  F01A         	call	_oled_clear	;wreg free
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;MOTEapp.c: 736: oled_putString("<", 15,0);
  7069  006C2A  0EF7               	movlw	low STR_96
  7070  006C2C  6FD5               	movwf	oled_putString@string& (0+255),b
  7071  006C2E  0E7F               	movlw	high STR_96
  7072  006C30  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7073  006C32  0E0F               	movlw	15
  7074  006C34  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7075  006C36  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7076  006C38  EC6A  F020         	call	_oled_putString	;wreg free
  7077                           
  7078                           ;MOTEapp.c: 737: oled_putString("Data Rate:   5", 0,0);
  7079  006C3C  0EC4               	movlw	low STR_127
  7080  006C3E  0100               	movlb	0	; () banked
  7081  006C40  6FD5               	movwf	oled_putString@string& (0+255),b
  7082  006C42  0E7C               	movlw	high STR_127
  7083  006C44  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7084  006C46  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7085  006C48  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7086  006C4A  EC6A  F020         	call	_oled_putString	;wreg free
  7087                           
  7088                           ;MOTEapp.c: 738: oled_putString("Data Rate:   6", 0,1);
  7089  006C4E  0ED3               	movlw	low STR_136
  7090  006C50  0100               	movlb	0	; () banked
  7091  006C52  6FD5               	movwf	oled_putString@string& (0+255),b
  7092  006C54  0E7C               	movlw	high STR_136
  7093  006C56  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7094  006C58  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7095  006C5A  0E01               	movlw	1
  7096  006C5C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7097  006C5E  EC6A  F020         	call	_oled_putString	;wreg free
  7098                           
  7099                           ;MOTEapp.c: 739: oled_putString("Data Rate:   7", 0,2);
  7100  006C62  0EE2               	movlw	low STR_145
  7101  006C64  0100               	movlb	0	; () banked
  7102  006C66  6FD5               	movwf	oled_putString@string& (0+255),b
  7103  006C68  0E7C               	movlw	high STR_145
  7104  006C6A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7105  006C6C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7106  006C6E  0E02               	movlw	2
  7107  006C70  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7108  006C72  EC6A  F020         	call	_oled_putString	;wreg free
  7109                           
  7110                           ;MOTEapp.c: 740: oled_putString("Auto Data Rate", 0,3);
  7111  006C76  0EF1               	movlw	low STR_154
  7112  006C78  0100               	movlb	0	; () banked
  7113  006C7A  6FD5               	movwf	oled_putString@string& (0+255),b
  7114  006C7C  0E7C               	movlw	high STR_154
  7115  006C7E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7116  006C80  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7117  006C82  0E03               	movlw	3
  7118  006C84  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7119  006C86  EC6A  F020         	call	_oled_putString	;wreg free
  7120                           
  7121                           ;MOTEapp.c: 742: if (dataRateSelection == 5)
  7122  006C8A  0E05               	movlw	5
  7123  006C8C  0100               	movlb	0	; () banked
  7124  006C8E  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7125  006C90  E101               	bnz	l11431
  7126  006C92  D0BC               	goto	l11505
  7127  006C94                     l11431:
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;MOTEapp.c: 744: else if (dataRateSelection == 6)
  7131  006C94  0E06               	movlw	6
  7132  006C96  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7133  006C98  E101               	bnz	l11435
  7134  006C9A  D769               	goto	l11377
  7135  006C9C                     l11435:
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;MOTEapp.c: 746: else if (dataRateSelection == 7)
  7139  006C9C  0E07               	movlw	7
  7140  006C9E  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7141  006CA0  E101               	bnz	l11439
  7142  006CA2  D771               	goto	l11381
  7143  006CA4                     l11439:
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;MOTEapp.c: 748: else if (adrStatus)
  7147  006CA4  518E               	movf	_adrStatus& (0+255),w,b
  7148  006CA6  B4D8               	btfsc	status,2,c
  7149  006CA8  0012               	return	
  7150  006CAA  D0F9               	goto	L70
  7151  006CAC                     l11443:
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;MOTEapp.c: 752: oled_clear();
  7155  006CAC  ECFE  F01A         	call	_oled_clear	;wreg free
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;MOTEapp.c: 753: oled_putString("<", 15,0);
  7159  006CB0  0EF7               	movlw	low STR_96
  7160  006CB2  6FD5               	movwf	oled_putString@string& (0+255),b
  7161  006CB4  0E7F               	movlw	high STR_96
  7162  006CB6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7163  006CB8  0E0F               	movlw	15
  7164  006CBA  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7165  006CBC  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7166  006CBE  EC6A  F020         	call	_oled_putString	;wreg free
  7167                           
  7168                           ;MOTEapp.c: 754: oled_putString("Data Rate:   6", 0,0);
  7169  006CC2  0ED3               	movlw	low STR_136
  7170  006CC4  0100               	movlb	0	; () banked
  7171  006CC6  6FD5               	movwf	oled_putString@string& (0+255),b
  7172  006CC8  0E7C               	movlw	high STR_136
  7173  006CCA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7174  006CCC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7175  006CCE  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7176  006CD0  EC6A  F020         	call	_oled_putString	;wreg free
  7177                           
  7178                           ;MOTEapp.c: 755: oled_putString("Data Rate:   7", 0,1);
  7179  006CD4  0EE2               	movlw	low STR_145
  7180  006CD6  0100               	movlb	0	; () banked
  7181  006CD8  6FD5               	movwf	oled_putString@string& (0+255),b
  7182  006CDA  0E7C               	movlw	high STR_145
  7183  006CDC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7184  006CDE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7185  006CE0  0E01               	movlw	1
  7186  006CE2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7187  006CE4  EC6A  F020         	call	_oled_putString	;wreg free
  7188                           
  7189                           ;MOTEapp.c: 756: oled_putString("Auto Data Rate", 0,2);
  7190  006CE8  0EF1               	movlw	low STR_154
  7191  006CEA  0100               	movlb	0	; () banked
  7192  006CEC  6FD5               	movwf	oled_putString@string& (0+255),b
  7193  006CEE  0E7C               	movlw	high STR_154
  7194  006CF0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7195  006CF2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7196  006CF4  0E02               	movlw	2
  7197  006CF6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7198  006CF8  EC6A  F020         	call	_oled_putString	;wreg free
  7199                           
  7200                           ;MOTEapp.c: 757: oled_putString("Exit Menu     ", 0,3);
  7201  006CFC  0E4C               	movlw	low STR_163
  7202  006CFE  0100               	movlb	0	; () banked
  7203  006D00  6FD5               	movwf	oled_putString@string& (0+255),b
  7204  006D02  0E7C               	movlw	high STR_163
  7205  006D04  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7206  006D06  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7207  006D08  0E03               	movlw	3
  7208  006D0A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7209  006D0C  EC6A  F020         	call	_oled_putString	;wreg free
  7210                           
  7211                           ;MOTEapp.c: 759: if (dataRateSelection == 6)
  7212  006D10  0E06               	movlw	6
  7213  006D12  0100               	movlb	0	; () banked
  7214  006D14  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7215  006D16  E101               	bnz	l11459
  7216  006D18  D079               	goto	l11505
  7217  006D1A                     l11459:
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;MOTEapp.c: 761: else if (dataRateSelection == 7)
  7221  006D1A  0E07               	movlw	7
  7222  006D1C  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7223  006D1E  E101               	bnz	l11463
  7224  006D20  D726               	goto	l11377
  7225  006D22                     l11463:
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;MOTEapp.c: 763: else if (adrStatus)
  7229  006D22  518E               	movf	_adrStatus& (0+255),w,b
  7230  006D24  B4D8               	btfsc	status,2,c
  7231  006D26  0012               	return	
  7232  006D28  D72E               	goto	l11381
  7233  006D2A                     l11467:
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;MOTEapp.c: 767: oled_clear();
  7237  006D2A  ECFE  F01A         	call	_oled_clear	;wreg free
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;MOTEapp.c: 768: oled_putString("<", 15,0);
  7241  006D2E  0EF7               	movlw	low STR_96
  7242  006D30  6FD5               	movwf	oled_putString@string& (0+255),b
  7243  006D32  0E7F               	movlw	high STR_96
  7244  006D34  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7245  006D36  0E0F               	movlw	15
  7246  006D38  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7247  006D3A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7248  006D3C  EC6A  F020         	call	_oled_putString	;wreg free
  7249                           
  7250                           ;MOTEapp.c: 769: oled_putString("Data Rate:   7", 0,0);
  7251  006D40  0EE2               	movlw	low STR_145
  7252  006D42  0100               	movlb	0	; () banked
  7253  006D44  6FD5               	movwf	oled_putString@string& (0+255),b
  7254  006D46  0E7C               	movlw	high STR_145
  7255  006D48  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7256  006D4A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7257  006D4C  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7258  006D4E  EC6A  F020         	call	_oled_putString	;wreg free
  7259                           
  7260                           ;MOTEapp.c: 770: oled_putString("Auto Data Rate", 0,1);
  7261  006D52  0EF1               	movlw	low STR_154
  7262  006D54  0100               	movlb	0	; () banked
  7263  006D56  6FD5               	movwf	oled_putString@string& (0+255),b
  7264  006D58  0E7C               	movlw	high STR_154
  7265  006D5A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7266  006D5C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7267  006D5E  0E01               	movlw	1
  7268  006D60  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7269  006D62  EC6A  F020         	call	_oled_putString	;wreg free
  7270                           
  7271                           ;MOTEapp.c: 771: oled_putString("Exit Menu     ", 0,2);
  7272  006D66  0E4C               	movlw	low STR_163
  7273  006D68  0100               	movlb	0	; () banked
  7274  006D6A  6FD5               	movwf	oled_putString@string& (0+255),b
  7275  006D6C  0E7C               	movlw	high STR_163
  7276  006D6E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7277  006D70  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7278  006D72  0E02               	movlw	2
  7279  006D74  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7280  006D76  EC6A  F020         	call	_oled_putString	;wreg free
  7281                           
  7282                           ;MOTEapp.c: 772: oled_putString("Data Rate:   0", 0,3);
  7283  006D7A  0E79               	movlw	low STR_97
  7284  006D7C  0100               	movlb	0	; () banked
  7285  006D7E  6FD5               	movwf	oled_putString@string& (0+255),b
  7286  006D80  0E7C               	movlw	high STR_97
  7287  006D82  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7288  006D84  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7289  006D86  0E03               	movlw	3
  7290  006D88  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7291  006D8A  EC6A  F020         	call	_oled_putString	;wreg free
  7292                           
  7293                           ;MOTEapp.c: 774: if (dataRateSelection == 7)
  7294  006D8E  0E07               	movlw	7
  7295  006D90  0100               	movlb	0	; () banked
  7296  006D92  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7297  006D94  E101               	bnz	l11483
  7298  006D96  D03A               	goto	l11505
  7299  006D98                     l11483:
  7300                           
  7301                           ; BSR set to: 0
  7302                           ;MOTEapp.c: 776: else if (adrStatus)
  7303  006D98  518E               	movf	_adrStatus& (0+255),w,b
  7304  006D9A  E001               	bz	l11487
  7305  006D9C  D6E8               	goto	l11377
  7306  006D9E                     l11487:
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;MOTEapp.c: 778: else if (dataRateSelection == 0)
  7310  006D9E  51F7               	movf	_dataRateSelection& (0+255),w,b
  7311  006DA0  D6FB               	goto	L34
  7312  006DA2                     l11491:
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;MOTEapp.c: 782: oled_clear();
  7316  006DA2  ECFE  F01A         	call	_oled_clear	;wreg free
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;MOTEapp.c: 783: oled_putString("<", 15,0);
  7320  006DA6  0EF7               	movlw	low STR_96
  7321  006DA8  6FD5               	movwf	oled_putString@string& (0+255),b
  7322  006DAA  0E7F               	movlw	high STR_96
  7323  006DAC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7324  006DAE  0E0F               	movlw	15
  7325  006DB0  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7326  006DB2  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7327  006DB4  EC6A  F020         	call	_oled_putString	;wreg free
  7328                           
  7329                           ;MOTEapp.c: 784: oled_putString("Auto Data Rate", 0,0);
  7330  006DB8  0EF1               	movlw	low STR_154
  7331  006DBA  0100               	movlb	0	; () banked
  7332  006DBC  6FD5               	movwf	oled_putString@string& (0+255),b
  7333  006DBE  0E7C               	movlw	high STR_154
  7334  006DC0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7335  006DC2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7336  006DC4  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7337  006DC6  EC6A  F020         	call	_oled_putString	;wreg free
  7338                           
  7339                           ;MOTEapp.c: 785: oled_putString("Exit Menu     ", 0,1);
  7340  006DCA  0E4C               	movlw	low STR_163
  7341  006DCC  0100               	movlb	0	; () banked
  7342  006DCE  6FD5               	movwf	oled_putString@string& (0+255),b
  7343  006DD0  0E7C               	movlw	high STR_163
  7344  006DD2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7345  006DD4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7346  006DD6  0E01               	movlw	1
  7347  006DD8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7348  006DDA  EC6A  F020         	call	_oled_putString	;wreg free
  7349                           
  7350                           ;MOTEapp.c: 786: oled_putString("Data Rate:   0", 0,2);
  7351  006DDE  0E79               	movlw	low STR_97
  7352  006DE0  0100               	movlb	0	; () banked
  7353  006DE2  6FD5               	movwf	oled_putString@string& (0+255),b
  7354  006DE4  0E7C               	movlw	high STR_97
  7355  006DE6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7356  006DE8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7357  006DEA  0E02               	movlw	2
  7358  006DEC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7359  006DEE  EC6A  F020         	call	_oled_putString	;wreg free
  7360                           
  7361                           ;MOTEapp.c: 787: oled_putString("Data Rate:   1", 0,3);
  7362  006DF2  0E88               	movlw	low STR_98
  7363  006DF4  0100               	movlb	0	; () banked
  7364  006DF6  6FD5               	movwf	oled_putString@string& (0+255),b
  7365  006DF8  0E7C               	movlw	high STR_98
  7366  006DFA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7367  006DFC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7368  006DFE  0E03               	movlw	3
  7369  006E00  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7370  006E02  EC6A  F020         	call	_oled_putString	;wreg free
  7371                           
  7372                           ;MOTEapp.c: 789: if (adrStatus)
  7373  006E06  0100               	movlb	0	; () banked
  7374  006E08  518E               	movf	_adrStatus& (0+255),w,b
  7375  006E0A  E009               	bz	l11507
  7376  006E0C                     l11505:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;MOTEapp.c: 790: oled_putString("*", 14,0);
  7380  006E0C  0EF5               	movlw	low STR_101
  7381  006E0E  6FD5               	movwf	oled_putString@string& (0+255),b
  7382  006E10  0E7F               	movlw	high STR_101
  7383  006E12  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7384  006E14  0E0E               	movlw	14
  7385  006E16  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7386  006E18  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7387  006E1A  EF6A  F020         	goto	_oled_putString	;wreg free
  7388  006E1E                     l11507:
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;MOTEapp.c: 791: else if (dataRateSelection == 0)
  7392  006E1E  51F7               	movf	_dataRateSelection& (0+255),w,b
  7393  006E20  E101               	bnz	l11511
  7394  006E22  D6B1               	goto	l11381
  7395  006E24                     l11511:
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;MOTEapp.c: 793: else if (dataRateSelection == 1)
  7399  006E24  05F7               	decf	_dataRateSelection& (0+255),w,b
  7400  006E26  D6B8               	goto	L34
  7401  006E28                     l11515:
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;MOTEapp.c: 797: oled_clear();
  7405  006E28  ECFE  F01A         	call	_oled_clear	;wreg free
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;MOTEapp.c: 798: oled_putString("<", 15,0);
  7409  006E2C  0EF7               	movlw	low STR_96
  7410  006E2E  6FD5               	movwf	oled_putString@string& (0+255),b
  7411  006E30  0E7F               	movlw	high STR_96
  7412  006E32  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7413  006E34  0E0F               	movlw	15
  7414  006E36  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7415  006E38  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7416  006E3A  EC6A  F020         	call	_oled_putString	;wreg free
  7417                           
  7418                           ;MOTEapp.c: 799: oled_putString("Exit Menu     ", 0,0);
  7419  006E3E  0E4C               	movlw	low STR_163
  7420  006E40  0100               	movlb	0	; () banked
  7421  006E42  6FD5               	movwf	oled_putString@string& (0+255),b
  7422  006E44  0E7C               	movlw	high STR_163
  7423  006E46  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7424  006E48  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7425  006E4A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7426  006E4C  EC6A  F020         	call	_oled_putString	;wreg free
  7427                           
  7428                           ;MOTEapp.c: 800: oled_putString("Data Rate:   0", 0,1);
  7429  006E50  0E79               	movlw	low STR_97
  7430  006E52  0100               	movlb	0	; () banked
  7431  006E54  6FD5               	movwf	oled_putString@string& (0+255),b
  7432  006E56  0E7C               	movlw	high STR_97
  7433  006E58  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7434  006E5A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7435  006E5C  0E01               	movlw	1
  7436  006E5E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7437  006E60  EC6A  F020         	call	_oled_putString	;wreg free
  7438                           
  7439                           ;MOTEapp.c: 801: oled_putString("Data Rate:   1", 0,2);
  7440  006E64  0E88               	movlw	low STR_98
  7441  006E66  0100               	movlb	0	; () banked
  7442  006E68  6FD5               	movwf	oled_putString@string& (0+255),b
  7443  006E6A  0E7C               	movlw	high STR_98
  7444  006E6C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7445  006E6E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7446  006E70  0E02               	movlw	2
  7447  006E72  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7448  006E74  EC6A  F020         	call	_oled_putString	;wreg free
  7449                           
  7450                           ;MOTEapp.c: 802: oled_putString("Data Rate:   2", 0,3);
  7451  006E78  0E97               	movlw	low STR_99
  7452  006E7A  0100               	movlb	0	; () banked
  7453  006E7C  6FD5               	movwf	oled_putString@string& (0+255),b
  7454  006E7E  0E7C               	movlw	high STR_99
  7455  006E80  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7456  006E82  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7457  006E84  0E03               	movlw	3
  7458  006E86  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7459  006E88  EC6A  F020         	call	_oled_putString	;wreg free
  7460                           
  7461                           ;MOTEapp.c: 804: if (dataRateSelection == 0)
  7462  006E8C  0100               	movlb	0	; () banked
  7463  006E8E  51F7               	movf	_dataRateSelection& (0+255),w,b
  7464  006E90  E101               	bnz	l11531
  7465  006E92  D66D               	goto	l11377
  7466  006E94                     l11531:
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;MOTEapp.c: 806: else if (dataRateSelection == 1)
  7470  006E94  05F7               	decf	_dataRateSelection& (0+255),w,b
  7471  006E96  E101               	bnz	l11535
  7472  006E98  D676               	goto	l11381
  7473  006E9A                     l11535:
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;MOTEapp.c: 808: else if (dataRateSelection == 2)
  7477  006E9A  0E02               	movlw	2
  7478  006E9C  D62C               	goto	L38
  7479  006E9E                     L70:
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;MOTEapp.c: 809: oled_putString("*", 14,3);
  7483  006E9E  0EF5               	movlw	low STR_101
  7484  006EA0  6FD5               	movwf	oled_putString@string& (0+255),b
  7485  006EA2  0E7F               	movlw	high STR_101
  7486  006EA4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7487  006EA6  0E0E               	movlw	14
  7488  006EA8  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7489  006EAA  0E03               	movlw	3
  7490  006EAC  D365               	goto	L29
  7491  006EAE                     l11541:
  7492                           
  7493                           ; BSR set to: 0
  7494  006EAE  5193               	movf	_dataRatePosition& (0+255),w,b
  7495                           
  7496                           ; Switch size 1, requested type "speed"
  7497                           ; Number of cases is 10, Range of values is 0 to 9
  7498                           ; switch strategies available:
  7499                           ; Name         Instructions Cycles
  7500                           ; simple_byte           31    16 (average)
  7501                           ;	Chosen strategy is simple_byte
  7502  006EB0  E101 D562          	bz	l11275
  7503  006EB4  0A01               	xorlw	1	; case 1
  7504  006EB6  E101 D59E          	bz	l11303
  7505  006EBA  0A03               	xorlw	3	; case 2
  7506  006EBC  E101 D5DB          	bz	l11331
  7507  006EC0  0A01               	xorlw	1	; case 3
  7508  006EC2  E101 D61A          	bz	l11359
  7509  006EC6  0A07               	xorlw	7	; case 4
  7510  006EC8  E101 D669          	bz	l11387
  7511  006ECC  0A01               	xorlw	1	; case 5
  7512  006ECE  E101 D6AA          	bz	l11415
  7513  006ED2  0A03               	xorlw	3	; case 6
  7514  006ED4  E101 D6EA          	bz	l11443
  7515  006ED8  0A01               	xorlw	1	; case 7
  7516  006EDA  E101 D726          	bz	l11467
  7517  006EDE  0A0F               	xorlw	15	; case 8
  7518  006EE0  E101 D75F          	bz	l11491
  7519  006EE4  0A01               	xorlw	1	; case 9
  7520  006EE6  A4D8               	btfss	status,2,c
  7521  006EE8  0012               	return	
  7522  006EEA  D79E               	goto	l11515
  7523  006EEC                     l11543:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;MOTEapp.c: 813: else if (selectButton)
  7527  006EEC  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7528  006EEE  B4D8               	btfsc	status,2,c
  7529  006EF0  0012               	return	
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;MOTEapp.c: 814: {
  7533                           ;MOTEapp.c: 815: if (dataRatePosition == 9)
  7534  006EF2  0E09               	movlw	9
  7535  006EF4  1993               	xorwf	_dataRatePosition& (0+255),w,b
  7536  006EF6  E121               	bnz	l11559
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;MOTEapp.c: 816: {
  7540                           ;MOTEapp.c: 818: oled_clear();
  7541  006EF8  ECFE  F01A         	call	_oled_clear	;wreg free
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;MOTEapp.c: 819: dataRatePosition = 0;
  7545  006EFC  6B93               	clrf	_dataRatePosition& (0+255),b
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;MOTEapp.c: 820: oled_putString("  Select LoRa   ",0,0);
  7549  006EFE  0ECC               	movlw	low STR_83
  7550  006F00  6FD5               	movwf	oled_putString@string& (0+255),b
  7551  006F02  0E7A               	movlw	high STR_83
  7552  006F04  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7553  006F06  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7554  006F08  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7555  006F0A  EC6A  F020         	call	_oled_putString	;wreg free
  7556                           
  7557                           ;MOTEapp.c: 821: oled_putString("   Data Rate    ",0,1);
  7558  006F0E  0EBB               	movlw	low STR_84
  7559  006F10  0100               	movlb	0	; () banked
  7560  006F12  6FD5               	movwf	oled_putString@string& (0+255),b
  7561  006F14  0E7A               	movlw	high STR_84
  7562  006F16  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7563  006F18  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7564  006F1A  0E01               	movlw	1
  7565  006F1C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7566  006F1E  EC6A  F020         	call	_oled_putString	;wreg free
  7567                           
  7568                           ;MOTEapp.c: 822: oled_putString("(NAV)    (SEL) ",0,3);
  7569  006F22  0EFC               	movlw	low STR_75
  7570  006F24  0100               	movlb	0	; () banked
  7571  006F26  6FD5               	movwf	oled_putString@string& (0+255),b
  7572  006F28  0E7B               	movlw	high STR_75
  7573  006F2A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7574  006F2C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7575  006F2E  0E03               	movlw	3
  7576  006F30  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7577  006F32  EC6A  F020         	call	_oled_putString	;wreg free
  7578  006F36  EF9A  F033         	goto	l11187
  7579  006F3A                     l11559:
  7580                           
  7581                           ; BSR set to: 0
  7582                           ;MOTEapp.c: 825: else
  7583                           ;MOTEapp.c: 826: {
  7584                           ;MOTEapp.c: 827: if (dataRatePosition == 8)
  7585  006F3A  0E08               	movlw	8
  7586  006F3C  1993               	xorwf	_dataRatePosition& (0+255),w,b
  7587  006F3E  E11B               	bnz	l11571
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;MOTEapp.c: 828: {
  7591                           ;MOTEapp.c: 829: if (adrStatus)
  7592  006F40  518E               	movf	_adrStatus& (0+255),w,b
  7593  006F42  E00C               	bz	l11567
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;MOTEapp.c: 830: {
  7597                           ;MOTEapp.c: 831: oled_putString(" ", 14,0);
  7598  006F44  0E59               	movlw	low (STR_163+13)
  7599  006F46  6FD5               	movwf	oled_putString@string& (0+255),b
  7600  006F48  0E7C               	movlw	high (STR_163+13)
  7601  006F4A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7602  006F4C  0E0E               	movlw	14
  7603  006F4E  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7604  006F50  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7605  006F52  EC6A  F020         	call	_oled_putString	;wreg free
  7606                           
  7607                           ;MOTEapp.c: 832: adrStatus = 0;
  7608  006F56  0100               	movlb	0	; () banked
  7609  006F58  6B8E               	clrf	_adrStatus& (0+255),b
  7610                           
  7611                           ;MOTEapp.c: 833: }
  7612  006F5A  D016               	goto	l559
  7613  006F5C                     l11567:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;MOTEapp.c: 834: else
  7617                           ;MOTEapp.c: 835: {
  7618                           ;MOTEapp.c: 836: oled_putString("*", 14,0);
  7619  006F5C  0EF5               	movlw	low STR_101
  7620  006F5E  6FD5               	movwf	oled_putString@string& (0+255),b
  7621  006F60  0E7F               	movlw	high STR_101
  7622  006F62  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7623  006F64  0E0E               	movlw	14
  7624  006F66  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7625  006F68  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7626  006F6A  EC6A  F020         	call	_oled_putString	;wreg free
  7627                           
  7628                           ;MOTEapp.c: 837: adrStatus = 1;
  7629  006F6E  0E01               	movlw	1
  7630  006F70  0100               	movlb	0	; () banked
  7631  006F72  6F8E               	movwf	_adrStatus& (0+255),b
  7632  006F74  D009               	goto	l559
  7633  006F76                     l11571:
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;MOTEapp.c: 840: else
  7637                           ;MOTEapp.c: 841: {
  7638                           ;MOTEapp.c: 842: oled_putString("*", 14,0);
  7639  006F76  0EF5               	movlw	low STR_101
  7640  006F78  6FD5               	movwf	oled_putString@string& (0+255),b
  7641  006F7A  0E7F               	movlw	high STR_101
  7642  006F7C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7643  006F7E  0E0E               	movlw	14
  7644  006F80  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7645  006F82  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7646  006F84  EC6A  F020         	call	_oled_putString	;wreg free
  7647  006F88                     l559:
  7648                           
  7649                           ;MOTEapp.c: 843: }
  7650                           ;MOTEapp.c: 844: oled_putString(" ", 14,1);
  7651  006F88  0E59               	movlw	low (STR_163+13)
  7652  006F8A  0100               	movlb	0	; () banked
  7653  006F8C  6FD5               	movwf	oled_putString@string& (0+255),b
  7654  006F8E  0E7C               	movlw	high (STR_163+13)
  7655  006F90  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7656  006F92  0E0E               	movlw	14
  7657  006F94  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7658  006F96  0E01               	movlw	1
  7659  006F98  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7660  006F9A  EC6A  F020         	call	_oled_putString	;wreg free
  7661                           
  7662                           ;MOTEapp.c: 845: oled_putString(" ", 14,2);
  7663  006F9E  0E59               	movlw	low (STR_163+13)
  7664  006FA0  0100               	movlb	0	; () banked
  7665  006FA2  6FD5               	movwf	oled_putString@string& (0+255),b
  7666  006FA4  0E7C               	movlw	high (STR_163+13)
  7667  006FA6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7668  006FA8  0E0E               	movlw	14
  7669  006FAA  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7670  006FAC  0E02               	movlw	2
  7671  006FAE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7672  006FB0  EC6A  F020         	call	_oled_putString	;wreg free
  7673                           
  7674                           ;MOTEapp.c: 846: oled_putString(" ", 14,3);
  7675  006FB4  0E59               	movlw	low (STR_163+13)
  7676  006FB6  0100               	movlb	0	; () banked
  7677  006FB8  6FD5               	movwf	oled_putString@string& (0+255),b
  7678  006FBA  0E7C               	movlw	high (STR_163+13)
  7679  006FBC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7680  006FBE  0E0E               	movlw	14
  7681  006FC0  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7682  006FC2  0E03               	movlw	3
  7683  006FC4  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7684  006FC6  EC6A  F020         	call	_oled_putString	;wreg free
  7685                           
  7686                           ;MOTEapp.c: 847: MOTEapp_SetADR(adrStatus);
  7687  006FCA  0100               	movlb	0	; () banked
  7688  006FCC  518E               	movf	_adrStatus& (0+255),w,b
  7689  006FCE  EC6D  F01A         	call	_MOTEapp_SetADR
  7690                           
  7691                           ;MOTEapp.c: 848: MOTEapp_SetDataRate(dataRatePosition);
  7692  006FD2  0100               	movlb	0	; () banked
  7693  006FD4  5193               	movf	_dataRatePosition& (0+255),w,b
  7694  006FD6  EC71  F01A         	call	_MOTEapp_SetDataRate
  7695                           
  7696                           ;MOTEapp.c: 849: MOTEapp_WriteDataRate();
  7697  006FDA  EC70  F02A         	call	_MOTEapp_WriteDataRate	;wreg free
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;MOTEapp.c: 852: activeState = moteGetDr;
  7701  006FDE  0E07               	movlw	7
  7702  006FE0  6F8D               	movwf	_activeState& (0+255),b
  7703  006FE2  0C07               	retlw	7
  7704  006FE4                     l11581:
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;MOTEapp.c: 857: if (changeStates)
  7708  006FE4  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7709  006FE6  E022               	bz	l11593
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;MOTEapp.c: 858: {
  7713                           ;MOTEapp.c: 859: oled_clear();
  7714  006FE8  ECFE  F01A         	call	_oled_clear	;wreg free
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;MOTEapp.c: 860: oled_putString(" View Downlink  ",0,0);
  7718  006FEC  0EEE               	movlw	low STR_200
  7719  006FEE  6FD5               	movwf	oled_putString@string& (0+255),b
  7720  006FF0  0E7A               	movlw	high STR_200
  7721  006FF2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7722  006FF4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7723  006FF6  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7724  006FF8  EC6A  F020         	call	_oled_putString	;wreg free
  7725                           
  7726                           ;MOTEapp.c: 861: oled_putString("  Last Message  ",0,1);
  7727  006FFC  0EDD               	movlw	low STR_201
  7728  006FFE  0100               	movlb	0	; () banked
  7729  007000  6FD5               	movwf	oled_putString@string& (0+255),b
  7730  007002  0E7A               	movlw	high STR_201
  7731  007004  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7732  007006  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7733  007008  0E01               	movlw	1
  7734  00700A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7735  00700C  EC6A  F020         	call	_oled_putString	;wreg free
  7736                           
  7737                           ;MOTEapp.c: 862: oled_putString("(NAV)    (SEL) ",0,3);
  7738  007010  0EFC               	movlw	low STR_75
  7739  007012  0100               	movlb	0	; () banked
  7740  007014  6FD5               	movwf	oled_putString@string& (0+255),b
  7741  007016  0E7B               	movlw	high STR_75
  7742  007018  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7743  00701A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7744  00701C  0E03               	movlw	3
  7745  00701E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7746  007020  EC6A  F020         	call	_oled_putString	;wreg free
  7747  007024                     l11591:
  7748                           
  7749                           ;MOTEapp.c: 863: runningState = runningDownlink;
  7750  007024  0E0A               	movlw	10
  7751  007026  0100               	movlb	0	; () banked
  7752  007028  6F98               	movwf	_runningState& (0+255),b
  7753                           
  7754                           ;MOTEapp.c: 864: }
  7755  00702A  0C0A               	retlw	10
  7756  00702C                     l11593:
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;MOTEapp.c: 865: else if (selectButton)
  7760  00702C  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7761  00702E  B4D8               	btfsc	status,2,c
  7762  007030  0012               	return	
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;MOTEapp.c: 866: {
  7766                           ;MOTEapp.c: 867: sleepTicker = 0;
  7767  007032  6B9A               	clrf	_sleepTicker& (0+255),b
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;MOTEapp.c: 869: oled_clear();
  7771  007034  ECFE  F01A         	call	_oled_clear	;wreg free
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;MOTEapp.c: 870: oled_putString("Uplink Pckt Type",0,0);
  7775  007038  0E98               	movlw	low STR_203
  7776  00703A  6FD5               	movwf	oled_putString@string& (0+255),b
  7777  00703C  0E7B               	movlw	high STR_203
  7778  00703E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7779  007040  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7780  007042  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7781  007044  EC6A  F020         	call	_oled_putString	;wreg free
  7782                           
  7783                           ;MOTEapp.c: 871: oled_putString("Throu Port# ",0,1);
  7784  007048  0E74               	movlw	low STR_204
  7785  00704A  0100               	movlb	0	; () banked
  7786  00704C  6FD5               	movwf	oled_putString@string& (0+255),b
  7787  00704E  0E7D               	movlw	high STR_204
  7788  007050  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7789  007052  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7790  007054  0E01               	movlw	1
  7791  007056  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7792  007058  EC6A  F020         	call	_oled_putString	;wreg free
  7793                           
  7794                           ;MOTEapp.c: 873: oled_putString("(UNCNF)    (CNF) ",0,3);
  7795  00705C  0E86               	movlw	low STR_205
  7796  00705E  0100               	movlb	0	; () banked
  7797  007060  6FD5               	movwf	oled_putString@string& (0+255),b
  7798  007062  0E7A               	movlw	high STR_205
  7799  007064  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7800  007066  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7801  007068  0E03               	movlw	3
  7802  00706A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7803  00706C  EC6A  F020         	call	_oled_putString	;wreg free
  7804                           
  7805                           ;MOTEapp.c: 875: moteApp_clearBuffers();
  7806  007070  ECD1  F01D         	call	_moteApp_clearBuffers	;wreg free
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;MOTEapp.c: 876: randomPortNum = TMR2_ReadTimer();
  7810  007074  EC75  F01A         	call	_TMR2_ReadTimer	;wreg free
  7811  007078  6F97               	movwf	_randomPortNum& (0+255),b
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;MOTEapp.c: 878: if (!randomPortNum)
  7815  00707A  5197               	movf	_randomPortNum& (0+255),w,b
  7816  00707C  E103               	bnz	l11613
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;MOTEapp.c: 879: randomPortNum = 5;
  7820  00707E  0E05               	movlw	5
  7821  007080  6F97               	movwf	_randomPortNum& (0+255),b
  7822  007082  D005               	goto	l11617
  7823  007084                     l11613:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;MOTEapp.c: 880: else if (randomPortNum > 223)
  7827  007084  0EDF               	movlw	223
  7828  007086  6597               	cpfsgt	_randomPortNum& (0+255),b
  7829  007088  D002               	goto	l11617
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;MOTEapp.c: 881: randomPortNum = randomPortNum - 50;
  7833  00708A  0ECE               	movlw	206
  7834  00708C  2797               	addwf	_randomPortNum& (0+255),f,b
  7835  00708E                     l11617:
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;MOTEapp.c: 882: oled_putUint8(randomPortNum,12,1);
  7839  00708E  0E0C               	movlw	12
  7840  007090  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  7841  007092  0E01               	movlw	1
  7842  007094  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  7843  007096  5197               	movf	_randomPortNum& (0+255),w,b
  7844  007098  EC7D  F01F         	call	_oled_putUint8
  7845                           
  7846                           ;MOTEapp.c: 884: moteApp_add8bToDataBuffer(randomPortNum, 0);
  7847  00709C  0100               	movlb	0	; () banked
  7848  00709E  6BCC               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7849  0070A0  5197               	movf	_randomPortNum& (0+255),w,b
  7850  0070A2  EC08  F020         	call	_moteApp_add8bToDataBuffer
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;MOTEapp.c: 885: dataBuffer[3] = 0x20;
  7854  0070A6  0E20               	movlw	32
  7855  0070A8  6FA1               	movwf	(_dataBuffer+3)& (0+255),b
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;MOTEapp.c: 886: moteApp_add16bToDataBuffer(light, 4);
  7859  0070AA  C07A  F0CF         	movff	_light,moteApp_add16bToDataBuffer@number
  7860  0070AE  C07B  F0D0         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  7861  0070B2  0E04               	movlw	4
  7862  0070B4  6FD1               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  7863  0070B6  ECE1  F02C         	call	_moteApp_add16bToDataBuffer	;wreg free
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;MOTEapp.c: 887: moteApp_add8bToDataBuffer(temperature, 9);
  7867  0070BA  0E09               	movlw	9
  7868  0070BC  6FCC               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7869  0070BE  517E               	movf	_temperature& (0+255),w,b
  7870  0070C0  EC08  F020         	call	_moteApp_add8bToDataBuffer
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;MOTEapp.c: 888: __nop();
  7874  0070C4  F000               	nop	
  7875                           
  7876                           ;MOTEapp.c: 890: runningState = runningUplinkSelect;
  7877  0070C6  0E07               	movlw	7
  7878  0070C8  0100               	movlb	0	; () banked
  7879  0070CA  6F98               	movwf	_runningState& (0+255),b
  7880  0070CC  0C07               	retlw	7
  7881  0070CE                     l11631:
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;MOTEapp.c: 894: if (changeStates)
  7885  0070CE  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7886  0070D0  E00A               	bz	l11635
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;MOTEapp.c: 895: {
  7890                           ;MOTEapp.c: 896: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7891  0070D2  0E3C               	movlw	low STR_79
  7892  0070D4  6FC9               	movwf	sendDataCommand@string& (0+255),b
  7893  0070D6  0E7D               	movlw	high STR_79
  7894  0070D8  6FCA               	movwf	(sendDataCommand@string+1)& (0+255),b
  7895  0070DA  0E9E               	movlw	low _dataBuffer
  7896  0070DC  6FCB               	movwf	sendDataCommand@appData& (0+255),b
  7897  0070DE  0E0C               	movlw	12
  7898  0070E0  6FCC               	movwf	sendDataCommand@dataLength& (0+255),b
  7899  0070E2  ECCB  F023         	call	_sendDataCommand	;wreg free
  7900  0070E6                     l11635:
  7901                           
  7902                           ;MOTEapp.c: 898: }
  7903                           ;MOTEapp.c: 899: if (selectButton)
  7904  0070E6  0100               	movlb	0	; () banked
  7905  0070E8  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7906  0070EA  E00A               	bz	l11639
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;MOTEapp.c: 900: {
  7910                           ;MOTEapp.c: 901: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7911  0070EC  0E67               	movlw	low STR_77
  7912  0070EE  6FC9               	movwf	sendDataCommand@string& (0+255),b
  7913  0070F0  0E7E               	movlw	high STR_77
  7914  0070F2  6FCA               	movwf	(sendDataCommand@string+1)& (0+255),b
  7915  0070F4  0E9E               	movlw	low _dataBuffer
  7916  0070F6  6FCB               	movwf	sendDataCommand@appData& (0+255),b
  7917  0070F8  0E0C               	movlw	12
  7918  0070FA  6FCC               	movwf	sendDataCommand@dataLength& (0+255),b
  7919  0070FC  ECCB  F023         	call	_sendDataCommand	;wreg free
  7920  007100                     l11639:
  7921                           
  7922                           ;MOTEapp.c: 902: }
  7923                           ;MOTEapp.c: 904: if ( (changeStates) || (selectButton) )
  7924  007100  0100               	movlb	0	; () banked
  7925  007102  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7926  007104  E103               	bnz	l11643
  7927                           
  7928                           ; BSR set to: 0
  7929  007106  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7930  007108  B4D8               	btfsc	status,2,c
  7931  00710A  0012               	return	
  7932  00710C                     l11643:
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;MOTEapp.c: 905: {
  7936                           ;MOTEapp.c: 906: oled_clear();
  7937  00710C  ECFE  F01A         	call	_oled_clear	;wreg free
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;MOTEapp.c: 907: oled_putString("Sent Data: ",0,0);
  7941  007110  0E5B               	movlw	low STR_208
  7942  007112  6FD5               	movwf	oled_putString@string& (0+255),b
  7943  007114  0E7E               	movlw	high STR_208
  7944  007116  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7945  007118  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7946  00711A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7947  00711C  EC6A  F020         	call	_oled_putString	;wreg free
  7948                           
  7949                           ;MOTEapp.c: 908: oled_putString("L:       T: ",0,1);
  7950  007120  0E81               	movlw	low STR_74
  7951  007122  0100               	movlb	0	; () banked
  7952  007124  6FD5               	movwf	oled_putString@string& (0+255),b
  7953  007126  0E7D               	movlw	high STR_74
  7954  007128  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7955  00712A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7956  00712C  0E01               	movlw	1
  7957  00712E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7958  007130  EC6A  F020         	call	_oled_putString	;wreg free
  7959                           
  7960                           ;MOTEapp.c: 909: oled_putUint16(light,3,2);
  7961  007134  C07A  F0DA         	movff	_light,oled_putUint16@number
  7962  007138  C07B  F0DB         	movff	_light+1,oled_putUint16@number+1
  7963  00713C  0E03               	movlw	3
  7964  00713E  0100               	movlb	0	; () banked
  7965  007140  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  7966  007142  0E02               	movlw	2
  7967  007144  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  7968  007146  ECE7  F02A         	call	_oled_putUint16	;wreg free
  7969                           
  7970                           ;MOTEapp.c: 910: oled_putUint8(temperature,12,2);
  7971  00714A  0E0C               	movlw	12
  7972  00714C  0100               	movlb	0	; () banked
  7973  00714E  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  7974  007150  0E02               	movlw	2
  7975  007152  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  7976  007154  517E               	movf	_temperature& (0+255),w,b
  7977  007156  EC7D  F01F         	call	_oled_putUint8
  7978                           
  7979                           ;MOTEapp.c: 911: oled_putString("Tx Port #: ",0,1);
  7980  00715A  0E4F               	movlw	low STR_210
  7981  00715C  0100               	movlb	0	; () banked
  7982  00715E  6FD5               	movwf	oled_putString@string& (0+255),b
  7983  007160  0E7E               	movlw	high STR_210
  7984  007162  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7985  007164  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7986  007166  0E01               	movlw	1
  7987  007168  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7988  00716A  EC6A  F020         	call	_oled_putString	;wreg free
  7989                           
  7990                           ;MOTEapp.c: 912: oled_putUint8(randomPortNum,12,1);
  7991  00716E  0E0C               	movlw	12
  7992  007170  0100               	movlb	0	; () banked
  7993  007172  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  7994  007174  0E01               	movlw	1
  7995  007176  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  7996  007178  5197               	movf	_randomPortNum& (0+255),w,b
  7997  00717A  EC7D  F01F         	call	_oled_putUint8
  7998                           
  7999                           ;MOTEapp.c: 913: LATAbits.LATA6 = 0;
  8000  00717E  9C89               	bcf	3977,6,c	;volatile
  8001                           
  8002                           ;MOTEapp.c: 914: runningState = runningUplinkTransmit;
  8003  007180  0E08               	movlw	8
  8004  007182  0100               	movlb	0	; () banked
  8005  007184  6F98               	movwf	_runningState& (0+255),b
  8006  007186  0C08               	retlw	8
  8007  007188                     l11661:
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;MOTEapp.c: 918: if ( messageReady )
  8011  007188  51E5               	movf	moteRunningProcess@messageReady& (0+255),w,b
  8012  00718A  E101 D0FF          	bz	l11747
  8013                           
  8014                           ; BSR set to: 0
  8015                           ;MOTEapp.c: 919: {
  8016                           ;MOTEapp.c: 920: if(strcmp(modemResonseBuffer, "ok") == 0)
  8017  00718E  0E80               	movlw	low _modemResonseBuffer
  8018  007190  6FC8               	movwf	strcmp@s1& (0+255),b
  8019  007192  0E01               	movlw	high _modemResonseBuffer
  8020  007194  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
  8021  007196  0EF2               	movlw	low STR_32
  8022  007198  6FCA               	movwf	strcmp@s2& (0+255),b
  8023  00719A  0E7F               	movlw	high STR_32
  8024  00719C  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
  8025  00719E  EC72  F022         	call	_strcmp	;wreg free
  8026  0071A2  51C8               	movf	?_strcmp& (0+255),w,b
  8027  0071A4  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
  8028  0071A6  E103               	bnz	l11669
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;MOTEapp.c: 921: {
  8032                           ;MOTEapp.c: 922: LATAbits.LATA6 = 1;
  8033  0071A8  8C89               	bsf	3977,6,c	;volatile
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;MOTEapp.c: 923: runningState = runningUplinkTransmit;
  8037  0071AA  0E08               	movlw	8
  8038  0071AC  6F98               	movwf	_runningState& (0+255),b
  8039  0071AE                     l11669:
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;MOTEapp.c: 924: }
  8043                           ;MOTEapp.c: 925: if(strncmp(modemResonseBuffer, "mac_rx", 6) == 0)
  8044  0071AE  0E80               	movlw	low _modemResonseBuffer
  8045  0071B0  6FC8               	movwf	strncmp@s1& (0+255),b
  8046  0071B2  0E01               	movlw	high _modemResonseBuffer
  8047  0071B4  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
  8048  0071B6  0EE1               	movlw	low STR_212
  8049  0071B8  6FCA               	movwf	strncmp@s2& (0+255),b
  8050  0071BA  0E7F               	movlw	high STR_212
  8051  0071BC  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
  8052  0071BE  6BCD               	clrf	(strncmp@len+1)& (0+255),b
  8053  0071C0  0E06               	movlw	6
  8054  0071C2  6FCC               	movwf	strncmp@len& (0+255),b
  8055  0071C4  EC9D  F020         	call	_strncmp	;wreg free
  8056  0071C8  51C8               	movf	?_strncmp& (0+255),w,b
  8057  0071CA  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
  8058  0071CC  E001 D08A          	bnz	l11731
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;MOTEapp.c: 926: {
  8062                           ;MOTEapp.c: 927: uint8_t bufferReadPos = 7;
  8063  0071D0  0E07               	movlw	7
  8064  0071D2  6FF1               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;MOTEapp.c: 928: uint8_t dummyRead1;
  8068                           ;MOTEapp.c: 929: uint8_t dummyRead2;
  8069                           ;MOTEapp.c: 932: responsePortNum[0] = modemResonseBuffer[bufferReadPos++];
  8070  0071D4  0E80               	movlw	low _modemResonseBuffer
  8071  0071D6  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8072  0071D8  6ED9               	movwf	fsr2l,c
  8073  0071DA  6ADA               	clrf	fsr2h,c
  8074  0071DC  0E01               	movlw	high _modemResonseBuffer
  8075  0071DE  22DA               	addwfc	fsr2h,f,c
  8076  0071E0  50DF               	movf	indf2,w,c
  8077  0071E2  6FC3               	movwf	_responsePortNum& (0+255),b
  8078                           
  8079                           ; BSR set to: 0
  8080  0071E4  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;MOTEapp.c: 933: responsePortNum[1] = modemResonseBuffer[bufferReadPos++];
  8084  0071E6  0E80               	movlw	low _modemResonseBuffer
  8085  0071E8  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8086  0071EA  6ED9               	movwf	fsr2l,c
  8087  0071EC  6ADA               	clrf	fsr2h,c
  8088  0071EE  0E01               	movlw	high _modemResonseBuffer
  8089  0071F0  22DA               	addwfc	fsr2h,f,c
  8090  0071F2  50DF               	movf	indf2,w,c
  8091  0071F4  6FC4               	movwf	(_responsePortNum+1)& (0+255),b
  8092                           
  8093                           ; BSR set to: 0
  8094  0071F6  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;MOTEapp.c: 934: if (responsePortNum[1] != ' ')
  8098  0071F8  0E20               	movlw	32
  8099  0071FA  19C4               	xorwf	(_responsePortNum+1)& (0+255),w,b
  8100  0071FC  E00D               	bz	l11691
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;MOTEapp.c: 935: {
  8104                           ;MOTEapp.c: 936: responsePortNum[2] = modemResonseBuffer[bufferReadPos++];
  8105  0071FE  0E80               	movlw	low _modemResonseBuffer
  8106  007200  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8107  007202  6ED9               	movwf	fsr2l,c
  8108  007204  6ADA               	clrf	fsr2h,c
  8109  007206  0E01               	movlw	high _modemResonseBuffer
  8110  007208  22DA               	addwfc	fsr2h,f,c
  8111  00720A  50DF               	movf	indf2,w,c
  8112  00720C  6FC5               	movwf	(_responsePortNum+2)& (0+255),b
  8113                           
  8114                           ; BSR set to: 0
  8115  00720E  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8116                           
  8117                           ; BSR set to: 0
  8118                           ;MOTEapp.c: 937: if (responsePortNum[2] != ' ')
  8119  007210  0E20               	movlw	32
  8120  007212  19C5               	xorwf	(_responsePortNum+2)& (0+255),w,b
  8121  007214  E001               	bz	l11691
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;MOTEapp.c: 938: {
  8125                           ;MOTEapp.c: 939: bufferReadPos++;
  8126  007216  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8127  007218                     l11691:
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;MOTEapp.c: 940: }
  8131                           ;MOTEapp.c: 941: }
  8132                           ;MOTEapp.c: 943: for (uint8_t counter = 0; counter < 16; counter++)
  8133  007218  6BEF               	clrf	moteRunningProcess@counter& (0+255),b
  8134  00721A                     l11693:
  8135                           
  8136                           ; BSR set to: 0
  8137  00721A  0E0F               	movlw	15
  8138  00721C  65EF               	cpfsgt	moteRunningProcess@counter& (0+255),b
  8139  00721E  D001               	goto	l11697
  8140  007220  D023               	goto	l11709
  8141  007222                     l11697:
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;MOTEapp.c: 944: {
  8145                           ;MOTEapp.c: 945: dummyRead1 = unhex(modemResonseBuffer[bufferReadPos++]);
  8146  007222  0E80               	movlw	low _modemResonseBuffer
  8147  007224  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8148  007226  6ED9               	movwf	fsr2l,c
  8149  007228  6ADA               	clrf	fsr2h,c
  8150  00722A  0E01               	movlw	high _modemResonseBuffer
  8151  00722C  22DA               	addwfc	fsr2h,f,c
  8152  00722E  50DF               	movf	indf2,w,c
  8153  007230  ECF9  F01B         	call	_unhex
  8154  007234  6FED               	movwf	moteRunningProcess@dummyRead1& (0+255),b
  8155                           
  8156                           ; BSR set to: 0
  8157  007236  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;MOTEapp.c: 946: dummyRead2 = unhex(modemResonseBuffer[bufferReadPos++]);
  8161  007238  0E80               	movlw	low _modemResonseBuffer
  8162  00723A  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8163  00723C  6ED9               	movwf	fsr2l,c
  8164  00723E  6ADA               	clrf	fsr2h,c
  8165  007240  0E01               	movlw	high _modemResonseBuffer
  8166  007242  22DA               	addwfc	fsr2h,f,c
  8167  007244  50DF               	movf	indf2,w,c
  8168  007246  ECF9  F01B         	call	_unhex
  8169  00724A  6FEE               	movwf	moteRunningProcess@dummyRead2& (0+255),b
  8170  00724C  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;MOTEapp.c: 947: responseId[counter] = (dummyRead1 << 4) + dummyRead2;
  8174  00724E  0EC0               	movlw	low _responseId
  8175  007250  25EF               	addwf	moteRunningProcess@counter& (0+255),w,b
  8176  007252  6ED9               	movwf	fsr2l,c
  8177  007254  6ADA               	clrf	fsr2h,c
  8178  007256  0E01               	movlw	high _responseId
  8179  007258  22DA               	addwfc	fsr2h,f,c
  8180  00725A  51ED               	movf	moteRunningProcess@dummyRead1& (0+255),w,b
  8181  00725C  0D10               	mullw	16
  8182  00725E  50F3               	movf	prodl,w,c
  8183  007260  25EE               	addwf	moteRunningProcess@dummyRead2& (0+255),w,b
  8184  007262  6EDF               	movwf	indf2,c
  8185                           
  8186                           ; BSR set to: 0
  8187  007264  2BEF               	incf	moteRunningProcess@counter& (0+255),f,b
  8188  007266  D7D9               	goto	l11693
  8189  007268                     l11709:
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;MOTEapp.c: 948: }
  8193                           ;MOTEapp.c: 950: bufferReadPos++;
  8194  007268  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8195                           
  8196                           ;MOTEapp.c: 951: bufferReadPos++;
  8197  00726A  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;MOTEapp.c: 954: for (uint8_t counter = 0; counter < 8; counter++)
  8201  00726C  6BF0               	clrf	moteRunningProcess@counter_1556& (0+255),b
  8202  00726E                     l11713:
  8203                           
  8204                           ; BSR set to: 0
  8205  00726E  0E07               	movlw	7
  8206  007270  65F0               	cpfsgt	moteRunningProcess@counter_1556& (0+255),b
  8207  007272  D001               	goto	l11717
  8208  007274  D021               	goto	l582
  8209  007276                     l11717:
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;MOTEapp.c: 955: {
  8213                           ;MOTEapp.c: 956: dummyRead1 = unhex(modemResonseBuffer[bufferReadPos++]);
  8214  007276  0E80               	movlw	low _modemResonseBuffer
  8215  007278  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8216  00727A  6ED9               	movwf	fsr2l,c
  8217  00727C  6ADA               	clrf	fsr2h,c
  8218  00727E  0E01               	movlw	high _modemResonseBuffer
  8219  007280  22DA               	addwfc	fsr2h,f,c
  8220  007282  50DF               	movf	indf2,w,c
  8221  007284  ECF9  F01B         	call	_unhex
  8222  007288  6FED               	movwf	moteRunningProcess@dummyRead1& (0+255),b
  8223                           
  8224                           ; BSR set to: 0
  8225  00728A  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;MOTEapp.c: 957: dummyRead2 = unhex(modemResonseBuffer[bufferReadPos++]);
  8229  00728C  0E80               	movlw	low _modemResonseBuffer
  8230  00728E  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8231  007290  6ED9               	movwf	fsr2l,c
  8232  007292  6ADA               	clrf	fsr2h,c
  8233  007294  0E01               	movlw	high _modemResonseBuffer
  8234  007296  22DA               	addwfc	fsr2h,f,c
  8235  007298  50DF               	movf	indf2,w,c
  8236  00729A  ECF9  F01B         	call	_unhex
  8237  00729E  6FEE               	movwf	moteRunningProcess@dummyRead2& (0+255),b
  8238  0072A0  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8239                           
  8240                           ; BSR set to: 0
  8241                           ;MOTEapp.c: 958: responseData[counter] = (dummyRead1 << 4) + dummyRead2;
  8242  0072A2  51F0               	movf	moteRunningProcess@counter_1556& (0+255),w,b
  8243  0072A4  0FB4               	addlw	low _responseData
  8244  0072A6  6ED9               	movwf	fsr2l,c
  8245  0072A8  6ADA               	clrf	fsr2h,c
  8246  0072AA  51ED               	movf	moteRunningProcess@dummyRead1& (0+255),w,b
  8247  0072AC  0D10               	mullw	16
  8248  0072AE  50F3               	movf	prodl,w,c
  8249  0072B0  25EE               	addwf	moteRunningProcess@dummyRead2& (0+255),w,b
  8250  0072B2  6EDF               	movwf	indf2,c
  8251                           
  8252                           ; BSR set to: 0
  8253  0072B4  2BF0               	incf	moteRunningProcess@counter_1556& (0+255),f,b
  8254  0072B6  D7DB               	goto	l11713
  8255  0072B8                     l582:
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;MOTEapp.c: 959: }
  8259                           ;MOTEapp.c: 961: LATAbits.LATA7 = 1;
  8260  0072B8  8E89               	bsf	3977,7,c	;volatile
  8261                           
  8262                           ;MOTEapp.c: 962: LATAbits.LATA6 = 0;
  8263  0072BA  9C89               	bcf	3977,6,c	;volatile
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;MOTEapp.c: 964: oled_putString("Server Response ",0,2);
  8267  0072BC  0E21               	movlw	low STR_213
  8268  0072BE  6FD5               	movwf	oled_putString@string& (0+255),b
  8269  0072C0  0E7B               	movlw	high STR_213
  8270  0072C2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8271  0072C4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8272  0072C6  0E02               	movlw	2
  8273  0072C8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8274  0072CA  EC6A  F020         	call	_oled_putString	;wreg free
  8275                           
  8276                           ;MOTEapp.c: 965: oled_putString("    Received    ",0,3);
  8277  0072CE  0EAA               	movlw	low STR_214
  8278  0072D0  0100               	movlb	0	; () banked
  8279  0072D2  6FD5               	movwf	oled_putString@string& (0+255),b
  8280  0072D4  0E7A               	movlw	high STR_214
  8281  0072D6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8282  0072D8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8283  0072DA  0E03               	movlw	3
  8284  0072DC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8285  0072DE  EC6A  F020         	call	_oled_putString	;wreg free
  8286                           
  8287                           ;MOTEapp.c: 966: }
  8288  0072E2  D04E               	goto	l11745
  8289  0072E4                     l11731:
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;MOTEapp.c: 967: else if(strncmp(modemResonseBuffer, "mac_tx", 6) == 0)
  8293  0072E4  0E80               	movlw	low _modemResonseBuffer
  8294  0072E6  6FC8               	movwf	strncmp@s1& (0+255),b
  8295  0072E8  0E01               	movlw	high _modemResonseBuffer
  8296  0072EA  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
  8297  0072EC  0EE8               	movlw	low STR_215
  8298  0072EE  6FCA               	movwf	strncmp@s2& (0+255),b
  8299  0072F0  0E7F               	movlw	high STR_215
  8300  0072F2  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
  8301  0072F4  6BCD               	clrf	(strncmp@len+1)& (0+255),b
  8302  0072F6  0E06               	movlw	6
  8303  0072F8  6FCC               	movwf	strncmp@len& (0+255),b
  8304  0072FA  EC9D  F020         	call	_strncmp	;wreg free
  8305  0072FE  51C8               	movf	?_strncmp& (0+255),w,b
  8306  007300  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
  8307  007302  E10B               	bnz	l11737
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;MOTEapp.c: 968: {
  8311                           ;MOTEapp.c: 969: LATAbits.LATA6 = 0;
  8312  007304  9C89               	bcf	3977,6,c	;volatile
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;MOTEapp.c: 970: oled_putString("Data Transmitted",0,3);
  8316  007306  0E76               	movlw	low STR_216
  8317  007308  6FD5               	movwf	oled_putString@string& (0+255),b
  8318  00730A  0E7B               	movlw	high STR_216
  8319  00730C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8320  00730E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8321  007310  0E03               	movlw	3
  8322  007312  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8323  007314  EC6A  F020         	call	_oled_putString	;wreg free
  8324                           
  8325                           ;MOTEapp.c: 971: }
  8326  007318  D033               	goto	l11745
  8327  00731A                     l11737:
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;MOTEapp.c: 972: else if(strncmp(modemResonseBuffer, "mac_er", 6) == 0)
  8331  00731A  0E80               	movlw	low _modemResonseBuffer
  8332  00731C  6FC8               	movwf	strncmp@s1& (0+255),b
  8333  00731E  0E01               	movlw	high _modemResonseBuffer
  8334  007320  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
  8335  007322  0EDA               	movlw	low STR_217
  8336  007324  6FCA               	movwf	strncmp@s2& (0+255),b
  8337  007326  0E7F               	movlw	high STR_217
  8338  007328  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
  8339  00732A  6BCD               	clrf	(strncmp@len+1)& (0+255),b
  8340  00732C  0E06               	movlw	6
  8341  00732E  6FCC               	movwf	strncmp@len& (0+255),b
  8342  007330  EC9D  F020         	call	_strncmp	;wreg free
  8343  007334  51C8               	movf	?_strncmp& (0+255),w,b
  8344  007336  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
  8345  007338  E10A               	bnz	l11741
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;MOTEapp.c: 973: {
  8349                           ;MOTEapp.c: 974: oled_putString("Mac Error Occured",0,3);
  8350  00733A  0E98               	movlw	low STR_218
  8351  00733C  6FD5               	movwf	oled_putString@string& (0+255),b
  8352  00733E  0E7A               	movlw	high STR_218
  8353  007340  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8354  007342  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8355  007344  0E03               	movlw	3
  8356  007346  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8357  007348  EC6A  F020         	call	_oled_putString	;wreg free
  8358                           
  8359                           ;MOTEapp.c: 975: }
  8360  00734C  D019               	goto	l11745
  8361  00734E                     l11741:
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;MOTEapp.c: 976: else if(strncmp(modemResonseBuffer, "no_fre", 6) == 0)
  8365  00734E  0E80               	movlw	low _modemResonseBuffer
  8366  007350  6FC8               	movwf	strncmp@s1& (0+255),b
  8367  007352  0E01               	movlw	high _modemResonseBuffer
  8368  007354  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
  8369  007356  0ED3               	movlw	low STR_219
  8370  007358  6FCA               	movwf	strncmp@s2& (0+255),b
  8371  00735A  0E7F               	movlw	high STR_219
  8372  00735C  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
  8373  00735E  6BCD               	clrf	(strncmp@len+1)& (0+255),b
  8374  007360  0E06               	movlw	6
  8375  007362  6FCC               	movwf	strncmp@len& (0+255),b
  8376  007364  EC9D  F020         	call	_strncmp	;wreg free
  8377  007368  51C8               	movf	?_strncmp& (0+255),w,b
  8378  00736A  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
  8379  00736C  E109               	bnz	l11745
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;MOTEapp.c: 977: {
  8383                           ;MOTEapp.c: 978: oled_putString("No Free Channel",0,3);
  8384  00736E  0E2C               	movlw	low STR_220
  8385  007370  6FD5               	movwf	oled_putString@string& (0+255),b
  8386  007372  0E7C               	movlw	high STR_220
  8387  007374  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8388  007376  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8389  007378  0E03               	movlw	3
  8390  00737A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8391  00737C  EC6A  F020         	call	_oled_putString	;wreg free
  8392  007380                     l11745:
  8393                           
  8394                           ;MOTEapp.c: 979: }
  8395                           ;MOTEapp.c: 980: moteApp_delayms(20);
  8396  007380  0100               	movlb	0	; () banked
  8397  007382  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8398  007384  0E14               	movlw	20
  8399  007386  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  8400  007388  ECD1  F01B         	call	_moteApp_delayms	;wreg free
  8401  00738C                     l11747:
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;MOTEapp.c: 981: }
  8405                           ;MOTEapp.c: 982: if ( (changeStates) || (selectButton) )
  8406  00738C  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8407  00738E  E103               	bnz	l11751
  8408                           
  8409                           ; BSR set to: 0
  8410  007390  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8411  007392  B4D8               	btfsc	status,2,c
  8412  007394  0012               	return	
  8413  007396                     l11751:
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;MOTEapp.c: 983: {
  8417                           ;MOTEapp.c: 984: oled_clear();
  8418  007396  ECFE  F01A         	call	_oled_clear	;wreg free
  8419                           
  8420                           ; BSR set to: 0
  8421                           ;MOTEapp.c: 985: oled_putString("  Issue Uplink  ",0,0);
  8422  00739A  0EFF               	movlw	low STR_93
  8423  00739C  6FD5               	movwf	oled_putString@string& (0+255),b
  8424  00739E  0E7A               	movlw	high STR_93
  8425  0073A0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8426  0073A2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8427  0073A4  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8428  0073A6  EC6A  F020         	call	_oled_putString	;wreg free
  8429                           
  8430                           ;MOTEapp.c: 986: oled_putString(" LoRaWAN Packet ",0,1);
  8431  0073AA  0E32               	movlw	low STR_94
  8432  0073AC  0100               	movlb	0	; () banked
  8433  0073AE  6FD5               	movwf	oled_putString@string& (0+255),b
  8434  0073B0  0E7B               	movlw	high STR_94
  8435  0073B2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8436  0073B4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8437  0073B6  0E01               	movlw	1
  8438  0073B8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8439  0073BA  EC6A  F020         	call	_oled_putString	;wreg free
  8440                           
  8441                           ;MOTEapp.c: 987: oled_putString("(NAV)    (SEL) ",0,3);
  8442  0073BE  0EFC               	movlw	low STR_75
  8443  0073C0  0100               	movlb	0	; () banked
  8444  0073C2  6FD5               	movwf	oled_putString@string& (0+255),b
  8445  0073C4  0E7B               	movlw	high STR_75
  8446  0073C6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8447  0073C8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8448  0073CA  0E03               	movlw	3
  8449  0073CC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8450  0073CE  EC6A  F020         	call	_oled_putString	;wreg free
  8451  0073D2  EF41  F034         	goto	l11233
  8452  0073D6                     l11761:
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;MOTEapp.c: 992: if (changeStates)
  8456  0073D6  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8457  0073D8  E02E               	bz	l11775
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;MOTEapp.c: 993: {
  8461                           ;MOTEapp.c: 994: oled_clear();
  8462  0073DA  ECFE  F01A         	call	_oled_clear	;wreg free
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;MOTEapp.c: 995: oled_putString(" Tx Sleep Event ",0,0);
  8466  0073DE  0E43               	movlw	low STR_224
  8467  0073E0  6FD5               	movwf	oled_putString@string& (0+255),b
  8468  0073E2  0E7B               	movlw	high STR_224
  8469  0073E4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8470  0073E6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8471  0073E8  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8472  0073EA  EC6A  F020         	call	_oled_putString	;wreg free
  8473                           
  8474                           ;MOTEapp.c: 996: if (periodicState)
  8475  0073EE  0100               	movlb	0	; () banked
  8476  0073F0  51F9               	movf	_periodicState& (0+255),w,b
  8477  0073F2  E00A               	bz	l11771
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;MOTEapp.c: 997: oled_putString("    Enabled   ", 0,2);
  8481  0073F4  0E5B               	movlw	low STR_225
  8482  0073F6  6FD5               	movwf	oled_putString@string& (0+255),b
  8483  0073F8  0E7C               	movlw	high STR_225
  8484  0073FA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8485  0073FC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8486  0073FE  0E02               	movlw	2
  8487  007400  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8488  007402  EC6A  F020         	call	_oled_putString	;wreg free
  8489  007406  D009               	goto	l595
  8490  007408                     l11771:
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;MOTEapp.c: 998: else
  8494                           ;MOTEapp.c: 999: oled_putString("    Disabled  ", 0,2);
  8495  007408  0E6A               	movlw	low STR_226
  8496  00740A  6FD5               	movwf	oled_putString@string& (0+255),b
  8497  00740C  0E7C               	movlw	high STR_226
  8498  00740E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8499  007410  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8500  007412  0E02               	movlw	2
  8501  007414  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8502  007416  EC6A  F020         	call	_oled_putString	;wreg free
  8503  00741A                     l595:
  8504                           
  8505                           ;MOTEapp.c: 1000: oled_putString("(NAV)    (SEL) ",0,3);
  8506  00741A  0EFC               	movlw	low STR_75
  8507  00741C  0100               	movlb	0	; () banked
  8508  00741E  6FD5               	movwf	oled_putString@string& (0+255),b
  8509  007420  0E7B               	movlw	high STR_75
  8510  007422  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8511  007424  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8512  007426  0E03               	movlw	3
  8513  007428  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8514  00742A  EC6A  F020         	call	_oled_putString	;wreg free
  8515                           
  8516                           ;MOTEapp.c: 1001: runningState = runningPeriodic;
  8517  00742E  0E0C               	movlw	12
  8518  007430  0100               	movlb	0	; () banked
  8519  007432  6F98               	movwf	_runningState& (0+255),b
  8520                           
  8521                           ;MOTEapp.c: 1002: }
  8522  007434  0C0C               	retlw	12
  8523  007436                     l11775:
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;MOTEapp.c: 1003: else if (selectButton)
  8527  007436  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8528  007438  B4D8               	btfsc	status,2,c
  8529  00743A  0012               	return	
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;MOTEapp.c: 1004: {
  8533                           ;MOTEapp.c: 1005: oled_clear();
  8534  00743C  ECFE  F01A         	call	_oled_clear	;wreg free
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;MOTEapp.c: 1007: LATAbits.LATA7 = 0;
  8538  007440  9E89               	bcf	3977,7,c	;volatile
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;MOTEapp.c: 1009: oled_putString("Downlink Display",0,0);
  8542  007442  0ECB               	movlw	low STR_228
  8543  007444  6FD5               	movwf	oled_putString@string& (0+255),b
  8544  007446  0E7B               	movlw	high STR_228
  8545  007448  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8546  00744A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8547  00744C  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8548  00744E  EC6A  F020         	call	_oled_putString	;wreg free
  8549                           
  8550                           ;MOTEapp.c: 1011: oled_putString("Rx Port# ",0,1);
  8551  007452  0EF1               	movlw	low STR_229
  8552  007454  0100               	movlb	0	; () banked
  8553  007456  6FD5               	movwf	oled_putString@string& (0+255),b
  8554  007458  0E7E               	movlw	high STR_229
  8555  00745A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8556  00745C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8557  00745E  0E01               	movlw	1
  8558  007460  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8559  007462  EC6A  F020         	call	_oled_putString	;wreg free
  8560                           
  8561                           ;MOTEapp.c: 1012: oled_putString(&responsePortNum,9,1);
  8562  007466  0EC3               	movlw	low _responsePortNum
  8563  007468  0100               	movlb	0	; () banked
  8564  00746A  6FD5               	movwf	oled_putString@string& (0+255),b
  8565  00746C  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  8566  00746E  0E09               	movlw	9
  8567  007470  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  8568  007472  0E01               	movlw	1
  8569  007474  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8570  007476  EC6A  F020         	call	_oled_putString	;wreg free
  8571                           
  8572                           ;MOTEapp.c: 1014: oled_putString("Data: ",0,2);
  8573  00747A  0E60               	movlw	low (STR_208+5)
  8574  00747C  0100               	movlb	0	; () banked
  8575  00747E  6FD5               	movwf	oled_putString@string& (0+255),b
  8576  007480  0E7E               	movlw	high (STR_208+5)
  8577  007482  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8578  007484  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8579  007486  0E02               	movlw	2
  8580  007488  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8581  00748A  EC6A  F020         	call	_oled_putString	;wreg free
  8582                           
  8583                           ;MOTEapp.c: 1015: oled_putString(&responseData[0],6,2);
  8584  00748E  0EB4               	movlw	low _responseData
  8585  007490  0100               	movlb	0	; () banked
  8586  007492  6FD5               	movwf	oled_putString@string& (0+255),b
  8587  007494  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  8588  007496  0E06               	movlw	6
  8589  007498  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  8590  00749A  0E02               	movlw	2
  8591  00749C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8592  00749E  EC6A  F020         	call	_oled_putString	;wreg free
  8593                           
  8594                           ;MOTEapp.c: 1016: oled_putString(" ",11,2);
  8595  0074A2  0E59               	movlw	low (STR_163+13)
  8596  0074A4  0100               	movlb	0	; () banked
  8597  0074A6  6FD5               	movwf	oled_putString@string& (0+255),b
  8598  0074A8  0E7C               	movlw	high (STR_163+13)
  8599  0074AA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8600  0074AC  0E0B               	movlw	11
  8601  0074AE  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  8602  0074B0  0E02               	movlw	2
  8603  0074B2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8604  0074B4  EC6A  F020         	call	_oled_putString	;wreg free
  8605                           
  8606                           ;MOTEapp.c: 1017: oled_putString(&responseData[5],12,2);
  8607  0074B8  0EB9               	movlw	low (_responseData+5)
  8608  0074BA  0100               	movlb	0	; () banked
  8609  0074BC  6FD5               	movwf	oled_putString@string& (0+255),b
  8610  0074BE  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  8611  0074C0  0E0C               	movlw	12
  8612  0074C2  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  8613  0074C4  0E02               	movlw	2
  8614  0074C6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8615  0074C8  EC6A  F020         	call	_oled_putString	;wreg free
  8616                           
  8617                           ;MOTEapp.c: 1019: oled_putString(&responseId[0],0,3);
  8618  0074CC  0EC0               	movlw	low _responseId
  8619  0074CE  0100               	movlb	0	; () banked
  8620  0074D0  6FD5               	movwf	oled_putString@string& (0+255),b
  8621  0074D2  0E01               	movlw	high _responseId
  8622  0074D4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8623  0074D6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8624  0074D8  0E03               	movlw	3
  8625  0074DA  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8626  0074DC  EC6A  F020         	call	_oled_putString	;wreg free
  8627                           
  8628                           ;MOTEapp.c: 1021: runningState = runningDownlinkDisplay;
  8629  0074E0  0E0B               	movlw	11
  8630  0074E2  0100               	movlb	0	; () banked
  8631  0074E4  6F98               	movwf	_runningState& (0+255),b
  8632  0074E6  0C0B               	retlw	11
  8633  0074E8                     l11799:
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;MOTEapp.c: 1025: if ( (changeStates) || (selectButton) )
  8637  0074E8  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8638  0074EA  E103               	bnz	l11803
  8639                           
  8640                           ; BSR set to: 0
  8641  0074EC  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8642  0074EE  B4D8               	btfsc	status,2,c
  8643  0074F0  0012               	return	
  8644  0074F2                     l11803:
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;MOTEapp.c: 1026: {
  8648                           ;MOTEapp.c: 1027: oled_clear();
  8649  0074F2  ECFE  F01A         	call	_oled_clear	;wreg free
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;MOTEapp.c: 1028: oled_putString(" View Downlink  ",0,0);
  8653  0074F6  0EEE               	movlw	low STR_200
  8654  0074F8  6FD5               	movwf	oled_putString@string& (0+255),b
  8655  0074FA  0E7A               	movlw	high STR_200
  8656  0074FC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8657  0074FE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8658  007500  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8659  007502  EC6A  F020         	call	_oled_putString	;wreg free
  8660                           
  8661                           ;MOTEapp.c: 1029: oled_putString("  Last Message  ",0,1);
  8662  007506  0EDD               	movlw	low STR_201
  8663  007508  0100               	movlb	0	; () banked
  8664  00750A  6FD5               	movwf	oled_putString@string& (0+255),b
  8665  00750C  0E7A               	movlw	high STR_201
  8666  00750E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8667  007510  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8668  007512  0E01               	movlw	1
  8669  007514  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8670  007516  EC6A  F020         	call	_oled_putString	;wreg free
  8671                           
  8672                           ;MOTEapp.c: 1030: oled_putString("(NAV)    (SEL) ",0,3);
  8673  00751A  0EFC               	movlw	low STR_75
  8674  00751C  0100               	movlb	0	; () banked
  8675  00751E  6FD5               	movwf	oled_putString@string& (0+255),b
  8676  007520  0E7B               	movlw	high STR_75
  8677  007522  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8678  007524  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8679  007526  0E03               	movlw	3
  8680  007528  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8681  00752A  EC6A  F020         	call	_oled_putString	;wreg free
  8682  00752E  D57A               	goto	l11591
  8683  007530                     l11813:
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;MOTEapp.c: 1035: if (changeStates)
  8687  007530  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8688  007532  E018               	bz	l11823
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;MOTEapp.c: 1036: {
  8692                           ;MOTEapp.c: 1037: oled_clear();
  8693  007534  ECFE  F01A         	call	_oled_clear	;wreg free
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;MOTEapp.c: 1038: oled_putString("Enter Sleep Mode",0,0);
  8697  007538  0E87               	movlw	low STR_235
  8698  00753A  6FD5               	movwf	oled_putString@string& (0+255),b
  8699  00753C  0E7B               	movlw	high STR_235
  8700  00753E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8701  007540  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8702  007542  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8703  007544  EC6A  F020         	call	_oled_putString	;wreg free
  8704                           
  8705                           ;MOTEapp.c: 1039: oled_putString("(NAV)    (SLP) ",0,3);
  8706  007548  0E0C               	movlw	low STR_236
  8707  00754A  0100               	movlb	0	; () banked
  8708  00754C  6FD5               	movwf	oled_putString@string& (0+255),b
  8709  00754E  0E7C               	movlw	high STR_236
  8710  007550  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8711  007552  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8712  007554  0E03               	movlw	3
  8713  007556  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8714  007558  EC6A  F020         	call	_oled_putString	;wreg free
  8715                           
  8716                           ;MOTEapp.c: 1040: runningState = runningSleep;
  8717  00755C  0E0E               	movlw	14
  8718  00755E  0100               	movlb	0	; () banked
  8719  007560  6F98               	movwf	_runningState& (0+255),b
  8720                           
  8721                           ;MOTEapp.c: 1041: }
  8722  007562  0C0E               	retlw	14
  8723  007564                     l11823:
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;MOTEapp.c: 1042: else if (selectButton)
  8727  007564  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8728  007566  B4D8               	btfsc	status,2,c
  8729  007568  0012               	return	
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;MOTEapp.c: 1043: {
  8733                           ;MOTEapp.c: 1044: if (periodicState)
  8734  00756A  51F9               	movf	_periodicState& (0+255),w,b
  8735  00756C  E008               	bz	l11831
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;MOTEapp.c: 1045: {
  8739                           ;MOTEapp.c: 1046: periodicState = 0;
  8740  00756E  6BF9               	clrf	_periodicState& (0+255),b
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;MOTEapp.c: 1047: oled_putString("    Disabled  ", 0,2);
  8744  007570  0E6A               	movlw	low STR_226
  8745  007572  6FD5               	movwf	oled_putString@string& (0+255),b
  8746  007574  0E7C               	movlw	high STR_226
  8747  007576  D008               	goto	L30
  8748  007578                     L29:
  8749  007578  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8750  00757A  EF6A  F020         	goto	_oled_putString	;wreg free
  8751  00757E                     l11831:
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;MOTEapp.c: 1049: else
  8755                           ;MOTEapp.c: 1050: {
  8756                           ;MOTEapp.c: 1051: periodicState = 1;
  8757  00757E  0E01               	movlw	1
  8758  007580  6FF9               	movwf	_periodicState& (0+255),b
  8759                           
  8760                           ; BSR set to: 0
  8761                           ;MOTEapp.c: 1052: oled_putString("    Enabled   ", 0,2);
  8762  007582  0E5B               	movlw	low STR_225
  8763  007584  6FD5               	movwf	oled_putString@string& (0+255),b
  8764  007586  0E7C               	movlw	high STR_225
  8765  007588                     L30:
  8766  007588  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8767  00758A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8768  00758C  EF0E  F036         	goto	L35
  8769  007590                     l11835:
  8770                           
  8771                           ; BSR set to: 0
  8772                           ;MOTEapp.c: 1057: if (selectButton)
  8773  007590  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8774  007592  E009               	bz	l609
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;MOTEapp.c: 1058: {
  8778                           ;MOTEapp.c: 1059: if( moteApp_GoToSleep() )
  8779  007594  EC31  F022         	call	_moteApp_GoToSleep	;wreg free
  8780  007598  0900               	iorlw	0
  8781  00759A  E003               	bz	l11841
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;MOTEapp.c: 1060: {
  8785                           ;MOTEapp.c: 1061: changeStates = 1;
  8786  00759C  0E01               	movlw	1
  8787  00759E  6FF2               	movwf	moteRunningProcess@changeStates& (0+255),b
  8788                           
  8789                           ;MOTEapp.c: 1062: }
  8790  0075A0  D002               	goto	l609
  8791  0075A2                     l11841:
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;MOTEapp.c: 1063: else
  8795                           ;MOTEapp.c: 1064: {
  8796                           ;MOTEapp.c: 1065: secTicker = 10 - 1;
  8797  0075A2  0E09               	movlw	9
  8798  0075A4  6F99               	movwf	_secTicker& (0+255),b
  8799  0075A6                     l609:
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;MOTEapp.c: 1066: }
  8803                           ;MOTEapp.c: 1067: }
  8804                           ;MOTEapp.c: 1068: if (changeStates)
  8805  0075A6  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8806  0075A8  B4D8               	btfsc	status,2,c
  8807  0075AA  0012               	return	
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;MOTEapp.c: 1069: {
  8811                           ;MOTEapp.c: 1070: oled_clear();
  8812  0075AC  ECFE  F01A         	call	_oled_clear	;wreg free
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;MOTEapp.c: 1071: oled_putString("  Sensor Data  ",0,0);
  8816  0075B0  0EEC               	movlw	low STR_80
  8817  0075B2  6FD5               	movwf	oled_putString@string& (0+255),b
  8818  0075B4  0E7B               	movlw	high STR_80
  8819  0075B6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8820  0075B8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8821  0075BA  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8822  0075BC  EC6A  F020         	call	_oled_putString	;wreg free
  8823                           
  8824                           ;MOTEapp.c: 1072: oled_putString("    Display    ",0,1);
  8825  0075C0  0EDC               	movlw	low STR_81
  8826  0075C2  0100               	movlb	0	; () banked
  8827  0075C4  6FD5               	movwf	oled_putString@string& (0+255),b
  8828  0075C6  0E7B               	movlw	high STR_81
  8829  0075C8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8830  0075CA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8831  0075CC  0E01               	movlw	1
  8832  0075CE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8833  0075D0  EC6A  F020         	call	_oled_putString	;wreg free
  8834                           
  8835                           ;MOTEapp.c: 1073: oled_putString("(NAV)    (SEL) ",0,3);
  8836  0075D4  0EFC               	movlw	low STR_75
  8837  0075D6  0100               	movlb	0	; () banked
  8838  0075D8  6FD5               	movwf	oled_putString@string& (0+255),b
  8839  0075DA  0E7B               	movlw	high STR_75
  8840  0075DC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8841  0075DE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8842  0075E0  0E03               	movlw	3
  8843  0075E2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8844  0075E4  EC6A  F020         	call	_oled_putString	;wreg free
  8845  0075E8  EF76  F033         	goto	l11175
  8846  0075EC                     l11855:
  8847                           
  8848                           ; BSR set to: 0
  8849  0075EC  5198               	movf	_runningState& (0+255),w,b
  8850                           
  8851                           ; Switch size 1, requested type "speed"
  8852                           ; Number of cases is 12, Range of values is 0 to 14
  8853                           ; switch strategies available:
  8854                           ; Name         Instructions Cycles
  8855                           ; simple_byte           37    19 (average)
  8856                           ;	Chosen strategy is simple_byte
  8857  0075EE  E102 EF53  F033    	bz	l11163
  8858  0075F4  0A01               	xorlw	1	; case 1
  8859  0075F6  E102 EF7A  F033    	bz	l11177
  8860  0075FC  0A03               	xorlw	3	; case 2
  8861  0075FE  E102 EFE7  F033    	bz	l11207
  8862  007604  0A01               	xorlw	1	; case 3
  8863  007606  E102 EF21  F034    	bz	l11223
  8864  00760C  0A07               	xorlw	7	; case 4
  8865  00760E  E102 EFB3  F034    	bz	l11267
  8866  007614  0A02               	xorlw	2	; case 6
  8867  007616  E101 D4E5          	bz	l11581
  8868  00761A  0A01               	xorlw	1	; case 7
  8869  00761C  E101 D557          	bz	l11631
  8870  007620  0A0F               	xorlw	15	; case 8
  8871  007622  E101 D5B1          	bz	l11661
  8872  007626  0A02               	xorlw	2	; case 10
  8873  007628  E101 D6D5          	bz	l11761
  8874  00762C  0A01               	xorlw	1	; case 11
  8875  00762E  E101 D75B          	bz	l11799
  8876  007632  0A07               	xorlw	7	; case 12
  8877  007634  E101 D77C          	bz	l11813
  8878  007638  0A02               	xorlw	2	; case 14
  8879  00763A  E0AA               	bz	l11835
  8880  00763C  EF52  F033         	goto	l447
  8881  007640                     __end_of_moteRunningProcess:
  8882                           	opt stack 0
  8883                           tblptru	equ	0xFF8
  8884                           tblptrh	equ	0xFF7
  8885                           tblptrl	equ	0xFF6
  8886                           tablat	equ	0xFF5
  8887                           prodl	equ	0xFF3
  8888                           intcon	equ	0xFF2
  8889                           postinc0	equ	0xFEE
  8890                           wreg	equ	0xFE8
  8891                           postdec1	equ	0xFE5
  8892                           fsr1l	equ	0xFE1
  8893                           indf2	equ	0xFDF
  8894                           fsr2h	equ	0xFDA
  8895                           fsr2l	equ	0xFD9
  8896                           status	equ	0xFD8
  8897                           
  8898 ;; *************** function _unhex *****************
  8899 ;; Defined at:
  8900 ;;		line 1262 in file "../Includes/Board/MOTEapp.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;  c               1    wreg     unsigned char 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  c               1    0[BANK0 ] unsigned char 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      unsigned char 
  8907 ;; Registers used:
  8908 ;;		wreg, status,2, status,0
  8909 ;; Tracked objects:
  8910 ;;		On entry : F/0
  8911 ;;		On exit  : F/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8914 ;;      Params:         0       0       0       0       0       0       0       0       0
  8915 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8917 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8918 ;;Total ram usage:        1 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; Hardware stack levels required when called:   11
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_moteRunningProcess
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text11
  8929  0037F2                     __ptext11:
  8930                           	opt stack 0
  8931  0037F2                     _unhex:
  8932                           	opt stack 17
  8933                           
  8934                           ;incstack = 0
  8935                           ;unhex@c stored from wreg
  8936  0037F2  6FC8               	movwf	unhex@c& (0+255),b
  8937                           
  8938                           ;MOTEapp.c: 1264: if (c >= '0' && c <= '9')
  8939  0037F4  0E2F               	movlw	47
  8940  0037F6  0100               	movlb	0	; () banked
  8941  0037F8  65C8               	cpfsgt	unhex@c& (0+255),b
  8942  0037FA  D006               	goto	l10457
  8943                           
  8944                           ; BSR set to: 0
  8945  0037FC  0E3A               	movlw	58
  8946  0037FE  61C8               	cpfslt	unhex@c& (0+255),b
  8947  003800  D003               	goto	l10457
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;MOTEapp.c: 1265: return c - '0';
  8951  003802  51C8               	movf	unhex@c& (0+255),w,b
  8952  003804  0FD0               	addlw	208
  8953  003806  0012               	return	
  8954  003808                     l10457:
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;MOTEapp.c: 1266: if (c >= 'A' && c <= 'F')
  8958  003808  0E40               	movlw	64
  8959  00380A  65C8               	cpfsgt	unhex@c& (0+255),b
  8960  00380C  0C2D               	retlw	45
  8961                           
  8962                           ; BSR set to: 0
  8963  00380E  0E47               	movlw	71
  8964  003810  61C8               	cpfslt	unhex@c& (0+255),b
  8965  003812  0C2D               	retlw	45
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;MOTEapp.c: 1267: return c - 'A' + 10;
  8969  003814  51C8               	movf	unhex@c& (0+255),w,b
  8970  003816  0FC9               	addlw	201
  8971  003818  0012               	return	
  8972  00381A                     __end_of_unhex:
  8973                           	opt stack 0
  8974                           tblptru	equ	0xFF8
  8975                           tblptrh	equ	0xFF7
  8976                           tblptrl	equ	0xFF6
  8977                           tablat	equ	0xFF5
  8978                           prodl	equ	0xFF3
  8979                           intcon	equ	0xFF2
  8980                           postinc0	equ	0xFEE
  8981                           wreg	equ	0xFE8
  8982                           postdec1	equ	0xFE5
  8983                           fsr1l	equ	0xFE1
  8984                           indf2	equ	0xFDF
  8985                           fsr2h	equ	0xFDA
  8986                           fsr2l	equ	0xFD9
  8987                           status	equ	0xFD8
  8988                           
  8989 ;; *************** function _sendDataCommand *****************
  8990 ;; Defined at:
  8991 ;;		line 1239 in file "../Includes/Board/MOTEapp.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  8994 ;;		 -> STR_207(12), STR_206(14), STR_79(14), STR_77(12), 
  8995 ;;  appData         1    3[BANK0 ] PTR unsigned char 
  8996 ;;		 -> dataBuffer(12), 
  8997 ;;  dataLength      1    4[BANK0 ] unsigned char 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9000 ;;  byteCount       1    6[BANK0 ] unsigned char 
  9001 ;; Return value:  Size  Location     Type
  9002 ;;		None               void
  9003 ;; Registers used:
  9004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9005 ;; Tracked objects:
  9006 ;;		On entry : F/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9010 ;;      Params:         0       4       0       0       0       0       0       0       0
  9011 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9012 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9013 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9014 ;;Total ram usage:        7 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; Hardware stack levels required when called:   13
  9017 ;; This function calls:
  9018 ;;		_EUSART_Write
  9019 ;;		_EndLine
  9020 ;;		_hexToStr
  9021 ;; This function is called by:
  9022 ;;		_moteRunningProcess
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text12
  9027  004796                     __ptext12:
  9028                           	opt stack 0
  9029  004796                     _sendDataCommand:
  9030                           	opt stack 15
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;MOTEapp.c: 1242: while (*string)
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;incstack = 0
  9037  004796  D00B               	goto	l10425
  9038  004798                     l10421:
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;MOTEapp.c: 1243: {
  9042                           ;MOTEapp.c: 1244: EUSART_Write(*string++);
  9043  004798  C0C9  FFF6         	movff	sendDataCommand@string,tblptrl
  9044  00479C  C0CA  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9045  0047A0                     	if	0	;tblptru may be non-zero
  9046  0047A0                     	endif
  9047  0047A0                     	if	0	;tblptru may be non-zero
  9048  0047A0                     	endif
  9049  0047A0  0008               	tblrd		*
  9050  0047A2  50F5               	movf	tablat,w,c
  9051  0047A4  ECD1  F01C         	call	_EUSART_Write
  9052  0047A8  0100               	movlb	0	; () banked
  9053  0047AA  4BC9               	infsnz	sendDataCommand@string& (0+255),f,b
  9054  0047AC  2BCA               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9055  0047AE                     l10425:
  9056                           
  9057                           ; BSR set to: 0
  9058  0047AE  C0C9  FFF6         	movff	sendDataCommand@string,tblptrl
  9059  0047B2  C0CA  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9060  0047B6                     	if	0	;tblptru may be non-zero
  9061  0047B6                     	endif
  9062  0047B6                     	if	0	;tblptru may be non-zero
  9063  0047B6                     	endif
  9064  0047B6  0008               	tblrd		*
  9065  0047B8  50F5               	movf	tablat,w,c
  9066  0047BA  E1EE               	bnz	l10421
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;MOTEapp.c: 1245: }
  9070                           ;MOTEapp.c: 1247: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9071  0047BC  6BCE               	clrf	sendDataCommand@byteCount& (0+255),b
  9072  0047BE                     l10431:
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;MOTEapp.c: 1248: {
  9076                           ;MOTEapp.c: 1249: EUSART_Write(appData[byteCount]);
  9077  0047BE  51CB               	movf	sendDataCommand@appData& (0+255),w,b
  9078  0047C0  25CE               	addwf	sendDataCommand@byteCount& (0+255),w,b
  9079  0047C2  6ED9               	movwf	fsr2l,c
  9080  0047C4  6ADA               	clrf	fsr2h,c
  9081  0047C6  50DF               	movf	indf2,w,c
  9082  0047C8  ECD1  F01C         	call	_EUSART_Write
  9083  0047CC  0100               	movlb	0	; () banked
  9084  0047CE  2BCE               	incf	sendDataCommand@byteCount& (0+255),f,b
  9085                           
  9086                           ; BSR set to: 0
  9087  0047D0  0E02               	movlw	2
  9088  0047D2  65CE               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9089  0047D4  D7F4               	goto	l10431
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;MOTEapp.c: 1250: }
  9093                           ;MOTEapp.c: 1252: EUSART_Write(appData[3]);
  9094  0047D6  51CB               	movf	sendDataCommand@appData& (0+255),w,b
  9095  0047D8  6ED9               	movwf	fsr2l,c
  9096  0047DA  6ADA               	clrf	fsr2h,c
  9097  0047DC  0E03               	movlw	3
  9098  0047DE  26D9               	addwf	fsr2l,f,c
  9099  0047E0  50DF               	movf	indf2,w,c
  9100  0047E2  ECD1  F01C         	call	_EUSART_Write
  9101                           
  9102                           ;MOTEapp.c: 1254: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  9103  0047E6  0E04               	movlw	4
  9104  0047E8  0100               	movlb	0	; () banked
  9105  0047EA  6FCF               	movwf	sendDataCommand@byteCount_1637& (0+255),b
  9106  0047EC  D019               	goto	l10445
  9107  0047EE                     l10441:
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;MOTEapp.c: 1255: {
  9111                           ;MOTEapp.c: 1256: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  9112  0047EE  51CB               	movf	sendDataCommand@appData& (0+255),w,b
  9113  0047F0  25CF               	addwf	sendDataCommand@byteCount_1637& (0+255),w,b
  9114  0047F2  6ED9               	movwf	fsr2l,c
  9115  0047F4  6ADA               	clrf	fsr2h,c
  9116  0047F6  50DF               	movf	indf2,w,c
  9117  0047F8  6FCD               	movwf	??_sendDataCommand& (0+255),b
  9118  0047FA  39CD               	swapf	??_sendDataCommand& (0+255),w,b
  9119  0047FC  0B0F               	andlw	15
  9120  0047FE  EC96  F01B         	call	_hexToStr
  9121  004802  ECD1  F01C         	call	_EUSART_Write
  9122                           
  9123                           ;MOTEapp.c: 1257: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  9124  004806  0100               	movlb	0	; () banked
  9125  004808  51CB               	movf	sendDataCommand@appData& (0+255),w,b
  9126  00480A  25CF               	addwf	sendDataCommand@byteCount_1637& (0+255),w,b
  9127  00480C  6ED9               	movwf	fsr2l,c
  9128  00480E  6ADA               	clrf	fsr2h,c
  9129  004810  50DF               	movf	indf2,w,c
  9130  004812  0B0F               	andlw	15
  9131  004814  EC96  F01B         	call	_hexToStr
  9132  004818  ECD1  F01C         	call	_EUSART_Write
  9133  00481C  0100               	movlb	0	; () banked
  9134  00481E  2BCF               	incf	sendDataCommand@byteCount_1637& (0+255),f,b
  9135  004820                     l10445:
  9136                           
  9137                           ; BSR set to: 0
  9138  004820  51CC               	movf	sendDataCommand@dataLength& (0+255),w,b
  9139  004822  5DCF               	subwf	sendDataCommand@byteCount_1637& (0+255),w,b
  9140  004824  E3E4               	bnc	l10441
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;MOTEapp.c: 1258: }
  9144                           ;MOTEapp.c: 1259: EndLine();
  9145  004826  EF8B  F01A         	goto	_EndLine	;wreg free
  9146  00482A                     __end_of_sendDataCommand:
  9147                           	opt stack 0
  9148                           tblptru	equ	0xFF8
  9149                           tblptrh	equ	0xFF7
  9150                           tblptrl	equ	0xFF6
  9151                           tablat	equ	0xFF5
  9152                           prodl	equ	0xFF3
  9153                           intcon	equ	0xFF2
  9154                           postinc0	equ	0xFEE
  9155                           wreg	equ	0xFE8
  9156                           postdec1	equ	0xFE5
  9157                           fsr1l	equ	0xFE1
  9158                           indf2	equ	0xFDF
  9159                           fsr2h	equ	0xFDA
  9160                           fsr2l	equ	0xFD9
  9161                           status	equ	0xFD8
  9162                           
  9163 ;; *************** function _hexToStr *****************
  9164 ;; Defined at:
  9165 ;;		line 1271 in file "../Includes/Board/MOTEapp.c"
  9166 ;; Parameters:    Size  Location     Type
  9167 ;;  character       1    wreg     unsigned char 
  9168 ;; Auto vars:     Size  Location     Type
  9169 ;;  character       1    0[BANK0 ] unsigned char 
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  1    wreg      unsigned char 
  9172 ;; Registers used:
  9173 ;;		wreg, status,2, status,0
  9174 ;; Tracked objects:
  9175 ;;		On entry : F/0
  9176 ;;		On exit  : F/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9179 ;;      Params:         0       0       0       0       0       0       0       0       0
  9180 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9182 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9183 ;;Total ram usage:        1 bytes
  9184 ;; Hardware stack levels used:    1
  9185 ;; Hardware stack levels required when called:   11
  9186 ;; This function calls:
  9187 ;;		Nothing
  9188 ;; This function is called by:
  9189 ;;		_sendDataCommand
  9190 ;; This function uses a non-reentrant model
  9191 ;;
  9192                           
  9193                           	psect	text13
  9194  00372C                     __ptext13:
  9195                           	opt stack 0
  9196  00372C                     _hexToStr:
  9197                           	opt stack 16
  9198                           
  9199                           ;incstack = 0
  9200                           ;hexToStr@character stored from wreg
  9201  00372C  6FC8               	movwf	hexToStr@character& (0+255),b
  9202                           
  9203                           ;MOTEapp.c: 1274: character = character & 0x0F;
  9204  00372E  0E0F               	movlw	15
  9205  003730  0100               	movlb	0	; () banked
  9206  003732  17C8               	andwf	hexToStr@character& (0+255),f,b
  9207                           
  9208                           ;MOTEapp.c: 1276: if (character < 0x0A)
  9209  003734  0E0A               	movlw	10
  9210  003736  61C8               	cpfslt	hexToStr@character& (0+255),b
  9211  003738  D003               	goto	l10039
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;MOTEapp.c: 1277: {
  9215                           ;MOTEapp.c: 1278: return character + '0';
  9216  00373A  51C8               	movf	hexToStr@character& (0+255),w,b
  9217  00373C  0F30               	addlw	48
  9218  00373E  0012               	return	
  9219  003740                     l10039:
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;MOTEapp.c: 1280: else if ( (character >= 0x0A) && (character <= 0x0F) )
  9223  003740  0E09               	movlw	9
  9224  003742  65C8               	cpfsgt	hexToStr@character& (0+255),b
  9225  003744  0C00               	retlw	0
  9226                           
  9227                           ; BSR set to: 0
  9228  003746  0E10               	movlw	16
  9229  003748  61C8               	cpfslt	hexToStr@character& (0+255),b
  9230  00374A  0C00               	retlw	0
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;MOTEapp.c: 1281: {
  9234                           ;MOTEapp.c: 1282: return character + '0' + 7;
  9235  00374C  51C8               	movf	hexToStr@character& (0+255),w,b
  9236  00374E  0F37               	addlw	55
  9237  003750  0012               	return	
  9238  003752                     __end_of_hexToStr:
  9239                           	opt stack 0
  9240                           tblptru	equ	0xFF8
  9241                           tblptrh	equ	0xFF7
  9242                           tblptrl	equ	0xFF6
  9243                           tablat	equ	0xFF5
  9244                           prodl	equ	0xFF3
  9245                           intcon	equ	0xFF2
  9246                           postinc0	equ	0xFEE
  9247                           wreg	equ	0xFE8
  9248                           postdec1	equ	0xFE5
  9249                           fsr1l	equ	0xFE1
  9250                           indf2	equ	0xFDF
  9251                           fsr2h	equ	0xFDA
  9252                           fsr2l	equ	0xFD9
  9253                           status	equ	0xFD8
  9254                           
  9255 ;; *************** function _oled_putUint8 *****************
  9256 ;; Defined at:
  9257 ;;		line 226 in file "../Includes/Drivers/SSD1306oLED.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;  number          1    wreg     unsigned char 
  9260 ;;  station_dot     1   18[BANK0 ] unsigned char 
  9261 ;;  start_page      1   19[BANK0 ] unsigned char 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  number          1   20[BANK0 ] unsigned char 
  9264 ;;  numData         6   21[BANK0 ] struct .
  9265 ;; Return value:  Size  Location     Type
  9266 ;;		None               void
  9267 ;; Registers used:
  9268 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9269 ;; Tracked objects:
  9270 ;;		On entry : F/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9274 ;;      Params:         0       2       0       0       0       0       0       0       0
  9275 ;;      Locals:         0       7       0       0       0       0       0       0       0
  9276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9277 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9278 ;;Total ram usage:        9 bytes
  9279 ;; Hardware stack levels used:    1
  9280 ;; Hardware stack levels required when called:   16
  9281 ;; This function calls:
  9282 ;;		___lbdiv
  9283 ;;		___lbmod
  9284 ;;		_oled_putString
  9285 ;; This function is called by:
  9286 ;;		_test_adc
  9287 ;;		_moteRunningProcess
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           	psect	text14
  9292  003EFA                     __ptext14:
  9293                           	opt stack 0
  9294  003EFA                     _oled_putUint8:
  9295                           	opt stack 12
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;incstack = 0
  9299                           ;oled_putUint8@number stored from wreg
  9300  003EFA  6FDC               	movwf	oled_putUint8@number& (0+255),b
  9301                           
  9302                           ;SSD1306oLED.c: 228: display_data_t numData;
  9303                           ;SSD1306oLED.c: 229: numData.d2 = '0' + (number % 10);
  9304  003EFC  0E0A               	movlw	10
  9305  003EFE  0100               	movlb	0	; () banked
  9306  003F00  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9307  003F02  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9308  003F04  ECE5  F01B         	call	___lbmod
  9309  003F08  0F30               	addlw	48
  9310  003F0A  6FDF               	movwf	(oled_putUint8@numData+2)& (0+255),b
  9311                           
  9312                           ;SSD1306oLED.c: 230: number /= 10;
  9313  003F0C  0E0A               	movlw	10
  9314  003F0E  6FC8               	movwf	___lbdiv@divisor& (0+255),b
  9315  003F10  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9316  003F12  EC06  F01D         	call	___lbdiv
  9317  003F16  6FDC               	movwf	oled_putUint8@number& (0+255),b
  9318                           
  9319                           ;SSD1306oLED.c: 231: numData.d1 = '0' + (number % 10);
  9320  003F18  0E0A               	movlw	10
  9321  003F1A  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9322  003F1C  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9323  003F1E  ECE5  F01B         	call	___lbmod
  9324  003F22  0F30               	addlw	48
  9325  003F24  6FDE               	movwf	(oled_putUint8@numData+1)& (0+255),b
  9326                           
  9327                           ;SSD1306oLED.c: 232: number /= 10;
  9328  003F26  0E0A               	movlw	10
  9329  003F28  6FC8               	movwf	___lbdiv@divisor& (0+255),b
  9330  003F2A  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9331  003F2C  EC06  F01D         	call	___lbdiv
  9332  003F30  6FDC               	movwf	oled_putUint8@number& (0+255),b
  9333                           
  9334                           ;SSD1306oLED.c: 233: numData.d0 = '0' + (number % 10);
  9335  003F32  0E0A               	movlw	10
  9336  003F34  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9337  003F36  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9338  003F38  ECE5  F01B         	call	___lbmod
  9339  003F3C  0F30               	addlw	48
  9340  003F3E  6FDD               	movwf	oled_putUint8@numData& (0+255),b
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;SSD1306oLED.c: 235: numData.b[3]=0;
  9344  003F40  6BE0               	clrf	(oled_putUint8@numData+3)& (0+255),b
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;SSD1306oLED.c: 237: oled_putString(numData.b,station_dot,start_page);
  9348  003F42  0EDD               	movlw	low oled_putUint8@numData
  9349  003F44  6FD5               	movwf	oled_putString@string& (0+255),b
  9350  003F46  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  9351  003F48  C0DA  F0D7         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  9352  003F4C  C0DB  F0D8         	movff	oled_putUint8@start_page,oled_putString@start_page
  9353  003F50  EF6A  F020         	goto	_oled_putString	;wreg free
  9354  003F54                     __end_of_oled_putUint8:
  9355                           	opt stack 0
  9356                           tblptru	equ	0xFF8
  9357                           tblptrh	equ	0xFF7
  9358                           tblptrl	equ	0xFF6
  9359                           tablat	equ	0xFF5
  9360                           prodl	equ	0xFF3
  9361                           intcon	equ	0xFF2
  9362                           postinc0	equ	0xFEE
  9363                           wreg	equ	0xFE8
  9364                           postdec1	equ	0xFE5
  9365                           fsr1l	equ	0xFE1
  9366                           indf2	equ	0xFDF
  9367                           fsr2h	equ	0xFDA
  9368                           fsr2l	equ	0xFD9
  9369                           status	equ	0xFD8
  9370                           
  9371 ;; *************** function _oled_putUint16 *****************
  9372 ;; Defined at:
  9373 ;;		line 240 in file "../Includes/Drivers/SSD1306oLED.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  number          2   18[BANK0 ] unsigned int 
  9376 ;;  station_dot     1   20[BANK0 ] unsigned char 
  9377 ;;  start_page      1   21[BANK0 ] unsigned char 
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;  numData         6   22[BANK0 ] struct .
  9380 ;; Return value:  Size  Location     Type
  9381 ;;		None               void
  9382 ;; Registers used:
  9383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9384 ;; Tracked objects:
  9385 ;;		On entry : F/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9389 ;;      Params:         0       4       0       0       0       0       0       0       0
  9390 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9392 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9393 ;;Total ram usage:       10 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; Hardware stack levels required when called:   16
  9396 ;; This function calls:
  9397 ;;		___lwdiv
  9398 ;;		___lwmod
  9399 ;;		_oled_putString
  9400 ;; This function is called by:
  9401 ;;		_test_adc
  9402 ;;		_moteRunningProcess
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text15
  9407  0055CE                     __ptext15:
  9408                           	opt stack 0
  9409  0055CE                     _oled_putUint16:
  9410                           	opt stack 12
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;SSD1306oLED.c: 242: display_data_t numData;
  9414                           ;SSD1306oLED.c: 243: numData.d4 = '0' + (number % 10);
  9415                           
  9416                           ;incstack = 0
  9417  0055CE  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9418  0055D2  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9419  0055D6  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9420  0055D8  0E0A               	movlw	10
  9421  0055DA  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9422  0055DC  ECB2  F01D         	call	___lwmod	;wreg free
  9423  0055E0  51C8               	movf	?___lwmod& (0+255),w,b
  9424  0055E2  0F30               	addlw	48
  9425  0055E4  6FE2               	movwf	(oled_putUint16@numData+4)& (0+255),b
  9426                           
  9427                           ;SSD1306oLED.c: 244: number /= 10;
  9428  0055E6  C0DA  F0C8         	movff	oled_putUint16@number,___lwdiv@dividend
  9429  0055EA  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9430  0055EE  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9431  0055F0  0E0A               	movlw	10
  9432  0055F2  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  9433  0055F4  EC3B  F01E         	call	___lwdiv	;wreg free
  9434  0055F8  C0C8  F0DA         	movff	?___lwdiv,oled_putUint16@number
  9435  0055FC  C0C9  F0DB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9436                           
  9437                           ;SSD1306oLED.c: 245: numData.d3 = '0' + (number % 10);
  9438  005600  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9439  005604  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9440  005608  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9441  00560A  0E0A               	movlw	10
  9442  00560C  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9443  00560E  ECB2  F01D         	call	___lwmod	;wreg free
  9444  005612  51C8               	movf	?___lwmod& (0+255),w,b
  9445  005614  0F30               	addlw	48
  9446  005616  6FE1               	movwf	(oled_putUint16@numData+3)& (0+255),b
  9447                           
  9448                           ;SSD1306oLED.c: 246: number /= 10;
  9449  005618  C0DA  F0C8         	movff	oled_putUint16@number,___lwdiv@dividend
  9450  00561C  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9451  005620  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9452  005622  0E0A               	movlw	10
  9453  005624  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  9454  005626  EC3B  F01E         	call	___lwdiv	;wreg free
  9455  00562A  C0C8  F0DA         	movff	?___lwdiv,oled_putUint16@number
  9456  00562E  C0C9  F0DB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9457                           
  9458                           ;SSD1306oLED.c: 247: numData.d2 = '0' + (number % 10);
  9459  005632  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9460  005636  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9461  00563A  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9462  00563C  0E0A               	movlw	10
  9463  00563E  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9464  005640  ECB2  F01D         	call	___lwmod	;wreg free
  9465  005644  51C8               	movf	?___lwmod& (0+255),w,b
  9466  005646  0F30               	addlw	48
  9467  005648  6FE0               	movwf	(oled_putUint16@numData+2)& (0+255),b
  9468                           
  9469                           ;SSD1306oLED.c: 248: number /= 10;
  9470  00564A  C0DA  F0C8         	movff	oled_putUint16@number,___lwdiv@dividend
  9471  00564E  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9472  005652  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9473  005654  0E0A               	movlw	10
  9474  005656  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  9475  005658  EC3B  F01E         	call	___lwdiv	;wreg free
  9476  00565C  C0C8  F0DA         	movff	?___lwdiv,oled_putUint16@number
  9477  005660  C0C9  F0DB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9478                           
  9479                           ;SSD1306oLED.c: 249: numData.d1 = '0' + (number % 10);
  9480  005664  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9481  005668  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9482  00566C  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9483  00566E  0E0A               	movlw	10
  9484  005670  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9485  005672  ECB2  F01D         	call	___lwmod	;wreg free
  9486  005676  51C8               	movf	?___lwmod& (0+255),w,b
  9487  005678  0F30               	addlw	48
  9488  00567A  6FDF               	movwf	(oled_putUint16@numData+1)& (0+255),b
  9489                           
  9490                           ;SSD1306oLED.c: 250: number /= 10;
  9491  00567C  C0DA  F0C8         	movff	oled_putUint16@number,___lwdiv@dividend
  9492  005680  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9493  005684  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9494  005686  0E0A               	movlw	10
  9495  005688  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  9496  00568A  EC3B  F01E         	call	___lwdiv	;wreg free
  9497  00568E  C0C8  F0DA         	movff	?___lwdiv,oled_putUint16@number
  9498  005692  C0C9  F0DB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9499                           
  9500                           ;SSD1306oLED.c: 251: numData.d0 = '0' + (number % 10);
  9501  005696  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9502  00569A  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9503  00569E  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9504  0056A0  0E0A               	movlw	10
  9505  0056A2  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9506  0056A4  ECB2  F01D         	call	___lwmod	;wreg free
  9507  0056A8  51C8               	movf	?___lwmod& (0+255),w,b
  9508  0056AA  0F30               	addlw	48
  9509  0056AC  6FDE               	movwf	oled_putUint16@numData& (0+255),b
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;SSD1306oLED.c: 253: numData.b[5]=0;
  9513  0056AE  6BE3               	clrf	(oled_putUint16@numData+5)& (0+255),b
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;SSD1306oLED.c: 255: oled_putString(numData.b,station_dot,start_page);
  9517  0056B0  0EDE               	movlw	low oled_putUint16@numData
  9518  0056B2  6FD5               	movwf	oled_putString@string& (0+255),b
  9519  0056B4  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  9520  0056B6  C0DC  F0D7         	movff	oled_putUint16@station_dot,oled_putString@station_dot
  9521  0056BA  C0DD  F0D8         	movff	oled_putUint16@start_page,oled_putString@start_page
  9522  0056BE  EF6A  F020         	goto	_oled_putString	;wreg free
  9523  0056C2                     __end_of_oled_putUint16:
  9524                           	opt stack 0
  9525                           tblptru	equ	0xFF8
  9526                           tblptrh	equ	0xFF7
  9527                           tblptrl	equ	0xFF6
  9528                           tablat	equ	0xFF5
  9529                           prodl	equ	0xFF3
  9530                           intcon	equ	0xFF2
  9531                           postinc0	equ	0xFEE
  9532                           wreg	equ	0xFE8
  9533                           postdec1	equ	0xFE5
  9534                           fsr1l	equ	0xFE1
  9535                           indf2	equ	0xFDF
  9536                           fsr2h	equ	0xFDA
  9537                           fsr2l	equ	0xFD9
  9538                           status	equ	0xFD8
  9539                           
  9540 ;; *************** function _moteApp_clearBuffers *****************
  9541 ;; Defined at:
  9542 ;;		line 1381 in file "../Includes/Board/MOTEapp.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;		None
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;  counter         1    2[BANK0 ] unsigned char 
  9547 ;;  counter         1    1[BANK0 ] unsigned char 
  9548 ;;  counter         1    0[BANK0 ] unsigned char 
  9549 ;; Return value:  Size  Location     Type
  9550 ;;		None               void
  9551 ;; Registers used:
  9552 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : F/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0
  9559 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9561 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9562 ;;Total ram usage:        3 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:   11
  9565 ;; This function calls:
  9566 ;;		Nothing
  9567 ;; This function is called by:
  9568 ;;		_moteRunningProcess
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           	psect	text16
  9573  003BA2                     __ptext16:
  9574                           	opt stack 0
  9575  003BA2                     _moteApp_clearBuffers:
  9576                           	opt stack 17
  9577                           
  9578                           ;MOTEapp.c: 1383: for (uint8_t counter = 0; counter < 3; counter++)
  9579                           
  9580                           ;incstack = 0
  9581  003BA2  0100               	movlb	0	; () banked
  9582  003BA4  6BC8               	clrf	moteApp_clearBuffers@counter& (0+255),b
  9583  003BA6                     l10365:
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;MOTEapp.c: 1384: {
  9587                           ;MOTEapp.c: 1385: responsePortNum[counter] = 0;
  9588  003BA6  51C8               	movf	moteApp_clearBuffers@counter& (0+255),w,b
  9589  003BA8  0FC3               	addlw	low _responsePortNum
  9590  003BAA  6ED9               	movwf	fsr2l,c
  9591  003BAC  6ADA               	clrf	fsr2h,c
  9592  003BAE  6ADF               	clrf	indf2,c
  9593                           
  9594                           ; BSR set to: 0
  9595  003BB0  2BC8               	incf	moteApp_clearBuffers@counter& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598  003BB2  0E02               	movlw	2
  9599  003BB4  65C8               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
  9600  003BB6  D7F7               	goto	l10365
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;MOTEapp.c: 1386: }
  9604                           ;MOTEapp.c: 1387: for (uint8_t counter = 0; counter < 34; counter++)
  9605  003BB8  6BC9               	clrf	moteApp_clearBuffers@counter_1700& (0+255),b
  9606  003BBA                     l10375:
  9607                           
  9608                           ; BSR set to: 0
  9609                           ;MOTEapp.c: 1388: {
  9610                           ;MOTEapp.c: 1389: responseId[counter] = 0;
  9611  003BBA  0EC0               	movlw	low _responseId
  9612  003BBC  25C9               	addwf	moteApp_clearBuffers@counter_1700& (0+255),w,b
  9613  003BBE  6ED9               	movwf	fsr2l,c
  9614  003BC0  6ADA               	clrf	fsr2h,c
  9615  003BC2  0E01               	movlw	high _responseId
  9616  003BC4  22DA               	addwfc	fsr2h,f,c
  9617  003BC6  6ADF               	clrf	indf2,c
  9618                           
  9619                           ; BSR set to: 0
  9620  003BC8  2BC9               	incf	moteApp_clearBuffers@counter_1700& (0+255),f,b
  9621                           
  9622                           ; BSR set to: 0
  9623  003BCA  0E21               	movlw	33
  9624  003BCC  65C9               	cpfsgt	moteApp_clearBuffers@counter_1700& (0+255),b
  9625  003BCE  D7F5               	goto	l10375
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;MOTEapp.c: 1390: }
  9629                           ;MOTEapp.c: 1391: for (uint8_t counter = 0; counter < 10; counter++)
  9630  003BD0  6BCA               	clrf	moteApp_clearBuffers@counter_1701& (0+255),b
  9631  003BD2                     l10385:
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;MOTEapp.c: 1392: {
  9635                           ;MOTEapp.c: 1393: responseData[counter] = 0;
  9636  003BD2  51CA               	movf	moteApp_clearBuffers@counter_1701& (0+255),w,b
  9637  003BD4  0FB4               	addlw	low _responseData
  9638  003BD6  6ED9               	movwf	fsr2l,c
  9639  003BD8  6ADA               	clrf	fsr2h,c
  9640  003BDA  6ADF               	clrf	indf2,c
  9641                           
  9642                           ; BSR set to: 0
  9643  003BDC  2BCA               	incf	moteApp_clearBuffers@counter_1701& (0+255),f,b
  9644                           
  9645                           ; BSR set to: 0
  9646  003BDE  0E09               	movlw	9
  9647  003BE0  65CA               	cpfsgt	moteApp_clearBuffers@counter_1701& (0+255),b
  9648  003BE2  D7F7               	goto	l10385
  9649  003BE4  0C09               	retlw	9
  9650  003BE6                     __end_of_moteApp_clearBuffers:
  9651                           	opt stack 0
  9652                           tblptru	equ	0xFF8
  9653                           tblptrh	equ	0xFF7
  9654                           tblptrl	equ	0xFF6
  9655                           tablat	equ	0xFF5
  9656                           prodl	equ	0xFF3
  9657                           intcon	equ	0xFF2
  9658                           postinc0	equ	0xFEE
  9659                           wreg	equ	0xFE8
  9660                           postdec1	equ	0xFE5
  9661                           fsr1l	equ	0xFE1
  9662                           indf2	equ	0xFDF
  9663                           fsr2h	equ	0xFDA
  9664                           fsr2l	equ	0xFD9
  9665                           status	equ	0xFD8
  9666                           
  9667 ;; *************** function _moteApp_add8bToDataBuffer *****************
  9668 ;; Defined at:
  9669 ;;		line 1397 in file "../Includes/Board/MOTEapp.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  number          1    wreg     unsigned char 
  9672 ;;  bufferLocati    1    4[BANK0 ] unsigned char 
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;  number          1    5[BANK0 ] unsigned char 
  9675 ;; Return value:  Size  Location     Type
  9676 ;;		None               void
  9677 ;; Registers used:
  9678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9679 ;; Tracked objects:
  9680 ;;		On entry : F/0
  9681 ;;		On exit  : F/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9684 ;;      Params:         0       1       0       0       0       0       0       0       0
  9685 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9687 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9688 ;;Total ram usage:        2 bytes
  9689 ;; Hardware stack levels used:    1
  9690 ;; Hardware stack levels required when called:   12
  9691 ;; This function calls:
  9692 ;;		___lbdiv
  9693 ;;		___lbmod
  9694 ;; This function is called by:
  9695 ;;		_moteRunningProcess
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699                           	psect	text17
  9700  004010                     __ptext17:
  9701                           	opt stack 0
  9702  004010                     _moteApp_add8bToDataBuffer:
  9703                           	opt stack 16
  9704                           
  9705                           ; BSR set to: 0
  9706                           ;incstack = 0
  9707                           ;moteApp_add8bToDataBuffer@number stored from wreg
  9708  004010  6FCD               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9709                           
  9710                           ;MOTEapp.c: 1399: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  9711  004012  0100               	movlb	0	; () banked
  9712  004014  51CC               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9713  004016  0FA0               	addlw	low (_dataBuffer+2)
  9714  004018  6ED9               	movwf	fsr2l,c
  9715  00401A  6ADA               	clrf	fsr2h,c
  9716  00401C  0E0A               	movlw	10
  9717  00401E  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9718  004020  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9719  004022  ECE5  F01B         	call	___lbmod
  9720  004026  0F30               	addlw	48
  9721  004028  6EDF               	movwf	indf2,c
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;MOTEapp.c: 1400: number /= 10;
  9725  00402A  0E0A               	movlw	10
  9726  00402C  6FC8               	movwf	___lbdiv@divisor& (0+255),b
  9727  00402E  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9728  004030  EC06  F01D         	call	___lbdiv
  9729  004034  6FCD               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;MOTEapp.c: 1401: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  9733  004036  51CC               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9734  004038  0F9F               	addlw	low (_dataBuffer+1)
  9735  00403A  6ED9               	movwf	fsr2l,c
  9736  00403C  6ADA               	clrf	fsr2h,c
  9737  00403E  0E0A               	movlw	10
  9738  004040  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9739  004042  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9740  004044  ECE5  F01B         	call	___lbmod
  9741  004048  0F30               	addlw	48
  9742  00404A  6EDF               	movwf	indf2,c
  9743                           
  9744                           ;MOTEapp.c: 1402: number /= 10;
  9745  00404C  0E0A               	movlw	10
  9746  00404E  6FC8               	movwf	___lbdiv@divisor& (0+255),b
  9747  004050  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9748  004052  EC06  F01D         	call	___lbdiv
  9749  004056  6FCD               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;MOTEapp.c: 1403: dataBuffer[bufferLocation] = '0' + (number % 10);
  9753  004058  51CC               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9754  00405A  0F9E               	addlw	low _dataBuffer
  9755  00405C  6ED9               	movwf	fsr2l,c
  9756  00405E  6ADA               	clrf	fsr2h,c
  9757  004060  0E0A               	movlw	10
  9758  004062  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9759  004064  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9760  004066  ECE5  F01B         	call	___lbmod
  9761  00406A  0F30               	addlw	48
  9762  00406C  6EDF               	movwf	indf2,c
  9763                           
  9764                           ; BSR set to: 0
  9765  00406E  0012               	return		;funcret
  9766  004070                     __end_of_moteApp_add8bToDataBuffer:
  9767                           	opt stack 0
  9768                           tblptru	equ	0xFF8
  9769                           tblptrh	equ	0xFF7
  9770                           tblptrl	equ	0xFF6
  9771                           tablat	equ	0xFF5
  9772                           prodl	equ	0xFF3
  9773                           intcon	equ	0xFF2
  9774                           postinc0	equ	0xFEE
  9775                           wreg	equ	0xFE8
  9776                           postdec1	equ	0xFE5
  9777                           fsr1l	equ	0xFE1
  9778                           indf2	equ	0xFDF
  9779                           fsr2h	equ	0xFDA
  9780                           fsr2l	equ	0xFD9
  9781                           status	equ	0xFD8
  9782                           
  9783 ;; *************** function ___lbmod *****************
  9784 ;; Defined at:
  9785 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbmod.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  dividend        1    wreg     unsigned char 
  9788 ;;  divisor         1    0[BANK0 ] unsigned char 
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;  dividend        1    1[BANK0 ] unsigned char 
  9791 ;;  rem             1    3[BANK0 ] unsigned char 
  9792 ;;  counter         1    2[BANK0 ] unsigned char 
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  1    wreg      unsigned char 
  9795 ;; Registers used:
  9796 ;;		wreg, status,2, status,0
  9797 ;; Tracked objects:
  9798 ;;		On entry : F/0
  9799 ;;		On exit  : F/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9802 ;;      Params:         0       1       0       0       0       0       0       0       0
  9803 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9805 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9806 ;;Total ram usage:        4 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; Hardware stack levels required when called:   11
  9809 ;; This function calls:
  9810 ;;		Nothing
  9811 ;; This function is called by:
  9812 ;;		_moteApp_add8bToDataBuffer
  9813 ;;		_oled_putUint8
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           	psect	text18
  9818  0037CA                     __ptext18:
  9819                           	opt stack 0
  9820  0037CA                     ___lbmod:
  9821                           	opt stack 16
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;incstack = 0
  9825                           ;___lbmod@dividend stored from wreg
  9826  0037CA  6FC9               	movwf	___lbmod@dividend& (0+255),b
  9827  0037CC  0E08               	movlw	8
  9828  0037CE  0100               	movlb	0	; () banked
  9829  0037D0  6FCA               	movwf	___lbmod@counter& (0+255),b
  9830                           
  9831                           ; BSR set to: 0
  9832  0037D2  6BCB               	clrf	___lbmod@rem& (0+255),b
  9833  0037D4                     l10151:
  9834                           
  9835                           ; BSR set to: 0
  9836  0037D4  90D8               	bcf	status,0,c
  9837  0037D6  35C9               	rlcf	___lbmod@dividend& (0+255),w,b
  9838  0037D8  35CB               	rlcf	___lbmod@rem& (0+255),w,b
  9839  0037DA  6FCB               	movwf	___lbmod@rem& (0+255),b
  9840                           
  9841                           ; BSR set to: 0
  9842  0037DC  90D8               	bcf	status,0,c
  9843  0037DE  37C9               	rlcf	___lbmod@dividend& (0+255),f,b
  9844                           
  9845                           ; BSR set to: 0
  9846  0037E0  51C8               	movf	___lbmod@divisor& (0+255),w,b
  9847  0037E2  5DCB               	subwf	___lbmod@rem& (0+255),w,b
  9848  0037E4  E302               	bnc	l10159
  9849                           
  9850                           ; BSR set to: 0
  9851  0037E6  51C8               	movf	___lbmod@divisor& (0+255),w,b
  9852  0037E8  5FCB               	subwf	___lbmod@rem& (0+255),f,b
  9853  0037EA                     l10159:
  9854                           
  9855                           ; BSR set to: 0
  9856  0037EA  2FCA               	decfsz	___lbmod@counter& (0+255),f,b
  9857  0037EC  D7F3               	goto	l10151
  9858                           
  9859                           ; BSR set to: 0
  9860  0037EE  51CB               	movf	___lbmod@rem& (0+255),w,b
  9861                           
  9862                           ; BSR set to: 0
  9863  0037F0  0012               	return		;funcret
  9864  0037F2                     __end_of___lbmod:
  9865                           	opt stack 0
  9866                           tblptru	equ	0xFF8
  9867                           tblptrh	equ	0xFF7
  9868                           tblptrl	equ	0xFF6
  9869                           tablat	equ	0xFF5
  9870                           prodl	equ	0xFF3
  9871                           intcon	equ	0xFF2
  9872                           postinc0	equ	0xFEE
  9873                           wreg	equ	0xFE8
  9874                           postdec1	equ	0xFE5
  9875                           fsr1l	equ	0xFE1
  9876                           indf2	equ	0xFDF
  9877                           fsr2h	equ	0xFDA
  9878                           fsr2l	equ	0xFD9
  9879                           status	equ	0xFD8
  9880                           
  9881 ;; *************** function ___lbdiv *****************
  9882 ;; Defined at:
  9883 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbdiv.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;  dividend        1    wreg     unsigned char 
  9886 ;;  divisor         1    0[BANK0 ] unsigned char 
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;  dividend        1    1[BANK0 ] unsigned char 
  9889 ;;  quotient        1    3[BANK0 ] unsigned char 
  9890 ;;  counter         1    2[BANK0 ] unsigned char 
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  1    wreg      unsigned char 
  9893 ;; Registers used:
  9894 ;;		wreg, status,2, status,0
  9895 ;; Tracked objects:
  9896 ;;		On entry : F/0
  9897 ;;		On exit  : F/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9900 ;;      Params:         0       1       0       0       0       0       0       0       0
  9901 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9903 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9904 ;;Total ram usage:        4 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:   11
  9907 ;; This function calls:
  9908 ;;		Nothing
  9909 ;; This function is called by:
  9910 ;;		_moteApp_add8bToDataBuffer
  9911 ;;		_oled_putUint8
  9912 ;; This function uses a non-reentrant model
  9913 ;;
  9914                           
  9915                           	psect	text19
  9916  003A0C                     __ptext19:
  9917                           	opt stack 0
  9918  003A0C                     ___lbdiv:
  9919                           	opt stack 16
  9920                           
  9921                           ; BSR set to: 0
  9922                           ;incstack = 0
  9923                           ;___lbdiv@dividend stored from wreg
  9924  003A0C  6FC9               	movwf	___lbdiv@dividend& (0+255),b
  9925  003A0E  0100               	movlb	0	; () banked
  9926  003A10  6BCB               	clrf	___lbdiv@quotient& (0+255),b
  9927                           
  9928                           ; BSR set to: 0
  9929  003A12  51C8               	movf	___lbdiv@divisor& (0+255),w,b
  9930  003A14  E014               	bz	l10143
  9931                           
  9932                           ; BSR set to: 0
  9933  003A16  0E01               	movlw	1
  9934  003A18  6FCA               	movwf	___lbdiv@counter& (0+255),b
  9935  003A1A  D003               	goto	l10131
  9936  003A1C                     l10127:
  9937                           
  9938                           ; BSR set to: 0
  9939  003A1C  90D8               	bcf	status,0,c
  9940  003A1E  37C8               	rlcf	___lbdiv@divisor& (0+255),f,b
  9941                           
  9942                           ; BSR set to: 0
  9943  003A20  2BCA               	incf	___lbdiv@counter& (0+255),f,b
  9944  003A22                     l10131:
  9945                           
  9946                           ; BSR set to: 0
  9947  003A22  AFC8               	btfss	___lbdiv@divisor& (0+255),7,b
  9948  003A24  D7FB               	goto	l10127
  9949  003A26                     l10133:
  9950                           
  9951                           ; BSR set to: 0
  9952  003A26  90D8               	bcf	status,0,c
  9953  003A28  37CB               	rlcf	___lbdiv@quotient& (0+255),f,b
  9954  003A2A  51C8               	movf	___lbdiv@divisor& (0+255),w,b
  9955  003A2C  5DC9               	subwf	___lbdiv@dividend& (0+255),w,b
  9956  003A2E  E303               	bnc	l10139
  9957                           
  9958                           ; BSR set to: 0
  9959  003A30  51C8               	movf	___lbdiv@divisor& (0+255),w,b
  9960  003A32  5FC9               	subwf	___lbdiv@dividend& (0+255),f,b
  9961                           
  9962                           ; BSR set to: 0
  9963  003A34  81CB               	bsf	___lbdiv@quotient& (0+255),0,b
  9964  003A36                     l10139:
  9965                           
  9966                           ; BSR set to: 0
  9967  003A36  90D8               	bcf	status,0,c
  9968  003A38  33C8               	rrcf	___lbdiv@divisor& (0+255),f,b
  9969                           
  9970                           ; BSR set to: 0
  9971  003A3A  2FCA               	decfsz	___lbdiv@counter& (0+255),f,b
  9972  003A3C  D7F4               	goto	l10133
  9973  003A3E                     l10143:
  9974                           
  9975                           ; BSR set to: 0
  9976  003A3E  51CB               	movf	___lbdiv@quotient& (0+255),w,b
  9977                           
  9978                           ; BSR set to: 0
  9979  003A40  0012               	return		;funcret
  9980  003A42                     __end_of___lbdiv:
  9981                           	opt stack 0
  9982                           tblptru	equ	0xFF8
  9983                           tblptrh	equ	0xFF7
  9984                           tblptrl	equ	0xFF6
  9985                           tablat	equ	0xFF5
  9986                           prodl	equ	0xFF3
  9987                           intcon	equ	0xFF2
  9988                           postinc0	equ	0xFEE
  9989                           wreg	equ	0xFE8
  9990                           postdec1	equ	0xFE5
  9991                           fsr1l	equ	0xFE1
  9992                           indf2	equ	0xFDF
  9993                           fsr2h	equ	0xFDA
  9994                           fsr2l	equ	0xFD9
  9995                           status	equ	0xFD8
  9996                           
  9997 ;; *************** function _moteApp_add16bToDataBuffer *****************
  9998 ;; Defined at:
  9999 ;;		line 1406 in file "../Includes/Board/MOTEapp.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  number          2    7[BANK0 ] unsigned int 
 10002 ;;  bufferLocati    1    9[BANK0 ] unsigned char 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;		None
 10005 ;; Return value:  Size  Location     Type
 10006 ;;		None               void
 10007 ;; Registers used:
 10008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10009 ;; Tracked objects:
 10010 ;;		On entry : F/0
 10011 ;;		On exit  : F/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10014 ;;      Params:         0       3       0       0       0       0       0       0       0
 10015 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10016 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10017 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10018 ;;Total ram usage:        3 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; Hardware stack levels required when called:   12
 10021 ;; This function calls:
 10022 ;;		___lwdiv
 10023 ;;		___lwmod
 10024 ;; This function is called by:
 10025 ;;		_moteRunningProcess
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           	psect	text20
 10030  0059C2                     __ptext20:
 10031                           	opt stack 0
 10032  0059C2                     _moteApp_add16bToDataBuffer:
 10033                           	opt stack 16
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;MOTEapp.c: 1408: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;incstack = 0
 10040  0059C2  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10041  0059C4  0FA2               	addlw	low (_dataBuffer+4)
 10042  0059C6  6ED9               	movwf	fsr2l,c
 10043  0059C8  6ADA               	clrf	fsr2h,c
 10044  0059CA  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10045  0059CE  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10046  0059D2  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10047  0059D4  0E0A               	movlw	10
 10048  0059D6  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10049  0059D8  ECB2  F01D         	call	___lwmod	;wreg free
 10050  0059DC  51C8               	movf	?___lwmod& (0+255),w,b
 10051  0059DE  0F30               	addlw	48
 10052  0059E0  6EDF               	movwf	indf2,c
 10053                           
 10054                           ; BSR set to: 0
 10055                           ;MOTEapp.c: 1409: number /= 10;
 10056  0059E2  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10057  0059E6  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10058  0059EA  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10059  0059EC  0E0A               	movlw	10
 10060  0059EE  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 10061  0059F0  EC3B  F01E         	call	___lwdiv	;wreg free
 10062  0059F4  C0C8  F0CF         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10063  0059F8  C0C9  F0D0         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;MOTEapp.c: 1410: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
 10067  0059FC  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10068  0059FE  0FA1               	addlw	low (_dataBuffer+3)
 10069  005A00  6ED9               	movwf	fsr2l,c
 10070  005A02  6ADA               	clrf	fsr2h,c
 10071  005A04  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10072  005A08  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10073  005A0C  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10074  005A0E  0E0A               	movlw	10
 10075  005A10  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10076  005A12  ECB2  F01D         	call	___lwmod	;wreg free
 10077  005A16  51C8               	movf	?___lwmod& (0+255),w,b
 10078  005A18  0F30               	addlw	48
 10079  005A1A  6EDF               	movwf	indf2,c
 10080                           
 10081                           ;MOTEapp.c: 1411: number /= 10;
 10082  005A1C  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10083  005A20  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10084  005A24  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10085  005A26  0E0A               	movlw	10
 10086  005A28  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 10087  005A2A  EC3B  F01E         	call	___lwdiv	;wreg free
 10088  005A2E  C0C8  F0CF         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10089  005A32  C0C9  F0D0         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;MOTEapp.c: 1412: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 10093  005A36  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10094  005A38  0FA0               	addlw	low (_dataBuffer+2)
 10095  005A3A  6ED9               	movwf	fsr2l,c
 10096  005A3C  6ADA               	clrf	fsr2h,c
 10097  005A3E  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10098  005A42  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10099  005A46  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10100  005A48  0E0A               	movlw	10
 10101  005A4A  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10102  005A4C  ECB2  F01D         	call	___lwmod	;wreg free
 10103  005A50  51C8               	movf	?___lwmod& (0+255),w,b
 10104  005A52  0F30               	addlw	48
 10105  005A54  6EDF               	movwf	indf2,c
 10106                           
 10107                           ; BSR set to: 0
 10108                           ;MOTEapp.c: 1413: number /= 10;
 10109  005A56  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10110  005A5A  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10111  005A5E  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10112  005A60  0E0A               	movlw	10
 10113  005A62  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 10114  005A64  EC3B  F01E         	call	___lwdiv	;wreg free
 10115  005A68  C0C8  F0CF         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10116  005A6C  C0C9  F0D0         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10117                           
 10118                           ;MOTEapp.c: 1414: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 10119  005A70  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10120  005A72  0F9F               	addlw	low (_dataBuffer+1)
 10121  005A74  6ED9               	movwf	fsr2l,c
 10122  005A76  6ADA               	clrf	fsr2h,c
 10123  005A78  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10124  005A7C  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10125  005A80  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10126  005A82  0E0A               	movlw	10
 10127  005A84  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10128  005A86  ECB2  F01D         	call	___lwmod	;wreg free
 10129  005A8A  51C8               	movf	?___lwmod& (0+255),w,b
 10130  005A8C  0F30               	addlw	48
 10131  005A8E  6EDF               	movwf	indf2,c
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;MOTEapp.c: 1415: number /= 10;
 10135  005A90  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10136  005A94  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10137  005A98  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10138  005A9A  0E0A               	movlw	10
 10139  005A9C  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 10140  005A9E  EC3B  F01E         	call	___lwdiv	;wreg free
 10141  005AA2  C0C8  F0CF         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10142  005AA6  C0C9  F0D0         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;MOTEapp.c: 1416: dataBuffer[bufferLocation] = '0' + (number % 10);
 10146  005AAA  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10147  005AAC  0F9E               	addlw	low _dataBuffer
 10148  005AAE  6ED9               	movwf	fsr2l,c
 10149  005AB0  6ADA               	clrf	fsr2h,c
 10150  005AB2  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10151  005AB6  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10152  005ABA  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10153  005ABC  0E0A               	movlw	10
 10154  005ABE  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10155  005AC0  ECB2  F01D         	call	___lwmod	;wreg free
 10156  005AC4  51C8               	movf	?___lwmod& (0+255),w,b
 10157  005AC6  0F30               	addlw	48
 10158  005AC8  6EDF               	movwf	indf2,c
 10159                           
 10160                           ; BSR set to: 0
 10161  005ACA  0012               	return		;funcret
 10162  005ACC                     __end_of_moteApp_add16bToDataBuffer:
 10163                           	opt stack 0
 10164                           tblptru	equ	0xFF8
 10165                           tblptrh	equ	0xFF7
 10166                           tblptrl	equ	0xFF6
 10167                           tablat	equ	0xFF5
 10168                           prodl	equ	0xFF3
 10169                           intcon	equ	0xFF2
 10170                           postinc0	equ	0xFEE
 10171                           wreg	equ	0xFE8
 10172                           postdec1	equ	0xFE5
 10173                           fsr1l	equ	0xFE1
 10174                           indf2	equ	0xFDF
 10175                           fsr2h	equ	0xFDA
 10176                           fsr2l	equ	0xFD9
 10177                           status	equ	0xFD8
 10178                           
 10179 ;; *************** function _moteApp_GoToSleep *****************
 10180 ;; Defined at:
 10181 ;;		line 1290 in file "../Includes/Board/MOTEapp.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;		None
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  status          1   15[BANK0 ] unsigned char 
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      unsigned char 
 10188 ;; Registers used:
 10189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10190 ;; Tracked objects:
 10191 ;;		On entry : F/0
 10192 ;;		On exit  : F/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10195 ;;      Params:         0       0       0       0       0       0       0       0       0
 10196 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10197 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10198 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10199 ;;Total ram usage:        1 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:   18
 10202 ;; This function calls:
 10203 ;;		_EUSART_FlushBuffer
 10204 ;;		_EUSART_Initialize
 10205 ;;		_PIN_MANAGER_Initialize
 10206 ;;		_modemResync
 10207 ;;		_modemSleep
 10208 ;;		_oled_displayOff
 10209 ;;		_oled_init
 10210 ;; This function is called by:
 10211 ;;		_moteRunningProcess
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215                           	psect	text21
 10216  004462                     __ptext21:
 10217                           	opt stack 0
 10218  004462                     _moteApp_GoToSleep:
 10219                           	opt stack 10
 10220  004462                     l695:
 10221                           
 10222                           ; BSR set to: 0
 10223  004462  A282               	btfss	3970,1,c	;volatile
 10224  004464  D7FE               	goto	l695
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;MOTEapp.c: 1294: modemSleep();
 10228  004466  EC18  F01B         	call	_modemSleep	;wreg free
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;MOTEapp.c: 1295: oled_displayOff(1);
 10232  00446A  0E01               	movlw	1
 10233  00446C  ECB8  F01A         	call	_oled_displayOff
 10234                           
 10235                           ;MOTEapp.c: 1296: ADCON0bits.ADON = 0;
 10236  004470  90C2               	bcf	4034,0,c	;volatile
 10237                           
 10238                           ;MOTEapp.c: 1297: INTCONbits.GIE = 0;
 10239  004472  9EF2               	bcf	intcon,7,c	;volatile
 10240                           
 10241                           ;MOTEapp.c: 1298: GIE = 0;
 10242  004474  9EF2               	bcf	intcon,7,c	;volatile
 10243                           
 10244                           ;MOTEapp.c: 1299: PEIE = 0;
 10245  004476  9CF2               	bcf	intcon,6,c	;volatile
 10246                           
 10247                           ;MOTEapp.c: 1301: ANSELAbits.ANSA0 = 1;
 10248  004478  010F               	movlb	15	; () banked
 10249  00447A  815B               	bsf	91,0,b	;volatile
 10250                           
 10251                           ; BSR set to: 15
 10252                           ;MOTEapp.c: 1303: PIE2bits.C1IE = 1;
 10253  00447C  8CA0               	bsf	4000,6,c	;volatile
 10254                           
 10255                           ; BSR set to: 15
 10256                           ;MOTEapp.c: 1304: IOCCbits.IOCC0 = 1;
 10257  00447E  8087               	bsf	3975,0,c	;volatile
 10258                           
 10259                           ; BSR set to: 15
 10260                           ;MOTEapp.c: 1305: IOCCbits.IOCC1 = 1;
 10261  004480  8287               	bsf	3975,1,c	;volatile
 10262                           
 10263                           ; BSR set to: 15
 10264                           ;MOTEapp.c: 1306: IOCCbits.IOCC2 = 1;
 10265  004482  8487               	bsf	3975,2,c	;volatile
 10266                           
 10267                           ; BSR set to: 15
 10268                           ;MOTEapp.c: 1307: INTCONbits.IOCIE = 1;
 10269  004484  86F2               	bsf	intcon,3,c	;volatile
 10270                           
 10271                           ; BSR set to: 15
 10272  004486  5082               	movf	3970,w,c	;volatile
 10273                           
 10274                           ; BSR set to: 15
 10275  004488  5082               	movf	3970,w,c	;volatile
 10276                           
 10277                           ; BSR set to: 15
 10278  00448A  5082               	movf	3970,w,c	;volatile
 10279                           
 10280                           ; BSR set to: 15
 10281                           ;MOTEapp.c: 1312: if (periodicState)
 10282  00448C  0100               	movlb	0	; () banked
 10283  00448E  51F9               	movf	_periodicState& (0+255),w,b
 10284  004490  E001               	bz	l698
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;MOTEapp.c: 1313: {
 10288                           ;MOTEapp.c: 1314: WDTCONbits.SWDTEN = 1;
 10289  004492  80D1               	bsf	4049,0,c	;volatile
 10290  004494                     l698:
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;MOTEapp.c: 1315: }
 10294                           ;MOTEapp.c: 1316: INTCONbits.IOCIF = 0;
 10295  004494  90F2               	bcf	intcon,0,c	;volatile
 10296                           
 10297                           ;MOTEapp.c: 1317: PIR2bits.C1IF = 0;
 10298  004496  9CA1               	bcf	4001,6,c	;volatile
 10299                           
 10300                           ;MOTEapp.c: 1318: __nop();
 10301  004498  F000               	nop	
 10302  00449A  0003               	sleep		;# 
 10303                           
 10304                           ;MOTEapp.c: 1320: __nop();
 10305  00449C  F000               	nop	
 10306                           
 10307                           ;MOTEapp.c: 1322: WDTCONbits.SWDTEN = 0;
 10308  00449E  90D1               	bcf	4049,0,c	;volatile
 10309                           
 10310                           ;MOTEapp.c: 1323: EUSART_FlushBuffer();
 10311  0044A0  ECA4  F01C         	call	_EUSART_FlushBuffer	;wreg free
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;MOTEapp.c: 1325: INTCONbits.IOCIE = 0;
 10315  0044A4  96F2               	bcf	intcon,3,c	;volatile
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;MOTEapp.c: 1326: IOCCbits.IOCC0 = 0;
 10319  0044A6  9087               	bcf	3975,0,c	;volatile
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;MOTEapp.c: 1327: IOCCbits.IOCC1 = 0;
 10323  0044A8  9287               	bcf	3975,1,c	;volatile
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;MOTEapp.c: 1328: IOCCbits.IOCC2 = 0;
 10327  0044AA  9487               	bcf	3975,2,c	;volatile
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;MOTEapp.c: 1329: PIE2bits.C1IE = 0;
 10331  0044AC  9CA0               	bcf	4000,6,c	;volatile
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;MOTEapp.c: 1330: GIE = 1;
 10335  0044AE  8EF2               	bsf	intcon,7,c	;volatile
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;MOTEapp.c: 1332: PIN_MANAGER_Initialize();
 10339  0044B0  ECF3  F01D         	call	_PIN_MANAGER_Initialize	;wreg free
 10340                           
 10341                           ; BSR set to: 15
 10342                           ;MOTEapp.c: 1333: EUSART_Initialize();
 10343  0044B4  EC62  F01C         	call	_EUSART_Initialize	;wreg free
 10344                           
 10345                           ;MOTEapp.c: 1335: if (INTCONbits.IOCIF)
 10346  0044B8  A0F2               	btfss	intcon,0,c	;volatile
 10347  0044BA  D005               	goto	l10529
 10348                           
 10349                           ;MOTEapp.c: 1336: {
 10350                           ;MOTEapp.c: 1337: INTCONbits.IOCIF = 0;
 10351  0044BC  90F2               	bcf	intcon,0,c	;volatile
 10352                           
 10353                           ;MOTEapp.c: 1338: status = 1;
 10354  0044BE  0E01               	movlw	1
 10355  0044C0  0100               	movlb	0	; () banked
 10356  0044C2  6FD7               	movwf	moteApp_GoToSleep@status& (0+255),b
 10357                           
 10358                           ;MOTEapp.c: 1339: }
 10359  0044C4  D004               	goto	l10533
 10360  0044C6                     l10529:
 10361                           
 10362                           ;MOTEapp.c: 1345: else
 10363                           ;MOTEapp.c: 1346: {
 10364                           ;MOTEapp.c: 1347: secTicker = 10;
 10365  0044C6  0E0A               	movlw	10
 10366  0044C8  0100               	movlb	0	; () banked
 10367  0044CA  6F99               	movwf	_secTicker& (0+255),b
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;MOTEapp.c: 1348: status = 0;
 10371  0044CC  6BD7               	clrf	moteApp_GoToSleep@status& (0+255),b
 10372  0044CE                     l10533:
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;MOTEapp.c: 1349: }
 10376                           ;MOTEapp.c: 1350: ANSELAbits.ANSA0 = 0;
 10377  0044CE  010F               	movlb	15	; () banked
 10378  0044D0  915B               	bcf	91,0,b	;volatile
 10379                           
 10380                           ; BSR set to: 15
 10381                           ;MOTEapp.c: 1351: oled_displayOff(0);
 10382  0044D2  0E00               	movlw	0
 10383  0044D4  ECB8  F01A         	call	_oled_displayOff
 10384                           
 10385                           ;MOTEapp.c: 1352: oled_init();
 10386  0044D8  EC85  F01B         	call	_oled_init	;wreg free
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;MOTEapp.c: 1354: modemResync();
 10390  0044DC  EC38  F020         	call	_modemResync	;wreg free
 10391                           
 10392                           ; BSR set to: 0
 10393                           ;MOTEapp.c: 1355: return status;
 10394  0044E0  51D7               	movf	moteApp_GoToSleep@status& (0+255),w,b
 10395                           
 10396                           ; BSR set to: 0
 10397  0044E2  0012               	return		;funcret
 10398  0044E4                     __end_of_moteApp_GoToSleep:
 10399                           	opt stack 0
 10400                           tblptru	equ	0xFF8
 10401                           tblptrh	equ	0xFF7
 10402                           tblptrl	equ	0xFF6
 10403                           tablat	equ	0xFF5
 10404                           prodl	equ	0xFF3
 10405                           intcon	equ	0xFF2
 10406                           postinc0	equ	0xFEE
 10407                           wreg	equ	0xFE8
 10408                           postdec1	equ	0xFE5
 10409                           fsr1l	equ	0xFE1
 10410                           indf2	equ	0xFDF
 10411                           fsr2h	equ	0xFDA
 10412                           fsr2l	equ	0xFD9
 10413                           status	equ	0xFD8
 10414                           
 10415 ;; *************** function _oled_init *****************
 10416 ;; Defined at:
 10417 ;;		line 308 in file "../Includes/Drivers/SSD1306oLED.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;		None
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;		None
 10422 ;; Return value:  Size  Location     Type
 10423 ;;		None               void
 10424 ;; Registers used:
 10425 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : F/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10431 ;;      Params:         0       0       0       0       0       0       0       0       0
 10432 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10433 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10434 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10435 ;;Total ram usage:        0 bytes
 10436 ;; Hardware stack levels used:    1
 10437 ;; Hardware stack levels required when called:   17
 10438 ;; This function calls:
 10439 ;;		_oled_clear
 10440 ;;		_oled_devInit
 10441 ;;		_oled_setDisplay
 10442 ;;		_oled_setFont
 10443 ;; This function is called by:
 10444 ;;		_main
 10445 ;;		_moteApp_GoToSleep
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449                           	psect	text22
 10450  00370A                     __ptext22:
 10451                           	opt stack 0
 10452  00370A                     _oled_init:
 10453                           	opt stack 13
 10454                           
 10455                           ;SSD1306oLED.c: 311: TRISBbits.TRISB2=0;
 10456                           
 10457                           ; BSR set to: 0
 10458                           ;incstack = 0
 10459  00370A  9493               	bcf	3987,2,c	;volatile
 10460                           
 10461                           ;SSD1306oLED.c: 312: TRISBbits.TRISB4=0;
 10462  00370C  9893               	bcf	3987,4,c	;volatile
 10463                           
 10464                           ;SSD1306oLED.c: 313: TRISBbits.TRISB5=0;
 10465  00370E  9A93               	bcf	3987,5,c	;volatile
 10466                           
 10467                           ;SSD1306oLED.c: 315: oled_devInit();
 10468  003710  EC23  F029         	call	_oled_devInit	;wreg free
 10469                           
 10470                           ;SSD1306oLED.c: 316: oled_setDisplay(Normal);
 10471  003714  0E00               	movlw	0
 10472  003716  ECDE  F01A         	call	_oled_setDisplay
 10473                           
 10474                           ;SSD1306oLED.c: 318: oled_setFont(OledFont0);
 10475  00371A  0E49               	movlw	low _OledFont0
 10476  00371C  0100               	movlb	0	; () banked
 10477  00371E  6FC8               	movwf	oled_setFont@font& (0+255),b
 10478  003720  0E76               	movlw	high _OledFont0
 10479  003722  6FC9               	movwf	(oled_setFont@font+1)& (0+255),b
 10480  003724  ECC1  F01A         	call	_oled_setFont	;wreg free
 10481                           
 10482                           ; BSR set to: 0
 10483                           ;SSD1306oLED.c: 319: oled_clear();
 10484  003728  EFFE  F01A         	goto	_oled_clear	;wreg free
 10485  00372C                     __end_of_oled_init:
 10486                           	opt stack 0
 10487                           tblptru	equ	0xFF8
 10488                           tblptrh	equ	0xFF7
 10489                           tblptrl	equ	0xFF6
 10490                           tablat	equ	0xFF5
 10491                           prodl	equ	0xFF3
 10492                           intcon	equ	0xFF2
 10493                           postinc0	equ	0xFEE
 10494                           wreg	equ	0xFE8
 10495                           postdec1	equ	0xFE5
 10496                           fsr1l	equ	0xFE1
 10497                           indf2	equ	0xFDF
 10498                           fsr2h	equ	0xFDA
 10499                           fsr2l	equ	0xFD9
 10500                           status	equ	0xFD8
 10501                           
 10502 ;; *************** function _oled_setFont *****************
 10503 ;; Defined at:
 10504 ;;		line 218 in file "../Includes/Drivers/SSD1306oLED.c"
 10505 ;; Parameters:    Size  Location     Type
 10506 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 10507 ;;		 -> OledFont0(768), 
 10508 ;; Auto vars:     Size  Location     Type
 10509 ;;		None
 10510 ;; Return value:  Size  Location     Type
 10511 ;;		None               void
 10512 ;; Registers used:
 10513 ;;		wreg, status,2, status,0
 10514 ;; Tracked objects:
 10515 ;;		On entry : F/0
 10516 ;;		On exit  : F/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10519 ;;      Params:         0       2       0       0       0       0       0       0       0
 10520 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10521 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10522 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10523 ;;Total ram usage:        2 bytes
 10524 ;; Hardware stack levels used:    1
 10525 ;; Hardware stack levels required when called:   11
 10526 ;; This function calls:
 10527 ;;		Nothing
 10528 ;; This function is called by:
 10529 ;;		_oled_init
 10530 ;; This function uses a non-reentrant model
 10531 ;;
 10532                           
 10533                           	psect	text23
 10534  003582                     __ptext23:
 10535                           	opt stack 0
 10536  003582                     _oled_setFont:
 10537                           	opt stack 18
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;SSD1306oLED.c: 220: if(font!=0)
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;incstack = 0
 10544  003582  51C8               	movf	oled_setFont@font& (0+255),w,b
 10545  003584  11C9               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 10546  003586  B4D8               	btfsc	status,2,c
 10547  003588  0012               	return	
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;SSD1306oLED.c: 221: {
 10551                           ;SSD1306oLED.c: 222: selectedFont=font;
 10552  00358A  C0C8  F0F5         	movff	oled_setFont@font,_selectedFont
 10553  00358E  C0C9  F0F6         	movff	oled_setFont@font+1,_selectedFont+1
 10554                           
 10555                           ; BSR set to: 0
 10556  003592  0012               	return		;funcret
 10557  003594                     __end_of_oled_setFont:
 10558                           	opt stack 0
 10559                           tblptru	equ	0xFF8
 10560                           tblptrh	equ	0xFF7
 10561                           tblptrl	equ	0xFF6
 10562                           tablat	equ	0xFF5
 10563                           prodl	equ	0xFF3
 10564                           intcon	equ	0xFF2
 10565                           postinc0	equ	0xFEE
 10566                           wreg	equ	0xFE8
 10567                           postdec1	equ	0xFE5
 10568                           fsr1l	equ	0xFE1
 10569                           indf2	equ	0xFDF
 10570                           fsr2h	equ	0xFDA
 10571                           fsr2l	equ	0xFD9
 10572                           status	equ	0xFD8
 10573                           
 10574 ;; *************** function _oled_setDisplay *****************
 10575 ;; Defined at:
 10576 ;;		line 383 in file "../Includes/Drivers/SSD1306oLED.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;  displayType     1    wreg     enum E6453
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;  displayType     1    2[BANK0 ] enum E6453
 10581 ;; Return value:  Size  Location     Type
 10582 ;;		None               void
 10583 ;; Registers used:
 10584 ;;		wreg, status,2, status,0, cstack
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10590 ;;      Params:         0       0       0       0       0       0       0       0       0
 10591 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10592 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10593 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10594 ;;Total ram usage:        1 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; Hardware stack levels required when called:   13
 10597 ;; This function calls:
 10598 ;;		_oled_writeCommand
 10599 ;; This function is called by:
 10600 ;;		_oled_init
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604                           	psect	text24
 10605  0035BC                     __ptext24:
 10606                           	opt stack 0
 10607  0035BC                     _oled_setDisplay:
 10608                           	opt stack 16
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;incstack = 0
 10612                           ;oled_setDisplay@displayType stored from wreg
 10613  0035BC  0100               	movlb	0	; () banked
 10614  0035BE  6FCA               	movwf	oled_setDisplay@displayType& (0+255),b
 10615                           
 10616                           ;SSD1306oLED.c: 385: displayType = 0xA6 + displayType;
 10617  0035C0  0EA6               	movlw	166
 10618  0035C2  27CA               	addwf	oled_setDisplay@displayType& (0+255),f,b
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;SSD1306oLED.c: 387: LATBbits.LATB4 = 0;
 10622  0035C4  988A               	bcf	3978,4,c	;volatile
 10623                           
 10624                           ; BSR set to: 0
 10625                           ;SSD1306oLED.c: 389: oled_writeCommand(displayType);
 10626  0035C6  51CA               	movf	oled_setDisplay@displayType& (0+255),w,b
 10627  0035C8  EC7F  F01A         	call	_oled_writeCommand
 10628                           
 10629                           ;SSD1306oLED.c: 391: LATBbits.LATB4 = 1;
 10630  0035CC  888A               	bsf	3978,4,c	;volatile
 10631  0035CE  0012               	return		;funcret
 10632  0035D0                     __end_of_oled_setDisplay:
 10633                           	opt stack 0
 10634                           tblptru	equ	0xFF8
 10635                           tblptrh	equ	0xFF7
 10636                           tblptrl	equ	0xFF6
 10637                           tablat	equ	0xFF5
 10638                           prodl	equ	0xFF3
 10639                           intcon	equ	0xFF2
 10640                           postinc0	equ	0xFEE
 10641                           wreg	equ	0xFE8
 10642                           postdec1	equ	0xFE5
 10643                           fsr1l	equ	0xFE1
 10644                           indf2	equ	0xFDF
 10645                           fsr2h	equ	0xFDA
 10646                           fsr2l	equ	0xFD9
 10647                           status	equ	0xFD8
 10648                           
 10649 ;; *************** function _oled_devInit *****************
 10650 ;; Defined at:
 10651 ;;		line 322 in file "../Includes/Drivers/SSD1306oLED.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;		None
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;		None
 10656 ;; Return value:  Size  Location     Type
 10657 ;;		None               void
 10658 ;; Registers used:
 10659 ;;		wreg, status,2, cstack
 10660 ;; Tracked objects:
 10661 ;;		On entry : 0/0
 10662 ;;		On exit  : 0/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10665 ;;      Params:         0       0       0       0       0       0       0       0       0
 10666 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10667 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10668 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10669 ;;Total ram usage:        1 bytes
 10670 ;; Hardware stack levels used:    1
 10671 ;; Hardware stack levels required when called:   13
 10672 ;; This function calls:
 10673 ;;		_oled_writeCommand
 10674 ;; This function is called by:
 10675 ;;		_oled_init
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679                           	psect	text25
 10680  005246                     __ptext25:
 10681                           	opt stack 0
 10682  005246                     _oled_devInit:
 10683                           	opt stack 16
 10684                           
 10685                           ;SSD1306oLED.c: 324: LATBbits.LATB4 = 1;
 10686                           
 10687                           ;incstack = 0
 10688  005246  888A               	bsf	3978,4,c	;volatile
 10689                           
 10690                           ;SSD1306oLED.c: 326: LATBbits.LATB5 = 1;
 10691  005248  8A8A               	bsf	3978,5,c	;volatile
 10692                           
 10693                           ;SSD1306oLED.c: 330: LATBbits.LATB2 = 1;
 10694  00524A  848A               	bsf	3978,2,c	;volatile
 10695                           
 10696                           ;SSD1306oLED.c: 331: _delay((unsigned long)((20)*(48000000/4000000.0)));
 10697  00524C  0E50               	movlw	80
 10698  00524E                     u10557:
 10699  00524E  2EE8               	decfsz	wreg,f,c
 10700  005250  D7FE               	goto	u10557
 10701                           
 10702                           ;SSD1306oLED.c: 332: LATBbits.LATB2 = 0;
 10703  005252  948A               	bcf	3978,2,c	;volatile
 10704                           
 10705                           ;SSD1306oLED.c: 333: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10706  005254  0E04               	movlw	4
 10707  005256  0100               	movlb	0	; () banked
 10708  005258  6FCA               	movwf	??_oled_devInit& (0+255),b
 10709  00525A  0E1C               	movlw	28
 10710  00525C                     u10567:
 10711  00525C  2EE8               	decfsz	wreg,f,c
 10712  00525E  D7FE               	goto	u10567
 10713  005260  2FCA               	decfsz	??_oled_devInit& (0+255),f,b
 10714  005262  D7FC               	goto	u10567
 10715  005264  D000               	nop2	
 10716                           
 10717                           ;SSD1306oLED.c: 334: LATBbits.LATB2 = 1;
 10718  005266  848A               	bsf	3978,2,c	;volatile
 10719                           
 10720                           ;SSD1306oLED.c: 336: LATBbits.LATB4 = 0;
 10721  005268  988A               	bcf	3978,4,c	;volatile
 10722                           
 10723                           ;SSD1306oLED.c: 337: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10724  00526A  0E04               	movlw	4
 10725  00526C  0100               	movlb	0	; () banked
 10726  00526E  6FCA               	movwf	??_oled_devInit& (0+255),b
 10727  005270  0E1C               	movlw	28
 10728  005272                     u10577:
 10729  005272  2EE8               	decfsz	wreg,f,c
 10730  005274  D7FE               	goto	u10577
 10731  005276  2FCA               	decfsz	??_oled_devInit& (0+255),f,b
 10732  005278  D7FC               	goto	u10577
 10733  00527A  D000               	nop2	
 10734                           
 10735                           ;SSD1306oLED.c: 338: LATBbits.LATB5 = 0;
 10736  00527C  9A8A               	bcf	3978,5,c	;volatile
 10737                           
 10738                           ;SSD1306oLED.c: 339: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10739  00527E  0E04               	movlw	4
 10740  005280  0100               	movlb	0	; () banked
 10741  005282  6FCA               	movwf	??_oled_devInit& (0+255),b
 10742  005284  0E1C               	movlw	28
 10743  005286                     u10587:
 10744  005286  2EE8               	decfsz	wreg,f,c
 10745  005288  D7FE               	goto	u10587
 10746  00528A  2FCA               	decfsz	??_oled_devInit& (0+255),f,b
 10747  00528C  D7FC               	goto	u10587
 10748  00528E  D000               	nop2	
 10749                           
 10750                           ;SSD1306oLED.c: 342: oled_writeCommand(0xAE);
 10751  005290  0EAE               	movlw	174
 10752  005292  EC7F  F01A         	call	_oled_writeCommand
 10753                           
 10754                           ;SSD1306oLED.c: 344: oled_writeCommand(0xD5);
 10755  005296  0ED5               	movlw	213
 10756  005298  EC7F  F01A         	call	_oled_writeCommand
 10757                           
 10758                           ;SSD1306oLED.c: 345: oled_writeCommand(0x80);
 10759  00529C  0E80               	movlw	128
 10760  00529E  EC7F  F01A         	call	_oled_writeCommand
 10761                           
 10762                           ;SSD1306oLED.c: 347: oled_writeCommand(0xA8);
 10763  0052A2  0EA8               	movlw	168
 10764  0052A4  EC7F  F01A         	call	_oled_writeCommand
 10765                           
 10766                           ;SSD1306oLED.c: 348: oled_writeCommand(0x1F);
 10767  0052A8  0E1F               	movlw	31
 10768  0052AA  EC7F  F01A         	call	_oled_writeCommand
 10769                           
 10770                           ;SSD1306oLED.c: 350: oled_writeCommand(0xD3);
 10771  0052AE  0ED3               	movlw	211
 10772  0052B0  EC7F  F01A         	call	_oled_writeCommand
 10773                           
 10774                           ;SSD1306oLED.c: 351: oled_writeCommand(0x00);
 10775  0052B4  0E00               	movlw	0
 10776  0052B6  EC7F  F01A         	call	_oled_writeCommand
 10777                           
 10778                           ;SSD1306oLED.c: 353: oled_writeCommand(0x8D);
 10779  0052BA  0E8D               	movlw	141
 10780  0052BC  EC7F  F01A         	call	_oled_writeCommand
 10781                           
 10782                           ;SSD1306oLED.c: 354: oled_writeCommand(0x14);
 10783  0052C0  0E14               	movlw	20
 10784  0052C2  EC7F  F01A         	call	_oled_writeCommand
 10785                           
 10786                           ;SSD1306oLED.c: 356: oled_writeCommand(0x40);
 10787  0052C6  0E40               	movlw	64
 10788  0052C8  EC7F  F01A         	call	_oled_writeCommand
 10789                           
 10790                           ;SSD1306oLED.c: 358: oled_writeCommand(0xA6);
 10791  0052CC  0EA6               	movlw	166
 10792  0052CE  EC7F  F01A         	call	_oled_writeCommand
 10793                           
 10794                           ;SSD1306oLED.c: 360: oled_writeCommand(0xA4);
 10795  0052D2  0EA4               	movlw	164
 10796  0052D4  EC7F  F01A         	call	_oled_writeCommand
 10797                           
 10798                           ;SSD1306oLED.c: 362: oled_writeCommand(0xA0);
 10799  0052D8  0EA0               	movlw	160
 10800  0052DA  EC7F  F01A         	call	_oled_writeCommand
 10801                           
 10802                           ;SSD1306oLED.c: 364: oled_writeCommand(0xC0);
 10803  0052DE  0EC0               	movlw	192
 10804  0052E0  EC7F  F01A         	call	_oled_writeCommand
 10805                           
 10806                           ;SSD1306oLED.c: 366: oled_writeCommand(0xDA);
 10807  0052E4  0EDA               	movlw	218
 10808  0052E6  EC7F  F01A         	call	_oled_writeCommand
 10809                           
 10810                           ;SSD1306oLED.c: 367: oled_writeCommand(0x42);
 10811  0052EA  0E42               	movlw	66
 10812  0052EC  EC7F  F01A         	call	_oled_writeCommand
 10813                           
 10814                           ;SSD1306oLED.c: 369: oled_writeCommand(0x81);
 10815  0052F0  0E81               	movlw	129
 10816  0052F2  EC7F  F01A         	call	_oled_writeCommand
 10817                           
 10818                           ;SSD1306oLED.c: 370: oled_writeCommand(0x7F);
 10819  0052F6  0E7F               	movlw	127
 10820  0052F8  EC7F  F01A         	call	_oled_writeCommand
 10821                           
 10822                           ;SSD1306oLED.c: 372: oled_writeCommand(0xD9);
 10823  0052FC  0ED9               	movlw	217
 10824  0052FE  EC7F  F01A         	call	_oled_writeCommand
 10825                           
 10826                           ;SSD1306oLED.c: 373: oled_writeCommand(0xF1);
 10827  005302  0EF1               	movlw	241
 10828  005304  EC7F  F01A         	call	_oled_writeCommand
 10829                           
 10830                           ;SSD1306oLED.c: 375: oled_writeCommand(0xDB);
 10831  005308  0EDB               	movlw	219
 10832  00530A  EC7F  F01A         	call	_oled_writeCommand
 10833                           
 10834                           ;SSD1306oLED.c: 376: oled_writeCommand(0x40);
 10835  00530E  0E40               	movlw	64
 10836  005310  EC7F  F01A         	call	_oled_writeCommand
 10837                           
 10838                           ;SSD1306oLED.c: 378: oled_writeCommand(0xAF);
 10839  005314  0EAF               	movlw	175
 10840  005316  EC7F  F01A         	call	_oled_writeCommand
 10841                           
 10842                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 1;
 10843  00531A  888A               	bsf	3978,4,c	;volatile
 10844  00531C  0012               	return		;funcret
 10845  00531E                     __end_of_oled_devInit:
 10846                           	opt stack 0
 10847                           tblptru	equ	0xFF8
 10848                           tblptrh	equ	0xFF7
 10849                           tblptrl	equ	0xFF6
 10850                           tablat	equ	0xFF5
 10851                           prodl	equ	0xFF3
 10852                           intcon	equ	0xFF2
 10853                           postinc0	equ	0xFEE
 10854                           wreg	equ	0xFE8
 10855                           postdec1	equ	0xFE5
 10856                           fsr1l	equ	0xFE1
 10857                           indf2	equ	0xFDF
 10858                           fsr2h	equ	0xFDA
 10859                           fsr2l	equ	0xFD9
 10860                           status	equ	0xFD8
 10861                           
 10862 ;; *************** function _oled_displayOff *****************
 10863 ;; Defined at:
 10864 ;;		line 394 in file "../Includes/Drivers/SSD1306oLED.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;  state           1    wreg     unsigned char 
 10867 ;; Auto vars:     Size  Location     Type
 10868 ;;  state           1    2[BANK0 ] unsigned char 
 10869 ;; Return value:  Size  Location     Type
 10870 ;;		None               void
 10871 ;; Registers used:
 10872 ;;		wreg, status,2, status,0, cstack
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10878 ;;      Params:         0       0       0       0       0       0       0       0       0
 10879 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10880 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10881 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10882 ;;Total ram usage:        1 bytes
 10883 ;; Hardware stack levels used:    1
 10884 ;; Hardware stack levels required when called:   13
 10885 ;; This function calls:
 10886 ;;		_oled_writeCommand
 10887 ;; This function is called by:
 10888 ;;		_moteApp_GoToSleep
 10889 ;; This function uses a non-reentrant model
 10890 ;;
 10891                           
 10892                           	psect	text26
 10893  003570                     __ptext26:
 10894                           	opt stack 0
 10895  003570                     _oled_displayOff:
 10896                           	opt stack 14
 10897                           
 10898                           ;incstack = 0
 10899                           ;oled_displayOff@state stored from wreg
 10900  003570  0100               	movlb	0	; () banked
 10901  003572  6FCA               	movwf	oled_displayOff@state& (0+255),b
 10902                           
 10903                           ;SSD1306oLED.c: 396: LATBbits.LATB4 = 0;
 10904  003574  988A               	bcf	3978,4,c	;volatile
 10905                           
 10906                           ;SSD1306oLED.c: 397: oled_writeCommand(0xAF - state);
 10907  003576  51CA               	movf	oled_displayOff@state& (0+255),w,b
 10908  003578  08AF               	sublw	175
 10909  00357A  EC7F  F01A         	call	_oled_writeCommand
 10910                           
 10911                           ;SSD1306oLED.c: 398: LATBbits.LATB4 = 1;
 10912  00357E  888A               	bsf	3978,4,c	;volatile
 10913  003580  0012               	return		;funcret
 10914  003582                     __end_of_oled_displayOff:
 10915                           	opt stack 0
 10916                           tblptru	equ	0xFF8
 10917                           tblptrh	equ	0xFF7
 10918                           tblptrl	equ	0xFF6
 10919                           tablat	equ	0xFF5
 10920                           prodl	equ	0xFF3
 10921                           intcon	equ	0xFF2
 10922                           postinc0	equ	0xFEE
 10923                           wreg	equ	0xFE8
 10924                           postdec1	equ	0xFE5
 10925                           fsr1l	equ	0xFE1
 10926                           indf2	equ	0xFDF
 10927                           fsr2h	equ	0xFDA
 10928                           fsr2l	equ	0xFD9
 10929                           status	equ	0xFD8
 10930                           
 10931 ;; *************** function _modemSleep *****************
 10932 ;; Defined at:
 10933 ;;		line 146 in file "../Includes/Board/MOTEapp.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;		None
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;		None
 10938 ;; Return value:  Size  Location     Type
 10939 ;;		None               void
 10940 ;; Registers used:
 10941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10942 ;; Tracked objects:
 10943 ;;		On entry : F/0
 10944 ;;		On exit  : F/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10947 ;;      Params:         0       0       0       0       0       0       0       0       0
 10948 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10949 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10950 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10951 ;;Total ram usage:        0 bytes
 10952 ;; Hardware stack levels used:    1
 10953 ;; Hardware stack levels required when called:   14
 10954 ;; This function calls:
 10955 ;;		_moteApp_delayms
 10956 ;;		_sendCommand
 10957 ;; This function is called by:
 10958 ;;		_moteApp_GoToSleep
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           	psect	text27
 10963  003630                     __ptext27:
 10964                           	opt stack 0
 10965  003630                     _modemSleep:
 10966                           	opt stack 13
 10967                           
 10968                           ; BSR set to: 0
 10969                           ;MOTEapp.c: 148: sendCommand("sys sleep 999999999");
 10970                           
 10971                           ;incstack = 0
 10972  003630  0E72               	movlw	low STR_22
 10973  003632  6FC9               	movwf	sendCommand@string& (0+255),b
 10974  003634  0E7A               	movlw	high STR_22
 10975  003636  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 10976  003638  EC37  F01C         	call	_sendCommand	;wreg free
 10977  00363C                     l310:
 10978  00363C  B89D               	btfsc	3997,4,c	;volatile
 10979  00363E  D7FE               	goto	l310
 10980                           
 10981                           ;MOTEapp.c: 151: moteApp_delayms(20);
 10982  003640  0100               	movlb	0	; () banked
 10983  003642  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 10984  003644  0E14               	movlw	20
 10985  003646  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 10986  003648  EFD1  F01B         	goto	_moteApp_delayms	;wreg free
 10987  00364C                     __end_of_modemSleep:
 10988                           	opt stack 0
 10989                           tblptru	equ	0xFF8
 10990                           tblptrh	equ	0xFF7
 10991                           tblptrl	equ	0xFF6
 10992                           tablat	equ	0xFF5
 10993                           prodl	equ	0xFF3
 10994                           intcon	equ	0xFF2
 10995                           postinc0	equ	0xFEE
 10996                           wreg	equ	0xFE8
 10997                           postdec1	equ	0xFE5
 10998                           fsr1l	equ	0xFE1
 10999                           indf2	equ	0xFDF
 11000                           fsr2h	equ	0xFDA
 11001                           fsr2l	equ	0xFD9
 11002                           status	equ	0xFD8
 11003                           
 11004 ;; *************** function _modemResync *****************
 11005 ;; Defined at:
 11006 ;;		line 109 in file "../Includes/Board/MOTEapp.c"
 11007 ;; Parameters:    Size  Location     Type
 11008 ;;		None
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 11011 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 11012 ;; Return value:  Size  Location     Type
 11013 ;;		None               void
 11014 ;; Registers used:
 11015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11016 ;; Tracked objects:
 11017 ;;		On entry : F/0
 11018 ;;		On exit  : F/0
 11019 ;;		Unchanged: 0/0
 11020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11021 ;;      Params:         0       0       0       0       0       0       0       0       0
 11022 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11024 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11025 ;;Total ram usage:        3 bytes
 11026 ;; Hardware stack levels used:    1
 11027 ;; Hardware stack levels required when called:   14
 11028 ;; This function calls:
 11029 ;;		_MOTEapp_getModemResponse
 11030 ;;		_moteApp_delayms
 11031 ;;		_sendCommand
 11032 ;; This function is called by:
 11033 ;;		_main
 11034 ;;		_moteApp_GoToSleep
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text28
 11039  004070                     __ptext28:
 11040                           	opt stack 0
 11041  004070                     _modemResync:
 11042                           	opt stack 13
 11043                           
 11044                           ; BSR set to: 0
 11045                           ;MOTEapp.c: 111: bool escapeEvent = 0;
 11046                           
 11047                           ; BSR set to: 0
 11048                           ;incstack = 0
 11049  004070  6BCF               	clrf	modemResync@escapeEvent& (0+255),b
 11050                           
 11051                           ;MOTEapp.c: 112: uint16_t escapeCounter = 0;
 11052  004072  6BCD               	clrf	modemResync@escapeCounter& (0+255),b
 11053  004074  6BCE               	clrf	(modemResync@escapeCounter+1)& (0+255),b
 11054                           
 11055                           ;MOTEapp.c: 120: TXSTAbits.TXEN = 0;
 11056  004076  9AAC               	bcf	4012,5,c	;volatile
 11057                           
 11058                           ;MOTEapp.c: 121: LATCbits.LATC6 = 0;
 11059  004078  9C8B               	bcf	3979,6,c	;volatile
 11060                           
 11061                           ; BSR set to: 0
 11062                           ;MOTEapp.c: 122: moteApp_delayms(10);
 11063  00407A  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11064  00407C  0E0A               	movlw	10
 11065  00407E  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11066  004080  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;MOTEapp.c: 127: TXSTAbits.TXEN = 1;
 11070  004084  8AAC               	bsf	4012,5,c	;volatile
 11071                           
 11072                           ;MOTEapp.c: 128: moteApp_delayms(5);
 11073  004086  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11074  004088  0E05               	movlw	5
 11075  00408A  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11076  00408C  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 11077                           
 11078                           ; BSR set to: 0
 11079                           ;MOTEapp.c: 130: TXREG = 0x55;
 11080  004090  0E55               	movlw	85
 11081  004092  6EAD               	movwf	4013,c	;volatile
 11082  004094                     l298:
 11083                           
 11084                           ; BSR set to: 0
 11085  004094  A2AC               	btfss	4012,1,c	;volatile
 11086  004096  D7FE               	goto	l298
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;MOTEapp.c: 134: sendCommand("z");
 11090  004098  0EFD               	movlw	low STR_21
 11091  00409A  6FC9               	movwf	sendCommand@string& (0+255),b
 11092  00409C  0E7F               	movlw	high STR_21
 11093  00409E  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 11094  0040A0  EC37  F01C         	call	_sendCommand	;wreg free
 11095                           
 11096                           ;MOTEapp.c: 136: moteApp_delayms(40);
 11097  0040A4  0100               	movlb	0	; () banked
 11098  0040A6  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11099  0040A8  0E28               	movlw	40
 11100  0040AA  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11101  0040AC  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 11102                           
 11103                           ;MOTEapp.c: 137: while (escapeEvent)
 11104  0040B0  D00E               	goto	l301
 11105  0040B2                     l10003:
 11106                           
 11107                           ; BSR set to: 0
 11108                           ;MOTEapp.c: 138: {
 11109                           ;MOTEapp.c: 139: if(MOTEapp_getModemResponse())
 11110  0040B2  EC60  F01E         	call	_MOTEapp_getModemResponse	;wreg free
 11111  0040B6  0900               	iorlw	0
 11112  0040B8  E003               	bz	l10007
 11113  0040BA                     l10005:
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;MOTEapp.c: 140: escapeEvent = 1;
 11117  0040BA  0E01               	movlw	1
 11118  0040BC  6FCF               	movwf	modemResync@escapeEvent& (0+255),b
 11119  0040BE  D007               	goto	l301
 11120  0040C0                     l10007:
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;MOTEapp.c: 141: else if (++escapeCounter > 5000)
 11124  0040C0  4BCD               	infsnz	modemResync@escapeCounter& (0+255),f,b
 11125  0040C2  2BCE               	incf	(modemResync@escapeCounter+1)& (0+255),f,b
 11126  0040C4  0E89               	movlw	137
 11127  0040C6  5DCD               	subwf	modemResync@escapeCounter& (0+255),w,b
 11128  0040C8  0E13               	movlw	19
 11129  0040CA  59CE               	subwfb	(modemResync@escapeCounter+1)& (0+255),w,b
 11130  0040CC  E2F6               	bc	l10005
 11131  0040CE                     l301:
 11132                           
 11133                           ; BSR set to: 0
 11134  0040CE  51CF               	movf	modemResync@escapeEvent& (0+255),w,b
 11135  0040D0  E1F0               	bnz	l10003
 11136                           
 11137                           ; BSR set to: 0
 11138  0040D2  0012               	return		;funcret
 11139  0040D4                     __end_of_modemResync:
 11140                           	opt stack 0
 11141                           tblptru	equ	0xFF8
 11142                           tblptrh	equ	0xFF7
 11143                           tblptrl	equ	0xFF6
 11144                           tablat	equ	0xFF5
 11145                           prodl	equ	0xFF3
 11146                           intcon	equ	0xFF2
 11147                           postinc0	equ	0xFEE
 11148                           wreg	equ	0xFE8
 11149                           postdec1	equ	0xFE5
 11150                           fsr1l	equ	0xFE1
 11151                           indf2	equ	0xFDF
 11152                           fsr2h	equ	0xFDA
 11153                           fsr2l	equ	0xFD9
 11154                           status	equ	0xFD8
 11155                           
 11156 ;; *************** function _MOTEapp_getModemResponse *****************
 11157 ;; Defined at:
 11158 ;;		line 1190 in file "../Includes/Board/MOTEapp.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;		None
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 11163 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 11164 ;; Return value:  Size  Location     Type
 11165 ;;                  1    wreg      unsigned char 
 11166 ;; Registers used:
 11167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11168 ;; Tracked objects:
 11169 ;;		On entry : E/1
 11170 ;;		On exit  : F/0
 11171 ;;		Unchanged: 0/0
 11172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11173 ;;      Params:         0       0       0       0       0       0       0       0       0
 11174 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11175 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11176 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11177 ;;Total ram usage:        2 bytes
 11178 ;; Hardware stack levels used:    1
 11179 ;; Hardware stack levels required when called:   12
 11180 ;; This function calls:
 11181 ;;		_EUSART_Read
 11182 ;; This function is called by:
 11183 ;;		_modemResync
 11184 ;;		_moteHandler
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           	psect	text29
 11189  003CC0                     __ptext29:
 11190                           	opt stack 0
 11191  003CC0                     _MOTEapp_getModemResponse:
 11192                           	opt stack 14
 11193                           
 11194                           ;MOTEapp.c: 1192: bool terminatorReceived = 0;
 11195                           
 11196                           ; BSR set to: 0
 11197                           ;incstack = 0
 11198  003CC0  0100               	movlb	0	; () banked
 11199  003CC2  6BC9               	clrf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;MOTEapp.c: 1193: if ((eusartRxCount))
 11203  003CC4  5023               	movf	_eusartRxCount,w,c	;volatile
 11204  003CC6  E01F               	bz	l9905
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;MOTEapp.c: 1196: bufferByte = EUSART_Read();
 11208                           
 11209                           ; BSR set to: 0
 11210  003CC8  ECBA  F01C         	call	_EUSART_Read	;wreg free
 11211  003CCC  6FCA               	movwf	MOTEapp_getModemResponse@bufferByte& (0+255),b
 11212                           
 11213                           ; BSR set to: 0
 11214                           ;MOTEapp.c: 1198: if (bufferByte == 0x0D)
 11215  003CCE  0E0D               	movlw	13
 11216  003CD0  19CA               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 11217  003CD2  E10B               	bnz	l9897
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;MOTEapp.c: 1199: {
 11221                           ;MOTEapp.c: 1200: modemResonseBuffer[modemBufferIndex] = 0x00;
 11222  003CD4  0E80               	movlw	low _modemResonseBuffer
 11223  003CD6  2429               	addwf	_modemBufferIndex,w,c
 11224  003CD8  6ED9               	movwf	fsr2l,c
 11225  003CDA  6ADA               	clrf	fsr2h,c
 11226  003CDC  0E01               	movlw	high _modemResonseBuffer
 11227  003CDE  22DA               	addwfc	fsr2h,f,c
 11228  003CE0  6ADF               	clrf	indf2,c
 11229                           
 11230                           ; BSR set to: 0
 11231                           ;MOTEapp.c: 1201: terminatorReceived = 1;
 11232  003CE2  0E01               	movlw	1
 11233  003CE4  6FC9               	movwf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
 11234                           
 11235                           ; BSR set to: 0
 11236                           ;MOTEapp.c: 1202: modemBufferIndex = 0;
 11237  003CE6  6A29               	clrf	_modemBufferIndex,c
 11238                           
 11239                           ;MOTEapp.c: 1203: }
 11240  003CE8  D00E               	goto	l9905
 11241  003CEA                     l9897:
 11242                           
 11243                           ; BSR set to: 0
 11244                           ;MOTEapp.c: 1204: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 11245  003CEA  51CA               	movf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 11246  003CEC  E00C               	bz	l9905
 11247                           
 11248                           ; BSR set to: 0
 11249  003CEE  0E0A               	movlw	10
 11250  003CF0  19CA               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 11251  003CF2  E009               	bz	l9905
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;MOTEapp.c: 1208: else
 11255                           ;MOTEapp.c: 1209: {
 11256                           ;MOTEapp.c: 1210: modemResonseBuffer[modemBufferIndex] = bufferByte;
 11257  003CF4  0E80               	movlw	low _modemResonseBuffer
 11258  003CF6  2429               	addwf	_modemBufferIndex,w,c
 11259  003CF8  6ED9               	movwf	fsr2l,c
 11260  003CFA  6ADA               	clrf	fsr2h,c
 11261  003CFC  0E01               	movlw	high _modemResonseBuffer
 11262  003CFE  22DA               	addwfc	fsr2h,f,c
 11263  003D00  C0CA  FFDF         	movff	MOTEapp_getModemResponse@bufferByte,indf2
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;MOTEapp.c: 1212: modemBufferIndex++;
 11267  003D04  2A29               	incf	_modemBufferIndex,f,c
 11268  003D06                     l9905:
 11269                           
 11270                           ; BSR set to: 0
 11271                           ;MOTEapp.c: 1213: }
 11272                           ;MOTEapp.c: 1214: }
 11273                           ;MOTEapp.c: 1215: return terminatorReceived;
 11274  003D06  51C9               	movf	MOTEapp_getModemResponse@terminatorReceived& (0+255),w,b
 11275                           
 11276                           ; BSR set to: 0
 11277  003D08  0012               	return		;funcret
 11278  003D0A                     __end_of_MOTEapp_getModemResponse:
 11279                           	opt stack 0
 11280                           tblptru	equ	0xFF8
 11281                           tblptrh	equ	0xFF7
 11282                           tblptrl	equ	0xFF6
 11283                           tablat	equ	0xFF5
 11284                           prodl	equ	0xFF3
 11285                           intcon	equ	0xFF2
 11286                           postinc0	equ	0xFEE
 11287                           wreg	equ	0xFE8
 11288                           postdec1	equ	0xFE5
 11289                           fsr1l	equ	0xFE1
 11290                           indf2	equ	0xFDF
 11291                           fsr2h	equ	0xFDA
 11292                           fsr2l	equ	0xFD9
 11293                           status	equ	0xFD8
 11294                           
 11295 ;; *************** function _EUSART_FlushBuffer *****************
 11296 ;; Defined at:
 11297 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 11298 ;; Parameters:    Size  Location     Type
 11299 ;;		None
 11300 ;; Auto vars:     Size  Location     Type
 11301 ;;  index           1    0[BANK0 ] unsigned char 
 11302 ;; Return value:  Size  Location     Type
 11303 ;;		None               void
 11304 ;; Registers used:
 11305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11306 ;; Tracked objects:
 11307 ;;		On entry : 0/0
 11308 ;;		On exit  : F/0
 11309 ;;		Unchanged: 0/0
 11310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11311 ;;      Params:         0       0       0       0       0       0       0       0       0
 11312 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11313 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11314 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11315 ;;Total ram usage:        1 bytes
 11316 ;; Hardware stack levels used:    1
 11317 ;; Hardware stack levels required when called:   11
 11318 ;; This function calls:
 11319 ;;		Nothing
 11320 ;; This function is called by:
 11321 ;;		_moteApp_GoToSleep
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           	psect	text30
 11326  003948                     __ptext30:
 11327                           	opt stack 0
 11328  003948                     _EUSART_FlushBuffer:
 11329                           	opt stack 16
 11330                           
 11331                           ;eusart.c: 204: uint8_t index;
 11332                           ;eusart.c: 205: for (index=0; index < 64; index++)
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;incstack = 0
 11336  003948  0100               	movlb	0	; () banked
 11337  00394A  6BC8               	clrf	EUSART_FlushBuffer@index& (0+255),b
 11338  00394C                     l10065:
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;eusart.c: 206: {
 11342                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 11343  00394C  0E00               	movlw	low _eusartRxBuffer
 11344  00394E  25C8               	addwf	EUSART_FlushBuffer@index& (0+255),w,b
 11345  003950  6ED9               	movwf	fsr2l,c
 11346  003952  6ADA               	clrf	fsr2h,c
 11347  003954  0E01               	movlw	high _eusartRxBuffer
 11348  003956  22DA               	addwfc	fsr2h,f,c
 11349  003958  6ADF               	clrf	indf2,c
 11350                           
 11351                           ; BSR set to: 0
 11352  00395A  2BC8               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 11353                           
 11354                           ; BSR set to: 0
 11355  00395C  0E3F               	movlw	63
 11356  00395E  65C8               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 11357  003960  D7F5               	goto	l10065
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;eusart.c: 208: }
 11361                           ;eusart.c: 209: eusartRxHead = 0;
 11362  003962  6A24               	clrf	_eusartRxHead,c
 11363                           
 11364                           ;eusart.c: 210: eusartRxTail = 0;
 11365  003964  6A25               	clrf	_eusartRxTail,c
 11366                           
 11367                           ;eusart.c: 211: eusartRxCount = 0;
 11368  003966  6A23               	clrf	_eusartRxCount,c	;volatile
 11369                           
 11370                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 11371  003968  989D               	bcf	3997,4,c	;volatile
 11372                           
 11373                           ;eusart.c: 214: eusartTxHead = 0;
 11374  00396A  6A27               	clrf	_eusartTxHead,c
 11375                           
 11376                           ;eusart.c: 215: eusartTxTail = 0;
 11377  00396C  6A28               	clrf	_eusartTxTail,c
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 11381  00396E  0E40               	movlw	64
 11382  003970  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 11383                           
 11384                           ; BSR set to: 0
 11385  003972  0C40               	retlw	64	;funcret
 11386  003974                     __end_of_EUSART_FlushBuffer:
 11387                           	opt stack 0
 11388                           tblptru	equ	0xFF8
 11389                           tblptrh	equ	0xFF7
 11390                           tblptrl	equ	0xFF6
 11391                           tablat	equ	0xFF5
 11392                           prodl	equ	0xFF3
 11393                           intcon	equ	0xFF2
 11394                           postinc0	equ	0xFEE
 11395                           wreg	equ	0xFE8
 11396                           postdec1	equ	0xFE5
 11397                           fsr1l	equ	0xFE1
 11398                           indf2	equ	0xFDF
 11399                           fsr2h	equ	0xFDA
 11400                           fsr2l	equ	0xFD9
 11401                           status	equ	0xFD8
 11402                           
 11403 ;; *************** function _TMR2_ReadTimer *****************
 11404 ;; Defined at:
 11405 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;		None
 11408 ;; Auto vars:     Size  Location     Type
 11409 ;;  readVal         1    0[BANK0 ] unsigned char 
 11410 ;; Return value:  Size  Location     Type
 11411 ;;                  1    wreg      unsigned char 
 11412 ;; Registers used:
 11413 ;;		wreg, status,2
 11414 ;; Tracked objects:
 11415 ;;		On entry : F/0
 11416 ;;		On exit  : F/0
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11419 ;;      Params:         0       0       0       0       0       0       0       0       0
 11420 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11421 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11422 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11423 ;;Total ram usage:        1 bytes
 11424 ;; Hardware stack levels used:    1
 11425 ;; Hardware stack levels required when called:   11
 11426 ;; This function calls:
 11427 ;;		Nothing
 11428 ;; This function is called by:
 11429 ;;		_moteRunningProcess
 11430 ;; This function uses a non-reentrant model
 11431 ;;
 11432                           
 11433                           	psect	text31
 11434  0034EA                     __ptext31:
 11435                           	opt stack 0
 11436  0034EA                     _TMR2_ReadTimer:
 11437                           	opt stack 17
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;tmr2.c: 88: uint8_t readVal;
 11441                           ;tmr2.c: 90: readVal = TMR2;
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;incstack = 0
 11445  0034EA  CFBC F0C8          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 11446                           
 11447                           ; BSR set to: 0
 11448                           ;tmr2.c: 92: return readVal;
 11449  0034EE  51C8               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 11450                           
 11451                           ; BSR set to: 0
 11452  0034F0  0012               	return		;funcret
 11453  0034F2                     __end_of_TMR2_ReadTimer:
 11454                           	opt stack 0
 11455                           tblptru	equ	0xFF8
 11456                           tblptrh	equ	0xFF7
 11457                           tblptrl	equ	0xFF6
 11458                           tablat	equ	0xFF5
 11459                           prodl	equ	0xFF3
 11460                           intcon	equ	0xFF2
 11461                           postinc0	equ	0xFEE
 11462                           wreg	equ	0xFE8
 11463                           postdec1	equ	0xFE5
 11464                           fsr1l	equ	0xFE1
 11465                           indf2	equ	0xFDF
 11466                           fsr2h	equ	0xFDA
 11467                           fsr2l	equ	0xFD9
 11468                           status	equ	0xFD8
 11469                           
 11470 ;; *************** function _ADC_TempConversion *****************
 11471 ;; Defined at:
 11472 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  tempRaw         1    wreg     enum E6334
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  tempRaw         1    7[BANK0 ] enum E6334
 11477 ;;  temp            1    8[BANK0 ] unsigned char 
 11478 ;; Return value:  Size  Location     Type
 11479 ;;                  1    wreg      unsigned char 
 11480 ;; Registers used:
 11481 ;;		wreg, status,2, status,0, cstack
 11482 ;; Tracked objects:
 11483 ;;		On entry : E/0
 11484 ;;		On exit  : F/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11487 ;;      Params:         0       0       0       0       0       0       0       0       0
 11488 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11489 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11490 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11491 ;;Total ram usage:        2 bytes
 11492 ;; Hardware stack levels used:    1
 11493 ;; Hardware stack levels required when called:   12
 11494 ;; This function calls:
 11495 ;;		___lwdiv
 11496 ;; This function is called by:
 11497 ;;		_test_adc
 11498 ;;		_moteHandler
 11499 ;;		_moteRunningProcess
 11500 ;; This function uses a non-reentrant model
 11501 ;;
 11502                           
 11503                           	psect	text32
 11504  0036E8                     __ptext32:
 11505                           	opt stack 0
 11506  0036E8                     _ADC_TempConversion:
 11507                           	opt stack 16
 11508                           
 11509                           ; BSR set to: 0
 11510                           ;incstack = 0
 11511                           ;ADC_TempConversion@tempRaw stored from wreg
 11512  0036E8  0100               	movlb	0	; () banked
 11513  0036EA  6FCF               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 11514                           
 11515                           ;adc.c: 138: uint8_t temp;
 11516                           ;adc.c: 140: temp = (uint16_t) (tempRaw - 250) / 5;
 11517  0036EC  0E06               	movlw	6
 11518  0036EE  25CF               	addwf	ADC_TempConversion@tempRaw& (0+255),w,b
 11519  0036F0  6FC8               	movwf	___lwdiv@dividend& (0+255),b
 11520  0036F2  6BC9               	clrf	(___lwdiv@dividend+1)& (0+255),b
 11521  0036F4  0EFF               	movlw	255
 11522  0036F6  23C9               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
 11523  0036F8  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 11524  0036FA  0E05               	movlw	5
 11525  0036FC  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 11526  0036FE  EC3B  F01E         	call	___lwdiv	;wreg free
 11527  003702  51C8               	movf	?___lwdiv& (0+255),w,b
 11528  003704  6FD0               	movwf	ADC_TempConversion@temp& (0+255),b
 11529                           
 11530                           ; BSR set to: 0
 11531                           ;adc.c: 141: return temp;
 11532  003706  51D0               	movf	ADC_TempConversion@temp& (0+255),w,b
 11533                           
 11534                           ; BSR set to: 0
 11535  003708  0012               	return		;funcret
 11536  00370A                     __end_of_ADC_TempConversion:
 11537                           	opt stack 0
 11538                           tblptru	equ	0xFF8
 11539                           tblptrh	equ	0xFF7
 11540                           tblptrl	equ	0xFF6
 11541                           tablat	equ	0xFF5
 11542                           prodl	equ	0xFF3
 11543                           intcon	equ	0xFF2
 11544                           postinc0	equ	0xFEE
 11545                           wreg	equ	0xFE8
 11546                           postdec1	equ	0xFE5
 11547                           fsr1l	equ	0xFE1
 11548                           indf2	equ	0xFDF
 11549                           fsr2h	equ	0xFDA
 11550                           fsr2l	equ	0xFD9
 11551                           status	equ	0xFD8
 11552                           
 11553 ;; *************** function ___lwdiv *****************
 11554 ;; Defined at:
 11555 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 11556 ;; Parameters:    Size  Location     Type
 11557 ;;  dividend        2    0[BANK0 ] unsigned int 
 11558 ;;  divisor         2    2[BANK0 ] unsigned int 
 11559 ;; Auto vars:     Size  Location     Type
 11560 ;;  quotient        2    5[BANK0 ] unsigned int 
 11561 ;;  counter         1    4[BANK0 ] unsigned char 
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  2    0[BANK0 ] unsigned int 
 11564 ;; Registers used:
 11565 ;;		wreg, status,2, status,0
 11566 ;; Tracked objects:
 11567 ;;		On entry : F/0
 11568 ;;		On exit  : F/0
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11571 ;;      Params:         0       4       0       0       0       0       0       0       0
 11572 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11573 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11574 ;;      Totals:         0       7       0       0       0       0       0       0       0
 11575 ;;Total ram usage:        7 bytes
 11576 ;; Hardware stack levels used:    1
 11577 ;; Hardware stack levels required when called:   11
 11578 ;; This function calls:
 11579 ;;		Nothing
 11580 ;; This function is called by:
 11581 ;;		_moteApp_add16bToDataBuffer
 11582 ;;		_oled_putUint16
 11583 ;;		_ADC_TempConversion
 11584 ;; This function uses a non-reentrant model
 11585 ;;
 11586                           
 11587                           	psect	text33
 11588  003C76                     __ptext33:
 11589                           	opt stack 0
 11590  003C76                     ___lwdiv:
 11591                           	opt stack 16
 11592                           
 11593                           ; BSR set to: 0
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;incstack = 0
 11597  003C76  6BCD               	clrf	___lwdiv@quotient& (0+255),b
 11598  003C78  6BCE               	clrf	(___lwdiv@quotient+1)& (0+255),b
 11599                           
 11600                           ; BSR set to: 0
 11601  003C7A  51CA               	movf	___lwdiv@divisor& (0+255),w,b
 11602  003C7C  11CB               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 11603  003C7E  E01B               	bz	l2351
 11604                           
 11605                           ; BSR set to: 0
 11606  003C80  0E01               	movlw	1
 11607  003C82  6FCC               	movwf	___lwdiv@counter& (0+255),b
 11608  003C84  D004               	goto	l10173
 11609  003C86                     l10171:
 11610                           
 11611                           ; BSR set to: 0
 11612  003C86  90D8               	bcf	status,0,c
 11613  003C88  37CA               	rlcf	___lwdiv@divisor& (0+255),f,b
 11614  003C8A  37CB               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 11615  003C8C  2BCC               	incf	___lwdiv@counter& (0+255),f,b
 11616  003C8E                     l10173:
 11617                           
 11618                           ; BSR set to: 0
 11619  003C8E  AFCB               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 11620  003C90  D7FA               	goto	l10171
 11621  003C92                     l10175:
 11622                           
 11623                           ; BSR set to: 0
 11624  003C92  90D8               	bcf	status,0,c
 11625  003C94  37CD               	rlcf	___lwdiv@quotient& (0+255),f,b
 11626  003C96  37CE               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 11627                           
 11628                           ; BSR set to: 0
 11629  003C98  51CA               	movf	___lwdiv@divisor& (0+255),w,b
 11630  003C9A  5DC8               	subwf	___lwdiv@dividend& (0+255),w,b
 11631  003C9C  51CB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11632  003C9E  59C9               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 11633  003CA0  E305               	bnc	l10183
 11634                           
 11635                           ; BSR set to: 0
 11636  003CA2  51CA               	movf	___lwdiv@divisor& (0+255),w,b
 11637  003CA4  5FC8               	subwf	___lwdiv@dividend& (0+255),f,b
 11638  003CA6  51CB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11639  003CA8  5BC9               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 11640                           
 11641                           ; BSR set to: 0
 11642  003CAA  81CD               	bsf	___lwdiv@quotient& (0+255),0,b
 11643  003CAC                     l10183:
 11644                           
 11645                           ; BSR set to: 0
 11646  003CAC  90D8               	bcf	status,0,c
 11647  003CAE  33CB               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 11648  003CB0  33CA               	rrcf	___lwdiv@divisor& (0+255),f,b
 11649                           
 11650                           ; BSR set to: 0
 11651  003CB2  2FCC               	decfsz	___lwdiv@counter& (0+255),f,b
 11652  003CB4  D7EE               	goto	l10175
 11653  003CB6                     l2351:
 11654                           
 11655                           ; BSR set to: 0
 11656  003CB6  C0CD  F0C8         	movff	___lwdiv@quotient,?___lwdiv
 11657  003CBA  C0CE  F0C9         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11658                           
 11659                           ; BSR set to: 0
 11660  003CBE  0012               	return		;funcret
 11661  003CC0                     __end_of___lwdiv:
 11662                           	opt stack 0
 11663                           tblptru	equ	0xFF8
 11664                           tblptrh	equ	0xFF7
 11665                           tblptrl	equ	0xFF6
 11666                           tablat	equ	0xFF5
 11667                           prodl	equ	0xFF3
 11668                           intcon	equ	0xFF2
 11669                           postinc0	equ	0xFEE
 11670                           wreg	equ	0xFE8
 11671                           postdec1	equ	0xFE5
 11672                           fsr1l	equ	0xFE1
 11673                           indf2	equ	0xFDF
 11674                           fsr2h	equ	0xFDA
 11675                           fsr2l	equ	0xFD9
 11676                           status	equ	0xFD8
 11677                           
 11678 ;; *************** function _ADC_GetConversion *****************
 11679 ;; Defined at:
 11680 ;;		line 113 in file "../Includes/MccGenerated/adc.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;  channel         1    wreg     enum E6334
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;  channel         1    4[BANK0 ] enum E6334
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  2    0[BANK0 ] unsigned int 
 11687 ;; Registers used:
 11688 ;;		wreg, status,2, status,0
 11689 ;; Tracked objects:
 11690 ;;		On entry : E/0
 11691 ;;		On exit  : F/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11694 ;;      Params:         0       2       0       0       0       0       0       0       0
 11695 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11696 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11697 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11698 ;;Total ram usage:        5 bytes
 11699 ;; Hardware stack levels used:    1
 11700 ;; Hardware stack levels required when called:   11
 11701 ;; This function calls:
 11702 ;;		Nothing
 11703 ;; This function is called by:
 11704 ;;		_test_adc
 11705 ;;		_moteHandler
 11706 ;;		_moteRunningProcess
 11707 ;; This function uses a non-reentrant model
 11708 ;;
 11709                           
 11710                           	psect	text34
 11711  003AEC                     __ptext34:
 11712                           	opt stack 0
 11713  003AEC                     _ADC_GetConversion:
 11714                           	opt stack 17
 11715                           
 11716                           ; BSR set to: 0
 11717                           ;incstack = 0
 11718                           ;ADC_GetConversion@channel stored from wreg
 11719  003AEC  0100               	movlb	0	; () banked
 11720  003AEE  6FCC               	movwf	ADC_GetConversion@channel& (0+255),b
 11721                           
 11722                           ;adc.c: 116: ADCON0bits.CHS = channel;
 11723  003AF0  C0CC  F0CA         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 11724  003AF4  47CA               	rlncf	??_ADC_GetConversion& (0+255),f,b
 11725  003AF6  47CA               	rlncf	??_ADC_GetConversion& (0+255),f,b
 11726  003AF8  50C2               	movf	4034,w,c	;volatile
 11727  003AFA  19CA               	xorwf	??_ADC_GetConversion& (0+255),w,b
 11728  003AFC  0B83               	andlw	-125
 11729  003AFE  19CA               	xorwf	??_ADC_GetConversion& (0+255),w,b
 11730  003B00  6EC2               	movwf	4034,c	;volatile
 11731                           
 11732                           ; BSR set to: 0
 11733                           ;adc.c: 119: ADCON0bits.ADON = 1;
 11734  003B02  80C2               	bsf	4034,0,c	;volatile
 11735                           
 11736                           ; BSR set to: 0
 11737                           ;adc.c: 122: _delay((unsigned long)((5)*(48000000/4000000.0)));
 11738  003B04  0E14               	movlw	20
 11739  003B06                     u10597:
 11740  003B06  2EE8               	decfsz	wreg,f,c
 11741  003B08  D7FE               	goto	u10597
 11742                           
 11743                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
 11744  003B0A  82C2               	bsf	4034,1,c	;volatile
 11745  003B0C                     l1178:
 11746  003B0C  B2C2               	btfsc	4034,1,c	;volatile
 11747  003B0E  D7FE               	goto	l1178
 11748                           
 11749                           ;adc.c: 130: }
 11750                           ;adc.c: 133: return ((ADRESH << 8) + ADRESL);
 11751  003B10  50C4               	movf	4036,w,c	;volatile
 11752  003B12  0100               	movlb	0	; () banked
 11753  003B14  6FCB               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 11754  003B16  6BCA               	clrf	??_ADC_GetConversion& (0+255),b
 11755  003B18  50C3               	movf	4035,w,c	;volatile
 11756  003B1A  25CA               	addwf	??_ADC_GetConversion& (0+255),w,b
 11757  003B1C  6FC8               	movwf	?_ADC_GetConversion& (0+255),b
 11758  003B1E  0E00               	movlw	0
 11759  003B20  21CB               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 11760  003B22  6FC9               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 11761                           
 11762                           ; BSR set to: 0
 11763  003B24  0012               	return		;funcret
 11764  003B26                     __end_of_ADC_GetConversion:
 11765                           	opt stack 0
 11766                           tblptru	equ	0xFF8
 11767                           tblptrh	equ	0xFF7
 11768                           tblptrl	equ	0xFF6
 11769                           tablat	equ	0xFF5
 11770                           prodl	equ	0xFF3
 11771                           intcon	equ	0xFF2
 11772                           postinc0	equ	0xFEE
 11773                           wreg	equ	0xFE8
 11774                           postdec1	equ	0xFE5
 11775                           fsr1l	equ	0xFE1
 11776                           indf2	equ	0xFDF
 11777                           fsr2h	equ	0xFDA
 11778                           fsr2l	equ	0xFD9
 11779                           status	equ	0xFD8
 11780                           
 11781 ;; *************** function _moteJoiningProcess *****************
 11782 ;; Defined at:
 11783 ;;		line 265 in file "../Includes/Board/MOTEapp.c"
 11784 ;; Parameters:    Size  Location     Type
 11785 ;;  messageReady    1    wreg     unsigned char 
 11786 ;;  switchEvent     1   18[BANK0 ] unsigned char 
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;  messageReady    1   21[BANK0 ] unsigned char 
 11789 ;;  readDataRate    1   19[BANK0 ] unsigned char 
 11790 ;;  joiningCompl    1   20[BANK0 ] unsigned char 
 11791 ;; Return value:  Size  Location     Type
 11792 ;;                  1    wreg      enum E6636
 11793 ;; Registers used:
 11794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11795 ;; Tracked objects:
 11796 ;;		On entry : F/1
 11797 ;;		On exit  : F/0
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11800 ;;      Params:         0       1       0       0       0       0       0       0       0
 11801 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11802 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11803 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11804 ;;Total ram usage:        4 bytes
 11805 ;; Hardware stack levels used:    1
 11806 ;; Hardware stack levels required when called:   17
 11807 ;; This function calls:
 11808 ;;		_DATAEE_WriteByte
 11809 ;;		_MOTEapp_SetADR
 11810 ;;		_MOTEapp_SetDataRate
 11811 ;;		_MOTEapp_WriteDataRate
 11812 ;;		_moteApp_delayms
 11813 ;;		_oled_clear
 11814 ;;		_oled_putString
 11815 ;;		_sendCommand
 11816 ;;		_strcmp
 11817 ;;		_strncmp
 11818 ;; This function is called by:
 11819 ;;		_moteHandler
 11820 ;; This function uses a non-reentrant model
 11821 ;;
 11822                           
 11823                           	psect	text35
 11824  005FBC                     __ptext35:
 11825                           	opt stack 0
 11826  005FBC                     _moteJoiningProcess:
 11827                           	opt stack 12
 11828                           
 11829                           ; BSR set to: 0
 11830                           ;incstack = 0
 11831                           ;moteJoiningProcess@messageReady stored from wreg
 11832  005FBC  0100               	movlb	0	; () banked
 11833  005FBE  6FDD               	movwf	moteJoiningProcess@messageReady& (0+255),b
 11834                           
 11835                           ;MOTEapp.c: 267: bool joiningComplete = 0;
 11836  005FC0  6BDC               	clrf	moteJoiningProcess@joiningComplete& (0+255),b
 11837                           
 11838                           ; BSR set to: 0
 11839                           ;MOTEapp.c: 269: if (switchEvent)
 11840  005FC2  51DA               	movf	moteJoiningProcess@switchEvent& (0+255),w,b
 11841  005FC4  E101 D25B          	bz	l11057
 11842                           
 11843                           ; BSR set to: 0
 11844                           ;MOTEapp.c: 270: {
 11845                           ;MOTEapp.c: 271: activeState = moteComFailure;
 11846  005FC8  0E0C               	movlw	12
 11847  005FCA  6F8D               	movwf	_activeState& (0+255),b
 11848  005FCC                     l351:
 11849  005FCC  A282               	btfss	3970,1,c	;volatile
 11850  005FCE  D7FE               	goto	l351
 11851  005FD0  D256               	goto	l11057
 11852  005FD2                     l356:
 11853  005FD2  D7FF               	goto	l356
 11854  005FD4                     l10861:
 11855                           
 11856                           ; BSR set to: 0
 11857                           ;MOTEapp.c: 282: sendCommand("sys get ver");
 11858  005FD4  0E8B               	movlw	low STR_29
 11859  005FD6  6FC9               	movwf	sendCommand@string& (0+255),b
 11860  005FD8  0E7E               	movlw	high STR_29
 11861  005FDA  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 11862  005FDC  EC37  F01C         	call	_sendCommand	;wreg free
 11863                           
 11864                           ;MOTEapp.c: 283: moteApp_delayms(50);
 11865  005FE0  0100               	movlb	0	; () banked
 11866  005FE2  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11867  005FE4  0E32               	movlw	50
 11868  005FE6  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11869  005FE8  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 11870  005FEC                     l10865:
 11871                           
 11872                           ;MOTEapp.c: 284: activeState = moteReset;
 11873  005FEC  0E01               	movlw	1
 11874  005FEE  D020               	goto	L39
 11875  005FF0                     l10867:
 11876                           
 11877                           ; BSR set to: 0
 11878                           ;MOTEapp.c: 287: if ( messageReady )
 11879  005FF0  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 11880  005FF2  E101 D268          	bz	l11059
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;MOTEapp.c: 288: {
 11884                           ;MOTEapp.c: 289: if(strncmp(modemResonseBuffer, "RN", 2) == 0)
 11885  005FF6  0E80               	movlw	low _modemResonseBuffer
 11886  005FF8  6FC8               	movwf	strncmp@s1& (0+255),b
 11887  005FFA  0E01               	movlw	high _modemResonseBuffer
 11888  005FFC  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
 11889  005FFE  0EEF               	movlw	low STR_30
 11890  006000  6FCA               	movwf	strncmp@s2& (0+255),b
 11891  006002  0E7F               	movlw	high STR_30
 11892  006004  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
 11893  006006  6BCD               	clrf	(strncmp@len+1)& (0+255),b
 11894  006008  0E02               	movlw	2
 11895  00600A  6FCC               	movwf	strncmp@len& (0+255),b
 11896  00600C  EC9D  F020         	call	_strncmp	;wreg free
 11897  006010  51C8               	movf	?_strncmp& (0+255),w,b
 11898  006012  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
 11899  006014  E10F               	bnz	l363
 11900                           
 11901                           ; BSR set to: 0
 11902                           ;MOTEapp.c: 290: {
 11903                           ;MOTEapp.c: 291: sendCommand("mac join abp");
 11904  006016  0EF6               	movlw	low STR_31
 11905  006018  6FC9               	movwf	sendCommand@string& (0+255),b
 11906  00601A  0E7D               	movlw	high STR_31
 11907  00601C  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 11908  00601E  EC37  F01C         	call	_sendCommand	;wreg free
 11909                           
 11910                           ;MOTEapp.c: 292: moteApp_delayms(50);
 11911  006022  0100               	movlb	0	; () banked
 11912  006024  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11913  006026  0E32               	movlw	50
 11914  006028  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11915  00602A  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 11916  00602E                     l10875:
 11917                           
 11918                           ;MOTEapp.c: 293: activeState = moteCheckAbp;
 11919  00602E  0E02               	movlw	2
 11920  006030                     L39:
 11921  006030  0100               	movlb	0	; () banked
 11922  006032  D209               	goto	L48
 11923  006034                     l363:
 11924                           
 11925                           ;MOTEapp.c: 295: else
 11926                           ;MOTEapp.c: 296: {
 11927                           ;MOTEapp.c: 298: activeState = moteStartup;
 11928  006034  0100               	movlb	0	; () banked
 11929  006036  6B8D               	clrf	_activeState& (0+255),b
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;MOTEapp.c: 299: }
 11933                           ;MOTEapp.c: 300: }
 11934                           ;MOTEapp.c: 301: break;
 11935  006038  D246               	goto	l11059
 11936  00603A                     l10877:
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;MOTEapp.c: 303: if ( messageReady )
 11940  00603A  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 11941  00603C  E101 D243          	bz	l11059
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;MOTEapp.c: 304: {
 11945                           ;MOTEapp.c: 305: if(strcmp(modemResonseBuffer, "ok") == 0)
 11946  006040  0E80               	movlw	low _modemResonseBuffer
 11947  006042  6FC8               	movwf	strcmp@s1& (0+255),b
 11948  006044  0E01               	movlw	high _modemResonseBuffer
 11949  006046  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 11950  006048  0EF2               	movlw	low STR_32
 11951  00604A  6FCA               	movwf	strcmp@s2& (0+255),b
 11952  00604C  0E7F               	movlw	high STR_32
 11953  00604E  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 11954  006050  EC72  F022         	call	_strcmp	;wreg free
 11955  006054  51C8               	movf	?_strcmp& (0+255),w,b
 11956  006056  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 11957  006058  E102               	bnz	l10883
 11958                           
 11959                           ; BSR set to: 0
 11960                           ;MOTEapp.c: 306: {
 11961                           ;MOTEapp.c: 307: activeState = moteWaitAbp;
 11962  00605A  0E03               	movlw	3
 11963  00605C  D1F4               	goto	L48
 11964  00605E                     l10883:
 11965                           
 11966                           ; BSR set to: 0
 11967                           ;MOTEapp.c: 309: else if(strcmp(modemResonseBuffer, "keys_not_init") == 0)
 11968  00605E  0E80               	movlw	low _modemResonseBuffer
 11969  006060  6FC8               	movwf	strcmp@s1& (0+255),b
 11970  006062  0E01               	movlw	high _modemResonseBuffer
 11971  006064  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 11972  006066  0E66               	movlw	low STR_33
 11973  006068  6FCA               	movwf	strcmp@s2& (0+255),b
 11974  00606A  0E7D               	movlw	high STR_33
 11975  00606C  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 11976  00606E  EC72  F022         	call	_strcmp	;wreg free
 11977  006072  51C8               	movf	?_strcmp& (0+255),w,b
 11978  006074  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 11979  006076  E141               	bnz	l10903
 11980                           
 11981                           ; BSR set to: 0
 11982                           ;MOTEapp.c: 310: {
 11983                           ;MOTEapp.c: 311: oled_clear();
 11984  006078  ECFE  F01A         	call	_oled_clear	;wreg free
 11985                           
 11986                           ; BSR set to: 0
 11987                           ;MOTEapp.c: 312: oled_putString("ABP Join",1,0);
 11988  00607C  0E5A               	movlw	low STR_34
 11989  00607E  6FD5               	movwf	oled_putString@string& (0+255),b
 11990  006080  0E7F               	movlw	high STR_34
 11991  006082  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 11992  006084  0E01               	movlw	1
 11993  006086  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 11994  006088  6BD8               	clrf	oled_putString@start_page& (0+255),b
 11995  00608A  EC6A  F020         	call	_oled_putString	;wreg free
 11996                           
 11997                           ;MOTEapp.c: 313: oled_putString("No Keys",2,1);
 11998  00608E  0E9F               	movlw	low STR_35
 11999  006090  0100               	movlb	0	; () banked
 12000  006092  6FD5               	movwf	oled_putString@string& (0+255),b
 12001  006094  0E7F               	movlw	high STR_35
 12002  006096  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12003  006098  0E02               	movlw	2
 12004  00609A  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12005  00609C  0E01               	movlw	1
 12006  00609E  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12007  0060A0  EC6A  F020         	call	_oled_putString	;wreg free
 12008                           
 12009                           ;MOTEapp.c: 314: moteApp_delayms(500);
 12010  0060A4  0E01               	movlw	1
 12011  0060A6  0100               	movlb	0	; () banked
 12012  0060A8  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12013  0060AA  0EF4               	movlw	244
 12014  0060AC  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12015  0060AE  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;MOTEapp.c: 315: oled_clear();
 12019  0060B2  ECFE  F01A         	call	_oled_clear	;wreg free
 12020                           
 12021                           ; BSR set to: 0
 12022                           ;MOTEapp.c: 316: oled_putString("Trying OTAA",1,0);
 12023  0060B6  0E73               	movlw	low STR_36
 12024  0060B8  6FD5               	movwf	oled_putString@string& (0+255),b
 12025  0060BA  0E7E               	movlw	high STR_36
 12026  0060BC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12027  0060BE  0E01               	movlw	1
 12028  0060C0  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12029  0060C2  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12030  0060C4  EC6A  F020         	call	_oled_putString	;wreg free
 12031                           
 12032                           ;MOTEapp.c: 317: oled_putString("Join",2,1);
 12033  0060C8  0E14               	movlw	low (STR_57+5)
 12034  0060CA  0100               	movlb	0	; () banked
 12035  0060CC  6FD5               	movwf	oled_putString@string& (0+255),b
 12036  0060CE  0E7F               	movlw	high (STR_57+5)
 12037  0060D0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12038  0060D2  0E02               	movlw	2
 12039  0060D4  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12040  0060D6  0E01               	movlw	1
 12041  0060D8  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12042  0060DA  EC6A  F020         	call	_oled_putString	;wreg free
 12043                           
 12044                           ;MOTEapp.c: 318: moteApp_delayms(200);
 12045  0060DE  0100               	movlb	0	; () banked
 12046  0060E0  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12047  0060E2  0EC8               	movlw	200
 12048  0060E4  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12049  0060E6  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 12050                           
 12051                           ; BSR set to: 0
 12052                           ;MOTEapp.c: 319: sendCommand("mac join otaa");
 12053  0060EA  0E4A               	movlw	low STR_38
 12054  0060EC  6FC9               	movwf	sendCommand@string& (0+255),b
 12055  0060EE  0E7D               	movlw	high STR_38
 12056  0060F0  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12057  0060F2  EC37  F01C         	call	_sendCommand	;wreg free
 12058  0060F6                     l10901:
 12059                           
 12060                           ;MOTEapp.c: 320: activeState = moteCheckOtaa;
 12061  0060F6  0E04               	movlw	4
 12062  0060F8  D79B               	goto	L39
 12063  0060FA                     l10903:
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;MOTEapp.c: 322: else
 12067                           ;MOTEapp.c: 323: {
 12068                           ;MOTEapp.c: 324: sendCommand("mac join abp");
 12069  0060FA  0EF6               	movlw	low STR_31
 12070  0060FC  6FC9               	movwf	sendCommand@string& (0+255),b
 12071  0060FE  0E7D               	movlw	high STR_31
 12072  006100  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12073  006102  EC37  F01C         	call	_sendCommand	;wreg free
 12074  006106  D793               	goto	l10875
 12075  006108                     l10907:
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;MOTEapp.c: 330: if ( messageReady )
 12079  006108  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12080  00610A  E101 D1DC          	bz	l11059
 12081                           
 12082                           ; BSR set to: 0
 12083                           ;MOTEapp.c: 331: {
 12084                           ;MOTEapp.c: 332: if(strcmp(modemResonseBuffer, "accepted") == 0)
 12085  00610E  0E80               	movlw	low _modemResonseBuffer
 12086  006110  6FC8               	movwf	strcmp@s1& (0+255),b
 12087  006112  0E01               	movlw	high _modemResonseBuffer
 12088  006114  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12089  006116  0E3F               	movlw	low STR_40
 12090  006118  6FCA               	movwf	strcmp@s2& (0+255),b
 12091  00611A  0E7F               	movlw	high STR_40
 12092  00611C  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12093  00611E  EC72  F022         	call	_strcmp	;wreg free
 12094  006122  51C8               	movf	?_strcmp& (0+255),w,b
 12095  006124  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12096  006126  E11C               	bnz	l10921
 12097                           
 12098                           ; BSR set to: 0
 12099                           ;MOTEapp.c: 333: {
 12100                           ;MOTEapp.c: 334: oled_clear();
 12101  006128  ECFE  F01A         	call	_oled_clear	;wreg free
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;MOTEapp.c: 335: oled_putString("ABP Join ",0,0);
 12105  00612C  0EFB               	movlw	low STR_41
 12106  00612E  6FD5               	movwf	oled_putString@string& (0+255),b
 12107  006130  0E7E               	movlw	high STR_41
 12108  006132  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12109  006134  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12110  006136  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12111  006138  EC6A  F020         	call	_oled_putString	;wreg free
 12112                           
 12113                           ;MOTEapp.c: 336: oled_putString("Successful",0,1);
 12114  00613C  0EC5               	movlw	low STR_42
 12115  00613E  0100               	movlb	0	; () banked
 12116  006140  6FD5               	movwf	oled_putString@string& (0+255),b
 12117  006142  0E7E               	movlw	high STR_42
 12118  006144  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12119  006146  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12120  006148  0E01               	movlw	1
 12121  00614A  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12122  00614C  EC6A  F020         	call	_oled_putString	;wreg free
 12123                           
 12124                           ;MOTEapp.c: 337: moteApp_delayms(250);
 12125  006150  0100               	movlb	0	; () banked
 12126  006152  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12127  006154  0EFA               	movlw	250
 12128  006156  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12129  006158  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 12130  00615C                     l10919:
 12131                           
 12132                           ; BSR set to: 0
 12133                           ;MOTEapp.c: 338: activeState = moteJoined;
 12134  00615C  0E06               	movlw	6
 12135  00615E  D173               	goto	L48
 12136  006160                     l10921:
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;MOTEapp.c: 340: else if(strcmp(modemResonseBuffer, "denied") == 0)
 12140  006160  0E80               	movlw	low _modemResonseBuffer
 12141  006162  6FC8               	movwf	strcmp@s1& (0+255),b
 12142  006164  0E01               	movlw	high _modemResonseBuffer
 12143  006166  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12144  006168  0ECC               	movlw	low STR_43
 12145  00616A  6FCA               	movwf	strcmp@s2& (0+255),b
 12146  00616C  0E7F               	movlw	high STR_43
 12147  00616E  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12148  006170  EC72  F022         	call	_strcmp	;wreg free
 12149  006174  51C8               	movf	?_strcmp& (0+255),w,b
 12150  006176  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12151  006178  E107               	bnz	l10927
 12152                           
 12153                           ; BSR set to: 0
 12154                           ;MOTEapp.c: 341: {
 12155                           ;MOTEapp.c: 342: sendCommand("mac join abp");
 12156  00617A  0EF6               	movlw	low STR_31
 12157  00617C  6FC9               	movwf	sendCommand@string& (0+255),b
 12158  00617E  0E7D               	movlw	high STR_31
 12159  006180  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12160  006182  EC37  F01C         	call	_sendCommand	;wreg free
 12161  006186  D753               	goto	l10875
 12162  006188                     l10927:
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;MOTEapp.c: 345: else
 12166                           ;MOTEapp.c: 346: {
 12167                           ;MOTEapp.c: 347: sendCommand("mac reset");
 12168  006188  0E19               	movlw	low STR_45
 12169  00618A  6FC9               	movwf	sendCommand@string& (0+255),b
 12170  00618C  0E7F               	movlw	high STR_45
 12171  00618E  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12172  006190  EC37  F01C         	call	_sendCommand	;wreg free
 12173  006194  D72B               	goto	l10865
 12174  006196                     l10931:
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;MOTEapp.c: 354: if ( messageReady )
 12178  006196  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12179  006198  E101 D195          	bz	l11059
 12180                           
 12181                           ; BSR set to: 0
 12182                           ;MOTEapp.c: 355: {
 12183                           ;MOTEapp.c: 356: if(strcmp(modemResonseBuffer, "ok") == 0)
 12184  00619C  0E80               	movlw	low _modemResonseBuffer
 12185  00619E  6FC8               	movwf	strcmp@s1& (0+255),b
 12186  0061A0  0E01               	movlw	high _modemResonseBuffer
 12187  0061A2  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12188  0061A4  0EF2               	movlw	low STR_32
 12189  0061A6  6FCA               	movwf	strcmp@s2& (0+255),b
 12190  0061A8  0E7F               	movlw	high STR_32
 12191  0061AA  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12192  0061AC  EC72  F022         	call	_strcmp	;wreg free
 12193  0061B0  51C8               	movf	?_strcmp& (0+255),w,b
 12194  0061B2  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12195  0061B4  E102               	bnz	l10937
 12196                           
 12197                           ; BSR set to: 0
 12198                           ;MOTEapp.c: 357: {
 12199                           ;MOTEapp.c: 358: activeState = moteWaitOtaa;
 12200  0061B6  0E05               	movlw	5
 12201  0061B8  D146               	goto	L48
 12202  0061BA                     l10937:
 12203                           
 12204                           ; BSR set to: 0
 12205                           ;MOTEapp.c: 360: else if(strcmp(modemResonseBuffer, "keys_not_init") == 0)
 12206  0061BA  0E80               	movlw	low _modemResonseBuffer
 12207  0061BC  6FC8               	movwf	strcmp@s1& (0+255),b
 12208  0061BE  0E01               	movlw	high _modemResonseBuffer
 12209  0061C0  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12210  0061C2  0E66               	movlw	low STR_33
 12211  0061C4  6FCA               	movwf	strcmp@s2& (0+255),b
 12212  0061C6  0E7D               	movlw	high STR_33
 12213  0061C8  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12214  0061CA  EC72  F022         	call	_strcmp	;wreg free
 12215  0061CE  51C8               	movf	?_strcmp& (0+255),w,b
 12216  0061D0  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12217  0061D2  E116               	bnz	l10947
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;MOTEapp.c: 361: {
 12221                           ;MOTEapp.c: 362: oled_clear();
 12222  0061D4  ECFE  F01A         	call	_oled_clear	;wreg free
 12223                           
 12224                           ; BSR set to: 0
 12225                           ;MOTEapp.c: 363: oled_putString("Valid Keys",0,0);
 12226  0061D8  0EDB               	movlw	low STR_48
 12227  0061DA  6FD5               	movwf	oled_putString@string& (0+255),b
 12228  0061DC  0E7E               	movlw	high STR_48
 12229  0061DE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12230  0061E0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12231  0061E2  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12232  0061E4  EC6A  F020         	call	_oled_putString	;wreg free
 12233                           
 12234                           ;MOTEapp.c: 364: oled_putString("Required",0,1);
 12235  0061E8  0E36               	movlw	low STR_49
 12236  0061EA  0100               	movlb	0	; () banked
 12237  0061EC  6FD5               	movwf	oled_putString@string& (0+255),b
 12238  0061EE  0E7F               	movlw	high STR_49
 12239  0061F0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12240  0061F2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12241  0061F4  0E01               	movlw	1
 12242  0061F6  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12243  0061F8  EC6A  F020         	call	_oled_putString	;wreg free
 12244                           
 12245                           ;MOTEapp.c: 365: activeState = moteNeedKeys;
 12246  0061FC  0E0B               	movlw	11
 12247  0061FE  D718               	goto	L39
 12248  006200                     l10947:
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;MOTEapp.c: 367: else if(strcmp(modemResonseBuffer, "invalid_param") == 0)
 12252  006200  0E80               	movlw	low _modemResonseBuffer
 12253  006202  6FC8               	movwf	strcmp@s1& (0+255),b
 12254  006204  0E01               	movlw	high _modemResonseBuffer
 12255  006206  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12256  006208  0E58               	movlw	low STR_50
 12257  00620A  6FCA               	movwf	strcmp@s2& (0+255),b
 12258  00620C  0E7D               	movlw	high STR_50
 12259  00620E  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12260  006210  EC72  F022         	call	_strcmp	;wreg free
 12261  006214  51C8               	movf	?_strcmp& (0+255),w,b
 12262  006216  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12263  006218  E107               	bnz	l10953
 12264                           
 12265                           ; BSR set to: 0
 12266                           ;MOTEapp.c: 368: {
 12267                           ;MOTEapp.c: 369: sendCommand("mac join otaa");
 12268  00621A  0E4A               	movlw	low STR_38
 12269  00621C  6FC9               	movwf	sendCommand@string& (0+255),b
 12270  00621E  0E7D               	movlw	high STR_38
 12271  006220  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12272  006222  EC37  F01C         	call	_sendCommand	;wreg free
 12273  006226  D703               	goto	l10875
 12274  006228                     l10953:
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;MOTEapp.c: 372: else if(strcmp(modemResonseBuffer, "no_free_ch") == 0)
 12278  006228  0E80               	movlw	low _modemResonseBuffer
 12279  00622A  6FC8               	movwf	strcmp@s1& (0+255),b
 12280  00622C  0E01               	movlw	high _modemResonseBuffer
 12281  00622E  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12282  006230  0EBA               	movlw	low STR_52
 12283  006232  6FCA               	movwf	strcmp@s2& (0+255),b
 12284  006234  0E7E               	movlw	high STR_52
 12285  006236  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12286  006238  EC72  F022         	call	_strcmp	;wreg free
 12287  00623C  51C8               	movf	?_strcmp& (0+255),w,b
 12288  00623E  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12289  006240  E101 D6F8          	bz	l363
 12290  006244  D140               	goto	l11059
 12291  006246                     l10957:
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;MOTEapp.c: 379: if ( messageReady )
 12295  006246  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12296  006248  E101 D13D          	bz	l11059
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;MOTEapp.c: 380: {
 12300                           ;MOTEapp.c: 381: if(strcmp(modemResonseBuffer, "accepted") == 0)
 12301  00624C  0E80               	movlw	low _modemResonseBuffer
 12302  00624E  6FC8               	movwf	strcmp@s1& (0+255),b
 12303  006250  0E01               	movlw	high _modemResonseBuffer
 12304  006252  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12305  006254  0E3F               	movlw	low STR_40
 12306  006256  6FCA               	movwf	strcmp@s2& (0+255),b
 12307  006258  0E7F               	movlw	high STR_40
 12308  00625A  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12309  00625C  EC72  F022         	call	_strcmp	;wreg free
 12310  006260  51C8               	movf	?_strcmp& (0+255),w,b
 12311  006262  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12312  006264  E11C               	bnz	l10971
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;MOTEapp.c: 382: {
 12316                           ;MOTEapp.c: 383: oled_clear();
 12317  006266  ECFE  F01A         	call	_oled_clear	;wreg free
 12318                           
 12319                           ; BSR set to: 0
 12320                           ;MOTEapp.c: 384: oled_putString("OTAA Join ",0,0);
 12321  00626A  0EAF               	movlw	low STR_54
 12322  00626C  6FD5               	movwf	oled_putString@string& (0+255),b
 12323  00626E  0E7E               	movlw	high STR_54
 12324  006270  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12325  006272  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12326  006274  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12327  006276  EC6A  F020         	call	_oled_putString	;wreg free
 12328                           
 12329                           ;MOTEapp.c: 385: oled_putString("Successful",0,1);
 12330  00627A  0EC5               	movlw	low STR_42
 12331  00627C  0100               	movlb	0	; () banked
 12332  00627E  6FD5               	movwf	oled_putString@string& (0+255),b
 12333  006280  0E7E               	movlw	high STR_42
 12334  006282  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12335  006284  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12336  006286  0E01               	movlw	1
 12337  006288  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12338  00628A  EC6A  F020         	call	_oled_putString	;wreg free
 12339                           
 12340                           ;MOTEapp.c: 386: moteApp_delayms(500);
 12341  00628E  0E01               	movlw	1
 12342  006290  0100               	movlb	0	; () banked
 12343  006292  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12344  006294  0EF4               	movlw	244
 12345  006296  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12346  006298  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 12347  00629C  D75F               	goto	l10919
 12348  00629E                     l10971:
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;MOTEapp.c: 389: else if(strcmp(modemResonseBuffer, "denied") == 0)
 12352  00629E  0E80               	movlw	low _modemResonseBuffer
 12353  0062A0  6FC8               	movwf	strcmp@s1& (0+255),b
 12354  0062A2  0E01               	movlw	high _modemResonseBuffer
 12355  0062A4  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12356  0062A6  0ECC               	movlw	low STR_43
 12357  0062A8  6FCA               	movwf	strcmp@s2& (0+255),b
 12358  0062AA  0E7F               	movlw	high STR_43
 12359  0062AC  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12360  0062AE  EC72  F022         	call	_strcmp	;wreg free
 12361  0062B2  51C8               	movf	?_strcmp& (0+255),w,b
 12362  0062B4  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12363  0062B6  E124               	bnz	l10985
 12364                           
 12365                           ; BSR set to: 0
 12366                           ;MOTEapp.c: 390: {
 12367                           ;MOTEapp.c: 391: oled_clear();
 12368  0062B8  ECFE  F01A         	call	_oled_clear	;wreg free
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;MOTEapp.c: 392: oled_putString("OTAA Join",1,0);
 12372  0062BC  0E0F               	movlw	low STR_57
 12373  0062BE  6FD5               	movwf	oled_putString@string& (0+255),b
 12374  0062C0  0E7F               	movlw	high STR_57
 12375  0062C2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12376  0062C4  0E01               	movlw	1
 12377  0062C6  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12378  0062C8  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12379  0062CA  EC6A  F020         	call	_oled_putString	;wreg free
 12380                           
 12381                           ;MOTEapp.c: 393: oled_putString("Denied",2,1);
 12382  0062CE  0EC5               	movlw	low STR_58
 12383  0062D0  0100               	movlb	0	; () banked
 12384  0062D2  6FD5               	movwf	oled_putString@string& (0+255),b
 12385  0062D4  0E7F               	movlw	high STR_58
 12386  0062D6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12387  0062D8  0E02               	movlw	2
 12388  0062DA  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12389  0062DC  0E01               	movlw	1
 12390  0062DE  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12391  0062E0  EC6A  F020         	call	_oled_putString	;wreg free
 12392                           
 12393                           ;MOTEapp.c: 394: sendCommand("mac join otaa");
 12394  0062E4  0E4A               	movlw	low STR_38
 12395  0062E6  0100               	movlb	0	; () banked
 12396  0062E8  6FC9               	movwf	sendCommand@string& (0+255),b
 12397  0062EA  0E7D               	movlw	high STR_38
 12398  0062EC  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12399  0062EE  EC37  F01C         	call	_sendCommand	;wreg free
 12400                           
 12401                           ;MOTEapp.c: 395: moteApp_delayms(100);
 12402  0062F2  0100               	movlb	0	; () banked
 12403  0062F4  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12404  0062F6  0E64               	movlw	100
 12405  0062F8  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12406  0062FA  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 12407  0062FE  D6FB               	goto	l10901
 12408  006300                     l10985:
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;MOTEapp.c: 398: else if(strcmp(modemResonseBuffer, "no_free_ch") == 0)
 12412  006300  0E80               	movlw	low _modemResonseBuffer
 12413  006302  6FC8               	movwf	strcmp@s1& (0+255),b
 12414  006304  0E01               	movlw	high _modemResonseBuffer
 12415  006306  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12416  006308  0EBA               	movlw	low STR_52
 12417  00630A  6FCA               	movwf	strcmp@s2& (0+255),b
 12418  00630C  0E7E               	movlw	high STR_52
 12419  00630E  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12420  006310  EC72  F022         	call	_strcmp	;wreg free
 12421  006314  51C8               	movf	?_strcmp& (0+255),w,b
 12422  006316  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12423  006318  E001 D0D5          	bnz	l11059
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;MOTEapp.c: 399: {
 12427                           ;MOTEapp.c: 400: oled_clear();
 12428  00631C  ECFE  F01A         	call	_oled_clear	;wreg free
 12429                           
 12430                           ; BSR set to: 0
 12431                           ;MOTEapp.c: 401: oled_putString("NO FREE",1,0);
 12432  006320  0E8F               	movlw	low STR_61
 12433  006322  6FD5               	movwf	oled_putString@string& (0+255),b
 12434  006324  0E7F               	movlw	high STR_61
 12435  006326  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12436  006328  0E01               	movlw	1
 12437  00632A  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12438  00632C  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12439  00632E  EC6A  F020         	call	_oled_putString	;wreg free
 12440                           
 12441                           ;MOTEapp.c: 402: oled_putString("CHANNEL",2,1);
 12442  006332  0E97               	movlw	low STR_62
 12443  006334  0100               	movlb	0	; () banked
 12444  006336  6FD5               	movwf	oled_putString@string& (0+255),b
 12445  006338  0E7F               	movlw	high STR_62
 12446  00633A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12447  00633C  0E02               	movlw	2
 12448  00633E  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12449  006340  0E01               	movlw	1
 12450  006342  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12451  006344  EC6A  F020         	call	_oled_putString	;wreg free
 12452  006348  D675               	goto	l363
 12453  00634A                     l10995:
 12454                           
 12455                           ; BSR set to: 0
 12456                           ;MOTEapp.c: 408: sendCommand("mac get adr");
 12457  00634A  0E7F               	movlw	low STR_63
 12458  00634C  6FC9               	movwf	sendCommand@string& (0+255),b
 12459  00634E  0E7E               	movlw	high STR_63
 12460  006350  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12461  006352  EC37  F01C         	call	_sendCommand	;wreg free
 12462                           
 12463                           ;MOTEapp.c: 409: moteApp_delayms(100);
 12464  006356  0100               	movlb	0	; () banked
 12465  006358  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12466  00635A  0E64               	movlw	100
 12467  00635C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12468  00635E  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 12469                           
 12470                           ; BSR set to: 0
 12471                           ;MOTEapp.c: 410: activeState = moteSetAdr;
 12472  006362  0E08               	movlw	8
 12473  006364  D070               	goto	L48
 12474  006366                     l11001:
 12475                           
 12476                           ; BSR set to: 0
 12477                           ;MOTEapp.c: 413: if ( messageReady )
 12478  006366  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12479  006368  E101 D0AD          	bz	l11059
 12480                           
 12481                           ; BSR set to: 0
 12482                           ;MOTEapp.c: 414: {
 12483                           ;MOTEapp.c: 415: if(strncmp(modemResonseBuffer, "on", 2) == 0)
 12484  00636C  0E80               	movlw	low _modemResonseBuffer
 12485  00636E  6FC8               	movwf	strncmp@s1& (0+255),b
 12486  006370  0E01               	movlw	high _modemResonseBuffer
 12487  006372  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
 12488  006374  0E0C               	movlw	low (STR_242+12)
 12489  006376  6FCA               	movwf	strncmp@s2& (0+255),b
 12490  006378  0E7D               	movlw	high (STR_242+12)
 12491  00637A  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
 12492  00637C  6BCD               	clrf	(strncmp@len+1)& (0+255),b
 12493  00637E  0E02               	movlw	2
 12494  006380  6FCC               	movwf	strncmp@len& (0+255),b
 12495  006382  EC9D  F020         	call	_strncmp	;wreg free
 12496  006386  51C8               	movf	?_strncmp& (0+255),w,b
 12497  006388  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
 12498  00638A  E10C               	bnz	l11011
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;MOTEapp.c: 416: {
 12502                           ;MOTEapp.c: 417: MOTEapp_SetADR(1);
 12503  00638C  0E01               	movlw	1
 12504  00638E  EC6D  F01A         	call	_MOTEapp_SetADR
 12505                           
 12506                           ;MOTEapp.c: 418: sendCommand("mac get dr");
 12507  006392  0ED0               	movlw	low STR_65
 12508  006394  0100               	movlb	0	; () banked
 12509  006396  6FC9               	movwf	sendCommand@string& (0+255),b
 12510  006398  0E7E               	movlw	high STR_65
 12511  00639A  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12512  00639C  EC37  F01C         	call	_sendCommand	;wreg free
 12513  0063A0                     l11009:
 12514                           
 12515                           ;MOTEapp.c: 419: activeState = moteGetDr;
 12516  0063A0  0E07               	movlw	7
 12517  0063A2  D646               	goto	L39
 12518  0063A4                     l11011:
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;MOTEapp.c: 421: else if(strncmp(modemResonseBuffer, "off", 2) == 0)
 12522  0063A4  0E80               	movlw	low _modemResonseBuffer
 12523  0063A6  6FC8               	movwf	strncmp@s1& (0+255),b
 12524  0063A8  0E01               	movlw	high _modemResonseBuffer
 12525  0063AA  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
 12526  0063AC  0E28               	movlw	low (STR_243+12)
 12527  0063AE  6FCA               	movwf	strncmp@s2& (0+255),b
 12528  0063B0  0E7C               	movlw	high (STR_243+12)
 12529  0063B2  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
 12530  0063B4  6BCD               	clrf	(strncmp@len+1)& (0+255),b
 12531  0063B6  0E02               	movlw	2
 12532  0063B8  6FCC               	movwf	strncmp@len& (0+255),b
 12533  0063BA  EC9D  F020         	call	_strncmp	;wreg free
 12534  0063BE  51C8               	movf	?_strncmp& (0+255),w,b
 12535  0063C0  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
 12536  0063C2  E001 D6CB          	bnz	l10919
 12537                           
 12538                           ; BSR set to: 0
 12539                           ;MOTEapp.c: 422: {
 12540                           ;MOTEapp.c: 423: MOTEapp_SetADR(0);
 12541  0063C6  0E00               	movlw	0
 12542  0063C8  EC6D  F01A         	call	_MOTEapp_SetADR
 12543                           
 12544                           ;MOTEapp.c: 424: sendCommand("mac get dr");
 12545  0063CC  0ED0               	movlw	low STR_65
 12546  0063CE  0100               	movlb	0	; () banked
 12547  0063D0  6FC9               	movwf	sendCommand@string& (0+255),b
 12548  0063D2  0E7E               	movlw	high STR_65
 12549  0063D4  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12550  0063D6  EC37  F01C         	call	_sendCommand	;wreg free
 12551  0063DA  D7E2               	goto	l11009
 12552  0063DC                     l11021:
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;MOTEapp.c: 434: if ( messageReady )
 12556  0063DC  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12557  0063DE  E073               	bz	l11059
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;MOTEapp.c: 435: {
 12561                           ;MOTEapp.c: 436: if(strcmp(modemResonseBuffer, "invalid_param") == 0)
 12562  0063E0  0E80               	movlw	low _modemResonseBuffer
 12563  0063E2  6FC8               	movwf	strcmp@s1& (0+255),b
 12564  0063E4  0E01               	movlw	high _modemResonseBuffer
 12565  0063E6  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12566  0063E8  0E58               	movlw	low STR_50
 12567  0063EA  6FCA               	movwf	strcmp@s2& (0+255),b
 12568  0063EC  0E7D               	movlw	high STR_50
 12569  0063EE  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12570  0063F0  EC72  F022         	call	_strcmp	;wreg free
 12571  0063F4  51C8               	movf	?_strcmp& (0+255),w,b
 12572  0063F6  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12573  0063F8  E107               	bnz	l11029
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;MOTEapp.c: 437: {
 12577                           ;MOTEapp.c: 438: sendCommand("mac get dr");
 12578  0063FA  0ED0               	movlw	low STR_65
 12579  0063FC  6FC9               	movwf	sendCommand@string& (0+255),b
 12580  0063FE  0E7E               	movlw	high STR_65
 12581  006400  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12582  006402  EC37  F01C         	call	_sendCommand	;wreg free
 12583  006406  D7CC               	goto	l11009
 12584  006408                     l11029:
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;MOTEapp.c: 441: else
 12588                           ;MOTEapp.c: 442: {
 12589                           ;MOTEapp.c: 443: uint8_t readDataRate;
 12590                           ;MOTEapp.c: 444: readDataRate = modemResonseBuffer[0] - '0';
 12591  006408  0101               	movlb	1	; () banked
 12592  00640A  5180               	movf	_modemResonseBuffer& (0+255),w,b
 12593  00640C  0FD0               	addlw	208
 12594  00640E  0100               	movlb	0	; () banked
 12595  006410  6FDB               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 12596                           
 12597                           ; BSR set to: 0
 12598                           ;MOTEapp.c: 445: MOTEapp_SetDataRate(readDataRate);
 12599  006412  51DB               	movf	moteJoiningProcess@readDataRate& (0+255),w,b
 12600  006414  EC71  F01A         	call	_MOTEapp_SetDataRate
 12601                           
 12602                           ;MOTEapp.c: 446: MOTEapp_WriteDataRate();
 12603  006418  EC70  F02A         	call	_MOTEapp_WriteDataRate	;wreg free
 12604                           
 12605                           ; BSR set to: 0
 12606                           ;MOTEapp.c: 447: activeState = moteSetDr;
 12607  00641C  0E09               	movlw	9
 12608  00641E  D013               	goto	L48
 12609  006420                     l11037:
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;MOTEapp.c: 452: if ( messageReady )
 12613  006420  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12614  006422  E051               	bz	l11059
 12615                           
 12616                           ; BSR set to: 0
 12617                           ;MOTEapp.c: 453: {
 12618                           ;MOTEapp.c: 454: if(strncmp(modemResonseBuffer, "ok", 2) == 0)
 12619  006424  0E80               	movlw	low _modemResonseBuffer
 12620  006426  6FC8               	movwf	strncmp@s1& (0+255),b
 12621  006428  0E01               	movlw	high _modemResonseBuffer
 12622  00642A  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
 12623  00642C  0EF2               	movlw	low STR_32
 12624  00642E  6FCA               	movwf	strncmp@s2& (0+255),b
 12625  006430  0E7F               	movlw	high STR_32
 12626  006432  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
 12627  006434  6BCD               	clrf	(strncmp@len+1)& (0+255),b
 12628  006436  0E02               	movlw	2
 12629  006438  6FCC               	movwf	strncmp@len& (0+255),b
 12630  00643A  EC9D  F020         	call	_strncmp	;wreg free
 12631  00643E  51C8               	movf	?_strncmp& (0+255),w,b
 12632  006440  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
 12633  006442  E103               	bnz	l11043
 12634                           
 12635                           ; BSR set to: 0
 12636                           ;MOTEapp.c: 455: {
 12637                           ;MOTEapp.c: 456: activeState = moteDoneDr;
 12638  006444  0E0A               	movlw	10
 12639  006446                     L48:
 12640  006446  6F8D               	movwf	_activeState& (0+255),b
 12641                           
 12642                           ;MOTEapp.c: 457: }
 12643  006448  D03E               	goto	l11059
 12644  00644A                     l11043:
 12645                           
 12646                           ; BSR set to: 0
 12647                           ;MOTEapp.c: 458: else
 12648                           ;MOTEapp.c: 459: {
 12649                           ;MOTEapp.c: 460: sendCommand("mac get dr");
 12650  00644A  0ED0               	movlw	low STR_65
 12651  00644C  6FC9               	movwf	sendCommand@string& (0+255),b
 12652  00644E  0E7E               	movlw	high STR_65
 12653  006450  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12654  006452  EC37  F01C         	call	_sendCommand	;wreg free
 12655  006456  D7A4               	goto	l11009
 12656  006458                     l11047:
 12657                           
 12658                           ; BSR set to: 0
 12659                           ;MOTEapp.c: 466: joiningComplete = 1;
 12660  006458  0E01               	movlw	1
 12661  00645A  6FDC               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 12662                           
 12663                           ;MOTEapp.c: 467: break;
 12664  00645C  D034               	goto	l11059
 12665  00645E                     l11049:
 12666                           
 12667                           ; BSR set to: 0
 12668                           ;MOTEapp.c: 472: DATAEE_WriteByte(0x00, 0x00);
 12669  00645E  0E00               	movlw	0
 12670  006460  6BC8               	clrf	DATAEE_WriteByte@bData& (0+255),b
 12671  006462  EC59  F01D         	call	_DATAEE_WriteByte
 12672  006466                     l411:
 12673  006466  B082               	btfsc	3970,0,c	;volatile
 12674  006468  D002               	goto	l11053
 12675  00646A  A282               	btfss	3970,1,c	;volatile
 12676  00646C  D7FC               	goto	l411
 12677  00646E                     l11053:
 12678                           
 12679                           ;MOTEapp.c: 474: moteApp_delayms(40);
 12680  00646E  0100               	movlb	0	; () banked
 12681  006470  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12682  006472  0E28               	movlw	40
 12683  006474  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12684  006476  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 12685  00647A  00FF               	reset		;# 
 12686                           
 12687                           ;MOTEapp.c: 477: break;
 12688  00647C  D024               	goto	l11059
 12689  00647E                     l11057:
 12690  00647E  0100               	movlb	0	; () banked
 12691  006480  518D               	movf	_activeState& (0+255),w,b
 12692                           
 12693                           ; Switch size 1, requested type "speed"
 12694                           ; Number of cases is 13, Range of values is 0 to 12
 12695                           ; switch strategies available:
 12696                           ; Name         Instructions Cycles
 12697                           ; simple_byte           40    21 (average)
 12698                           ;	Chosen strategy is simple_byte
 12699  006482  E101 D5A7          	bz	l10861
 12700  006486  0A01               	xorlw	1	; case 1
 12701  006488  E101 D5B2          	bz	l10867
 12702  00648C  0A03               	xorlw	3	; case 2
 12703  00648E  E101 D5D4          	bz	l10877
 12704  006492  0A01               	xorlw	1	; case 3
 12705  006494  E101 D638          	bz	l10907
 12706  006498  0A07               	xorlw	7	; case 4
 12707  00649A  E101 D67C          	bz	l10931
 12708  00649E  0A01               	xorlw	1	; case 5
 12709  0064A0  E101 D6D1          	bz	l10957
 12710  0064A4  0A03               	xorlw	3	; case 6
 12711  0064A6  E101 D750          	bz	l10995
 12712  0064AA  0A01               	xorlw	1	; case 7
 12713  0064AC  E097               	bz	l11021
 12714  0064AE  0A0F               	xorlw	15	; case 8
 12715  0064B0  E101 D759          	bz	l11001
 12716  0064B4  0A01               	xorlw	1	; case 9
 12717  0064B6  E0B4               	bz	l11037
 12718  0064B8  0A03               	xorlw	3	; case 10
 12719  0064BA  E0CE               	bz	l11047
 12720  0064BC  0A01               	xorlw	1	; case 11
 12721  0064BE  E003               	bz	l11059
 12722  0064C0  0A07               	xorlw	7	; case 12
 12723  0064C2  E0CD               	bz	l11049
 12724  0064C4  D586               	goto	l356
 12725  0064C6                     l11059:
 12726                           
 12727                           ;MOTEapp.c: 479: return joiningComplete;
 12728  0064C6  0100               	movlb	0	; () banked
 12729  0064C8  51DC               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 12730                           
 12731                           ; BSR set to: 0
 12732  0064CA  0012               	return		;funcret
 12733  0064CC                     __end_of_moteJoiningProcess:
 12734                           	opt stack 0
 12735                           tblptru	equ	0xFF8
 12736                           tblptrh	equ	0xFF7
 12737                           tblptrl	equ	0xFF6
 12738                           tablat	equ	0xFF5
 12739                           prodl	equ	0xFF3
 12740                           intcon	equ	0xFF2
 12741                           postinc0	equ	0xFEE
 12742                           wreg	equ	0xFE8
 12743                           postdec1	equ	0xFE5
 12744                           fsr1l	equ	0xFE1
 12745                           indf2	equ	0xFDF
 12746                           fsr2h	equ	0xFDA
 12747                           fsr2l	equ	0xFD9
 12748                           status	equ	0xFD8
 12749                           
 12750 ;; *************** function _strncmp *****************
 12751 ;; Defined at:
 12752 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strncmp.c"
 12753 ;; Parameters:    Size  Location     Type
 12754 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 12755 ;;		 -> modemResonseBuffer(64), 
 12756 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 12757 ;;		 -> STR_219(7), STR_217(7), STR_215(7), STR_212(7), 
 12758 ;;		 -> STR_70(3), STR_66(4), STR_64(3), STR_30(3), 
 12759 ;;  len             2    4[BANK0 ] unsigned int 
 12760 ;; Auto vars:     Size  Location     Type
 12761 ;;		None
 12762 ;; Return value:  Size  Location     Type
 12763 ;;                  2    0[BANK0 ] int 
 12764 ;; Registers used:
 12765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12766 ;; Tracked objects:
 12767 ;;		On entry : F/0
 12768 ;;		On exit  : F/0
 12769 ;;		Unchanged: 0/0
 12770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12771 ;;      Params:         0       6       0       0       0       0       0       0       0
 12772 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12773 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12774 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12775 ;;Total ram usage:        7 bytes
 12776 ;; Hardware stack levels used:    1
 12777 ;; Hardware stack levels required when called:   11
 12778 ;; This function calls:
 12779 ;;		Nothing
 12780 ;; This function is called by:
 12781 ;;		_moteJoiningProcess
 12782 ;;		_moteRunningProcess
 12783 ;; This function uses a non-reentrant model
 12784 ;;
 12785                           
 12786                           	psect	text36
 12787  00413A                     __ptext36:
 12788                           	opt stack 0
 12789  00413A                     _strncmp:
 12790                           	opt stack 17
 12791                           
 12792                           ; BSR set to: 0
 12793                           
 12794                           ; BSR set to: 0
 12795                           ;incstack = 0
 12796  00413A  D029               	goto	l10281
 12797  00413C                     l10271:
 12798                           
 12799                           ; BSR set to: 0
 12800  00413C  C0C8  FFD9         	movff	strncmp@s1,fsr2l
 12801  004140  C0C9  FFDA         	movff	strncmp@s1+1,fsr2h
 12802  004144  50DF               	movf	indf2,w,c
 12803  004146  E00D               	bz	l10275
 12804                           
 12805                           ; BSR set to: 0
 12806  004148  C0C8  FFD9         	movff	strncmp@s1,fsr2l
 12807  00414C  C0C9  FFDA         	movff	strncmp@s1+1,fsr2h
 12808  004150  50DF               	movf	indf2,w,c
 12809  004152  6FCE               	movwf	??_strncmp& (0+255),b
 12810  004154  C0CA  FFF6         	movff	strncmp@s2,tblptrl
 12811  004158  C0CB  FFF7         	movff	strncmp@s2+1,tblptrh
 12812  00415C                     	if	0	;tblptru may be non-zero
 12813  00415C                     	endif
 12814  00415C                     	if	0	;tblptru may be non-zero
 12815  00415C                     	endif
 12816  00415C  0008               	tblrd		*
 12817  00415E  18F5               	xorwf	tablat,w,c
 12818  004160  E012               	bz	l10279
 12819  004162                     l10275:
 12820                           
 12821                           ; BSR set to: 0
 12822  004162  C0C8  FFD9         	movff	strncmp@s1,fsr2l
 12823  004166  C0C9  FFDA         	movff	strncmp@s1+1,fsr2h
 12824  00416A  50DF               	movf	indf2,w,c
 12825  00416C  6FCE               	movwf	??_strncmp& (0+255),b
 12826  00416E  C0CA  FFF6         	movff	strncmp@s2,tblptrl
 12827  004172  C0CB  FFF7         	movff	strncmp@s2+1,tblptrh
 12828  004176                     	if	0	;tblptru may be non-zero
 12829  004176                     	endif
 12830  004176                     	if	0	;tblptru may be non-zero
 12831  004176                     	endif
 12832  004176  0008               	tblrd		*
 12833  004178  50F5               	movf	tablat,w,c
 12834  00417A  5DCE               	subwf	??_strncmp& (0+255),w,b
 12835  00417C  6FC8               	movwf	?_strncmp& (0+255),b
 12836  00417E  6BC9               	clrf	(?_strncmp+1)& (0+255),b
 12837  004180  A0D8               	btfss	status,0,c
 12838  004182  07C9               	decf	(?_strncmp+1)& (0+255),f,b
 12839  004184  0012               	return	
 12840  004186                     l10279:
 12841                           
 12842                           ; BSR set to: 0
 12843  004186  4BC8               	infsnz	strncmp@s1& (0+255),f,b
 12844  004188  2BC9               	incf	(strncmp@s1+1)& (0+255),f,b
 12845  00418A  4BCA               	infsnz	strncmp@s2& (0+255),f,b
 12846  00418C  2BCB               	incf	(strncmp@s2+1)& (0+255),f,b
 12847  00418E                     l10281:
 12848                           
 12849                           ; BSR set to: 0
 12850  00418E  07CC               	decf	strncmp@len& (0+255),f,b
 12851  004190  A0D8               	btfss	status,0,c
 12852  004192  07CD               	decf	(strncmp@len+1)& (0+255),f,b
 12853  004194  29CC               	incf	strncmp@len& (0+255),w,b
 12854  004196  E1D2               	bnz	l10271
 12855  004198  29CD               	incf	(strncmp@len+1)& (0+255),w,b
 12856  00419A  E1D0               	bnz	l10271
 12857                           
 12858                           ; BSR set to: 0
 12859  00419C  6BC8               	clrf	?_strncmp& (0+255),b
 12860  00419E  6BC9               	clrf	(?_strncmp+1)& (0+255),b
 12861                           
 12862                           ; BSR set to: 0
 12863  0041A0  0012               	return		;funcret
 12864  0041A2                     __end_of_strncmp:
 12865                           	opt stack 0
 12866                           tblptru	equ	0xFF8
 12867                           tblptrh	equ	0xFF7
 12868                           tblptrl	equ	0xFF6
 12869                           tablat	equ	0xFF5
 12870                           prodl	equ	0xFF3
 12871                           intcon	equ	0xFF2
 12872                           postinc0	equ	0xFEE
 12873                           wreg	equ	0xFE8
 12874                           postdec1	equ	0xFE5
 12875                           fsr1l	equ	0xFE1
 12876                           indf2	equ	0xFDF
 12877                           fsr2h	equ	0xFDA
 12878                           fsr2l	equ	0xFD9
 12879                           status	equ	0xFD8
 12880                           
 12881 ;; *************** function _strcmp *****************
 12882 ;; Defined at:
 12883 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
 12884 ;; Parameters:    Size  Location     Type
 12885 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 12886 ;;		 -> modemResonseBuffer(64), 
 12887 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 12888 ;;		 -> STR_211(3), STR_68(14), STR_60(11), STR_56(7), 
 12889 ;;		 -> STR_53(9), STR_52(11), STR_50(14), STR_47(14), 
 12890 ;;		 -> STR_46(3), STR_43(7), STR_40(9), STR_33(14), 
 12891 ;;		 -> STR_32(3), 
 12892 ;; Auto vars:     Size  Location     Type
 12893 ;;  t1              1    8[BANK0 ] unsigned char 
 12894 ;;  t2              1    7[BANK0 ] unsigned char 
 12895 ;;  t0              1    6[BANK0 ] unsigned char 
 12896 ;; Return value:  Size  Location     Type
 12897 ;;                  2    0[BANK0 ] int 
 12898 ;; Registers used:
 12899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12900 ;; Tracked objects:
 12901 ;;		On entry : F/0
 12902 ;;		On exit  : F/0
 12903 ;;		Unchanged: 0/0
 12904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12905 ;;      Params:         0       4       0       0       0       0       0       0       0
 12906 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12907 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12908 ;;      Totals:         0       9       0       0       0       0       0       0       0
 12909 ;;Total ram usage:        9 bytes
 12910 ;; Hardware stack levels used:    1
 12911 ;; Hardware stack levels required when called:   11
 12912 ;; This function calls:
 12913 ;;		Nothing
 12914 ;; This function is called by:
 12915 ;;		_moteJoiningProcess
 12916 ;;		_moteRunningProcess
 12917 ;; This function uses a non-reentrant model
 12918 ;;
 12919                           
 12920                           	psect	text37
 12921  0044E4                     __ptext37:
 12922                           	opt stack 0
 12923  0044E4                     _strcmp:
 12924                           	opt stack 17
 12925  0044E4                     l10283:
 12926                           
 12927                           ; BSR set to: 0
 12928  0044E4  C0C8  FFD9         	movff	strcmp@s1,fsr2l
 12929  0044E8  C0C9  FFDA         	movff	strcmp@s1+1,fsr2h
 12930  0044EC  50DF               	movf	indf2,w,c
 12931  0044EE  6FCE               	movwf	strcmp@t0& (0+255),b
 12932                           
 12933                           ; BSR set to: 0
 12934  0044F0  C0CA  FFF6         	movff	strcmp@s2,tblptrl
 12935  0044F4  C0CB  FFF7         	movff	strcmp@s2+1,tblptrh
 12936  0044F8                     	if	0	;tblptru may be non-zero
 12937  0044F8                     	endif
 12938  0044F8                     	if	0	;tblptru may be non-zero
 12939  0044F8                     	endif
 12940  0044F8  0008               	tblrd		*
 12941  0044FA  CFF5 F0D0          	movff	tablat,strcmp@t1
 12942                           
 12943                           ; BSR set to: 0
 12944  0044FE  51CE               	movf	strcmp@t0& (0+255),w,b
 12945  004500  E02C               	bz	l10313
 12946                           
 12947                           ; BSR set to: 0
 12948  004502  0E02               	movlw	2
 12949  004504  27C8               	addwf	strcmp@s1& (0+255),f,b
 12950  004506  0E00               	movlw	0
 12951  004508  23C9               	addwfc	(strcmp@s1+1)& (0+255),f,b
 12952  00450A  51D0               	movf	strcmp@t1& (0+255),w,b
 12953  00450C  19CE               	xorwf	strcmp@t0& (0+255),w,b
 12954  00450E  E125               	bnz	l10313
 12955                           
 12956                           ; BSR set to: 0
 12957  004510  EE2F F0FF          	lfsr	2,-1
 12958  004514  51C8               	movf	strcmp@s1& (0+255),w,b
 12959  004516  26D9               	addwf	fsr2l,f,c
 12960  004518  51C9               	movf	(strcmp@s1+1)& (0+255),w,b
 12961  00451A  22DA               	addwfc	fsr2h,f,c
 12962  00451C  50DF               	movf	indf2,w,c
 12963  00451E  6FCF               	movwf	strcmp@t2& (0+255),b
 12964                           
 12965                           ; BSR set to: 0
 12966  004520  29CA               	incf	strcmp@s2& (0+255),w,b
 12967  004522  6FCC               	movwf	??_strcmp& (0+255),b
 12968  004524  0E00               	movlw	0
 12969  004526  21CB               	addwfc	(strcmp@s2+1)& (0+255),w,b
 12970  004528  6FCD               	movwf	(??_strcmp+1)& (0+255),b
 12971  00452A  C0CC  FFF6         	movff	??_strcmp,tblptrl
 12972  00452E  C0CD  FFF7         	movff	??_strcmp+1,tblptrh
 12973  004532                     	if	0	;tblptru may be non-zero
 12974  004532                     	endif
 12975  004532                     	if	0	;tblptru may be non-zero
 12976  004532                     	endif
 12977  004532  0008               	tblrd		*
 12978  004534  CFF5 F0D0          	movff	tablat,strcmp@t1
 12979                           
 12980                           ; BSR set to: 0
 12981  004538  51CF               	movf	strcmp@t2& (0+255),w,b
 12982  00453A  E107               	bnz	l10305
 12983  00453C                     l10301:
 12984                           
 12985                           ; BSR set to: 0
 12986  00453C  51D0               	movf	strcmp@t1& (0+255),w,b
 12987  00453E  5DCF               	subwf	strcmp@t2& (0+255),w,b
 12988  004540  6FC8               	movwf	?_strcmp& (0+255),b
 12989  004542  6BC9               	clrf	(?_strcmp+1)& (0+255),b
 12990  004544  A0D8               	btfss	status,0,c
 12991  004546  07C9               	decf	(?_strcmp+1)& (0+255),f,b
 12992  004548  0012               	return	
 12993  00454A                     l10305:
 12994                           
 12995                           ; BSR set to: 0
 12996  00454A  0E02               	movlw	2
 12997  00454C  27CA               	addwf	strcmp@s2& (0+255),f,b
 12998  00454E  0E00               	movlw	0
 12999  004550  23CB               	addwfc	(strcmp@s2+1)& (0+255),f,b
 13000  004552  51CF               	movf	strcmp@t2& (0+255),w,b
 13001  004554  19D0               	xorwf	strcmp@t1& (0+255),w,b
 13002  004556  E1F2               	bnz	l10301
 13003  004558  D7C5               	goto	l10283
 13004  00455A                     l10313:
 13005                           
 13006                           ; BSR set to: 0
 13007  00455A  51D0               	movf	strcmp@t1& (0+255),w,b
 13008  00455C  5DCE               	subwf	strcmp@t0& (0+255),w,b
 13009  00455E  6FC8               	movwf	?_strcmp& (0+255),b
 13010  004560  6BC9               	clrf	(?_strcmp+1)& (0+255),b
 13011  004562  A0D8               	btfss	status,0,c
 13012  004564  07C9               	decf	(?_strcmp+1)& (0+255),f,b
 13013                           
 13014                           ; BSR set to: 0
 13015  004566  0012               	return		;funcret
 13016  004568                     __end_of_strcmp:
 13017                           	opt stack 0
 13018                           tblptru	equ	0xFF8
 13019                           tblptrh	equ	0xFF7
 13020                           tblptrl	equ	0xFF6
 13021                           tablat	equ	0xFF5
 13022                           prodl	equ	0xFF3
 13023                           intcon	equ	0xFF2
 13024                           postinc0	equ	0xFEE
 13025                           wreg	equ	0xFE8
 13026                           postdec1	equ	0xFE5
 13027                           fsr1l	equ	0xFE1
 13028                           indf2	equ	0xFDF
 13029                           fsr2h	equ	0xFDA
 13030                           fsr2l	equ	0xFD9
 13031                           status	equ	0xFD8
 13032                           
 13033 ;; *************** function _MOTEapp_WriteDataRate *****************
 13034 ;; Defined at:
 13035 ;;		line 1100 in file "../Includes/Board/MOTEapp.c"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;		None
 13038 ;; Auto vars:     Size  Location     Type
 13039 ;;		None
 13040 ;; Return value:  Size  Location     Type
 13041 ;;		None               void
 13042 ;; Registers used:
 13043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13044 ;; Tracked objects:
 13045 ;;		On entry : 0/0
 13046 ;;		On exit  : F/0
 13047 ;;		Unchanged: 0/0
 13048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13049 ;;      Params:         0       0       0       0       0       0       0       0       0
 13050 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13051 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13052 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13053 ;;Total ram usage:        0 bytes
 13054 ;; Hardware stack levels used:    1
 13055 ;; Hardware stack levels required when called:   14
 13056 ;; This function calls:
 13057 ;;		_moteApp_delayms
 13058 ;;		_sendCommand
 13059 ;; This function is called by:
 13060 ;;		_moteJoiningProcess
 13061 ;;		_moteRunningProcess
 13062 ;; This function uses a non-reentrant model
 13063 ;;
 13064                           
 13065                           	psect	text38
 13066  0054E0                     __ptext38:
 13067                           	opt stack 0
 13068  0054E0                     _MOTEapp_WriteDataRate:
 13069                           	opt stack 14
 13070                           
 13071                           ;MOTEapp.c: 1103: moteApp_delayms(100);
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;incstack = 0
 13075  0054E0  0100               	movlb	0	; () banked
 13076  0054E2  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 13077  0054E4  0E64               	movlw	100
 13078  0054E6  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 13079  0054E8  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;MOTEapp.c: 1105: if (adrStatus)
 13083  0054EC  518E               	movf	_adrStatus& (0+255),w,b
 13084  0054EE  E00D               	bz	l10329
 13085                           
 13086                           ; BSR set to: 0
 13087                           ;MOTEapp.c: 1106: {
 13088                           ;MOTEapp.c: 1107: sendCommand("mac set adr on");
 13089  0054F0  0E00               	movlw	low STR_242
 13090  0054F2  6FC9               	movwf	sendCommand@string& (0+255),b
 13091  0054F4  0E7D               	movlw	high STR_242
 13092  0054F6  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13093  0054F8  EC37  F01C         	call	_sendCommand	;wreg free
 13094  0054FC                     l10327:
 13095                           
 13096                           ;MOTEapp.c: 1108: moteApp_delayms(100);
 13097  0054FC  0100               	movlb	0	; () banked
 13098  0054FE  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 13099  005500  0E64               	movlw	100
 13100  005502  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 13101  005504  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 13102                           
 13103                           ;MOTEapp.c: 1109: }
 13104  005508  D03F               	goto	l10351
 13105  00550A                     l10329:
 13106                           
 13107                           ; BSR set to: 0
 13108                           ;MOTEapp.c: 1110: else
 13109                           ;MOTEapp.c: 1111: {
 13110                           ;MOTEapp.c: 1112: sendCommand("mac set adr off");
 13111  00550A  0E1C               	movlw	low STR_243
 13112  00550C  6FC9               	movwf	sendCommand@string& (0+255),b
 13113  00550E  0E7C               	movlw	high STR_243
 13114  005510  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13115  005512  EC37  F01C         	call	_sendCommand	;wreg free
 13116  005516  D7F2               	goto	l10327
 13117  005518                     l10333:
 13118                           
 13119                           ; BSR set to: 0
 13120                           ;MOTEapp.c: 1119: sendCommand("mac set dr 0");
 13121  005518  0E8E               	movlw	low STR_244
 13122  00551A  6FC9               	movwf	sendCommand@string& (0+255),b
 13123  00551C  0E7D               	movlw	high STR_244
 13124  00551E  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13125  005520  EC37  F01C         	call	_sendCommand	;wreg free
 13126                           
 13127                           ;MOTEapp.c: 1120: break;
 13128  005524  D041               	goto	l10353
 13129  005526                     l10335:
 13130                           
 13131                           ; BSR set to: 0
 13132                           ;MOTEapp.c: 1122: sendCommand("mac set dr 1");
 13133  005526  0E9B               	movlw	low STR_245
 13134  005528  6FC9               	movwf	sendCommand@string& (0+255),b
 13135  00552A  0E7D               	movlw	high STR_245
 13136  00552C  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13137  00552E  EC37  F01C         	call	_sendCommand	;wreg free
 13138                           
 13139                           ;MOTEapp.c: 1123: break;
 13140  005532  D03A               	goto	l10353
 13141  005534                     l10337:
 13142                           
 13143                           ; BSR set to: 0
 13144                           ;MOTEapp.c: 1125: sendCommand("mac set dr 2");
 13145  005534  0EA8               	movlw	low STR_246
 13146  005536  6FC9               	movwf	sendCommand@string& (0+255),b
 13147  005538  0E7D               	movlw	high STR_246
 13148  00553A  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13149  00553C  EC37  F01C         	call	_sendCommand	;wreg free
 13150                           
 13151                           ;MOTEapp.c: 1126: break;
 13152  005540  D033               	goto	l10353
 13153  005542                     l10339:
 13154                           
 13155                           ; BSR set to: 0
 13156                           ;MOTEapp.c: 1128: sendCommand("mac set dr 3");
 13157  005542  0EB5               	movlw	low STR_247
 13158  005544  6FC9               	movwf	sendCommand@string& (0+255),b
 13159  005546  0E7D               	movlw	high STR_247
 13160  005548  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13161  00554A  EC37  F01C         	call	_sendCommand	;wreg free
 13162                           
 13163                           ;MOTEapp.c: 1129: break;
 13164  00554E  D02C               	goto	l10353
 13165  005550                     l10341:
 13166                           
 13167                           ; BSR set to: 0
 13168                           ;MOTEapp.c: 1131: sendCommand("mac set dr 4");
 13169  005550  0EC2               	movlw	low STR_248
 13170  005552  6FC9               	movwf	sendCommand@string& (0+255),b
 13171  005554  0E7D               	movlw	high STR_248
 13172  005556  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13173  005558  EC37  F01C         	call	_sendCommand	;wreg free
 13174                           
 13175                           ;MOTEapp.c: 1132: break;
 13176  00555C  D025               	goto	l10353
 13177  00555E                     l10343:
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;MOTEapp.c: 1134: sendCommand("mac set dr 5");
 13181  00555E  0ECF               	movlw	low STR_249
 13182  005560  6FC9               	movwf	sendCommand@string& (0+255),b
 13183  005562  0E7D               	movlw	high STR_249
 13184  005564  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13185  005566  EC37  F01C         	call	_sendCommand	;wreg free
 13186                           
 13187                           ;MOTEapp.c: 1135: break;
 13188  00556A  D01E               	goto	l10353
 13189  00556C                     l10345:
 13190                           
 13191                           ; BSR set to: 0
 13192                           ;MOTEapp.c: 1137: sendCommand("mac set dr 6");
 13193  00556C  0EDC               	movlw	low STR_250
 13194  00556E  6FC9               	movwf	sendCommand@string& (0+255),b
 13195  005570  0E7D               	movlw	high STR_250
 13196  005572  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13197  005574  EC37  F01C         	call	_sendCommand	;wreg free
 13198                           
 13199                           ;MOTEapp.c: 1138: break;
 13200  005578  D017               	goto	l10353
 13201  00557A                     l10347:
 13202                           
 13203                           ; BSR set to: 0
 13204                           ;MOTEapp.c: 1140: sendCommand("mac set dr 7");
 13205  00557A  0EE9               	movlw	low STR_251
 13206  00557C  6FC9               	movwf	sendCommand@string& (0+255),b
 13207  00557E  0E7D               	movlw	high STR_251
 13208  005580  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13209  005582  EC37  F01C         	call	_sendCommand	;wreg free
 13210                           
 13211                           ;MOTEapp.c: 1141: break;
 13212  005586  D010               	goto	l10353
 13213  005588                     l10351:
 13214                           
 13215                           ; BSR set to: 0
 13216  005588  51F7               	movf	_dataRateSelection& (0+255),w,b
 13217                           
 13218                           ; Switch size 1, requested type "speed"
 13219                           ; Number of cases is 8, Range of values is 0 to 7
 13220                           ; switch strategies available:
 13221                           ; Name         Instructions Cycles
 13222                           ; simple_byte           25    13 (average)
 13223                           ;	Chosen strategy is simple_byte
 13224  00558A  E0C6               	bz	l10333
 13225  00558C  0A01               	xorlw	1	; case 1
 13226  00558E  E0CB               	bz	l10335
 13227  005590  0A03               	xorlw	3	; case 2
 13228  005592  E0D0               	bz	l10337
 13229  005594  0A01               	xorlw	1	; case 3
 13230  005596  E0D5               	bz	l10339
 13231  005598  0A07               	xorlw	7	; case 4
 13232  00559A  E0DA               	bz	l10341
 13233  00559C  0A01               	xorlw	1	; case 5
 13234  00559E  E0DF               	bz	l10343
 13235  0055A0  0A03               	xorlw	3	; case 6
 13236  0055A2  E0E4               	bz	l10345
 13237  0055A4  0A01               	xorlw	1	; case 7
 13238  0055A6  E0E9               	bz	l10347
 13239  0055A8                     l10353:
 13240                           
 13241                           ;MOTEapp.c: 1146: moteApp_delayms(100);
 13242  0055A8  0100               	movlb	0	; () banked
 13243  0055AA  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 13244  0055AC  0E64               	movlw	100
 13245  0055AE  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 13246  0055B0  ECD1  F01B         	call	_moteApp_delayms	;wreg free
 13247                           
 13248                           ; BSR set to: 0
 13249                           ;MOTEapp.c: 1147: sendCommand("mac save");
 13250  0055B4  0E48               	movlw	low STR_252
 13251  0055B6  6FC9               	movwf	sendCommand@string& (0+255),b
 13252  0055B8  0E7F               	movlw	high STR_252
 13253  0055BA  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13254  0055BC  EC37  F01C         	call	_sendCommand	;wreg free
 13255                           
 13256                           ;MOTEapp.c: 1148: moteApp_delayms(300);
 13257  0055C0  0E01               	movlw	1
 13258  0055C2  0100               	movlb	0	; () banked
 13259  0055C4  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13260  0055C6  0E2C               	movlw	44
 13261  0055C8  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 13262  0055CA  EFD1  F01B         	goto	_moteApp_delayms	;wreg free
 13263  0055CE                     __end_of_MOTEapp_WriteDataRate:
 13264                           	opt stack 0
 13265                           tblptru	equ	0xFF8
 13266                           tblptrh	equ	0xFF7
 13267                           tblptrl	equ	0xFF6
 13268                           tablat	equ	0xFF5
 13269                           prodl	equ	0xFF3
 13270                           intcon	equ	0xFF2
 13271                           postinc0	equ	0xFEE
 13272                           wreg	equ	0xFE8
 13273                           postdec1	equ	0xFE5
 13274                           fsr1l	equ	0xFE1
 13275                           indf2	equ	0xFDF
 13276                           fsr2h	equ	0xFDA
 13277                           fsr2l	equ	0xFD9
 13278                           status	equ	0xFD8
 13279                           
 13280 ;; *************** function _sendCommand *****************
 13281 ;; Defined at:
 13282 ;;		line 1229 in file "../Includes/Board/MOTEapp.c"
 13283 ;; Parameters:    Size  Location     Type
 13284 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 13285 ;;		 -> STR_257(26), STR_256(26), STR_255(26), STR_254(26), 
 13286 ;;		 -> STR_253(1), STR_252(9), STR_251(13), STR_250(13), 
 13287 ;;		 -> STR_249(13), STR_248(13), STR_247(13), STR_246(13), 
 13288 ;;		 -> STR_245(13), STR_244(13), STR_243(16), STR_242(15), 
 13289 ;;		 -> STR_71(11), STR_69(11), STR_67(11), STR_65(11), 
 13290 ;;		 -> STR_63(12), STR_59(14), STR_51(14), STR_45(10), 
 13291 ;;		 -> STR_44(13), STR_39(13), STR_38(14), STR_31(13), 
 13292 ;;		 -> STR_29(12), STR_22(20), STR_21(2), 
 13293 ;; Auto vars:     Size  Location     Type
 13294 ;;		None
 13295 ;; Return value:  Size  Location     Type
 13296 ;;		None               void
 13297 ;; Registers used:
 13298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13299 ;; Tracked objects:
 13300 ;;		On entry : F/0
 13301 ;;		On exit  : 0/0
 13302 ;;		Unchanged: 0/0
 13303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13304 ;;      Params:         0       2       0       0       0       0       0       0       0
 13305 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13306 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13307 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13308 ;;Total ram usage:        2 bytes
 13309 ;; Hardware stack levels used:    1
 13310 ;; Hardware stack levels required when called:   13
 13311 ;; This function calls:
 13312 ;;		_EUSART_Write
 13313 ;;		_EndLine
 13314 ;; This function is called by:
 13315 ;;		_modemResync
 13316 ;;		_modemSleep
 13317 ;;		_moteJoiningProcess
 13318 ;;		_MOTEapp_WriteDataRate
 13319 ;;		_moteApp_toggleLeds
 13320 ;; This function uses a non-reentrant model
 13321 ;;
 13322                           
 13323                           	psect	text39
 13324  00386E                     __ptext39:
 13325                           	opt stack 0
 13326  00386E                     _sendCommand:
 13327                           	opt stack 14
 13328                           
 13329                           ; BSR set to: 0
 13330                           ;MOTEapp.c: 1232: while (*string)
 13331                           
 13332                           ; BSR set to: 0
 13333                           ;incstack = 0
 13334  00386E  D00B               	goto	l9877
 13335  003870                     l9873:
 13336                           
 13337                           ; BSR set to: 0
 13338                           ;MOTEapp.c: 1233: {
 13339                           ;MOTEapp.c: 1234: EUSART_Write(*string++);
 13340  003870  C0C9  FFF6         	movff	sendCommand@string,tblptrl
 13341  003874  C0CA  FFF7         	movff	sendCommand@string+1,tblptrh
 13342  003878                     	if	0	;tblptru may be non-zero
 13343  003878                     	endif
 13344  003878                     	if	0	;tblptru may be non-zero
 13345  003878                     	endif
 13346  003878  0008               	tblrd		*
 13347  00387A  50F5               	movf	tablat,w,c
 13348  00387C  ECD1  F01C         	call	_EUSART_Write
 13349  003880  0100               	movlb	0	; () banked
 13350  003882  4BC9               	infsnz	sendCommand@string& (0+255),f,b
 13351  003884  2BCA               	incf	(sendCommand@string+1)& (0+255),f,b
 13352  003886                     l9877:
 13353                           
 13354                           ; BSR set to: 0
 13355  003886  C0C9  FFF6         	movff	sendCommand@string,tblptrl
 13356  00388A  C0CA  FFF7         	movff	sendCommand@string+1,tblptrh
 13357  00388E                     	if	0	;tblptru may be non-zero
 13358  00388E                     	endif
 13359  00388E                     	if	0	;tblptru may be non-zero
 13360  00388E                     	endif
 13361  00388E  0008               	tblrd		*
 13362  003890  50F5               	movf	tablat,w,c
 13363  003892  E1EE               	bnz	l9873
 13364                           
 13365                           ; BSR set to: 0
 13366                           ;MOTEapp.c: 1235: }
 13367                           ;MOTEapp.c: 1236: EndLine();
 13368  003894  EF8B  F01A         	goto	_EndLine	;wreg free
 13369  003898                     __end_of_sendCommand:
 13370                           	opt stack 0
 13371                           tblptru	equ	0xFF8
 13372                           tblptrh	equ	0xFF7
 13373                           tblptrl	equ	0xFF6
 13374                           tablat	equ	0xFF5
 13375                           prodl	equ	0xFF3
 13376                           intcon	equ	0xFF2
 13377                           postinc0	equ	0xFEE
 13378                           wreg	equ	0xFE8
 13379                           postdec1	equ	0xFE5
 13380                           fsr1l	equ	0xFE1
 13381                           indf2	equ	0xFDF
 13382                           fsr2h	equ	0xFDA
 13383                           fsr2l	equ	0xFD9
 13384                           status	equ	0xFD8
 13385                           
 13386 ;; *************** function _EndLine *****************
 13387 ;; Defined at:
 13388 ;;		line 1223 in file "../Includes/Board/MOTEapp.c"
 13389 ;; Parameters:    Size  Location     Type
 13390 ;;		None
 13391 ;; Auto vars:     Size  Location     Type
 13392 ;;		None
 13393 ;; Return value:  Size  Location     Type
 13394 ;;		None               void
 13395 ;; Registers used:
 13396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13397 ;; Tracked objects:
 13398 ;;		On entry : F/0
 13399 ;;		On exit  : 0/0
 13400 ;;		Unchanged: 0/0
 13401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13402 ;;      Params:         0       0       0       0       0       0       0       0       0
 13403 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13404 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13405 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13406 ;;Total ram usage:        0 bytes
 13407 ;; Hardware stack levels used:    1
 13408 ;; Hardware stack levels required when called:   12
 13409 ;; This function calls:
 13410 ;;		_EUSART_Write
 13411 ;; This function is called by:
 13412 ;;		_sendCommand
 13413 ;;		_sendDataCommand
 13414 ;; This function uses a non-reentrant model
 13415 ;;
 13416                           
 13417                           	psect	text40
 13418  003516                     __ptext40:
 13419                           	opt stack 0
 13420  003516                     _EndLine:
 13421                           	opt stack 14
 13422                           
 13423                           ; BSR set to: 0
 13424                           ;MOTEapp.c: 1225: EUSART_Write(0x0D);
 13425                           
 13426                           ;incstack = 0
 13427  003516  0E0D               	movlw	13
 13428  003518  ECD1  F01C         	call	_EUSART_Write
 13429                           
 13430                           ;MOTEapp.c: 1226: EUSART_Write(0x0A);
 13431  00351C  0E0A               	movlw	10
 13432  00351E  EFD1  F01C         	goto	_EUSART_Write
 13433  003522                     __end_of_EndLine:
 13434                           	opt stack 0
 13435                           tblptru	equ	0xFF8
 13436                           tblptrh	equ	0xFF7
 13437                           tblptrl	equ	0xFF6
 13438                           tablat	equ	0xFF5
 13439                           prodl	equ	0xFF3
 13440                           intcon	equ	0xFF2
 13441                           postinc0	equ	0xFEE
 13442                           wreg	equ	0xFE8
 13443                           postdec1	equ	0xFE5
 13444                           fsr1l	equ	0xFE1
 13445                           indf2	equ	0xFDF
 13446                           fsr2h	equ	0xFDA
 13447                           fsr2l	equ	0xFD9
 13448                           status	equ	0xFD8
 13449                           
 13450 ;; *************** function _moteApp_delayms *****************
 13451 ;; Defined at:
 13452 ;;		line 1419 in file "../Includes/Board/MOTEapp.c"
 13453 ;; Parameters:    Size  Location     Type
 13454 ;;  length          2    0[BANK0 ] unsigned int 
 13455 ;; Auto vars:     Size  Location     Type
 13456 ;;  counter         2    3[BANK0 ] unsigned int 
 13457 ;; Return value:  Size  Location     Type
 13458 ;;		None               void
 13459 ;; Registers used:
 13460 ;;		wreg, status,2, status,0
 13461 ;; Tracked objects:
 13462 ;;		On entry : F/0
 13463 ;;		On exit  : F/0
 13464 ;;		Unchanged: 0/0
 13465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13466 ;;      Params:         0       2       0       0       0       0       0       0       0
 13467 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13468 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13469 ;;      Totals:         0       5       0       0       0       0       0       0       0
 13470 ;;Total ram usage:        5 bytes
 13471 ;; Hardware stack levels used:    1
 13472 ;; Hardware stack levels required when called:   11
 13473 ;; This function calls:
 13474 ;;		Nothing
 13475 ;; This function is called by:
 13476 ;;		_main
 13477 ;;		_test_powerup
 13478 ;;		_test_switch
 13479 ;;		_test_comms
 13480 ;;		_test_leds
 13481 ;;		_test_adc
 13482 ;;		_modemResync
 13483 ;;		_modemSleep
 13484 ;;		_moteHandler
 13485 ;;		_moteJoiningProcess
 13486 ;;		_moteRunningProcess
 13487 ;;		_MOTEapp_WriteDataRate
 13488 ;;		_moteApp_toggleLeds
 13489 ;; This function uses a non-reentrant model
 13490 ;;
 13491                           
 13492                           	psect	text41
 13493  0037A2                     __ptext41:
 13494                           	opt stack 0
 13495  0037A2                     _moteApp_delayms:
 13496                           	opt stack 17
 13497                           
 13498                           ; BSR set to: 0
 13499                           ;MOTEapp.c: 1421: uint16_t counter;
 13500                           ;MOTEapp.c: 1422: for(counter = 0; counter < length; counter++)
 13501                           
 13502                           ;incstack = 0
 13503  0037A2  6BCB               	clrf	moteApp_delayms@counter& (0+255),b
 13504  0037A4  6BCC               	clrf	(moteApp_delayms@counter+1)& (0+255),b
 13505  0037A6  D00B               	goto	l727
 13506  0037A8                     l9865:
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;MOTEapp.c: 1423: {
 13510                           ;MOTEapp.c: 1424: _delay((unsigned long)((1)*(48000000/4000.0)));
 13511  0037A8  0E10               	movlw	16
 13512  0037AA  6FCA               	movwf	??_moteApp_delayms& (0+255),b
 13513  0037AC  0E94               	movlw	148
 13514  0037AE                     u10607:
 13515  0037AE  2EE8               	decfsz	wreg,f,c
 13516  0037B0  D7FE               	goto	u10607
 13517  0037B2  2FCA               	decfsz	??_moteApp_delayms& (0+255),f,b
 13518  0037B4  D7FC               	goto	u10607
 13519  0037B6  D000               	nop2	
 13520  0037B8  0100               	movlb	0	; () banked
 13521  0037BA  4BCB               	infsnz	moteApp_delayms@counter& (0+255),f,b
 13522  0037BC  2BCC               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 13523  0037BE                     l727:
 13524                           
 13525                           ; BSR set to: 0
 13526  0037BE  51C8               	movf	moteApp_delayms@length& (0+255),w,b
 13527  0037C0  5DCB               	subwf	moteApp_delayms@counter& (0+255),w,b
 13528  0037C2  51C9               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 13529  0037C4  59CC               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 13530  0037C6  E3F0               	bnc	l9865
 13531                           
 13532                           ; BSR set to: 0
 13533  0037C8  0012               	return		;funcret
 13534  0037CA                     __end_of_moteApp_delayms:
 13535                           	opt stack 0
 13536                           tblptru	equ	0xFF8
 13537                           tblptrh	equ	0xFF7
 13538                           tblptrl	equ	0xFF6
 13539                           tablat	equ	0xFF5
 13540                           prodl	equ	0xFF3
 13541                           intcon	equ	0xFF2
 13542                           postinc0	equ	0xFEE
 13543                           wreg	equ	0xFE8
 13544                           postdec1	equ	0xFE5
 13545                           fsr1l	equ	0xFE1
 13546                           indf2	equ	0xFDF
 13547                           fsr2h	equ	0xFDA
 13548                           fsr2l	equ	0xFD9
 13549                           status	equ	0xFD8
 13550                           
 13551 ;; *************** function _MOTEapp_SetDataRate *****************
 13552 ;; Defined at:
 13553 ;;		line 1095 in file "../Includes/Board/MOTEapp.c"
 13554 ;; Parameters:    Size  Location     Type
 13555 ;;  dataRate        1    wreg     unsigned char 
 13556 ;; Auto vars:     Size  Location     Type
 13557 ;;  dataRate        1    0[BANK0 ] unsigned char 
 13558 ;; Return value:  Size  Location     Type
 13559 ;;		None               void
 13560 ;; Registers used:
 13561 ;;		wreg
 13562 ;; Tracked objects:
 13563 ;;		On entry : F/0
 13564 ;;		On exit  : 0/0
 13565 ;;		Unchanged: 0/0
 13566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13567 ;;      Params:         0       0       0       0       0       0       0       0       0
 13568 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13569 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13570 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13571 ;;Total ram usage:        1 bytes
 13572 ;; Hardware stack levels used:    1
 13573 ;; Hardware stack levels required when called:   11
 13574 ;; This function calls:
 13575 ;;		Nothing
 13576 ;; This function is called by:
 13577 ;;		_moteJoiningProcess
 13578 ;;		_moteRunningProcess
 13579 ;; This function uses a non-reentrant model
 13580 ;;
 13581                           
 13582                           	psect	text42
 13583  0034E2                     __ptext42:
 13584                           	opt stack 0
 13585  0034E2                     _MOTEapp_SetDataRate:
 13586                           	opt stack 17
 13587                           
 13588                           ; BSR set to: 0
 13589                           ;incstack = 0
 13590                           ;MOTEapp_SetDataRate@dataRate stored from wreg
 13591  0034E2  6FC8               	movwf	MOTEapp_SetDataRate@dataRate& (0+255),b
 13592                           
 13593                           ;MOTEapp.c: 1097: dataRateSelection = dataRate;
 13594  0034E4  C0C8  F0F7         	movff	MOTEapp_SetDataRate@dataRate,_dataRateSelection
 13595  0034E8  0012               	return		;funcret
 13596  0034EA                     __end_of_MOTEapp_SetDataRate:
 13597                           	opt stack 0
 13598                           tblptru	equ	0xFF8
 13599                           tblptrh	equ	0xFF7
 13600                           tblptrl	equ	0xFF6
 13601                           tablat	equ	0xFF5
 13602                           prodl	equ	0xFF3
 13603                           intcon	equ	0xFF2
 13604                           postinc0	equ	0xFEE
 13605                           wreg	equ	0xFE8
 13606                           postdec1	equ	0xFE5
 13607                           fsr1l	equ	0xFE1
 13608                           indf2	equ	0xFDF
 13609                           fsr2h	equ	0xFDA
 13610                           fsr2l	equ	0xFD9
 13611                           status	equ	0xFD8
 13612                           
 13613 ;; *************** function _MOTEapp_SetADR *****************
 13614 ;; Defined at:
 13615 ;;		line 1090 in file "../Includes/Board/MOTEapp.c"
 13616 ;; Parameters:    Size  Location     Type
 13617 ;;  state           1    wreg     unsigned char 
 13618 ;; Auto vars:     Size  Location     Type
 13619 ;;  state           1    0[BANK0 ] unsigned char 
 13620 ;; Return value:  Size  Location     Type
 13621 ;;		None               void
 13622 ;; Registers used:
 13623 ;;		wreg
 13624 ;; Tracked objects:
 13625 ;;		On entry : F/0
 13626 ;;		On exit  : 0/0
 13627 ;;		Unchanged: 0/0
 13628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13629 ;;      Params:         0       0       0       0       0       0       0       0       0
 13630 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13631 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13632 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13633 ;;Total ram usage:        1 bytes
 13634 ;; Hardware stack levels used:    1
 13635 ;; Hardware stack levels required when called:   11
 13636 ;; This function calls:
 13637 ;;		Nothing
 13638 ;; This function is called by:
 13639 ;;		_moteJoiningProcess
 13640 ;;		_moteRunningProcess
 13641 ;; This function uses a non-reentrant model
 13642 ;;
 13643                           
 13644                           	psect	text43
 13645  0034DA                     __ptext43:
 13646                           	opt stack 0
 13647  0034DA                     _MOTEapp_SetADR:
 13648                           	opt stack 17
 13649                           
 13650                           ;incstack = 0
 13651                           ;MOTEapp_SetADR@state stored from wreg
 13652  0034DA  6FC8               	movwf	MOTEapp_SetADR@state& (0+255),b
 13653                           
 13654                           ;MOTEapp.c: 1092: adrStatus = state;
 13655  0034DC  C0C8  F08E         	movff	MOTEapp_SetADR@state,_adrStatus
 13656  0034E0  0012               	return		;funcret
 13657  0034E2                     __end_of_MOTEapp_SetADR:
 13658                           	opt stack 0
 13659                           tblptru	equ	0xFF8
 13660                           tblptrh	equ	0xFF7
 13661                           tblptrl	equ	0xFF6
 13662                           tablat	equ	0xFF5
 13663                           prodl	equ	0xFF3
 13664                           intcon	equ	0xFF2
 13665                           postinc0	equ	0xFEE
 13666                           wreg	equ	0xFE8
 13667                           postdec1	equ	0xFE5
 13668                           fsr1l	equ	0xFE1
 13669                           indf2	equ	0xFDF
 13670                           fsr2h	equ	0xFDA
 13671                           fsr2l	equ	0xFD9
 13672                           status	equ	0xFD8
 13673                           
 13674 ;; *************** function _DATAEE_WriteByte *****************
 13675 ;; Defined at:
 13676 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 13677 ;; Parameters:    Size  Location     Type
 13678 ;;  bAdd            1    wreg     unsigned char 
 13679 ;;  bData           1    0[BANK0 ] unsigned char 
 13680 ;; Auto vars:     Size  Location     Type
 13681 ;;  bAdd            1    1[BANK0 ] unsigned char 
 13682 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 13683 ;; Return value:  Size  Location     Type
 13684 ;;		None               void
 13685 ;; Registers used:
 13686 ;;		wreg, status,2
 13687 ;; Tracked objects:
 13688 ;;		On entry : F/0
 13689 ;;		On exit  : 0/0
 13690 ;;		Unchanged: 0/0
 13691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13692 ;;      Params:         0       1       0       0       0       0       0       0       0
 13693 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13694 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13695 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13696 ;;Total ram usage:        3 bytes
 13697 ;; Hardware stack levels used:    1
 13698 ;; Hardware stack levels required when called:   11
 13699 ;; This function calls:
 13700 ;;		Nothing
 13701 ;; This function is called by:
 13702 ;;		_main
 13703 ;;		_moteJoiningProcess
 13704 ;; This function uses a non-reentrant model
 13705 ;;
 13706                           
 13707                           	psect	text44
 13708  003AB2                     __ptext44:
 13709                           	opt stack 0
 13710  003AB2                     _DATAEE_WriteByte:
 13711                           	opt stack 17
 13712                           
 13713                           ;incstack = 0
 13714                           ;DATAEE_WriteByte@bAdd stored from wreg
 13715  003AB2  6FC9               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 13716                           
 13717                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 13718  003AB4  0E00               	movlw	0
 13719  003AB6  BEF2               	btfsc	intcon,7,c	;volatile
 13720  003AB8  0E01               	movlw	1
 13721  003ABA  0100               	movlb	0	; () banked
 13722  003ABC  6FCA               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 13726  003ABE  C0C9  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 13727                           
 13728                           ; BSR set to: 0
 13729                           ;memory.c: 171: EEDATA = bData;
 13730  003AC2  C0C8  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 13731                           
 13732                           ; BSR set to: 0
 13733                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 13734  003AC6  9EA6               	bcf	4006,7,c	;volatile
 13735                           
 13736                           ; BSR set to: 0
 13737                           ;memory.c: 173: EECON1bits.CFGS = 0;
 13738  003AC8  9CA6               	bcf	4006,6,c	;volatile
 13739                           
 13740                           ; BSR set to: 0
 13741                           ;memory.c: 174: EECON1bits.WREN = 1;
 13742  003ACA  84A6               	bsf	4006,2,c	;volatile
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;memory.c: 175: INTCONbits.GIE = 0;
 13746  003ACC  9EF2               	bcf	intcon,7,c	;volatile
 13747                           
 13748                           ; BSR set to: 0
 13749                           ;memory.c: 176: EECON2 = 0x55;
 13750  003ACE  0E55               	movlw	85
 13751  003AD0  6EA7               	movwf	4007,c	;volatile
 13752                           
 13753                           ; BSR set to: 0
 13754                           ;memory.c: 177: EECON2 = 0xAA;
 13755  003AD2  0EAA               	movlw	170
 13756  003AD4  6EA7               	movwf	4007,c	;volatile
 13757                           
 13758                           ; BSR set to: 0
 13759                           ;memory.c: 178: EECON1bits.WR = 1;
 13760  003AD6  82A6               	bsf	4006,1,c	;volatile
 13761  003AD8                     l1350:
 13762  003AD8  B2A6               	btfsc	4006,1,c	;volatile
 13763  003ADA  D7FE               	goto	l1350
 13764                           
 13765                           ;memory.c: 182: }
 13766                           ;memory.c: 184: EECON1bits.WREN = 0;
 13767  003ADC  94A6               	bcf	4006,2,c	;volatile
 13768                           
 13769                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 13770  003ADE  0100               	movlb	0	; () banked
 13771  003AE0  B1CA               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 13772  003AE2  D002               	bra	u8335
 13773  003AE4  9EF2               	bcf	intcon,7,c	;volatile
 13774  003AE6  D001               	bra	u8336
 13775  003AE8                     u8335:
 13776  003AE8  8EF2               	bsf	intcon,7,c	;volatile
 13777  003AEA                     u8336:
 13778  003AEA  0012               	return		;funcret
 13779  003AEC                     __end_of_DATAEE_WriteByte:
 13780                           	opt stack 0
 13781                           tblptru	equ	0xFF8
 13782                           tblptrh	equ	0xFF7
 13783                           tblptrl	equ	0xFF6
 13784                           tablat	equ	0xFF5
 13785                           prodl	equ	0xFF3
 13786                           intcon	equ	0xFF2
 13787                           postinc0	equ	0xFEE
 13788                           wreg	equ	0xFE8
 13789                           postdec1	equ	0xFE5
 13790                           fsr1l	equ	0xFE1
 13791                           indf2	equ	0xFDF
 13792                           fsr2h	equ	0xFDA
 13793                           fsr2l	equ	0xFD9
 13794                           status	equ	0xFD8
 13795                           
 13796 ;; *************** function _TMRapp_Handler *****************
 13797 ;; Defined at:
 13798 ;;		line 22 in file "../Includes/Drivers/TMRapp.c"
 13799 ;; Parameters:    Size  Location     Type
 13800 ;;		None
 13801 ;; Auto vars:     Size  Location     Type
 13802 ;;		None
 13803 ;; Return value:  Size  Location     Type
 13804 ;;		None               void
 13805 ;; Registers used:
 13806 ;;		wreg, status,2, status,0, cstack
 13807 ;; Tracked objects:
 13808 ;;		On entry : F/0
 13809 ;;		On exit  : F/0
 13810 ;;		Unchanged: 0/0
 13811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13812 ;;      Params:         0       0       0       0       0       0       0       0       0
 13813 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13814 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13815 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13816 ;;Total ram usage:        0 bytes
 13817 ;; Hardware stack levels used:    1
 13818 ;; Hardware stack levels required when called:   12
 13819 ;; This function calls:
 13820 ;;		___lwmod
 13821 ;; This function is called by:
 13822 ;;		_moteHandler
 13823 ;; This function uses a non-reentrant model
 13824 ;;
 13825                           
 13826                           	psect	text45
 13827  00531E                     __ptext45:
 13828                           	opt stack 0
 13829  00531E                     _TMRapp_Handler:
 13830                           	opt stack 17
 13831                           
 13832                           ; BSR set to: 0
 13833                           ;TMRapp.c: 25: timerMsTickCount++;
 13834                           
 13835                           ;incstack = 0
 13836  00531E  4B84               	infsnz	_timerMsTickCount& (0+255),f,b
 13837  005320  2B85               	incf	(_timerMsTickCount+1)& (0+255),f,b
 13838                           
 13839                           ; BSR set to: 0
 13840                           ;TMRapp.c: 27: if ( (timerMsTickCount % 10) == 0)
 13841  005322  C084  F0C8         	movff	_timerMsTickCount,___lwmod@dividend
 13842  005326  C085  F0C9         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 13843  00532A  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 13844  00532C  0E0A               	movlw	10
 13845  00532E  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13846  005330  ECB2  F01D         	call	___lwmod	;wreg free
 13847  005334  51C8               	movf	?___lwmod& (0+255),w,b
 13848  005336  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13849  005338  A4D8               	btfss	status,2,c
 13850  00533A  0012               	return	
 13851                           
 13852                           ; BSR set to: 0
 13853                           ;TMRapp.c: 28: {
 13854                           ;TMRapp.c: 29: appTimer.mSecTenTick = 1;
 13855  00533C  838F               	bsf	_appTimer& (0+255),1,b
 13856                           
 13857                           ; BSR set to: 0
 13858                           ;TMRapp.c: 30: if ( (timerMsTickCount % 100) == 0)
 13859  00533E  C084  F0C8         	movff	_timerMsTickCount,___lwmod@dividend
 13860  005342  C085  F0C9         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 13861  005346  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 13862  005348  0E64               	movlw	100
 13863  00534A  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13864  00534C  ECB2  F01D         	call	___lwmod	;wreg free
 13865  005350  51C8               	movf	?___lwmod& (0+255),w,b
 13866  005352  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13867  005354  A4D8               	btfss	status,2,c
 13868  005356  0012               	return	
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;TMRapp.c: 31: {
 13872                           ;TMRapp.c: 32: appTimer.mSecHundredTick = 1;
 13873  005358  858F               	bsf	_appTimer& (0+255),2,b
 13874                           
 13875                           ; BSR set to: 0
 13876                           ;TMRapp.c: 33: if ( (timerMsTickCount % 1000) == 0)
 13877  00535A  C084  F0C8         	movff	_timerMsTickCount,___lwmod@dividend
 13878  00535E  C085  F0C9         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 13879  005362  0E03               	movlw	3
 13880  005364  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
 13881  005366  0EE8               	movlw	232
 13882  005368  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13883  00536A  ECB2  F01D         	call	___lwmod	;wreg free
 13884  00536E  51C8               	movf	?___lwmod& (0+255),w,b
 13885  005370  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13886  005372  A4D8               	btfss	status,2,c
 13887  005374  0012               	return	
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;TMRapp.c: 34: {
 13891                           ;TMRapp.c: 35: appTimer.SecTick = 1;
 13892  005376  878F               	bsf	_appTimer& (0+255),3,b
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;TMRapp.c: 36: if ( (timerMsTickCount % 60000) == 0)
 13896  005378  C084  F0C8         	movff	_timerMsTickCount,___lwmod@dividend
 13897  00537C  C085  F0C9         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 13898  005380  0EEA               	movlw	234
 13899  005382  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
 13900  005384  0E60               	movlw	96
 13901  005386  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13902  005388  ECB2  F01D         	call	___lwmod	;wreg free
 13903  00538C  51C8               	movf	?___lwmod& (0+255),w,b
 13904  00538E  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13905  005390  A4D8               	btfss	status,2,c
 13906  005392  0012               	return	
 13907                           
 13908                           ; BSR set to: 0
 13909                           ;TMRapp.c: 37: {
 13910                           ;TMRapp.c: 38: timerMinTickCount++;
 13911  005394  4B82               	infsnz	_timerMinTickCount& (0+255),f,b
 13912  005396  2B83               	incf	(_timerMinTickCount+1)& (0+255),f,b
 13913                           
 13914                           ; BSR set to: 0
 13915                           ;TMRapp.c: 39: appTimer.MinTick = 1;
 13916  005398  898F               	bsf	_appTimer& (0+255),4,b
 13917                           
 13918                           ; BSR set to: 0
 13919                           ;TMRapp.c: 40: if ( (timerMinTickCount % 60) == 0)
 13920  00539A  C082  F0C8         	movff	_timerMinTickCount,___lwmod@dividend
 13921  00539E  C083  F0C9         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 13922  0053A2  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 13923  0053A4  0E3C               	movlw	60
 13924  0053A6  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13925  0053A8  ECB2  F01D         	call	___lwmod	;wreg free
 13926  0053AC  51C8               	movf	?___lwmod& (0+255),w,b
 13927  0053AE  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13928  0053B0  A4D8               	btfss	status,2,c
 13929  0053B2  0012               	return	
 13930                           
 13931                           ; BSR set to: 0
 13932                           ;TMRapp.c: 41: {
 13933                           ;TMRapp.c: 42: appTimer.HourTick = 1;
 13934  0053B4  8B8F               	bsf	_appTimer& (0+255),5,b
 13935                           
 13936                           ; BSR set to: 0
 13937                           ;TMRapp.c: 43: if ( (timerMinTickCount % 720) == 0)
 13938  0053B6  C082  F0C8         	movff	_timerMinTickCount,___lwmod@dividend
 13939  0053BA  C083  F0C9         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 13940  0053BE  0E02               	movlw	2
 13941  0053C0  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
 13942  0053C2  0ED0               	movlw	208
 13943  0053C4  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13944  0053C6  ECB2  F01D         	call	___lwmod	;wreg free
 13945  0053CA  51C8               	movf	?___lwmod& (0+255),w,b
 13946  0053CC  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13947  0053CE  A4D8               	btfss	status,2,c
 13948  0053D0  0012               	return	
 13949                           
 13950                           ; BSR set to: 0
 13951                           ;TMRapp.c: 44: {
 13952                           ;TMRapp.c: 45: appTimer.HalfDayTick = 1;
 13953  0053D2  8D8F               	bsf	_appTimer& (0+255),6,b
 13954                           
 13955                           ; BSR set to: 0
 13956                           ;TMRapp.c: 46: if ( (timerMinTickCount % 1440) == 0)
 13957  0053D4  C082  F0C8         	movff	_timerMinTickCount,___lwmod@dividend
 13958  0053D8  C083  F0C9         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 13959  0053DC  0E05               	movlw	5
 13960  0053DE  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
 13961  0053E0  0EA0               	movlw	160
 13962  0053E2  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13963  0053E4  ECB2  F01D         	call	___lwmod	;wreg free
 13964  0053E8  51C8               	movf	?___lwmod& (0+255),w,b
 13965  0053EA  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13966  0053EC  A4D8               	btfss	status,2,c
 13967  0053EE  0012               	return	
 13968                           
 13969                           ; BSR set to: 0
 13970                           ;TMRapp.c: 47: {
 13971                           ;TMRapp.c: 48: appTimer.DayTick = 1;
 13972  0053F0  8F8F               	bsf	_appTimer& (0+255),7,b
 13973                           
 13974                           ;TMRapp.c: 50: timerMsTickCount = 0;
 13975  0053F2  6B84               	clrf	_timerMsTickCount& (0+255),b
 13976  0053F4  6B85               	clrf	(_timerMsTickCount+1)& (0+255),b
 13977                           
 13978                           ;TMRapp.c: 51: timerMinTickCount = 0;
 13979  0053F6  6B82               	clrf	_timerMinTickCount& (0+255),b
 13980  0053F8  6B83               	clrf	(_timerMinTickCount+1)& (0+255),b
 13981  0053FA  0012               	return	
 13982  0053FC                     __end_of_TMRapp_Handler:
 13983                           	opt stack 0
 13984                           tblptru	equ	0xFF8
 13985                           tblptrh	equ	0xFF7
 13986                           tblptrl	equ	0xFF6
 13987                           tablat	equ	0xFF5
 13988                           prodl	equ	0xFF3
 13989                           intcon	equ	0xFF2
 13990                           postinc0	equ	0xFEE
 13991                           wreg	equ	0xFE8
 13992                           postdec1	equ	0xFE5
 13993                           fsr1l	equ	0xFE1
 13994                           indf2	equ	0xFDF
 13995                           fsr2h	equ	0xFDA
 13996                           fsr2l	equ	0xFD9
 13997                           status	equ	0xFD8
 13998                           
 13999 ;; *************** function ___lwmod *****************
 14000 ;; Defined at:
 14001 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14002 ;; Parameters:    Size  Location     Type
 14003 ;;  dividend        2    0[BANK0 ] unsigned int 
 14004 ;;  divisor         2    2[BANK0 ] unsigned int 
 14005 ;; Auto vars:     Size  Location     Type
 14006 ;;  counter         1    4[BANK0 ] unsigned char 
 14007 ;; Return value:  Size  Location     Type
 14008 ;;                  2    0[BANK0 ] unsigned int 
 14009 ;; Registers used:
 14010 ;;		wreg, status,2, status,0
 14011 ;; Tracked objects:
 14012 ;;		On entry : F/0
 14013 ;;		On exit  : F/0
 14014 ;;		Unchanged: 0/0
 14015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14016 ;;      Params:         0       4       0       0       0       0       0       0       0
 14017 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14018 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14019 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14020 ;;Total ram usage:        5 bytes
 14021 ;; Hardware stack levels used:    1
 14022 ;; Hardware stack levels required when called:   11
 14023 ;; This function calls:
 14024 ;;		Nothing
 14025 ;; This function is called by:
 14026 ;;		_moteApp_add16bToDataBuffer
 14027 ;;		_TMRapp_Handler
 14028 ;;		_oled_putUint16
 14029 ;; This function uses a non-reentrant model
 14030 ;;
 14031                           
 14032                           	psect	text46
 14033  003B64                     __ptext46:
 14034                           	opt stack 0
 14035  003B64                     ___lwmod:
 14036                           	opt stack 16
 14037                           
 14038                           ; BSR set to: 0
 14039                           
 14040                           ; BSR set to: 0
 14041                           ;incstack = 0
 14042  003B64  51CA               	movf	___lwmod@divisor& (0+255),w,b
 14043  003B66  11CB               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14044  003B68  E017               	bz	l2361
 14045                           
 14046                           ; BSR set to: 0
 14047  003B6A  0E01               	movlw	1
 14048  003B6C  6FCC               	movwf	___lwmod@counter& (0+255),b
 14049  003B6E  D004               	goto	l10193
 14050  003B70                     l10191:
 14051                           
 14052                           ; BSR set to: 0
 14053  003B70  90D8               	bcf	status,0,c
 14054  003B72  37CA               	rlcf	___lwmod@divisor& (0+255),f,b
 14055  003B74  37CB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14056  003B76  2BCC               	incf	___lwmod@counter& (0+255),f,b
 14057  003B78                     l10193:
 14058                           
 14059                           ; BSR set to: 0
 14060  003B78  AFCB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14061  003B7A  D7FA               	goto	l10191
 14062  003B7C                     l10195:
 14063                           
 14064                           ; BSR set to: 0
 14065  003B7C  51CA               	movf	___lwmod@divisor& (0+255),w,b
 14066  003B7E  5DC8               	subwf	___lwmod@dividend& (0+255),w,b
 14067  003B80  51CB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14068  003B82  59C9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14069  003B84  E304               	bnc	l10199
 14070                           
 14071                           ; BSR set to: 0
 14072  003B86  51CA               	movf	___lwmod@divisor& (0+255),w,b
 14073  003B88  5FC8               	subwf	___lwmod@dividend& (0+255),f,b
 14074  003B8A  51CB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14075  003B8C  5BC9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14076  003B8E                     l10199:
 14077                           
 14078                           ; BSR set to: 0
 14079  003B8E  90D8               	bcf	status,0,c
 14080  003B90  33CB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14081  003B92  33CA               	rrcf	___lwmod@divisor& (0+255),f,b
 14082                           
 14083                           ; BSR set to: 0
 14084  003B94  2FCC               	decfsz	___lwmod@counter& (0+255),f,b
 14085  003B96  D7F2               	goto	l10195
 14086  003B98                     l2361:
 14087                           
 14088                           ; BSR set to: 0
 14089  003B98  C0C8  F0C8         	movff	___lwmod@dividend,?___lwmod
 14090  003B9C  C0C9  F0C9         	movff	___lwmod@dividend+1,?___lwmod+1
 14091                           
 14092                           ; BSR set to: 0
 14093  003BA0  0012               	return		;funcret
 14094  003BA2                     __end_of___lwmod:
 14095                           	opt stack 0
 14096                           tblptru	equ	0xFF8
 14097                           tblptrh	equ	0xFF7
 14098                           tblptrl	equ	0xFF6
 14099                           tablat	equ	0xFF5
 14100                           prodl	equ	0xFF3
 14101                           intcon	equ	0xFF2
 14102                           postinc0	equ	0xFEE
 14103                           wreg	equ	0xFE8
 14104                           postdec1	equ	0xFE5
 14105                           fsr1l	equ	0xFE1
 14106                           indf2	equ	0xFDF
 14107                           fsr2h	equ	0xFDA
 14108                           fsr2l	equ	0xFD9
 14109                           status	equ	0xFD8
 14110                           
 14111 ;; *************** function _TMRapp_ClearBitFlags *****************
 14112 ;; Defined at:
 14113 ;;		line 16 in file "../Includes/Drivers/TMRapp.c"
 14114 ;; Parameters:    Size  Location     Type
 14115 ;;		None
 14116 ;; Auto vars:     Size  Location     Type
 14117 ;;		None
 14118 ;; Return value:  Size  Location     Type
 14119 ;;		None               void
 14120 ;; Registers used:
 14121 ;;		None
 14122 ;; Tracked objects:
 14123 ;;		On entry : F/0
 14124 ;;		On exit  : F/0
 14125 ;;		Unchanged: 0/0
 14126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14127 ;;      Params:         0       0       0       0       0       0       0       0       0
 14128 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14129 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14130 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14131 ;;Total ram usage:        0 bytes
 14132 ;; Hardware stack levels used:    1
 14133 ;; Hardware stack levels required when called:   11
 14134 ;; This function calls:
 14135 ;;		Nothing
 14136 ;; This function is called by:
 14137 ;;		_moteHandler
 14138 ;; This function uses a non-reentrant model
 14139 ;;
 14140                           
 14141                           	psect	text47
 14142  0034B4                     __ptext47:
 14143                           	opt stack 0
 14144  0034B4                     _TMRapp_ClearBitFlags:
 14145                           	opt stack 18
 14146                           
 14147                           ; BSR set to: 0
 14148                           ;TMRapp.c: 19: appTimer.TicksBitMap = 0x00;
 14149                           
 14150                           ; BSR set to: 0
 14151                           ;incstack = 0
 14152  0034B4  6B8F               	clrf	_appTimer& (0+255),b
 14153                           
 14154                           ; BSR set to: 0
 14155  0034B6  0012               	return		;funcret
 14156  0034B8                     __end_of_TMRapp_ClearBitFlags:
 14157                           	opt stack 0
 14158                           tblptru	equ	0xFF8
 14159                           tblptrh	equ	0xFF7
 14160                           tblptrl	equ	0xFF6
 14161                           tablat	equ	0xFF5
 14162                           prodl	equ	0xFF3
 14163                           intcon	equ	0xFF2
 14164                           postinc0	equ	0xFEE
 14165                           wreg	equ	0xFE8
 14166                           postdec1	equ	0xFE5
 14167                           fsr1l	equ	0xFE1
 14168                           indf2	equ	0xFDF
 14169                           fsr2h	equ	0xFDA
 14170                           fsr2l	equ	0xFD9
 14171                           status	equ	0xFD8
 14172                           
 14173 ;; *************** function _MOTEapp_TimerBasedTask *****************
 14174 ;; Defined at:
 14175 ;;		line 1151 in file "../Includes/Board/MOTEapp.c"
 14176 ;; Parameters:    Size  Location     Type
 14177 ;;  timerTask       1    wreg     struct .
 14178 ;; Auto vars:     Size  Location     Type
 14179 ;;  timerTask       1    0[BANK0 ] struct .
 14180 ;; Return value:  Size  Location     Type
 14181 ;;		None               void
 14182 ;; Registers used:
 14183 ;;		wreg, status,2, status,0
 14184 ;; Tracked objects:
 14185 ;;		On entry : F/0
 14186 ;;		On exit  : F/0
 14187 ;;		Unchanged: 0/0
 14188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14189 ;;      Params:         0       0       0       0       0       0       0       0       0
 14190 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14191 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14192 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14193 ;;Total ram usage:        1 bytes
 14194 ;; Hardware stack levels used:    1
 14195 ;; Hardware stack levels required when called:   11
 14196 ;; This function calls:
 14197 ;;		Nothing
 14198 ;; This function is called by:
 14199 ;;		_moteHandler
 14200 ;; This function uses a non-reentrant model
 14201 ;;
 14202                           
 14203                           	psect	text48
 14204  003530                     __ptext48:
 14205                           	opt stack 0
 14206  003530                     _MOTEapp_TimerBasedTask:
 14207                           	opt stack 18
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;incstack = 0
 14211                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 14212  003530  6FC8               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 14213                           
 14214                           ;MOTEapp.c: 1156: if (timerTask.mSecTenTick)
 14215  003532  0100               	movlb	0	; () banked
 14216  003534  B3C8               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 14217                           
 14218                           ; BSR set to: 0
 14219                           ;MOTEapp.c: 1157: {
 14220                           ;MOTEapp.c: 1159: m10SecTicker++;
 14221  003536  2B94               	incf	_m10SecTicker& (0+255),f,b
 14222                           
 14223                           ; BSR set to: 0
 14224                           ;MOTEapp.c: 1165: }
 14225                           ;MOTEapp.c: 1166: if (timerTask.SecTick)
 14226  003538  B7C8               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 14227                           
 14228                           ; BSR set to: 0
 14229                           ;MOTEapp.c: 1167: {
 14230                           ;MOTEapp.c: 1169: secTicker++;
 14231  00353A  2B99               	incf	_secTicker& (0+255),f,b
 14232  00353C  0012               	return	
 14233  00353E                     __end_of_MOTEapp_TimerBasedTask:
 14234                           	opt stack 0
 14235                           tblptru	equ	0xFF8
 14236                           tblptrh	equ	0xFF7
 14237                           tblptrl	equ	0xFF6
 14238                           tablat	equ	0xFF5
 14239                           prodl	equ	0xFF3
 14240                           intcon	equ	0xFF2
 14241                           postinc0	equ	0xFEE
 14242                           wreg	equ	0xFE8
 14243                           postdec1	equ	0xFE5
 14244                           fsr1l	equ	0xFE1
 14245                           indf2	equ	0xFDF
 14246                           fsr2h	equ	0xFDA
 14247                           fsr2l	equ	0xFD9
 14248                           status	equ	0xFD8
 14249                           
 14250 ;; *************** function _USBapp_handlerState *****************
 14251 ;; Defined at:
 14252 ;;		line 63 in file "../Includes/Board/USBapp.c"
 14253 ;; Parameters:    Size  Location     Type
 14254 ;;  state           1    wreg     enum E6418
 14255 ;; Auto vars:     Size  Location     Type
 14256 ;;  state           1    0[BANK0 ] enum E6418
 14257 ;; Return value:  Size  Location     Type
 14258 ;;		None               void
 14259 ;; Registers used:
 14260 ;;		wreg
 14261 ;; Tracked objects:
 14262 ;;		On entry : F/0
 14263 ;;		On exit  : 0/0
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14266 ;;      Params:         0       0       0       0       0       0       0       0       0
 14267 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14268 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14269 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14270 ;;Total ram usage:        1 bytes
 14271 ;; Hardware stack levels used:    1
 14272 ;; Hardware stack levels required when called:   11
 14273 ;; This function calls:
 14274 ;;		Nothing
 14275 ;; This function is called by:
 14276 ;;		_main
 14277 ;; This function uses a non-reentrant model
 14278 ;;
 14279                           
 14280                           	psect	text49
 14281  0034D2                     __ptext49:
 14282                           	opt stack 0
 14283  0034D2                     _USBapp_handlerState:
 14284                           	opt stack 19
 14285                           
 14286                           ; BSR set to: 0
 14287                           ;incstack = 0
 14288                           ;USBapp_handlerState@state stored from wreg
 14289  0034D2  6FC8               	movwf	USBapp_handlerState@state& (0+255),b
 14290                           
 14291                           ;USBapp.c: 65: usbState = state;
 14292  0034D4  C0C8  F09C         	movff	USBapp_handlerState@state,_usbState
 14293  0034D8  0012               	return		;funcret
 14294  0034DA                     __end_of_USBapp_handlerState:
 14295                           	opt stack 0
 14296                           tblptru	equ	0xFF8
 14297                           tblptrh	equ	0xFF7
 14298                           tblptrl	equ	0xFF6
 14299                           tablat	equ	0xFF5
 14300                           prodl	equ	0xFF3
 14301                           intcon	equ	0xFF2
 14302                           postinc0	equ	0xFEE
 14303                           wreg	equ	0xFE8
 14304                           postdec1	equ	0xFE5
 14305                           fsr1l	equ	0xFE1
 14306                           indf2	equ	0xFDF
 14307                           fsr2h	equ	0xFDA
 14308                           fsr2l	equ	0xFD9
 14309                           status	equ	0xFD8
 14310                           
 14311 ;; *************** function _USBapp_Handler *****************
 14312 ;; Defined at:
 14313 ;;		line 68 in file "../Includes/Board/USBapp.c"
 14314 ;; Parameters:    Size  Location     Type
 14315 ;;		None
 14316 ;; Auto vars:     Size  Location     Type
 14317 ;;		None
 14318 ;; Return value:  Size  Location     Type
 14319 ;;		None               void
 14320 ;; Registers used:
 14321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14322 ;; Tracked objects:
 14323 ;;		On entry : 0/0
 14324 ;;		On exit  : 0/0
 14325 ;;		Unchanged: 0/0
 14326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14327 ;;      Params:         0       0       0       0       0       0       0       0       0
 14328 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14329 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14330 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14331 ;;Total ram usage:        0 bytes
 14332 ;; Hardware stack levels used:    1
 14333 ;; Hardware stack levels required when called:   17
 14334 ;; This function calls:
 14335 ;;		_USBapp_DeviceCdcEmulatorHandler
 14336 ;;		_oled_clear
 14337 ;;		_oled_putString
 14338 ;; This function is called by:
 14339 ;;		_main
 14340 ;; This function uses a non-reentrant model
 14341 ;;
 14342                           
 14343                           	psect	text50
 14344  0042F6                     __ptext50:
 14345                           	opt stack 0
 14346  0042F6                     _USBapp_Handler:
 14347                           	opt stack 13
 14348                           
 14349                           ;USBapp.c: 72: {
 14350                           ;USBapp.c: 73: switch(usbState)
 14351                           
 14352                           ;incstack = 0
 14353                           ;USBapp.c: 71: do
 14354  0042F6  D02E               	goto	l12131
 14355  0042F8                     l811:
 14356                           
 14357                           ; BSR set to: 0
 14358  0042F8  D7FF               	goto	l811
 14359  0042FA                     l12111:
 14360                           
 14361                           ; BSR set to: 0
 14362                           ;USBapp.c: 80: oled_clear();
 14363  0042FA  ECFE  F01A         	call	_oled_clear	;wreg free
 14364                           
 14365                           ; BSR set to: 0
 14366                           ;USBapp.c: 81: oled_putString("CDC Mode",1,0);
 14367  0042FE  0E2D               	movlw	low STR_258
 14368  004300  6FD5               	movwf	oled_putString@string& (0+255),b
 14369  004302  0E7F               	movlw	high STR_258
 14370  004304  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 14371  004306  0E01               	movlw	1
 14372  004308  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 14373  00430A  6BD8               	clrf	oled_putString@start_page& (0+255),b
 14374  00430C  EC6A  F020         	call	_oled_putString	;wreg free
 14375                           
 14376                           ;USBapp.c: 82: oled_putString("Command",2,1);
 14377  004310  0E87               	movlw	low STR_259
 14378  004312  0100               	movlb	0	; () banked
 14379  004314  6FD5               	movwf	oled_putString@string& (0+255),b
 14380  004316  0E7F               	movlw	high STR_259
 14381  004318  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 14382  00431A  0E02               	movlw	2
 14383  00431C  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 14384  00431E  0E01               	movlw	1
 14385  004320  6FD8               	movwf	oled_putString@start_page& (0+255),b
 14386  004322  EC6A  F020         	call	_oled_putString	;wreg free
 14387                           
 14388                           ;USBapp.c: 83: oled_putString("USB Handler",0,2);
 14389  004326  0E37               	movlw	low STR_260
 14390  004328  0100               	movlb	0	; () banked
 14391  00432A  6FD5               	movwf	oled_putString@string& (0+255),b
 14392  00432C  0E7E               	movlw	high STR_260
 14393  00432E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 14394  004330  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 14395  004332  0E02               	movlw	2
 14396  004334  6FD8               	movwf	oled_putString@start_page& (0+255),b
 14397  004336  EC6A  F020         	call	_oled_putString	;wreg free
 14398                           
 14399                           ;USBapp.c: 85: usbState = USB_RUNNING;
 14400  00433A  0E01               	movlw	1
 14401  00433C  0100               	movlb	0	; () banked
 14402  00433E  D005               	goto	L51
 14403  004340                     l12121:
 14404                           
 14405                           ; BSR set to: 0
 14406                           ;USBapp.c: 89: if( USBDeviceState < CONFIGURED_STATE )
 14407  004340  0E20               	movlw	32
 14408  004342  618A               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 14409  004344  D001               	goto	l12125
 14410  004346  D00E               	goto	l818
 14411  004348                     l12125:
 14412                           
 14413                           ; BSR set to: 0
 14414                           ;USBapp.c: 93: }
 14415                           ;USBapp.c: 94: usbState = USB_CDC;
 14416  004348  0E02               	movlw	2
 14417  00434A                     L51:
 14418  00434A  6F9C               	movwf	_usbState& (0+255),b
 14419                           
 14420                           ;USBapp.c: 95: break;
 14421  00434C  D00B               	goto	l818
 14422  00434E                     l12127:
 14423                           
 14424                           ; BSR set to: 0
 14425                           ;USBapp.c: 98: USBapp_DeviceCdcEmulatorHandler();
 14426  00434E  EC07  F026         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 14427                           
 14428                           ;USBapp.c: 101: break;
 14429  004352  D008               	goto	l818
 14430  004354                     l12131:
 14431  004354  0100               	movlb	0	; () banked
 14432  004356  519C               	movf	_usbState& (0+255),w,b
 14433                           
 14434                           ; Switch size 1, requested type "speed"
 14435                           ; Number of cases is 3, Range of values is 0 to 2
 14436                           ; switch strategies available:
 14437                           ; Name         Instructions Cycles
 14438                           ; simple_byte           10     6 (average)
 14439                           ;	Chosen strategy is simple_byte
 14440  004358  E0D0               	bz	l12111
 14441  00435A  0A01               	xorlw	1	; case 1
 14442  00435C  E0F1               	bz	l12121
 14443  00435E  0A03               	xorlw	3	; case 2
 14444  004360  E0F6               	bz	l12127
 14445  004362  D7CA               	goto	l811
 14446  004364                     l818:
 14447                           
 14448                           ; BSR set to: 0
 14449                           ;USBapp.c: 103: }while(PORTAbits.RA0);
 14450  004364  B080               	btfsc	3968,0,c	;volatile
 14451  004366  D7F6               	goto	l12131
 14452                           
 14453                           ; BSR set to: 0
 14454                           ;USBapp.c: 104: __nop();
 14455  004368  F000               	nop	
 14456  00436A  0012               	return		;funcret
 14457  00436C                     __end_of_USBapp_Handler:
 14458                           	opt stack 0
 14459                           tblptru	equ	0xFF8
 14460                           tblptrh	equ	0xFF7
 14461                           tblptrl	equ	0xFF6
 14462                           tablat	equ	0xFF5
 14463                           prodl	equ	0xFF3
 14464                           intcon	equ	0xFF2
 14465                           postinc0	equ	0xFEE
 14466                           wreg	equ	0xFE8
 14467                           postdec1	equ	0xFE5
 14468                           fsr1l	equ	0xFE1
 14469                           indf2	equ	0xFDF
 14470                           fsr2h	equ	0xFDA
 14471                           fsr2l	equ	0xFD9
 14472                           status	equ	0xFD8
 14473                           
 14474 ;; *************** function _oled_putString *****************
 14475 ;; Defined at:
 14476 ;;		line 273 in file "../Includes/Drivers/SSD1306oLED.c"
 14477 ;; Parameters:    Size  Location     Type
 14478 ;;  string          2   13[BANK0 ] PTR const unsigned char 
 14479 ;;		 -> oled_putUint16@numData(6), oled_putUint8@numData(6), STR_260(12), STR_259(8), 
 14480 ;;		 -> STR_258(9), STR_241(16), STR_240(16), STR_239(16), 
 14481 ;;		 -> STR_238(15), STR_237(15), STR_236(16), STR_235(17), 
 14482 ;;		 -> STR_234(16), STR_233(17), STR_232(17), STR_231(2), 
 14483 ;;		 -> STR_230(7), STR_229(10), STR_228(17), STR_227(16), 
 14484 ;;		 -> STR_226(15), STR_225(15), STR_224(17), STR_223(16), 
 14485 ;;		 -> STR_222(17), STR_221(17), STR_220(16), STR_218(18), 
 14486 ;;		 -> STR_216(17), STR_214(17), STR_213(17), responseData(8), 
 14487 ;;		 -> responseId(16), responsePortNum(3), STR_210(12), STR_209(13), 
 14488 ;;		 -> STR_208(12), STR_205(18), STR_204(13), STR_203(17), 
 14489 ;;		 -> STR_202(16), STR_201(17), STR_200(17), STR_199(2), 
 14490 ;;		 -> STR_198(2), STR_197(2), STR_196(2), STR_195(2), 
 14491 ;;		 -> STR_194(2), STR_193(16), STR_192(17), STR_191(17), 
 14492 ;;		 -> STR_190(2), STR_189(2), STR_188(2), STR_187(15), 
 14493 ;;		 -> STR_186(15), STR_185(15), STR_184(15), STR_183(2), 
 14494 ;;		 -> STR_182(2), STR_181(2), STR_180(2), STR_179(15), 
 14495 ;;		 -> STR_178(15), STR_177(15), STR_176(15), STR_175(2), 
 14496 ;;		 -> STR_174(2), STR_173(2), STR_172(2), STR_171(15), 
 14497 ;;		 -> STR_170(15), STR_169(15), STR_168(15), STR_167(2), 
 14498 ;;		 -> STR_166(2), STR_165(2), STR_164(2), STR_163(15), 
 14499 ;;		 -> STR_162(15), STR_161(15), STR_160(15), STR_159(2), 
 14500 ;;		 -> STR_158(2), STR_157(2), STR_156(2), STR_155(2), 
 14501 ;;		 -> STR_154(15), STR_153(15), STR_152(15), STR_151(15), 
 14502 ;;		 -> STR_150(2), STR_149(2), STR_148(2), STR_147(2), 
 14503 ;;		 -> STR_146(2), STR_145(15), STR_144(15), STR_143(15), 
 14504 ;;		 -> STR_142(15), STR_141(2), STR_140(2), STR_139(2), 
 14505 ;;		 -> STR_138(2), STR_137(2), STR_136(15), STR_135(15), 
 14506 ;;		 -> STR_134(15), STR_133(15), STR_132(2), STR_131(2), 
 14507 ;;		 -> STR_130(2), STR_129(2), STR_128(2), STR_127(15), 
 14508 ;;		 -> STR_126(15), STR_125(15), STR_124(15), STR_123(2), 
 14509 ;;		 -> STR_122(2), STR_121(2), STR_120(2), STR_119(2), 
 14510 ;;		 -> STR_118(15), STR_117(15), STR_116(15), STR_115(15), 
 14511 ;;		 -> STR_114(2), STR_113(2), STR_112(2), STR_111(2), 
 14512 ;;		 -> STR_110(2), STR_109(15), STR_108(15), STR_107(15), 
 14513 ;;		 -> STR_106(15), STR_105(2), STR_104(2), STR_103(2), 
 14514 ;;		 -> STR_102(2), STR_101(2), STR_100(15), STR_99(15), 
 14515 ;;		 -> STR_98(15), STR_97(15), STR_96(2), STR_95(16), 
 14516 ;;		 -> STR_94(17), STR_93(17), STR_92(16), STR_91(16), 
 14517 ;;		 -> STR_90(16), STR_89(2), STR_88(7), STR_87(7), 
 14518 ;;		 -> STR_86(16), STR_85(16), STR_84(17), STR_83(17), 
 14519 ;;		 -> STR_82(16), STR_81(16), STR_80(16), STR_78(2), 
 14520 ;;		 -> STR_76(2), STR_75(16), STR_74(13), STR_73(12), 
 14521 ;;		 -> STR_72(17), STR_62(8), STR_61(8), STR_58(7), 
 14522 ;;		 -> STR_57(10), STR_55(11), STR_54(11), STR_49(9), 
 14523 ;;		 -> STR_48(11), STR_42(11), STR_41(10), STR_37(5), 
 14524 ;;		 -> STR_36(12), STR_35(8), STR_34(9), STR_28(17), 
 14525 ;;		 -> STR_27(17), STR_26(17), STR_25(17), STR_24(9), 
 14526 ;;		 -> STR_23(10), STR_20(9), STR_19(8), STR_18(8), 
 14527 ;;		 -> STR_17(9), STR_16(10), STR_15(11), STR_14(13), 
 14528 ;;		 -> STR_13(13), STR_12(13), STR_11(12), STR_10(13), 
 14529 ;;		 -> STR_9(9), STR_8(12), STR_7(16), STR_6(2), 
 14530 ;;		 -> STR_5(2), STR_4(9), STR_3(15), STR_2(15), 
 14531 ;;		 -> STR_1(15), 
 14532 ;;  station_dot     1   15[BANK0 ] unsigned char 
 14533 ;;  start_page      1   16[BANK0 ] unsigned char 
 14534 ;; Auto vars:     Size  Location     Type
 14535 ;;  index           1   17[BANK0 ] unsigned char 
 14536 ;; Return value:  Size  Location     Type
 14537 ;;		None               void
 14538 ;; Registers used:
 14539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14540 ;; Tracked objects:
 14541 ;;		On entry : F/0
 14542 ;;		On exit  : 0/0
 14543 ;;		Unchanged: 0/0
 14544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14545 ;;      Params:         0       4       0       0       0       0       0       0       0
 14546 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14547 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14548 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14549 ;;Total ram usage:        5 bytes
 14550 ;; Hardware stack levels used:    1
 14551 ;; Hardware stack levels required when called:   15
 14552 ;; This function calls:
 14553 ;;		_oled_putChar
 14554 ;; This function is called by:
 14555 ;;		_main
 14556 ;;		_test_oled
 14557 ;;		_test_switch
 14558 ;;		_test_comms
 14559 ;;		_test_leds
 14560 ;;		_test_adc
 14561 ;;		_moteHandler
 14562 ;;		_moteJoiningProcess
 14563 ;;		_moteRunningProcess
 14564 ;;		_USBapp_Handler
 14565 ;;		_oled_putUint8
 14566 ;;		_oled_putUint16
 14567 ;; This function uses a non-reentrant model
 14568 ;;
 14569                           
 14570                           	psect	text51
 14571  0040D4                     __ptext51:
 14572                           	opt stack 0
 14573  0040D4                     _oled_putString:
 14574                           	opt stack 13
 14575                           
 14576                           ; BSR set to: 0
 14577                           ;SSD1306oLED.c: 275: uint8_t index;
 14578                           ;SSD1306oLED.c: 276: for(index = station_dot; index < 16; index++)
 14579                           
 14580                           ;incstack = 0
 14581  0040D4  C0D7  F0D9         	movff	oled_putString@station_dot,oled_putString@index
 14582  0040D8                     l10013:
 14583                           
 14584                           ; BSR set to: 0
 14585  0040D8  0E0F               	movlw	15
 14586  0040DA  65D9               	cpfsgt	oled_putString@index& (0+255),b
 14587  0040DC  D001               	goto	l10017
 14588  0040DE  0C0F               	retlw	15
 14589  0040E0                     l10017:
 14590                           
 14591                           ; BSR set to: 0
 14592                           ;SSD1306oLED.c: 277: {
 14593                           ;SSD1306oLED.c: 278: if (*string != 0)
 14594  0040E0  C0D5  FFF6         	movff	oled_putString@string,tblptrl
 14595  0040E4  C0D6  FFF7         	movff	oled_putString@string+1,tblptrh
 14596  0040E8  6AF8               	clrf	tblptru,c
 14597  0040EA  0E07               	movlw	(high __ramtop+-1)
 14598  0040EC  64F7               	cpfsgt	tblptrh,c
 14599  0040EE  D003               	bra	u8117
 14600  0040F0  0008               	tblrd		*
 14601  0040F2  50F5               	movf	tablat,w,c
 14602  0040F4  D005               	bra	u8110
 14603  0040F6                     u8117:
 14604  0040F6  CFF6 FFE1          	movff	tblptrl,fsr1l
 14605  0040FA  CFF7 FFE2          	movff	tblptrh,fsr1h
 14606  0040FE  50E7               	movf	indf1,w,c
 14607  004100                     u8110:
 14608  004100  0900               	iorlw	0
 14609  004102  B4D8               	btfsc	status,2,c
 14610  004104  0012               	return	
 14611                           
 14612                           ;SSD1306oLED.c: 279: {
 14613                           ;SSD1306oLED.c: 280: oled_putChar(*string, index, start_page);
 14614  004106  C0D9  F0CB         	movff	oled_putString@index,oled_putChar@station_dot
 14615  00410A  C0D8  F0CC         	movff	oled_putString@start_page,oled_putChar@start_page
 14616  00410E  C0D5  FFF6         	movff	oled_putString@string,tblptrl
 14617  004112  C0D6  FFF7         	movff	oled_putString@string+1,tblptrh
 14618  004116  6AF8               	clrf	tblptru,c
 14619  004118  0E07               	movlw	(high __ramtop+-1)
 14620  00411A  64F7               	cpfsgt	tblptrh,c
 14621  00411C  D003               	bra	u8137
 14622  00411E  0008               	tblrd		*
 14623  004120  50F5               	movf	tablat,w,c
 14624  004122  D005               	bra	u8130
 14625  004124                     u8137:
 14626  004124  CFF6 FFE1          	movff	tblptrl,fsr1l
 14627  004128  CFF7 FFE2          	movff	tblptrh,fsr1h
 14628  00412C  50E7               	movf	indf1,w,c
 14629  00412E                     u8130:
 14630  00412E  EC40  F021         	call	_oled_putChar
 14631                           
 14632                           ; BSR set to: 0
 14633                           ;SSD1306oLED.c: 281: *string++;
 14634  004132  4BD5               	infsnz	oled_putString@string& (0+255),f,b
 14635  004134  2BD6               	incf	(oled_putString@string+1)& (0+255),f,b
 14636                           
 14637                           ; BSR set to: 0
 14638                           
 14639                           ;SSD1306oLED.c: 282: }
 14640  004136  2BD9               	incf	oled_putString@index& (0+255),f,b
 14641  004138  D7CF               	goto	l10013
 14642  00413A                     __end_of_oled_putString:
 14643                           	opt stack 0
 14644                           tblptru	equ	0xFF8
 14645                           tblptrh	equ	0xFF7
 14646                           tblptrl	equ	0xFF6
 14647                           tablat	equ	0xFF5
 14648                           prodl	equ	0xFF3
 14649                           intcon	equ	0xFF2
 14650                           postinc0	equ	0xFEE
 14651                           wreg	equ	0xFE8
 14652                           indf1	equ	0xFE7
 14653                           postdec1	equ	0xFE5
 14654                           fsr1h	equ	0xFE2
 14655                           fsr1l	equ	0xFE1
 14656                           indf2	equ	0xFDF
 14657                           fsr2h	equ	0xFDA
 14658                           fsr2l	equ	0xFD9
 14659                           status	equ	0xFD8
 14660                           
 14661 ;; *************** function _oled_clear *****************
 14662 ;; Defined at:
 14663 ;;		line 290 in file "../Includes/Drivers/SSD1306oLED.c"
 14664 ;; Parameters:    Size  Location     Type
 14665 ;;		None
 14666 ;; Auto vars:     Size  Location     Type
 14667 ;;		None
 14668 ;; Return value:  Size  Location     Type
 14669 ;;		None               void
 14670 ;; Registers used:
 14671 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14672 ;; Tracked objects:
 14673 ;;		On entry : 0/0
 14674 ;;		On exit  : F/0
 14675 ;;		Unchanged: 0/0
 14676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14677 ;;      Params:         0       0       0       0       0       0       0       0       0
 14678 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14679 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14680 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14681 ;;Total ram usage:        0 bytes
 14682 ;; Hardware stack levels used:    1
 14683 ;; Hardware stack levels required when called:   16
 14684 ;; This function calls:
 14685 ;;		_oled_clearRow
 14686 ;; This function is called by:
 14687 ;;		_main
 14688 ;;		_test_powerup
 14689 ;;		_test_oled
 14690 ;;		_test_switch
 14691 ;;		_test_adc
 14692 ;;		_moteHandler
 14693 ;;		_moteJoiningProcess
 14694 ;;		_moteRunningProcess
 14695 ;;		_USBapp_Handler
 14696 ;;		_oled_init
 14697 ;; This function uses a non-reentrant model
 14698 ;;
 14699                           
 14700                           	psect	text52
 14701  0035FC                     __ptext52:
 14702                           	opt stack 0
 14703  0035FC                     _oled_clear:
 14704                           	opt stack 12
 14705                           
 14706                           ;SSD1306oLED.c: 292: oled_clearRow(0);
 14707                           
 14708                           ;incstack = 0
 14709  0035FC  0E00               	movlw	0
 14710  0035FE  EC44  F01B         	call	_oled_clearRow
 14711                           
 14712                           ;SSD1306oLED.c: 293: oled_clearRow(1);
 14713  003602  0E01               	movlw	1
 14714  003604  EC44  F01B         	call	_oled_clearRow
 14715                           
 14716                           ;SSD1306oLED.c: 294: oled_clearRow(2);
 14717  003608  0E02               	movlw	2
 14718  00360A  EC44  F01B         	call	_oled_clearRow
 14719                           
 14720                           ;SSD1306oLED.c: 295: oled_clearRow(3);
 14721  00360E  0E03               	movlw	3
 14722  003610  EF44  F01B         	goto	_oled_clearRow
 14723  003614                     __end_of_oled_clear:
 14724                           	opt stack 0
 14725                           tblptru	equ	0xFF8
 14726                           tblptrh	equ	0xFF7
 14727                           tblptrl	equ	0xFF6
 14728                           tablat	equ	0xFF5
 14729                           prodl	equ	0xFF3
 14730                           intcon	equ	0xFF2
 14731                           postinc0	equ	0xFEE
 14732                           wreg	equ	0xFE8
 14733                           indf1	equ	0xFE7
 14734                           postdec1	equ	0xFE5
 14735                           fsr1h	equ	0xFE2
 14736                           fsr1l	equ	0xFE1
 14737                           indf2	equ	0xFDF
 14738                           fsr2h	equ	0xFDA
 14739                           fsr2l	equ	0xFD9
 14740                           status	equ	0xFD8
 14741                           
 14742 ;; *************** function _oled_clearRow *****************
 14743 ;; Defined at:
 14744 ;;		line 298 in file "../Includes/Drivers/SSD1306oLED.c"
 14745 ;; Parameters:    Size  Location     Type
 14746 ;;  page            1    wreg     unsigned char 
 14747 ;; Auto vars:     Size  Location     Type
 14748 ;;  page            1   13[BANK0 ] unsigned char 
 14749 ;;  index           1   14[BANK0 ] unsigned char 
 14750 ;; Return value:  Size  Location     Type
 14751 ;;		None               void
 14752 ;; Registers used:
 14753 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14754 ;; Tracked objects:
 14755 ;;		On entry : 0/0
 14756 ;;		On exit  : F/0
 14757 ;;		Unchanged: 0/0
 14758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14759 ;;      Params:         0       0       0       0       0       0       0       0       0
 14760 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14761 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14762 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14763 ;;Total ram usage:        2 bytes
 14764 ;; Hardware stack levels used:    1
 14765 ;; Hardware stack levels required when called:   15
 14766 ;; This function calls:
 14767 ;;		_oled_putChar
 14768 ;; This function is called by:
 14769 ;;		_oled_clear
 14770 ;; This function uses a non-reentrant model
 14771 ;;
 14772                           
 14773                           	psect	text53
 14774  003688                     __ptext53:
 14775                           	opt stack 0
 14776  003688                     _oled_clearRow:
 14777                           	opt stack 12
 14778                           
 14779                           ; BSR set to: 0
 14780                           ;incstack = 0
 14781                           ;oled_clearRow@page stored from wreg
 14782  003688  0100               	movlb	0	; () banked
 14783  00368A  6FD5               	movwf	oled_clearRow@page& (0+255),b
 14784                           
 14785                           ;SSD1306oLED.c: 300: uint8_t index;
 14786                           ;SSD1306oLED.c: 302: for(index = 0; index < 16; index++)
 14787  00368C  6BD6               	clrf	oled_clearRow@index& (0+255),b
 14788  00368E                     l9857:
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;SSD1306oLED.c: 303: {
 14792                           ;SSD1306oLED.c: 304: oled_putChar( ' ', index, page);
 14793  00368E  C0D6  F0CB         	movff	oled_clearRow@index,oled_putChar@station_dot
 14794  003692  C0D5  F0CC         	movff	oled_clearRow@page,oled_putChar@start_page
 14795  003696  0E20               	movlw	32
 14796  003698  EC40  F021         	call	_oled_putChar
 14797                           
 14798                           ; BSR set to: 0
 14799  00369C  2BD6               	incf	oled_clearRow@index& (0+255),f,b
 14800                           
 14801                           ; BSR set to: 0
 14802  00369E  0E0F               	movlw	15
 14803  0036A0  65D6               	cpfsgt	oled_clearRow@index& (0+255),b
 14804  0036A2  D7F5               	goto	l9857
 14805  0036A4  0C0F               	retlw	15
 14806  0036A6                     __end_of_oled_clearRow:
 14807                           	opt stack 0
 14808                           tblptru	equ	0xFF8
 14809                           tblptrh	equ	0xFF7
 14810                           tblptrl	equ	0xFF6
 14811                           tablat	equ	0xFF5
 14812                           prodl	equ	0xFF3
 14813                           intcon	equ	0xFF2
 14814                           postinc0	equ	0xFEE
 14815                           wreg	equ	0xFE8
 14816                           indf1	equ	0xFE7
 14817                           postdec1	equ	0xFE5
 14818                           fsr1h	equ	0xFE2
 14819                           fsr1l	equ	0xFE1
 14820                           indf2	equ	0xFDF
 14821                           fsr2h	equ	0xFDA
 14822                           fsr2l	equ	0xFD9
 14823                           status	equ	0xFD8
 14824                           
 14825 ;; *************** function _oled_putChar *****************
 14826 ;; Defined at:
 14827 ;;		line 258 in file "../Includes/Drivers/SSD1306oLED.c"
 14828 ;; Parameters:    Size  Location     Type
 14829 ;;  k               1    wreg     unsigned char 
 14830 ;;  station_dot     1    3[BANK0 ] unsigned char 
 14831 ;;  start_page      1    4[BANK0 ] unsigned char 
 14832 ;; Auto vars:     Size  Location     Type
 14833 ;;  k               1   11[BANK0 ] unsigned char 
 14834 ;;  index           1   12[BANK0 ] unsigned char 
 14835 ;; Return value:  Size  Location     Type
 14836 ;;		None               void
 14837 ;; Registers used:
 14838 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14839 ;; Tracked objects:
 14840 ;;		On entry : 0/0
 14841 ;;		On exit  : F/0
 14842 ;;		Unchanged: 0/0
 14843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14844 ;;      Params:         0       2       0       0       0       0       0       0       0
 14845 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14846 ;;      Temps:          0       6       0       0       0       0       0       0       0
 14847 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14848 ;;Total ram usage:       10 bytes
 14849 ;; Hardware stack levels used:    1
 14850 ;; Hardware stack levels required when called:   14
 14851 ;; This function calls:
 14852 ;;		_Set_Column_Address
 14853 ;;		_Set_Page_Address
 14854 ;;		_oled_writeData
 14855 ;; This function is called by:
 14856 ;;		_test_adc
 14857 ;;		_oled_putString
 14858 ;;		_oled_clearRow
 14859 ;; This function uses a non-reentrant model
 14860 ;;
 14861                           
 14862                           	psect	text54
 14863  004280                     __ptext54:
 14864                           	opt stack 0
 14865  004280                     _oled_putChar:
 14866                           	opt stack 13
 14867                           
 14868                           ; BSR set to: 0
 14869                           ;incstack = 0
 14870                           ;oled_putChar@k stored from wreg
 14871  004280  0100               	movlb	0	; () banked
 14872  004282  6FD3               	movwf	oled_putChar@k& (0+255),b
 14873                           
 14874                           ;SSD1306oLED.c: 260: uint8_t index;
 14875                           ;SSD1306oLED.c: 262: Set_Page_Address(start_page);
 14876  004284  51CC               	movf	oled_putChar@start_page& (0+255),w,b
 14877  004286  ECD4  F01A         	call	_Set_Page_Address
 14878                           
 14879                           ;SSD1306oLED.c: 263: Set_Column_Address(0x00 + station_dot * 8);
 14880  00428A  0100               	movlb	0	; () banked
 14881  00428C  51CB               	movf	oled_putChar@station_dot& (0+255),w,b
 14882  00428E  0D08               	mullw	8
 14883  004290  50F3               	movf	prodl,w,c
 14884  004292  EC35  F01B         	call	_Set_Column_Address
 14885                           
 14886                           ;SSD1306oLED.c: 265: LATBbits.LATB4 = 0;
 14887  004296  988A               	bcf	3978,4,c	;volatile
 14888                           
 14889                           ;SSD1306oLED.c: 266: for(index = 0; index < 8; index++)
 14890  004298  0100               	movlb	0	; () banked
 14891  00429A  6BD4               	clrf	oled_putChar@index& (0+255),b
 14892  00429C                     l9805:
 14893                           
 14894                           ; BSR set to: 0
 14895                           ;SSD1306oLED.c: 267: {
 14896                           ;SSD1306oLED.c: 268: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 14897  00429C  6BCD               	clrf	??_oled_putChar& (0+255),b
 14898  00429E  69CE               	setf	(??_oled_putChar+1)& (0+255),b
 14899  0042A0  51D3               	movf	oled_putChar@k& (0+255),w,b
 14900  0042A2  6FCF               	movwf	(??_oled_putChar+2)& (0+255),b
 14901  0042A4  6BD0               	clrf	(??_oled_putChar+3)& (0+255),b
 14902  0042A6  90D8               	bcf	status,0,c
 14903  0042A8  37CF               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 14904  0042AA  37D0               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 14905  0042AC  90D8               	bcf	status,0,c
 14906  0042AE  37CF               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 14907  0042B0  37D0               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 14908  0042B2  90D8               	bcf	status,0,c
 14909  0042B4  37CF               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 14910  0042B6  37D0               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 14911  0042B8  C0F5  F0D1         	movff	_selectedFont,??_oled_putChar+4
 14912  0042BC  C0F6  F0D2         	movff	_selectedFont+1,??_oled_putChar+5
 14913  0042C0  51CF               	movf	(??_oled_putChar+2)& (0+255),w,b
 14914  0042C2  27D1               	addwf	(??_oled_putChar+4)& (0+255),f,b
 14915  0042C4  51D0               	movf	(??_oled_putChar+3)& (0+255),w,b
 14916  0042C6  23D2               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 14917  0042C8  51D4               	movf	oled_putChar@index& (0+255),w,b
 14918  0042CA  27D1               	addwf	(??_oled_putChar+4)& (0+255),f,b
 14919  0042CC  0E00               	movlw	0
 14920  0042CE  23D2               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 14921  0042D0  51CD               	movf	??_oled_putChar& (0+255),w,b
 14922  0042D2  27D1               	addwf	(??_oled_putChar+4)& (0+255),f,b
 14923  0042D4  51CE               	movf	(??_oled_putChar+1)& (0+255),w,b
 14924  0042D6  23D2               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 14925  0042D8  C0D1  FFF6         	movff	??_oled_putChar+4,tblptrl
 14926  0042DC  C0D2  FFF7         	movff	??_oled_putChar+5,tblptrh
 14927  0042E0                     	if	0	;tblptru may be non-zero
 14928  0042E0                     	endif
 14929  0042E0                     	if	0	;tblptru may be non-zero
 14930  0042E0                     	endif
 14931  0042E0  0008               	tblrd		*
 14932  0042E2  50F5               	movf	tablat,w,c
 14933  0042E4  EC85  F01A         	call	_oled_writeData
 14934  0042E8  0100               	movlb	0	; () banked
 14935  0042EA  2BD4               	incf	oled_putChar@index& (0+255),f,b
 14936                           
 14937                           ; BSR set to: 0
 14938  0042EC  0E07               	movlw	7
 14939  0042EE  65D4               	cpfsgt	oled_putChar@index& (0+255),b
 14940  0042F0  D7D5               	goto	l9805
 14941                           
 14942                           ; BSR set to: 0
 14943                           ;SSD1306oLED.c: 269: }
 14944                           ;SSD1306oLED.c: 270: LATBbits.LATB4 = 1;
 14945  0042F2  888A               	bsf	3978,4,c	;volatile
 14946                           
 14947                           ; BSR set to: 0
 14948  0042F4  0C07               	retlw	7	;funcret
 14949  0042F6                     __end_of_oled_putChar:
 14950                           	opt stack 0
 14951                           tblptru	equ	0xFF8
 14952                           tblptrh	equ	0xFF7
 14953                           tblptrl	equ	0xFF6
 14954                           tablat	equ	0xFF5
 14955                           prodl	equ	0xFF3
 14956                           intcon	equ	0xFF2
 14957                           postinc0	equ	0xFEE
 14958                           wreg	equ	0xFE8
 14959                           indf1	equ	0xFE7
 14960                           postdec1	equ	0xFE5
 14961                           fsr1h	equ	0xFE2
 14962                           fsr1l	equ	0xFE1
 14963                           indf2	equ	0xFDF
 14964                           fsr2h	equ	0xFDA
 14965                           fsr2l	equ	0xFD9
 14966                           status	equ	0xFD8
 14967                           
 14968 ;; *************** function _oled_writeData *****************
 14969 ;; Defined at:
 14970 ;;		line 407 in file "../Includes/Drivers/SSD1306oLED.c"
 14971 ;; Parameters:    Size  Location     Type
 14972 ;;  data            1    wreg     unsigned char 
 14973 ;; Auto vars:     Size  Location     Type
 14974 ;;  data            1    1[BANK0 ] unsigned char 
 14975 ;; Return value:  Size  Location     Type
 14976 ;;		None               void
 14977 ;; Registers used:
 14978 ;;		wreg, status,2, cstack
 14979 ;; Tracked objects:
 14980 ;;		On entry : F/0
 14981 ;;		On exit  : 0/0
 14982 ;;		Unchanged: 0/0
 14983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14984 ;;      Params:         0       0       0       0       0       0       0       0       0
 14985 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14986 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14987 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14988 ;;Total ram usage:        1 bytes
 14989 ;; Hardware stack levels used:    1
 14990 ;; Hardware stack levels required when called:   12
 14991 ;; This function calls:
 14992 ;;		_SPI_Exchange8bit
 14993 ;; This function is called by:
 14994 ;;		_oled_putChar
 14995 ;; This function uses a non-reentrant model
 14996 ;;
 14997                           
 14998                           	psect	text55
 14999  00350A                     __ptext55:
 15000                           	opt stack 0
 15001  00350A                     _oled_writeData:
 15002                           	opt stack 14
 15003                           
 15004                           ; BSR set to: 0
 15005                           ;incstack = 0
 15006                           ;oled_writeData@data stored from wreg
 15007  00350A  6FC9               	movwf	oled_writeData@data& (0+255),b
 15008                           
 15009                           ;SSD1306oLED.c: 409: LATBbits.LATB5 = 1;
 15010  00350C  8A8A               	bsf	3978,5,c	;volatile
 15011                           
 15012                           ;SSD1306oLED.c: 410: SPI_Exchange8bit(data);
 15013  00350E  0100               	movlb	0	; () banked
 15014  003510  51C9               	movf	oled_writeData@data& (0+255),w,b
 15015  003512  EFA7  F01A         	goto	_SPI_Exchange8bit
 15016  003516                     __end_of_oled_writeData:
 15017                           	opt stack 0
 15018                           tblptru	equ	0xFF8
 15019                           tblptrh	equ	0xFF7
 15020                           tblptrl	equ	0xFF6
 15021                           tablat	equ	0xFF5
 15022                           prodl	equ	0xFF3
 15023                           intcon	equ	0xFF2
 15024                           postinc0	equ	0xFEE
 15025                           wreg	equ	0xFE8
 15026                           indf1	equ	0xFE7
 15027                           postdec1	equ	0xFE5
 15028                           fsr1h	equ	0xFE2
 15029                           fsr1l	equ	0xFE1
 15030                           indf2	equ	0xFDF
 15031                           fsr2h	equ	0xFDA
 15032                           fsr2l	equ	0xFD9
 15033                           status	equ	0xFD8
 15034                           
 15035 ;; *************** function _Set_Page_Address *****************
 15036 ;; Defined at:
 15037 ;;		line 201 in file "../Includes/Drivers/SSD1306oLED.c"
 15038 ;; Parameters:    Size  Location     Type
 15039 ;;  address         1    wreg     unsigned char 
 15040 ;; Auto vars:     Size  Location     Type
 15041 ;;  address         1    2[BANK0 ] unsigned char 
 15042 ;; Return value:  Size  Location     Type
 15043 ;;		None               void
 15044 ;; Registers used:
 15045 ;;		wreg, status,2, status,0, cstack
 15046 ;; Tracked objects:
 15047 ;;		On entry : F/0
 15048 ;;		On exit  : 0/0
 15049 ;;		Unchanged: 0/0
 15050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15051 ;;      Params:         0       0       0       0       0       0       0       0       0
 15052 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15053 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15054 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15055 ;;Total ram usage:        1 bytes
 15056 ;; Hardware stack levels used:    1
 15057 ;; Hardware stack levels required when called:   13
 15058 ;; This function calls:
 15059 ;;		_oled_writeCommand
 15060 ;; This function is called by:
 15061 ;;		_oled_putChar
 15062 ;; This function uses a non-reentrant model
 15063 ;;
 15064                           
 15065                           	psect	text56
 15066  0035A8                     __ptext56:
 15067                           	opt stack 0
 15068  0035A8                     _Set_Page_Address:
 15069                           	opt stack 13
 15070                           
 15071                           ;incstack = 0
 15072                           ;Set_Page_Address@address stored from wreg
 15073  0035A8  6FCA               	movwf	Set_Page_Address@address& (0+255),b
 15074                           
 15075                           ;SSD1306oLED.c: 203: address = 0xB0 | address;
 15076  0035AA  0EB0               	movlw	176
 15077  0035AC  0100               	movlb	0	; () banked
 15078  0035AE  13CA               	iorwf	Set_Page_Address@address& (0+255),f,b
 15079                           
 15080                           ; BSR set to: 0
 15081                           ;SSD1306oLED.c: 204: LATBbits.LATB4 = 0;
 15082  0035B0  988A               	bcf	3978,4,c	;volatile
 15083                           
 15084                           ; BSR set to: 0
 15085                           ;SSD1306oLED.c: 205: oled_writeCommand(address);
 15086  0035B2  51CA               	movf	Set_Page_Address@address& (0+255),w,b
 15087  0035B4  EC7F  F01A         	call	_oled_writeCommand
 15088                           
 15089                           ;SSD1306oLED.c: 206: LATBbits.LATB4 = 1;
 15090  0035B8  888A               	bsf	3978,4,c	;volatile
 15091  0035BA  0012               	return		;funcret
 15092  0035BC                     __end_of_Set_Page_Address:
 15093                           	opt stack 0
 15094                           tblptru	equ	0xFF8
 15095                           tblptrh	equ	0xFF7
 15096                           tblptrl	equ	0xFF6
 15097                           tablat	equ	0xFF5
 15098                           prodl	equ	0xFF3
 15099                           intcon	equ	0xFF2
 15100                           postinc0	equ	0xFEE
 15101                           wreg	equ	0xFE8
 15102                           indf1	equ	0xFE7
 15103                           postdec1	equ	0xFE5
 15104                           fsr1h	equ	0xFE2
 15105                           fsr1l	equ	0xFE1
 15106                           indf2	equ	0xFDF
 15107                           fsr2h	equ	0xFDA
 15108                           fsr2l	equ	0xFD9
 15109                           status	equ	0xFD8
 15110                           
 15111 ;; *************** function _Set_Column_Address *****************
 15112 ;; Defined at:
 15113 ;;		line 210 in file "../Includes/Drivers/SSD1306oLED.c"
 15114 ;; Parameters:    Size  Location     Type
 15115 ;;  address         1    wreg     unsigned char 
 15116 ;; Auto vars:     Size  Location     Type
 15117 ;;  address         1    2[BANK0 ] unsigned char 
 15118 ;; Return value:  Size  Location     Type
 15119 ;;		None               void
 15120 ;; Registers used:
 15121 ;;		wreg, status,2, status,0, cstack
 15122 ;; Tracked objects:
 15123 ;;		On entry : F/0
 15124 ;;		On exit  : 0/0
 15125 ;;		Unchanged: 0/0
 15126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15127 ;;      Params:         0       0       0       0       0       0       0       0       0
 15128 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15129 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15130 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15131 ;;Total ram usage:        1 bytes
 15132 ;; Hardware stack levels used:    1
 15133 ;; Hardware stack levels required when called:   13
 15134 ;; This function calls:
 15135 ;;		_oled_writeCommand
 15136 ;; This function is called by:
 15137 ;;		_oled_putChar
 15138 ;; This function uses a non-reentrant model
 15139 ;;
 15140                           
 15141                           	psect	text57
 15142  00366A                     __ptext57:
 15143                           	opt stack 0
 15144  00366A                     _Set_Column_Address:
 15145                           	opt stack 13
 15146                           
 15147                           ;incstack = 0
 15148                           ;Set_Column_Address@address stored from wreg
 15149  00366A  6FCA               	movwf	Set_Column_Address@address& (0+255),b
 15150                           
 15151                           ;SSD1306oLED.c: 212: LATBbits.LATB4 = 0;
 15152  00366C  988A               	bcf	3978,4,c	;volatile
 15153                           
 15154                           ;SSD1306oLED.c: 213: oled_writeCommand(0x10 | (address >> 4) );
 15155  00366E  0100               	movlb	0	; () banked
 15156  003670  39CA               	swapf	Set_Column_Address@address& (0+255),w,b
 15157  003672  0B0F               	andlw	15
 15158  003674  0910               	iorlw	16
 15159  003676  EC7F  F01A         	call	_oled_writeCommand
 15160                           
 15161                           ;SSD1306oLED.c: 214: oled_writeCommand(0x0F & address);
 15162  00367A  0100               	movlb	0	; () banked
 15163  00367C  51CA               	movf	Set_Column_Address@address& (0+255),w,b
 15164  00367E  0B0F               	andlw	15
 15165  003680  EC7F  F01A         	call	_oled_writeCommand
 15166                           
 15167                           ;SSD1306oLED.c: 215: LATBbits.LATB4 = 1;
 15168  003684  888A               	bsf	3978,4,c	;volatile
 15169  003686  0012               	return		;funcret
 15170  003688                     __end_of_Set_Column_Address:
 15171                           	opt stack 0
 15172                           tblptru	equ	0xFF8
 15173                           tblptrh	equ	0xFF7
 15174                           tblptrl	equ	0xFF6
 15175                           tablat	equ	0xFF5
 15176                           prodl	equ	0xFF3
 15177                           intcon	equ	0xFF2
 15178                           postinc0	equ	0xFEE
 15179                           wreg	equ	0xFE8
 15180                           indf1	equ	0xFE7
 15181                           postdec1	equ	0xFE5
 15182                           fsr1h	equ	0xFE2
 15183                           fsr1l	equ	0xFE1
 15184                           indf2	equ	0xFDF
 15185                           fsr2h	equ	0xFDA
 15186                           fsr2l	equ	0xFD9
 15187                           status	equ	0xFD8
 15188                           
 15189 ;; *************** function _oled_writeCommand *****************
 15190 ;; Defined at:
 15191 ;;		line 401 in file "../Includes/Drivers/SSD1306oLED.c"
 15192 ;; Parameters:    Size  Location     Type
 15193 ;;  command         1    wreg     unsigned char 
 15194 ;; Auto vars:     Size  Location     Type
 15195 ;;  command         1    1[BANK0 ] unsigned char 
 15196 ;; Return value:  Size  Location     Type
 15197 ;;		None               void
 15198 ;; Registers used:
 15199 ;;		wreg, status,2, cstack
 15200 ;; Tracked objects:
 15201 ;;		On entry : 0/0
 15202 ;;		On exit  : 0/0
 15203 ;;		Unchanged: 0/0
 15204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15205 ;;      Params:         0       0       0       0       0       0       0       0       0
 15206 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15207 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15208 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15209 ;;Total ram usage:        1 bytes
 15210 ;; Hardware stack levels used:    1
 15211 ;; Hardware stack levels required when called:   12
 15212 ;; This function calls:
 15213 ;;		_SPI_Exchange8bit
 15214 ;; This function is called by:
 15215 ;;		_Set_Page_Address
 15216 ;;		_Set_Column_Address
 15217 ;;		_oled_devInit
 15218 ;;		_oled_setDisplay
 15219 ;;		_oled_displayOff
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223                           	psect	text58
 15224  0034FE                     __ptext58:
 15225                           	opt stack 0
 15226  0034FE                     _oled_writeCommand:
 15227                           	opt stack 13
 15228                           
 15229                           ;incstack = 0
 15230                           ;oled_writeCommand@command stored from wreg
 15231  0034FE  0100               	movlb	0	; () banked
 15232  003500  6FC9               	movwf	oled_writeCommand@command& (0+255),b
 15233                           
 15234                           ;SSD1306oLED.c: 403: LATBbits.LATB5 = 0;
 15235  003502  9A8A               	bcf	3978,5,c	;volatile
 15236                           
 15237                           ;SSD1306oLED.c: 404: SPI_Exchange8bit(command);
 15238  003504  51C9               	movf	oled_writeCommand@command& (0+255),w,b
 15239  003506  EFA7  F01A         	goto	_SPI_Exchange8bit
 15240  00350A                     __end_of_oled_writeCommand:
 15241                           	opt stack 0
 15242                           tblptru	equ	0xFF8
 15243                           tblptrh	equ	0xFF7
 15244                           tblptrl	equ	0xFF6
 15245                           tablat	equ	0xFF5
 15246                           prodl	equ	0xFF3
 15247                           intcon	equ	0xFF2
 15248                           postinc0	equ	0xFEE
 15249                           wreg	equ	0xFE8
 15250                           indf1	equ	0xFE7
 15251                           postdec1	equ	0xFE5
 15252                           fsr1h	equ	0xFE2
 15253                           fsr1l	equ	0xFE1
 15254                           indf2	equ	0xFDF
 15255                           fsr2h	equ	0xFDA
 15256                           fsr2l	equ	0xFD9
 15257                           status	equ	0xFD8
 15258                           
 15259 ;; *************** function _SPI_Exchange8bit *****************
 15260 ;; Defined at:
 15261 ;;		line 81 in file "../Includes/MccGenerated/spi.c"
 15262 ;; Parameters:    Size  Location     Type
 15263 ;;  data            1    wreg     unsigned char 
 15264 ;; Auto vars:     Size  Location     Type
 15265 ;;  data            1    0[BANK0 ] unsigned char 
 15266 ;; Return value:  Size  Location     Type
 15267 ;;                  1    wreg      unsigned char 
 15268 ;; Registers used:
 15269 ;;		wreg, status,2
 15270 ;; Tracked objects:
 15271 ;;		On entry : F/0
 15272 ;;		On exit  : 0/0
 15273 ;;		Unchanged: 0/0
 15274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15275 ;;      Params:         0       0       0       0       0       0       0       0       0
 15276 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15277 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15278 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15279 ;;Total ram usage:        1 bytes
 15280 ;; Hardware stack levels used:    1
 15281 ;; Hardware stack levels required when called:   11
 15282 ;; This function calls:
 15283 ;;		Nothing
 15284 ;; This function is called by:
 15285 ;;		_oled_writeCommand
 15286 ;;		_oled_writeData
 15287 ;; This function uses a non-reentrant model
 15288 ;;
 15289                           
 15290                           	psect	text59
 15291  00354E                     __ptext59:
 15292                           	opt stack 0
 15293  00354E                     _SPI_Exchange8bit:
 15294                           	opt stack 14
 15295                           
 15296                           ;incstack = 0
 15297                           ;SPI_Exchange8bit@data stored from wreg
 15298  00354E  6FC8               	movwf	SPI_Exchange8bit@data& (0+255),b
 15299                           
 15300                           ;spi.c: 84: SSP1CON1bits.WCOL = 0;
 15301  003550  9EC6               	bcf	4038,7,c	;volatile
 15302                           
 15303                           ;spi.c: 86: SSPBUF = data;
 15304  003552  C0C8  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 15305  003556                     l1206:
 15306  003556  A0C7               	btfss	4039,0,c	;volatile
 15307  003558  D7FE               	goto	l1206
 15308                           
 15309                           ;spi.c: 90: }
 15310                           ;spi.c: 92: return (SSPBUF);
 15311  00355A  50C9               	movf	4041,w,c	;volatile
 15312  00355C  0012               	return		;funcret
 15313  00355E                     __end_of_SPI_Exchange8bit:
 15314                           	opt stack 0
 15315                           tblptru	equ	0xFF8
 15316                           tblptrh	equ	0xFF7
 15317                           tblptrl	equ	0xFF6
 15318                           tablat	equ	0xFF5
 15319                           prodl	equ	0xFF3
 15320                           intcon	equ	0xFF2
 15321                           postinc0	equ	0xFEE
 15322                           wreg	equ	0xFE8
 15323                           indf1	equ	0xFE7
 15324                           postdec1	equ	0xFE5
 15325                           fsr1h	equ	0xFE2
 15326                           fsr1l	equ	0xFE1
 15327                           indf2	equ	0xFDF
 15328                           fsr2h	equ	0xFDA
 15329                           fsr2l	equ	0xFD9
 15330                           status	equ	0xFD8
 15331                           
 15332 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 15333 ;; Defined at:
 15334 ;;		line 125 in file "../Includes/Board/USBapp.c"
 15335 ;; Parameters:    Size  Location     Type
 15336 ;;		None
 15337 ;; Auto vars:     Size  Location     Type
 15338 ;;		None
 15339 ;; Return value:  Size  Location     Type
 15340 ;;		None               void
 15341 ;; Registers used:
 15342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15343 ;; Tracked objects:
 15344 ;;		On entry : F/0
 15345 ;;		On exit  : F/0
 15346 ;;		Unchanged: 0/0
 15347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15348 ;;      Params:         0       0       0       0       0       0       0       0       0
 15349 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15350 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15351 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15352 ;;Total ram usage:        1 bytes
 15353 ;; Hardware stack levels used:    1
 15354 ;; Hardware stack levels required when called:   13
 15355 ;; This function calls:
 15356 ;;		_CDCTxService
 15357 ;;		_EUSART_Read
 15358 ;;		_EUSART_Write
 15359 ;;		_MOTEapp_setResponseReady
 15360 ;;		_USBapp_getrxByteFlag
 15361 ;;		_getsUSBUSART
 15362 ;;		_putUSBUSART
 15363 ;; This function is called by:
 15364 ;;		_USBapp_Handler
 15365 ;; This function uses a non-reentrant model
 15366 ;;
 15367                           
 15368                           	psect	text60
 15369  004C0E                     __ptext60:
 15370                           	opt stack 0
 15371  004C0E                     _USBapp_DeviceCdcEmulatorHandler:
 15372                           	opt stack 16
 15373                           
 15374                           ; BSR set to: 0
 15375                           ;USBapp.c: 128: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 15376                           
 15377                           ;incstack = 0
 15378  004C0E  0E1F               	movlw	31
 15379  004C10  658A               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 15380  004C12  0C1F               	retlw	31
 15381                           
 15382                           ; BSR set to: 0
 15383  004C14  B260               	btfsc	3936,1,c	;volatile
 15384  004C16  0C1F               	retlw	31
 15385                           
 15386                           ; BSR set to: 0
 15387                           ;USBapp.c: 131: if (RS232_Out_Data_Rdy == 0)
 15388  004C18  501B               	movf	_RS232_Out_Data_Rdy,w,c
 15389  004C1A  E10E               	bnz	l833
 15390                           
 15391                           ; BSR set to: 0
 15392                           ;USBapp.c: 132: {
 15393                           ;USBapp.c: 133: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 15394  004C1C  0E40               	movlw	low _USB_Buffer
 15395  004C1E  6FCF               	movwf	getsUSBUSART@buffer& (0+255),b
 15396  004C20  0E01               	movlw	high _USB_Buffer
 15397  004C22  6FD0               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15398  004C24  0E40               	movlw	64
 15399  004C26  6FD1               	movwf	getsUSBUSART@len& (0+255),b
 15400  004C28  EC83  F023         	call	_getsUSBUSART	;wreg free
 15401  004C2C  6E19               	movwf	_LastRS232Out,c
 15402                           
 15403                           ; BSR set to: 0
 15404                           ;USBapp.c: 134: if(LastRS232Out > 0)
 15405  004C2E  5019               	movf	_LastRS232Out,w,c
 15406  004C30  E003               	bz	l833
 15407                           
 15408                           ; BSR set to: 0
 15409                           ;USBapp.c: 135: {
 15410                           ;USBapp.c: 136: RS232_Out_Data_Rdy = 1;
 15411  004C32  0E01               	movlw	1
 15412  004C34  6E1B               	movwf	_RS232_Out_Data_Rdy,c
 15413                           
 15414                           ; BSR set to: 0
 15415                           ;USBapp.c: 137: RS232cp = 0;
 15416  004C36  6A1C               	clrf	_RS232cp,c
 15417  004C38                     l833:
 15418                           
 15419                           ; BSR set to: 0
 15420                           ;USBapp.c: 138: }
 15421                           ;USBapp.c: 139: }
 15422                           ;USBapp.c: 142: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 15423  004C38  501B               	movf	_RS232_Out_Data_Rdy,w,c
 15424  004C3A  E010               	bz	l11881
 15425                           
 15426                           ; BSR set to: 0
 15427  004C3C  A2AC               	btfss	4012,1,c	;volatile
 15428  004C3E  D00E               	goto	l11881
 15429                           
 15430                           ; BSR set to: 0
 15431                           ;USBapp.c: 143: {
 15432                           ;USBapp.c: 145: EUSART_Write(USB_Buffer[RS232cp]);
 15433  004C40  0E40               	movlw	low _USB_Buffer
 15434  004C42  241C               	addwf	_RS232cp,w,c
 15435  004C44  6ED9               	movwf	fsr2l,c
 15436  004C46  6ADA               	clrf	fsr2h,c
 15437  004C48  0E01               	movlw	high _USB_Buffer
 15438  004C4A  22DA               	addwfc	fsr2h,f,c
 15439  004C4C  50DF               	movf	indf2,w,c
 15440  004C4E  ECD1  F01C         	call	_EUSART_Write
 15441                           
 15442                           ;USBapp.c: 146: ++RS232cp;
 15443  004C52  2A1C               	incf	_RS232cp,f,c
 15444                           
 15445                           ;USBapp.c: 147: if (RS232cp == LastRS232Out)
 15446  004C54  5019               	movf	_LastRS232Out,w,c
 15447  004C56  181C               	xorwf	_RS232cp,w,c
 15448  004C58  E101               	bnz	l11881
 15449                           
 15450                           ;USBapp.c: 148: RS232_Out_Data_Rdy = 0;
 15451  004C5A  6A1B               	clrf	_RS232_Out_Data_Rdy,c
 15452  004C5C                     l11881:
 15453                           
 15454                           ;USBapp.c: 149: }
 15455                           ;USBapp.c: 152: if ((eusartRxCount))
 15456  004C5C  5023               	movf	_eusartRxCount,w,c	;volatile
 15457  004C5E  E01C               	bz	l11897
 15458                           
 15459                           ;USBapp.c: 153: {
 15460                           ;USBapp.c: 154: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 15461  004C60  EC58  F01A         	call	_USBapp_getrxByteFlag	;wreg free
 15462  004C64  0900               	iorlw	0
 15463  004C66  E018               	bz	l11897
 15464  004C68  0E3F               	movlw	63
 15465  004C6A  601A               	cpfslt	_NextUSBOut,c
 15466  004C6C  D015               	goto	l11897
 15467                           
 15468                           ;USBapp.c: 155: {
 15469                           ;USBapp.c: 156: __nop();
 15470  004C6E  F000               	nop	
 15471                           
 15472                           ;USBapp.c: 157: USB_Buffer[NextUSBOut] = EUSART_Read();
 15473  004C70  ECBA  F01C         	call	_EUSART_Read	;wreg free
 15474  004C74  6FD5               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 15475  004C76  0E40               	movlw	low _USB_Buffer
 15476  004C78  241A               	addwf	_NextUSBOut,w,c
 15477  004C7A  6ED9               	movwf	fsr2l,c
 15478  004C7C  6ADA               	clrf	fsr2h,c
 15479  004C7E  0E01               	movlw	high _USB_Buffer
 15480  004C80  22DA               	addwfc	fsr2h,f,c
 15481  004C82  C0D5  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 15482                           
 15483                           ; BSR set to: 0
 15484                           ;USBapp.c: 158: ++NextUSBOut;
 15485  004C86  2A1A               	incf	_NextUSBOut,f,c
 15486                           
 15487                           ; BSR set to: 0
 15488                           ;USBapp.c: 159: USB_Buffer[NextUSBOut] = 0;
 15489  004C88  0E40               	movlw	low _USB_Buffer
 15490  004C8A  241A               	addwf	_NextUSBOut,w,c
 15491  004C8C  6ED9               	movwf	fsr2l,c
 15492  004C8E  6ADA               	clrf	fsr2h,c
 15493  004C90  0E01               	movlw	high _USB_Buffer
 15494  004C92  22DA               	addwfc	fsr2h,f,c
 15495  004C94  6ADF               	clrf	indf2,c
 15496                           
 15497                           ; BSR set to: 0
 15498                           ;USBapp.c: 160: rxByteFlag = 0;
 15499  004C96  6A2A               	clrf	_rxByteFlag,c	;volatile
 15500  004C98                     l11897:
 15501                           
 15502                           ;USBapp.c: 161: }
 15503                           ;USBapp.c: 162: }
 15504                           ;USBapp.c: 166: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 15505  004C98  5020               	movf	_cdc_trf_state,w,c
 15506  004C9A  E002 EFE0  F02B    	bnz	_CDCTxService
 15507  004CA0  501A               	movf	_NextUSBOut,w,c
 15508  004CA2  E102 EFE0  F02B    	bz	_CDCTxService
 15509                           
 15510                           ;USBapp.c: 167: {
 15511                           ;USBapp.c: 168: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 15512  004CA8  0E40               	movlw	low _USB_Buffer
 15513  004CAA  0100               	movlb	0	; () banked
 15514  004CAC  6FC8               	movwf	putUSBUSART@data& (0+255),b
 15515  004CAE  0E01               	movlw	high _USB_Buffer
 15516  004CB0  6FC9               	movwf	(putUSBUSART@data+1)& (0+255),b
 15517  004CB2  C01A  F0CA         	movff	_NextUSBOut,putUSBUSART@length
 15518  004CB6  EC0A  F01B         	call	_putUSBUSART	;wreg free
 15519                           
 15520                           ; BSR set to: 0
 15521                           ;USBapp.c: 169: MOTEapp_setResponseReady();
 15522  004CBA  EC51  F01A         	call	_MOTEapp_setResponseReady	;wreg free
 15523                           
 15524                           ; BSR set to: 0
 15525                           ;USBapp.c: 170: NextUSBOut = 0;
 15526  004CBE  6A1A               	clrf	_NextUSBOut,c
 15527                           
 15528                           ;USBapp.c: 171: }
 15529                           ;USBapp.c: 173: CDCTxService();
 15530  004CC0  EFE0  F02B         	goto	_CDCTxService	;wreg free
 15531  004CC4                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 15532                           	opt stack 0
 15533                           tblptru	equ	0xFF8
 15534                           tblptrh	equ	0xFF7
 15535                           tblptrl	equ	0xFF6
 15536                           tablat	equ	0xFF5
 15537                           prodl	equ	0xFF3
 15538                           intcon	equ	0xFF2
 15539                           postinc0	equ	0xFEE
 15540                           wreg	equ	0xFE8
 15541                           indf1	equ	0xFE7
 15542                           postdec1	equ	0xFE5
 15543                           fsr1h	equ	0xFE2
 15544                           fsr1l	equ	0xFE1
 15545                           indf2	equ	0xFDF
 15546                           fsr2h	equ	0xFDA
 15547                           fsr2l	equ	0xFD9
 15548                           status	equ	0xFD8
 15549                           
 15550 ;; *************** function _putUSBUSART *****************
 15551 ;; Defined at:
 15552 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 15553 ;; Parameters:    Size  Location     Type
 15554 ;;  data            2    0[BANK0 ] PTR unsigned char 
 15555 ;;		 -> USB_Buffer(64), 
 15556 ;;  length          1    2[BANK0 ] unsigned char 
 15557 ;; Auto vars:     Size  Location     Type
 15558 ;;		None
 15559 ;; Return value:  Size  Location     Type
 15560 ;;		None               void
 15561 ;; Registers used:
 15562 ;;		wreg, status,2, status,0
 15563 ;; Tracked objects:
 15564 ;;		On entry : F/0
 15565 ;;		On exit  : F/0
 15566 ;;		Unchanged: 0/0
 15567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15568 ;;      Params:         0       3       0       0       0       0       0       0       0
 15569 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15570 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15571 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15572 ;;Total ram usage:        3 bytes
 15573 ;; Hardware stack levels used:    1
 15574 ;; Hardware stack levels required when called:   11
 15575 ;; This function calls:
 15576 ;;		Nothing
 15577 ;; This function is called by:
 15578 ;;		_USBapp_DeviceCdcEmulatorHandler
 15579 ;; This function uses a non-reentrant model
 15580 ;;
 15581                           
 15582                           	psect	text61
 15583  003614                     __ptext61:
 15584                           	opt stack 0
 15585  003614                     _putUSBUSART:
 15586                           	opt stack 17
 15587                           
 15588                           ; BSR set to: 0
 15589                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 15590                           
 15591                           ; BSR set to: 0
 15592                           ;incstack = 0
 15593  003614  94A3               	bcf	4003,2,c	;volatile
 15594                           
 15595                           ; BSR set to: 0
 15596                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 15597  003616  5020               	movf	_cdc_trf_state,w,c
 15598  003618  E109               	bnz	l10587
 15599                           
 15600                           ; BSR set to: 0
 15601                           ;usb_device_cdc.c: 530: {
 15602                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 15603  00361A  C0C8  F073         	movff	putUSBUSART@data,_pCDCSrc
 15604  00361E  C0C9  F074         	movff	putUSBUSART@data+1,_pCDCSrc+1
 15605                           
 15606                           ; BSR set to: 0
 15607  003622  C0CA  F092         	movff	putUSBUSART@length,_cdc_tx_len
 15608                           
 15609                           ; BSR set to: 0
 15610  003626  0E01               	movlw	1
 15611  003628  6F90               	movwf	_cdc_mem_type& (0+255),b
 15612                           
 15613                           ; BSR set to: 0
 15614  00362A  6E20               	movwf	_cdc_trf_state,c
 15615  00362C                     l10587:
 15616                           
 15617                           ; BSR set to: 0
 15618                           ;usb_device_cdc.c: 532: }
 15619                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 15620  00362C  84A3               	bsf	4003,2,c	;volatile
 15621                           
 15622                           ; BSR set to: 0
 15623  00362E  0012               	return		;funcret
 15624  003630                     __end_of_putUSBUSART:
 15625                           	opt stack 0
 15626                           tblptru	equ	0xFF8
 15627                           tblptrh	equ	0xFF7
 15628                           tblptrl	equ	0xFF6
 15629                           tablat	equ	0xFF5
 15630                           prodl	equ	0xFF3
 15631                           intcon	equ	0xFF2
 15632                           postinc0	equ	0xFEE
 15633                           wreg	equ	0xFE8
 15634                           indf1	equ	0xFE7
 15635                           postdec1	equ	0xFE5
 15636                           fsr1h	equ	0xFE2
 15637                           fsr1l	equ	0xFE1
 15638                           indf2	equ	0xFDF
 15639                           fsr2h	equ	0xFDA
 15640                           fsr2l	equ	0xFD9
 15641                           status	equ	0xFD8
 15642                           
 15643 ;; *************** function _getsUSBUSART *****************
 15644 ;; Defined at:
 15645 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 15646 ;; Parameters:    Size  Location     Type
 15647 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 15648 ;;		 -> USB_Buffer(64), 
 15649 ;;  len             1    9[BANK0 ] unsigned char 
 15650 ;; Auto vars:     Size  Location     Type
 15651 ;;		None
 15652 ;; Return value:  Size  Location     Type
 15653 ;;                  1    wreg      unsigned char 
 15654 ;; Registers used:
 15655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15656 ;; Tracked objects:
 15657 ;;		On entry : F/0
 15658 ;;		On exit  : F/0
 15659 ;;		Unchanged: 0/0
 15660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15661 ;;      Params:         0       3       0       0       0       0       0       0       0
 15662 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15663 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15664 ;;      Totals:         0       6       0       0       0       0       0       0       0
 15665 ;;Total ram usage:        6 bytes
 15666 ;; Hardware stack levels used:    1
 15667 ;; Hardware stack levels required when called:   12
 15668 ;; This function calls:
 15669 ;;		_USBTransferOnePacket
 15670 ;; This function is called by:
 15671 ;;		_USBapp_DeviceCdcEmulatorHandler
 15672 ;; This function uses a non-reentrant model
 15673 ;;
 15674                           
 15675                           	psect	text62
 15676  004706                     __ptext62:
 15677                           	opt stack 0
 15678  004706                     _getsUSBUSART:
 15679                           	opt stack 16
 15680                           
 15681                           ; BSR set to: 0
 15682                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 15683                           
 15684                           ; BSR set to: 0
 15685                           ;incstack = 0
 15686  004706  6B91               	clrf	_cdc_rx_len& (0+255),b
 15687                           
 15688                           ; BSR set to: 0
 15689                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 15690  004708  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 15691  00470A  1179               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 15692  00470C  E009               	bz	l1889
 15693                           
 15694                           ; BSR set to: 0
 15695  00470E  C078  FFD9         	movff	_CDCDataOutHandle,fsr2l
 15696  004712  C079  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 15697  004716  0E01               	movlw	1
 15698  004718  AEDF               	btfss	indf2,7,c
 15699  00471A  0E00               	movlw	0
 15700  00471C  6FD3               	movwf	_getsUSBUSART$5738& (0+255),b
 15701  00471E  D001               	goto	L52
 15702  004720                     l1889:
 15703                           
 15704                           ; BSR set to: 0
 15705  004720  6BD3               	clrf	_getsUSBUSART$5738& (0+255),b
 15706  004722                     L52:
 15707  004722  6BD4               	clrf	(_getsUSBUSART$5738+1)& (0+255),b
 15708                           
 15709                           ; BSR set to: 0
 15710  004724  51D3               	movf	_getsUSBUSART$5738& (0+255),w,b
 15711  004726  11D4               	iorwf	(_getsUSBUSART$5738+1)& (0+255),w,b
 15712  004728  E134               	bnz	l10567
 15713                           
 15714                           ; BSR set to: 0
 15715                           ;usb_device_cdc.c: 437: {
 15716                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 15717  00472A  EE20 F001          	lfsr	2,1
 15718  00472E  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 15719  004730  26D9               	addwf	fsr2l,f,c
 15720  004732  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 15721  004734  22DA               	addwfc	fsr2h,f,c
 15722  004736  51D1               	movf	getsUSBUSART@len& (0+255),w,b
 15723  004738  5CDE               	subwf	postinc2,w,c
 15724  00473A  E208               	bc	l10557
 15725                           
 15726                           ; BSR set to: 0
 15727                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 15728  00473C  EE20 F001          	lfsr	2,1
 15729  004740  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 15730  004742  26D9               	addwf	fsr2l,f,c
 15731  004744  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 15732  004746  22DA               	addwfc	fsr2h,f,c
 15733  004748  50DF               	movf	indf2,w,c
 15734  00474A  6FD1               	movwf	getsUSBUSART@len& (0+255),b
 15735  00474C                     l10557:
 15736                           
 15737                           ; BSR set to: 0
 15738                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 15739  00474C  6B91               	clrf	_cdc_rx_len& (0+255),b
 15740  00474E  D00F               	goto	l10563
 15741  004750                     l10559:
 15742                           
 15743                           ; BSR set to: 0
 15744                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 15745  004750  0E40               	movlw	64
 15746  004752  2591               	addwf	_cdc_rx_len& (0+255),w,b
 15747  004754  6ED9               	movwf	fsr2l,c
 15748  004756  6ADA               	clrf	fsr2h,c
 15749  004758  0E05               	movlw	5
 15750  00475A  22DA               	addwfc	fsr2h,f,c
 15751  00475C  5191               	movf	_cdc_rx_len& (0+255),w,b
 15752  00475E  25CF               	addwf	getsUSBUSART@buffer& (0+255),w,b
 15753  004760  6EE1               	movwf	fsr1l,c
 15754  004762  0E00               	movlw	0
 15755  004764  21D0               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 15756  004766  6EE2               	movwf	fsr1h,c
 15757  004768  CFDF FFE7          	movff	indf2,indf1
 15758                           
 15759                           ; BSR set to: 0
 15760  00476C  2B91               	incf	_cdc_rx_len& (0+255),f,b
 15761  00476E                     l10563:
 15762                           
 15763                           ; BSR set to: 0
 15764  00476E  51D1               	movf	getsUSBUSART@len& (0+255),w,b
 15765  004770  5D91               	subwf	_cdc_rx_len& (0+255),w,b
 15766  004772  E3EE               	bnc	l10559
 15767                           
 15768                           ; BSR set to: 0
 15769                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 15770  004774  0E00               	movlw	0
 15771  004776  6FC8               	movwf	USBTransferOnePacket@dir& (0+255),b
 15772  004778  0E40               	movlw	64
 15773  00477A  6FC9               	movwf	USBTransferOnePacket@data& (0+255),b
 15774  00477C  0E05               	movlw	5
 15775  00477E  6FCA               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 15776  004780  0E40               	movlw	64
 15777  004782  6FCB               	movwf	USBTransferOnePacket@len& (0+255),b
 15778  004784  0E02               	movlw	2
 15779  004786  ECB3  F024         	call	_USBTransferOnePacket
 15780  00478A  C0C8  F078         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 15781  00478E  C0C9  F079         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 15782  004792                     l10567:
 15783                           
 15784                           ; BSR set to: 0
 15785                           ;usb_device_cdc.c: 457: }
 15786                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 15787  004792  5191               	movf	_cdc_rx_len& (0+255),w,b
 15788                           
 15789                           ; BSR set to: 0
 15790  004794  0012               	return		;funcret
 15791  004796                     __end_of_getsUSBUSART:
 15792                           	opt stack 0
 15793                           tblptru	equ	0xFF8
 15794                           tblptrh	equ	0xFF7
 15795                           tblptrl	equ	0xFF6
 15796                           tablat	equ	0xFF5
 15797                           prodl	equ	0xFF3
 15798                           intcon	equ	0xFF2
 15799                           postinc0	equ	0xFEE
 15800                           wreg	equ	0xFE8
 15801                           indf1	equ	0xFE7
 15802                           postdec1	equ	0xFE5
 15803                           fsr1h	equ	0xFE2
 15804                           fsr1l	equ	0xFE1
 15805                           indf2	equ	0xFDF
 15806                           postinc2	equ	0xFDE
 15807                           fsr2h	equ	0xFDA
 15808                           fsr2l	equ	0xFD9
 15809                           status	equ	0xFD8
 15810                           
 15811 ;; *************** function _USBapp_getrxByteFlag *****************
 15812 ;; Defined at:
 15813 ;;		line 231 in file "../Includes/Board/USBapp.c"
 15814 ;; Parameters:    Size  Location     Type
 15815 ;;		None
 15816 ;; Auto vars:     Size  Location     Type
 15817 ;;		None
 15818 ;; Return value:  Size  Location     Type
 15819 ;;                  1    wreg      unsigned char 
 15820 ;; Registers used:
 15821 ;;		wreg, status,2
 15822 ;; Tracked objects:
 15823 ;;		On entry : 0/0
 15824 ;;		On exit  : 0/0
 15825 ;;		Unchanged: 0/0
 15826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15827 ;;      Params:         0       0       0       0       0       0       0       0       0
 15828 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15829 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15830 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15831 ;;Total ram usage:        0 bytes
 15832 ;; Hardware stack levels used:    1
 15833 ;; Hardware stack levels required when called:   11
 15834 ;; This function calls:
 15835 ;;		Nothing
 15836 ;; This function is called by:
 15837 ;;		_USBapp_DeviceCdcEmulatorHandler
 15838 ;; This function uses a non-reentrant model
 15839 ;;
 15840                           
 15841                           	psect	text63
 15842  0034B0                     __ptext63:
 15843                           	opt stack 0
 15844  0034B0                     _USBapp_getrxByteFlag:
 15845                           	opt stack 17
 15846                           
 15847                           ;USBapp.c: 233: return rxByteFlag;
 15848                           
 15849                           ; BSR set to: 0
 15850                           ;incstack = 0
 15851  0034B0  502A               	movf	_rxByteFlag,w,c	;volatile
 15852  0034B2  0012               	return		;funcret
 15853  0034B4                     __end_of_USBapp_getrxByteFlag:
 15854                           	opt stack 0
 15855                           tblptru	equ	0xFF8
 15856                           tblptrh	equ	0xFF7
 15857                           tblptrl	equ	0xFF6
 15858                           tablat	equ	0xFF5
 15859                           prodl	equ	0xFF3
 15860                           intcon	equ	0xFF2
 15861                           postinc0	equ	0xFEE
 15862                           wreg	equ	0xFE8
 15863                           indf1	equ	0xFE7
 15864                           postdec1	equ	0xFE5
 15865                           fsr1h	equ	0xFE2
 15866                           fsr1l	equ	0xFE1
 15867                           indf2	equ	0xFDF
 15868                           postinc2	equ	0xFDE
 15869                           fsr2h	equ	0xFDA
 15870                           fsr2l	equ	0xFD9
 15871                           status	equ	0xFD8
 15872                           
 15873 ;; *************** function _MOTEapp_setResponseReady *****************
 15874 ;; Defined at:
 15875 ;;		line 1218 in file "../Includes/Board/MOTEapp.c"
 15876 ;; Parameters:    Size  Location     Type
 15877 ;;		None
 15878 ;; Auto vars:     Size  Location     Type
 15879 ;;		None
 15880 ;; Return value:  Size  Location     Type
 15881 ;;		None               void
 15882 ;; Registers used:
 15883 ;;		None
 15884 ;; Tracked objects:
 15885 ;;		On entry : F/0
 15886 ;;		On exit  : F/0
 15887 ;;		Unchanged: F/0
 15888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15889 ;;      Params:         0       0       0       0       0       0       0       0       0
 15890 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15891 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15892 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15893 ;;Total ram usage:        0 bytes
 15894 ;; Hardware stack levels used:    1
 15895 ;; Hardware stack levels required when called:   11
 15896 ;; This function calls:
 15897 ;;		Nothing
 15898 ;; This function is called by:
 15899 ;;		_USBapp_DeviceCdcEmulatorHandler
 15900 ;; This function uses a non-reentrant model
 15901 ;;
 15902                           
 15903                           	psect	text64
 15904  0034A2                     __ptext64:
 15905                           	opt stack 0
 15906  0034A2                     _MOTEapp_setResponseReady:
 15907                           	opt stack 17
 15908                           
 15909                           ; BSR set to: 0
 15910                           
 15911                           ;incstack = 0
 15912  0034A2  0012               	return		;funcret
 15913  0034A4                     __end_of_MOTEapp_setResponseReady:
 15914                           	opt stack 0
 15915                           tblptru	equ	0xFF8
 15916                           tblptrh	equ	0xFF7
 15917                           tblptrl	equ	0xFF6
 15918                           tablat	equ	0xFF5
 15919                           prodl	equ	0xFF3
 15920                           intcon	equ	0xFF2
 15921                           postinc0	equ	0xFEE
 15922                           wreg	equ	0xFE8
 15923                           indf1	equ	0xFE7
 15924                           postdec1	equ	0xFE5
 15925                           fsr1h	equ	0xFE2
 15926                           fsr1l	equ	0xFE1
 15927                           indf2	equ	0xFDF
 15928                           postinc2	equ	0xFDE
 15929                           fsr2h	equ	0xFDA
 15930                           fsr2l	equ	0xFD9
 15931                           status	equ	0xFD8
 15932                           
 15933 ;; *************** function _EUSART_Write *****************
 15934 ;; Defined at:
 15935 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 15936 ;; Parameters:    Size  Location     Type
 15937 ;;  txData          1    wreg     unsigned char 
 15938 ;; Auto vars:     Size  Location     Type
 15939 ;;  txData          1    0[BANK0 ] unsigned char 
 15940 ;; Return value:  Size  Location     Type
 15941 ;;		None               void
 15942 ;; Registers used:
 15943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15944 ;; Tracked objects:
 15945 ;;		On entry : 0/0
 15946 ;;		On exit  : 0/0
 15947 ;;		Unchanged: 0/0
 15948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15949 ;;      Params:         0       0       0       0       0       0       0       0       0
 15950 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15951 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15952 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15953 ;;Total ram usage:        1 bytes
 15954 ;; Hardware stack levels used:    1
 15955 ;; Hardware stack levels required when called:   11
 15956 ;; This function calls:
 15957 ;;		Nothing
 15958 ;; This function is called by:
 15959 ;;		_EndLine
 15960 ;;		_sendCommand
 15961 ;;		_sendDataCommand
 15962 ;;		_USBapp_DeviceCdcEmulatorHandler
 15963 ;; This function uses a non-reentrant model
 15964 ;;
 15965                           
 15966                           	psect	text65
 15967  0039A2                     __ptext65:
 15968                           	opt stack 0
 15969  0039A2                     _EUSART_Write:
 15970                           	opt stack 14
 15971                           
 15972                           ; BSR set to: 0
 15973                           ;incstack = 0
 15974                           ;EUSART_Write@txData stored from wreg
 15975  0039A2  0100               	movlb	0	; () banked
 15976  0039A4  6FC8               	movwf	EUSART_Write@txData& (0+255),b
 15977  0039A6                     l9813:
 15978  0039A6  5026               	movf	_eusartTxBufferRemaining,w,c	;volatile
 15979  0039A8  E0FE               	bz	l9813
 15980                           
 15981                           ;eusart.c: 143: }
 15982                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 15983  0039AA  B89D               	btfsc	3997,4,c	;volatile
 15984  0039AC  D003               	goto	l1057
 15985                           
 15986                           ;eusart.c: 146: {
 15987                           ;eusart.c: 147: TXREG = txData;
 15988  0039AE  C0C8  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 15989                           
 15990                           ;eusart.c: 148: }
 15991  0039B2  D00F               	goto	l9827
 15992  0039B4                     l1057:
 15993                           
 15994                           ;eusart.c: 149: else
 15995                           ;eusart.c: 150: {
 15996                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 15997  0039B4  989D               	bcf	3997,4,c	;volatile
 15998                           
 15999                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 16000  0039B6  0E00               	movlw	low _eusartTxBuffer
 16001  0039B8  2427               	addwf	_eusartTxHead,w,c
 16002  0039BA  6ED9               	movwf	fsr2l,c
 16003  0039BC  6ADA               	clrf	fsr2h,c
 16004  0039BE  0E02               	movlw	high _eusartTxBuffer
 16005  0039C0  22DA               	addwfc	fsr2h,f,c
 16006  0039C2  C0C8  FFDF         	movff	EUSART_Write@txData,indf2
 16007  0039C6  2A27               	incf	_eusartTxHead,f,c
 16008                           
 16009                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 16010  0039C8  0E3F               	movlw	63
 16011  0039CA  6427               	cpfsgt	_eusartTxHead,c
 16012  0039CC  D001               	goto	l9825
 16013                           
 16014                           ;eusart.c: 154: {
 16015                           ;eusart.c: 155: eusartTxHead = 0;
 16016  0039CE  6A27               	clrf	_eusartTxHead,c
 16017  0039D0                     l9825:
 16018                           
 16019                           ;eusart.c: 156: }
 16020                           ;eusart.c: 157: eusartTxBufferRemaining--;
 16021  0039D0  0626               	decf	_eusartTxBufferRemaining,f,c	;volatile
 16022  0039D2                     l9827:
 16023                           
 16024                           ;eusart.c: 158: }
 16025                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 16026  0039D2  889D               	bsf	3997,4,c	;volatile
 16027  0039D4  0012               	return		;funcret
 16028  0039D6                     __end_of_EUSART_Write:
 16029                           	opt stack 0
 16030                           tblptru	equ	0xFF8
 16031                           tblptrh	equ	0xFF7
 16032                           tblptrl	equ	0xFF6
 16033                           tablat	equ	0xFF5
 16034                           prodl	equ	0xFF3
 16035                           intcon	equ	0xFF2
 16036                           postinc0	equ	0xFEE
 16037                           wreg	equ	0xFE8
 16038                           indf1	equ	0xFE7
 16039                           postdec1	equ	0xFE5
 16040                           fsr1h	equ	0xFE2
 16041                           fsr1l	equ	0xFE1
 16042                           indf2	equ	0xFDF
 16043                           postinc2	equ	0xFDE
 16044                           fsr2h	equ	0xFDA
 16045                           fsr2l	equ	0xFD9
 16046                           status	equ	0xFD8
 16047                           
 16048 ;; *************** function _EUSART_Read *****************
 16049 ;; Defined at:
 16050 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 16051 ;; Parameters:    Size  Location     Type
 16052 ;;		None
 16053 ;; Auto vars:     Size  Location     Type
 16054 ;;  readValue       1    0[BANK0 ] unsigned char 
 16055 ;; Return value:  Size  Location     Type
 16056 ;;                  1    wreg      unsigned char 
 16057 ;; Registers used:
 16058 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16059 ;; Tracked objects:
 16060 ;;		On entry : 0/0
 16061 ;;		On exit  : F/0
 16062 ;;		Unchanged: 0/0
 16063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16064 ;;      Params:         0       0       0       0       0       0       0       0       0
 16065 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16066 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16067 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16068 ;;Total ram usage:        1 bytes
 16069 ;; Hardware stack levels used:    1
 16070 ;; Hardware stack levels required when called:   11
 16071 ;; This function calls:
 16072 ;;		Nothing
 16073 ;; This function is called by:
 16074 ;;		_MOTEapp_getModemResponse
 16075 ;;		_USBapp_DeviceCdcEmulatorHandler
 16076 ;; This function uses a non-reentrant model
 16077 ;;
 16078                           
 16079                           	psect	text66
 16080  003974                     __ptext66:
 16081                           	opt stack 0
 16082  003974                     _EUSART_Read:
 16083                           	opt stack 14
 16084                           
 16085                           ;eusart.c: 121: while(0 == eusartRxCount)
 16086                           
 16087                           ;incstack = 0
 16088  003974  D001               	goto	l9831
 16089  003976                     l1048:
 16090                           
 16091                           ;eusart.c: 122: {
 16092                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 16093  003976  8E89               	bsf	3977,7,c	;volatile
 16094  003978                     l9831:
 16095  003978  5023               	movf	_eusartRxCount,w,c	;volatile
 16096  00397A  E0FD               	bz	l1048
 16097                           
 16098                           ;eusart.c: 124: }
 16099                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 16100  00397C  9A9D               	bcf	3997,5,c	;volatile
 16101                           
 16102                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 16103  00397E  0E00               	movlw	low _eusartRxBuffer
 16104  003980  2425               	addwf	_eusartRxTail,w,c
 16105  003982  6ED9               	movwf	fsr2l,c
 16106  003984  6ADA               	clrf	fsr2h,c
 16107  003986  0E01               	movlw	high _eusartRxBuffer
 16108  003988  22DA               	addwfc	fsr2h,f,c
 16109  00398A  50DF               	movf	indf2,w,c
 16110  00398C  0100               	movlb	0	; () banked
 16111  00398E  6FC8               	movwf	EUSART_Read@readValue& (0+255),b
 16112                           
 16113                           ; BSR set to: 0
 16114  003990  2A25               	incf	_eusartRxTail,f,c
 16115                           
 16116                           ; BSR set to: 0
 16117                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 16118  003992  0E3F               	movlw	63
 16119  003994  6425               	cpfsgt	_eusartRxTail,c
 16120  003996  D001               	goto	l9841
 16121                           
 16122                           ; BSR set to: 0
 16123                           ;eusart.c: 130: {
 16124                           ;eusart.c: 131: eusartRxTail = 0;
 16125  003998  6A25               	clrf	_eusartRxTail,c
 16126  00399A                     l9841:
 16127                           
 16128                           ; BSR set to: 0
 16129                           ;eusart.c: 132: }
 16130                           ;eusart.c: 133: eusartRxCount--;
 16131  00399A  0623               	decf	_eusartRxCount,f,c	;volatile
 16132                           
 16133                           ; BSR set to: 0
 16134                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 16135  00399C  8A9D               	bsf	3997,5,c	;volatile
 16136                           
 16137                           ; BSR set to: 0
 16138                           ;eusart.c: 136: return readValue;
 16139  00399E  51C8               	movf	EUSART_Read@readValue& (0+255),w,b
 16140                           
 16141                           ; BSR set to: 0
 16142  0039A0  0012               	return		;funcret
 16143  0039A2                     __end_of_EUSART_Read:
 16144                           	opt stack 0
 16145                           tblptru	equ	0xFF8
 16146                           tblptrh	equ	0xFF7
 16147                           tblptrl	equ	0xFF6
 16148                           tablat	equ	0xFF5
 16149                           prodl	equ	0xFF3
 16150                           intcon	equ	0xFF2
 16151                           postinc0	equ	0xFEE
 16152                           wreg	equ	0xFE8
 16153                           indf1	equ	0xFE7
 16154                           postdec1	equ	0xFE5
 16155                           fsr1h	equ	0xFE2
 16156                           fsr1l	equ	0xFE1
 16157                           indf2	equ	0xFDF
 16158                           postinc2	equ	0xFDE
 16159                           fsr2h	equ	0xFDA
 16160                           fsr2l	equ	0xFD9
 16161                           status	equ	0xFD8
 16162                           
 16163 ;; *************** function _CDCTxService *****************
 16164 ;; Defined at:
 16165 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 16166 ;; Parameters:    Size  Location     Type
 16167 ;;		None
 16168 ;; Auto vars:     Size  Location     Type
 16169 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
 16170 ;;  i               1    9[BANK0 ] unsigned char 
 16171 ;; Return value:  Size  Location     Type
 16172 ;;		None               void
 16173 ;; Registers used:
 16174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16175 ;; Tracked objects:
 16176 ;;		On entry : 0/0
 16177 ;;		On exit  : F/0
 16178 ;;		Unchanged: 0/0
 16179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16180 ;;      Params:         0       0       0       0       0       0       0       0       0
 16181 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16182 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16183 ;;      Totals:         0       4       0       0       0       0       0       0       0
 16184 ;;Total ram usage:        4 bytes
 16185 ;; Hardware stack levels used:    1
 16186 ;; Hardware stack levels required when called:   12
 16187 ;; This function calls:
 16188 ;;		_USBTransferOnePacket
 16189 ;; This function is called by:
 16190 ;;		_USBapp_DeviceCdcEmulatorHandler
 16191 ;; This function uses a non-reentrant model
 16192 ;;
 16193                           
 16194                           	psect	text67
 16195  0057C0                     __ptext67:
 16196                           	opt stack 0
 16197  0057C0                     _CDCTxService:
 16198                           	opt stack 16
 16199                           
 16200                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 16201                           ;usb_device_cdc.c: 786: uint8_t i;
 16202                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 16203                           
 16204                           ; BSR set to: 0
 16205                           ;incstack = 0
 16206  0057C0  94A3               	bcf	4003,2,c	;volatile
 16207                           
 16208                           ;usb_device_cdc.c: 790: {};
 16209                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 16210  0057C2  0100               	movlb	0	; () banked
 16211  0057C4  5176               	movf	_CDCDataInHandle& (0+255),w,b
 16212  0057C6  1177               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 16213  0057C8  E009               	bz	l1919
 16214                           
 16215                           ; BSR set to: 0
 16216  0057CA  C076  FFD9         	movff	_CDCDataInHandle,fsr2l
 16217  0057CE  C077  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 16218  0057D2  0E01               	movlw	1
 16219  0057D4  AEDF               	btfss	indf2,7,c
 16220  0057D6  0E00               	movlw	0
 16221  0057D8  6FCF               	movwf	_CDCTxService$5786& (0+255),b
 16222  0057DA  D001               	goto	L53
 16223  0057DC                     l1919:
 16224                           
 16225                           ; BSR set to: 0
 16226  0057DC  6BCF               	clrf	_CDCTxService$5786& (0+255),b
 16227  0057DE                     L53:
 16228  0057DE  6BD0               	clrf	(_CDCTxService$5786+1)& (0+255),b
 16229                           
 16230                           ; BSR set to: 0
 16231  0057E0  51CF               	movf	_CDCTxService$5786& (0+255),w,b
 16232  0057E2  11D0               	iorwf	(_CDCTxService$5786+1)& (0+255),w,b
 16233  0057E4  E002               	bz	l10599
 16234                           
 16235                           ; BSR set to: 0
 16236                           ;usb_device_cdc.c: 793: {
 16237                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 16238  0057E6  84A3               	bsf	4003,2,c	;volatile
 16239                           
 16240                           ;usb_device_cdc.c: 795: return;
 16241  0057E8  0012               	return	
 16242  0057EA                     l10599:
 16243                           
 16244                           ; BSR set to: 0
 16245                           ;usb_device_cdc.c: 796: }
 16246                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 16247  0057EA  0E03               	movlw	3
 16248  0057EC  1820               	xorwf	_cdc_trf_state,w,c
 16249  0057EE  E101               	bnz	l10603
 16250                           
 16251                           ; BSR set to: 0
 16252                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 16253  0057F0  6A20               	clrf	_cdc_trf_state,c
 16254  0057F2                     l10603:
 16255                           
 16256                           ; BSR set to: 0
 16257                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 16258  0057F2  5020               	movf	_cdc_trf_state,w,c
 16259  0057F4  E102               	bnz	l10607
 16260                           
 16261                           ; BSR set to: 0
 16262                           ;usb_device_cdc.c: 810: {
 16263                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 16264  0057F6  84A3               	bsf	4003,2,c	;volatile
 16265                           
 16266                           ;usb_device_cdc.c: 812: return;
 16267  0057F8  0012               	return	
 16268  0057FA                     l10607:
 16269                           
 16270                           ; BSR set to: 0
 16271                           ;usb_device_cdc.c: 813: }
 16272                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 16273  0057FA  0E02               	movlw	2
 16274  0057FC  1820               	xorwf	_cdc_trf_state,w,c
 16275  0057FE  E110               	bnz	l10613
 16276                           
 16277                           ; BSR set to: 0
 16278                           ;usb_device_cdc.c: 819: {
 16279                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 16280  005800  0E01               	movlw	1
 16281  005802  6FC8               	movwf	USBTransferOnePacket@dir& (0+255),b
 16282  005804  0E00               	movlw	0
 16283  005806  6FC9               	movwf	USBTransferOnePacket@data& (0+255),b
 16284  005808  6FCA               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 16285  00580A  6FCB               	movwf	USBTransferOnePacket@len& (0+255),b
 16286  00580C  0E02               	movlw	2
 16287  00580E  ECB3  F024         	call	_USBTransferOnePacket
 16288  005812  C0C8  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 16289  005816  C0C9  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 16290                           
 16291                           ; BSR set to: 0
 16292                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 16293  00581A  0E03               	movlw	3
 16294  00581C  6E20               	movwf	_cdc_trf_state,c
 16295                           
 16296                           ;usb_device_cdc.c: 823: }
 16297  00581E  D04E               	goto	l10657
 16298  005820                     l10613:
 16299                           
 16300                           ; BSR set to: 0
 16301                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 16302  005820  0420               	decf	_cdc_trf_state,w,c
 16303  005822  E14C               	bnz	l10657
 16304                           
 16305                           ; BSR set to: 0
 16306                           ;usb_device_cdc.c: 825: {
 16307                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 16308  005824  0E40               	movlw	64
 16309  005826  6592               	cpfsgt	_cdc_tx_len& (0+255),b
 16310  005828  D002               	goto	l1928
 16311                           
 16312                           ; BSR set to: 0
 16313                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 16314  00582A  6FD2               	movwf	CDCTxService@byte_to_send& (0+255),b
 16315  00582C  D002               	goto	l10619
 16316  00582E                     l1928:
 16317                           
 16318                           ; BSR set to: 0
 16319                           ;usb_device_cdc.c: 831: else
 16320                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 16321  00582E  C092  F0D2         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 16322  005832                     l10619:
 16323                           
 16324                           ; BSR set to: 0
 16325                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 16326  005832  51D2               	movf	CDCTxService@byte_to_send& (0+255),w,b
 16327  005834  5F92               	subwf	_cdc_tx_len& (0+255),f,b
 16328                           
 16329                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 16330  005836  0E00               	movlw	0
 16331  005838  6F70               	movwf	_pCDCDst& (0+255),b
 16332  00583A  0E05               	movlw	5
 16333  00583C  6F71               	movwf	(_pCDCDst+1)& (0+255),b
 16334                           
 16335                           ; BSR set to: 0
 16336                           ;usb_device_cdc.c: 841: i = byte_to_send;
 16337  00583E  C0D2  F0D1         	movff	CDCTxService@byte_to_send,CDCTxService@i
 16338                           
 16339                           ; BSR set to: 0
 16340                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 16341  005842  5190               	movf	_cdc_mem_type& (0+255),w,b
 16342  005844  E010               	bz	l10635
 16343  005846  D021               	goto	l10645
 16344  005848                     l10627:
 16345                           
 16346                           ; BSR set to: 0
 16347                           ;usb_device_cdc.c: 845: {
 16348                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 16349  005848  C073  FFD9         	movff	_pCDCSrc,fsr2l
 16350  00584C  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 16351  005850  C070  FFE1         	movff	_pCDCDst,fsr1l
 16352  005854  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 16353  005858  CFDF FFE7          	movff	indf2,indf1
 16354                           
 16355                           ; BSR set to: 0
 16356                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 16357  00585C  4B70               	infsnz	_pCDCDst& (0+255),f,b
 16358  00585E  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 16359                           
 16360                           ; BSR set to: 0
 16361                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 16362  005860  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 16363  005862  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 16364                           
 16365                           ; BSR set to: 0
 16366                           ;usb_device_cdc.c: 849: i--;
 16367  005864  07D1               	decf	CDCTxService@i& (0+255),f,b
 16368  005866                     l10635:
 16369                           
 16370                           ; BSR set to: 0
 16371  005866  51D1               	movf	CDCTxService@i& (0+255),w,b
 16372  005868  E012               	bz	l10647
 16373  00586A  D7EE               	goto	l10627
 16374  00586C                     l10637:
 16375                           
 16376                           ; BSR set to: 0
 16377                           ;usb_device_cdc.c: 855: {
 16378                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 16379  00586C  C073  FFD9         	movff	_pCDCSrc,fsr2l
 16380  005870  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 16381  005874  C070  FFE1         	movff	_pCDCDst,fsr1l
 16382  005878  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 16383  00587C  CFDF FFE7          	movff	indf2,indf1
 16384                           
 16385                           ; BSR set to: 0
 16386                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 16387  005880  4B70               	infsnz	_pCDCDst& (0+255),f,b
 16388  005882  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 16389                           
 16390                           ; BSR set to: 0
 16391                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 16392  005884  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 16393  005886  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 16394                           
 16395                           ; BSR set to: 0
 16396                           ;usb_device_cdc.c: 859: i--;
 16397  005888  07D1               	decf	CDCTxService@i& (0+255),f,b
 16398  00588A                     l10645:
 16399                           
 16400                           ; BSR set to: 0
 16401  00588A  51D1               	movf	CDCTxService@i& (0+255),w,b
 16402  00588C  E1EF               	bnz	l10637
 16403  00588E                     l10647:
 16404                           
 16405                           ; BSR set to: 0
 16406                           ;usb_device_cdc.c: 860: }
 16407                           ;usb_device_cdc.c: 861: }
 16408                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 16409  00588E  5192               	movf	_cdc_tx_len& (0+255),w,b
 16410  005890  E106               	bnz	l10655
 16411                           
 16412                           ; BSR set to: 0
 16413                           ;usb_device_cdc.c: 868: {
 16414                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 16415  005892  0E40               	movlw	64
 16416  005894  19D2               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 16417                           
 16418                           ; BSR set to: 0
 16419                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 16420  005896  0E02               	movlw	2
 16421  005898  A4D8               	btfss	status,2,c
 16422                           
 16423                           ; BSR set to: 0
 16424                           ;usb_device_cdc.c: 871: else
 16425                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 16426  00589A  0E03               	movlw	3
 16427  00589C  6E20               	movwf	_cdc_trf_state,c
 16428  00589E                     l10655:
 16429                           
 16430                           ; BSR set to: 0
 16431                           ;usb_device_cdc.c: 873: }
 16432                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 16433  00589E  0E01               	movlw	1
 16434  0058A0  6FC8               	movwf	USBTransferOnePacket@dir& (0+255),b
 16435  0058A2  0E00               	movlw	0
 16436  0058A4  6FC9               	movwf	USBTransferOnePacket@data& (0+255),b
 16437  0058A6  0E05               	movlw	5
 16438  0058A8  6FCA               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 16439  0058AA  C0D2  F0CB         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 16440  0058AE  0E02               	movlw	2
 16441  0058B0  ECB3  F024         	call	_USBTransferOnePacket
 16442  0058B4  C0C8  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 16443  0058B8  C0C9  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 16444  0058BC                     l10657:
 16445                           
 16446                           ; BSR set to: 0
 16447                           ;usb_device_cdc.c: 876: }
 16448                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 16449  0058BC  84A3               	bsf	4003,2,c	;volatile
 16450                           
 16451                           ; BSR set to: 0
 16452  0058BE  0012               	return		;funcret
 16453  0058C0                     __end_of_CDCTxService:
 16454                           	opt stack 0
 16455                           tblptru	equ	0xFF8
 16456                           tblptrh	equ	0xFF7
 16457                           tblptrl	equ	0xFF6
 16458                           tablat	equ	0xFF5
 16459                           prodl	equ	0xFF3
 16460                           intcon	equ	0xFF2
 16461                           postinc0	equ	0xFEE
 16462                           wreg	equ	0xFE8
 16463                           indf1	equ	0xFE7
 16464                           postdec1	equ	0xFE5
 16465                           fsr1h	equ	0xFE2
 16466                           fsr1l	equ	0xFE1
 16467                           indf2	equ	0xFDF
 16468                           postinc2	equ	0xFDE
 16469                           fsr2h	equ	0xFDA
 16470                           fsr2l	equ	0xFD9
 16471                           status	equ	0xFD8
 16472                           
 16473 ;; *************** function _USBTransferOnePacket *****************
 16474 ;; Defined at:
 16475 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 16476 ;; Parameters:    Size  Location     Type
 16477 ;;  ep              1    wreg     unsigned char 
 16478 ;;  dir             1    0[BANK0 ] unsigned char 
 16479 ;;  data            2    1[BANK0 ] PTR unsigned char 
 16480 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 16481 ;;  len             1    3[BANK0 ] unsigned char 
 16482 ;; Auto vars:     Size  Location     Type
 16483 ;;  ep              1    4[BANK0 ] unsigned char 
 16484 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 16485 ;;		 -> BDT(48), NULL(0), 
 16486 ;; Return value:  Size  Location     Type
 16487 ;;                  2    0[BANK0 ] PTR void 
 16488 ;; Registers used:
 16489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16490 ;; Tracked objects:
 16491 ;;		On entry : F/0
 16492 ;;		On exit  : F/0
 16493 ;;		Unchanged: 0/0
 16494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16495 ;;      Params:         0       4       0       0       0       0       0       0       0
 16496 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16497 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16498 ;;      Totals:         0       7       0       0       0       0       0       0       0
 16499 ;;Total ram usage:        7 bytes
 16500 ;; Hardware stack levels used:    1
 16501 ;; Hardware stack levels required when called:   11
 16502 ;; This function calls:
 16503 ;;		Nothing
 16504 ;; This function is called by:
 16505 ;;		_getsUSBUSART
 16506 ;;		_CDCTxService
 16507 ;; This function uses a non-reentrant model
 16508 ;;
 16509                           
 16510                           	psect	text68
 16511  004966                     __ptext68:
 16512                           	opt stack 0
 16513  004966                     _USBTransferOnePacket:
 16514                           	opt stack 16
 16515                           
 16516                           ; BSR set to: 0
 16517                           ;incstack = 0
 16518                           ;USBTransferOnePacket@ep stored from wreg
 16519  004966  6FCC               	movwf	USBTransferOnePacket@ep& (0+255),b
 16520                           
 16521                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 16522                           ;usb_device.c: 762: if(dir != 0)
 16523  004968  0100               	movlb	0	; () banked
 16524  00496A  51C8               	movf	USBTransferOnePacket@dir& (0+255),w,b
 16525  00496C  E005               	bz	l10097
 16526                           
 16527                           ; BSR set to: 0
 16528                           ;usb_device.c: 763: {
 16529                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 16530  00496E  51CC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16531  004970  0D02               	mullw	2
 16532  004972  50F3               	movf	prodl,w,c
 16533  004974  0F0F               	addlw	low _pBDTEntryIn
 16534  004976  D004               	goto	L55
 16535  004978                     l10097:
 16536                           
 16537                           ; BSR set to: 0
 16538                           ;usb_device.c: 767: else
 16539                           ;usb_device.c: 768: {
 16540                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 16541  004978  51CC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16542  00497A  0D02               	mullw	2
 16543  00497C  50F3               	movf	prodl,w,c
 16544  00497E  0F60               	addlw	low _pBDTEntryOut
 16545  004980                     L55:
 16546  004980  6ED9               	movwf	fsr2l,c
 16547  004982  6ADA               	clrf	fsr2h,c
 16548  004984  CFDE F0CD          	movff	postinc2,USBTransferOnePacket@handle
 16549  004988  CFDD F0CE          	movff	postdec2,USBTransferOnePacket@handle+1
 16550                           
 16551                           ; BSR set to: 0
 16552                           ;usb_device.c: 771: }
 16553                           ;usb_device.c: 775: if(handle == 0)
 16554  00498C  51CD               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16555  00498E  11CE               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16556  004990  E103               	bnz	l10103
 16557                           
 16558                           ; BSR set to: 0
 16559                           ;usb_device.c: 776: {
 16560                           ;usb_device.c: 777: return 0;
 16561  004992  6BC8               	clrf	?_USBTransferOnePacket& (0+255),b
 16562  004994  6BC9               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
 16563  004996  0012               	return	
 16564  004998                     l10103:
 16565                           
 16566                           ; BSR set to: 0
 16567                           ;usb_device.c: 778: }
 16568                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 16569  004998  EE20 F002          	lfsr	2,2
 16570  00499C  51CD               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16571  00499E  26D9               	addwf	fsr2l,f,c
 16572  0049A0  51CE               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16573  0049A2  22DA               	addwfc	fsr2h,f,c
 16574  0049A4  C0C9  FFDE         	movff	USBTransferOnePacket@data,postinc2
 16575  0049A8  C0CA  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 16576                           
 16577                           ;usb_device.c: 781: handle->CNT = len;
 16578  0049AC  EE20 F001          	lfsr	2,1
 16579  0049B0  51CD               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16580  0049B2  26D9               	addwf	fsr2l,f,c
 16581  0049B4  51CE               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16582  0049B6  22DA               	addwfc	fsr2h,f,c
 16583  0049B8  C0CB  FFDF         	movff	USBTransferOnePacket@len,indf2
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 16587  0049BC  C0CD  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16588  0049C0  C0CE  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16589  0049C4  0E40               	movlw	64
 16590  0049C6  16DF               	andwf	indf2,f,c
 16591                           
 16592                           ; BSR set to: 0
 16593                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 16594  0049C8  C0CD  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16595  0049CC  C0CE  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16596  0049D0  0E00               	movlw	0
 16597  0049D2  86DB               	bsf	plusw2,3,c
 16598                           
 16599                           ; BSR set to: 0
 16600                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 16601  0049D4  C0CD  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16602  0049D8  C0CE  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16603  0049DC  8EDB               	bsf	plusw2,7,c
 16604                           
 16605                           ; BSR set to: 0
 16606                           ;usb_device.c: 787: if(dir != 0)
 16607  0049DE  51C8               	movf	USBTransferOnePacket@dir& (0+255),w,b
 16608  0049E0  E005               	bz	l10115
 16609                           
 16610                           ; BSR set to: 0
 16611                           ;usb_device.c: 788: {
 16612                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 16613  0049E2  51CC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16614  0049E4  0D02               	mullw	2
 16615  0049E6  50F3               	movf	prodl,w,c
 16616  0049E8  0F0F               	addlw	low _pBDTEntryIn
 16617  0049EA  D004               	goto	L56
 16618  0049EC                     l10115:
 16619                           
 16620                           ; BSR set to: 0
 16621                           ;usb_device.c: 792: else
 16622                           ;usb_device.c: 793: {
 16623                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 16624  0049EC  51CC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16625  0049EE  0D02               	mullw	2
 16626  0049F0  50F3               	movf	prodl,w,c
 16627  0049F2  0F60               	addlw	low _pBDTEntryOut
 16628  0049F4                     L56:
 16629  0049F4  6ED9               	movwf	fsr2l,c
 16630  0049F6  6ADA               	clrf	fsr2h,c
 16631  0049F8  0E04               	movlw	4
 16632  0049FA  1ADF               	xorwf	indf2,f,c
 16633                           
 16634                           ; BSR set to: 0
 16635                           ;usb_device.c: 796: }
 16636                           ;usb_device.c: 797: return (void*)handle;
 16637  0049FC  C0CD  F0C8         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 16638  004A00  C0CE  F0C9         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 16639                           
 16640                           ; BSR set to: 0
 16641  004A04  0C04               	retlw	4	;funcret
 16642  004A06                     __end_of_USBTransferOnePacket:
 16643                           	opt stack 0
 16644                           tblptru	equ	0xFF8
 16645                           tblptrh	equ	0xFF7
 16646                           tblptrl	equ	0xFF6
 16647                           tablat	equ	0xFF5
 16648                           prodl	equ	0xFF3
 16649                           intcon	equ	0xFF2
 16650                           postinc0	equ	0xFEE
 16651                           wreg	equ	0xFE8
 16652                           indf1	equ	0xFE7
 16653                           postdec1	equ	0xFE5
 16654                           fsr1h	equ	0xFE2
 16655                           fsr1l	equ	0xFE1
 16656                           indf2	equ	0xFDF
 16657                           postinc2	equ	0xFDE
 16658                           postdec2	equ	0xFDD
 16659                           plusw2	equ	0xFDB
 16660                           fsr2h	equ	0xFDA
 16661                           fsr2l	equ	0xFD9
 16662                           status	equ	0xFD8
 16663                           
 16664 ;; *************** function _USBDeviceInit *****************
 16665 ;; Defined at:
 16666 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 16667 ;; Parameters:    Size  Location     Type
 16668 ;;		None
 16669 ;; Auto vars:     Size  Location     Type
 16670 ;;  i               1    8[BANK0 ] unsigned char 
 16671 ;; Return value:  Size  Location     Type
 16672 ;;		None               void
 16673 ;; Registers used:
 16674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16675 ;; Tracked objects:
 16676 ;;		On entry : F/0
 16677 ;;		On exit  : F/0
 16678 ;;		Unchanged: 0/0
 16679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16680 ;;      Params:         0       0       0       0       0       0       0       0       0
 16681 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16682 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16683 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16684 ;;Total ram usage:        1 bytes
 16685 ;; Hardware stack levels used:    1
 16686 ;; Hardware stack levels required when called:   12
 16687 ;; This function calls:
 16688 ;;		_memset
 16689 ;; This function is called by:
 16690 ;;		_main
 16691 ;; This function uses a non-reentrant model
 16692 ;;
 16693                           
 16694                           	psect	text69
 16695  005098                     __ptext69:
 16696                           	opt stack 0
 16697  005098                     _USBDeviceInit:
 16698                           	opt stack 18
 16699                           
 16700                           ; BSR set to: 0
 16701                           ;usb_device.c: 239: uint8_t i;
 16702                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 16703                           
 16704                           ; BSR set to: 0
 16705                           ;incstack = 0
 16706  005098  94A3               	bcf	4003,2,c	;volatile
 16707                           
 16708                           ;usb_device.c: 244: {UEIR = 0;};
 16709  00509A  6A67               	clrf	3943,c	;volatile
 16710                           
 16711                           ;usb_device.c: 247: {UIR = 0;};
 16712  00509C  6A65               	clrf	3941,c	;volatile
 16713                           
 16714                           ;usb_device.c: 250: UEP0 = 0;
 16715  00509E  6A6A               	clrf	3946,c	;volatile
 16716                           
 16717                           ; BSR set to: 0
 16718                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 16719  0050A0  0E6B               	movlw	107
 16720  0050A2  6FC8               	movwf	memset@p1& (0+255),b
 16721  0050A4  0E0F               	movlw	15
 16722  0050A6  6FC9               	movwf	(memset@p1+1)& (0+255),b
 16723  0050A8  6BCB               	clrf	(memset@c+1)& (0+255),b
 16724  0050AA  6BCA               	clrf	memset@c& (0+255),b
 16725  0050AC  6BCD               	clrf	(memset@n+1)& (0+255),b
 16726  0050AE  0E02               	movlw	2
 16727  0050B0  6FCC               	movwf	memset@n& (0+255),b
 16728  0050B2  EC22  F01C         	call	_memset	;wreg free
 16729                           
 16730                           ; BSR set to: 0
 16731                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16732  0050B6  0E16               	movlw	22
 16733  0050B8  6E62               	movwf	3938,c	;volatile
 16734                           
 16735                           ; BSR set to: 0
 16736  0050BA  0E9F               	movlw	159
 16737  0050BC  6E66               	movwf	3942,c	;volatile
 16738                           
 16739                           ; BSR set to: 0
 16740  0050BE  0E7B               	movlw	123
 16741  0050C0  6E64               	movwf	3940,c	;volatile
 16742                           
 16743                           ; BSR set to: 0
 16744                           ;usb_device.c: 257: ;
 16745                           ;usb_device.c: 260: ;
 16746                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16747  0050C2  6BD0               	clrf	USBDeviceInit@i& (0+255),b
 16748  0050C4                     l12003:
 16749                           
 16750                           ; BSR set to: 0
 16751                           ;usb_device.c: 264: {
 16752                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 16753  0050C4  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16754  0050C6  0D04               	mullw	4
 16755  0050C8  0E00               	movlw	0
 16756  0050CA  24F3               	addwf	prodl,w,c
 16757  0050CC  6ED9               	movwf	fsr2l,c
 16758  0050CE  0E04               	movlw	4
 16759  0050D0  20F4               	addwfc	prodh,w,c
 16760  0050D2  6EDA               	movwf	fsr2h,c
 16761  0050D4  6ADE               	clrf	postinc2,c
 16762  0050D6  6ADE               	clrf	postinc2,c
 16763  0050D8  6ADE               	clrf	postinc2,c
 16764  0050DA  6ADD               	clrf	postdec2,c
 16765                           
 16766                           ; BSR set to: 0
 16767  0050DC  2BD0               	incf	USBDeviceInit@i& (0+255),f,b
 16768                           
 16769                           ; BSR set to: 0
 16770  0050DE  0E0B               	movlw	11
 16771  0050E0  65D0               	cpfsgt	USBDeviceInit@i& (0+255),b
 16772  0050E2  D7F0               	goto	l12003
 16773                           
 16774                           ; BSR set to: 0
 16775                           ;usb_device.c: 266: }
 16776                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 16777  0050E4  8C60               	bsf	3936,6,c	;volatile
 16778                           
 16779                           ;usb_device.c: 272: UADDR = 0x00;
 16780  0050E6  6A63               	clrf	3939,c	;volatile
 16781                           
 16782                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 16783  0050E8  9860               	bcf	3936,4,c	;volatile
 16784                           
 16785                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 16786  0050EA  9C60               	bcf	3936,6,c	;volatile
 16787                           
 16788                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 16789  0050EC  D005               	goto	l12017
 16790  0050EE                     l12009:
 16791                           
 16792                           ; BSR set to: 0
 16793                           ;usb_device.c: 282: {
 16794                           ;usb_device.c: 283: (UIR &= 0xF7);
 16795  0050EE  9665               	bcf	3941,3,c	;volatile
 16796                           
 16797                           ; BSR set to: 0
 16798                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 16799  0050F0  6A0C               	clrf	_inPipes+3,c	;volatile
 16800                           
 16801                           ; BSR set to: 0
 16802                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 16803  0050F2  6A04               	clrf	_outPipes+3,c	;volatile
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 16807  0050F4  6A05               	clrf	_outPipes+4,c	;volatile
 16808  0050F6  6A06               	clrf	_outPipes+5,c	;volatile
 16809  0050F8                     l12017:
 16810                           
 16811                           ; BSR set to: 0
 16812  0050F8  B665               	btfsc	3941,3,c	;volatile
 16813  0050FA  D7F9               	goto	l12009
 16814                           
 16815                           ; BSR set to: 0
 16816                           ;usb_device.c: 288: }
 16817                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 16818  0050FC  0E01               	movlw	1
 16819  0050FE  6F8B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16820                           
 16821                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 16822  005100  6F8C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16823                           
 16824                           ; BSR set to: 0
 16825                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 16826  005102  6B88               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16827                           
 16828                           ; BSR set to: 0
 16829                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 16830  005104  6B89               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16831                           
 16832                           ; BSR set to: 0
 16833                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 16834  005106  6B87               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 16838  005108  6BD0               	clrf	USBDeviceInit@i& (0+255),b
 16839  00510A                     l12033:
 16840                           
 16841                           ; BSR set to: 0
 16842                           ;usb_device.c: 302: {
 16843                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 16844  00510A  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16845  00510C  0D02               	mullw	2
 16846  00510E  50F3               	movf	prodl,w,c
 16847  005110  0F0F               	addlw	low _pBDTEntryIn
 16848  005112  6ED9               	movwf	fsr2l,c
 16849  005114  6ADA               	clrf	fsr2h,c
 16850  005116  6ADE               	clrf	postinc2,c
 16851  005118  6ADD               	clrf	postdec2,c
 16852                           
 16853                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 16854  00511A  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16855  00511C  0D02               	mullw	2
 16856  00511E  50F3               	movf	prodl,w,c
 16857  005120  0F60               	addlw	low _pBDTEntryOut
 16858  005122  6ED9               	movwf	fsr2l,c
 16859  005124  6ADA               	clrf	fsr2h,c
 16860  005126  6ADE               	clrf	postinc2,c
 16861  005128  6ADD               	clrf	postdec2,c
 16862                           
 16863                           ; BSR set to: 0
 16864                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 16865  00512A  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16866  00512C  0F6A               	addlw	low _ep_data_in
 16867  00512E  6ED9               	movwf	fsr2l,c
 16868  005130  6ADA               	clrf	fsr2h,c
 16869  005132  6ADF               	clrf	indf2,c
 16870                           
 16871                           ; BSR set to: 0
 16872                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 16873  005134  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16874  005136  0F6D               	addlw	low _ep_data_out
 16875  005138  6ED9               	movwf	fsr2l,c
 16876  00513A  6ADA               	clrf	fsr2h,c
 16877  00513C  6ADF               	clrf	indf2,c
 16878                           
 16879                           ; BSR set to: 0
 16880  00513E  2BD0               	incf	USBDeviceInit@i& (0+255),f,b
 16881                           
 16882                           ; BSR set to: 0
 16883  005140  0E02               	movlw	2
 16884  005142  65D0               	cpfsgt	USBDeviceInit@i& (0+255),b
 16885  005144  D7E2               	goto	l12033
 16886                           
 16887                           ; BSR set to: 0
 16888                           ;usb_device.c: 307: }
 16889                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16890  005146  0E08               	movlw	8
 16891  005148  6E0F               	movwf	_pBDTEntryIn,c
 16892  00514A  0E04               	movlw	4
 16893  00514C  6E10               	movwf	_pBDTEntryIn+1,c
 16894                           
 16895                           ; BSR set to: 0
 16896                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 16897  00514E  0E16               	movlw	22
 16898  005150  6E6A               	movwf	3946,c	;volatile
 16899                           
 16900                           ; BSR set to: 0
 16901                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16902  005152  0E04               	movlw	4
 16903  005154  0104               	movlb	4	; () banked
 16904  005156  6F03               	movwf	3,b	;volatile
 16905  005158  0E30               	movlw	48
 16906  00515A  6F02               	movwf	2,b	;volatile
 16907                           
 16908                           ; BSR set to: 4
 16909                           ;usb_device.c: 315: BDT[0].CNT = 8;
 16910  00515C  0E08               	movlw	8
 16911  00515E  6F01               	movwf	1,b	;volatile
 16912                           
 16913                           ; BSR set to: 4
 16914                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 16915  005160  0E04               	movlw	4
 16916  005162  6F00               	movwf	0,b	;volatile
 16917                           
 16918                           ; BSR set to: 4
 16919                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 16920  005164  8F00               	bsf	0,7,b	;volatile
 16921                           
 16922                           ; BSR set to: 4
 16923                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 16924  005166  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 16925                           
 16926                           ; BSR set to: 4
 16927                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 16928  005168  0100               	movlb	0	; () banked
 16929  00516A  6B8A               	clrf	_USBDeviceState& (0+255),b	;volatile
 16930                           
 16931                           ; BSR set to: 0
 16932  00516C  0012               	return		;funcret
 16933  00516E                     __end_of_USBDeviceInit:
 16934                           	opt stack 0
 16935                           tblptru	equ	0xFF8
 16936                           tblptrh	equ	0xFF7
 16937                           tblptrl	equ	0xFF6
 16938                           tablat	equ	0xFF5
 16939                           prodh	equ	0xFF4
 16940                           prodl	equ	0xFF3
 16941                           intcon	equ	0xFF2
 16942                           postinc0	equ	0xFEE
 16943                           wreg	equ	0xFE8
 16944                           indf1	equ	0xFE7
 16945                           postdec1	equ	0xFE5
 16946                           fsr1h	equ	0xFE2
 16947                           fsr1l	equ	0xFE1
 16948                           indf2	equ	0xFDF
 16949                           postinc2	equ	0xFDE
 16950                           postdec2	equ	0xFDD
 16951                           plusw2	equ	0xFDB
 16952                           fsr2h	equ	0xFDA
 16953                           fsr2l	equ	0xFD9
 16954                           status	equ	0xFD8
 16955                           
 16956 ;; *************** function _memset *****************
 16957 ;; Defined at:
 16958 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16959 ;; Parameters:    Size  Location     Type
 16960 ;;  p1              2    0[BANK0 ] PTR void 
 16961 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16962 ;;  c               2    2[BANK0 ] int 
 16963 ;;  n               2    4[BANK0 ] unsigned int 
 16964 ;; Auto vars:     Size  Location     Type
 16965 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16966 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16967 ;; Return value:  Size  Location     Type
 16968 ;;                  2    0[BANK0 ] PTR void 
 16969 ;; Registers used:
 16970 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16971 ;; Tracked objects:
 16972 ;;		On entry : F/0
 16973 ;;		On exit  : F/0
 16974 ;;		Unchanged: 0/0
 16975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16976 ;;      Params:         0       6       0       0       0       0       0       0       0
 16977 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16978 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16979 ;;      Totals:         0       8       0       0       0       0       0       0       0
 16980 ;;Total ram usage:        8 bytes
 16981 ;; Hardware stack levels used:    1
 16982 ;; Hardware stack levels required when called:   11
 16983 ;; This function calls:
 16984 ;;		Nothing
 16985 ;; This function is called by:
 16986 ;;		_USBDeviceInit
 16987 ;; This function uses a non-reentrant model
 16988 ;;
 16989                           
 16990                           	psect	text70
 16991  003844                     __ptext70:
 16992                           	opt stack 0
 16993  003844                     _memset:
 16994                           	opt stack 18
 16995                           
 16996                           ; BSR set to: 0
 16997                           
 16998                           ; BSR set to: 0
 16999                           ;incstack = 0
 17000  003844  C0C8  F0CE         	movff	memset@p1,memset@p
 17001  003848  C0C9  F0CF         	movff	memset@p1+1,memset@p+1
 17002  00384C  D008               	goto	l11969
 17003  00384E                     l11965:
 17004                           
 17005                           ; BSR set to: 0
 17006  00384E  C0CE  FFD9         	movff	memset@p,fsr2l
 17007  003852  C0CF  FFDA         	movff	memset@p+1,fsr2h
 17008  003856  C0CA  FFDF         	movff	memset@c,indf2
 17009                           
 17010                           ; BSR set to: 0
 17011  00385A  4BCE               	infsnz	memset@p& (0+255),f,b
 17012  00385C  2BCF               	incf	(memset@p+1)& (0+255),f,b
 17013  00385E                     l11969:
 17014                           
 17015                           ; BSR set to: 0
 17016  00385E  07CC               	decf	memset@n& (0+255),f,b
 17017  003860  A0D8               	btfss	status,0,c
 17018  003862  07CD               	decf	(memset@n+1)& (0+255),f,b
 17019  003864  29CC               	incf	memset@n& (0+255),w,b
 17020  003866  E1F3               	bnz	l11965
 17021  003868  29CD               	incf	(memset@n+1)& (0+255),w,b
 17022  00386A  E1F1               	bnz	l11965
 17023                           
 17024                           ; BSR set to: 0
 17025  00386C  0012               	return		;funcret
 17026  00386E                     __end_of_memset:
 17027                           	opt stack 0
 17028                           tblptru	equ	0xFF8
 17029                           tblptrh	equ	0xFF7
 17030                           tblptrl	equ	0xFF6
 17031                           tablat	equ	0xFF5
 17032                           prodh	equ	0xFF4
 17033                           prodl	equ	0xFF3
 17034                           intcon	equ	0xFF2
 17035                           postinc0	equ	0xFEE
 17036                           wreg	equ	0xFE8
 17037                           indf1	equ	0xFE7
 17038                           postdec1	equ	0xFE5
 17039                           fsr1h	equ	0xFE2
 17040                           fsr1l	equ	0xFE1
 17041                           indf2	equ	0xFDF
 17042                           postinc2	equ	0xFDE
 17043                           postdec2	equ	0xFDD
 17044                           plusw2	equ	0xFDB
 17045                           fsr2h	equ	0xFDA
 17046                           fsr2l	equ	0xFD9
 17047                           status	equ	0xFD8
 17048                           
 17049 ;; *************** function _USBDeviceAttach *****************
 17050 ;; Defined at:
 17051 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 17052 ;; Parameters:    Size  Location     Type
 17053 ;;		None
 17054 ;; Auto vars:     Size  Location     Type
 17055 ;;		None
 17056 ;; Return value:  Size  Location     Type
 17057 ;;		None               void
 17058 ;; Registers used:
 17059 ;;		wreg, status,2
 17060 ;; Tracked objects:
 17061 ;;		On entry : F/0
 17062 ;;		On exit  : F/0
 17063 ;;		Unchanged: 0/0
 17064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17065 ;;      Params:         0       0       0       0       0       0       0       0       0
 17066 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17067 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17068 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17069 ;;Total ram usage:        0 bytes
 17070 ;; Hardware stack levels used:    1
 17071 ;; Hardware stack levels required when called:   11
 17072 ;; This function calls:
 17073 ;;		Nothing
 17074 ;; This function is called by:
 17075 ;;		_main
 17076 ;; This function uses a non-reentrant model
 17077 ;;
 17078                           
 17079                           	psect	text71
 17080  00391C                     __ptext71:
 17081                           	opt stack 0
 17082  00391C                     _USBDeviceAttach:
 17083                           	opt stack 19
 17084                           
 17085                           ; BSR set to: 0
 17086                           ;usb_device.c: 1050: {
 17087                           ;usb_device.c: 1051: if(1 == 1)
 17088                           
 17089                           ; BSR set to: 0
 17090                           ;incstack = 0
 17091  00391C  518A               	movf	_USBDeviceState& (0+255),w,b	;volatile
 17092  00391E  A4D8               	btfss	status,2,c
 17093  003920  0012               	return	
 17094                           
 17095                           ; BSR set to: 0
 17096                           ;usb_device.c: 1052: {
 17097                           ;usb_device.c: 1054: UCON = 0;
 17098  003922  6A60               	clrf	3936,c	;volatile
 17099                           
 17100                           ;usb_device.c: 1057: UIE = 0;
 17101  003924  6A64               	clrf	3940,c	;volatile
 17102                           
 17103                           ; BSR set to: 0
 17104                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 17105  003926  0E16               	movlw	22
 17106  003928  6E62               	movwf	3938,c	;volatile
 17107  00392A  0E9F               	movlw	159
 17108  00392C  6E66               	movwf	3942,c	;volatile
 17109  00392E  0E7B               	movlw	123
 17110  003930  6E64               	movwf	3940,c	;volatile
 17111                           
 17112                           ; BSR set to: 0
 17113                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 17114  003932  8ED0               	bsf	4048,7,c	;volatile
 17115                           
 17116                           ; BSR set to: 0
 17117  003934  84A5               	bsf	4005,2,c	;volatile
 17118                           
 17119                           ; BSR set to: 0
 17120  003936  84A3               	bsf	4003,2,c	;volatile
 17121                           
 17122                           ; BSR set to: 0
 17123  003938  8EF2               	bsf	intcon,7,c	;volatile
 17124                           
 17125                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 17126  00393A  D001               	goto	l1624
 17127  00393C                     l1625:
 17128                           
 17129                           ; BSR set to: 0
 17130  00393C  8660               	bsf	3936,3,c	;volatile
 17131  00393E                     l1624:
 17132                           
 17133                           ; BSR set to: 0
 17134  00393E  A660               	btfss	3936,3,c	;volatile
 17135  003940  D7FD               	goto	l1625
 17136                           
 17137                           ; BSR set to: 0
 17138                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 17139  003942  0E01               	movlw	1
 17140  003944  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 17141                           
 17142                           ; BSR set to: 0
 17143  003946  0C01               	retlw	1	;funcret
 17144  003948                     __end_of_USBDeviceAttach:
 17145                           	opt stack 0
 17146                           tblptru	equ	0xFF8
 17147                           tblptrh	equ	0xFF7
 17148                           tblptrl	equ	0xFF6
 17149                           tablat	equ	0xFF5
 17150                           prodh	equ	0xFF4
 17151                           prodl	equ	0xFF3
 17152                           intcon	equ	0xFF2
 17153                           postinc0	equ	0xFEE
 17154                           wreg	equ	0xFE8
 17155                           indf1	equ	0xFE7
 17156                           postdec1	equ	0xFE5
 17157                           fsr1h	equ	0xFE2
 17158                           fsr1l	equ	0xFE1
 17159                           indf2	equ	0xFDF
 17160                           postinc2	equ	0xFDE
 17161                           postdec2	equ	0xFDD
 17162                           plusw2	equ	0xFDB
 17163                           fsr2h	equ	0xFDA
 17164                           fsr2l	equ	0xFD9
 17165                           status	equ	0xFD8
 17166                           
 17167 ;; *************** function _SYSTEM_Initialize *****************
 17168 ;; Defined at:
 17169 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 17170 ;; Parameters:    Size  Location     Type
 17171 ;;		None
 17172 ;; Auto vars:     Size  Location     Type
 17173 ;;		None
 17174 ;; Return value:  Size  Location     Type
 17175 ;;		None               void
 17176 ;; Registers used:
 17177 ;;		wreg, status,2, status,0, cstack
 17178 ;; Tracked objects:
 17179 ;;		On entry : 0/0
 17180 ;;		On exit  : 0/0
 17181 ;;		Unchanged: 0/0
 17182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17183 ;;      Params:         0       0       0       0       0       0       0       0       0
 17184 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17185 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17186 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17187 ;;Total ram usage:        0 bytes
 17188 ;; Hardware stack levels used:    1
 17189 ;; Hardware stack levels required when called:   13
 17190 ;; This function calls:
 17191 ;;		_ADC_Initialize
 17192 ;;		_CMP1_Initialize
 17193 ;;		_EUSART_Initialize
 17194 ;;		_OSCILLATOR_Initialize
 17195 ;;		_PIN_MANAGER_Initialize
 17196 ;;		_SPI_Initialize
 17197 ;;		_TMR1_Initialize
 17198 ;;		_TMR2_Initialize
 17199 ;; This function is called by:
 17200 ;;		_main
 17201 ;; This function uses a non-reentrant model
 17202 ;;
 17203                           
 17204                           	psect	text72
 17205  0036A6                     __ptext72:
 17206                           	opt stack 0
 17207  0036A6                     _SYSTEM_Initialize:
 17208                           	opt stack 17
 17209                           
 17210                           ;mcc.c: 95: OSCILLATOR_Initialize();
 17211                           
 17212                           ; BSR set to: 0
 17213                           ;incstack = 0
 17214  0036A6  ECF3  F01A         	call	_OSCILLATOR_Initialize	;wreg free
 17215                           
 17216                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 17217  0036AA  ECF3  F01D         	call	_PIN_MANAGER_Initialize	;wreg free
 17218                           
 17219                           ; BSR set to: 15
 17220                           ;mcc.c: 97: SPI_Initialize();
 17221  0036AE  EC91  F01A         	call	_SPI_Initialize	;wreg free
 17222                           
 17223                           ; BSR set to: 15
 17224                           ;mcc.c: 98: TMR1_Initialize();
 17225  0036B2  EC78  F01C         	call	_TMR1_Initialize	;wreg free
 17226                           
 17227                           ; BSR set to: 0
 17228                           ;mcc.c: 99: TMR2_Initialize();
 17229  0036B6  EC9F  F01A         	call	_TMR2_Initialize	;wreg free
 17230                           
 17231                           ; BSR set to: 0
 17232                           ;mcc.c: 100: EUSART_Initialize();
 17233  0036BA  EC62  F01C         	call	_EUSART_Initialize	;wreg free
 17234                           
 17235                           ;mcc.c: 101: ADC_Initialize();
 17236  0036BE  ECE8  F01A         	call	_ADC_Initialize	;wreg free
 17237                           
 17238                           ;mcc.c: 102: CMP1_Initialize();
 17239  0036C2  EFAF  F01A         	goto	_CMP1_Initialize	;wreg free
 17240  0036C6                     __end_of_SYSTEM_Initialize:
 17241                           	opt stack 0
 17242                           tblptru	equ	0xFF8
 17243                           tblptrh	equ	0xFF7
 17244                           tblptrl	equ	0xFF6
 17245                           tablat	equ	0xFF5
 17246                           prodh	equ	0xFF4
 17247                           prodl	equ	0xFF3
 17248                           intcon	equ	0xFF2
 17249                           postinc0	equ	0xFEE
 17250                           wreg	equ	0xFE8
 17251                           indf1	equ	0xFE7
 17252                           postdec1	equ	0xFE5
 17253                           fsr1h	equ	0xFE2
 17254                           fsr1l	equ	0xFE1
 17255                           indf2	equ	0xFDF
 17256                           postinc2	equ	0xFDE
 17257                           postdec2	equ	0xFDD
 17258                           plusw2	equ	0xFDB
 17259                           fsr2h	equ	0xFDA
 17260                           fsr2l	equ	0xFD9
 17261                           status	equ	0xFD8
 17262                           
 17263 ;; *************** function _TMR2_Initialize *****************
 17264 ;; Defined at:
 17265 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 17266 ;; Parameters:    Size  Location     Type
 17267 ;;		None
 17268 ;; Auto vars:     Size  Location     Type
 17269 ;;		None
 17270 ;; Return value:  Size  Location     Type
 17271 ;;		None               void
 17272 ;; Registers used:
 17273 ;;		wreg, status,2, cstack
 17274 ;; Tracked objects:
 17275 ;;		On entry : F/0
 17276 ;;		On exit  : F/0
 17277 ;;		Unchanged: F/0
 17278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17279 ;;      Params:         0       0       0       0       0       0       0       0       0
 17280 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17281 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17282 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17283 ;;Total ram usage:        0 bytes
 17284 ;; Hardware stack levels used:    1
 17285 ;; Hardware stack levels required when called:   12
 17286 ;; This function calls:
 17287 ;;		_TMR2_StartTimer
 17288 ;; This function is called by:
 17289 ;;		_SYSTEM_Initialize
 17290 ;; This function uses a non-reentrant model
 17291 ;;
 17292                           
 17293                           	psect	text73
 17294  00353E                     __ptext73:
 17295                           	opt stack 0
 17296  00353E                     _TMR2_Initialize:
 17297                           	opt stack 17
 17298                           
 17299                           ; BSR set to: 0
 17300                           ;tmr2.c: 62: T2CON = 0x7A;
 17301                           
 17302                           ;incstack = 0
 17303  00353E  0E7A               	movlw	122
 17304  003540  6EBA               	movwf	4026,c	;volatile
 17305                           
 17306                           ;tmr2.c: 65: PR2 = 0x9B;
 17307  003542  0E9B               	movlw	155
 17308  003544  6EBB               	movwf	4027,c	;volatile
 17309                           
 17310                           ; BSR set to: 0
 17311                           ;tmr2.c: 68: TMR2 = 0x00;
 17312  003546  6ABC               	clrf	4028,c	;volatile
 17313                           
 17314                           ; BSR set to: 0
 17315                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 17316  003548  929E               	bcf	3998,1,c	;volatile
 17317                           
 17318                           ; BSR set to: 0
 17319                           ;tmr2.c: 74: TMR2_StartTimer();
 17320  00354A  EF56  F01A         	goto	_TMR2_StartTimer	;wreg free
 17321  00354E                     __end_of_TMR2_Initialize:
 17322                           	opt stack 0
 17323                           tblptru	equ	0xFF8
 17324                           tblptrh	equ	0xFF7
 17325                           tblptrl	equ	0xFF6
 17326                           tablat	equ	0xFF5
 17327                           prodh	equ	0xFF4
 17328                           prodl	equ	0xFF3
 17329                           intcon	equ	0xFF2
 17330                           postinc0	equ	0xFEE
 17331                           wreg	equ	0xFE8
 17332                           indf1	equ	0xFE7
 17333                           postdec1	equ	0xFE5
 17334                           fsr1h	equ	0xFE2
 17335                           fsr1l	equ	0xFE1
 17336                           indf2	equ	0xFDF
 17337                           postinc2	equ	0xFDE
 17338                           postdec2	equ	0xFDD
 17339                           plusw2	equ	0xFDB
 17340                           fsr2h	equ	0xFDA
 17341                           fsr2l	equ	0xFD9
 17342                           status	equ	0xFD8
 17343                           
 17344 ;; *************** function _TMR2_StartTimer *****************
 17345 ;; Defined at:
 17346 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 17347 ;; Parameters:    Size  Location     Type
 17348 ;;		None
 17349 ;; Auto vars:     Size  Location     Type
 17350 ;;		None
 17351 ;; Return value:  Size  Location     Type
 17352 ;;		None               void
 17353 ;; Registers used:
 17354 ;;		None
 17355 ;; Tracked objects:
 17356 ;;		On entry : F/0
 17357 ;;		On exit  : F/0
 17358 ;;		Unchanged: F/0
 17359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17360 ;;      Params:         0       0       0       0       0       0       0       0       0
 17361 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17362 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17363 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17364 ;;Total ram usage:        0 bytes
 17365 ;; Hardware stack levels used:    1
 17366 ;; Hardware stack levels required when called:   11
 17367 ;; This function calls:
 17368 ;;		Nothing
 17369 ;; This function is called by:
 17370 ;;		_TMR2_Initialize
 17371 ;; This function uses a non-reentrant model
 17372 ;;
 17373                           
 17374                           	psect	text74
 17375  0034AC                     __ptext74:
 17376                           	opt stack 0
 17377  0034AC                     _TMR2_StartTimer:
 17378                           	opt stack 17
 17379                           
 17380                           ; BSR set to: 0
 17381                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 17382                           
 17383                           ; BSR set to: 0
 17384                           ;incstack = 0
 17385  0034AC  84BA               	bsf	4026,2,c	;volatile
 17386                           
 17387                           ; BSR set to: 0
 17388  0034AE  0012               	return		;funcret
 17389  0034B0                     __end_of_TMR2_StartTimer:
 17390                           	opt stack 0
 17391                           tblptru	equ	0xFF8
 17392                           tblptrh	equ	0xFF7
 17393                           tblptrl	equ	0xFF6
 17394                           tablat	equ	0xFF5
 17395                           prodh	equ	0xFF4
 17396                           prodl	equ	0xFF3
 17397                           intcon	equ	0xFF2
 17398                           postinc0	equ	0xFEE
 17399                           wreg	equ	0xFE8
 17400                           indf1	equ	0xFE7
 17401                           postdec1	equ	0xFE5
 17402                           fsr1h	equ	0xFE2
 17403                           fsr1l	equ	0xFE1
 17404                           indf2	equ	0xFDF
 17405                           postinc2	equ	0xFDE
 17406                           postdec2	equ	0xFDD
 17407                           plusw2	equ	0xFDB
 17408                           fsr2h	equ	0xFDA
 17409                           fsr2l	equ	0xFD9
 17410                           status	equ	0xFD8
 17411                           
 17412 ;; *************** function _TMR1_Initialize *****************
 17413 ;; Defined at:
 17414 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 17415 ;; Parameters:    Size  Location     Type
 17416 ;;		None
 17417 ;; Auto vars:     Size  Location     Type
 17418 ;;		None
 17419 ;; Return value:  Size  Location     Type
 17420 ;;		None               void
 17421 ;; Registers used:
 17422 ;;		wreg, status,2, status,0, cstack
 17423 ;; Tracked objects:
 17424 ;;		On entry : F/F
 17425 ;;		On exit  : F/0
 17426 ;;		Unchanged: 0/0
 17427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17428 ;;      Params:         0       0       0       0       0       0       0       0       0
 17429 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17430 ;;      Temps:          0       2       0       0       0       0       0       0       0
 17431 ;;      Totals:         0       2       0       0       0       0       0       0       0
 17432 ;;Total ram usage:        2 bytes
 17433 ;; Hardware stack levels used:    1
 17434 ;; Hardware stack levels required when called:   12
 17435 ;; This function calls:
 17436 ;;		_TMR1_StartTimer
 17437 ;; This function is called by:
 17438 ;;		_SYSTEM_Initialize
 17439 ;; This function uses a non-reentrant model
 17440 ;;
 17441                           
 17442                           	psect	text75
 17443  0038F0                     __ptext75:
 17444                           	opt stack 0
 17445  0038F0                     _TMR1_Initialize:
 17446                           	opt stack 17
 17447                           
 17448                           ; BSR set to: 15
 17449                           ;tmr1.c: 68: T1CON = 0x00;
 17450                           
 17451                           ; BSR set to: 0
 17452                           ;incstack = 0
 17453  0038F0  6ACD               	clrf	4045,c	;volatile
 17454                           
 17455                           ;tmr1.c: 71: T1GCON = 0x00;
 17456  0038F2  6ACC               	clrf	4044,c	;volatile
 17457                           
 17458                           ; BSR set to: 15
 17459                           ;tmr1.c: 74: TMR1H = 0xD0;
 17460  0038F4  0ED0               	movlw	208
 17461  0038F6  6ECF               	movwf	4047,c	;volatile
 17462                           
 17463                           ;tmr1.c: 77: TMR1L = 0x20;
 17464  0038F8  0E20               	movlw	32
 17465  0038FA  6ECE               	movwf	4046,c	;volatile
 17466                           
 17467                           ; BSR set to: 15
 17468                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 17469  0038FC  50CE               	movf	4046,w,c	;volatile
 17470  0038FE  CFCF F0C8          	movff	4047,??_TMR1_Initialize	;volatile
 17471  003902  0100               	movlb	0	; () banked
 17472  003904  6BC9               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 17473  003906  C0C8  F0C9         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17474  00390A  6BC8               	clrf	??_TMR1_Initialize& (0+255),b
 17475  00390C  11C8               	iorwf	??_TMR1_Initialize& (0+255),w,b
 17476  00390E  6F80               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17477  003910  51C9               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 17478  003912  6F81               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17479                           
 17480                           ; BSR set to: 0
 17481                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 17482  003914  909E               	bcf	3998,0,c	;volatile
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 17486  003916  809D               	bsf	3997,0,c	;volatile
 17487                           
 17488                           ; BSR set to: 0
 17489                           ;tmr1.c: 89: TMR1_StartTimer();
 17490  003918  EF54  F01A         	goto	_TMR1_StartTimer	;wreg free
 17491  00391C                     __end_of_TMR1_Initialize:
 17492                           	opt stack 0
 17493                           tblptru	equ	0xFF8
 17494                           tblptrh	equ	0xFF7
 17495                           tblptrl	equ	0xFF6
 17496                           tablat	equ	0xFF5
 17497                           prodh	equ	0xFF4
 17498                           prodl	equ	0xFF3
 17499                           intcon	equ	0xFF2
 17500                           postinc0	equ	0xFEE
 17501                           wreg	equ	0xFE8
 17502                           indf1	equ	0xFE7
 17503                           postdec1	equ	0xFE5
 17504                           fsr1h	equ	0xFE2
 17505                           fsr1l	equ	0xFE1
 17506                           indf2	equ	0xFDF
 17507                           postinc2	equ	0xFDE
 17508                           postdec2	equ	0xFDD
 17509                           plusw2	equ	0xFDB
 17510                           fsr2h	equ	0xFDA
 17511                           fsr2l	equ	0xFD9
 17512                           status	equ	0xFD8
 17513                           
 17514 ;; *************** function _TMR1_StartTimer *****************
 17515 ;; Defined at:
 17516 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 17517 ;; Parameters:    Size  Location     Type
 17518 ;;		None
 17519 ;; Auto vars:     Size  Location     Type
 17520 ;;		None
 17521 ;; Return value:  Size  Location     Type
 17522 ;;		None               void
 17523 ;; Registers used:
 17524 ;;		None
 17525 ;; Tracked objects:
 17526 ;;		On entry : F/0
 17527 ;;		On exit  : F/0
 17528 ;;		Unchanged: F/0
 17529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17530 ;;      Params:         0       0       0       0       0       0       0       0       0
 17531 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17532 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17533 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17534 ;;Total ram usage:        0 bytes
 17535 ;; Hardware stack levels used:    1
 17536 ;; Hardware stack levels required when called:   11
 17537 ;; This function calls:
 17538 ;;		Nothing
 17539 ;; This function is called by:
 17540 ;;		_TMR1_Initialize
 17541 ;; This function uses a non-reentrant model
 17542 ;;
 17543                           
 17544                           	psect	text76
 17545  0034A8                     __ptext76:
 17546                           	opt stack 0
 17547  0034A8                     _TMR1_StartTimer:
 17548                           	opt stack 17
 17549                           
 17550                           ; BSR set to: 0
 17551                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 17552                           
 17553                           ; BSR set to: 0
 17554                           ;incstack = 0
 17555  0034A8  80CD               	bsf	4045,0,c	;volatile
 17556                           
 17557                           ; BSR set to: 0
 17558  0034AA  0012               	return		;funcret
 17559  0034AC                     __end_of_TMR1_StartTimer:
 17560                           	opt stack 0
 17561                           tblptru	equ	0xFF8
 17562                           tblptrh	equ	0xFF7
 17563                           tblptrl	equ	0xFF6
 17564                           tablat	equ	0xFF5
 17565                           prodh	equ	0xFF4
 17566                           prodl	equ	0xFF3
 17567                           intcon	equ	0xFF2
 17568                           postinc0	equ	0xFEE
 17569                           wreg	equ	0xFE8
 17570                           indf1	equ	0xFE7
 17571                           postdec1	equ	0xFE5
 17572                           fsr1h	equ	0xFE2
 17573                           fsr1l	equ	0xFE1
 17574                           indf2	equ	0xFDF
 17575                           postinc2	equ	0xFDE
 17576                           postdec2	equ	0xFDD
 17577                           plusw2	equ	0xFDB
 17578                           fsr2h	equ	0xFDA
 17579                           fsr2l	equ	0xFD9
 17580                           status	equ	0xFD8
 17581                           
 17582 ;; *************** function _SPI_Initialize *****************
 17583 ;; Defined at:
 17584 ;;		line 64 in file "../Includes/MccGenerated/spi.c"
 17585 ;; Parameters:    Size  Location     Type
 17586 ;;		None
 17587 ;; Auto vars:     Size  Location     Type
 17588 ;;		None
 17589 ;; Return value:  Size  Location     Type
 17590 ;;		None               void
 17591 ;; Registers used:
 17592 ;;		wreg, status,2
 17593 ;; Tracked objects:
 17594 ;;		On entry : F/F
 17595 ;;		On exit  : F/F
 17596 ;;		Unchanged: E/0
 17597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17598 ;;      Params:         0       0       0       0       0       0       0       0       0
 17599 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17600 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17601 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17602 ;;Total ram usage:        0 bytes
 17603 ;; Hardware stack levels used:    1
 17604 ;; Hardware stack levels required when called:   11
 17605 ;; This function calls:
 17606 ;;		Nothing
 17607 ;; This function is called by:
 17608 ;;		_SYSTEM_Initialize
 17609 ;; This function uses a non-reentrant model
 17610 ;;
 17611                           
 17612                           	psect	text77
 17613  003522                     __ptext77:
 17614                           	opt stack 0
 17615  003522                     _SPI_Initialize:
 17616                           	opt stack 18
 17617                           
 17618                           ; BSR set to: 15
 17619                           ;spi.c: 69: SSP1STAT = 0x00;
 17620                           
 17621                           ; BSR set to: 0
 17622                           ;incstack = 0
 17623  003522  6AC7               	clrf	4039,c	;volatile
 17624                           
 17625                           ; BSR set to: 15
 17626                           ;spi.c: 72: SSP1CON1 = 0x21;
 17627  003524  0E21               	movlw	33
 17628  003526  6EC6               	movwf	4038,c	;volatile
 17629                           
 17630                           ; BSR set to: 15
 17631                           ;spi.c: 75: SSP1ADD = 0x00;
 17632  003528  6AC8               	clrf	4040,c	;volatile
 17633                           
 17634                           ; BSR set to: 15
 17635                           ;spi.c: 77: CKP = 1;
 17636  00352A  88C6               	bsf	4038,4,c	;volatile
 17637                           
 17638                           ; BSR set to: 15
 17639                           ;spi.c: 78: CKE = 0;
 17640  00352C  9CC7               	bcf	4039,6,c	;volatile
 17641                           
 17642                           ; BSR set to: 15
 17643  00352E  0012               	return		;funcret
 17644  003530                     __end_of_SPI_Initialize:
 17645                           	opt stack 0
 17646                           tblptru	equ	0xFF8
 17647                           tblptrh	equ	0xFF7
 17648                           tblptrl	equ	0xFF6
 17649                           tablat	equ	0xFF5
 17650                           prodh	equ	0xFF4
 17651                           prodl	equ	0xFF3
 17652                           intcon	equ	0xFF2
 17653                           postinc0	equ	0xFEE
 17654                           wreg	equ	0xFE8
 17655                           indf1	equ	0xFE7
 17656                           postdec1	equ	0xFE5
 17657                           fsr1h	equ	0xFE2
 17658                           fsr1l	equ	0xFE1
 17659                           indf2	equ	0xFDF
 17660                           postinc2	equ	0xFDE
 17661                           postdec2	equ	0xFDD
 17662                           plusw2	equ	0xFDB
 17663                           fsr2h	equ	0xFDA
 17664                           fsr2l	equ	0xFD9
 17665                           status	equ	0xFD8
 17666                           
 17667 ;; *************** function _PIN_MANAGER_Initialize *****************
 17668 ;; Defined at:
 17669 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 17670 ;; Parameters:    Size  Location     Type
 17671 ;;		None
 17672 ;; Auto vars:     Size  Location     Type
 17673 ;;		None
 17674 ;; Return value:  Size  Location     Type
 17675 ;;		None               void
 17676 ;; Registers used:
 17677 ;;		None
 17678 ;; Tracked objects:
 17679 ;;		On entry : 0/0
 17680 ;;		On exit  : F/F
 17681 ;;		Unchanged: 0/0
 17682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17683 ;;      Params:         0       0       0       0       0       0       0       0       0
 17684 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17685 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17686 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17687 ;;Total ram usage:        0 bytes
 17688 ;; Hardware stack levels used:    1
 17689 ;; Hardware stack levels required when called:   11
 17690 ;; This function calls:
 17691 ;;		Nothing
 17692 ;; This function is called by:
 17693 ;;		_moteApp_GoToSleep
 17694 ;;		_SYSTEM_Initialize
 17695 ;; This function uses a non-reentrant model
 17696 ;;
 17697                           
 17698                           	psect	text78
 17699  003BE6                     __ptext78:
 17700                           	opt stack 0
 17701  003BE6                     _PIN_MANAGER_Initialize:
 17702                           	opt stack 16
 17703                           
 17704                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 17705                           
 17706                           ; BSR set to: 15
 17707                           ;incstack = 0
 17708  003BE6  8092               	bsf	3986,0,c	;volatile
 17709                           
 17710                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 17711  003BE8  8292               	bsf	3986,1,c	;volatile
 17712                           
 17713                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 17714  003BEA  8492               	bsf	3986,2,c	;volatile
 17715                           
 17716                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 17717  003BEC  8692               	bsf	3986,3,c	;volatile
 17718                           
 17719                           ;pin_manager.c: 59: TRISAbits.TRISA4 = 0;
 17720  003BEE  9892               	bcf	3986,4,c	;volatile
 17721                           
 17722                           ;pin_manager.c: 60: TRISAbits.TRISA5 = 0;
 17723  003BF0  9A92               	bcf	3986,5,c	;volatile
 17724                           
 17725                           ;pin_manager.c: 61: TRISAbits.TRISA6 = 0;
 17726  003BF2  9C92               	bcf	3986,6,c	;volatile
 17727                           
 17728                           ;pin_manager.c: 62: TRISAbits.TRISA7 = 0;
 17729  003BF4  9E92               	bcf	3986,7,c	;volatile
 17730                           
 17731                           ;pin_manager.c: 64: TRISBbits.TRISB0 = 0;
 17732  003BF6  9093               	bcf	3987,0,c	;volatile
 17733                           
 17734                           ;pin_manager.c: 65: TRISBbits.TRISB1 = 0;
 17735  003BF8  9293               	bcf	3987,1,c	;volatile
 17736                           
 17737                           ;pin_manager.c: 66: TRISBbits.TRISB2 = 0;
 17738  003BFA  9493               	bcf	3987,2,c	;volatile
 17739                           
 17740                           ;pin_manager.c: 67: TRISBbits.TRISB3 = 0;
 17741  003BFC  9693               	bcf	3987,3,c	;volatile
 17742                           
 17743                           ;pin_manager.c: 68: TRISBbits.TRISB5 = 0;
 17744  003BFE  9A93               	bcf	3987,5,c	;volatile
 17745                           
 17746                           ;pin_manager.c: 70: TRISCbits.TRISC0 = 1;
 17747  003C00  8094               	bsf	3988,0,c	;volatile
 17748                           
 17749                           ;pin_manager.c: 71: TRISCbits.TRISC1 = 1;
 17750  003C02  8294               	bsf	3988,1,c	;volatile
 17751                           
 17752                           ;pin_manager.c: 72: TRISCbits.TRISC2 = 1;
 17753  003C04  8494               	bsf	3988,2,c	;volatile
 17754                           
 17755                           ;pin_manager.c: 73: TRISCbits.TRISC6 = 0;
 17756  003C06  9C94               	bcf	3988,6,c	;volatile
 17757                           
 17758                           ;pin_manager.c: 74: TRISCbits.TRISC7 = 1;
 17759  003C08  8E94               	bsf	3988,7,c	;volatile
 17760                           
 17761                           ;pin_manager.c: 77: LATAbits.LATA4 = 1;
 17762  003C0A  8889               	bsf	3977,4,c	;volatile
 17763                           
 17764                           ;pin_manager.c: 78: LATAbits.LATA5 = 0;
 17765  003C0C  9A89               	bcf	3977,5,c	;volatile
 17766                           
 17767                           ;pin_manager.c: 79: LATAbits.LATA6 = 0;
 17768  003C0E  9C89               	bcf	3977,6,c	;volatile
 17769                           
 17770                           ;pin_manager.c: 80: LATAbits.LATA7 = 0;
 17771  003C10  9E89               	bcf	3977,7,c	;volatile
 17772                           
 17773                           ;pin_manager.c: 82: LATBbits.LATB2 = 0;
 17774  003C12  948A               	bcf	3978,2,c	;volatile
 17775                           
 17776                           ;pin_manager.c: 83: LATBbits.LATB0 = 0;
 17777  003C14  908A               	bcf	3978,0,c	;volatile
 17778                           
 17779                           ;pin_manager.c: 84: LATBbits.LATB5 = 0;
 17780  003C16  9A8A               	bcf	3978,5,c	;volatile
 17781                           
 17782                           ;pin_manager.c: 86: LATCbits.LATC2 = 0;
 17783  003C18  948B               	bcf	3979,2,c	;volatile
 17784                           
 17785                           ;pin_manager.c: 87: LATCbits.LATC6 = 0;
 17786  003C1A  9C8B               	bcf	3979,6,c	;volatile
 17787                           
 17788                           ;pin_manager.c: 89: ANSELAbits.ANSA0 = 0;
 17789  003C1C  010F               	movlb	15	; () banked
 17790  003C1E  915B               	bcf	91,0,b	;volatile
 17791                           
 17792                           ;pin_manager.c: 90: ANSELAbits.ANSA1 = 1;
 17793  003C20  835B               	bsf	91,1,b	;volatile
 17794                           
 17795                           ;pin_manager.c: 91: ANSELAbits.ANSA2 = 1;
 17796  003C22  855B               	bsf	91,2,b	;volatile
 17797                           
 17798                           ;pin_manager.c: 92: ANSELAbits.ANSA3 = 1;
 17799  003C24  875B               	bsf	91,3,b	;volatile
 17800                           
 17801                           ;pin_manager.c: 93: ANSELCbits.ANSC7 = 0;
 17802  003C26  9F5D               	bcf	93,7,b	;volatile
 17803                           
 17804                           ;pin_manager.c: 94: ANSELCbits.ANSC6 = 0;
 17805  003C28  9D5D               	bcf	93,6,b	;volatile
 17806                           
 17807                           ; BSR set to: 15
 17808  003C2A  0012               	return		;funcret
 17809  003C2C                     __end_of_PIN_MANAGER_Initialize:
 17810                           	opt stack 0
 17811                           tblptru	equ	0xFF8
 17812                           tblptrh	equ	0xFF7
 17813                           tblptrl	equ	0xFF6
 17814                           tablat	equ	0xFF5
 17815                           prodh	equ	0xFF4
 17816                           prodl	equ	0xFF3
 17817                           intcon	equ	0xFF2
 17818                           postinc0	equ	0xFEE
 17819                           wreg	equ	0xFE8
 17820                           indf1	equ	0xFE7
 17821                           postdec1	equ	0xFE5
 17822                           fsr1h	equ	0xFE2
 17823                           fsr1l	equ	0xFE1
 17824                           indf2	equ	0xFDF
 17825                           postinc2	equ	0xFDE
 17826                           postdec2	equ	0xFDD
 17827                           plusw2	equ	0xFDB
 17828                           fsr2h	equ	0xFDA
 17829                           fsr2l	equ	0xFD9
 17830                           status	equ	0xFD8
 17831                           
 17832 ;; *************** function _OSCILLATOR_Initialize *****************
 17833 ;; Defined at:
 17834 ;;		line 105 in file "../Includes/MccGenerated/mcc.c"
 17835 ;; Parameters:    Size  Location     Type
 17836 ;;		None
 17837 ;; Auto vars:     Size  Location     Type
 17838 ;;		None
 17839 ;; Return value:  Size  Location     Type
 17840 ;;		None               void
 17841 ;; Registers used:
 17842 ;;		wreg, status,2
 17843 ;; Tracked objects:
 17844 ;;		On entry : 0/0
 17845 ;;		On exit  : 0/0
 17846 ;;		Unchanged: 0/0
 17847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17848 ;;      Params:         0       0       0       0       0       0       0       0       0
 17849 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17850 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17851 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17852 ;;Total ram usage:        0 bytes
 17853 ;; Hardware stack levels used:    1
 17854 ;; Hardware stack levels required when called:   11
 17855 ;; This function calls:
 17856 ;;		Nothing
 17857 ;; This function is called by:
 17858 ;;		_SYSTEM_Initialize
 17859 ;; This function uses a non-reentrant model
 17860 ;;
 17861                           
 17862                           	psect	text79
 17863  0035E6                     __ptext79:
 17864                           	opt stack 0
 17865  0035E6                     _OSCILLATOR_Initialize:
 17866                           	opt stack 18
 17867                           
 17868                           ;mcc.c: 107: OSCTUNE = 0x80;
 17869                           
 17870                           ; BSR set to: 15
 17871                           ;incstack = 0
 17872  0035E6  0E80               	movlw	128
 17873  0035E8  6E9B               	movwf	3995,c	;volatile
 17874                           
 17875                           ;mcc.c: 108: OSCCON = 0x70;
 17876  0035EA  0E70               	movlw	112
 17877  0035EC  6ED3               	movwf	4051,c	;volatile
 17878                           
 17879                           ;mcc.c: 109: OSCCON2 = 0x10;
 17880  0035EE  0E10               	movlw	16
 17881  0035F0  6ED2               	movwf	4050,c	;volatile
 17882  0035F2                     l1144:
 17883  0035F2  AED2               	btfss	4050,7,c	;volatile
 17884  0035F4  D7FE               	goto	l1144
 17885                           
 17886                           ;mcc.c: 111: ACTCON = 0x90;
 17887  0035F6  0E90               	movlw	144
 17888  0035F8  6EB5               	movwf	4021,c	;volatile
 17889  0035FA  0C90               	retlw	144	;funcret
 17890  0035FC                     __end_of_OSCILLATOR_Initialize:
 17891                           	opt stack 0
 17892                           tblptru	equ	0xFF8
 17893                           tblptrh	equ	0xFF7
 17894                           tblptrl	equ	0xFF6
 17895                           tablat	equ	0xFF5
 17896                           prodh	equ	0xFF4
 17897                           prodl	equ	0xFF3
 17898                           intcon	equ	0xFF2
 17899                           postinc0	equ	0xFEE
 17900                           wreg	equ	0xFE8
 17901                           indf1	equ	0xFE7
 17902                           postdec1	equ	0xFE5
 17903                           fsr1h	equ	0xFE2
 17904                           fsr1l	equ	0xFE1
 17905                           indf2	equ	0xFDF
 17906                           postinc2	equ	0xFDE
 17907                           postdec2	equ	0xFDD
 17908                           plusw2	equ	0xFDB
 17909                           fsr2h	equ	0xFDA
 17910                           fsr2l	equ	0xFD9
 17911                           status	equ	0xFD8
 17912                           
 17913 ;; *************** function _EUSART_Initialize *****************
 17914 ;; Defined at:
 17915 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 17916 ;; Parameters:    Size  Location     Type
 17917 ;;		None
 17918 ;; Auto vars:     Size  Location     Type
 17919 ;;		None
 17920 ;; Return value:  Size  Location     Type
 17921 ;;		None               void
 17922 ;; Registers used:
 17923 ;;		wreg, status,2
 17924 ;; Tracked objects:
 17925 ;;		On entry : 0/F
 17926 ;;		On exit  : 0/0
 17927 ;;		Unchanged: 0/0
 17928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17929 ;;      Params:         0       0       0       0       0       0       0       0       0
 17930 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17931 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17932 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17933 ;;Total ram usage:        0 bytes
 17934 ;; Hardware stack levels used:    1
 17935 ;; Hardware stack levels required when called:   11
 17936 ;; This function calls:
 17937 ;;		Nothing
 17938 ;; This function is called by:
 17939 ;;		_moteApp_GoToSleep
 17940 ;;		_SYSTEM_Initialize
 17941 ;; This function uses a non-reentrant model
 17942 ;;
 17943                           
 17944                           	psect	text80
 17945  0038C4                     __ptext80:
 17946                           	opt stack 0
 17947  0038C4                     _EUSART_Initialize:
 17948                           	opt stack 16
 17949                           
 17950                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 17951                           
 17952                           ;incstack = 0
 17953  0038C4  9A9D               	bcf	3997,5,c	;volatile
 17954                           
 17955                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 17956  0038C6  989D               	bcf	3997,4,c	;volatile
 17957                           
 17958                           ;eusart.c: 85: BAUDCON = 0x48;
 17959  0038C8  0E48               	movlw	72
 17960  0038CA  6EB8               	movwf	4024,c	;volatile
 17961                           
 17962                           ;eusart.c: 88: RCSTA = 0x90;
 17963  0038CC  0E90               	movlw	144
 17964  0038CE  6EAB               	movwf	4011,c	;volatile
 17965                           
 17966                           ;eusart.c: 91: TXSTA = 0x26;
 17967  0038D0  0E26               	movlw	38
 17968  0038D2  6EAC               	movwf	4012,c	;volatile
 17969                           
 17970                           ;eusart.c: 95: SPBRG = 0x71;
 17971  0038D4  0E71               	movlw	113
 17972  0038D6  6EAF               	movwf	4015,c	;volatile
 17973                           
 17974                           ;eusart.c: 100: SPBRGH = 0x02;
 17975  0038D8  0E02               	movlw	2
 17976  0038DA  6EB0               	movwf	4016,c	;volatile
 17977                           
 17978                           ;eusart.c: 103: eusartTxHead = 0;
 17979  0038DC  6A27               	clrf	_eusartTxHead,c
 17980                           
 17981                           ;eusart.c: 104: eusartTxTail = 0;
 17982  0038DE  6A28               	clrf	_eusartTxTail,c
 17983                           
 17984                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 17985  0038E0  0E40               	movlw	64
 17986  0038E2  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 17987                           
 17988                           ;eusart.c: 107: eusartRxHead = 0;
 17989  0038E4  6A24               	clrf	_eusartRxHead,c
 17990                           
 17991                           ;eusart.c: 108: eusartRxTail = 0;
 17992  0038E6  6A25               	clrf	_eusartRxTail,c
 17993                           
 17994                           ;eusart.c: 109: eusartRxCount = 0;
 17995  0038E8  6A23               	clrf	_eusartRxCount,c	;volatile
 17996                           
 17997                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 17998  0038EA  8A9D               	bsf	3997,5,c	;volatile
 17999                           
 18000                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 18001  0038EC  88AB               	bsf	4011,4,c	;volatile
 18002  0038EE  0012               	return		;funcret
 18003  0038F0                     __end_of_EUSART_Initialize:
 18004                           	opt stack 0
 18005                           tblptru	equ	0xFF8
 18006                           tblptrh	equ	0xFF7
 18007                           tblptrl	equ	0xFF6
 18008                           tablat	equ	0xFF5
 18009                           prodh	equ	0xFF4
 18010                           prodl	equ	0xFF3
 18011                           intcon	equ	0xFF2
 18012                           postinc0	equ	0xFEE
 18013                           wreg	equ	0xFE8
 18014                           indf1	equ	0xFE7
 18015                           postdec1	equ	0xFE5
 18016                           fsr1h	equ	0xFE2
 18017                           fsr1l	equ	0xFE1
 18018                           indf2	equ	0xFDF
 18019                           postinc2	equ	0xFDE
 18020                           postdec2	equ	0xFDD
 18021                           plusw2	equ	0xFDB
 18022                           fsr2h	equ	0xFDA
 18023                           fsr2l	equ	0xFD9
 18024                           status	equ	0xFD8
 18025                           
 18026 ;; *************** function _CMP1_Initialize *****************
 18027 ;; Defined at:
 18028 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 18029 ;; Parameters:    Size  Location     Type
 18030 ;;		None
 18031 ;; Auto vars:     Size  Location     Type
 18032 ;;		None
 18033 ;; Return value:  Size  Location     Type
 18034 ;;		None               void
 18035 ;; Registers used:
 18036 ;;		wreg, status,2
 18037 ;; Tracked objects:
 18038 ;;		On entry : 0/0
 18039 ;;		On exit  : 0/0
 18040 ;;		Unchanged: 0/0
 18041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18042 ;;      Params:         0       0       0       0       0       0       0       0       0
 18043 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18044 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18045 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18046 ;;Total ram usage:        0 bytes
 18047 ;; Hardware stack levels used:    1
 18048 ;; Hardware stack levels required when called:   11
 18049 ;; This function calls:
 18050 ;;		Nothing
 18051 ;; This function is called by:
 18052 ;;		_SYSTEM_Initialize
 18053 ;; This function uses a non-reentrant model
 18054 ;;
 18055                           
 18056                           	psect	text81
 18057  00355E                     __ptext81:
 18058                           	opt stack 0
 18059  00355E                     _CMP1_Initialize:
 18060                           	opt stack 18
 18061                           
 18062                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 18063                           
 18064                           ;incstack = 0
 18065  00355E  9CA0               	bcf	4000,6,c	;volatile
 18066                           
 18067                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 18068  003560  0E9C               	movlw	156
 18069  003562  6E98               	movwf	3992,c	;volatile
 18070                           
 18071                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 18072  003564  8A9A               	bsf	3994,5,c	;volatile
 18073                           
 18074                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 18075  003566  929A               	bcf	3994,1,c	;volatile
 18076                           
 18077                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 18078  003568  969A               	bcf	3994,3,c	;volatile
 18079                           
 18080                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 18081  00356A  9CA1               	bcf	4001,6,c	;volatile
 18082                           
 18083                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 18084  00356C  9CA0               	bcf	4000,6,c	;volatile
 18085  00356E  0C9C               	retlw	156	;funcret
 18086  003570                     __end_of_CMP1_Initialize:
 18087                           	opt stack 0
 18088                           tblptru	equ	0xFF8
 18089                           tblptrh	equ	0xFF7
 18090                           tblptrl	equ	0xFF6
 18091                           tablat	equ	0xFF5
 18092                           prodh	equ	0xFF4
 18093                           prodl	equ	0xFF3
 18094                           intcon	equ	0xFF2
 18095                           postinc0	equ	0xFEE
 18096                           wreg	equ	0xFE8
 18097                           indf1	equ	0xFE7
 18098                           postdec1	equ	0xFE5
 18099                           fsr1h	equ	0xFE2
 18100                           fsr1l	equ	0xFE1
 18101                           indf2	equ	0xFDF
 18102                           postinc2	equ	0xFDE
 18103                           postdec2	equ	0xFDD
 18104                           plusw2	equ	0xFDB
 18105                           fsr2h	equ	0xFDA
 18106                           fsr2l	equ	0xFD9
 18107                           status	equ	0xFD8
 18108                           
 18109 ;; *************** function _ADC_Initialize *****************
 18110 ;; Defined at:
 18111 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 18112 ;; Parameters:    Size  Location     Type
 18113 ;;		None
 18114 ;; Auto vars:     Size  Location     Type
 18115 ;;		None
 18116 ;; Return value:  Size  Location     Type
 18117 ;;		None               void
 18118 ;; Registers used:
 18119 ;;		wreg, status,2
 18120 ;; Tracked objects:
 18121 ;;		On entry : 0/0
 18122 ;;		On exit  : 0/0
 18123 ;;		Unchanged: 0/0
 18124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18125 ;;      Params:         0       0       0       0       0       0       0       0       0
 18126 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18127 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18128 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18129 ;;Total ram usage:        0 bytes
 18130 ;; Hardware stack levels used:    1
 18131 ;; Hardware stack levels required when called:   11
 18132 ;; This function calls:
 18133 ;;		Nothing
 18134 ;; This function is called by:
 18135 ;;		_SYSTEM_Initialize
 18136 ;; This function uses a non-reentrant model
 18137 ;;
 18138                           
 18139                           	psect	text82
 18140  0035D0                     __ptext82:
 18141                           	opt stack 0
 18142  0035D0                     _ADC_Initialize:
 18143                           	opt stack 18
 18144                           
 18145                           ;adc.c: 68: VREFCON0 = 0b10100000;
 18146                           
 18147                           ;incstack = 0
 18148  0035D0  0EA0               	movlw	160
 18149  0035D2  6E7D               	movwf	3965,c	;volatile
 18150                           
 18151                           ;adc.c: 70: ADCON0 = 0x01;
 18152  0035D4  0E01               	movlw	1
 18153  0035D6  6EC2               	movwf	4034,c	;volatile
 18154                           
 18155                           ;adc.c: 73: ADCON1 = 0x08;
 18156  0035D8  0E08               	movlw	8
 18157  0035DA  6EC1               	movwf	4033,c	;volatile
 18158                           
 18159                           ;adc.c: 76: ADCON2 = 0b10001110;
 18160  0035DC  0E8E               	movlw	142
 18161  0035DE  6EC0               	movwf	4032,c	;volatile
 18162                           
 18163                           ;adc.c: 79: ADRESL = 0x00;
 18164  0035E0  6AC3               	clrf	4035,c	;volatile
 18165                           
 18166                           ;adc.c: 82: ADRESH = 0x00;
 18167  0035E2  6AC4               	clrf	4036,c	;volatile
 18168  0035E4  0012               	return		;funcret
 18169  0035E6                     __end_of_ADC_Initialize:
 18170                           	opt stack 0
 18171                           tblptru	equ	0xFF8
 18172                           tblptrh	equ	0xFF7
 18173                           tblptrl	equ	0xFF6
 18174                           tablat	equ	0xFF5
 18175                           prodh	equ	0xFF4
 18176                           prodl	equ	0xFF3
 18177                           intcon	equ	0xFF2
 18178                           postinc0	equ	0xFEE
 18179                           wreg	equ	0xFE8
 18180                           indf1	equ	0xFE7
 18181                           postdec1	equ	0xFE5
 18182                           fsr1h	equ	0xFE2
 18183                           fsr1l	equ	0xFE1
 18184                           indf2	equ	0xFDF
 18185                           postinc2	equ	0xFDE
 18186                           postdec2	equ	0xFDD
 18187                           plusw2	equ	0xFDB
 18188                           fsr2h	equ	0xFDA
 18189                           fsr2l	equ	0xFD9
 18190                           status	equ	0xFD8
 18191                           
 18192 ;; *************** function _MOTEapp_handlerState *****************
 18193 ;; Defined at:
 18194 ;;		line 154 in file "../Includes/Board/MOTEapp.c"
 18195 ;; Parameters:    Size  Location     Type
 18196 ;;  state           1    wreg     enum E6449
 18197 ;; Auto vars:     Size  Location     Type
 18198 ;;  state           1    0[BANK0 ] enum E6449
 18199 ;; Return value:  Size  Location     Type
 18200 ;;		None               void
 18201 ;; Registers used:
 18202 ;;		wreg
 18203 ;; Tracked objects:
 18204 ;;		On entry : F/0
 18205 ;;		On exit  : 0/0
 18206 ;;		Unchanged: 0/0
 18207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18208 ;;      Params:         0       0       0       0       0       0       0       0       0
 18209 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18210 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18211 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18212 ;;Total ram usage:        1 bytes
 18213 ;; Hardware stack levels used:    1
 18214 ;; Hardware stack levels required when called:   11
 18215 ;; This function calls:
 18216 ;;		Nothing
 18217 ;; This function is called by:
 18218 ;;		_main
 18219 ;; This function uses a non-reentrant model
 18220 ;;
 18221                           
 18222                           	psect	text83
 18223  0034CA                     __ptext83:
 18224                           	opt stack 0
 18225  0034CA                     _MOTEapp_handlerState:
 18226                           	opt stack 19
 18227                           
 18228                           ;incstack = 0
 18229                           ;MOTEapp_handlerState@state stored from wreg
 18230  0034CA  6FC8               	movwf	MOTEapp_handlerState@state& (0+255),b
 18231                           
 18232                           ;MOTEapp.c: 156: moteState = state;
 18233  0034CC  C0C8  F0F8         	movff	MOTEapp_handlerState@state,_moteState
 18234  0034D0  0012               	return		;funcret
 18235  0034D2                     __end_of_MOTEapp_handlerState:
 18236                           	opt stack 0
 18237                           tblptru	equ	0xFF8
 18238                           tblptrh	equ	0xFF7
 18239                           tblptrl	equ	0xFF6
 18240                           tablat	equ	0xFF5
 18241                           prodh	equ	0xFF4
 18242                           prodl	equ	0xFF3
 18243                           intcon	equ	0xFF2
 18244                           postinc0	equ	0xFEE
 18245                           wreg	equ	0xFE8
 18246                           indf1	equ	0xFE7
 18247                           postdec1	equ	0xFE5
 18248                           fsr1h	equ	0xFE2
 18249                           fsr1l	equ	0xFE1
 18250                           indf2	equ	0xFDF
 18251                           postinc2	equ	0xFDE
 18252                           postdec2	equ	0xFDD
 18253                           plusw2	equ	0xFDB
 18254                           fsr2h	equ	0xFDA
 18255                           fsr2l	equ	0xFD9
 18256                           status	equ	0xFD8
 18257                           
 18258 ;; *************** function _DATAEE_ReadByte *****************
 18259 ;; Defined at:
 18260 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 18261 ;; Parameters:    Size  Location     Type
 18262 ;;  bAdd            1    wreg     unsigned char 
 18263 ;; Auto vars:     Size  Location     Type
 18264 ;;  bAdd            1    0[BANK0 ] unsigned char 
 18265 ;; Return value:  Size  Location     Type
 18266 ;;                  1    wreg      unsigned char 
 18267 ;; Registers used:
 18268 ;;		wreg, status,2
 18269 ;; Tracked objects:
 18270 ;;		On entry : F/0
 18271 ;;		On exit  : 0/0
 18272 ;;		Unchanged: 0/0
 18273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18274 ;;      Params:         0       0       0       0       0       0       0       0       0
 18275 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18276 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18277 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18278 ;;Total ram usage:        1 bytes
 18279 ;; Hardware stack levels used:    1
 18280 ;; Hardware stack levels required when called:   11
 18281 ;; This function calls:
 18282 ;;		Nothing
 18283 ;; This function is called by:
 18284 ;;		_main
 18285 ;; This function uses a non-reentrant model
 18286 ;;
 18287                           
 18288                           	psect	text84
 18289  003594                     __ptext84:
 18290                           	opt stack 0
 18291  003594                     _DATAEE_ReadByte:
 18292                           	opt stack 19
 18293                           
 18294                           ;incstack = 0
 18295                           ;DATAEE_ReadByte@bAdd stored from wreg
 18296  003594  6FC8               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 18297                           
 18298                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 18299  003596  C0C8  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 18300                           
 18301                           ;memory.c: 191: EECON1bits.CFGS = 0;
 18302  00359A  9CA6               	bcf	4006,6,c	;volatile
 18303                           
 18304                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 18305  00359C  9EA6               	bcf	4006,7,c	;volatile
 18306                           
 18307                           ;memory.c: 193: EECON1bits.RD = 1;
 18308  00359E  80A6               	bsf	4006,0,c	;volatile
 18309                           
 18310                           ;memory.c: 194: __nop();
 18311  0035A0  F000               	nop	
 18312                           
 18313                           ;memory.c: 195: __nop();
 18314  0035A2  F000               	nop	
 18315                           
 18316                           ;memory.c: 197: return (EEDATA);
 18317  0035A4  50A8               	movf	4008,w,c	;volatile
 18318  0035A6  0012               	return		;funcret
 18319  0035A8                     __end_of_DATAEE_ReadByte:
 18320                           	opt stack 0
 18321                           tblptru	equ	0xFF8
 18322                           tblptrh	equ	0xFF7
 18323                           tblptrl	equ	0xFF6
 18324                           tablat	equ	0xFF5
 18325                           prodh	equ	0xFF4
 18326                           prodl	equ	0xFF3
 18327                           intcon	equ	0xFF2
 18328                           postinc0	equ	0xFEE
 18329                           wreg	equ	0xFE8
 18330                           indf1	equ	0xFE7
 18331                           postdec1	equ	0xFE5
 18332                           fsr1h	equ	0xFE2
 18333                           fsr1l	equ	0xFE1
 18334                           indf2	equ	0xFDF
 18335                           postinc2	equ	0xFDE
 18336                           postdec2	equ	0xFDD
 18337                           plusw2	equ	0xFDB
 18338                           fsr2h	equ	0xFDA
 18339                           fsr2l	equ	0xFD9
 18340                           status	equ	0xFD8
 18341                           
 18342 ;; *************** function _INTERRUPT_InterruptManager *****************
 18343 ;; Defined at:
 18344 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 18345 ;; Parameters:    Size  Location     Type
 18346 ;;		None
 18347 ;; Auto vars:     Size  Location     Type
 18348 ;;		None
 18349 ;; Return value:  Size  Location     Type
 18350 ;;		None               void
 18351 ;; Registers used:
 18352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18353 ;; Tracked objects:
 18354 ;;		On entry : 0/0
 18355 ;;		On exit  : 0/0
 18356 ;;		Unchanged: 0/0
 18357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18358 ;;      Params:         0       0       0       0       0       0       0       0       0
 18359 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18360 ;;      Temps:         12       0       0       0       0       0       0       0       0
 18361 ;;      Totals:        12       0       0       0       0       0       0       0       0
 18362 ;;Total ram usage:       12 bytes
 18363 ;; Hardware stack levels used:    1
 18364 ;; Hardware stack levels required when called:   10
 18365 ;; This function calls:
 18366 ;;		_CMP1_ISR
 18367 ;;		_EUSART_Receive_ISR
 18368 ;;		_EUSART_Transmit_ISR
 18369 ;;		_TMR1_ISR
 18370 ;;		_TMRapp_Tick
 18371 ;;		_USBDeviceTasks
 18372 ;;		_USBapp_setrxByteFlag
 18373 ;; This function is called by:
 18374 ;;		Interrupt level 2
 18375 ;; This function uses a non-reentrant model
 18376 ;;
 18377                           
 18378                           	psect	intcode
 18379  001008                     __pintcode:
 18380                           	opt stack 0
 18381  001008                     _INTERRUPT_InterruptManager:
 18382                           	opt stack 10
 18383                           
 18384                           ;incstack = 0
 18385  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18386  00100A  CFFA F04F          	movff	pclath,??_INTERRUPT_InterruptManager
 18387  00100E  CFFB F050          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 18388  001012  CFE1 F051          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 18389  001016  CFE2 F052          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 18390  00101A  CFD9 F053          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 18391  00101E  CFDA F054          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 18392  001022  CFF3 F055          	movff	prodl,??_INTERRUPT_InterruptManager+6
 18393  001026  CFF4 F056          	movff	prodh,??_INTERRUPT_InterruptManager+7
 18394  00102A  CFF6 F057          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 18395  00102E  CFF7 F058          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 18396  001032  CFF8 F059          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 18397  001036  CFF5 F05A          	movff	tablat,??_INTERRUPT_InterruptManager+11
 18398                           
 18399                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 18400  00103A  B09D               	btfsc	3997,0,c	;volatile
 18401  00103C  A09E               	btfss	3998,0,c	;volatile
 18402  00103E  D005               	goto	i2l1104
 18403                           
 18404                           ;interrupt_manager.c: 59: {
 18405                           ;interrupt_manager.c: 60: TMR1_ISR();
 18406  001040  EC79  F01A         	call	_TMR1_ISR	;wreg free
 18407                           
 18408                           ;interrupt_manager.c: 62: TMRapp_Tick();
 18409  001044  EC5F  F01A         	call	_TMRapp_Tick	;wreg free
 18410                           
 18411                           ;interrupt_manager.c: 63: }
 18412  001048  D016               	goto	i2l1112
 18413  00104A                     i2l1104:
 18414                           
 18415                           ;interrupt_manager.c: 64: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 18416  00104A  BA9D               	btfsc	3997,5,c	;volatile
 18417  00104C  AA9E               	btfss	3998,5,c	;volatile
 18418  00104E  D005               	goto	i2l1106
 18419                           
 18420                           ;interrupt_manager.c: 65: {
 18421                           ;interrupt_manager.c: 66: USBapp_setrxByteFlag();
 18422  001050  EC62  F01A         	call	_USBapp_setrxByteFlag	;wreg free
 18423                           
 18424                           ;interrupt_manager.c: 67: EUSART_Receive_ISR();
 18425  001054  ECA9  F01B         	call	_EUSART_Receive_ISR	;wreg free
 18426                           
 18427                           ;interrupt_manager.c: 68: }
 18428  001058  D00E               	goto	i2l1112
 18429  00105A                     i2l1106:
 18430                           
 18431                           ;interrupt_manager.c: 69: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 18432  00105A  B89D               	btfsc	3997,4,c	;volatile
 18433  00105C  A89E               	btfss	3998,4,c	;volatile
 18434  00105E  D003               	goto	i2l1108
 18435                           
 18436                           ;interrupt_manager.c: 70: {
 18437                           ;interrupt_manager.c: 71: EUSART_Transmit_ISR();
 18438  001060  ECBD  F01B         	call	_EUSART_Transmit_ISR	;wreg free
 18439                           
 18440                           ;interrupt_manager.c: 72: }
 18441  001064  D008               	goto	i2l1112
 18442  001066                     i2l1108:
 18443                           
 18444                           ;interrupt_manager.c: 73: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 18445  001066  BCA0               	btfsc	4000,6,c	;volatile
 18446  001068  ACA1               	btfss	4001,6,c	;volatile
 18447  00106A  D003               	goto	i2l9725
 18448                           
 18449                           ;interrupt_manager.c: 74: {
 18450                           ;interrupt_manager.c: 75: CMP1_ISR();
 18451  00106C  EC52  F01A         	call	_CMP1_ISR	;wreg free
 18452                           
 18453                           ;interrupt_manager.c: 76: }
 18454  001070  D002               	goto	i2l1112
 18455  001072                     i2l9725:
 18456                           
 18457                           ;interrupt_manager.c: 77: else
 18458                           ;interrupt_manager.c: 78: {
 18459                           ;interrupt_manager.c: 80: USBDeviceTasks();
 18460  001072  EC61  F02B         	call	_USBDeviceTasks	;wreg free
 18461  001076                     i2l1112:
 18462  001076  C05A  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 18463  00107A  C059  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 18464  00107E  C058  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 18465  001082  C057  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 18466  001086  C056  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 18467  00108A  C055  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 18468  00108E  C054  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 18469  001092  C053  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 18470  001096  C052  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 18471  00109A  C051  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 18472  00109E  C050  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 18473  0010A2  C04F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 18474  0010A6  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18475  0010A8  0011               	retfie		f
 18476  0010AA                     __end_of_INTERRUPT_InterruptManager:
 18477                           	opt stack 0
 18478                           pclatu	equ	0xFFB
 18479                           pclath	equ	0xFFA
 18480                           tblptru	equ	0xFF8
 18481                           tblptrh	equ	0xFF7
 18482                           tblptrl	equ	0xFF6
 18483                           tablat	equ	0xFF5
 18484                           prodh	equ	0xFF4
 18485                           prodl	equ	0xFF3
 18486                           intcon	equ	0xFF2
 18487                           postinc0	equ	0xFEE
 18488                           wreg	equ	0xFE8
 18489                           indf1	equ	0xFE7
 18490                           postdec1	equ	0xFE5
 18491                           fsr1h	equ	0xFE2
 18492                           fsr1l	equ	0xFE1
 18493                           indf2	equ	0xFDF
 18494                           postinc2	equ	0xFDE
 18495                           postdec2	equ	0xFDD
 18496                           plusw2	equ	0xFDB
 18497                           fsr2h	equ	0xFDA
 18498                           fsr2l	equ	0xFD9
 18499                           status	equ	0xFD8
 18500                           
 18501 ;; *************** function _USBapp_setrxByteFlag *****************
 18502 ;; Defined at:
 18503 ;;		line 226 in file "../Includes/Board/USBapp.c"
 18504 ;; Parameters:    Size  Location     Type
 18505 ;;		None
 18506 ;; Auto vars:     Size  Location     Type
 18507 ;;		None
 18508 ;; Return value:  Size  Location     Type
 18509 ;;		None               void
 18510 ;; Registers used:
 18511 ;;		wreg, status,2
 18512 ;; Tracked objects:
 18513 ;;		On entry : 0/0
 18514 ;;		On exit  : 0/0
 18515 ;;		Unchanged: 0/0
 18516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18517 ;;      Params:         0       0       0       0       0       0       0       0       0
 18518 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18519 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18520 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18521 ;;Total ram usage:        0 bytes
 18522 ;; Hardware stack levels used:    1
 18523 ;; This function calls:
 18524 ;;		Nothing
 18525 ;; This function is called by:
 18526 ;;		_INTERRUPT_InterruptManager
 18527 ;; This function uses a non-reentrant model
 18528 ;;
 18529                           
 18530                           	psect	text86
 18531  0034C4                     __ptext86:
 18532                           	opt stack 0
 18533  0034C4                     _USBapp_setrxByteFlag:
 18534                           	opt stack 19
 18535                           
 18536                           ;USBapp.c: 228: rxByteFlag = 1;
 18537                           
 18538                           ;incstack = 0
 18539  0034C4  0E01               	movlw	1
 18540  0034C6  6E2A               	movwf	_rxByteFlag,c	;volatile
 18541  0034C8  0C01               	retlw	1	;funcret
 18542  0034CA                     __end_of_USBapp_setrxByteFlag:
 18543                           	opt stack 0
 18544                           pclatu	equ	0xFFB
 18545                           pclath	equ	0xFFA
 18546                           tblptru	equ	0xFF8
 18547                           tblptrh	equ	0xFF7
 18548                           tblptrl	equ	0xFF6
 18549                           tablat	equ	0xFF5
 18550                           prodh	equ	0xFF4
 18551                           prodl	equ	0xFF3
 18552                           intcon	equ	0xFF2
 18553                           postinc0	equ	0xFEE
 18554                           wreg	equ	0xFE8
 18555                           indf1	equ	0xFE7
 18556                           postdec1	equ	0xFE5
 18557                           fsr1h	equ	0xFE2
 18558                           fsr1l	equ	0xFE1
 18559                           indf2	equ	0xFDF
 18560                           postinc2	equ	0xFDE
 18561                           postdec2	equ	0xFDD
 18562                           plusw2	equ	0xFDB
 18563                           fsr2h	equ	0xFDA
 18564                           fsr2l	equ	0xFD9
 18565                           status	equ	0xFD8
 18566                           
 18567 ;; *************** function _USBDeviceTasks *****************
 18568 ;; Defined at:
 18569 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 18570 ;; Parameters:    Size  Location     Type
 18571 ;;		None
 18572 ;; Auto vars:     Size  Location     Type
 18573 ;;  i               1   32[COMRAM] unsigned char 
 18574 ;; Return value:  Size  Location     Type
 18575 ;;		None               void
 18576 ;; Registers used:
 18577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18578 ;; Tracked objects:
 18579 ;;		On entry : 0/0
 18580 ;;		On exit  : 0/0
 18581 ;;		Unchanged: 0/0
 18582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18583 ;;      Params:         0       0       0       0       0       0       0       0       0
 18584 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18585 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18586 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18587 ;;Total ram usage:        1 bytes
 18588 ;; Hardware stack levels used:    1
 18589 ;; Hardware stack levels required when called:    9
 18590 ;; This function calls:
 18591 ;;		_USBCtrlEPAllowStatusStage
 18592 ;;		_USBCtrlEPService
 18593 ;;		_USBStallHandler
 18594 ;;		_USBSuspend
 18595 ;;		_USBWakeFromSuspend
 18596 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18597 ;;		i2_USBDeviceInit
 18598 ;; This function is called by:
 18599 ;;		_INTERRUPT_InterruptManager
 18600 ;; This function uses a non-reentrant model
 18601 ;;
 18602                           
 18603                           	psect	text87
 18604  0056C2                     __ptext87:
 18605                           	opt stack 0
 18606  0056C2                     _USBDeviceTasks:
 18607                           	opt stack 10
 18608                           
 18609                           ;usb_device.c: 430: uint8_t i;
 18610                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 18611                           
 18612                           ;incstack = 0
 18613  0056C2  0100               	movlb	0	; () banked
 18614  0056C4  058A               	decf	_USBDeviceState& (0+255),w,b	;volatile
 18615  0056C6  E107               	bnz	i2l9559
 18616                           
 18617                           ; BSR set to: 0
 18618                           ;usb_device.c: 433: {
 18619                           ;usb_device.c: 443: if(!UCONbits.SE0)
 18620  0056C8  BA60               	btfsc	3936,5,c	;volatile
 18621  0056CA  D005               	goto	i2l9559
 18622                           
 18623                           ; BSR set to: 0
 18624                           ;usb_device.c: 444: {
 18625                           ;usb_device.c: 445: {UIR = 0;};
 18626  0056CC  6A65               	clrf	3941,c	;volatile
 18627                           
 18628                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 18629  0056CE  8064               	bsf	3940,0,c	;volatile
 18630                           
 18631                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 18632  0056D0  8864               	bsf	3940,4,c	;volatile
 18633                           
 18634                           ; BSR set to: 0
 18635                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 18636  0056D2  0E02               	movlw	2
 18637  0056D4  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 18638  0056D6                     i2l9559:
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;usb_device.c: 449: }
 18642                           ;usb_device.c: 450: }
 18643                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 18644  0056D6  B465               	btfsc	3941,2,c	;volatile
 18645                           
 18646                           ; BSR set to: 0
 18647  0056D8  A464               	btfss	3940,2,c	;volatile
 18648  0056DA  D003               	goto	i2l9567
 18649                           
 18650                           ; BSR set to: 0
 18651                           ;usb_device.c: 455: {
 18652                           ;usb_device.c: 456: (UIR &= 0xFB);
 18653  0056DC  9465               	bcf	3941,2,c	;volatile
 18654                           
 18655                           ; BSR set to: 0
 18656                           ;usb_device.c: 457: USBWakeFromSuspend();
 18657  0056DE  EC63  F01B         	call	_USBWakeFromSuspend	;wreg free
 18658  0056E2                     i2l9567:
 18659                           
 18660                           ;usb_device.c: 458: }
 18661                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 18662  0056E2  A260               	btfss	3936,1,c	;volatile
 18663  0056E4  D002               	goto	i2l1575
 18664                           
 18665                           ;usb_device.c: 464: {
 18666                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 18667  0056E6  94A4               	bcf	4004,2,c	;volatile
 18668                           
 18669                           ;usb_device.c: 466: return;
 18670  0056E8  0012               	return	
 18671  0056EA                     i2l1575:
 18672                           
 18673                           ;usb_device.c: 467: }
 18674                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 18675  0056EA  B065               	btfsc	3941,0,c	;volatile
 18676  0056EC  A064               	btfss	3940,0,c	;volatile
 18677  0056EE  D006               	goto	i2l9581
 18678                           
 18679                           ;usb_device.c: 480: {
 18680                           ;usb_device.c: 481: USBDeviceInit();
 18681  0056F0  ECB7  F028         	call	i2_USBDeviceInit	;wreg free
 18682                           
 18683                           ; BSR set to: 0
 18684                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 18685  0056F4  84A3               	bsf	4003,2,c	;volatile
 18686                           
 18687                           ; BSR set to: 0
 18688                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 18689  0056F6  0E04               	movlw	4
 18690  0056F8  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;usb_device.c: 489: (UIR &= 0xFE);
 18694  0056FA  9065               	bcf	3941,0,c	;volatile
 18695  0056FC                     i2l9581:
 18696                           
 18697                           ;usb_device.c: 490: }
 18698                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 18699  0056FC  B865               	btfsc	3941,4,c	;volatile
 18700  0056FE  A864               	btfss	3940,4,c	;volatile
 18701  005700  D003               	goto	i2l9589
 18702                           
 18703                           ;usb_device.c: 496: {
 18704                           ;usb_device.c: 497: USBSuspend();
 18705  005702  EC26  F01B         	call	_USBSuspend	;wreg free
 18706                           
 18707                           ;usb_device.c: 498: (UIR &= 0xEF);
 18708  005706  9865               	bcf	3941,4,c	;volatile
 18709  005708                     i2l9589:
 18710                           
 18711                           ;usb_device.c: 499: }
 18712                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 18713  005708  AC65               	btfss	3941,6,c	;volatile
 18714  00570A  D014               	goto	i2l9605
 18715                           
 18716                           ;usb_device.c: 502: {
 18717                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 18718  00570C  AC64               	btfss	3940,6,c	;volatile
 18719  00570E  D00A               	goto	i2l9595
 18720                           
 18721                           ;usb_device.c: 504: {
 18722                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 18723  005710  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18724  005712  0E73               	movlw	115
 18725  005714  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18726  005716  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18727  005718  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18728  00571A  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18729  00571C  0E01               	movlw	1
 18730  00571E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18731  005720  EC16  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18732  005724                     i2l9595:
 18733                           
 18734                           ;usb_device.c: 506: }
 18735                           ;usb_device.c: 507: (UIR &= 0xBF);
 18736  005724  9C65               	bcf	3941,6,c	;volatile
 18737                           
 18738                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 18739  005726  501F               	movf	_USBStatusStageTimeoutCounter,w,c
 18740  005728  E001               	bz	i2l9601
 18741                           
 18742                           ;usb_device.c: 513: {
 18743                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 18744  00572A  061F               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 18745  00572C                     i2l9601:
 18746                           
 18747                           ;usb_device.c: 515: }
 18748                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 18749  00572C  501F               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 18750  00572E  E102               	bnz	i2l9605
 18751                           
 18752                           ;usb_device.c: 522: {
 18753                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 18754  005730  ECBD  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18755  005734                     i2l9605:
 18756                           
 18757                           ;usb_device.c: 524: }
 18758                           ;usb_device.c: 525: }
 18759                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 18760  005734  BA65               	btfsc	3941,5,c	;volatile
 18761  005736  AA64               	btfss	3940,5,c	;volatile
 18762  005738  D002               	goto	i2l9611
 18763                           
 18764                           ;usb_device.c: 528: {
 18765                           ;usb_device.c: 529: USBStallHandler();
 18766  00573A  EC93  F01D         	call	_USBStallHandler	;wreg free
 18767  00573E                     i2l9611:
 18768                           
 18769                           ;usb_device.c: 530: }
 18770                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 18771  00573E  B265               	btfsc	3941,1,c	;volatile
 18772  005740  A264               	btfss	3940,1,c	;volatile
 18773  005742  D00B               	goto	i2l9619
 18774                           
 18775                           ;usb_device.c: 533: {
 18776                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 18777  005744  0E7F               	movlw	127
 18778  005746  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18779  005748  683B               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18780  00574A  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18781  00574C  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18782  00574E  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18783  005750  0E01               	movlw	1
 18784  005752  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18785  005754  EC16  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18786                           
 18787                           ;usb_device.c: 535: {UEIR = 0;};
 18788  005758  6A67               	clrf	3943,c	;volatile
 18789  00575A                     i2l9619:
 18790                           
 18791                           ;usb_device.c: 536: }
 18792                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 18793  00575A  0E04               	movlw	4
 18794  00575C  0100               	movlb	0	; () banked
 18795  00575E  618A               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 18796  005760  D002               	goto	i2l1585
 18797                           
 18798                           ; BSR set to: 0
 18799                           ;usb_device.c: 544: {
 18800                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 18801  005762  94A4               	bcf	4004,2,c	;volatile
 18802                           
 18803                           ;usb_device.c: 546: return;
 18804  005764  0C04               	retlw	4
 18805  005766                     i2l1585:
 18806                           
 18807                           ; BSR set to: 0
 18808                           ;usb_device.c: 547: }
 18809                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 18810  005766  A664               	btfss	3940,3,c	;volatile
 18811  005768  D029               	goto	i2l1586
 18812                           
 18813                           ; BSR set to: 0
 18814                           ;usb_device.c: 553: {
 18815                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 18816  00576A  6A4E               	clrf	USBDeviceTasks@i,c
 18817  00576C                     i2l1587:
 18818                           
 18819                           ;usb_device.c: 555: {
 18820                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 18821  00576C  A665               	btfss	3941,3,c	;volatile
 18822  00576E  D026               	goto	i2l1586
 18823                           
 18824                           ;usb_device.c: 557: {
 18825                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 18826  005770  CF61 F02D          	movff	3937,_USTATcopy	;volatile
 18827                           
 18828                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 18829  005774  302D               	rrcf	_USTATcopy,w,c	;volatile
 18830  005776  32E8               	rrcf	wreg,f,c
 18831  005778  32E8               	rrcf	wreg,f,c
 18832  00577A  0B0F               	andlw	15
 18833  00577C  6E22               	movwf	_endpoint_number,c	;volatile
 18834                           
 18835                           ;usb_device.c: 562: (UIR &= 0xF7);
 18836  00577E  9665               	bcf	3941,3,c	;volatile
 18837                           
 18838                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 18839  005780  B42D               	btfsc	_USTATcopy,2,c	;volatile
 18840  005782  D003               	goto	i2l9639
 18841                           
 18842                           ;usb_device.c: 567: {
 18843                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 18844  005784  5022               	movf	_endpoint_number,w,c
 18845  005786  0F6D               	addlw	low _ep_data_out
 18846  005788  D002               	goto	L57
 18847  00578A                     i2l9639:
 18848                           
 18849                           ;usb_device.c: 570: else
 18850                           ;usb_device.c: 571: {
 18851                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 18852  00578A  5022               	movf	_endpoint_number,w,c
 18853  00578C  0F6A               	addlw	low _ep_data_in
 18854  00578E                     L57:
 18855  00578E  6ED9               	movwf	fsr2l,c
 18856  005790  6ADA               	clrf	fsr2h,c
 18857  005792  0100               	movlb	0	; () banked
 18858  005794  70DF               	btg	indf2,0,c
 18859                           
 18860                           ; BSR set to: 0
 18861                           ;usb_device.c: 573: }
 18862                           ;usb_device.c: 577: if(endpoint_number == 0)
 18863  005796  5022               	movf	_endpoint_number,w,c	;volatile
 18864  005798  E103               	bnz	i2l9645
 18865                           
 18866                           ; BSR set to: 0
 18867                           ;usb_device.c: 578: {
 18868                           ;usb_device.c: 579: USBCtrlEPService();
 18869  00579A  ECAE  F025         	call	_USBCtrlEPService	;wreg free
 18870                           
 18871                           ;usb_device.c: 580: }
 18872  00579E  D00A               	goto	i2l9647
 18873  0057A0                     i2l9645:
 18874                           
 18875                           ; BSR set to: 0
 18876                           ;usb_device.c: 581: else
 18877                           ;usb_device.c: 582: {
 18878                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 18879  0057A0  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18880  0057A2  0E72               	movlw	114
 18881  0057A4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18882  0057A6  0E2D               	movlw	low _USTATcopy
 18883  0057A8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18884  0057AA  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18885  0057AC  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18886  0057AE  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18887  0057B0  EC16  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18888  0057B4                     i2l9647:
 18889  0057B4  2A4E               	incf	USBDeviceTasks@i,f,c
 18890  0057B6  0E03               	movlw	3
 18891  0057B8  644E               	cpfsgt	USBDeviceTasks@i,c
 18892  0057BA  D7D8               	goto	i2l1587
 18893  0057BC                     i2l1586:
 18894                           
 18895                           ;usb_device.c: 589: }
 18896                           ;usb_device.c: 590: }
 18897                           ;usb_device.c: 591: }
 18898                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 18899  0057BC  94A4               	bcf	4004,2,c	;volatile
 18900  0057BE  0012               	return		;funcret
 18901  0057C0                     __end_of_USBDeviceTasks:
 18902                           	opt stack 0
 18903                           pclatu	equ	0xFFB
 18904                           pclath	equ	0xFFA
 18905                           tblptru	equ	0xFF8
 18906                           tblptrh	equ	0xFF7
 18907                           tblptrl	equ	0xFF6
 18908                           tablat	equ	0xFF5
 18909                           prodh	equ	0xFF4
 18910                           prodl	equ	0xFF3
 18911                           intcon	equ	0xFF2
 18912                           postinc0	equ	0xFEE
 18913                           wreg	equ	0xFE8
 18914                           indf1	equ	0xFE7
 18915                           postdec1	equ	0xFE5
 18916                           fsr1h	equ	0xFE2
 18917                           fsr1l	equ	0xFE1
 18918                           indf2	equ	0xFDF
 18919                           postinc2	equ	0xFDE
 18920                           postdec2	equ	0xFDD
 18921                           plusw2	equ	0xFDB
 18922                           fsr2h	equ	0xFDA
 18923                           fsr2l	equ	0xFD9
 18924                           status	equ	0xFD8
 18925                           
 18926 ;; *************** function i2_USBDeviceInit *****************
 18927 ;; Defined at:
 18928 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 18929 ;; Parameters:    Size  Location     Type
 18930 ;;		None
 18931 ;; Auto vars:     Size  Location     Type
 18932 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 18933 ;; Return value:  Size  Location     Type
 18934 ;;		None               void
 18935 ;; Registers used:
 18936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18937 ;; Tracked objects:
 18938 ;;		On entry : 0/0
 18939 ;;		On exit  : F/0
 18940 ;;		Unchanged: 0/0
 18941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18942 ;;      Params:         0       0       0       0       0       0       0       0       0
 18943 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18944 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18945 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18946 ;;Total ram usage:        1 bytes
 18947 ;; Hardware stack levels used:    1
 18948 ;; Hardware stack levels required when called:    1
 18949 ;; This function calls:
 18950 ;;		i2_memset
 18951 ;; This function is called by:
 18952 ;;		_USBDeviceTasks
 18953 ;; This function uses a non-reentrant model
 18954 ;;
 18955                           
 18956                           	psect	text88
 18957  00516E                     __ptext88:
 18958                           	opt stack 0
 18959  00516E                     i2_USBDeviceInit:
 18960                           	opt stack 17
 18961                           
 18962                           ;usb_device.c: 239: uint8_t i;
 18963                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 18964                           
 18965                           ;incstack = 0
 18966  00516E  94A3               	bcf	4003,2,c	;volatile
 18967                           
 18968                           ;usb_device.c: 244: {UEIR = 0;};
 18969  005170  6A67               	clrf	3943,c	;volatile
 18970                           
 18971                           ;usb_device.c: 247: {UIR = 0;};
 18972  005172  6A65               	clrf	3941,c	;volatile
 18973                           
 18974                           ;usb_device.c: 250: UEP0 = 0;
 18975  005174  6A6A               	clrf	3946,c	;volatile
 18976                           
 18977                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 18978  005176  0E6B               	movlw	107
 18979  005178  6E2E               	movwf	i2memset@p1,c
 18980  00517A  0E0F               	movlw	15
 18981  00517C  6E2F               	movwf	i2memset@p1+1,c
 18982  00517E  6A31               	clrf	i2memset@c+1,c
 18983  005180  6A30               	clrf	i2memset@c,c
 18984  005182  6A33               	clrf	i2memset@n+1,c
 18985  005184  0E02               	movlw	2
 18986  005186  6E32               	movwf	i2memset@n,c
 18987  005188  EC0D  F01C         	call	i2_memset	;wreg free
 18988                           
 18989                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 18990  00518C  0E16               	movlw	22
 18991  00518E  6E62               	movwf	3938,c	;volatile
 18992  005190  0E9F               	movlw	159
 18993  005192  6E66               	movwf	3942,c	;volatile
 18994  005194  0E7B               	movlw	123
 18995  005196  6E64               	movwf	3940,c	;volatile
 18996                           
 18997                           ;usb_device.c: 257: ;
 18998                           ;usb_device.c: 260: ;
 18999                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 19000  005198  6A36               	clrf	i2USBDeviceInit@i,c
 19001  00519A                     i2l9185:
 19002                           
 19003                           ;usb_device.c: 264: {
 19004                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 19005  00519A  5036               	movf	i2USBDeviceInit@i,w,c
 19006  00519C  0D04               	mullw	4
 19007  00519E  0E00               	movlw	0
 19008  0051A0  24F3               	addwf	prodl,w,c
 19009  0051A2  6ED9               	movwf	fsr2l,c
 19010  0051A4  0E04               	movlw	4
 19011  0051A6  20F4               	addwfc	prodh,w,c
 19012  0051A8  6EDA               	movwf	fsr2h,c
 19013  0051AA  6ADE               	clrf	postinc2,c
 19014  0051AC  6ADE               	clrf	postinc2,c
 19015  0051AE  6ADE               	clrf	postinc2,c
 19016  0051B0  6ADD               	clrf	postdec2,c
 19017  0051B2  2A36               	incf	i2USBDeviceInit@i,f,c
 19018  0051B4  0E0B               	movlw	11
 19019  0051B6  6436               	cpfsgt	i2USBDeviceInit@i,c
 19020  0051B8  D7F0               	goto	i2l9185
 19021                           
 19022                           ;usb_device.c: 266: }
 19023                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 19024  0051BA  8C60               	bsf	3936,6,c	;volatile
 19025                           
 19026                           ;usb_device.c: 272: UADDR = 0x00;
 19027  0051BC  6A63               	clrf	3939,c	;volatile
 19028                           
 19029                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 19030  0051BE  9860               	bcf	3936,4,c	;volatile
 19031                           
 19032                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 19033  0051C0  9C60               	bcf	3936,6,c	;volatile
 19034                           
 19035                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 19036  0051C2  D005               	goto	i2l9199
 19037  0051C4                     i2l9191:
 19038                           
 19039                           ;usb_device.c: 282: {
 19040                           ;usb_device.c: 283: (UIR &= 0xF7);
 19041  0051C4  9665               	bcf	3941,3,c	;volatile
 19042                           
 19043                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 19044  0051C6  6A0C               	clrf	_inPipes+3,c	;volatile
 19045                           
 19046                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 19047  0051C8  6A04               	clrf	_outPipes+3,c	;volatile
 19048                           
 19049                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 19050  0051CA  6A05               	clrf	_outPipes+4,c	;volatile
 19051  0051CC  6A06               	clrf	_outPipes+5,c	;volatile
 19052  0051CE                     i2l9199:
 19053  0051CE  B665               	btfsc	3941,3,c	;volatile
 19054  0051D0  D7F9               	goto	i2l9191
 19055                           
 19056                           ;usb_device.c: 288: }
 19057                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 19058  0051D2  0E01               	movlw	1
 19059  0051D4  0100               	movlb	0	; () banked
 19060  0051D6  6F8B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19061                           
 19062                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 19063  0051D8  6F8C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19064                           
 19065                           ; BSR set to: 0
 19066                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 19067  0051DA  6B88               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19068                           
 19069                           ; BSR set to: 0
 19070                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 19071  0051DC  6B89               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19072                           
 19073                           ; BSR set to: 0
 19074                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 19075  0051DE  6B87               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 19076                           
 19077                           ; BSR set to: 0
 19078                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 19079  0051E0  6A36               	clrf	i2USBDeviceInit@i,c
 19080  0051E2                     i2l9215:
 19081                           
 19082                           ;usb_device.c: 302: {
 19083                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 19084  0051E2  5036               	movf	i2USBDeviceInit@i,w,c
 19085  0051E4  0D02               	mullw	2
 19086  0051E6  50F3               	movf	prodl,w,c
 19087  0051E8  0F0F               	addlw	low _pBDTEntryIn
 19088  0051EA  6ED9               	movwf	fsr2l,c
 19089  0051EC  6ADA               	clrf	fsr2h,c
 19090  0051EE  6ADE               	clrf	postinc2,c
 19091  0051F0  6ADD               	clrf	postdec2,c
 19092                           
 19093                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 19094  0051F2  5036               	movf	i2USBDeviceInit@i,w,c
 19095  0051F4  0D02               	mullw	2
 19096  0051F6  50F3               	movf	prodl,w,c
 19097  0051F8  0F60               	addlw	low _pBDTEntryOut
 19098  0051FA  6ED9               	movwf	fsr2l,c
 19099  0051FC  6ADA               	clrf	fsr2h,c
 19100  0051FE  6ADE               	clrf	postinc2,c
 19101  005200  6ADD               	clrf	postdec2,c
 19102                           
 19103                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 19104  005202  5036               	movf	i2USBDeviceInit@i,w,c
 19105  005204  0F6A               	addlw	low _ep_data_in
 19106  005206  6ED9               	movwf	fsr2l,c
 19107  005208  6ADA               	clrf	fsr2h,c
 19108  00520A  6ADF               	clrf	indf2,c
 19109                           
 19110                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 19111  00520C  5036               	movf	i2USBDeviceInit@i,w,c
 19112  00520E  0F6D               	addlw	low _ep_data_out
 19113  005210  6ED9               	movwf	fsr2l,c
 19114  005212  6ADA               	clrf	fsr2h,c
 19115  005214  6ADF               	clrf	indf2,c
 19116  005216  2A36               	incf	i2USBDeviceInit@i,f,c
 19117  005218  0E02               	movlw	2
 19118  00521A  6436               	cpfsgt	i2USBDeviceInit@i,c
 19119  00521C  D7E2               	goto	i2l9215
 19120                           
 19121                           ;usb_device.c: 307: }
 19122                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 19123  00521E  0E08               	movlw	8
 19124  005220  6E0F               	movwf	_pBDTEntryIn,c
 19125  005222  0E04               	movlw	4
 19126  005224  6E10               	movwf	_pBDTEntryIn+1,c
 19127                           
 19128                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 19129  005226  0E16               	movlw	22
 19130  005228  6E6A               	movwf	3946,c	;volatile
 19131                           
 19132                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 19133  00522A  0E04               	movlw	4
 19134  00522C  0104               	movlb	4	; () banked
 19135  00522E  6F03               	movwf	3,b	;volatile
 19136  005230  0E30               	movlw	48
 19137  005232  6F02               	movwf	2,b	;volatile
 19138                           
 19139                           ; BSR set to: 4
 19140                           ;usb_device.c: 315: BDT[0].CNT = 8;
 19141  005234  0E08               	movlw	8
 19142  005236  6F01               	movwf	1,b	;volatile
 19143                           
 19144                           ; BSR set to: 4
 19145                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 19146  005238  0E04               	movlw	4
 19147  00523A  6F00               	movwf	0,b	;volatile
 19148                           
 19149                           ; BSR set to: 4
 19150                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 19151  00523C  8F00               	bsf	0,7,b	;volatile
 19152                           
 19153                           ; BSR set to: 4
 19154                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 19155  00523E  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 19156                           
 19157                           ; BSR set to: 4
 19158                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 19159  005240  0100               	movlb	0	; () banked
 19160  005242  6B8A               	clrf	_USBDeviceState& (0+255),b	;volatile
 19161                           
 19162                           ; BSR set to: 0
 19163  005244  0012               	return		;funcret
 19164  005246                     __end_ofi2_USBDeviceInit:
 19165                           	opt stack 0
 19166                           pclatu	equ	0xFFB
 19167                           pclath	equ	0xFFA
 19168                           tblptru	equ	0xFF8
 19169                           tblptrh	equ	0xFF7
 19170                           tblptrl	equ	0xFF6
 19171                           tablat	equ	0xFF5
 19172                           prodh	equ	0xFF4
 19173                           prodl	equ	0xFF3
 19174                           intcon	equ	0xFF2
 19175                           postinc0	equ	0xFEE
 19176                           wreg	equ	0xFE8
 19177                           indf1	equ	0xFE7
 19178                           postdec1	equ	0xFE5
 19179                           fsr1h	equ	0xFE2
 19180                           fsr1l	equ	0xFE1
 19181                           indf2	equ	0xFDF
 19182                           postinc2	equ	0xFDE
 19183                           postdec2	equ	0xFDD
 19184                           plusw2	equ	0xFDB
 19185                           fsr2h	equ	0xFDA
 19186                           fsr2l	equ	0xFD9
 19187                           status	equ	0xFD8
 19188                           
 19189 ;; *************** function _USBWakeFromSuspend *****************
 19190 ;; Defined at:
 19191 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 19192 ;; Parameters:    Size  Location     Type
 19193 ;;		None
 19194 ;; Auto vars:     Size  Location     Type
 19195 ;;		None
 19196 ;; Return value:  Size  Location     Type
 19197 ;;		None               void
 19198 ;; Registers used:
 19199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19200 ;; Tracked objects:
 19201 ;;		On entry : F/0
 19202 ;;		On exit  : 0/0
 19203 ;;		Unchanged: 0/0
 19204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19205 ;;      Params:         0       0       0       0       0       0       0       0       0
 19206 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19207 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19208 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19209 ;;Total ram usage:        0 bytes
 19210 ;; Hardware stack levels used:    1
 19211 ;; Hardware stack levels required when called:    5
 19212 ;; This function calls:
 19213 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19214 ;; This function is called by:
 19215 ;;		_USBDeviceTasks
 19216 ;; This function uses a non-reentrant model
 19217 ;;
 19218                           
 19219                           	psect	text89
 19220  0036C6                     __ptext89:
 19221                           	opt stack 0
 19222  0036C6                     _USBWakeFromSuspend:
 19223                           	opt stack 13
 19224                           
 19225                           ; BSR set to: 0
 19226                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 19227                           
 19228                           ; BSR set to: 0
 19229                           ;incstack = 0
 19230  0036C6  6B87               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 19231                           
 19232                           ; BSR set to: 0
 19233                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 19234  0036C8  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19235  0036CA  0E74               	movlw	116
 19236  0036CC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19237  0036CE  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19238  0036D0  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19239  0036D2  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19240  0036D4  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19241  0036D6  EC16  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19242                           
 19243                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 19244  0036DA  9260               	bcf	3936,1,c	;volatile
 19245                           
 19246                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 19247  0036DC  9464               	bcf	3940,2,c	;volatile
 19248                           
 19249                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 19250  0036DE  D001               	goto	i2l9109
 19251  0036E0                     i2l9107:
 19252                           
 19253                           ;usb_device.c: 1977: {
 19254                           ;usb_device.c: 1978: (UIR &= 0xFB);
 19255  0036E0  9465               	bcf	3941,2,c	;volatile
 19256  0036E2                     i2l9109:
 19257  0036E2  A465               	btfss	3941,2,c	;volatile
 19258  0036E4  0012               	return		;funcret
 19259  0036E6  D7FC               	goto	i2l9107
 19260  0036E8                     __end_of_USBWakeFromSuspend:
 19261                           	opt stack 0
 19262                           pclatu	equ	0xFFB
 19263                           pclath	equ	0xFFA
 19264                           tblptru	equ	0xFF8
 19265                           tblptrh	equ	0xFF7
 19266                           tblptrl	equ	0xFF6
 19267                           tablat	equ	0xFF5
 19268                           prodh	equ	0xFF4
 19269                           prodl	equ	0xFF3
 19270                           intcon	equ	0xFF2
 19271                           postinc0	equ	0xFEE
 19272                           wreg	equ	0xFE8
 19273                           indf1	equ	0xFE7
 19274                           postdec1	equ	0xFE5
 19275                           fsr1h	equ	0xFE2
 19276                           fsr1l	equ	0xFE1
 19277                           indf2	equ	0xFDF
 19278                           postinc2	equ	0xFDE
 19279                           postdec2	equ	0xFDD
 19280                           plusw2	equ	0xFDB
 19281                           fsr2h	equ	0xFDA
 19282                           fsr2l	equ	0xFD9
 19283                           status	equ	0xFD8
 19284                           
 19285 ;; *************** function _USBSuspend *****************
 19286 ;; Defined at:
 19287 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 19288 ;; Parameters:    Size  Location     Type
 19289 ;;		None
 19290 ;; Auto vars:     Size  Location     Type
 19291 ;;		None
 19292 ;; Return value:  Size  Location     Type
 19293 ;;		None               void
 19294 ;; Registers used:
 19295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19296 ;; Tracked objects:
 19297 ;;		On entry : 0/0
 19298 ;;		On exit  : 0/0
 19299 ;;		Unchanged: 0/0
 19300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19301 ;;      Params:         0       0       0       0       0       0       0       0       0
 19302 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19303 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19304 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19305 ;;Total ram usage:        0 bytes
 19306 ;; Hardware stack levels used:    1
 19307 ;; Hardware stack levels required when called:    5
 19308 ;; This function calls:
 19309 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19310 ;; This function is called by:
 19311 ;;		_USBDeviceTasks
 19312 ;; This function uses a non-reentrant model
 19313 ;;
 19314                           
 19315                           	psect	text90
 19316  00364C                     __ptext90:
 19317                           	opt stack 0
 19318  00364C                     _USBSuspend:
 19319                           	opt stack 13
 19320                           
 19321                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 19322                           
 19323                           ;incstack = 0
 19324  00364C  8464               	bsf	3940,2,c	;volatile
 19325                           
 19326                           ;usb_device.c: 1915: (UIR &= 0xEF);
 19327  00364E  9865               	bcf	3941,4,c	;volatile
 19328                           
 19329                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 19330  003650  8260               	bsf	3936,1,c	;volatile
 19331                           
 19332                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 19333  003652  0E01               	movlw	1
 19334  003654  0100               	movlb	0	; () banked
 19335  003656  6F87               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19336                           
 19337                           ; BSR set to: 0
 19338                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 19339  003658  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19340  00365A  0E75               	movlw	117
 19341  00365C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19342  00365E  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19343  003660  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19344  003662  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19345  003664  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19346  003666  EF16  F01E         	goto	i2l6439	;wreg free
 19347  00366A                     __end_of_USBSuspend:
 19348                           	opt stack 0
 19349                           pclatu	equ	0xFFB
 19350                           pclath	equ	0xFFA
 19351                           tblptru	equ	0xFF8
 19352                           tblptrh	equ	0xFF7
 19353                           tblptrl	equ	0xFF6
 19354                           tablat	equ	0xFF5
 19355                           prodh	equ	0xFF4
 19356                           prodl	equ	0xFF3
 19357                           intcon	equ	0xFF2
 19358                           postinc0	equ	0xFEE
 19359                           wreg	equ	0xFE8
 19360                           indf1	equ	0xFE7
 19361                           postdec1	equ	0xFE5
 19362                           fsr1h	equ	0xFE2
 19363                           fsr1l	equ	0xFE1
 19364                           indf2	equ	0xFDF
 19365                           postinc2	equ	0xFDE
 19366                           postdec2	equ	0xFDD
 19367                           plusw2	equ	0xFDB
 19368                           fsr2h	equ	0xFDA
 19369                           fsr2l	equ	0xFD9
 19370                           status	equ	0xFD8
 19371                           
 19372 ;; *************** function _USBStallHandler *****************
 19373 ;; Defined at:
 19374 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 19375 ;; Parameters:    Size  Location     Type
 19376 ;;		None
 19377 ;; Auto vars:     Size  Location     Type
 19378 ;;		None
 19379 ;; Return value:  Size  Location     Type
 19380 ;;		None               void
 19381 ;; Registers used:
 19382 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19383 ;; Tracked objects:
 19384 ;;		On entry : 0/0
 19385 ;;		On exit  : 0/0
 19386 ;;		Unchanged: 0/0
 19387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19388 ;;      Params:         0       0       0       0       0       0       0       0       0
 19389 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19390 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19391 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19392 ;;Total ram usage:        1 bytes
 19393 ;; Hardware stack levels used:    1
 19394 ;; This function calls:
 19395 ;;		Nothing
 19396 ;; This function is called by:
 19397 ;;		_USBDeviceTasks
 19398 ;; This function uses a non-reentrant model
 19399 ;;
 19400                           
 19401                           	psect	text91
 19402  003B26                     __ptext91:
 19403                           	opt stack 0
 19404  003B26                     _USBStallHandler:
 19405                           	opt stack 18
 19406                           
 19407                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 19408                           
 19409                           ;incstack = 0
 19410  003B26  A06A               	btfss	3946,0,c	;volatile
 19411  003B28  D01B               	goto	i2l1725
 19412                           
 19413                           ;usb_device.c: 1859: {
 19414                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 19415  003B2A  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19416  003B2E  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19417  003B32  0E80               	movlw	128
 19418  003B34  18DE               	xorwf	postinc2,w,c
 19419  003B36  E113               	bnz	i2l9131
 19420  003B38  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19421  003B3C  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19422  003B40  0E84               	movlw	132
 19423  003B42  18DE               	xorwf	postinc2,w,c
 19424  003B44  E10C               	bnz	i2l9131
 19425                           
 19426                           ;usb_device.c: 1862: {
 19427                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19428  003B46  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19429  003B4A  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19430  003B4E  0E0C               	movlw	12
 19431  003B50  6EDF               	movwf	indf2,c
 19432                           
 19433                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19434  003B52  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19435  003B56  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19436  003B5A  0E00               	movlw	0
 19437  003B5C  8EDB               	bsf	plusw2,7,c
 19438  003B5E                     i2l9131:
 19439                           
 19440                           ;usb_device.c: 1866: }
 19441                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 19442  003B5E  906A               	bcf	3946,0,c	;volatile
 19443  003B60                     i2l1725:
 19444                           
 19445                           ;usb_device.c: 1868: }
 19446                           ;usb_device.c: 1870: (UIR &= 0xDF);
 19447  003B60  9A65               	bcf	3941,5,c	;volatile
 19448  003B62  0012               	return		;funcret
 19449  003B64                     __end_of_USBStallHandler:
 19450                           	opt stack 0
 19451                           pclatu	equ	0xFFB
 19452                           pclath	equ	0xFFA
 19453                           tblptru	equ	0xFF8
 19454                           tblptrh	equ	0xFF7
 19455                           tblptrl	equ	0xFF6
 19456                           tablat	equ	0xFF5
 19457                           prodh	equ	0xFF4
 19458                           prodl	equ	0xFF3
 19459                           intcon	equ	0xFF2
 19460                           postinc0	equ	0xFEE
 19461                           wreg	equ	0xFE8
 19462                           indf1	equ	0xFE7
 19463                           postdec1	equ	0xFE5
 19464                           fsr1h	equ	0xFE2
 19465                           fsr1l	equ	0xFE1
 19466                           indf2	equ	0xFDF
 19467                           postinc2	equ	0xFDE
 19468                           postdec2	equ	0xFDD
 19469                           plusw2	equ	0xFDB
 19470                           fsr2h	equ	0xFDA
 19471                           fsr2l	equ	0xFD9
 19472                           status	equ	0xFD8
 19473                           
 19474 ;; *************** function _USBCtrlEPService *****************
 19475 ;; Defined at:
 19476 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 19477 ;; Parameters:    Size  Location     Type
 19478 ;;		None
 19479 ;; Auto vars:     Size  Location     Type
 19480 ;;  setup_cnt       1   31[COMRAM] unsigned char 
 19481 ;; Return value:  Size  Location     Type
 19482 ;;		None               void
 19483 ;; Registers used:
 19484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19485 ;; Tracked objects:
 19486 ;;		On entry : F/0
 19487 ;;		On exit  : 0/0
 19488 ;;		Unchanged: 0/0
 19489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19490 ;;      Params:         0       0       0       0       0       0       0       0       0
 19491 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19492 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19493 ;;      Totals:         3       0       0       0       0       0       0       0       0
 19494 ;;Total ram usage:        3 bytes
 19495 ;; Hardware stack levels used:    1
 19496 ;; Hardware stack levels required when called:    8
 19497 ;; This function calls:
 19498 ;;		_USBCtrlTrfInHandler
 19499 ;;		_USBCtrlTrfOutHandler
 19500 ;;		_USBCtrlTrfSetupHandler
 19501 ;; This function is called by:
 19502 ;;		_USBDeviceTasks
 19503 ;; This function uses a non-reentrant model
 19504 ;;
 19505                           
 19506                           	psect	text92
 19507  004B5C                     __ptext92:
 19508                           	opt stack 0
 19509  004B5C                     _USBCtrlEPService:
 19510                           	opt stack 10
 19511                           
 19512                           ; BSR set to: 0
 19513                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 19514                           
 19515                           ;incstack = 0
 19516  004B5C  0E2D               	movlw	45
 19517  004B5E  6E1F               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 19518                           
 19519                           ; BSR set to: 0
 19520                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 19521  004B60  C02D  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19522  004B64  0EFD               	movlw	253
 19523  004B66  164B               	andwf	??_USBCtrlEPService,f,c
 19524  004B68  E14B               	bnz	i2l9165
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;usb_device.c: 2013: {
 19528                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 19529  004B6A  90D8               	bcf	status,0,c
 19530  004B6C  302D               	rrcf	_USTATcopy,w,c	;volatile
 19531  004B6E  0B3F               	andlw	63
 19532  004B70  0D04               	mullw	4
 19533  004B72  0E00               	movlw	0
 19534  004B74  24F3               	addwf	prodl,w,c
 19535  004B76  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 19536  004B78  0E04               	movlw	4
 19537  004B7A  20F4               	addwfc	prodh,w,c
 19538  004B7C  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 19539                           
 19540                           ; BSR set to: 0
 19541                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 19542  004B7E  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 19543  004B82  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 19544                           
 19545                           ; BSR set to: 0
 19546                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 19547  004B86  0E04               	movlw	4
 19548  004B88  1A17               	xorwf	_pBDTEntryEP0OutNext,f,c
 19549                           
 19550                           ; BSR set to: 0
 19551                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 19552  004B8A  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19553  004B8E  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19554  004B92  30DF               	rrcf	indf2,w,c
 19555  004B94  32E8               	rrcf	wreg,f,c
 19556  004B96  0B0F               	andlw	15
 19557  004B98  0A0D               	xorlw	13
 19558  004B9A  E002 EFAB  F01E    	bnz	_USBCtrlTrfOutHandler
 19559                           
 19560                           ; BSR set to: 0
 19561                           ;usb_device.c: 2025: {
 19562                           ;usb_device.c: 2026: unsigned char setup_cnt;
 19563                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 19564  004BA0  6A4D               	clrf	USBCtrlEPService@setup_cnt,c
 19565  004BA2                     i2l9151:
 19566                           
 19567                           ; BSR set to: 0
 19568                           ;usb_device.c: 2033: {
 19569                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 19570  004BA2  EE20 F002          	lfsr	2,2
 19571  004BA6  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19572  004BA8  26D9               	addwf	fsr2l,f,c
 19573  004BAA  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19574  004BAC  22DA               	addwfc	fsr2h,f,c
 19575  004BAE  CFDE F04B          	movff	postinc2,??_USBCtrlEPService
 19576  004BB2  CFDD F04C          	movff	postdec2,??_USBCtrlEPService+1
 19577  004BB6  C04B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 19578  004BBA  C04C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 19579  004BBE  0E30               	movlw	48
 19580  004BC0  244D               	addwf	USBCtrlEPService@setup_cnt,w,c
 19581  004BC2  6EE1               	movwf	fsr1l,c
 19582  004BC4  6AE2               	clrf	fsr1h,c
 19583  004BC6  0E04               	movlw	4
 19584  004BC8  22E2               	addwfc	fsr1h,f,c
 19585  004BCA  CFDF FFE7          	movff	indf2,indf1
 19586                           
 19587                           ; BSR set to: 0
 19588                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 19589  004BCE  EE20 F002          	lfsr	2,2
 19590  004BD2  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19591  004BD4  26D9               	addwf	fsr2l,f,c
 19592  004BD6  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19593  004BD8  22DA               	addwfc	fsr2h,f,c
 19594  004BDA  2ADE               	incf	postinc2,f,c
 19595  004BDC  0E00               	movlw	0
 19596  004BDE  22DD               	addwfc	postdec2,f,c
 19597                           
 19598                           ; BSR set to: 0
 19599  004BE0  2A4D               	incf	USBCtrlEPService@setup_cnt,f,c
 19600                           
 19601                           ; BSR set to: 0
 19602  004BE2  0E07               	movlw	7
 19603  004BE4  644D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 19604  004BE6  D7DD               	goto	i2l9151
 19605                           
 19606                           ; BSR set to: 0
 19607                           ;usb_device.c: 2036: }
 19608                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19609  004BE8  EE20 F002          	lfsr	2,2
 19610  004BEC  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19611  004BEE  26D9               	addwf	fsr2l,f,c
 19612  004BF0  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19613  004BF2  22DA               	addwfc	fsr2h,f,c
 19614  004BF4  0E30               	movlw	48
 19615  004BF6  6EDE               	movwf	postinc2,c
 19616  004BF8  0E04               	movlw	4
 19617  004BFA  6EDD               	movwf	postdec2,c
 19618                           
 19619                           ; BSR set to: 0
 19620                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 19621  004BFC  EFAA  F01F         	goto	_USBCtrlTrfSetupHandler	;wreg free
 19622  004C00                     i2l9165:
 19623                           
 19624                           ; BSR set to: 0
 19625                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 19626  004C00  502D               	movf	_USTATcopy,w,c	;volatile
 19627  004C02  0BFD               	andlw	253
 19628  004C04  0A04               	xorlw	4
 19629  004C06  B4D8               	btfsc	status,2,c
 19630                           
 19631                           ; BSR set to: 0
 19632                           ;usb_device.c: 2049: {
 19633                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 19634  004C08  EC7C  F027         	call	_USBCtrlTrfInHandler	;wreg free
 19635  004C0C  0012               	return		;funcret
 19636  004C0E                     __end_of_USBCtrlEPService:
 19637                           	opt stack 0
 19638                           pclatu	equ	0xFFB
 19639                           pclath	equ	0xFFA
 19640                           tblptru	equ	0xFF8
 19641                           tblptrh	equ	0xFF7
 19642                           tblptrl	equ	0xFF6
 19643                           tablat	equ	0xFF5
 19644                           prodh	equ	0xFF4
 19645                           prodl	equ	0xFF3
 19646                           intcon	equ	0xFF2
 19647                           postinc0	equ	0xFEE
 19648                           wreg	equ	0xFE8
 19649                           indf1	equ	0xFE7
 19650                           postdec1	equ	0xFE5
 19651                           fsr1h	equ	0xFE2
 19652                           fsr1l	equ	0xFE1
 19653                           indf2	equ	0xFDF
 19654                           postinc2	equ	0xFDE
 19655                           postdec2	equ	0xFDD
 19656                           plusw2	equ	0xFDB
 19657                           fsr2h	equ	0xFDA
 19658                           fsr2l	equ	0xFD9
 19659                           status	equ	0xFD8
 19660                           
 19661 ;; *************** function _USBCtrlTrfSetupHandler *****************
 19662 ;; Defined at:
 19663 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 19664 ;; Parameters:    Size  Location     Type
 19665 ;;		None
 19666 ;; Auto vars:     Size  Location     Type
 19667 ;;		None
 19668 ;; Return value:  Size  Location     Type
 19669 ;;		None               void
 19670 ;; Registers used:
 19671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19672 ;; Tracked objects:
 19673 ;;		On entry : F/0
 19674 ;;		On exit  : 0/0
 19675 ;;		Unchanged: 0/0
 19676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19677 ;;      Params:         0       0       0       0       0       0       0       0       0
 19678 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19679 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19680 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19681 ;;Total ram usage:        0 bytes
 19682 ;; Hardware stack levels used:    1
 19683 ;; Hardware stack levels required when called:    7
 19684 ;; This function calls:
 19685 ;;		_USBCheckStdRequest
 19686 ;;		_USBCtrlEPServiceComplete
 19687 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19688 ;; This function is called by:
 19689 ;;		_USBCtrlEPService
 19690 ;; This function uses a non-reentrant model
 19691 ;;
 19692                           
 19693                           	psect	text93
 19694  003F54                     __ptext93:
 19695                           	opt stack 0
 19696  003F54                     _USBCtrlTrfSetupHandler:
 19697                           	opt stack 10
 19698                           
 19699                           ; BSR set to: 0
 19700                           ;usb_device.c: 2102: shortPacketStatus = 0;
 19701                           
 19702                           ;incstack = 0
 19703  003F54  6A2B               	clrf	_shortPacketStatus,c	;volatile
 19704                           
 19705                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 19706  003F56  6A1E               	clrf	_USBDeferStatusStagePacket,c	;volatile
 19707                           
 19708                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 19709  003F58  6B88               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19710                           
 19711                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 19712  003F5A  6B89               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19713                           
 19714                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 19715  003F5C  6B86               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 19716                           
 19717                           ;usb_device.c: 2107: controlTransferState = 0;
 19718  003F5E  6A21               	clrf	_controlTransferState,c	;volatile
 19719                           
 19720                           ; BSR set to: 0
 19721                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 19722  003F60  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19723  003F64  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19724  003F68  0E7F               	movlw	127
 19725  003F6A  16DF               	andwf	indf2,f,c
 19726                           
 19727                           ; BSR set to: 0
 19728                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19729  003F6C  0E04               	movlw	4
 19730  003F6E  1A0F               	xorwf	_pBDTEntryIn,f,c
 19731                           
 19732                           ; BSR set to: 0
 19733                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 19734  003F70  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19735  003F74  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19736  003F78  0E7F               	movlw	127
 19737  003F7A  16DF               	andwf	indf2,f,c
 19738                           
 19739                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19740  003F7C  0E04               	movlw	4
 19741  003F7E  1A0F               	xorwf	_pBDTEntryIn,f,c
 19742                           
 19743                           ; BSR set to: 0
 19744                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 19745  003F80  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19746  003F84  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19747  003F88  0E7F               	movlw	127
 19748  003F8A  16DF               	andwf	indf2,f,c
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 19752  003F8C  6A0C               	clrf	_inPipes+3,c	;volatile
 19753                           
 19754                           ; BSR set to: 0
 19755                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 19756  003F8E  6A0D               	clrf	_inPipes+4,c	;volatile
 19757  003F90  6A0E               	clrf	_inPipes+5,c	;volatile
 19758                           
 19759                           ; BSR set to: 0
 19760                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 19761  003F92  6A04               	clrf	_outPipes+3,c	;volatile
 19762                           
 19763                           ; BSR set to: 0
 19764                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 19765  003F94  6A05               	clrf	_outPipes+4,c	;volatile
 19766  003F96  6A06               	clrf	_outPipes+5,c	;volatile
 19767                           
 19768                           ; BSR set to: 0
 19769                           ;usb_device.c: 2131: USBCheckStdRequest();
 19770  003F98  EC64  F024         	call	_USBCheckStdRequest	;wreg free
 19771                           
 19772                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 19773  003F9C  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19774  003F9E  0E03               	movlw	3
 19775  003FA0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19776  003FA2  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19777  003FA4  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19778  003FA6  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19779  003FA8  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19780  003FAA  EC16  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19781                           
 19782                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 19783  003FAE  EFFE  F029         	goto	_USBCtrlEPServiceComplete	;wreg free
 19784  003FB2                     __end_of_USBCtrlTrfSetupHandler:
 19785                           	opt stack 0
 19786                           pclatu	equ	0xFFB
 19787                           pclath	equ	0xFFA
 19788                           tblptru	equ	0xFF8
 19789                           tblptrh	equ	0xFF7
 19790                           tblptrl	equ	0xFF6
 19791                           tablat	equ	0xFF5
 19792                           prodh	equ	0xFF4
 19793                           prodl	equ	0xFF3
 19794                           intcon	equ	0xFF2
 19795                           postinc0	equ	0xFEE
 19796                           wreg	equ	0xFE8
 19797                           indf1	equ	0xFE7
 19798                           postdec1	equ	0xFE5
 19799                           fsr1h	equ	0xFE2
 19800                           fsr1l	equ	0xFE1
 19801                           indf2	equ	0xFDF
 19802                           postinc2	equ	0xFDE
 19803                           postdec2	equ	0xFDD
 19804                           plusw2	equ	0xFDB
 19805                           fsr2h	equ	0xFDA
 19806                           fsr2l	equ	0xFD9
 19807                           status	equ	0xFD8
 19808                           
 19809 ;; *************** function _USBCtrlEPServiceComplete *****************
 19810 ;; Defined at:
 19811 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 19812 ;; Parameters:    Size  Location     Type
 19813 ;;		None
 19814 ;; Auto vars:     Size  Location     Type
 19815 ;;		None
 19816 ;; Return value:  Size  Location     Type
 19817 ;;		None               void
 19818 ;; Registers used:
 19819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19820 ;; Tracked objects:
 19821 ;;		On entry : 0/0
 19822 ;;		On exit  : 0/0
 19823 ;;		Unchanged: 0/0
 19824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19825 ;;      Params:         0       0       0       0       0       0       0       0       0
 19826 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19827 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19828 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19829 ;;Total ram usage:        0 bytes
 19830 ;; Hardware stack levels used:    1
 19831 ;; Hardware stack levels required when called:    2
 19832 ;; This function calls:
 19833 ;;		_USBCtrlEPAllowDataStage
 19834 ;;		_USBCtrlEPAllowStatusStage
 19835 ;; This function is called by:
 19836 ;;		_USBCtrlTrfSetupHandler
 19837 ;; This function uses a non-reentrant model
 19838 ;;
 19839                           
 19840                           	psect	text94
 19841  0053FC                     __ptext94:
 19842                           	opt stack 0
 19843  0053FC                     _USBCtrlEPServiceComplete:
 19844                           	opt stack 14
 19845                           
 19846                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 19847                           
 19848                           ;incstack = 0
 19849  0053FC  9860               	bcf	3936,4,c	;volatile
 19850                           
 19851                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 19852  0053FE  BE0C               	btfsc	_inPipes+3,7,c	;volatile
 19853  005400  D037               	goto	i2l1649
 19854                           
 19855                           ;usb_device.c: 1295: {
 19856                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 19857  005402  AE04               	btfss	_outPipes+3,7,c	;volatile
 19858  005404  D00A               	goto	i2l7045
 19859                           
 19860                           ;usb_device.c: 1297: {
 19861                           ;usb_device.c: 1298: controlTransferState = 2;
 19862  005406  0E02               	movlw	2
 19863  005408  6E21               	movwf	_controlTransferState,c	;volatile
 19864                           
 19865                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 19866  00540A  0100               	movlb	0	; () banked
 19867  00540C  5189               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 19868  00540E  E102               	bnz	i2l7041
 19869                           
 19870                           ; BSR set to: 0
 19871                           ;usb_device.c: 1310: {
 19872                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 19873  005410  EC3C  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
 19874  005414                     i2l7041:
 19875                           
 19876                           ; BSR set to: 0
 19877                           ;usb_device.c: 1312: }
 19878                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 19879  005414  6B8C               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19880                           
 19881                           ; BSR set to: 0
 19882                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 19883  005416  6B8B               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19884                           
 19885                           ;usb_device.c: 1318: }
 19886  005418  0012               	return	
 19887  00541A                     i2l7045:
 19888                           
 19889                           ;usb_device.c: 1319: else
 19890                           ;usb_device.c: 1320: {
 19891                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 19892  00541A  EE20 F001          	lfsr	2,1
 19893  00541E  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19894  005420  26D9               	addwf	fsr2l,f,c
 19895  005422  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19896  005424  22DA               	addwfc	fsr2h,f,c
 19897  005426  0E08               	movlw	8
 19898  005428  6EDF               	movwf	indf2,c
 19899                           
 19900                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19901  00542A  EE20 F002          	lfsr	2,2
 19902  00542E  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19903  005430  26D9               	addwf	fsr2l,f,c
 19904  005432  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19905  005434  22DA               	addwfc	fsr2h,f,c
 19906  005436  0E30               	movlw	48
 19907  005438  6EDE               	movwf	postinc2,c
 19908  00543A  0E04               	movlw	4
 19909  00543C  6EDD               	movwf	postdec2,c
 19910                           
 19911                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19912  00543E  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19913  005442  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19914  005446  0E0C               	movlw	12
 19915  005448  6EDF               	movwf	indf2,c
 19916                           
 19917                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19918  00544A  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19919  00544E  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19920  005452  0E00               	movlw	0
 19921  005454  8EDB               	bsf	plusw2,7,c
 19922                           
 19923                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 19924  005456  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19925  00545A  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19926  00545E  0E04               	movlw	4
 19927  005460  6EDF               	movwf	indf2,c
 19928                           
 19929                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19930  005462  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19931  005466  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19932  00546A  0E00               	movlw	0
 19933  00546C  8EDB               	bsf	plusw2,7,c
 19934  00546E  0C00               	retlw	0
 19935  005470                     i2l1649:
 19936                           
 19937                           ;usb_device.c: 1333: else
 19938                           ;usb_device.c: 1334: {
 19939                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 19940  005470  0104               	movlb	4	; () banked
 19941  005472  AF30               	btfss	48,7,b	;volatile
 19942  005474  D00E               	goto	i2l7065
 19943                           
 19944                           ; BSR set to: 4
 19945                           ;usb_device.c: 1336: {
 19946                           ;usb_device.c: 1337: controlTransferState = 1;
 19947  005476  0E01               	movlw	1
 19948  005478  6E21               	movwf	_controlTransferState,c	;volatile
 19949                           
 19950                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 19951  00547A  0100               	movlb	0	; () banked
 19952  00547C  5188               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 19953  00547E  E102               	bnz	i2l7057
 19954                           
 19955                           ; BSR set to: 0
 19956                           ;usb_device.c: 1352: {
 19957                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 19958  005480  EC3C  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
 19959  005484                     i2l7057:
 19960                           
 19961                           ; BSR set to: 0
 19962                           ;usb_device.c: 1354: }
 19963                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 19964  005484  6B8C               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19965                           
 19966                           ; BSR set to: 0
 19967                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 19968  005486  6B8B               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19969                           
 19970                           ; BSR set to: 0
 19971                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 19972  005488  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 19973  00548A  A4D8               	btfss	status,2,c
 19974  00548C  0012               	return	
 19975                           
 19976                           ; BSR set to: 0
 19977                           ;usb_device.c: 1379: {
 19978                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 19979  00548E  EFBD  F026         	goto	_USBCtrlEPAllowStatusStage	;wreg free
 19980  005492                     i2l7065:
 19981                           
 19982                           ; BSR set to: 4
 19983                           ;usb_device.c: 1383: else
 19984                           ;usb_device.c: 1384: {
 19985                           ;usb_device.c: 1395: controlTransferState = 2;
 19986  005492  0E02               	movlw	2
 19987  005494  6E21               	movwf	_controlTransferState,c	;volatile
 19988                           
 19989                           ; BSR set to: 4
 19990                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 19991  005496  EE20 F001          	lfsr	2,1
 19992  00549A  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19993  00549C  26D9               	addwf	fsr2l,f,c
 19994  00549E  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19995  0054A0  22DA               	addwfc	fsr2h,f,c
 19996  0054A2  0E08               	movlw	8
 19997  0054A4  6EDF               	movwf	indf2,c
 19998                           
 19999                           ; BSR set to: 4
 20000                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20001  0054A6  EE20 F002          	lfsr	2,2
 20002  0054AA  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20003  0054AC  26D9               	addwf	fsr2l,f,c
 20004  0054AE  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20005  0054B0  22DA               	addwfc	fsr2h,f,c
 20006  0054B2  0E30               	movlw	48
 20007  0054B4  6EDE               	movwf	postinc2,c
 20008  0054B6  0E04               	movlw	4
 20009  0054B8  6EDD               	movwf	postdec2,c
 20010                           
 20011                           ; BSR set to: 4
 20012                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 20013  0054BA  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20014  0054BE  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20015  0054C2  6EDF               	movwf	indf2,c
 20016                           
 20017                           ; BSR set to: 4
 20018                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20019  0054C4  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20020  0054C8  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20021  0054CC  0E00               	movlw	0
 20022  0054CE  8EDB               	bsf	plusw2,7,c
 20023                           
 20024                           ; BSR set to: 4
 20025                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 20026  0054D0  0100               	movlb	0	; () banked
 20027  0054D2  6B8C               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20028                           
 20029                           ; BSR set to: 0
 20030                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 20031  0054D4  6B8B               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20032                           
 20033                           ; BSR set to: 0
 20034                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 20035  0054D6  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20036  0054D8  E102 EFBD  F026    	bz	_USBCtrlEPAllowStatusStage
 20037  0054DE  0012               	return	
 20038  0054E0                     __end_of_USBCtrlEPServiceComplete:
 20039                           	opt stack 0
 20040                           pclatu	equ	0xFFB
 20041                           pclath	equ	0xFFA
 20042                           tblptru	equ	0xFF8
 20043                           tblptrh	equ	0xFF7
 20044                           tblptrl	equ	0xFF6
 20045                           tablat	equ	0xFF5
 20046                           prodh	equ	0xFF4
 20047                           prodl	equ	0xFF3
 20048                           intcon	equ	0xFF2
 20049                           postinc0	equ	0xFEE
 20050                           wreg	equ	0xFE8
 20051                           indf1	equ	0xFE7
 20052                           postdec1	equ	0xFE5
 20053                           fsr1h	equ	0xFE2
 20054                           fsr1l	equ	0xFE1
 20055                           indf2	equ	0xFDF
 20056                           postinc2	equ	0xFDE
 20057                           postdec2	equ	0xFDD
 20058                           plusw2	equ	0xFDB
 20059                           fsr2h	equ	0xFDA
 20060                           fsr2l	equ	0xFD9
 20061                           status	equ	0xFD8
 20062                           
 20063 ;; *************** function _USBCtrlEPAllowDataStage *****************
 20064 ;; Defined at:
 20065 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 20066 ;; Parameters:    Size  Location     Type
 20067 ;;		None
 20068 ;; Auto vars:     Size  Location     Type
 20069 ;;		None
 20070 ;; Return value:  Size  Location     Type
 20071 ;;		None               void
 20072 ;; Registers used:
 20073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20074 ;; Tracked objects:
 20075 ;;		On entry : F/0
 20076 ;;		On exit  : F/0
 20077 ;;		Unchanged: 0/0
 20078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20079 ;;      Params:         0       0       0       0       0       0       0       0       0
 20080 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20081 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20082 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20083 ;;Total ram usage:        0 bytes
 20084 ;; Hardware stack levels used:    1
 20085 ;; Hardware stack levels required when called:    1
 20086 ;; This function calls:
 20087 ;;		_USBCtrlTrfTxService
 20088 ;; This function is called by:
 20089 ;;		_USBCtrlEPServiceComplete
 20090 ;; This function uses a non-reentrant model
 20091 ;;
 20092                           
 20093                           	psect	text95
 20094  004678                     __ptext95:
 20095                           	opt stack 0
 20096  004678                     _USBCtrlEPAllowDataStage:
 20097                           	opt stack 14
 20098                           
 20099                           ; BSR set to: 0
 20100                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 20101                           
 20102                           ;incstack = 0
 20103  004678  6B88               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20104                           
 20105                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 20106  00467A  6B89               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20107                           
 20108                           ; BSR set to: 0
 20109                           ;usb_device.c: 1178: if(controlTransferState == 2)
 20110  00467C  0E02               	movlw	2
 20111  00467E  1821               	xorwf	_controlTransferState,w,c	;volatile
 20112  004680  E11F               	bnz	i2l6705
 20113                           
 20114                           ; BSR set to: 0
 20115                           ;usb_device.c: 1179: {
 20116                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 20117  004682  EE20 F001          	lfsr	2,1
 20118  004686  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20119  004688  26D9               	addwf	fsr2l,f,c
 20120  00468A  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20121  00468C  22DA               	addwfc	fsr2h,f,c
 20122  00468E  0E08               	movlw	8
 20123  004690  6EDF               	movwf	indf2,c
 20124                           
 20125                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 20126  004692  EE20 F002          	lfsr	2,2
 20127  004696  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20128  004698  26D9               	addwf	fsr2l,f,c
 20129  00469A  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20130  00469C  22DA               	addwfc	fsr2h,f,c
 20131  00469E  0E38               	movlw	56
 20132  0046A0  6EDE               	movwf	postinc2,c
 20133  0046A2  0E04               	movlw	4
 20134  0046A4  6EDD               	movwf	postdec2,c
 20135                           
 20136                           ; BSR set to: 0
 20137                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 20138  0046A6  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20139  0046AA  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20140  0046AE  0E48               	movlw	72
 20141  0046B0  6EDF               	movwf	indf2,c
 20142                           
 20143                           ; BSR set to: 0
 20144                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20145  0046B2  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20146  0046B6  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20147  0046BA  0E00               	movlw	0
 20148  0046BC  8EDB               	bsf	plusw2,7,c
 20149                           
 20150                           ;usb_device.c: 1185: }
 20151  0046BE  0C00               	retlw	0
 20152  0046C0                     i2l6705:
 20153                           
 20154                           ; BSR set to: 0
 20155                           ;usb_device.c: 1186: else
 20156                           ;usb_device.c: 1187: {
 20157                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 20158  0046C0  500D               	movf	_inPipes+4,w,c	;volatile
 20159  0046C2  0104               	movlb	4	; () banked
 20160  0046C4  5D36               	subwf	54,w,b	;volatile
 20161  0046C6  500E               	movf	_inPipes+5,w,c	;volatile
 20162  0046C8  5937               	subwfb	55,w,b	;volatile
 20163  0046CA  E204               	bc	i2l6709
 20164                           
 20165                           ; BSR set to: 4
 20166                           ;usb_device.c: 1191: {
 20167                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 20168  0046CC  C436 F00D          	movff	1078,_inPipes+4	;volatile
 20169  0046D0  C437 F00E          	movff	1079,_inPipes+5	;volatile
 20170  0046D4                     i2l6709:
 20171                           
 20172                           ; BSR set to: 4
 20173                           ;usb_device.c: 1193: }
 20174                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 20175  0046D4  EC1B  F027         	call	_USBCtrlTrfTxService	;wreg free
 20176                           
 20177                           ; BSR set to: 0
 20178                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 20179  0046D8  EE20 F002          	lfsr	2,2
 20180  0046DC  500F               	movf	_pBDTEntryIn,w,c
 20181  0046DE  26D9               	addwf	fsr2l,f,c
 20182  0046E0  5010               	movf	_pBDTEntryIn+1,w,c
 20183  0046E2  22DA               	addwfc	fsr2h,f,c
 20184  0046E4  0E38               	movlw	56
 20185  0046E6  6EDE               	movwf	postinc2,c
 20186  0046E8  0E04               	movlw	4
 20187  0046EA  6EDD               	movwf	postdec2,c
 20188                           
 20189                           ; BSR set to: 0
 20190                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20191  0046EC  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20192  0046F0  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20193  0046F4  0E48               	movlw	72
 20194  0046F6  6EDF               	movwf	indf2,c
 20195                           
 20196                           ; BSR set to: 0
 20197                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20198  0046F8  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20199  0046FC  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20200  004700  0E00               	movlw	0
 20201  004702  8EDB               	bsf	plusw2,7,c
 20202                           
 20203                           ; BSR set to: 0
 20204  004704  0C00               	retlw	0	;funcret
 20205  004706                     __end_of_USBCtrlEPAllowDataStage:
 20206                           	opt stack 0
 20207                           pclatu	equ	0xFFB
 20208                           pclath	equ	0xFFA
 20209                           tblptru	equ	0xFF8
 20210                           tblptrh	equ	0xFF7
 20211                           tblptrl	equ	0xFF6
 20212                           tablat	equ	0xFF5
 20213                           prodh	equ	0xFF4
 20214                           prodl	equ	0xFF3
 20215                           intcon	equ	0xFF2
 20216                           postinc0	equ	0xFEE
 20217                           wreg	equ	0xFE8
 20218                           indf1	equ	0xFE7
 20219                           postdec1	equ	0xFE5
 20220                           fsr1h	equ	0xFE2
 20221                           fsr1l	equ	0xFE1
 20222                           indf2	equ	0xFDF
 20223                           postinc2	equ	0xFDE
 20224                           postdec2	equ	0xFDD
 20225                           plusw2	equ	0xFDB
 20226                           fsr2h	equ	0xFDA
 20227                           fsr2l	equ	0xFD9
 20228                           status	equ	0xFD8
 20229                           
 20230 ;; *************** function _USBCheckStdRequest *****************
 20231 ;; Defined at:
 20232 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 20233 ;; Parameters:    Size  Location     Type
 20234 ;;		None
 20235 ;; Auto vars:     Size  Location     Type
 20236 ;;		None
 20237 ;; Return value:  Size  Location     Type
 20238 ;;		None               void
 20239 ;; Registers used:
 20240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20241 ;; Tracked objects:
 20242 ;;		On entry : F/0
 20243 ;;		On exit  : 0/0
 20244 ;;		Unchanged: 0/0
 20245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20246 ;;      Params:         0       0       0       0       0       0       0       0       0
 20247 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20248 ;;      Temps:          1       0       0       0       0       0       0       0       0
 20249 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20250 ;;Total ram usage:        1 bytes
 20251 ;; Hardware stack levels used:    1
 20252 ;; Hardware stack levels required when called:    6
 20253 ;; This function calls:
 20254 ;;		_USBStdFeatureReqHandler
 20255 ;;		_USBStdGetDscHandler
 20256 ;;		_USBStdGetStatusHandler
 20257 ;;		_USBStdSetCfgHandler
 20258 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20259 ;; This function is called by:
 20260 ;;		_USBCtrlTrfSetupHandler
 20261 ;; This function uses a non-reentrant model
 20262 ;;
 20263                           
 20264                           	psect	text96
 20265  0048C8                     __ptext96:
 20266                           	opt stack 0
 20267  0048C8                     _USBCheckStdRequest:
 20268                           	opt stack 10
 20269                           
 20270                           ; BSR set to: 0
 20271                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 20272                           
 20273                           ; BSR set to: 0
 20274                           ;incstack = 0
 20275  0048C8  0104               	movlb	4	; () banked
 20276  0048CA  3930               	swapf	48,w,b	;volatile
 20277  0048CC  32E8               	rrcf	wreg,f,c
 20278  0048CE  0B03               	andlw	3
 20279  0048D0  E02A               	bz	i2l7167
 20280  0048D2  0012               	return	
 20281  0048D4                     i2l1776:
 20282                           
 20283                           ; BSR set to: 4
 20284                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 20285  0048D4  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20286                           
 20287                           ; BSR set to: 4
 20288                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 20289  0048D6  0E08               	movlw	8
 20290  0048D8  0100               	movlb	0	; () banked
 20291  0048DA  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 20292                           
 20293                           ;usb_device.c: 2327: break;
 20294  0048DC  0C08               	retlw	8
 20295  0048DE                     i2l7141:
 20296                           
 20297                           ; BSR set to: 4
 20298                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 20299  0048DE  0E2C               	movlw	low _USBActiveConfiguration
 20300  0048E0  6E09               	movwf	_inPipes,c	;volatile
 20301  0048E2  6A0A               	clrf	_inPipes+1,c	;volatile
 20302                           
 20303                           ; BSR set to: 4
 20304                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20305  0048E4  800C               	bsf	_inPipes+3,0,c	;volatile
 20306                           
 20307                           ; BSR set to: 4
 20308                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 20309  0048E6  0E01               	movlw	1
 20310  0048E8  6E0D               	movwf	_inPipes+4,c	;volatile
 20311                           
 20312                           ; BSR set to: 4
 20313                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 20314  0048EA  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20315                           
 20316                           ;usb_device.c: 2339: break;
 20317  0048EC  0C01               	retlw	1
 20318  0048EE                     i2l7153:
 20319                           
 20320                           ; BSR set to: 4
 20321                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 20322  0048EE  5134               	movf	52,w,b	;volatile
 20323  0048F0  0FC6               	addlw	low _USBAlternateInterface
 20324  0048F2  6E4A               	movwf	??_USBCheckStdRequest& (0+255),c
 20325  0048F4  C04A  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
 20326  0048F8  6A0A               	clrf	_inPipes+1,c	;volatile
 20327                           
 20328                           ; BSR set to: 4
 20329                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20330  0048FA  800C               	bsf	_inPipes+3,0,c	;volatile
 20331                           
 20332                           ; BSR set to: 4
 20333                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 20334  0048FC  0E01               	movlw	1
 20335  0048FE  6E0D               	movwf	_inPipes+4,c	;volatile
 20336                           
 20337                           ; BSR set to: 4
 20338                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 20339  004900  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20340                           
 20341                           ;usb_device.c: 2352: break;
 20342  004902  0C01               	retlw	1
 20343  004904                     i2l1785:
 20344                           
 20345                           ; BSR set to: 4
 20346                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 20347  004904  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20348                           
 20349                           ; BSR set to: 4
 20350                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 20351  004906  5134               	movf	52,w,b	;volatile
 20352  004908  0FC6               	addlw	low _USBAlternateInterface
 20353  00490A  6ED9               	movwf	fsr2l,c
 20354  00490C  6ADA               	clrf	fsr2h,c
 20355  00490E  C432 FFDF          	movff	1074,indf2	;volatile
 20356                           
 20357                           ;usb_device.c: 2356: break;
 20358  004912  0012               	return	
 20359  004914                     i2l7163:
 20360                           
 20361                           ; BSR set to: 4
 20362                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 20363  004914  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20364  004916  0E02               	movlw	2
 20365  004918  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20366  00491A  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20367  00491C  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20368  00491E  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20369  004920  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20370  004922  EF16  F01E         	goto	i2l6439	;wreg free
 20371  004926                     i2l7167:
 20372                           
 20373                           ; BSR set to: 4
 20374  004926  5131               	movf	49,w,b	;volatile
 20375                           
 20376                           ; Switch size 1, requested type "speed"
 20377                           ; Number of cases is 11, Range of values is 0 to 12
 20378                           ; switch strategies available:
 20379                           ; Name         Instructions Cycles
 20380                           ; simple_byte           34    18 (average)
 20381                           ;	Chosen strategy is simple_byte
 20382  004928  E102 EFF2  F021    	bz	_USBStdGetStatusHandler
 20383  00492E  0A01               	xorlw	1	; case 1
 20384  004930  E102 EFE4  F02E    	bz	_USBStdFeatureReqHandler
 20385  004936  0A02               	xorlw	2	; case 3
 20386  004938  E102 EFE4  F02E    	bz	_USBStdFeatureReqHandler
 20387  00493E  0A06               	xorlw	6	; case 5
 20388  004940  E0C9               	bz	i2l1776
 20389  004942  0A03               	xorlw	3	; case 6
 20390  004944  E102 EF60  F02C    	bz	_USBStdGetDscHandler
 20391  00494A  0A01               	xorlw	1	; case 7
 20392  00494C  E0E3               	bz	i2l7163
 20393  00494E  0A0F               	xorlw	15	; case 8
 20394  004950  E0C6               	bz	i2l7141
 20395  004952  0A01               	xorlw	1	; case 9
 20396  004954  E102 EF03  F025    	bz	_USBStdSetCfgHandler
 20397  00495A  0A03               	xorlw	3	; case 10
 20398  00495C  E0C8               	bz	i2l7153
 20399  00495E  0A01               	xorlw	1	; case 11
 20400  004960  E0D1               	bz	i2l1785
 20401  004962  0A07               	xorlw	7	; case 12
 20402  004964  0012               	return	
 20403  004966                     __end_of_USBCheckStdRequest:
 20404                           	opt stack 0
 20405                           pclatu	equ	0xFFB
 20406                           pclath	equ	0xFFA
 20407                           tblptru	equ	0xFF8
 20408                           tblptrh	equ	0xFF7
 20409                           tblptrl	equ	0xFF6
 20410                           tablat	equ	0xFF5
 20411                           prodh	equ	0xFF4
 20412                           prodl	equ	0xFF3
 20413                           intcon	equ	0xFF2
 20414                           postinc0	equ	0xFEE
 20415                           wreg	equ	0xFE8
 20416                           indf1	equ	0xFE7
 20417                           postdec1	equ	0xFE5
 20418                           fsr1h	equ	0xFE2
 20419                           fsr1l	equ	0xFE1
 20420                           indf2	equ	0xFDF
 20421                           postinc2	equ	0xFDE
 20422                           postdec2	equ	0xFDD
 20423                           plusw2	equ	0xFDB
 20424                           fsr2h	equ	0xFDA
 20425                           fsr2l	equ	0xFD9
 20426                           status	equ	0xFD8
 20427                           
 20428 ;; *************** function _USBStdSetCfgHandler *****************
 20429 ;; Defined at:
 20430 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 20431 ;; Parameters:    Size  Location     Type
 20432 ;;		None
 20433 ;; Auto vars:     Size  Location     Type
 20434 ;;  i               1   21[COMRAM] unsigned char 
 20435 ;; Return value:  Size  Location     Type
 20436 ;;		None               void
 20437 ;; Registers used:
 20438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20439 ;; Tracked objects:
 20440 ;;		On entry : B/4
 20441 ;;		On exit  : F/0
 20442 ;;		Unchanged: 0/0
 20443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20444 ;;      Params:         0       0       0       0       0       0       0       0       0
 20445 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20446 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20447 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20448 ;;Total ram usage:        1 bytes
 20449 ;; Hardware stack levels used:    1
 20450 ;; Hardware stack levels required when called:    5
 20451 ;; This function calls:
 20452 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20453 ;;		i2_memset
 20454 ;; This function is called by:
 20455 ;;		_USBCheckStdRequest
 20456 ;; This function uses a non-reentrant model
 20457 ;;
 20458                           
 20459                           	psect	text97
 20460  004A06                     __ptext97:
 20461                           	opt stack 0
 20462  004A06                     _USBStdSetCfgHandler:
 20463                           	opt stack 10
 20464                           
 20465                           ;usb_device.c: 1631: uint8_t i;
 20466                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 20467                           
 20468                           ;incstack = 0
 20469  004A06  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20470                           
 20471                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 20472  004A08  0E6B               	movlw	107
 20473  004A0A  6E2E               	movwf	i2memset@p1,c
 20474  004A0C  0E0F               	movlw	15
 20475  004A0E  6E2F               	movwf	i2memset@p1+1,c
 20476  004A10  6A31               	clrf	i2memset@c+1,c
 20477  004A12  6A30               	clrf	i2memset@c,c
 20478  004A14  6A33               	clrf	i2memset@n+1,c
 20479  004A16  0E02               	movlw	2
 20480  004A18  6E32               	movwf	i2memset@n,c
 20481  004A1A  EC0D  F01C         	call	i2_memset	;wreg free
 20482                           
 20483                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 20484  004A1E  6A2E               	clrf	i2memset@p1,c
 20485  004A20  0E04               	movlw	4
 20486  004A22  6E2F               	movwf	i2memset@p1+1,c
 20487  004A24  6A31               	clrf	i2memset@c+1,c
 20488  004A26  6A30               	clrf	i2memset@c,c
 20489  004A28  6A33               	clrf	i2memset@n+1,c
 20490  004A2A  0E30               	movlw	48
 20491  004A2C  6E32               	movwf	i2memset@n,c
 20492  004A2E  EC0D  F01C         	call	i2_memset	;wreg free
 20493                           
 20494                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 20495  004A32  8C60               	bsf	3936,6,c	;volatile
 20496                           
 20497                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 20498  004A34  6A43               	clrf	USBStdSetCfgHandler@i,c
 20499  004A36                     i2l6729:
 20500                           
 20501                           ;usb_device.c: 1649: {
 20502                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 20503  004A36  5043               	movf	USBStdSetCfgHandler@i,w,c
 20504  004A38  0F6A               	addlw	low _ep_data_in
 20505  004A3A  6ED9               	movwf	fsr2l,c
 20506  004A3C  6ADA               	clrf	fsr2h,c
 20507  004A3E  6ADF               	clrf	indf2,c
 20508                           
 20509                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 20510  004A40  5043               	movf	USBStdSetCfgHandler@i,w,c
 20511  004A42  0F6D               	addlw	low _ep_data_out
 20512  004A44  6ED9               	movwf	fsr2l,c
 20513  004A46  6ADA               	clrf	fsr2h,c
 20514  004A48  6ADF               	clrf	indf2,c
 20515  004A4A  2A43               	incf	USBStdSetCfgHandler@i,f,c
 20516  004A4C  0E02               	movlw	2
 20517  004A4E  6443               	cpfsgt	USBStdSetCfgHandler@i,c
 20518  004A50  D7F2               	goto	i2l6729
 20519                           
 20520                           ;usb_device.c: 1652: }
 20521                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 20522  004A52  0EC6               	movlw	low _USBAlternateInterface
 20523  004A54  6E2E               	movwf	i2memset@p1,c
 20524  004A56  6A2F               	clrf	i2memset@p1+1,c
 20525  004A58  6A31               	clrf	i2memset@c+1,c
 20526  004A5A  6A30               	clrf	i2memset@c,c
 20527  004A5C  6A33               	clrf	i2memset@n+1,c
 20528  004A5E  0E02               	movlw	2
 20529  004A60  6E32               	movwf	i2memset@n,c
 20530  004A62  EC0D  F01C         	call	i2_memset	;wreg free
 20531                           
 20532                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 20533  004A66  9C60               	bcf	3936,6,c	;volatile
 20534                           
 20535                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 20536  004A68  0E08               	movlw	8
 20537  004A6A  6E0F               	movwf	_pBDTEntryIn,c
 20538  004A6C  0E04               	movlw	4
 20539  004A6E  6E10               	movwf	_pBDTEntryIn+1,c
 20540                           
 20541                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 20542  004A70  0E00               	movlw	0
 20543  004A72  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 20544  004A74  0E04               	movlw	4
 20545  004A76  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 20546                           
 20547                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 20548  004A78  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 20549  004A7C  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 20550                           
 20551                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 20552  004A80  C432 F02C          	movff	1074,_USBActiveConfiguration	;volatile
 20553                           
 20554                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 20555  004A84  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 20556  004A86  E104               	bnz	i2l6751
 20557                           
 20558                           ;usb_device.c: 1671: {
 20559                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 20560  004A88  0E10               	movlw	16
 20561  004A8A  0100               	movlb	0	; () banked
 20562  004A8C  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 20563                           
 20564                           ;usb_device.c: 1674: }
 20565  004A8E  0C10               	retlw	16
 20566  004A90                     i2l6751:
 20567                           
 20568                           ;usb_device.c: 1675: else
 20569                           ;usb_device.c: 1676: {
 20570                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 20571  004A90  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20572  004A92  0E01               	movlw	1
 20573  004A94  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20574  004A96  0E2C               	movlw	low _USBActiveConfiguration
 20575  004A98  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20576  004A9A  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20577  004A9C  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20578  004A9E  0E01               	movlw	1
 20579  004AA0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20580  004AA2  EC16  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20581                           
 20582                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 20583  004AA6  0E20               	movlw	32
 20584  004AA8  0100               	movlb	0	; () banked
 20585  004AAA  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 20586                           
 20587                           ; BSR set to: 0
 20588  004AAC  0C20               	retlw	32	;funcret
 20589  004AAE                     __end_of_USBStdSetCfgHandler:
 20590                           	opt stack 0
 20591                           pclatu	equ	0xFFB
 20592                           pclath	equ	0xFFA
 20593                           tblptru	equ	0xFF8
 20594                           tblptrh	equ	0xFF7
 20595                           tblptrl	equ	0xFF6
 20596                           tablat	equ	0xFF5
 20597                           prodh	equ	0xFF4
 20598                           prodl	equ	0xFF3
 20599                           intcon	equ	0xFF2
 20600                           postinc0	equ	0xFEE
 20601                           wreg	equ	0xFE8
 20602                           indf1	equ	0xFE7
 20603                           postdec1	equ	0xFE5
 20604                           fsr1h	equ	0xFE2
 20605                           fsr1l	equ	0xFE1
 20606                           indf2	equ	0xFDF
 20607                           postinc2	equ	0xFDE
 20608                           postdec2	equ	0xFDD
 20609                           plusw2	equ	0xFDB
 20610                           fsr2h	equ	0xFDA
 20611                           fsr2l	equ	0xFD9
 20612                           status	equ	0xFD8
 20613                           
 20614 ;; *************** function i2_memset *****************
 20615 ;; Defined at:
 20616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 20617 ;; Parameters:    Size  Location     Type
 20618 ;;  p1              2    0[COMRAM] PTR void 
 20619 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 20620 ;;  c               2    2[COMRAM] int 
 20621 ;;  n               2    4[COMRAM] unsigned int 
 20622 ;; Auto vars:     Size  Location     Type
 20623 ;;  memset          2    6[COMRAM] PTR unsigned char 
 20624 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 20625 ;; Return value:  Size  Location     Type
 20626 ;;                  2    0[COMRAM] PTR void 
 20627 ;; Registers used:
 20628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20629 ;; Tracked objects:
 20630 ;;		On entry : 0/0
 20631 ;;		On exit  : 0/0
 20632 ;;		Unchanged: 0/0
 20633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20634 ;;      Params:         6       0       0       0       0       0       0       0       0
 20635 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20636 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20637 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20638 ;;Total ram usage:        8 bytes
 20639 ;; Hardware stack levels used:    1
 20640 ;; This function calls:
 20641 ;;		Nothing
 20642 ;; This function is called by:
 20643 ;;		_USBStdSetCfgHandler
 20644 ;;		i2_USBDeviceInit
 20645 ;; This function uses a non-reentrant model
 20646 ;;
 20647                           
 20648                           	psect	text98
 20649  00381A                     __ptext98:
 20650                           	opt stack 0
 20651  00381A                     i2_memset:
 20652                           	opt stack 17
 20653                           
 20654                           ; BSR set to: 0
 20655                           ;incstack = 0
 20656  00381A  C02E  F034         	movff	i2memset@p1,i2memset@p
 20657  00381E  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 20658  003822  D008               	goto	i2l6533
 20659  003824                     i2l6529:
 20660  003824  C034  FFD9         	movff	i2memset@p,fsr2l
 20661  003828  C035  FFDA         	movff	i2memset@p+1,fsr2h
 20662  00382C  C030  FFDF         	movff	i2memset@c,indf2
 20663  003830  4A34               	infsnz	i2memset@p,f,c
 20664  003832  2A35               	incf	i2memset@p+1,f,c
 20665  003834                     i2l6533:
 20666  003834  0632               	decf	i2memset@n,f,c
 20667  003836  A0D8               	btfss	status,0,c
 20668  003838  0633               	decf	i2memset@n+1,f,c
 20669  00383A  2832               	incf	i2memset@n,w,c
 20670  00383C  E1F3               	bnz	i2l6529
 20671  00383E  2833               	incf	i2memset@n+1,w,c
 20672  003840  E1F1               	bnz	i2l6529
 20673  003842  0012               	return		;funcret
 20674  003844                     __end_ofi2_memset:
 20675                           	opt stack 0
 20676                           pclatu	equ	0xFFB
 20677                           pclath	equ	0xFFA
 20678                           tblptru	equ	0xFF8
 20679                           tblptrh	equ	0xFF7
 20680                           tblptrl	equ	0xFF6
 20681                           tablat	equ	0xFF5
 20682                           prodh	equ	0xFF4
 20683                           prodl	equ	0xFF3
 20684                           intcon	equ	0xFF2
 20685                           postinc0	equ	0xFEE
 20686                           wreg	equ	0xFE8
 20687                           indf1	equ	0xFE7
 20688                           postdec1	equ	0xFE5
 20689                           fsr1h	equ	0xFE2
 20690                           fsr1l	equ	0xFE1
 20691                           indf2	equ	0xFDF
 20692                           postinc2	equ	0xFDE
 20693                           postdec2	equ	0xFDD
 20694                           plusw2	equ	0xFDB
 20695                           fsr2h	equ	0xFDA
 20696                           fsr2l	equ	0xFD9
 20697                           status	equ	0xFD8
 20698                           
 20699 ;; *************** function _USBStdGetStatusHandler *****************
 20700 ;; Defined at:
 20701 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 20702 ;; Parameters:    Size  Location     Type
 20703 ;;		None
 20704 ;; Auto vars:     Size  Location     Type
 20705 ;;  p               2    0[COMRAM] PTR struct __BDT
 20706 ;;		 -> BDT(48), NULL(0), 
 20707 ;; Return value:  Size  Location     Type
 20708 ;;		None               void
 20709 ;; Registers used:
 20710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20711 ;; Tracked objects:
 20712 ;;		On entry : B/4
 20713 ;;		On exit  : F/4
 20714 ;;		Unchanged: 0/0
 20715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20716 ;;      Params:         0       0       0       0       0       0       0       0       0
 20717 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20718 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20719 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20720 ;;Total ram usage:        2 bytes
 20721 ;; Hardware stack levels used:    1
 20722 ;; This function calls:
 20723 ;;		Nothing
 20724 ;; This function is called by:
 20725 ;;		_USBCheckStdRequest
 20726 ;; This function uses a non-reentrant model
 20727 ;;
 20728                           
 20729                           	psect	text99
 20730  0043E4                     __ptext99:
 20731                           	opt stack 0
 20732  0043E4                     _USBStdGetStatusHandler:
 20733                           	opt stack 15
 20734                           
 20735                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 20736                           
 20737                           ;incstack = 0
 20738  0043E4  0104               	movlb	4	; () banked
 20739  0043E6  6B38               	clrf	56,b	;volatile
 20740                           
 20741                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 20742  0043E8  6B39               	clrf	57,b	;volatile
 20743                           
 20744                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 20745  0043EA  D02A               	goto	i2l6801
 20746  0043EC                     i2l1712:
 20747                           
 20748                           ; BSR set to: 4
 20749                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 20750  0043EC  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20751                           
 20752                           ; BSR set to: 4
 20753                           ;usb_device.c: 1789: }
 20754                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 20755                           
 20756                           ;usb_device.c: 1786: if(0 == 1)
 20757  0043EE  041D               	decf	_RemoteWakeup,w,c	;volatile
 20758  0043F0  E12E               	bnz	i2l1715
 20759                           
 20760                           ; BSR set to: 4
 20761                           ;usb_device.c: 1792: {
 20762                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 20763  0043F2  8338               	bsf	56,1,b	;volatile
 20764  0043F4  D02C               	goto	i2l1715
 20765  0043F6                     i2l1716:
 20766                           
 20767                           ; BSR set to: 4
 20768                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 20769  0043F6  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20770                           
 20771                           ;usb_device.c: 1798: break;
 20772  0043F8  D02A               	goto	i2l1715
 20773  0043FA                     i2l1717:
 20774                           
 20775                           ; BSR set to: 4
 20776                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 20777  0043FA  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20778                           
 20779                           ;usb_device.c: 1804: {
 20780                           ;usb_device.c: 1805: BDT_ENTRY *p;
 20781                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 20782  0043FC  BF34               	btfsc	52,7,b	;volatile
 20783  0043FE  D006               	goto	i2l6791
 20784                           
 20785                           ; BSR set to: 4
 20786                           ;usb_device.c: 1808: {
 20787                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 20788  004400  5134               	movf	52,w,b	;volatile
 20789  004402  0B0F               	andlw	15
 20790  004404  0D02               	mullw	2
 20791  004406  50F3               	movf	prodl,w,c
 20792  004408  0F60               	addlw	low _pBDTEntryOut
 20793  00440A  D005               	goto	L58
 20794  00440C                     i2l6791:
 20795                           
 20796                           ; BSR set to: 4
 20797                           ;usb_device.c: 1811: else
 20798                           ;usb_device.c: 1812: {
 20799                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 20800  00440C  5134               	movf	52,w,b	;volatile
 20801  00440E  0B0F               	andlw	15
 20802  004410  0D02               	mullw	2
 20803  004412  50F3               	movf	prodl,w,c
 20804  004414  0F0F               	addlw	low _pBDTEntryIn
 20805  004416                     L58:
 20806  004416  6ED9               	movwf	fsr2l,c
 20807  004418  6ADA               	clrf	fsr2h,c
 20808  00441A  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 20809  00441E  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 20810                           
 20811                           ; BSR set to: 4
 20812                           ;usb_device.c: 1814: }
 20813                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 20814  004422  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 20815  004426  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 20816  00442A  AEDF               	btfss	indf2,7,c
 20817  00442C  D010               	goto	i2l1715
 20818                           
 20819                           ; BSR set to: 4
 20820  00442E  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 20821  004432  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 20822  004436  A4DF               	btfss	indf2,2,c
 20823  004438  D00A               	goto	i2l1715
 20824                           
 20825                           ; BSR set to: 4
 20826                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 20827  00443A  0E01               	movlw	1
 20828  00443C  6F38               	movwf	56,b	;volatile
 20829  00443E  D007               	goto	i2l1715
 20830  004440                     i2l6801:
 20831                           
 20832                           ; BSR set to: 4
 20833  004440  5130               	movf	48,w,b	;volatile
 20834  004442  0B1F               	andlw	31
 20835                           
 20836                           ; Switch size 1, requested type "speed"
 20837                           ; Number of cases is 3, Range of values is 0 to 2
 20838                           ; switch strategies available:
 20839                           ; Name         Instructions Cycles
 20840                           ; simple_byte           10     6 (average)
 20841                           ;	Chosen strategy is simple_byte
 20842  004444  E0D3               	bz	i2l1712
 20843  004446  0A01               	xorlw	1	; case 1
 20844  004448  E0D6               	bz	i2l1716
 20845  00444A  0A03               	xorlw	3	; case 2
 20846  00444C  E0D6               	bz	i2l1717
 20847  00444E                     i2l1715:
 20848                           
 20849                           ; BSR set to: 4
 20850                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 20851  00444E  AE0C               	btfss	_inPipes+3,7,c	;volatile
 20852  004450  0012               	return	
 20853                           
 20854                           ; BSR set to: 4
 20855                           ;usb_device.c: 1823: {
 20856                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 20857  004452  0E38               	movlw	56
 20858  004454  6E09               	movwf	_inPipes,c	;volatile
 20859  004456  0E04               	movlw	4
 20860  004458  6E0A               	movwf	_inPipes+1,c	;volatile
 20861                           
 20862                           ; BSR set to: 4
 20863                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20864  00445A  800C               	bsf	_inPipes+3,0,c	;volatile
 20865                           
 20866                           ; BSR set to: 4
 20867                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 20868  00445C  0E02               	movlw	2
 20869  00445E  6E0D               	movwf	_inPipes+4,c	;volatile
 20870                           
 20871                           ; BSR set to: 4
 20872  004460  0C02               	retlw	2	;funcret
 20873  004462                     __end_of_USBStdGetStatusHandler:
 20874                           	opt stack 0
 20875                           pclatu	equ	0xFFB
 20876                           pclath	equ	0xFFA
 20877                           tblptru	equ	0xFF8
 20878                           tblptrh	equ	0xFF7
 20879                           tblptrl	equ	0xFF6
 20880                           tablat	equ	0xFF5
 20881                           prodh	equ	0xFF4
 20882                           prodl	equ	0xFF3
 20883                           intcon	equ	0xFF2
 20884                           postinc0	equ	0xFEE
 20885                           wreg	equ	0xFE8
 20886                           indf1	equ	0xFE7
 20887                           postdec1	equ	0xFE5
 20888                           fsr1h	equ	0xFE2
 20889                           fsr1l	equ	0xFE1
 20890                           indf2	equ	0xFDF
 20891                           postinc2	equ	0xFDE
 20892                           postdec2	equ	0xFDD
 20893                           plusw2	equ	0xFDB
 20894                           fsr2h	equ	0xFDA
 20895                           fsr2l	equ	0xFD9
 20896                           status	equ	0xFD8
 20897                           
 20898 ;; *************** function _USBStdGetDscHandler *****************
 20899 ;; Defined at:
 20900 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 20901 ;; Parameters:    Size  Location     Type
 20902 ;;		None
 20903 ;; Auto vars:     Size  Location     Type
 20904 ;;		None
 20905 ;; Return value:  Size  Location     Type
 20906 ;;		None               void
 20907 ;; Registers used:
 20908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20909 ;; Tracked objects:
 20910 ;;		On entry : B/4
 20911 ;;		On exit  : 0/0
 20912 ;;		Unchanged: 0/0
 20913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20914 ;;      Params:         0       0       0       0       0       0       0       0       0
 20915 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20916 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20917 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20918 ;;Total ram usage:        2 bytes
 20919 ;; Hardware stack levels used:    1
 20920 ;; This function calls:
 20921 ;;		Nothing
 20922 ;; This function is called by:
 20923 ;;		_USBCheckStdRequest
 20924 ;; This function uses a non-reentrant model
 20925 ;;
 20926                           
 20927                           	psect	text100
 20928  0058C0                     __ptext100:
 20929                           	opt stack 0
 20930  0058C0                     _USBStdGetDscHandler:
 20931                           	opt stack 15
 20932                           
 20933                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 20934                           
 20935                           ; BSR set to: 4
 20936                           ;incstack = 0
 20937  0058C0  0E80               	movlw	128
 20938  0058C2  0104               	movlb	4	; () banked
 20939  0058C4  1930               	xorwf	48,w,b	;volatile
 20940  0058C6  A4D8               	btfss	status,2,c
 20941  0058C8  0012               	return	
 20942                           
 20943                           ; BSR set to: 4
 20944                           ;usb_device.c: 1707: {
 20945                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 20946  0058CA  0EC0               	movlw	192
 20947  0058CC  6E0C               	movwf	_inPipes+3,c	;volatile
 20948                           
 20949                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 20950  0058CE  D071               	goto	i2l6779
 20951  0058D0                     i2l6759:
 20952                           
 20953                           ; BSR set to: 4
 20954                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 20955  0058D0  0EF4               	movlw	low _device_dsc
 20956  0058D2  6E09               	movwf	_inPipes,c	;volatile
 20957  0058D4  0E79               	movlw	high _device_dsc
 20958  0058D6  6E0A               	movwf	_inPipes+1,c	;volatile
 20959                           
 20960                           ; BSR set to: 4
 20961                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 20962  0058D8  6A0E               	clrf	_inPipes+5,c	;volatile
 20963  0058DA  0E12               	movlw	18
 20964  0058DC  6E0D               	movwf	_inPipes+4,c	;volatile
 20965                           
 20966                           ;usb_device.c: 1715: break;
 20967  0058DE  0C12               	retlw	18
 20968  0058E0                     i2l6763:
 20969                           
 20970                           ; BSR set to: 4
 20971                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 20972  0058E0  5132               	movf	50,w,b	;volatile
 20973  0058E2  E13D               	bnz	i2l1702
 20974                           
 20975                           ; BSR set to: 4
 20976                           ;usb_device.c: 1721: {
 20977                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 20978  0058E4  5132               	movf	50,w,b	;volatile
 20979  0058E6  0D02               	mullw	2
 20980  0058E8  0E47               	movlw	low _USB_CD_Ptr
 20981  0058EA  24F3               	addwf	prodl,w,c
 20982  0058EC  6EF6               	movwf	tblptrl,c
 20983  0058EE  0E76               	movlw	high _USB_CD_Ptr
 20984  0058F0  20F4               	addwfc	prodh,w,c
 20985  0058F2  6EF7               	movwf	tblptrh,c
 20986  0058F4                     	if	0	;There are less than 3 active tblptr bytes
 20987  0058F4                     	endif
 20988  0058F4  0009               	tblrd		*+
 20989  0058F6  CFF5 F009          	movff	tablat,_inPipes	;volatile
 20990  0058FA  000A               	tblrd		*-
 20991  0058FC  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 20992                           
 20993                           ; BSR set to: 4
 20994                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 20995  005900  0E02               	movlw	2
 20996  005902  2409               	addwf	_inPipes,w,c	;volatile
 20997  005904  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 20998  005906  0E00               	movlw	0
 20999  005908  200A               	addwfc	_inPipes+1,w,c	;volatile
 21000  00590A  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21001  00590C  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21002  005910  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21003  005914  6AF8               	clrf	tblptru,c
 21004  005916  0E07               	movlw	(high __ramtop+-1)
 21005  005918  64F7               	cpfsgt	tblptrh,c
 21006  00591A  D003               	bra	i2u444_47
 21007  00591C  0008               	tblrd		*
 21008  00591E  50F5               	movf	tablat,w,c
 21009  005920  D005               	bra	i2u444_40
 21010  005922                     i2u444_47:
 21011  005922  CFF6 FFE1          	movff	tblptrl,fsr1l
 21012  005926  CFF7 FFE2          	movff	tblptrh,fsr1h
 21013  00592A  50E7               	movf	indf1,w,c
 21014  00592C                     i2u444_40:
 21015  00592C  6E0D               	movwf	_inPipes+4,c	;volatile
 21016                           
 21017                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 21018  00592E  0E03               	movlw	3
 21019  005930  2409               	addwf	_inPipes,w,c	;volatile
 21020  005932  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 21021  005934  0E00               	movlw	0
 21022  005936  200A               	addwfc	_inPipes+1,w,c	;volatile
 21023  005938  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21024  00593A  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21025  00593E  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21026  005942  6AF8               	clrf	tblptru,c
 21027  005944  0E07               	movlw	(high __ramtop+-1)
 21028  005946  64F7               	cpfsgt	tblptrh,c
 21029  005948  D003               	bra	i2u445_47
 21030  00594A  0008               	tblrd		*
 21031  00594C  50F5               	movf	tablat,w,c
 21032  00594E  D005               	bra	i2u445_40
 21033  005950                     i2u445_47:
 21034  005950  CFF6 FFE1          	movff	tblptrl,fsr1l
 21035  005954  CFF7 FFE2          	movff	tblptrh,fsr1h
 21036  005958  50E7               	movf	indf1,w,c
 21037  00595A                     i2u445_40:
 21038  00595A  6E0E               	movwf	_inPipes+5,c	;volatile
 21039                           
 21040                           ;usb_device.c: 1729: }
 21041  00595C  0012               	return	
 21042  00595E                     i2l1702:
 21043                           
 21044                           ; BSR set to: 4
 21045                           ;usb_device.c: 1730: else
 21046                           ;usb_device.c: 1731: {
 21047                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 21048  00595E  6A0C               	clrf	_inPipes+3,c	;volatile
 21049  005960  0012               	return	
 21050  005962                     i2l6771:
 21051                           
 21052                           ; BSR set to: 4
 21053                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 21054  005962  0E03               	movlw	3
 21055  005964  6132               	cpfslt	50,b	;volatile
 21056  005966  D021               	goto	i2l1705
 21057                           
 21058                           ; BSR set to: 4
 21059                           ;usb_device.c: 1740: {
 21060                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 21061  005968  5132               	movf	50,w,b	;volatile
 21062  00596A  0D02               	mullw	2
 21063  00596C  0E41               	movlw	low _USB_SD_Ptr
 21064  00596E  24F3               	addwf	prodl,w,c
 21065  005970  6EF6               	movwf	tblptrl,c
 21066  005972  0E76               	movlw	high _USB_SD_Ptr
 21067  005974  20F4               	addwfc	prodh,w,c
 21068  005976  6EF7               	movwf	tblptrh,c
 21069  005978                     	if	0	;There are less than 3 active tblptr bytes
 21070  005978                     	endif
 21071  005978  0009               	tblrd		*+
 21072  00597A  CFF5 F009          	movff	tablat,_inPipes	;volatile
 21073  00597E  000A               	tblrd		*-
 21074  005980  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 21075                           
 21076                           ; BSR set to: 4
 21077                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 21078  005984  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 21079  005988  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 21080  00598C  6AF8               	clrf	tblptru,c
 21081  00598E  0E07               	movlw	(high __ramtop+-1)
 21082  005990  64F7               	cpfsgt	tblptrh,c
 21083  005992  D003               	bra	i2u447_47
 21084  005994  0008               	tblrd		*
 21085  005996  50F5               	movf	tablat,w,c
 21086  005998  D005               	bra	i2u447_40
 21087  00599A                     i2u447_47:
 21088  00599A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21089  00599E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21090  0059A2  50E7               	movf	indf1,w,c
 21091  0059A4                     i2u447_40:
 21092  0059A4  6E0D               	movwf	_inPipes+4,c	;volatile
 21093  0059A6  6A0E               	clrf	_inPipes+5,c	;volatile
 21094                           
 21095                           ;usb_device.c: 1745: }
 21096  0059A8  0012               	return	
 21097  0059AA                     i2l1705:
 21098                           
 21099                           ; BSR set to: 4
 21100                           ;usb_device.c: 1746: else
 21101                           ;usb_device.c: 1747: {
 21102                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 21103  0059AA  6A0C               	clrf	_inPipes+3,c	;volatile
 21104  0059AC  0012               	return	
 21105  0059AE                     i2l1707:
 21106                           
 21107                           ; BSR set to: 4
 21108                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 21109  0059AE  6A0C               	clrf	_inPipes+3,c	;volatile
 21110                           
 21111                           ;usb_device.c: 1753: break;
 21112  0059B0  0012               	return	
 21113  0059B2                     i2l6779:
 21114                           
 21115                           ; BSR set to: 4
 21116  0059B2  5133               	movf	51,w,b	;volatile
 21117                           
 21118                           ; Switch size 1, requested type "speed"
 21119                           ; Number of cases is 3, Range of values is 1 to 3
 21120                           ; switch strategies available:
 21121                           ; Name         Instructions Cycles
 21122                           ; simple_byte           10     6 (average)
 21123                           ;	Chosen strategy is simple_byte
 21124  0059B4  0A01               	xorlw	1	; case 1
 21125  0059B6  E08C               	bz	i2l6759
 21126  0059B8  0A03               	xorlw	3	; case 2
 21127  0059BA  E092               	bz	i2l6763
 21128  0059BC  0A01               	xorlw	1	; case 3
 21129  0059BE  E0D1               	bz	i2l6771
 21130  0059C0  D7F6               	goto	i2l1707
 21131  0059C2                     __end_of_USBStdGetDscHandler:
 21132                           	opt stack 0
 21133                           pclatu	equ	0xFFB
 21134                           pclath	equ	0xFFA
 21135                           tblptru	equ	0xFF8
 21136                           tblptrh	equ	0xFF7
 21137                           tblptrl	equ	0xFF6
 21138                           tablat	equ	0xFF5
 21139                           prodh	equ	0xFF4
 21140                           prodl	equ	0xFF3
 21141                           intcon	equ	0xFF2
 21142                           postinc0	equ	0xFEE
 21143                           wreg	equ	0xFE8
 21144                           indf1	equ	0xFE7
 21145                           postdec1	equ	0xFE5
 21146                           fsr1h	equ	0xFE2
 21147                           fsr1l	equ	0xFE1
 21148                           indf2	equ	0xFDF
 21149                           postinc2	equ	0xFDE
 21150                           postdec2	equ	0xFDD
 21151                           plusw2	equ	0xFDB
 21152                           fsr2h	equ	0xFDA
 21153                           fsr2l	equ	0xFD9
 21154                           status	equ	0xFD8
 21155                           
 21156 ;; *************** function _USBStdFeatureReqHandler *****************
 21157 ;; Defined at:
 21158 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 21159 ;; Parameters:    Size  Location     Type
 21160 ;;		None
 21161 ;; Auto vars:     Size  Location     Type
 21162 ;;  p               2   26[COMRAM] PTR struct __BDT
 21163 ;;		 -> BDT(48), NULL(0), 
 21164 ;;  pUEP            2   23[COMRAM] PTR unsigned char 
 21165 ;;		 -> UEP0(1), 
 21166 ;;  current_ep_d    1   25[COMRAM] struct .
 21167 ;; Return value:  Size  Location     Type
 21168 ;;		None               void
 21169 ;; Registers used:
 21170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21171 ;; Tracked objects:
 21172 ;;		On entry : B/4
 21173 ;;		On exit  : B/0
 21174 ;;		Unchanged: 0/0
 21175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21176 ;;      Params:         0       0       0       0       0       0       0       0       0
 21177 ;;      Locals:         5       0       0       0       0       0       0       0       0
 21178 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21179 ;;      Totals:         7       0       0       0       0       0       0       0       0
 21180 ;;Total ram usage:        7 bytes
 21181 ;; Hardware stack levels used:    1
 21182 ;; Hardware stack levels required when called:    5
 21183 ;; This function calls:
 21184 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21185 ;; This function is called by:
 21186 ;;		_USBCheckStdRequest
 21187 ;; This function uses a non-reentrant model
 21188 ;;
 21189                           
 21190                           	psect	text101
 21191  005DC8                     __ptext101:
 21192                           	opt stack 0
 21193  005DC8                     _USBStdFeatureReqHandler:
 21194                           	opt stack 10
 21195                           
 21196                           ;usb_device.c: 2387: BDT_ENTRY *p;
 21197                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 21198                           ;usb_device.c: 2390: unsigned char* pUEP;
 21199                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 21200                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 21201                           
 21202                           ;incstack = 0
 21203  005DC8  0104               	movlb	4	; () banked
 21204  005DCA  0532               	decf	50,w,b	;volatile
 21205  005DCC  E10B               	bnz	i2l6819
 21206                           
 21207                           ; BSR set to: 4
 21208  005DCE  5130               	movf	48,w,b	;volatile
 21209  005DD0  0B1F               	andlw	31
 21210  005DD2  E108               	bnz	i2l6819
 21211                           
 21212                           ; BSR set to: 4
 21213                           ;usb_device.c: 2395: {
 21214                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 21215  005DD4  8E0C               	bsf	_inPipes+3,7,c	;volatile
 21216                           
 21217                           ; BSR set to: 4
 21218                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 21219  005DD6  0E03               	movlw	3
 21220  005DD8  1931               	xorwf	49,w,b	;volatile
 21221  005DDA  E103               	bnz	i2l1792
 21222                           
 21223                           ; BSR set to: 4
 21224                           ;usb_device.c: 2398: RemoteWakeup = 1;
 21225  005DDC  0E01               	movlw	1
 21226  005DDE  6E1D               	movwf	_RemoteWakeup,c	;volatile
 21227  005DE0  D001               	goto	i2l6819
 21228  005DE2                     i2l1792:
 21229                           
 21230                           ; BSR set to: 4
 21231                           ;usb_device.c: 2399: else
 21232                           ;usb_device.c: 2400: RemoteWakeup = 0;
 21233  005DE2  6A1D               	clrf	_RemoteWakeup,c	;volatile
 21234  005DE4                     i2l6819:
 21235                           
 21236                           ; BSR set to: 4
 21237                           ;usb_device.c: 2401: }
 21238                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 21239                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 21240                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 21241                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 21242  005DE4  5132               	movf	50,w,b	;volatile
 21243  005DE6  A4D8               	btfss	status,2,c
 21244  005DE8  0012               	return	
 21245                           
 21246                           ; BSR set to: 4
 21247  005DEA  5130               	movf	48,w,b	;volatile
 21248  005DEC  0B1F               	andlw	31
 21249  005DEE  0A02               	xorlw	2
 21250  005DF0  A4D8               	btfss	status,2,c
 21251  005DF2  0012               	return	
 21252                           
 21253                           ; BSR set to: 4
 21254  005DF4  5134               	movf	52,w,b	;volatile
 21255  005DF6  0B0F               	andlw	15
 21256  005DF8  B4D8               	btfsc	status,2,c
 21257  005DFA  0012               	return	
 21258                           
 21259                           ; BSR set to: 4
 21260  005DFC  5134               	movf	52,w,b	;volatile
 21261  005DFE  0B0F               	andlw	15
 21262  005E00  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21263  005E02  0E03               	movlw	3
 21264  005E04  6043               	cpfslt	??_USBStdFeatureReqHandler,c
 21265  005E06  0C03               	retlw	3
 21266                           
 21267                           ; BSR set to: 4
 21268  005E08  0E20               	movlw	32
 21269  005E0A  0100               	movlb	0	; () banked
 21270  005E0C  198A               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 21271  005E0E  A4D8               	btfss	status,2,c
 21272  005E10  0012               	return	
 21273                           
 21274                           ; BSR set to: 0
 21275                           ;usb_device.c: 2408: {
 21276                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 21277  005E12  8E0C               	bsf	_inPipes+3,7,c	;volatile
 21278                           
 21279                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 21280  005E14  0104               	movlb	4	; () banked
 21281  005E16  BF34               	btfsc	52,7,b	;volatile
 21282  005E18  D011               	goto	i2l6835
 21283                           
 21284                           ; BSR set to: 4
 21285                           ;usb_device.c: 2415: {
 21286                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21287  005E1A  5134               	movf	52,w,b	;volatile
 21288  005E1C  0B0F               	andlw	15
 21289  005E1E  0D02               	mullw	2
 21290  005E20  50F3               	movf	prodl,w,c
 21291  005E22  0F60               	addlw	low _pBDTEntryOut
 21292  005E24  6ED9               	movwf	fsr2l,c
 21293  005E26  6ADA               	clrf	fsr2h,c
 21294  005E28  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 21295  005E2C  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21296                           
 21297                           ; BSR set to: 4
 21298                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 21299  005E30  5134               	movf	52,w,b	;volatile
 21300  005E32  0B0F               	andlw	15
 21301  005E34  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21302  005E36  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21303  005E38  0F6D               	addlw	low _ep_data_out
 21304  005E3A  D010               	goto	L59
 21305  005E3C                     i2l6835:
 21306                           
 21307                           ; BSR set to: 4
 21308                           ;usb_device.c: 2419: else
 21309                           ;usb_device.c: 2420: {
 21310                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21311  005E3C  5134               	movf	52,w,b	;volatile
 21312  005E3E  0B0F               	andlw	15
 21313  005E40  0D02               	mullw	2
 21314  005E42  50F3               	movf	prodl,w,c
 21315  005E44  0F0F               	addlw	low _pBDTEntryIn
 21316  005E46  6ED9               	movwf	fsr2l,c
 21317  005E48  6ADA               	clrf	fsr2h,c
 21318  005E4A  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 21319  005E4E  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21320                           
 21321                           ; BSR set to: 4
 21322                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 21323  005E52  5134               	movf	52,w,b	;volatile
 21324  005E54  0B0F               	andlw	15
 21325  005E56  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21326  005E58  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21327  005E5A  0F6A               	addlw	low _ep_data_in
 21328  005E5C                     L59:
 21329  005E5C  6ED9               	movwf	fsr2l,c
 21330  005E5E  6ADA               	clrf	fsr2h,c
 21331  005E60  50DF               	movf	indf2,w,c
 21332  005E62  6E47               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 21333                           
 21334                           ; BSR set to: 4
 21335                           ;usb_device.c: 2423: }
 21336                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 21337  005E64  B047               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 21338  005E66  D002               	goto	i2l6843
 21339                           
 21340                           ; BSR set to: 4
 21341                           ;usb_device.c: 2429: {
 21342                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 21343  005E68  9448               	bcf	USBStdFeatureReqHandler@p,2,c
 21344                           
 21345                           ;usb_device.c: 2431: }
 21346  005E6A  D001               	goto	i2l6845
 21347  005E6C                     i2l6843:
 21348                           
 21349                           ; BSR set to: 4
 21350                           ;usb_device.c: 2432: else
 21351                           ;usb_device.c: 2433: {
 21352                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 21353  005E6C  8448               	bsf	USBStdFeatureReqHandler@p,2,c
 21354  005E6E                     i2l6845:
 21355                           
 21356                           ; BSR set to: 4
 21357                           ;usb_device.c: 2435: }
 21358                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 21359  005E6E  BF34               	btfsc	52,7,b	;volatile
 21360  005E70  D006               	goto	i2l6849
 21361                           
 21362                           ; BSR set to: 4
 21363                           ;usb_device.c: 2440: {
 21364                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21365  005E72  5134               	movf	52,w,b	;volatile
 21366  005E74  0B0F               	andlw	15
 21367  005E76  0D02               	mullw	2
 21368  005E78  50F3               	movf	prodl,w,c
 21369  005E7A  0F60               	addlw	low _pBDTEntryOut
 21370  005E7C  D005               	goto	L60
 21371  005E7E                     i2l6849:
 21372                           
 21373                           ; BSR set to: 4
 21374                           ;usb_device.c: 2443: else
 21375                           ;usb_device.c: 2444: {
 21376                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21377  005E7E  5134               	movf	52,w,b	;volatile
 21378  005E80  0B0F               	andlw	15
 21379  005E82  0D02               	mullw	2
 21380  005E84  50F3               	movf	prodl,w,c
 21381  005E86  0F0F               	addlw	low _pBDTEntryIn
 21382  005E88                     L60:
 21383  005E88  6ED9               	movwf	fsr2l,c
 21384  005E8A  6ADA               	clrf	fsr2h,c
 21385  005E8C  C048  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 21386  005E90  C049  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 21387                           
 21388                           ; BSR set to: 4
 21389                           ;usb_device.c: 2446: }
 21390                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 21391  005E94  0E03               	movlw	3
 21392  005E96  1931               	xorwf	49,w,b	;volatile
 21393  005E98  E123               	bnz	i2l6861
 21394                           
 21395                           ; BSR set to: 4
 21396                           ;usb_device.c: 2450: {
 21397                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 21398  005E9A  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21399  005E9E  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21400  005EA2  AEDF               	btfss	indf2,7,c
 21401  005EA4  D011               	goto	i2l1802
 21402                           
 21403                           ; BSR set to: 4
 21404                           ;usb_device.c: 2452: {
 21405                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 21406  005EA6  BF34               	btfsc	52,7,b	;volatile
 21407  005EA8  D006               	goto	i2l6859
 21408                           
 21409                           ; BSR set to: 4
 21410                           ;usb_device.c: 2456: {
 21411                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 21412  005EAA  5134               	movf	52,w,b	;volatile
 21413  005EAC  0B0F               	andlw	15
 21414  005EAE  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21415  005EB0  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21416  005EB2  0F6D               	addlw	low _ep_data_out
 21417  005EB4  D005               	goto	L61
 21418  005EB6                     i2l6859:
 21419                           
 21420                           ; BSR set to: 4
 21421                           ;usb_device.c: 2459: else
 21422                           ;usb_device.c: 2460: {
 21423                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 21424  005EB6  5134               	movf	52,w,b	;volatile
 21425  005EB8  0B0F               	andlw	15
 21426  005EBA  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21427  005EBC  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21428  005EBE  0F6A               	addlw	low _ep_data_in
 21429  005EC0                     L61:
 21430  005EC0  6ED9               	movwf	fsr2l,c
 21431  005EC2  6ADA               	clrf	fsr2h,c
 21432  005EC4  0100               	movlb	0	; () banked
 21433  005EC6  82DF               	bsf	indf2,1,c
 21434  005EC8                     i2l1802:
 21435                           
 21436                           ;usb_device.c: 2462: }
 21437                           ;usb_device.c: 2463: }
 21438                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 21439  005EC8  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21440  005ECC  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21441  005ED0  0E00               	movlw	0
 21442  005ED2  84DB               	bsf	plusw2,2,c
 21443                           
 21444                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 21445  005ED4  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21446  005ED8  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21447  005EDC  8EDB               	bsf	plusw2,7,c
 21448                           
 21449                           ;usb_device.c: 2468: }
 21450  005EDE  0C00               	retlw	0
 21451  005EE0                     i2l6861:
 21452                           
 21453                           ; BSR set to: 4
 21454                           ;usb_device.c: 2469: else
 21455                           ;usb_device.c: 2470: {
 21456                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 21457  005EE0  0E04               	movlw	4
 21458  005EE2  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 21459                           
 21460                           ; BSR set to: 4
 21461                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 21462  005EE4  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21463  005EE8  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21464  005EEC  AEDF               	btfss	indf2,7,c
 21465  005EEE  D019               	goto	i2l6871
 21466                           
 21467                           ; BSR set to: 4
 21468                           ;usb_device.c: 2476: {
 21469                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 21470  005EF0  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21471  005EF4  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21472  005EF8  0E7F               	movlw	127
 21473  005EFA  16DF               	andwf	indf2,f,c
 21474                           
 21475                           ; BSR set to: 4
 21476                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 21477  005EFC  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21478  005F00  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21479  005F04  0E00               	movlw	0
 21480  005F06  8CDB               	bsf	plusw2,6,c
 21481                           
 21482                           ; BSR set to: 4
 21483                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 21484  005F08  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21485  005F0A  0E05               	movlw	5
 21486  005F0C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21487  005F0E  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 21488  005F12  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 21489  005F16  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21490  005F18  0E02               	movlw	2
 21491  005F1A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21492  005F1C  EC16  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21493                           
 21494                           ;usb_device.c: 2482: }
 21495  005F20  D006               	goto	i2l6873
 21496  005F22                     i2l6871:
 21497                           
 21498                           ; BSR set to: 4
 21499                           ;usb_device.c: 2483: else
 21500                           ;usb_device.c: 2484: {
 21501                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 21502  005F22  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21503  005F26  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21504  005F2A  0E00               	movlw	0
 21505  005F2C  8CDB               	bsf	plusw2,6,c
 21506  005F2E                     i2l6873:
 21507                           
 21508                           ;usb_device.c: 2487: }
 21509                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 21510  005F2E  0E04               	movlw	4
 21511  005F30  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 21512                           
 21513                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 21514  005F32  B247               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 21515  005F34  D006               	goto	i2l1810
 21516  005F36  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21517  005F3A  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21518  005F3E  AEDF               	btfss	indf2,7,c
 21519  005F40  D025               	goto	i2l6887
 21520  005F42                     i2l1810:
 21521                           
 21522                           ;usb_device.c: 2498: {
 21523                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 21524  005F42  0104               	movlb	4	; () banked
 21525  005F44  BF34               	btfsc	52,7,b	;volatile
 21526  005F46  D006               	goto	i2l6881
 21527                           
 21528                           ; BSR set to: 4
 21529                           ;usb_device.c: 2500: {
 21530                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 21531  005F48  5134               	movf	52,w,b	;volatile
 21532  005F4A  0B0F               	andlw	15
 21533  005F4C  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21534  005F4E  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21535  005F50  0F6D               	addlw	low _ep_data_out
 21536  005F52  D005               	goto	L62
 21537  005F54                     i2l6881:
 21538                           
 21539                           ; BSR set to: 4
 21540                           ;usb_device.c: 2503: else
 21541                           ;usb_device.c: 2504: {
 21542                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 21543  005F54  5134               	movf	52,w,b	;volatile
 21544  005F56  0B0F               	andlw	15
 21545  005F58  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21546  005F5A  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21547  005F5C  0F6A               	addlw	low _ep_data_in
 21548  005F5E                     L62:
 21549  005F5E  6ED9               	movwf	fsr2l,c
 21550  005F60  6ADA               	clrf	fsr2h,c
 21551  005F62  0100               	movlb	0	; () banked
 21552  005F64  92DF               	bcf	indf2,1,c
 21553                           
 21554                           ; BSR set to: 0
 21555                           ;usb_device.c: 2506: }
 21556                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 21557  005F66  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21558  005F6A  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21559  005F6E  0E3B               	movlw	59
 21560  005F70  16DF               	andwf	indf2,f,c
 21561                           
 21562                           ; BSR set to: 0
 21563                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 21564  005F72  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21565  005F74  0E05               	movlw	5
 21566  005F76  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21567  005F78  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 21568  005F7C  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 21569  005F80  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21570  005F82  0E02               	movlw	2
 21571  005F84  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21572  005F86  EC16  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21573                           
 21574                           ;usb_device.c: 2512: }
 21575  005F8A  D006               	goto	i2l6889
 21576  005F8C                     i2l6887:
 21577                           
 21578                           ;usb_device.c: 2513: else
 21579                           ;usb_device.c: 2514: {
 21580                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 21581  005F8C  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21582  005F90  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21583  005F94  0E3B               	movlw	59
 21584  005F96  16DF               	andwf	indf2,f,c
 21585  005F98                     i2l6889:
 21586                           
 21587                           ;usb_device.c: 2517: }
 21588                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 21589  005F98  0104               	movlb	4	; () banked
 21590  005F9A  5134               	movf	52,w,b	;volatile
 21591  005F9C  0B0F               	andlw	15
 21592  005F9E  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21593  005FA0  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 21594  005FA2  0E6A               	movlw	106
 21595  005FA4  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 21596  005FA6  6E45               	movwf	USBStdFeatureReqHandler@pUEP,c
 21597  005FA8  0E0F               	movlw	15
 21598  005FAA  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 21599  005FAC  6E46               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 21600                           
 21601                           ; BSR set to: 4
 21602                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 21603  005FAE  C045  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 21604  005FB2  C046  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 21605  005FB6  0EFE               	movlw	254
 21606  005FB8  16DF               	andwf	indf2,f,c
 21607  005FBA  0CFE               	retlw	254	;funcret
 21608  005FBC                     __end_of_USBStdFeatureReqHandler:
 21609                           	opt stack 0
 21610                           pclatu	equ	0xFFB
 21611                           pclath	equ	0xFFA
 21612                           tblptru	equ	0xFF8
 21613                           tblptrh	equ	0xFF7
 21614                           tblptrl	equ	0xFF6
 21615                           tablat	equ	0xFF5
 21616                           prodh	equ	0xFF4
 21617                           prodl	equ	0xFF3
 21618                           intcon	equ	0xFF2
 21619                           postinc0	equ	0xFEE
 21620                           wreg	equ	0xFE8
 21621                           indf1	equ	0xFE7
 21622                           postdec1	equ	0xFE5
 21623                           fsr1h	equ	0xFE2
 21624                           fsr1l	equ	0xFE1
 21625                           indf2	equ	0xFDF
 21626                           postinc2	equ	0xFDE
 21627                           postdec2	equ	0xFDD
 21628                           plusw2	equ	0xFDB
 21629                           fsr2h	equ	0xFDA
 21630                           fsr2l	equ	0xFD9
 21631                           status	equ	0xFD8
 21632                           
 21633 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 21634 ;; Defined at:
 21635 ;;		line 271 in file "../Includes/Board/USBapp.c"
 21636 ;; Parameters:    Size  Location     Type
 21637 ;;  event           2   13[COMRAM] enum E6555
 21638 ;;  pdata           2   15[COMRAM] PTR void 
 21639 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 21640 ;;  size            2   17[COMRAM] unsigned int 
 21641 ;; Auto vars:     Size  Location     Type
 21642 ;;		None
 21643 ;; Return value:  Size  Location     Type
 21644 ;;                  1    wreg      unsigned char 
 21645 ;; Registers used:
 21646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21647 ;; Tracked objects:
 21648 ;;		On entry : 0/0
 21649 ;;		On exit  : 0/0
 21650 ;;		Unchanged: 0/0
 21651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21652 ;;      Params:         6       0       0       0       0       0       0       0       0
 21653 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21654 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21655 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21656 ;;Total ram usage:        8 bytes
 21657 ;; Hardware stack levels used:    1
 21658 ;; Hardware stack levels required when called:    4
 21659 ;; This function calls:
 21660 ;;		_USBCheckCDCRequest
 21661 ;;		_USBapp_CdcEmulatorInitialize
 21662 ;; This function is called by:
 21663 ;;		_USBDeviceTasks
 21664 ;;		_USBStdSetCfgHandler
 21665 ;;		_USBSuspend
 21666 ;;		_USBWakeFromSuspend
 21667 ;;		_USBCtrlTrfSetupHandler
 21668 ;;		_USBCheckStdRequest
 21669 ;;		_USBStdFeatureReqHandler
 21670 ;; This function uses a non-reentrant model
 21671 ;;
 21672                           
 21673                           	psect	text102
 21674  003C2C                     __ptext102:
 21675                           	opt stack 0
 21676  003C2C                     _USER_USB_CALLBACK_EVENT_HANDLER:
 21677                           	opt stack 14
 21678  003C2C                     i2l6439:
 21679  003C2C  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 21680  003C30  C03C  F042         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 21681                           
 21682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 21683                           ; Switch size 1, requested type "speed"
 21684                           ; Number of cases is 2, Range of values is 0 to 127
 21685                           ; switch strategies available:
 21686                           ; Name         Instructions Cycles
 21687                           ; simple_byte            7     4 (average)
 21688                           ;	Chosen strategy is simple_byte
 21689  003C34  5042               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 21690  003C36  E004               	bz	i2l12345
 21691  003C38  0A7F               	xorlw	127	; case 127
 21692  003C3A  A4D8               	btfss	status,2,c
 21693  003C3C  0012               	return	
 21694  003C3E  D019               	goto	i2l12347
 21695  003C40                     i2l12345:
 21696                           
 21697                           ; Switch size 1, requested type "speed"
 21698                           ; Number of cases is 8, Range of values is 1 to 117
 21699                           ; switch strategies available:
 21700                           ; Name         Instructions Cycles
 21701                           ; simple_byte           25    13 (average)
 21702                           ;	Chosen strategy is simple_byte
 21703  003C40  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 21704  003C42  0A01               	xorlw	1	; case 1
 21705  003C44  E102 EF21  F01D    	bz	_USBapp_CdcEmulatorInitialize
 21706  003C4A  0A03               	xorlw	3	; case 2
 21707  003C4C  B4D8               	btfsc	status,2,c
 21708  003C4E  0012               	return	
 21709  003C50  0A01               	xorlw	1	; case 3
 21710  003C52  E102 EFB4  F022    	bz	_USBCheckCDCRequest
 21711  003C58  0A06               	xorlw	6	; case 5
 21712  003C5A  B4D8               	btfsc	status,2,c
 21713  003C5C  0012               	return	
 21714  003C5E  0A77               	xorlw	119	; case 114
 21715  003C60  B4D8               	btfsc	status,2,c
 21716  003C62  0012               	return	
 21717  003C64  0A01               	xorlw	1	; case 115
 21718  003C66  B4D8               	btfsc	status,2,c
 21719  003C68  0012               	return	
 21720  003C6A  0A07               	xorlw	7	; case 116
 21721  003C6C  A4D8               	btfss	status,2,c
 21722  003C6E  0A01               	xorlw	1	; case 117
 21723  003C70  0012               	return	
 21724  003C72                     i2l12347:
 21725                           
 21726                           ; Switch size 1, requested type "speed"
 21727                           ; Number of cases is 1, Range of values is 255 to 255
 21728                           ; switch strategies available:
 21729                           ; Name         Instructions Cycles
 21730                           ; simple_byte            4     3 (average)
 21731                           ;	Chosen strategy is simple_byte
 21732  003C72  1C41               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 21733  003C74  0012               	return	
 21734  003C76                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 21735                           	opt stack 0
 21736                           pclatu	equ	0xFFB
 21737                           pclath	equ	0xFFA
 21738                           tblptru	equ	0xFF8
 21739                           tblptrh	equ	0xFF7
 21740                           tblptrl	equ	0xFF6
 21741                           tablat	equ	0xFF5
 21742                           prodh	equ	0xFF4
 21743                           prodl	equ	0xFF3
 21744                           intcon	equ	0xFF2
 21745                           postinc0	equ	0xFEE
 21746                           wreg	equ	0xFE8
 21747                           indf1	equ	0xFE7
 21748                           postdec1	equ	0xFE5
 21749                           fsr1h	equ	0xFE2
 21750                           fsr1l	equ	0xFE1
 21751                           indf2	equ	0xFDF
 21752                           postinc2	equ	0xFDE
 21753                           postdec2	equ	0xFDD
 21754                           plusw2	equ	0xFDB
 21755                           fsr2h	equ	0xFDA
 21756                           fsr2l	equ	0xFD9
 21757                           status	equ	0xFD8
 21758                           
 21759 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 21760 ;; Defined at:
 21761 ;;		line 107 in file "../Includes/Board/USBapp.c"
 21762 ;; Parameters:    Size  Location     Type
 21763 ;;		None
 21764 ;; Auto vars:     Size  Location     Type
 21765 ;;  i               1   12[COMRAM] unsigned char 
 21766 ;; Return value:  Size  Location     Type
 21767 ;;		None               void
 21768 ;; Registers used:
 21769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21770 ;; Tracked objects:
 21771 ;;		On entry : 0/0
 21772 ;;		On exit  : 0/0
 21773 ;;		Unchanged: 0/0
 21774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21775 ;;      Params:         0       0       0       0       0       0       0       0       0
 21776 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21777 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21778 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21779 ;;Total ram usage:        1 bytes
 21780 ;; Hardware stack levels used:    1
 21781 ;; Hardware stack levels required when called:    3
 21782 ;; This function calls:
 21783 ;;		_CDCInitEP
 21784 ;;		i2_EUSART_Initialize
 21785 ;; This function is called by:
 21786 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21787 ;; This function uses a non-reentrant model
 21788 ;;
 21789                           
 21790                           	psect	text103
 21791  003A42                     __ptext103:
 21792                           	opt stack 0
 21793  003A42                     _USBapp_CdcEmulatorInitialize:
 21794                           	opt stack 14
 21795                           
 21796                           ;USBapp.c: 110: CDCInitEP();
 21797                           
 21798                           ;incstack = 0
 21799  003A42  ECD4  F01E         	call	_CDCInitEP	;wreg free
 21800                           
 21801                           ; BSR set to: 0
 21802                           ;USBapp.c: 111: line_coding.bCharFormat = 0;
 21803  003A46  6BC0               	clrf	(_line_coding+4)& (0+255),b
 21804                           
 21805                           ; BSR set to: 0
 21806                           ;USBapp.c: 112: line_coding.bDataBits = 8;
 21807  003A48  0E08               	movlw	8
 21808  003A4A  6FC2               	movwf	(_line_coding+6)& (0+255),b
 21809                           
 21810                           ; BSR set to: 0
 21811                           ;USBapp.c: 113: line_coding.bParityType = 0;
 21812  003A4C  6BC1               	clrf	(_line_coding+5)& (0+255),b
 21813                           
 21814                           ; BSR set to: 0
 21815                           ;USBapp.c: 114: line_coding.dwDTERate = 19200;
 21816  003A4E  6BBC               	clrf	_line_coding& (0+255),b
 21817  003A50  0E4B               	movlw	75
 21818  003A52  6FBD               	movwf	(_line_coding+1)& (0+255),b
 21819  003A54  6BBE               	clrf	(_line_coding+2)& (0+255),b
 21820  003A56  6BBF               	clrf	(_line_coding+3)& (0+255),b
 21821                           
 21822                           ; BSR set to: 0
 21823                           ;USBapp.c: 115: EUSART_Initialize();
 21824  003A58  EC4C  F01C         	call	i2_EUSART_Initialize	;wreg free
 21825                           
 21826                           ; BSR set to: 0
 21827                           ;USBapp.c: 117: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 21828  003A5C  6A3A               	clrf	USBapp_CdcEmulatorInitialize@i,c
 21829  003A5E                     i2l6359:
 21830                           
 21831                           ;USBapp.c: 118: {
 21832                           ;USBapp.c: 119: USB_Buffer[i] = 0;
 21833  003A5E  0E40               	movlw	low _USB_Buffer
 21834  003A60  243A               	addwf	USBapp_CdcEmulatorInitialize@i,w,c
 21835  003A62  6ED9               	movwf	fsr2l,c
 21836  003A64  6ADA               	clrf	fsr2h,c
 21837  003A66  0E01               	movlw	high _USB_Buffer
 21838  003A68  22DA               	addwfc	fsr2h,f,c
 21839  003A6A  6ADF               	clrf	indf2,c
 21840  003A6C  2A3A               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 21841  003A6E  0E3F               	movlw	63
 21842  003A70  643A               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 21843  003A72  D7F5               	goto	i2l6359
 21844                           
 21845                           ;USBapp.c: 120: }
 21846                           ;USBapp.c: 121: NextUSBOut = 0;
 21847  003A74  6A1A               	clrf	_NextUSBOut,c
 21848                           
 21849                           ;USBapp.c: 122: LastRS232Out = 0;
 21850  003A76  6A19               	clrf	_LastRS232Out,c
 21851  003A78  0012               	return		;funcret
 21852  003A7A                     __end_of_USBapp_CdcEmulatorInitialize:
 21853                           	opt stack 0
 21854                           pclatu	equ	0xFFB
 21855                           pclath	equ	0xFFA
 21856                           tblptru	equ	0xFF8
 21857                           tblptrh	equ	0xFF7
 21858                           tblptrl	equ	0xFF6
 21859                           tablat	equ	0xFF5
 21860                           prodh	equ	0xFF4
 21861                           prodl	equ	0xFF3
 21862                           intcon	equ	0xFF2
 21863                           postinc0	equ	0xFEE
 21864                           wreg	equ	0xFE8
 21865                           indf1	equ	0xFE7
 21866                           postdec1	equ	0xFE5
 21867                           fsr1h	equ	0xFE2
 21868                           fsr1l	equ	0xFE1
 21869                           indf2	equ	0xFDF
 21870                           postinc2	equ	0xFDE
 21871                           postdec2	equ	0xFDD
 21872                           plusw2	equ	0xFDB
 21873                           fsr2h	equ	0xFDA
 21874                           fsr2l	equ	0xFD9
 21875                           status	equ	0xFD8
 21876                           
 21877 ;; *************** function _CDCInitEP *****************
 21878 ;; Defined at:
 21879 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 21880 ;; Parameters:    Size  Location     Type
 21881 ;;		None
 21882 ;; Auto vars:     Size  Location     Type
 21883 ;;		None
 21884 ;; Return value:  Size  Location     Type
 21885 ;;		None               void
 21886 ;; Registers used:
 21887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21888 ;; Tracked objects:
 21889 ;;		On entry : 0/0
 21890 ;;		On exit  : F/0
 21891 ;;		Unchanged: 0/0
 21892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21893 ;;      Params:         0       0       0       0       0       0       0       0       0
 21894 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21895 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21896 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21897 ;;Total ram usage:        0 bytes
 21898 ;; Hardware stack levels used:    1
 21899 ;; Hardware stack levels required when called:    2
 21900 ;; This function calls:
 21901 ;;		_USBEnableEndpoint
 21902 ;;		i2_USBTransferOnePacket
 21903 ;; This function is called by:
 21904 ;;		_USBapp_CdcEmulatorInitialize
 21905 ;; This function uses a non-reentrant model
 21906 ;;
 21907                           
 21908                           	psect	text104
 21909  003DA8                     __ptext104:
 21910                           	opt stack 0
 21911  003DA8                     _CDCInitEP:
 21912                           	opt stack 14
 21913                           
 21914                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 21915                           
 21916                           ;incstack = 0
 21917  003DA8  0100               	movlb	0	; () banked
 21918  003DAA  6BBC               	clrf	_line_coding& (0+255),b
 21919  003DAC  0E4B               	movlw	75
 21920  003DAE  6FBD               	movwf	(_line_coding+1)& (0+255),b
 21921  003DB0  6BBE               	clrf	(_line_coding+2)& (0+255),b
 21922  003DB2  6BBF               	clrf	(_line_coding+3)& (0+255),b
 21923                           
 21924                           ; BSR set to: 0
 21925                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 21926  003DB4  6BC0               	clrf	(_line_coding+4)& (0+255),b
 21927                           
 21928                           ; BSR set to: 0
 21929                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 21930  003DB6  6BC1               	clrf	(_line_coding+5)& (0+255),b
 21931                           
 21932                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 21933  003DB8  0E08               	movlw	8
 21934  003DBA  6FC2               	movwf	(_line_coding+6)& (0+255),b
 21935                           
 21936                           ; BSR set to: 0
 21937                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 21938  003DBC  6B91               	clrf	_cdc_rx_len& (0+255),b
 21939                           
 21940                           ; BSR set to: 0
 21941                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 21942  003DBE  0E1A               	movlw	26
 21943  003DC0  6E36               	movwf	USBEnableEndpoint@options,c
 21944  003DC2  0E01               	movlw	1
 21945  003DC4  ECEB  F01C         	call	_USBEnableEndpoint
 21946                           
 21947                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 21948  003DC8  0E1E               	movlw	30
 21949  003DCA  6E36               	movwf	USBEnableEndpoint@options,c
 21950  003DCC  0E02               	movlw	2
 21951  003DCE  ECEB  F01C         	call	_USBEnableEndpoint
 21952                           
 21953                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21954  003DD2  0E00               	movlw	0
 21955  003DD4  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 21956  003DD6  0E40               	movlw	64
 21957  003DD8  6E2F               	movwf	i2USBTransferOnePacket@data,c
 21958  003DDA  0E05               	movlw	5
 21959  003DDC  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 21960  003DDE  0E40               	movlw	64
 21961  003DE0  6E31               	movwf	i2USBTransferOnePacket@len,c
 21962  003DE2  0E02               	movlw	2
 21963  003DE4  EC15  F024         	call	i2_USBTransferOnePacket
 21964  003DE8  C02E  F078         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 21965  003DEC  C02F  F079         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21966                           
 21967                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 21968  003DF0  0100               	movlb	0	; () banked
 21969  003DF2  6B76               	clrf	_CDCDataInHandle& (0+255),b
 21970  003DF4  6B77               	clrf	(_CDCDataInHandle+1)& (0+255),b
 21971                           
 21972                           ; BSR set to: 0
 21973                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 21974  003DF6  6A20               	clrf	_cdc_trf_state,c
 21975                           
 21976                           ; BSR set to: 0
 21977  003DF8  0012               	return		;funcret
 21978  003DFA                     __end_of_CDCInitEP:
 21979                           	opt stack 0
 21980                           pclatu	equ	0xFFB
 21981                           pclath	equ	0xFFA
 21982                           tblptru	equ	0xFF8
 21983                           tblptrh	equ	0xFF7
 21984                           tblptrl	equ	0xFF6
 21985                           tablat	equ	0xFF5
 21986                           prodh	equ	0xFF4
 21987                           prodl	equ	0xFF3
 21988                           intcon	equ	0xFF2
 21989                           postinc0	equ	0xFEE
 21990                           wreg	equ	0xFE8
 21991                           indf1	equ	0xFE7
 21992                           postdec1	equ	0xFE5
 21993                           fsr1h	equ	0xFE2
 21994                           fsr1l	equ	0xFE1
 21995                           indf2	equ	0xFDF
 21996                           postinc2	equ	0xFDE
 21997                           postdec2	equ	0xFDD
 21998                           plusw2	equ	0xFDB
 21999                           fsr2h	equ	0xFDA
 22000                           fsr2l	equ	0xFD9
 22001                           status	equ	0xFD8
 22002                           
 22003 ;; *************** function i2_USBTransferOnePacket *****************
 22004 ;; Defined at:
 22005 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 22006 ;; Parameters:    Size  Location     Type
 22007 ;;  ep              1    wreg     unsigned char 
 22008 ;;  dir             1    0[COMRAM] unsigned char 
 22009 ;;  data            2    1[COMRAM] PTR unsigned char 
 22010 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 22011 ;;  len             1    3[COMRAM] unsigned char 
 22012 ;; Auto vars:     Size  Location     Type
 22013 ;;  ep              1    4[COMRAM] unsigned char 
 22014 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 22015 ;;		 -> BDT(48), NULL(0), 
 22016 ;; Return value:  Size  Location     Type
 22017 ;;                  2    0[COMRAM] PTR void 
 22018 ;; Registers used:
 22019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22020 ;; Tracked objects:
 22021 ;;		On entry : 0/0
 22022 ;;		On exit  : 0/0
 22023 ;;		Unchanged: 0/0
 22024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22025 ;;      Params:         4       0       0       0       0       0       0       0       0
 22026 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22027 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22028 ;;      Totals:         7       0       0       0       0       0       0       0       0
 22029 ;;Total ram usage:        7 bytes
 22030 ;; Hardware stack levels used:    1
 22031 ;; This function calls:
 22032 ;;		Nothing
 22033 ;; This function is called by:
 22034 ;;		_CDCInitEP
 22035 ;; This function uses a non-reentrant model
 22036 ;;
 22037                           
 22038                           	psect	text105
 22039  00482A                     __ptext105:
 22040                           	opt stack 0
 22041  00482A                     i2_USBTransferOnePacket:
 22042                           	opt stack 15
 22043                           
 22044                           ; BSR set to: 0
 22045                           ;incstack = 0
 22046                           ;i2USBTransferOnePacket@ep stored from wreg
 22047  00482A  6E32               	movwf	i2USBTransferOnePacket@ep,c
 22048                           
 22049                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 22050                           ;usb_device.c: 762: if(dir != 0)
 22051  00482C  502E               	movf	i2USBTransferOnePacket@dir,w,c
 22052  00482E  E005               	bz	i2l6227
 22053                           
 22054                           ;usb_device.c: 763: {
 22055                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 22056  004830  5032               	movf	i2USBTransferOnePacket@ep,w,c
 22057  004832  0D02               	mullw	2
 22058  004834  50F3               	movf	prodl,w,c
 22059  004836  0F0F               	addlw	low _pBDTEntryIn
 22060  004838  D004               	goto	L63
 22061  00483A                     i2l6227:
 22062                           
 22063                           ;usb_device.c: 767: else
 22064                           ;usb_device.c: 768: {
 22065                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 22066  00483A  5032               	movf	i2USBTransferOnePacket@ep,w,c
 22067  00483C  0D02               	mullw	2
 22068  00483E  50F3               	movf	prodl,w,c
 22069  004840  0F60               	addlw	low _pBDTEntryOut
 22070  004842                     L63:
 22071  004842  6ED9               	movwf	fsr2l,c
 22072  004844  6ADA               	clrf	fsr2h,c
 22073  004846  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 22074  00484A  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 22075                           
 22076                           ;usb_device.c: 771: }
 22077                           ;usb_device.c: 775: if(handle == 0)
 22078  00484E  5033               	movf	i2USBTransferOnePacket@handle,w,c
 22079  004850  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 22080  004852  E103               	bnz	i2l6233
 22081                           
 22082                           ;usb_device.c: 776: {
 22083                           ;usb_device.c: 777: return 0;
 22084  004854  6A2E               	clrf	?i2_USBTransferOnePacket,c
 22085  004856  6A2F               	clrf	?i2_USBTransferOnePacket+1,c
 22086  004858  0012               	return	
 22087  00485A                     i2l6233:
 22088                           
 22089                           ;usb_device.c: 778: }
 22090                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 22091  00485A  EE20 F002          	lfsr	2,2
 22092  00485E  5033               	movf	i2USBTransferOnePacket@handle,w,c
 22093  004860  26D9               	addwf	fsr2l,f,c
 22094  004862  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 22095  004864  22DA               	addwfc	fsr2h,f,c
 22096  004866  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 22097  00486A  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 22098                           
 22099                           ;usb_device.c: 781: handle->CNT = len;
 22100  00486E  EE20 F001          	lfsr	2,1
 22101  004872  5033               	movf	i2USBTransferOnePacket@handle,w,c
 22102  004874  26D9               	addwf	fsr2l,f,c
 22103  004876  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 22104  004878  22DA               	addwfc	fsr2h,f,c
 22105  00487A  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 22106                           
 22107                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 22108  00487E  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22109  004882  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22110  004886  0E40               	movlw	64
 22111  004888  16DF               	andwf	indf2,f,c
 22112                           
 22113                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 22114  00488A  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22115  00488E  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22116  004892  0E00               	movlw	0
 22117  004894  86DB               	bsf	plusw2,3,c
 22118                           
 22119                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 22120  004896  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22121  00489A  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22122  00489E  8EDB               	bsf	plusw2,7,c
 22123                           
 22124                           ;usb_device.c: 787: if(dir != 0)
 22125  0048A0  502E               	movf	i2USBTransferOnePacket@dir,w,c
 22126  0048A2  E005               	bz	i2l6245
 22127                           
 22128                           ;usb_device.c: 788: {
 22129                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 22130  0048A4  5032               	movf	i2USBTransferOnePacket@ep,w,c
 22131  0048A6  0D02               	mullw	2
 22132  0048A8  50F3               	movf	prodl,w,c
 22133  0048AA  0F0F               	addlw	low _pBDTEntryIn
 22134  0048AC  D004               	goto	L64
 22135  0048AE                     i2l6245:
 22136                           
 22137                           ;usb_device.c: 792: else
 22138                           ;usb_device.c: 793: {
 22139                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 22140  0048AE  5032               	movf	i2USBTransferOnePacket@ep,w,c
 22141  0048B0  0D02               	mullw	2
 22142  0048B2  50F3               	movf	prodl,w,c
 22143  0048B4  0F60               	addlw	low _pBDTEntryOut
 22144  0048B6                     L64:
 22145  0048B6  6ED9               	movwf	fsr2l,c
 22146  0048B8  6ADA               	clrf	fsr2h,c
 22147  0048BA  0E04               	movlw	4
 22148  0048BC  1ADF               	xorwf	indf2,f,c
 22149                           
 22150                           ;usb_device.c: 796: }
 22151                           ;usb_device.c: 797: return (void*)handle;
 22152  0048BE  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 22153  0048C2  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 22154  0048C6  0C04               	retlw	4	;funcret
 22155  0048C8                     __end_ofi2_USBTransferOnePacket:
 22156                           	opt stack 0
 22157                           pclatu	equ	0xFFB
 22158                           pclath	equ	0xFFA
 22159                           tblptru	equ	0xFF8
 22160                           tblptrh	equ	0xFF7
 22161                           tblptrl	equ	0xFF6
 22162                           tablat	equ	0xFF5
 22163                           prodh	equ	0xFF4
 22164                           prodl	equ	0xFF3
 22165                           intcon	equ	0xFF2
 22166                           postinc0	equ	0xFEE
 22167                           wreg	equ	0xFE8
 22168                           indf1	equ	0xFE7
 22169                           postdec1	equ	0xFE5
 22170                           fsr1h	equ	0xFE2
 22171                           fsr1l	equ	0xFE1
 22172                           indf2	equ	0xFDF
 22173                           postinc2	equ	0xFDE
 22174                           postdec2	equ	0xFDD
 22175                           plusw2	equ	0xFDB
 22176                           fsr2h	equ	0xFDA
 22177                           fsr2l	equ	0xFD9
 22178                           status	equ	0xFD8
 22179                           
 22180 ;; *************** function _USBEnableEndpoint *****************
 22181 ;; Defined at:
 22182 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 22183 ;; Parameters:    Size  Location     Type
 22184 ;;  ep              1    wreg     unsigned char 
 22185 ;;  options         1    8[COMRAM] unsigned char 
 22186 ;; Auto vars:     Size  Location     Type
 22187 ;;  ep              1   11[COMRAM] unsigned char 
 22188 ;;  p               2    9[COMRAM] PTR unsigned char 
 22189 ;;		 -> UEP0(1), 
 22190 ;; Return value:  Size  Location     Type
 22191 ;;		None               void
 22192 ;; Registers used:
 22193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22194 ;; Tracked objects:
 22195 ;;		On entry : 0/0
 22196 ;;		On exit  : 0/0
 22197 ;;		Unchanged: 0/0
 22198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22199 ;;      Params:         1       0       0       0       0       0       0       0       0
 22200 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22201 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22202 ;;      Totals:         4       0       0       0       0       0       0       0       0
 22203 ;;Total ram usage:        4 bytes
 22204 ;; Hardware stack levels used:    1
 22205 ;; Hardware stack levels required when called:    1
 22206 ;; This function calls:
 22207 ;;		_USBConfigureEndpoint
 22208 ;; This function is called by:
 22209 ;;		_CDCInitEP
 22210 ;; This function uses a non-reentrant model
 22211 ;;
 22212                           
 22213                           	psect	text106
 22214  0039D6                     __ptext106:
 22215                           	opt stack 0
 22216  0039D6                     _USBEnableEndpoint:
 22217                           	opt stack 14
 22218                           
 22219                           ;incstack = 0
 22220                           ;USBEnableEndpoint@ep stored from wreg
 22221  0039D6  6E39               	movwf	USBEnableEndpoint@ep,c
 22222                           
 22223                           ;usb_device.c: 647: unsigned char* p;
 22224                           ;usb_device.c: 651: if(options & 0x04)
 22225  0039D8  A436               	btfss	USBEnableEndpoint@options,2,c
 22226  0039DA  D004               	goto	i2l6215
 22227                           
 22228                           ;usb_device.c: 652: {
 22229                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 22230  0039DC  6A2E               	clrf	USBConfigureEndpoint@direction,c
 22231  0039DE  5039               	movf	USBEnableEndpoint@ep,w,c
 22232  0039E0  ECF8  F022         	call	_USBConfigureEndpoint
 22233  0039E4                     i2l6215:
 22234                           
 22235                           ;usb_device.c: 654: }
 22236                           ;usb_device.c: 655: if(options & 0x02)
 22237  0039E4  A236               	btfss	USBEnableEndpoint@options,1,c
 22238  0039E6  D005               	goto	i2l6219
 22239                           
 22240                           ;usb_device.c: 656: {
 22241                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 22242  0039E8  0E01               	movlw	1
 22243  0039EA  6E2E               	movwf	USBConfigureEndpoint@direction,c
 22244  0039EC  5039               	movf	USBEnableEndpoint@ep,w,c
 22245  0039EE  ECF8  F022         	call	_USBConfigureEndpoint
 22246  0039F2                     i2l6219:
 22247                           
 22248                           ;usb_device.c: 658: }
 22249                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 22250  0039F2  0E6A               	movlw	106
 22251  0039F4  2439               	addwf	USBEnableEndpoint@ep,w,c
 22252  0039F6  6E37               	movwf	USBEnableEndpoint@p,c
 22253  0039F8  6A38               	clrf	USBEnableEndpoint@p+1,c
 22254  0039FA  0E0F               	movlw	15
 22255  0039FC  2238               	addwfc	USBEnableEndpoint@p+1,f,c
 22256                           
 22257                           ;usb_device.c: 664: *p = options;
 22258  0039FE  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 22259  003A02  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 22260  003A06  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 22261  003A0A  0C0F               	retlw	15	;funcret
 22262  003A0C                     __end_of_USBEnableEndpoint:
 22263                           	opt stack 0
 22264                           pclatu	equ	0xFFB
 22265                           pclath	equ	0xFFA
 22266                           tblptru	equ	0xFF8
 22267                           tblptrh	equ	0xFF7
 22268                           tblptrl	equ	0xFF6
 22269                           tablat	equ	0xFF5
 22270                           prodh	equ	0xFF4
 22271                           prodl	equ	0xFF3
 22272                           intcon	equ	0xFF2
 22273                           postinc0	equ	0xFEE
 22274                           wreg	equ	0xFE8
 22275                           indf1	equ	0xFE7
 22276                           postdec1	equ	0xFE5
 22277                           fsr1h	equ	0xFE2
 22278                           fsr1l	equ	0xFE1
 22279                           indf2	equ	0xFDF
 22280                           postinc2	equ	0xFDE
 22281                           postdec2	equ	0xFDD
 22282                           plusw2	equ	0xFDB
 22283                           fsr2h	equ	0xFDA
 22284                           fsr2l	equ	0xFD9
 22285                           status	equ	0xFD8
 22286                           
 22287 ;; *************** function _USBConfigureEndpoint *****************
 22288 ;; Defined at:
 22289 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 22290 ;; Parameters:    Size  Location     Type
 22291 ;;  EPNum           1    wreg     unsigned char 
 22292 ;;  direction       1    0[COMRAM] unsigned char 
 22293 ;; Auto vars:     Size  Location     Type
 22294 ;;  EPNum           1    5[COMRAM] unsigned char 
 22295 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 22296 ;;		 -> BDT(48), 
 22297 ;; Return value:  Size  Location     Type
 22298 ;;		None               void
 22299 ;; Registers used:
 22300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22301 ;; Tracked objects:
 22302 ;;		On entry : 0/0
 22303 ;;		On exit  : 0/0
 22304 ;;		Unchanged: 0/0
 22305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22306 ;;      Params:         1       0       0       0       0       0       0       0       0
 22307 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22308 ;;      Temps:          4       0       0       0       0       0       0       0       0
 22309 ;;      Totals:         8       0       0       0       0       0       0       0       0
 22310 ;;Total ram usage:        8 bytes
 22311 ;; Hardware stack levels used:    1
 22312 ;; This function calls:
 22313 ;;		Nothing
 22314 ;; This function is called by:
 22315 ;;		_USBEnableEndpoint
 22316 ;; This function uses a non-reentrant model
 22317 ;;
 22318                           
 22319                           	psect	text107
 22320  0045F0                     __ptext107:
 22321                           	opt stack 0
 22322  0045F0                     _USBConfigureEndpoint:
 22323                           	opt stack 14
 22324                           
 22325                           ;incstack = 0
 22326                           ;USBConfigureEndpoint@EPNum stored from wreg
 22327  0045F0  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 22328                           
 22329                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 22330                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 22331  0045F2  6A34               	clrf	USBConfigureEndpoint@handle,c
 22332  0045F4  0E04               	movlw	4
 22333  0045F6  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 22334                           
 22335                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 22336  0045F8  502E               	movf	USBConfigureEndpoint@direction,w,c
 22337  0045FA  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 22338  0045FC  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 22339  0045FE  90D8               	bcf	status,0,c
 22340  004600  362F               	rlcf	??_USBConfigureEndpoint,f,c
 22341  004602  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 22342  004604  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 22343  004606  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 22344  004608  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 22345  00460A  90D8               	bcf	status,0,c
 22346  00460C  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 22347  00460E  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 22348  004610  90D8               	bcf	status,0,c
 22349  004612  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 22350  004614  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 22351  004616  502F               	movf	??_USBConfigureEndpoint,w,c
 22352  004618  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 22353  00461A  5030               	movf	??_USBConfigureEndpoint+1,w,c
 22354  00461C  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 22355  00461E  90D8               	bcf	status,0,c
 22356  004620  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 22357  004622  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 22358  004624  90D8               	bcf	status,0,c
 22359  004626  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 22360  004628  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 22361  00462A  5031               	movf	??_USBConfigureEndpoint+2,w,c
 22362  00462C  2634               	addwf	USBConfigureEndpoint@handle,f,c
 22363  00462E  5032               	movf	??_USBConfigureEndpoint+3,w,c
 22364  004630  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 22365                           
 22366                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 22367  004632  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 22368  004636  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 22369  00463A  9EDF               	bcf	indf2,7,c
 22370                           
 22371                           ;usb_device.c: 1242: if(direction == 0)
 22372  00463C  502E               	movf	USBConfigureEndpoint@direction,w,c
 22373  00463E  E105               	bnz	i2l6201
 22374                           
 22375                           ;usb_device.c: 1243: {
 22376                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 22377  004640  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 22378  004642  0D02               	mullw	2
 22379  004644  50F3               	movf	prodl,w,c
 22380  004646  0F60               	addlw	low _pBDTEntryOut
 22381  004648  D004               	goto	L65
 22382  00464A                     i2l6201:
 22383                           
 22384                           ;usb_device.c: 1246: else
 22385                           ;usb_device.c: 1247: {
 22386                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 22387  00464A  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 22388  00464C  0D02               	mullw	2
 22389  00464E  50F3               	movf	prodl,w,c
 22390  004650  0F0F               	addlw	low _pBDTEntryIn
 22391  004652                     L65:
 22392  004652  6ED9               	movwf	fsr2l,c
 22393  004654  6ADA               	clrf	fsr2h,c
 22394  004656  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 22395  00465A  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 22396                           
 22397                           ;usb_device.c: 1249: }
 22398                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 22399  00465E  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 22400  004662  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 22401  004666  9CDF               	bcf	indf2,6,c
 22402                           
 22403                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 22404  004668  EE20 F004          	lfsr	2,4
 22405  00466C  5034               	movf	USBConfigureEndpoint@handle,w,c
 22406  00466E  26D9               	addwf	fsr2l,f,c
 22407  004670  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 22408  004672  22DA               	addwfc	fsr2h,f,c
 22409  004674  8CDF               	bsf	indf2,6,c
 22410  004676  0012               	return		;funcret
 22411  004678                     __end_of_USBConfigureEndpoint:
 22412                           	opt stack 0
 22413                           pclatu	equ	0xFFB
 22414                           pclath	equ	0xFFA
 22415                           tblptru	equ	0xFF8
 22416                           tblptrh	equ	0xFF7
 22417                           tblptrl	equ	0xFF6
 22418                           tablat	equ	0xFF5
 22419                           prodh	equ	0xFF4
 22420                           prodl	equ	0xFF3
 22421                           intcon	equ	0xFF2
 22422                           postinc0	equ	0xFEE
 22423                           wreg	equ	0xFE8
 22424                           indf1	equ	0xFE7
 22425                           postdec1	equ	0xFE5
 22426                           fsr1h	equ	0xFE2
 22427                           fsr1l	equ	0xFE1
 22428                           indf2	equ	0xFDF
 22429                           postinc2	equ	0xFDE
 22430                           postdec2	equ	0xFDD
 22431                           plusw2	equ	0xFDB
 22432                           fsr2h	equ	0xFDA
 22433                           fsr2l	equ	0xFD9
 22434                           status	equ	0xFD8
 22435                           
 22436 ;; *************** function _USBCheckCDCRequest *****************
 22437 ;; Defined at:
 22438 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 22439 ;; Parameters:    Size  Location     Type
 22440 ;;		None
 22441 ;; Auto vars:     Size  Location     Type
 22442 ;;		None
 22443 ;; Return value:  Size  Location     Type
 22444 ;;		None               void
 22445 ;; Registers used:
 22446 ;;		wreg, status,2, status,0
 22447 ;; Tracked objects:
 22448 ;;		On entry : 0/0
 22449 ;;		On exit  : F/4
 22450 ;;		Unchanged: 0/0
 22451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22452 ;;      Params:         0       0       0       0       0       0       0       0       0
 22453 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22454 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22455 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22456 ;;Total ram usage:        0 bytes
 22457 ;; Hardware stack levels used:    1
 22458 ;; This function calls:
 22459 ;;		Nothing
 22460 ;; This function is called by:
 22461 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22462 ;; This function uses a non-reentrant model
 22463 ;;
 22464                           
 22465                           	psect	text108
 22466  004568                     __ptext108:
 22467                           	opt stack 0
 22468  004568                     _USBCheckCDCRequest:
 22469                           	opt stack 17
 22470                           
 22471                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 22472                           
 22473                           ;incstack = 0
 22474  004568  0104               	movlb	4	; () banked
 22475  00456A  5130               	movf	48,w,b	;volatile
 22476  00456C  0B1F               	andlw	31
 22477  00456E  06E8               	decf	wreg,f,c
 22478  004570  E001               	bz	i2l6369
 22479  004572  0012               	return	
 22480  004574                     i2l6369:
 22481                           
 22482                           ; BSR set to: 4
 22483                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 22484  004574  3930               	swapf	48,w,b	;volatile
 22485  004576  32E8               	rrcf	wreg,f,c
 22486  004578  0B03               	andlw	3
 22487  00457A  06E8               	decf	wreg,f,c
 22488  00457C  E001               	bz	i2l6373
 22489  00457E  0012               	return	
 22490  004580                     i2l6373:
 22491                           
 22492                           ; BSR set to: 4
 22493                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 22494                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 22495  004580  5134               	movf	52,w,b	;volatile
 22496  004582  E02B               	bz	i2l6407
 22497                           
 22498                           ; BSR set to: 4
 22499  004584  0534               	decf	52,w,b	;volatile
 22500  004586  E029               	bz	i2l6407
 22501  004588  0012               	return	
 22502  00458A                     i2l6379:
 22503                           
 22504                           ; BSR set to: 4
 22505                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22506  00458A  0ED0               	movlw	low _dummy_encapsulated_cmd_response
 22507  00458C  6E09               	movwf	_inPipes,c	;volatile
 22508  00458E  0E01               	movlw	high _dummy_encapsulated_cmd_response
 22509  004590  6E0A               	movwf	_inPipes+1,c	;volatile
 22510                           
 22511                           ; BSR set to: 4
 22512                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 22513  004592  6A0E               	clrf	_inPipes+5,c	;volatile
 22514  004594  0E08               	movlw	8
 22515  004596  6E0D               	movwf	_inPipes+4,c	;volatile
 22516                           
 22517                           ; BSR set to: 4
 22518                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22519  004598  800C               	bsf	_inPipes+3,0,c	;volatile
 22520                           
 22521                           ; BSR set to: 4
 22522                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 22523  00459A  8E0C               	bsf	_inPipes+3,7,c	;volatile
 22524                           
 22525                           ;usb_device_cdc.c: 212: break;
 22526  00459C  0C08               	retlw	8
 22527  00459E                     i2l6387:
 22528                           
 22529                           ; BSR set to: 4
 22530                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22531  00459E  0ED0               	movlw	low _dummy_encapsulated_cmd_response
 22532  0045A0  6E09               	movwf	_inPipes,c	;volatile
 22533  0045A2  0E01               	movlw	high _dummy_encapsulated_cmd_response
 22534  0045A4  6E0A               	movwf	_inPipes+1,c	;volatile
 22535                           
 22536                           ; BSR set to: 4
 22537                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 22538  0045A6  8E0C               	bsf	_inPipes+3,7,c	;volatile
 22539                           
 22540                           ;usb_device_cdc.c: 217: break;
 22541  0045A8  0012               	return	
 22542  0045AA                     i2l1869:
 22543                           
 22544                           ; BSR set to: 4
 22545                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 22546  0045AA  C436 F005          	movff	1078,_outPipes+4	;volatile
 22547  0045AE  C437 F006          	movff	1079,_outPipes+5	;volatile
 22548                           
 22549                           ; BSR set to: 4
 22550                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 22551  0045B2  0EAA               	movlw	low _cdc_notice
 22552  0045B4  6E01               	movwf	_outPipes,c	;volatile
 22553                           
 22554                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 22555  0045B6  0EFA               	movlw	low _USART_mySetLineCodingHandler
 22556  0045B8  6E07               	movwf	_outPipes+6,c	;volatile
 22557  0045BA  0E3D               	movlw	high _USART_mySetLineCodingHandler
 22558  0045BC  6E08               	movwf	_outPipes+7,c	;volatile
 22559                           
 22560                           ; BSR set to: 4
 22561                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 22562  0045BE  8E04               	bsf	_outPipes+3,7,c	;volatile
 22563                           
 22564                           ;usb_device_cdc.c: 224: break;
 22565  0045C0  0012               	return	
 22566  0045C2                     i2l6395:
 22567                           
 22568                           ; BSR set to: 4
 22569                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 22570  0045C2  0EBC               	movlw	low _line_coding
 22571  0045C4  6E09               	movwf	_inPipes,c	;volatile
 22572  0045C6  6A0A               	clrf	_inPipes+1,c	;volatile
 22573                           
 22574                           ; BSR set to: 4
 22575  0045C8  6A0E               	clrf	_inPipes+5,c	;volatile
 22576  0045CA  0E07               	movlw	7
 22577  0045CC  6E0D               	movwf	_inPipes+4,c	;volatile
 22578                           
 22579                           ; BSR set to: 4
 22580  0045CE  0EC1               	movlw	193
 22581  0045D0  6E0C               	movwf	_inPipes+3,c	;volatile
 22582                           
 22583                           ;usb_device_cdc.c: 231: break;
 22584  0045D2  0CC1               	retlw	193
 22585  0045D4                     i2l6401:
 22586                           
 22587                           ; BSR set to: 4
 22588                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 22589  0045D4  5132               	movf	50,w,b	;volatile
 22590                           
 22591                           ; BSR set to: 4
 22592                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 22593  0045D6  8E0C               	bsf	_inPipes+3,7,c	;volatile
 22594                           
 22595                           ;usb_device_cdc.c: 256: break;
 22596  0045D8  0012               	return	
 22597  0045DA                     i2l6407:
 22598                           
 22599                           ; BSR set to: 4
 22600  0045DA  5131               	movf	49,w,b	;volatile
 22601                           
 22602                           ; Switch size 1, requested type "speed"
 22603                           ; Number of cases is 5, Range of values is 0 to 34
 22604                           ; switch strategies available:
 22605                           ; Name         Instructions Cycles
 22606                           ; simple_byte           16     9 (average)
 22607                           ;	Chosen strategy is simple_byte
 22608  0045DC  E0D6               	bz	i2l6379
 22609  0045DE  0A01               	xorlw	1	; case 1
 22610  0045E0  E0DE               	bz	i2l6387
 22611  0045E2  0A21               	xorlw	33	; case 32
 22612  0045E4  E0E2               	bz	i2l1869
 22613  0045E6  0A01               	xorlw	1	; case 33
 22614  0045E8  E0EC               	bz	i2l6395
 22615  0045EA  0A03               	xorlw	3	; case 34
 22616  0045EC  E0F3               	bz	i2l6401
 22617                           
 22618                           ; BSR set to: 4
 22619  0045EE  0012               	return		;funcret
 22620  0045F0                     __end_of_USBCheckCDCRequest:
 22621                           	opt stack 0
 22622                           pclatu	equ	0xFFB
 22623                           pclath	equ	0xFFA
 22624                           tblptru	equ	0xFF8
 22625                           tblptrh	equ	0xFF7
 22626                           tblptrl	equ	0xFF6
 22627                           tablat	equ	0xFF5
 22628                           prodh	equ	0xFF4
 22629                           prodl	equ	0xFF3
 22630                           intcon	equ	0xFF2
 22631                           postinc0	equ	0xFEE
 22632                           wreg	equ	0xFE8
 22633                           indf1	equ	0xFE7
 22634                           postdec1	equ	0xFE5
 22635                           fsr1h	equ	0xFE2
 22636                           fsr1l	equ	0xFE1
 22637                           indf2	equ	0xFDF
 22638                           postinc2	equ	0xFDE
 22639                           postdec2	equ	0xFDD
 22640                           plusw2	equ	0xFDB
 22641                           fsr2h	equ	0xFDA
 22642                           fsr2l	equ	0xFD9
 22643                           status	equ	0xFD8
 22644                           
 22645 ;; *************** function _USBCtrlTrfOutHandler *****************
 22646 ;; Defined at:
 22647 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 22648 ;; Parameters:    Size  Location     Type
 22649 ;;		None
 22650 ;; Auto vars:     Size  Location     Type
 22651 ;;		None
 22652 ;; Return value:  Size  Location     Type
 22653 ;;		None               void
 22654 ;; Registers used:
 22655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 22656 ;; Tracked objects:
 22657 ;;		On entry : F/0
 22658 ;;		On exit  : F/0
 22659 ;;		Unchanged: 0/0
 22660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22661 ;;      Params:         0       0       0       0       0       0       0       0       0
 22662 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22663 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22664 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22665 ;;Total ram usage:        0 bytes
 22666 ;; Hardware stack levels used:    1
 22667 ;; Hardware stack levels required when called:    3
 22668 ;; This function calls:
 22669 ;;		_USBCtrlTrfRxService
 22670 ;; This function is called by:
 22671 ;;		_USBCtrlEPService
 22672 ;; This function uses a non-reentrant model
 22673 ;;
 22674                           
 22675                           	psect	text109
 22676  003D56                     __ptext109:
 22677                           	opt stack 0
 22678  003D56                     _USBCtrlTrfOutHandler:
 22679                           	opt stack 14
 22680                           
 22681                           ; BSR set to: 0
 22682                           ;usb_device.c: 2171: if(controlTransferState == 2)
 22683                           
 22684                           ; BSR set to: 4
 22685                           ;incstack = 0
 22686  003D56  0E02               	movlw	2
 22687  003D58  1821               	xorwf	_controlTransferState,w,c	;volatile
 22688  003D5A  E102               	bnz	i2l1752
 22689                           
 22690                           ; BSR set to: 0
 22691                           ;usb_device.c: 2172: {
 22692                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 22693  003D5C  EF66  F02D         	goto	_USBCtrlTrfRxService	;wreg free
 22694  003D60                     i2l1752:
 22695                           
 22696                           ; BSR set to: 0
 22697                           ;usb_device.c: 2175: else
 22698                           ;usb_device.c: 2176: {
 22699                           ;usb_device.c: 2179: controlTransferState = 0;
 22700  003D60  6A21               	clrf	_controlTransferState,c	;volatile
 22701                           
 22702                           ; BSR set to: 0
 22703                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 22704  003D62  5186               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 22705  003D64  E11F               	bnz	i2l1754
 22706                           
 22707                           ; BSR set to: 0
 22708                           ;usb_device.c: 2187: {
 22709                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 22710  003D66  EE20 F001          	lfsr	2,1
 22711  003D6A  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22712  003D6C  26D9               	addwf	fsr2l,f,c
 22713  003D6E  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22714  003D70  22DA               	addwfc	fsr2h,f,c
 22715  003D72  0E08               	movlw	8
 22716  003D74  6EDF               	movwf	indf2,c
 22717                           
 22718                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22719  003D76  EE20 F002          	lfsr	2,2
 22720  003D7A  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22721  003D7C  26D9               	addwf	fsr2l,f,c
 22722  003D7E  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22723  003D80  22DA               	addwfc	fsr2h,f,c
 22724  003D82  0E30               	movlw	48
 22725  003D84  6EDE               	movwf	postinc2,c
 22726  003D86  0E04               	movlw	4
 22727  003D88  6EDD               	movwf	postdec2,c
 22728                           
 22729                           ; BSR set to: 0
 22730                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22731  003D8A  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22732  003D8E  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22733  003D92  0E0C               	movlw	12
 22734  003D94  6EDF               	movwf	indf2,c
 22735                           
 22736                           ; BSR set to: 0
 22737                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22738  003D96  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22739  003D9A  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22740  003D9E  0E00               	movlw	0
 22741  003DA0  8EDB               	bsf	plusw2,7,c
 22742                           
 22743                           ;usb_device.c: 2192: }
 22744  003DA2  0C00               	retlw	0
 22745  003DA4                     i2l1754:
 22746                           
 22747                           ; BSR set to: 0
 22748                           ;usb_device.c: 2193: else
 22749                           ;usb_device.c: 2194: {
 22750                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 22751  003DA4  6B86               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 22752                           
 22753                           ; BSR set to: 0
 22754  003DA6  0012               	return		;funcret
 22755  003DA8                     __end_of_USBCtrlTrfOutHandler:
 22756                           	opt stack 0
 22757                           pclatu	equ	0xFFB
 22758                           pclath	equ	0xFFA
 22759                           tblptru	equ	0xFF8
 22760                           tblptrh	equ	0xFF7
 22761                           tblptrl	equ	0xFF6
 22762                           tablat	equ	0xFF5
 22763                           prodh	equ	0xFF4
 22764                           prodl	equ	0xFF3
 22765                           intcon	equ	0xFF2
 22766                           postinc0	equ	0xFEE
 22767                           wreg	equ	0xFE8
 22768                           indf1	equ	0xFE7
 22769                           postdec1	equ	0xFE5
 22770                           fsr1h	equ	0xFE2
 22771                           fsr1l	equ	0xFE1
 22772                           indf2	equ	0xFDF
 22773                           postinc2	equ	0xFDE
 22774                           postdec2	equ	0xFDD
 22775                           plusw2	equ	0xFDB
 22776                           fsr2h	equ	0xFDA
 22777                           fsr2l	equ	0xFD9
 22778                           status	equ	0xFD8
 22779                           
 22780 ;; *************** function _USBCtrlTrfRxService *****************
 22781 ;; Defined at:
 22782 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 22783 ;; Parameters:    Size  Location     Type
 22784 ;;		None
 22785 ;; Auto vars:     Size  Location     Type
 22786 ;;  byteToRead      1   18[COMRAM] unsigned char 
 22787 ;;  i               1   17[COMRAM] unsigned char 
 22788 ;; Return value:  Size  Location     Type
 22789 ;;		None               void
 22790 ;; Registers used:
 22791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 22792 ;; Tracked objects:
 22793 ;;		On entry : F/0
 22794 ;;		On exit  : F/0
 22795 ;;		Unchanged: 0/0
 22796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22797 ;;      Params:         0       0       0       0       0       0       0       0       0
 22798 ;;      Locals:         2       0       0       0       0       0       0       0       0
 22799 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22800 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22801 ;;Total ram usage:        2 bytes
 22802 ;; Hardware stack levels used:    1
 22803 ;; Hardware stack levels required when called:    2
 22804 ;; This function calls:
 22805 ;;		_USART_mySetLineCodingHandler
 22806 ;;		_USBCtrlEPAllowStatusStage
 22807 ;; This function is called by:
 22808 ;;		_USBCtrlTrfOutHandler
 22809 ;; This function uses a non-reentrant model
 22810 ;;
 22811                           
 22812                           	psect	text110
 22813  005ACC                     __ptext110:
 22814                           	opt stack 0
 22815  005ACC                     _USBCtrlTrfRxService:
 22816                           	opt stack 14
 22817                           
 22818                           ; BSR set to: 0
 22819                           ;usb_device.c: 1520: uint8_t byteToRead;
 22820                           ;usb_device.c: 1521: uint8_t i;
 22821                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 22822                           
 22823                           ; BSR set to: 0
 22824                           ;incstack = 0
 22825  005ACC  EE20 F001          	lfsr	2,1
 22826  005AD0  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 22827  005AD2  26D9               	addwf	fsr2l,f,c
 22828  005AD4  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 22829  005AD6  22DA               	addwfc	fsr2h,f,c
 22830  005AD8  50DF               	movf	indf2,w,c
 22831  005ADA  6E40               	movwf	USBCtrlTrfRxService@byteToRead,c
 22832                           
 22833                           ; BSR set to: 0
 22834                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 22835  005ADC  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22836  005ADE  5C05               	subwf	_outPipes+4,w,c	;volatile
 22837  005AE0  0E00               	movlw	0
 22838  005AE2  5806               	subwfb	_outPipes+5,w,c	;volatile
 22839  005AE4  E202               	bc	i2l7089
 22840                           
 22841                           ; BSR set to: 0
 22842                           ;usb_device.c: 1532: {
 22843                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 22844  005AE6  C005  F040         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 22845  005AEA                     i2l7089:
 22846                           
 22847                           ; BSR set to: 0
 22848                           ;usb_device.c: 1534: }
 22849                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 22850  005AEA  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22851  005AEC  5E05               	subwf	_outPipes+4,f,c	;volatile
 22852  005AEE  0E00               	movlw	0
 22853  005AF0  5A06               	subwfb	_outPipes+5,f,c	;volatile
 22854                           
 22855                           ; BSR set to: 0
 22856                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 22857  005AF2  6A3F               	clrf	USBCtrlTrfRxService@i,c
 22858  005AF4  D00D               	goto	i2l7099
 22859  005AF6                     i2l7093:
 22860                           
 22861                           ; BSR set to: 0
 22862                           ;usb_device.c: 1541: {
 22863                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 22864  005AF6  0E38               	movlw	56
 22865  005AF8  243F               	addwf	USBCtrlTrfRxService@i,w,c
 22866  005AFA  6ED9               	movwf	fsr2l,c
 22867  005AFC  6ADA               	clrf	fsr2h,c
 22868  005AFE  0E04               	movlw	4
 22869  005B00  22DA               	addwfc	fsr2h,f,c
 22870  005B02  5001               	movf	_outPipes,w,c	;volatile
 22871  005B04  6EE1               	movwf	fsr1l,c
 22872  005B06  6AE2               	clrf	fsr1h,c
 22873  005B08  CFDF FFE7          	movff	indf2,indf1
 22874                           
 22875                           ; BSR set to: 0
 22876  005B0C  2A01               	incf	_outPipes,f,c	;volatile
 22877                           
 22878                           ; BSR set to: 0
 22879  005B0E  2A3F               	incf	USBCtrlTrfRxService@i,f,c
 22880  005B10                     i2l7099:
 22881                           
 22882                           ; BSR set to: 0
 22883  005B10  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22884  005B12  5C3F               	subwf	USBCtrlTrfRxService@i,w,c
 22885  005B14  E3F0               	bnc	i2l7093
 22886                           
 22887                           ; BSR set to: 0
 22888                           ;usb_device.c: 1543: }
 22889                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 22890  005B16  5005               	movf	_outPipes+4,w,c	;volatile
 22891  005B18  1006               	iorwf	_outPipes+5,w,c	;volatile
 22892  005B1A  E032               	bz	i2l7115
 22893                           
 22894                           ; BSR set to: 0
 22895                           ;usb_device.c: 1548: {
 22896                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 22897  005B1C  EE20 F001          	lfsr	2,1
 22898  005B20  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22899  005B22  26D9               	addwf	fsr2l,f,c
 22900  005B24  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22901  005B26  22DA               	addwfc	fsr2h,f,c
 22902  005B28  0E08               	movlw	8
 22903  005B2A  6EDF               	movwf	indf2,c
 22904                           
 22905                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 22906  005B2C  EE20 F002          	lfsr	2,2
 22907  005B30  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22908  005B32  26D9               	addwf	fsr2l,f,c
 22909  005B34  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22910  005B36  22DA               	addwfc	fsr2h,f,c
 22911  005B38  0E38               	movlw	56
 22912  005B3A  6EDE               	movwf	postinc2,c
 22913  005B3C  0E04               	movlw	4
 22914  005B3E  6EDD               	movwf	postdec2,c
 22915                           
 22916                           ; BSR set to: 0
 22917                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 22918  005B40  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22919  005B44  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22920  005B48  BCDF               	btfsc	indf2,6,c
 22921  005B4A  D00D               	goto	i2l7111
 22922                           
 22923                           ; BSR set to: 0
 22924                           ;usb_device.c: 1552: {
 22925                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 22926  005B4C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22927  005B50  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22928  005B54  0E48               	movlw	72
 22929  005B56  6EDF               	movwf	indf2,c
 22930                           
 22931                           ; BSR set to: 0
 22932                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22933  005B58  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22934  005B5C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22935  005B60  0E00               	movlw	0
 22936  005B62  8EDB               	bsf	plusw2,7,c
 22937                           
 22938                           ;usb_device.c: 1555: }
 22939  005B64  0C00               	retlw	0
 22940  005B66                     i2l7111:
 22941                           
 22942                           ; BSR set to: 0
 22943                           ;usb_device.c: 1556: else
 22944                           ;usb_device.c: 1557: {
 22945                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 22946  005B66  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22947  005B6A  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22948  005B6E  0E08               	movlw	8
 22949  005B70  6EDF               	movwf	indf2,c
 22950                           
 22951                           ; BSR set to: 0
 22952                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22953  005B72  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22954  005B76  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22955  005B7A  0E00               	movlw	0
 22956  005B7C  8EDB               	bsf	plusw2,7,c
 22957  005B7E  0C00               	retlw	0
 22958  005B80                     i2l7115:
 22959                           
 22960                           ; BSR set to: 0
 22961                           ;usb_device.c: 1562: else
 22962                           ;usb_device.c: 1563: {
 22963                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 22964  005B80  EE20 F001          	lfsr	2,1
 22965  005B84  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22966  005B86  26D9               	addwf	fsr2l,f,c
 22967  005B88  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22968  005B8A  22DA               	addwfc	fsr2h,f,c
 22969  005B8C  0E08               	movlw	8
 22970  005B8E  6EDF               	movwf	indf2,c
 22971                           
 22972                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22973  005B90  EE20 F002          	lfsr	2,2
 22974  005B94  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22975  005B96  26D9               	addwf	fsr2l,f,c
 22976  005B98  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22977  005B9A  22DA               	addwfc	fsr2h,f,c
 22978  005B9C  0E30               	movlw	48
 22979  005B9E  6EDE               	movwf	postinc2,c
 22980  005BA0  0E04               	movlw	4
 22981  005BA2  6EDD               	movwf	postdec2,c
 22982                           
 22983                           ; BSR set to: 0
 22984                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 22985  005BA4  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22986  005BA8  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22987  005BAC  6EDF               	movwf	indf2,c
 22988                           
 22989                           ; BSR set to: 0
 22990                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22991  005BAE  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22992  005BB2  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22993  005BB6  0E00               	movlw	0
 22994  005BB8  8EDB               	bsf	plusw2,7,c
 22995                           
 22996                           ; BSR set to: 0
 22997                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 22998  005BBA  5007               	movf	_outPipes+6,w,c	;volatile
 22999  005BBC  1008               	iorwf	_outPipes+7,w,c	;volatile
 23000  005BBE  E00E               	bz	i2l7125
 23001                           
 23002                           ; BSR set to: 0
 23003                           ;usb_device.c: 1581: {
 23004                           ;usb_device.c: 1586: outPipes[0].pFunc();
 23005  005BC0  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 23006  005BC4  D801               	call	i2u499_48
 23007  005BC6  D00A               	goto	i2l7125
 23008  005BC8                     i2u499_48:
 23009  005BC8  0005               	push	
 23010  005BCA  6EFA               	movwf	pclath,c
 23011  005BCC  50DE               	movf	postinc2,w,c
 23012  005BCE  6EFD               	movwf	tosl,c
 23013  005BD0  50DE               	movf	postinc2,w,c
 23014  005BD2  6EFE               	movwf	tosh,c
 23015  005BD4  50F8               	movf	tblptru,w,c
 23016  005BD6  6EFF               	movwf	tosu,c
 23017  005BD8  50FA               	movf	pclath,w,c
 23018  005BDA  0012               	return		;indir
 23019  005BDC                     i2l7125:
 23020                           
 23021                           ; BSR set to: 0
 23022                           ;usb_device.c: 1588: }
 23023                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 23024  005BDC  9E04               	bcf	_outPipes+3,7,c	;volatile
 23025                           
 23026                           ; BSR set to: 0
 23027                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 23028  005BDE  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 23029  005BE0  B4D8               	btfsc	status,2,c
 23030                           
 23031                           ; BSR set to: 0
 23032                           ;usb_device.c: 1604: {
 23033                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 23034  005BE2  ECBD  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23035                           
 23036                           ; BSR set to: 0
 23037  005BE6  0012               	return		;funcret
 23038  005BE8                     __end_of_USBCtrlTrfRxService:
 23039                           	opt stack 0
 23040                           tosu	equ	0xFFF
 23041                           tosh	equ	0xFFE
 23042                           tosl	equ	0xFFD
 23043                           pclatu	equ	0xFFB
 23044                           pclath	equ	0xFFA
 23045                           tblptru	equ	0xFF8
 23046                           tblptrh	equ	0xFF7
 23047                           tblptrl	equ	0xFF6
 23048                           tablat	equ	0xFF5
 23049                           prodh	equ	0xFF4
 23050                           prodl	equ	0xFF3
 23051                           intcon	equ	0xFF2
 23052                           postinc0	equ	0xFEE
 23053                           wreg	equ	0xFE8
 23054                           indf1	equ	0xFE7
 23055                           postdec1	equ	0xFE5
 23056                           fsr1h	equ	0xFE2
 23057                           fsr1l	equ	0xFE1
 23058                           indf2	equ	0xFDF
 23059                           postinc2	equ	0xFDE
 23060                           postdec2	equ	0xFDD
 23061                           plusw2	equ	0xFDB
 23062                           fsr2h	equ	0xFDA
 23063                           fsr2l	equ	0xFD9
 23064                           status	equ	0xFD8
 23065                           
 23066 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 23067 ;; Defined at:
 23068 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 23069 ;; Parameters:    Size  Location     Type
 23070 ;;		None
 23071 ;; Auto vars:     Size  Location     Type
 23072 ;;		None
 23073 ;; Return value:  Size  Location     Type
 23074 ;;		None               void
 23075 ;; Registers used:
 23076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23077 ;; Tracked objects:
 23078 ;;		On entry : 0/0
 23079 ;;		On exit  : F/0
 23080 ;;		Unchanged: 0/0
 23081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23082 ;;      Params:         0       0       0       0       0       0       0       0       0
 23083 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23084 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23085 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23086 ;;Total ram usage:        0 bytes
 23087 ;; Hardware stack levels used:    1
 23088 ;; This function calls:
 23089 ;;		Nothing
 23090 ;; This function is called by:
 23091 ;;		_USBDeviceTasks
 23092 ;;		_USBCtrlEPServiceComplete
 23093 ;;		_USBCtrlTrfRxService
 23094 ;; This function uses a non-reentrant model
 23095 ;;
 23096                           
 23097                           	psect	text111
 23098  004D7A                     __ptext111:
 23099                           	opt stack 0
 23100  004D7A                     _USBCtrlEPAllowStatusStage:
 23101                           	opt stack 15
 23102                           
 23103                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 23104                           
 23105                           ; BSR set to: 0
 23106                           ;incstack = 0
 23107  004D7A  0100               	movlb	0	; () banked
 23108  004D7C  518B               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 23109  004D7E  A4D8               	btfss	status,2,c
 23110  004D80  0012               	return	
 23111                           
 23112                           ; BSR set to: 0
 23113                           ;usb_device.c: 1112: {
 23114                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 23115  004D82  0E01               	movlw	1
 23116  004D84  6F8B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 23117                           
 23118                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 23119  004D86  518C               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 23120  004D88  A4D8               	btfss	status,2,c
 23121  004D8A  0012               	return	
 23122                           
 23123                           ; BSR set to: 0
 23124                           ;usb_device.c: 1115: {
 23125                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 23126  004D8C  0E01               	movlw	1
 23127  004D8E  6F8C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 23128                           
 23129                           ; BSR set to: 0
 23130                           ;usb_device.c: 1120: if(controlTransferState == 2)
 23131  004D90  0E02               	movlw	2
 23132  004D92  1821               	xorwf	_controlTransferState,w,c	;volatile
 23133  004D94  E114               	bnz	i2l6677
 23134                           
 23135                           ; BSR set to: 0
 23136                           ;usb_device.c: 1121: {
 23137                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 23138  004D96  EE20 F001          	lfsr	2,1
 23139  004D9A  500F               	movf	_pBDTEntryIn,w,c
 23140  004D9C  26D9               	addwf	fsr2l,f,c
 23141  004D9E  5010               	movf	_pBDTEntryIn+1,w,c
 23142  004DA0  22DA               	addwfc	fsr2h,f,c
 23143  004DA2  6ADF               	clrf	indf2,c
 23144                           
 23145                           ; BSR set to: 0
 23146                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23147  004DA4  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23148  004DA8  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23149  004DAC  0E48               	movlw	72
 23150  004DAE  6EDF               	movwf	indf2,c
 23151                           
 23152                           ; BSR set to: 0
 23153                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23154  004DB0  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23155  004DB4  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23156  004DB8  0E00               	movlw	0
 23157  004DBA  8EDB               	bsf	plusw2,7,c
 23158                           
 23159                           ;usb_device.c: 1125: }
 23160  004DBC  0C00               	retlw	0
 23161  004DBE                     i2l6677:
 23162                           
 23163                           ; BSR set to: 0
 23164                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 23165  004DBE  0421               	decf	_controlTransferState,w,c	;volatile
 23166  004DC0  A4D8               	btfss	status,2,c
 23167  004DC2  0012               	return	
 23168                           
 23169                           ; BSR set to: 0
 23170                           ;usb_device.c: 1127: {
 23171                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 23172  004DC4  6B86               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23173                           
 23174                           ; BSR set to: 0
 23175                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 23176  004DC6  EE20 F001          	lfsr	2,1
 23177  004DCA  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 23178  004DCC  26D9               	addwf	fsr2l,f,c
 23179  004DCE  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23180  004DD0  22DA               	addwfc	fsr2h,f,c
 23181  004DD2  0E08               	movlw	8
 23182  004DD4  6EDF               	movwf	indf2,c
 23183                           
 23184                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 23185  004DD6  EE20 F002          	lfsr	2,2
 23186  004DDA  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 23187  004DDC  26D9               	addwf	fsr2l,f,c
 23188  004DDE  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23189  004DE0  22DA               	addwfc	fsr2h,f,c
 23190  004DE2  0E30               	movlw	48
 23191  004DE4  6EDE               	movwf	postinc2,c
 23192  004DE6  0E04               	movlw	4
 23193  004DE8  6EDD               	movwf	postdec2,c
 23194                           
 23195                           ; BSR set to: 0
 23196                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 23197  004DEA  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23198  004DEE  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23199  004DF2  6EDF               	movwf	indf2,c
 23200                           
 23201                           ; BSR set to: 0
 23202                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 23203  004DF4  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23204  004DF8  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23205  004DFC  0E00               	movlw	0
 23206  004DFE  8EDB               	bsf	plusw2,7,c
 23207                           
 23208                           ; BSR set to: 0
 23209                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 23210  004E00  0E01               	movlw	1
 23211  004E02  6F86               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23212                           
 23213                           ; BSR set to: 0
 23214                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 23215  004E04  EE20 F001          	lfsr	2,1
 23216  004E08  5017               	movf	_pBDTEntryEP0OutNext,w,c
 23217  004E0A  26D9               	addwf	fsr2l,f,c
 23218  004E0C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 23219  004E0E  22DA               	addwfc	fsr2h,f,c
 23220  004E10  0E08               	movlw	8
 23221  004E12  6EDF               	movwf	indf2,c
 23222                           
 23223                           ; BSR set to: 0
 23224                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23225  004E14  EE20 F002          	lfsr	2,2
 23226  004E18  5017               	movf	_pBDTEntryEP0OutNext,w,c
 23227  004E1A  26D9               	addwf	fsr2l,f,c
 23228  004E1C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 23229  004E1E  22DA               	addwfc	fsr2h,f,c
 23230  004E20  0E30               	movlw	48
 23231  004E22  6EDE               	movwf	postinc2,c
 23232  004E24  0E04               	movlw	4
 23233  004E26  6EDD               	movwf	postdec2,c
 23234                           
 23235                           ; BSR set to: 0
 23236                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 23237  004E28  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23238  004E2C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23239  004E30  0E80               	movlw	128
 23240  004E32  6EDF               	movwf	indf2,c
 23241  004E34  0C80               	retlw	128
 23242  004E36                     __end_of_USBCtrlEPAllowStatusStage:
 23243                           	opt stack 0
 23244                           tosu	equ	0xFFF
 23245                           tosh	equ	0xFFE
 23246                           tosl	equ	0xFFD
 23247                           pclatu	equ	0xFFB
 23248                           pclath	equ	0xFFA
 23249                           tblptru	equ	0xFF8
 23250                           tblptrh	equ	0xFF7
 23251                           tblptrl	equ	0xFF6
 23252                           tablat	equ	0xFF5
 23253                           prodh	equ	0xFF4
 23254                           prodl	equ	0xFF3
 23255                           intcon	equ	0xFF2
 23256                           postinc0	equ	0xFEE
 23257                           wreg	equ	0xFE8
 23258                           indf1	equ	0xFE7
 23259                           postdec1	equ	0xFE5
 23260                           fsr1h	equ	0xFE2
 23261                           fsr1l	equ	0xFE1
 23262                           indf2	equ	0xFDF
 23263                           postinc2	equ	0xFDE
 23264                           postdec2	equ	0xFDD
 23265                           plusw2	equ	0xFDB
 23266                           fsr2h	equ	0xFDA
 23267                           fsr2l	equ	0xFD9
 23268                           status	equ	0xFD8
 23269                           
 23270 ;; *************** function _USBCtrlTrfInHandler *****************
 23271 ;; Defined at:
 23272 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 23273 ;; Parameters:    Size  Location     Type
 23274 ;;		None
 23275 ;; Auto vars:     Size  Location     Type
 23276 ;;  lastDTS         1   17[COMRAM] unsigned char 
 23277 ;; Return value:  Size  Location     Type
 23278 ;;		None               void
 23279 ;; Registers used:
 23280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 23281 ;; Tracked objects:
 23282 ;;		On entry : F/0
 23283 ;;		On exit  : F/0
 23284 ;;		Unchanged: 0/0
 23285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23286 ;;      Params:         0       0       0       0       0       0       0       0       0
 23287 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23288 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23289 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23290 ;;Total ram usage:        1 bytes
 23291 ;; Hardware stack levels used:    1
 23292 ;; Hardware stack levels required when called:    2
 23293 ;; This function calls:
 23294 ;;		_USART_mySetLineCodingHandler
 23295 ;;		_USBCtrlTrfTxService
 23296 ;; This function is called by:
 23297 ;;		_USBCtrlEPService
 23298 ;; This function uses a non-reentrant model
 23299 ;;
 23300                           
 23301                           	psect	text112
 23302  004EF8                     __ptext112:
 23303                           	opt stack 0
 23304  004EF8                     _USBCtrlTrfInHandler:
 23305                           	opt stack 15
 23306                           
 23307                           ; BSR set to: 0
 23308                           ;usb_device.c: 2225: uint8_t lastDTS;
 23309                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 23310                           
 23311                           ; BSR set to: 0
 23312                           ;incstack = 0
 23313  004EF8  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23314  004EFC  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23315  004F00  0E00               	movlw	0
 23316  004F02  BCDF               	btfsc	indf2,6,c
 23317  004F04  0E01               	movlw	1
 23318  004F06  6E3F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 23319                           
 23320                           ; BSR set to: 0
 23321                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 23322  004F08  0E04               	movlw	4
 23323  004F0A  1A0F               	xorwf	_pBDTEntryIn,f,c
 23324                           
 23325                           ; BSR set to: 0
 23326                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 23327  004F0C  0E08               	movlw	8
 23328  004F0E  198A               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 23329  004F10  E10A               	bnz	i2l7761
 23330                           
 23331                           ; BSR set to: 0
 23332                           ;usb_device.c: 2236: {
 23333                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 23334  004F12  0104               	movlb	4	; () banked
 23335  004F14  5132               	movf	50,w,b	;volatile
 23336  004F16  0B7F               	andlw	127
 23337  004F18  6E63               	movwf	3939,c	;volatile
 23338                           
 23339                           ; BSR set to: 4
 23340                           ;usb_device.c: 2238: if(UADDR != 0u)
 23341  004F1A  5063               	movf	3939,w,c
 23342                           
 23343                           ; BSR set to: 4
 23344                           ;usb_device.c: 2239: {
 23345                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 23346  004F1C  0E10               	movlw	16
 23347  004F1E  B4D8               	btfsc	status,2,c
 23348                           
 23349                           ; BSR set to: 4
 23350                           ;usb_device.c: 2242: else
 23351                           ;usb_device.c: 2243: {
 23352                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 23353  004F20  0E04               	movlw	4
 23354                           
 23355                           ;usb_device.c: 2241: }
 23356  004F22  0100               	movlb	0	; () banked
 23357  004F24  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 23358  004F26                     i2l7761:
 23359                           
 23360                           ; BSR set to: 0
 23361                           ;usb_device.c: 2245: }
 23362                           ;usb_device.c: 2246: }
 23363                           ;usb_device.c: 2249: if(controlTransferState == 1)
 23364  004F26  0421               	decf	_controlTransferState,w,c	;volatile
 23365  004F28  E138               	bnz	i2l1762
 23366                           
 23367                           ; BSR set to: 0
 23368                           ;usb_device.c: 2250: {
 23369                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 23370  004F2A  EE20 F002          	lfsr	2,2
 23371  004F2E  500F               	movf	_pBDTEntryIn,w,c
 23372  004F30  26D9               	addwf	fsr2l,f,c
 23373  004F32  5010               	movf	_pBDTEntryIn+1,w,c
 23374  004F34  22DA               	addwfc	fsr2h,f,c
 23375  004F36  0E38               	movlw	56
 23376  004F38  6EDE               	movwf	postinc2,c
 23377  004F3A  0E04               	movlw	4
 23378  004F3C  6EDD               	movwf	postdec2,c
 23379                           
 23380                           ; BSR set to: 0
 23381                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 23382  004F3E  EC1B  F027         	call	_USBCtrlTrfTxService	;wreg free
 23383                           
 23384                           ; BSR set to: 0
 23385                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 23386  004F42  0E02               	movlw	2
 23387  004F44  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 23388  004F46  E10D               	bnz	i2l7773
 23389                           
 23390                           ; BSR set to: 0
 23391                           ;usb_device.c: 2259: {
 23392                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 23393  004F48  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23394  004F4C  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23395  004F50  0E04               	movlw	4
 23396  004F52  6EDF               	movwf	indf2,c
 23397                           
 23398                           ; BSR set to: 0
 23399                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23400  004F54  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23401  004F58  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23402  004F5C  0E00               	movlw	0
 23403  004F5E  8EDB               	bsf	plusw2,7,c
 23404                           
 23405                           ;usb_device.c: 2264: }
 23406  004F60  0C00               	retlw	0
 23407  004F62                     i2l7773:
 23408                           
 23409                           ; BSR set to: 0
 23410                           ;usb_device.c: 2265: else
 23411                           ;usb_device.c: 2266: {
 23412                           ;usb_device.c: 2267: if(lastDTS == 0)
 23413  004F62  503F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 23414  004F64  E10D               	bnz	i2l7779
 23415                           
 23416                           ; BSR set to: 0
 23417                           ;usb_device.c: 2268: {
 23418                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23419  004F66  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23420  004F6A  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23421  004F6E  0E48               	movlw	72
 23422  004F70  6EDF               	movwf	indf2,c
 23423                           
 23424                           ; BSR set to: 0
 23425                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23426  004F72  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23427  004F76  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23428  004F7A  0E00               	movlw	0
 23429  004F7C  8EDB               	bsf	plusw2,7,c
 23430                           
 23431                           ;usb_device.c: 2271: }
 23432  004F7E  0C00               	retlw	0
 23433  004F80                     i2l7779:
 23434                           
 23435                           ; BSR set to: 0
 23436                           ;usb_device.c: 2272: else
 23437                           ;usb_device.c: 2273: {
 23438                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 23439  004F80  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23440  004F84  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23441  004F88  0E08               	movlw	8
 23442  004F8A  6EDF               	movwf	indf2,c
 23443                           
 23444                           ; BSR set to: 0
 23445                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23446  004F8C  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23447  004F90  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23448  004F94  0E00               	movlw	0
 23449  004F96  8EDB               	bsf	plusw2,7,c
 23450  004F98  0C00               	retlw	0
 23451  004F9A                     i2l1762:
 23452                           
 23453                           ; BSR set to: 0
 23454                           ;usb_device.c: 2279: else
 23455                           ;usb_device.c: 2280: {
 23456                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 23457  004F9A  AE04               	btfss	_outPipes+3,7,c	;volatile
 23458  004F9C  D012               	goto	i2l7789
 23459                           
 23460                           ; BSR set to: 0
 23461                           ;usb_device.c: 2285: {
 23462                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 23463  004F9E  5007               	movf	_outPipes+6,w,c	;volatile
 23464  004FA0  1008               	iorwf	_outPipes+7,w,c	;volatile
 23465  004FA2  E00E               	bz	i2l7787
 23466                           
 23467                           ; BSR set to: 0
 23468                           ;usb_device.c: 2287: {
 23469                           ;usb_device.c: 2288: outPipes[0].pFunc();
 23470  004FA4  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 23471  004FA8  D801               	call	i2u565_48
 23472  004FAA  D00A               	goto	i2l7787
 23473  004FAC                     i2u565_48:
 23474  004FAC  0005               	push	
 23475  004FAE  6EFA               	movwf	pclath,c
 23476  004FB0  50DE               	movf	postinc2,w,c
 23477  004FB2  6EFD               	movwf	tosl,c
 23478  004FB4  50DE               	movf	postinc2,w,c
 23479  004FB6  6EFE               	movwf	tosh,c
 23480  004FB8  50F8               	movf	tblptru,w,c
 23481  004FBA  6EFF               	movwf	tosu,c
 23482  004FBC  50FA               	movf	pclath,w,c
 23483  004FBE  0012               	return		;indir
 23484  004FC0                     i2l7787:
 23485                           
 23486                           ; BSR set to: 0
 23487                           ;usb_device.c: 2289: }
 23488                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 23489  004FC0  9E04               	bcf	_outPipes+3,7,c	;volatile
 23490  004FC2                     i2l7789:
 23491                           
 23492                           ; BSR set to: 0
 23493                           ;usb_device.c: 2291: }
 23494                           ;usb_device.c: 2293: controlTransferState = 0;
 23495  004FC2  6A21               	clrf	_controlTransferState,c	;volatile
 23496                           
 23497                           ; BSR set to: 0
 23498  004FC4  0012               	return		;funcret
 23499  004FC6                     __end_of_USBCtrlTrfInHandler:
 23500                           	opt stack 0
 23501                           tosu	equ	0xFFF
 23502                           tosh	equ	0xFFE
 23503                           tosl	equ	0xFFD
 23504                           pclatu	equ	0xFFB
 23505                           pclath	equ	0xFFA
 23506                           tblptru	equ	0xFF8
 23507                           tblptrh	equ	0xFF7
 23508                           tblptrl	equ	0xFF6
 23509                           tablat	equ	0xFF5
 23510                           prodh	equ	0xFF4
 23511                           prodl	equ	0xFF3
 23512                           intcon	equ	0xFF2
 23513                           postinc0	equ	0xFEE
 23514                           wreg	equ	0xFE8
 23515                           indf1	equ	0xFE7
 23516                           postdec1	equ	0xFE5
 23517                           fsr1h	equ	0xFE2
 23518                           fsr1l	equ	0xFE1
 23519                           indf2	equ	0xFDF
 23520                           postinc2	equ	0xFDE
 23521                           postdec2	equ	0xFDD
 23522                           plusw2	equ	0xFDB
 23523                           fsr2h	equ	0xFDA
 23524                           fsr2l	equ	0xFD9
 23525                           status	equ	0xFD8
 23526                           
 23527 ;; *************** function _USBCtrlTrfTxService *****************
 23528 ;; Defined at:
 23529 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 23530 ;; Parameters:    Size  Location     Type
 23531 ;;		None
 23532 ;; Auto vars:     Size  Location     Type
 23533 ;;  byteToSend      1    0[COMRAM] unsigned char 
 23534 ;; Return value:  Size  Location     Type
 23535 ;;		None               void
 23536 ;; Registers used:
 23537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 23538 ;; Tracked objects:
 23539 ;;		On entry : B/4
 23540 ;;		On exit  : F/0
 23541 ;;		Unchanged: 0/0
 23542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23543 ;;      Params:         0       0       0       0       0       0       0       0       0
 23544 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23545 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23546 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23547 ;;Total ram usage:        1 bytes
 23548 ;; Hardware stack levels used:    1
 23549 ;; This function calls:
 23550 ;;		Nothing
 23551 ;; This function is called by:
 23552 ;;		_USBCtrlEPAllowDataStage
 23553 ;;		_USBCtrlTrfInHandler
 23554 ;; This function uses a non-reentrant model
 23555 ;;
 23556                           
 23557                           	psect	text113
 23558  004E36                     __ptext113:
 23559                           	opt stack 0
 23560  004E36                     _USBCtrlTrfTxService:
 23561                           	opt stack 14
 23562                           
 23563                           ;usb_device.c: 1439: uint8_t byteToSend;
 23564                           ;usb_device.c: 1443: byteToSend = 8;
 23565                           
 23566                           ; BSR set to: 0
 23567                           ;incstack = 0
 23568  004E36  0E08               	movlw	8
 23569  004E38  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 23570                           
 23571                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 23572  004E3A  500E               	movf	_inPipes+5,w,c	;volatile
 23573  004E3C  E10D               	bnz	i2l6475
 23574  004E3E  0E08               	movlw	8
 23575  004E40  5C0D               	subwf	_inPipes+4,w,c	;volatile
 23576  004E42  E20A               	bc	i2l6475
 23577                           
 23578                           ;usb_device.c: 1445: {
 23579                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 23580  004E44  C00D  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 23581                           
 23582                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 23583  004E48  502B               	movf	_shortPacketStatus,w,c	;volatile
 23584  004E4A  E102               	bnz	i2l6471
 23585                           
 23586                           ;usb_device.c: 1454: {
 23587                           ;usb_device.c: 1455: shortPacketStatus = 1;
 23588  004E4C  0E01               	movlw	1
 23589  004E4E  D003               	goto	L67
 23590  004E50                     i2l6471:
 23591                           
 23592                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 23593  004E50  042B               	decf	_shortPacketStatus,w,c	;volatile
 23594  004E52  E102               	bnz	i2l6475
 23595                           
 23596                           ;usb_device.c: 1458: {
 23597                           ;usb_device.c: 1459: shortPacketStatus = 2;
 23598  004E54  0E02               	movlw	2
 23599  004E56                     L67:
 23600  004E56  6E2B               	movwf	_shortPacketStatus,c	;volatile
 23601  004E58                     i2l6475:
 23602                           
 23603                           ;usb_device.c: 1460: }
 23604                           ;usb_device.c: 1461: }
 23605                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 23606  004E58  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23607  004E5A  5E0D               	subwf	_inPipes+4,f,c	;volatile
 23608  004E5C  0E00               	movlw	0
 23609  004E5E  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 23610                           
 23611                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 23612  004E60  EE20 F001          	lfsr	2,1
 23613  004E64  500F               	movf	_pBDTEntryIn,w,c
 23614  004E66  26D9               	addwf	fsr2l,f,c
 23615  004E68  5010               	movf	_pBDTEntryIn+1,w,c
 23616  004E6A  22DA               	addwfc	fsr2h,f,c
 23617  004E6C  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 23618                           
 23619                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 23620  004E70  0E38               	movlw	56
 23621  004E72  0100               	movlb	0	; () banked
 23622  004E74  6F7C               	movwf	_pDst& (0+255),b
 23623  004E76  0E04               	movlw	4
 23624  004E78  6F7D               	movwf	(_pDst+1)& (0+255),b
 23625                           
 23626                           ; BSR set to: 0
 23627                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 23628  004E7A  B00C               	btfsc	_inPipes+3,0,c	;volatile
 23629  004E7C  D03A               	goto	i2l6503
 23630  004E7E  D01B               	goto	i2l6493
 23631  004E80                     i2l6485:
 23632                           
 23633                           ; BSR set to: 0
 23634                           ;usb_device.c: 1478: {
 23635                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 23636  004E80  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 23637  004E84  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 23638  004E88  6AF8               	clrf	tblptru,c
 23639  004E8A  C07C  FFD9         	movff	_pDst,fsr2l
 23640  004E8E  C07D  FFDA         	movff	_pDst+1,fsr2h
 23641  004E92  0E07               	movlw	(high __ramtop+-1)
 23642  004E94  64F7               	cpfsgt	tblptrh,c
 23643  004E96  D003               	bra	i2u419_47
 23644  004E98  0008               	tblrd		*
 23645  004E9A  50F5               	movf	tablat,w,c
 23646  004E9C  D005               	bra	i2u419_40
 23647  004E9E                     i2u419_47:
 23648  004E9E  CFF6 FFE1          	movff	tblptrl,fsr1l
 23649  004EA2  CFF7 FFE2          	movff	tblptrh,fsr1h
 23650  004EA6  50E7               	movf	indf1,w,c
 23651  004EA8                     i2u419_40:
 23652  004EA8  6EDF               	movwf	indf2,c
 23653  004EAA  4A09               	infsnz	_inPipes,f,c	;volatile
 23654  004EAC  2A0A               	incf	_inPipes+1,f,c	;volatile
 23655  004EAE  0100               	movlb	0	; () banked
 23656  004EB0  4B7C               	infsnz	_pDst& (0+255),f,b
 23657  004EB2  2B7D               	incf	(_pDst+1)& (0+255),f,b
 23658                           
 23659                           ; BSR set to: 0
 23660                           ;usb_device.c: 1480: byteToSend--;
 23661  004EB4  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 23662  004EB6                     i2l6493:
 23663                           
 23664                           ; BSR set to: 0
 23665  004EB6  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23666  004EB8  E1E3               	bnz	i2l6485
 23667  004EBA  0012               	return	
 23668  004EBC                     i2l6495:
 23669                           
 23670                           ; BSR set to: 0
 23671                           ;usb_device.c: 1486: {
 23672                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 23673  004EBC  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 23674  004EC0  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 23675  004EC4  6AF8               	clrf	tblptru,c
 23676  004EC6  C07C  FFD9         	movff	_pDst,fsr2l
 23677  004ECA  C07D  FFDA         	movff	_pDst+1,fsr2h
 23678  004ECE  0E07               	movlw	(high __ramtop+-1)
 23679  004ED0  64F7               	cpfsgt	tblptrh,c
 23680  004ED2  D003               	bra	i2u421_47
 23681  004ED4  0008               	tblrd		*
 23682  004ED6  50F5               	movf	tablat,w,c
 23683  004ED8  D005               	bra	i2u421_40
 23684  004EDA                     i2u421_47:
 23685  004EDA  CFF6 FFE1          	movff	tblptrl,fsr1l
 23686  004EDE  CFF7 FFE2          	movff	tblptrh,fsr1h
 23687  004EE2  50E7               	movf	indf1,w,c
 23688  004EE4                     i2u421_40:
 23689  004EE4  6EDF               	movwf	indf2,c
 23690  004EE6  4A09               	infsnz	_inPipes,f,c	;volatile
 23691  004EE8  2A0A               	incf	_inPipes+1,f,c	;volatile
 23692  004EEA  0100               	movlb	0	; () banked
 23693  004EEC  4B7C               	infsnz	_pDst& (0+255),f,b
 23694  004EEE  2B7D               	incf	(_pDst+1)& (0+255),f,b
 23695                           
 23696                           ; BSR set to: 0
 23697                           ;usb_device.c: 1488: byteToSend--;
 23698  004EF0  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 23699  004EF2                     i2l6503:
 23700                           
 23701                           ; BSR set to: 0
 23702  004EF2  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23703  004EF4  E1E3               	bnz	i2l6495
 23704                           
 23705                           ; BSR set to: 0
 23706  004EF6  0012               	return		;funcret
 23707  004EF8                     __end_of_USBCtrlTrfTxService:
 23708                           	opt stack 0
 23709                           tosu	equ	0xFFF
 23710                           tosh	equ	0xFFE
 23711                           tosl	equ	0xFFD
 23712                           pclatu	equ	0xFFB
 23713                           pclath	equ	0xFFA
 23714                           tblptru	equ	0xFF8
 23715                           tblptrh	equ	0xFF7
 23716                           tblptrl	equ	0xFF6
 23717                           tablat	equ	0xFF5
 23718                           prodh	equ	0xFF4
 23719                           prodl	equ	0xFF3
 23720                           intcon	equ	0xFF2
 23721                           postinc0	equ	0xFEE
 23722                           wreg	equ	0xFE8
 23723                           indf1	equ	0xFE7
 23724                           postdec1	equ	0xFE5
 23725                           fsr1h	equ	0xFE2
 23726                           fsr1l	equ	0xFE1
 23727                           indf2	equ	0xFDF
 23728                           postinc2	equ	0xFDE
 23729                           postdec2	equ	0xFDD
 23730                           plusw2	equ	0xFDB
 23731                           fsr2h	equ	0xFDA
 23732                           fsr2l	equ	0xFD9
 23733                           status	equ	0xFD8
 23734                           
 23735 ;; *************** function _USART_mySetLineCodingHandler *****************
 23736 ;; Defined at:
 23737 ;;		line 236 in file "../Includes/Board/USBapp.c"
 23738 ;; Parameters:    Size  Location     Type
 23739 ;;		None
 23740 ;; Auto vars:     Size  Location     Type
 23741 ;;  dwBaud          4   13[COMRAM] unsigned long 
 23742 ;; Return value:  Size  Location     Type
 23743 ;;		None               void
 23744 ;; Registers used:
 23745 ;;		wreg, status,2, status,0, cstack
 23746 ;; Tracked objects:
 23747 ;;		On entry : F/0
 23748 ;;		On exit  : F/0
 23749 ;;		Unchanged: F/0
 23750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23751 ;;      Params:         0       0       0       0       0       0       0       0       0
 23752 ;;      Locals:         4       0       0       0       0       0       0       0       0
 23753 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23754 ;;      Totals:         4       0       0       0       0       0       0       0       0
 23755 ;;Total ram usage:        4 bytes
 23756 ;; Hardware stack levels used:    1
 23757 ;; Hardware stack levels required when called:    1
 23758 ;; This function calls:
 23759 ;;		___lldiv
 23760 ;;		i2_EUSART_Initialize
 23761 ;; This function is called by:
 23762 ;;		_USBCheckCDCRequest
 23763 ;;		_USBCtrlTrfRxService
 23764 ;;		_USBCtrlTrfInHandler
 23765 ;; This function uses a non-reentrant model
 23766 ;;
 23767                           
 23768                           	psect	text114
 23769  003DFA                     __ptext114:
 23770                           	opt stack 0
 23771  003DFA                     _USART_mySetLineCodingHandler:
 23772                           	opt stack 14
 23773                           
 23774                           ; BSR set to: 0
 23775                           ;USBapp.c: 239: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 23776                           
 23777                           ; BSR set to: 0
 23778                           ;incstack = 0
 23779  003DFA  C0AA  F0BC         	movff	_cdc_notice,_line_coding
 23780  003DFE  C0AB  F0BD         	movff	_cdc_notice+1,_line_coding+1
 23781  003E02  C0AC  F0BE         	movff	_cdc_notice+2,_line_coding+2
 23782  003E06  C0AD  F0BF         	movff	_cdc_notice+3,_line_coding+3
 23783                           
 23784                           ; BSR set to: 0
 23785                           ;USBapp.c: 241: uint32_t dwBaud;
 23786                           ;USBapp.c: 242: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 23787  003E0A  6A2E               	clrf	___lldiv@dividend,c
 23788  003E0C  0E1B               	movlw	27
 23789  003E0E  6E2F               	movwf	___lldiv@dividend+1,c
 23790  003E10  0EB7               	movlw	183
 23791  003E12  6E30               	movwf	___lldiv@dividend+2,c
 23792  003E14  6A31               	clrf	___lldiv@dividend+3,c
 23793  003E16  C0BC  F032         	movff	_line_coding,___lldiv@divisor
 23794  003E1A  C0BD  F033         	movff	_line_coding+1,___lldiv@divisor+1
 23795  003E1E  C0BE  F034         	movff	_line_coding+2,___lldiv@divisor+2
 23796  003E22  C0BF  F035         	movff	_line_coding+3,___lldiv@divisor+3
 23797  003E26  EC05  F021         	call	___lldiv	;wreg free
 23798  003E2A  0EFF               	movlw	255
 23799  003E2C  242E               	addwf	?___lldiv,w,c
 23800  003E2E  6E3B               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 23801  003E30  0EFF               	movlw	255
 23802  003E32  202F               	addwfc	?___lldiv+1,w,c
 23803  003E34  6E3C               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 23804  003E36  0EFF               	movlw	255
 23805  003E38  2030               	addwfc	?___lldiv+2,w,c
 23806  003E3A  6E3D               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 23807  003E3C  0EFF               	movlw	255
 23808  003E3E  2031               	addwfc	?___lldiv+3,w,c
 23809  003E40  6E3E               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 23810                           
 23811                           ; BSR set to: 0
 23812                           ;USBapp.c: 243: SPBRG = (uint8_t) dwBaud;
 23813  003E42  C03B  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 23814                           
 23815                           ; BSR set to: 0
 23816                           ;USBapp.c: 244: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 23817  003E46  C03C  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 23818                           
 23819                           ; BSR set to: 0
 23820                           ;USBapp.c: 246: EUSART_Initialize();
 23821  003E4A  EF4C  F01C         	goto	i2_EUSART_Initialize	;wreg free
 23822  003E4E                     __end_of_USART_mySetLineCodingHandler:
 23823                           	opt stack 0
 23824                           tosu	equ	0xFFF
 23825                           tosh	equ	0xFFE
 23826                           tosl	equ	0xFFD
 23827                           pclatu	equ	0xFFB
 23828                           pclath	equ	0xFFA
 23829                           tblptru	equ	0xFF8
 23830                           tblptrh	equ	0xFF7
 23831                           tblptrl	equ	0xFF6
 23832                           tablat	equ	0xFF5
 23833                           prodh	equ	0xFF4
 23834                           prodl	equ	0xFF3
 23835                           intcon	equ	0xFF2
 23836                           postinc0	equ	0xFEE
 23837                           wreg	equ	0xFE8
 23838                           indf1	equ	0xFE7
 23839                           postdec1	equ	0xFE5
 23840                           fsr1h	equ	0xFE2
 23841                           fsr1l	equ	0xFE1
 23842                           indf2	equ	0xFDF
 23843                           postinc2	equ	0xFDE
 23844                           postdec2	equ	0xFDD
 23845                           plusw2	equ	0xFDB
 23846                           fsr2h	equ	0xFDA
 23847                           fsr2l	equ	0xFD9
 23848                           status	equ	0xFD8
 23849                           
 23850 ;; *************** function i2_EUSART_Initialize *****************
 23851 ;; Defined at:
 23852 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 23853 ;; Parameters:    Size  Location     Type
 23854 ;;		None
 23855 ;; Auto vars:     Size  Location     Type
 23856 ;;		None
 23857 ;; Return value:  Size  Location     Type
 23858 ;;		None               void
 23859 ;; Registers used:
 23860 ;;		wreg, status,2
 23861 ;; Tracked objects:
 23862 ;;		On entry : F/0
 23863 ;;		On exit  : F/0
 23864 ;;		Unchanged: F/0
 23865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23866 ;;      Params:         0       0       0       0       0       0       0       0       0
 23867 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23868 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23869 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23870 ;;Total ram usage:        0 bytes
 23871 ;; Hardware stack levels used:    1
 23872 ;; This function calls:
 23873 ;;		Nothing
 23874 ;; This function is called by:
 23875 ;;		_USBapp_CdcEmulatorInitialize
 23876 ;;		_USART_mySetLineCodingHandler
 23877 ;; This function uses a non-reentrant model
 23878 ;;
 23879                           
 23880                           	psect	text115
 23881  003898                     __ptext115:
 23882                           	opt stack 0
 23883  003898                     i2_EUSART_Initialize:
 23884                           	opt stack 16
 23885                           
 23886                           ; BSR set to: 0
 23887                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 23888                           
 23889                           ; BSR set to: 0
 23890                           ;incstack = 0
 23891  003898  9A9D               	bcf	3997,5,c	;volatile
 23892                           
 23893                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 23894  00389A  989D               	bcf	3997,4,c	;volatile
 23895                           
 23896                           ; BSR set to: 0
 23897                           ;eusart.c: 85: BAUDCON = 0x48;
 23898  00389C  0E48               	movlw	72
 23899  00389E  6EB8               	movwf	4024,c	;volatile
 23900                           
 23901                           ;eusart.c: 88: RCSTA = 0x90;
 23902  0038A0  0E90               	movlw	144
 23903  0038A2  6EAB               	movwf	4011,c	;volatile
 23904                           
 23905                           ;eusart.c: 91: TXSTA = 0x26;
 23906  0038A4  0E26               	movlw	38
 23907  0038A6  6EAC               	movwf	4012,c	;volatile
 23908                           
 23909                           ;eusart.c: 95: SPBRG = 0x71;
 23910  0038A8  0E71               	movlw	113
 23911  0038AA  6EAF               	movwf	4015,c	;volatile
 23912                           
 23913                           ;eusart.c: 100: SPBRGH = 0x02;
 23914  0038AC  0E02               	movlw	2
 23915  0038AE  6EB0               	movwf	4016,c	;volatile
 23916                           
 23917                           ; BSR set to: 0
 23918                           ;eusart.c: 103: eusartTxHead = 0;
 23919  0038B0  6A27               	clrf	_eusartTxHead,c
 23920                           
 23921                           ; BSR set to: 0
 23922                           ;eusart.c: 104: eusartTxTail = 0;
 23923  0038B2  6A28               	clrf	_eusartTxTail,c
 23924                           
 23925                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 23926  0038B4  0E40               	movlw	64
 23927  0038B6  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 23928                           
 23929                           ; BSR set to: 0
 23930                           ;eusart.c: 107: eusartRxHead = 0;
 23931  0038B8  6A24               	clrf	_eusartRxHead,c
 23932                           
 23933                           ; BSR set to: 0
 23934                           ;eusart.c: 108: eusartRxTail = 0;
 23935  0038BA  6A25               	clrf	_eusartRxTail,c
 23936                           
 23937                           ; BSR set to: 0
 23938                           ;eusart.c: 109: eusartRxCount = 0;
 23939  0038BC  6A23               	clrf	_eusartRxCount,c	;volatile
 23940                           
 23941                           ; BSR set to: 0
 23942                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 23943  0038BE  8A9D               	bsf	3997,5,c	;volatile
 23944                           
 23945                           ; BSR set to: 0
 23946                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 23947  0038C0  88AB               	bsf	4011,4,c	;volatile
 23948                           
 23949                           ; BSR set to: 0
 23950  0038C2  0012               	return		;funcret
 23951  0038C4                     __end_ofi2_EUSART_Initialize:
 23952                           	opt stack 0
 23953                           tosu	equ	0xFFF
 23954                           tosh	equ	0xFFE
 23955                           tosl	equ	0xFFD
 23956                           pclatu	equ	0xFFB
 23957                           pclath	equ	0xFFA
 23958                           tblptru	equ	0xFF8
 23959                           tblptrh	equ	0xFF7
 23960                           tblptrl	equ	0xFF6
 23961                           tablat	equ	0xFF5
 23962                           prodh	equ	0xFF4
 23963                           prodl	equ	0xFF3
 23964                           intcon	equ	0xFF2
 23965                           postinc0	equ	0xFEE
 23966                           wreg	equ	0xFE8
 23967                           indf1	equ	0xFE7
 23968                           postdec1	equ	0xFE5
 23969                           fsr1h	equ	0xFE2
 23970                           fsr1l	equ	0xFE1
 23971                           indf2	equ	0xFDF
 23972                           postinc2	equ	0xFDE
 23973                           postdec2	equ	0xFDD
 23974                           plusw2	equ	0xFDB
 23975                           fsr2h	equ	0xFDA
 23976                           fsr2l	equ	0xFD9
 23977                           status	equ	0xFD8
 23978                           
 23979 ;; *************** function ___lldiv *****************
 23980 ;; Defined at:
 23981 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 23982 ;; Parameters:    Size  Location     Type
 23983 ;;  dividend        4    0[COMRAM] unsigned long 
 23984 ;;  divisor         4    4[COMRAM] unsigned long 
 23985 ;; Auto vars:     Size  Location     Type
 23986 ;;  quotient        4    8[COMRAM] unsigned long 
 23987 ;;  counter         1   12[COMRAM] unsigned char 
 23988 ;; Return value:  Size  Location     Type
 23989 ;;                  4    0[COMRAM] unsigned long 
 23990 ;; Registers used:
 23991 ;;		wreg, status,2, status,0
 23992 ;; Tracked objects:
 23993 ;;		On entry : F/0
 23994 ;;		On exit  : F/0
 23995 ;;		Unchanged: F/0
 23996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23997 ;;      Params:         8       0       0       0       0       0       0       0       0
 23998 ;;      Locals:         5       0       0       0       0       0       0       0       0
 23999 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24000 ;;      Totals:        13       0       0       0       0       0       0       0       0
 24001 ;;Total ram usage:       13 bytes
 24002 ;; Hardware stack levels used:    1
 24003 ;; This function calls:
 24004 ;;		Nothing
 24005 ;; This function is called by:
 24006 ;;		_USART_mySetLineCodingHandler
 24007 ;; This function uses a non-reentrant model
 24008 ;;
 24009                           
 24010                           	psect	text116
 24011  00420A                     __ptext116:
 24012                           	opt stack 0
 24013  00420A                     ___lldiv:
 24014                           	opt stack 14
 24015                           
 24016                           ; BSR set to: 0
 24017                           
 24018                           ; BSR set to: 0
 24019                           ;incstack = 0
 24020  00420A  6A36               	clrf	___lldiv@quotient,c
 24021  00420C  6A37               	clrf	___lldiv@quotient+1,c
 24022  00420E  6A38               	clrf	___lldiv@quotient+2,c
 24023  004210  6A39               	clrf	___lldiv@quotient+3,c
 24024                           
 24025                           ; BSR set to: 0
 24026  004212  5032               	movf	___lldiv@divisor,w,c
 24027  004214  1033               	iorwf	___lldiv@divisor+1,w,c
 24028  004216  1034               	iorwf	___lldiv@divisor+2,w,c
 24029  004218  1035               	iorwf	___lldiv@divisor+3,w,c
 24030  00421A  E029               	bz	i2l2298
 24031                           
 24032                           ; BSR set to: 0
 24033  00421C  0E01               	movlw	1
 24034  00421E  6E3A               	movwf	___lldiv@counter,c
 24035  004220  D006               	goto	i2l6513
 24036  004222                     i2l6511:
 24037                           
 24038                           ; BSR set to: 0
 24039  004222  90D8               	bcf	status,0,c
 24040  004224  3632               	rlcf	___lldiv@divisor,f,c
 24041  004226  3633               	rlcf	___lldiv@divisor+1,f,c
 24042  004228  3634               	rlcf	___lldiv@divisor+2,f,c
 24043  00422A  3635               	rlcf	___lldiv@divisor+3,f,c
 24044  00422C  2A3A               	incf	___lldiv@counter,f,c
 24045  00422E                     i2l6513:
 24046                           
 24047                           ; BSR set to: 0
 24048  00422E  AE35               	btfss	___lldiv@divisor+3,7,c
 24049  004230  D7F8               	goto	i2l6511
 24050  004232                     i2l6515:
 24051                           
 24052                           ; BSR set to: 0
 24053  004232  90D8               	bcf	status,0,c
 24054  004234  3636               	rlcf	___lldiv@quotient,f,c
 24055  004236  3637               	rlcf	___lldiv@quotient+1,f,c
 24056  004238  3638               	rlcf	___lldiv@quotient+2,f,c
 24057  00423A  3639               	rlcf	___lldiv@quotient+3,f,c
 24058                           
 24059                           ; BSR set to: 0
 24060  00423C  5032               	movf	___lldiv@divisor,w,c
 24061  00423E  5C2E               	subwf	___lldiv@dividend,w,c
 24062  004240  5033               	movf	___lldiv@divisor+1,w,c
 24063  004242  582F               	subwfb	___lldiv@dividend+1,w,c
 24064  004244  5034               	movf	___lldiv@divisor+2,w,c
 24065  004246  5830               	subwfb	___lldiv@dividend+2,w,c
 24066  004248  5035               	movf	___lldiv@divisor+3,w,c
 24067  00424A  5831               	subwfb	___lldiv@dividend+3,w,c
 24068  00424C  E309               	bnc	i2l6523
 24069                           
 24070                           ; BSR set to: 0
 24071  00424E  5032               	movf	___lldiv@divisor,w,c
 24072  004250  5E2E               	subwf	___lldiv@dividend,f,c
 24073  004252  5033               	movf	___lldiv@divisor+1,w,c
 24074  004254  5A2F               	subwfb	___lldiv@dividend+1,f,c
 24075  004256  5034               	movf	___lldiv@divisor+2,w,c
 24076  004258  5A30               	subwfb	___lldiv@dividend+2,f,c
 24077  00425A  5035               	movf	___lldiv@divisor+3,w,c
 24078  00425C  5A31               	subwfb	___lldiv@dividend+3,f,c
 24079                           
 24080                           ; BSR set to: 0
 24081  00425E  8036               	bsf	___lldiv@quotient,0,c
 24082  004260                     i2l6523:
 24083                           
 24084                           ; BSR set to: 0
 24085  004260  90D8               	bcf	status,0,c
 24086  004262  3235               	rrcf	___lldiv@divisor+3,f,c
 24087  004264  3234               	rrcf	___lldiv@divisor+2,f,c
 24088  004266  3233               	rrcf	___lldiv@divisor+1,f,c
 24089  004268  3232               	rrcf	___lldiv@divisor,f,c
 24090                           
 24091                           ; BSR set to: 0
 24092  00426A  2E3A               	decfsz	___lldiv@counter,f,c
 24093  00426C  D7E2               	goto	i2l6515
 24094  00426E                     i2l2298:
 24095                           
 24096                           ; BSR set to: 0
 24097  00426E  C036  F02E         	movff	___lldiv@quotient,?___lldiv
 24098  004272  C037  F02F         	movff	___lldiv@quotient+1,?___lldiv+1
 24099  004276  C038  F030         	movff	___lldiv@quotient+2,?___lldiv+2
 24100  00427A  C039  F031         	movff	___lldiv@quotient+3,?___lldiv+3
 24101                           
 24102                           ; BSR set to: 0
 24103  00427E  0012               	return		;funcret
 24104  004280                     __end_of___lldiv:
 24105                           	opt stack 0
 24106                           tosu	equ	0xFFF
 24107                           tosh	equ	0xFFE
 24108                           tosl	equ	0xFFD
 24109                           pclatu	equ	0xFFB
 24110                           pclath	equ	0xFFA
 24111                           tblptru	equ	0xFF8
 24112                           tblptrh	equ	0xFF7
 24113                           tblptrl	equ	0xFF6
 24114                           tablat	equ	0xFF5
 24115                           prodh	equ	0xFF4
 24116                           prodl	equ	0xFF3
 24117                           intcon	equ	0xFF2
 24118                           postinc0	equ	0xFEE
 24119                           wreg	equ	0xFE8
 24120                           indf1	equ	0xFE7
 24121                           postdec1	equ	0xFE5
 24122                           fsr1h	equ	0xFE2
 24123                           fsr1l	equ	0xFE1
 24124                           indf2	equ	0xFDF
 24125                           postinc2	equ	0xFDE
 24126                           postdec2	equ	0xFDD
 24127                           plusw2	equ	0xFDB
 24128                           fsr2h	equ	0xFDA
 24129                           fsr2l	equ	0xFD9
 24130                           status	equ	0xFD8
 24131                           
 24132 ;; *************** function _TMRapp_Tick *****************
 24133 ;; Defined at:
 24134 ;;		line 10 in file "../Includes/Drivers/TMRapp.c"
 24135 ;; Parameters:    Size  Location     Type
 24136 ;;		None
 24137 ;; Auto vars:     Size  Location     Type
 24138 ;;		None
 24139 ;; Return value:  Size  Location     Type
 24140 ;;		None               void
 24141 ;; Registers used:
 24142 ;;		None
 24143 ;; Tracked objects:
 24144 ;;		On entry : 0/0
 24145 ;;		On exit  : F/0
 24146 ;;		Unchanged: 0/0
 24147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24148 ;;      Params:         0       0       0       0       0       0       0       0       0
 24149 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24150 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24151 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24152 ;;Total ram usage:        0 bytes
 24153 ;; Hardware stack levels used:    1
 24154 ;; This function calls:
 24155 ;;		Nothing
 24156 ;; This function is called by:
 24157 ;;		_INTERRUPT_InterruptManager
 24158 ;; This function uses a non-reentrant model
 24159 ;;
 24160                           
 24161                           	psect	text117
 24162  0034BE                     __ptext117:
 24163                           	opt stack 0
 24164  0034BE                     _TMRapp_Tick:
 24165                           	opt stack 19
 24166                           
 24167                           ;TMRapp.c: 13: appTimer.mSecTick = 1;
 24168                           
 24169                           ; BSR set to: 0
 24170                           ;incstack = 0
 24171  0034BE  0100               	movlb	0	; () banked
 24172  0034C0  818F               	bsf	_appTimer& (0+255),0,b
 24173                           
 24174                           ; BSR set to: 0
 24175  0034C2  0012               	return		;funcret
 24176  0034C4                     __end_of_TMRapp_Tick:
 24177                           	opt stack 0
 24178                           tosu	equ	0xFFF
 24179                           tosh	equ	0xFFE
 24180                           tosl	equ	0xFFD
 24181                           pclatu	equ	0xFFB
 24182                           pclath	equ	0xFFA
 24183                           tblptru	equ	0xFF8
 24184                           tblptrh	equ	0xFF7
 24185                           tblptrl	equ	0xFF6
 24186                           tablat	equ	0xFF5
 24187                           prodh	equ	0xFF4
 24188                           prodl	equ	0xFF3
 24189                           intcon	equ	0xFF2
 24190                           postinc0	equ	0xFEE
 24191                           wreg	equ	0xFE8
 24192                           indf1	equ	0xFE7
 24193                           postdec1	equ	0xFE5
 24194                           fsr1h	equ	0xFE2
 24195                           fsr1l	equ	0xFE1
 24196                           indf2	equ	0xFDF
 24197                           postinc2	equ	0xFDE
 24198                           postdec2	equ	0xFDD
 24199                           plusw2	equ	0xFDB
 24200                           fsr2h	equ	0xFDA
 24201                           fsr2l	equ	0xFD9
 24202                           status	equ	0xFD8
 24203                           
 24204 ;; *************** function _TMR1_ISR *****************
 24205 ;; Defined at:
 24206 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 24207 ;; Parameters:    Size  Location     Type
 24208 ;;		None
 24209 ;; Auto vars:     Size  Location     Type
 24210 ;;		None
 24211 ;; Return value:  Size  Location     Type
 24212 ;;		None               void
 24213 ;; Registers used:
 24214 ;;		None
 24215 ;; Tracked objects:
 24216 ;;		On entry : 0/0
 24217 ;;		On exit  : 0/0
 24218 ;;		Unchanged: 0/0
 24219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24220 ;;      Params:         0       0       0       0       0       0       0       0       0
 24221 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24222 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24223 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24224 ;;Total ram usage:        0 bytes
 24225 ;; Hardware stack levels used:    1
 24226 ;; This function calls:
 24227 ;;		Nothing
 24228 ;; This function is called by:
 24229 ;;		_INTERRUPT_InterruptManager
 24230 ;; This function uses a non-reentrant model
 24231 ;;
 24232                           
 24233                           	psect	text118
 24234  0034F2                     __ptext118:
 24235                           	opt stack 0
 24236  0034F2                     _TMR1_ISR:
 24237                           	opt stack 19
 24238                           
 24239                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 24240                           
 24241                           ; BSR set to: 0
 24242                           ;incstack = 0
 24243  0034F2  909E               	bcf	3998,0,c	;volatile
 24244                           
 24245                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 24246  0034F4  C081  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 24247                           
 24248                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 24249  0034F8  C080  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 24250  0034FC  0012               	return		;funcret
 24251  0034FE                     __end_of_TMR1_ISR:
 24252                           	opt stack 0
 24253                           tosu	equ	0xFFF
 24254                           tosh	equ	0xFFE
 24255                           tosl	equ	0xFFD
 24256                           pclatu	equ	0xFFB
 24257                           pclath	equ	0xFFA
 24258                           tblptru	equ	0xFF8
 24259                           tblptrh	equ	0xFF7
 24260                           tblptrl	equ	0xFF6
 24261                           tablat	equ	0xFF5
 24262                           prodh	equ	0xFF4
 24263                           prodl	equ	0xFF3
 24264                           intcon	equ	0xFF2
 24265                           postinc0	equ	0xFEE
 24266                           wreg	equ	0xFE8
 24267                           indf1	equ	0xFE7
 24268                           postdec1	equ	0xFE5
 24269                           fsr1h	equ	0xFE2
 24270                           fsr1l	equ	0xFE1
 24271                           indf2	equ	0xFDF
 24272                           postinc2	equ	0xFDE
 24273                           postdec2	equ	0xFDD
 24274                           plusw2	equ	0xFDB
 24275                           fsr2h	equ	0xFDA
 24276                           fsr2l	equ	0xFD9
 24277                           status	equ	0xFD8
 24278                           
 24279 ;; *************** function _EUSART_Transmit_ISR *****************
 24280 ;; Defined at:
 24281 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 24282 ;; Parameters:    Size  Location     Type
 24283 ;;		None
 24284 ;; Auto vars:     Size  Location     Type
 24285 ;;		None
 24286 ;; Return value:  Size  Location     Type
 24287 ;;		None               void
 24288 ;; Registers used:
 24289 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24290 ;; Tracked objects:
 24291 ;;		On entry : 0/0
 24292 ;;		On exit  : 0/0
 24293 ;;		Unchanged: 0/0
 24294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24295 ;;      Params:         0       0       0       0       0       0       0       0       0
 24296 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24297 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24298 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24299 ;;Total ram usage:        0 bytes
 24300 ;; Hardware stack levels used:    1
 24301 ;; This function calls:
 24302 ;;		Nothing
 24303 ;; This function is called by:
 24304 ;;		_INTERRUPT_InterruptManager
 24305 ;; This function uses a non-reentrant model
 24306 ;;
 24307                           
 24308                           	psect	text119
 24309  00377A                     __ptext119:
 24310                           	opt stack 0
 24311  00377A                     _EUSART_Transmit_ISR:
 24312                           	opt stack 19
 24313                           
 24314                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 24315                           
 24316                           ;incstack = 0
 24317  00377A  0E40               	movlw	64
 24318  00377C  6026               	cpfslt	_eusartTxBufferRemaining,c
 24319  00377E  D00F               	goto	i2l1063
 24320                           
 24321                           ;eusart.c: 167: {
 24322                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 24323  003780  0E00               	movlw	low _eusartTxBuffer
 24324  003782  2428               	addwf	_eusartTxTail,w,c
 24325  003784  6ED9               	movwf	fsr2l,c
 24326  003786  6ADA               	clrf	fsr2h,c
 24327  003788  0E02               	movlw	high _eusartTxBuffer
 24328  00378A  22DA               	addwfc	fsr2h,f,c
 24329  00378C  50DF               	movf	indf2,w,c
 24330  00378E  6EAD               	movwf	4013,c	;volatile
 24331  003790  2A28               	incf	_eusartTxTail,f,c
 24332                           
 24333                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 24334  003792  0E3F               	movlw	63
 24335  003794  6428               	cpfsgt	_eusartTxTail,c
 24336  003796  D001               	goto	i2l9533
 24337                           
 24338                           ;eusart.c: 170: {
 24339                           ;eusart.c: 171: eusartTxTail = 0;
 24340  003798  6A28               	clrf	_eusartTxTail,c
 24341  00379A                     i2l9533:
 24342                           
 24343                           ;eusart.c: 172: }
 24344                           ;eusart.c: 173: eusartTxBufferRemaining++;
 24345  00379A  2A26               	incf	_eusartTxBufferRemaining,f,c	;volatile
 24346                           
 24347                           ;eusart.c: 174: }
 24348  00379C  0012               	return	
 24349  00379E                     i2l1063:
 24350                           
 24351                           ;eusart.c: 175: else
 24352                           ;eusart.c: 176: {
 24353                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 24354  00379E  989D               	bcf	3997,4,c	;volatile
 24355  0037A0  0012               	return		;funcret
 24356  0037A2                     __end_of_EUSART_Transmit_ISR:
 24357                           	opt stack 0
 24358                           tosu	equ	0xFFF
 24359                           tosh	equ	0xFFE
 24360                           tosl	equ	0xFFD
 24361                           pclatu	equ	0xFFB
 24362                           pclath	equ	0xFFA
 24363                           tblptru	equ	0xFF8
 24364                           tblptrh	equ	0xFF7
 24365                           tblptrl	equ	0xFF6
 24366                           tablat	equ	0xFF5
 24367                           prodh	equ	0xFF4
 24368                           prodl	equ	0xFF3
 24369                           intcon	equ	0xFF2
 24370                           postinc0	equ	0xFEE
 24371                           wreg	equ	0xFE8
 24372                           indf1	equ	0xFE7
 24373                           postdec1	equ	0xFE5
 24374                           fsr1h	equ	0xFE2
 24375                           fsr1l	equ	0xFE1
 24376                           indf2	equ	0xFDF
 24377                           postinc2	equ	0xFDE
 24378                           postdec2	equ	0xFDD
 24379                           plusw2	equ	0xFDB
 24380                           fsr2h	equ	0xFDA
 24381                           fsr2l	equ	0xFD9
 24382                           status	equ	0xFD8
 24383                           
 24384 ;; *************** function _EUSART_Receive_ISR *****************
 24385 ;; Defined at:
 24386 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 24387 ;; Parameters:    Size  Location     Type
 24388 ;;		None
 24389 ;; Auto vars:     Size  Location     Type
 24390 ;;		None
 24391 ;; Return value:  Size  Location     Type
 24392 ;;		None               void
 24393 ;; Registers used:
 24394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24395 ;; Tracked objects:
 24396 ;;		On entry : 0/0
 24397 ;;		On exit  : 0/0
 24398 ;;		Unchanged: 0/0
 24399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24400 ;;      Params:         0       0       0       0       0       0       0       0       0
 24401 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24402 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24403 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24404 ;;Total ram usage:        0 bytes
 24405 ;; Hardware stack levels used:    1
 24406 ;; This function calls:
 24407 ;;		Nothing
 24408 ;; This function is called by:
 24409 ;;		_INTERRUPT_InterruptManager
 24410 ;; This function uses a non-reentrant model
 24411 ;;
 24412                           
 24413                           	psect	text120
 24414  003752                     __ptext120:
 24415                           	opt stack 0
 24416  003752                     _EUSART_Receive_ISR:
 24417                           	opt stack 19
 24418                           
 24419                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 24420                           
 24421                           ;incstack = 0
 24422  003752  A2AB               	btfss	4011,1,c	;volatile
 24423  003754  D003               	goto	i2l9539
 24424                           
 24425                           ;eusart.c: 184: {
 24426                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 24427  003756  98AB               	bcf	4011,4,c	;volatile
 24428                           
 24429                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 24430  003758  88AB               	bsf	4011,4,c	;volatile
 24431                           
 24432                           ;eusart.c: 189: }
 24433  00375A  0012               	return	
 24434  00375C                     i2l9539:
 24435                           
 24436                           ;eusart.c: 190: else
 24437                           ;eusart.c: 191: {
 24438                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 24439  00375C  0E00               	movlw	low _eusartRxBuffer
 24440  00375E  2424               	addwf	_eusartRxHead,w,c
 24441  003760  6ED9               	movwf	fsr2l,c
 24442  003762  6ADA               	clrf	fsr2h,c
 24443  003764  0E01               	movlw	high _eusartRxBuffer
 24444  003766  22DA               	addwfc	fsr2h,f,c
 24445  003768  CFAE FFDF          	movff	4014,indf2	;volatile
 24446  00376C  2A24               	incf	_eusartRxHead,f,c
 24447                           
 24448                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 24449  00376E  0E3F               	movlw	63
 24450  003770  6424               	cpfsgt	_eusartRxHead,c
 24451  003772  D001               	goto	i2l9547
 24452                           
 24453                           ;eusart.c: 195: {
 24454                           ;eusart.c: 196: eusartRxHead = 0;
 24455  003774  6A24               	clrf	_eusartRxHead,c
 24456  003776                     i2l9547:
 24457                           
 24458                           ;eusart.c: 197: }
 24459                           ;eusart.c: 198: eusartRxCount++;
 24460  003776  2A23               	incf	_eusartRxCount,f,c	;volatile
 24461  003778  0012               	return		;funcret
 24462  00377A                     __end_of_EUSART_Receive_ISR:
 24463                           	opt stack 0
 24464                           tosu	equ	0xFFF
 24465                           tosh	equ	0xFFE
 24466                           tosl	equ	0xFFD
 24467                           pclatu	equ	0xFFB
 24468                           pclath	equ	0xFFA
 24469                           tblptru	equ	0xFF8
 24470                           tblptrh	equ	0xFF7
 24471                           tblptrl	equ	0xFF6
 24472                           tablat	equ	0xFF5
 24473                           prodh	equ	0xFF4
 24474                           prodl	equ	0xFF3
 24475                           intcon	equ	0xFF2
 24476                           postinc0	equ	0xFEE
 24477                           wreg	equ	0xFE8
 24478                           indf1	equ	0xFE7
 24479                           postdec1	equ	0xFE5
 24480                           fsr1h	equ	0xFE2
 24481                           fsr1l	equ	0xFE1
 24482                           indf2	equ	0xFDF
 24483                           postinc2	equ	0xFDE
 24484                           postdec2	equ	0xFDD
 24485                           plusw2	equ	0xFDB
 24486                           fsr2h	equ	0xFDA
 24487                           fsr2l	equ	0xFD9
 24488                           status	equ	0xFD8
 24489                           
 24490 ;; *************** function _CMP1_ISR *****************
 24491 ;; Defined at:
 24492 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 24493 ;; Parameters:    Size  Location     Type
 24494 ;;		None
 24495 ;; Auto vars:     Size  Location     Type
 24496 ;;		None
 24497 ;; Return value:  Size  Location     Type
 24498 ;;		None               void
 24499 ;; Registers used:
 24500 ;;		None
 24501 ;; Tracked objects:
 24502 ;;		On entry : 0/0
 24503 ;;		On exit  : 0/0
 24504 ;;		Unchanged: 0/0
 24505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24506 ;;      Params:         0       0       0       0       0       0       0       0       0
 24507 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24508 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24509 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24510 ;;Total ram usage:        0 bytes
 24511 ;; Hardware stack levels used:    1
 24512 ;; This function calls:
 24513 ;;		Nothing
 24514 ;; This function is called by:
 24515 ;;		_INTERRUPT_InterruptManager
 24516 ;; This function uses a non-reentrant model
 24517 ;;
 24518                           
 24519                           	psect	text121
 24520  0034A4                     __ptext121:
 24521                           	opt stack 0
 24522  0034A4                     _CMP1_ISR:
 24523                           	opt stack 19
 24524                           
 24525                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 24526                           
 24527                           ;incstack = 0
 24528  0034A4  9CA1               	bcf	4001,6,c	;volatile
 24529  0034A6  0012               	return		;funcret
 24530  0034A8                     __end_of_CMP1_ISR:
 24531                           	opt stack 0
 24532                           tosu	equ	0xFFF
 24533                           tosh	equ	0xFFE
 24534                           tosl	equ	0xFFD
 24535                           pclatu	equ	0xFFB
 24536                           pclath	equ	0xFFA
 24537                           tblptru	equ	0xFF8
 24538                           tblptrh	equ	0xFF7
 24539                           tblptrl	equ	0xFF6
 24540                           tablat	equ	0xFF5
 24541                           prodh	equ	0xFF4
 24542                           prodl	equ	0xFF3
 24543                           intcon	equ	0xFF2
 24544                           postinc0	equ	0xFEE
 24545                           wreg	equ	0xFE8
 24546                           indf1	equ	0xFE7
 24547                           postdec1	equ	0xFE5
 24548                           fsr1h	equ	0xFE2
 24549                           fsr1l	equ	0xFE1
 24550                           indf2	equ	0xFDF
 24551                           postinc2	equ	0xFDE
 24552                           postdec2	equ	0xFDD
 24553                           plusw2	equ	0xFDB
 24554                           fsr2h	equ	0xFDA
 24555                           fsr2l	equ	0xFD9
 24556                           status	equ	0xFD8
 24557                           tosu	equ	0xFFF
 24558                           tosh	equ	0xFFE
 24559                           tosl	equ	0xFFD
 24560                           pclatu	equ	0xFFB
 24561                           pclath	equ	0xFFA
 24562                           tblptru	equ	0xFF8
 24563                           tblptrh	equ	0xFF7
 24564                           tblptrl	equ	0xFF6
 24565                           tablat	equ	0xFF5
 24566                           prodh	equ	0xFF4
 24567                           prodl	equ	0xFF3
 24568                           intcon	equ	0xFF2
 24569                           postinc0	equ	0xFEE
 24570                           wreg	equ	0xFE8
 24571                           indf1	equ	0xFE7
 24572                           postdec1	equ	0xFE5
 24573                           fsr1h	equ	0xFE2
 24574                           fsr1l	equ	0xFE1
 24575                           indf2	equ	0xFDF
 24576                           postinc2	equ	0xFDE
 24577                           postdec2	equ	0xFDD
 24578                           plusw2	equ	0xFDB
 24579                           fsr2h	equ	0xFDA
 24580                           fsr2l	equ	0xFD9
 24581                           status	equ	0xFD8
 24582                           
 24583                           	psect	text122
 24584  000000                     __ptext122:
 24585                           	opt stack 0
 24586                           tosu	equ	0xFFF
 24587                           tosh	equ	0xFFE
 24588                           tosl	equ	0xFFD
 24589                           pclatu	equ	0xFFB
 24590                           pclath	equ	0xFFA
 24591                           tblptru	equ	0xFF8
 24592                           tblptrh	equ	0xFF7
 24593                           tblptrl	equ	0xFF6
 24594                           tablat	equ	0xFF5
 24595                           prodh	equ	0xFF4
 24596                           prodl	equ	0xFF3
 24597                           intcon	equ	0xFF2
 24598                           postinc0	equ	0xFEE
 24599                           wreg	equ	0xFE8
 24600                           indf1	equ	0xFE7
 24601                           postdec1	equ	0xFE5
 24602                           fsr1h	equ	0xFE2
 24603                           fsr1l	equ	0xFE1
 24604                           indf2	equ	0xFDF
 24605                           postinc2	equ	0xFDE
 24606                           postdec2	equ	0xFDD
 24607                           plusw2	equ	0xFDB
 24608                           fsr2h	equ	0xFDA
 24609                           fsr2l	equ	0xFD9
 24610                           status	equ	0xFD8
 24611                           
 24612                           	psect	rparam
 24613  0000                     tosu	equ	0xFFF
 24614                           tosh	equ	0xFFE
 24615                           tosl	equ	0xFFD
 24616                           pclatu	equ	0xFFB
 24617                           pclath	equ	0xFFA
 24618                           tblptru	equ	0xFF8
 24619                           tblptrh	equ	0xFF7
 24620                           tblptrl	equ	0xFF6
 24621                           tablat	equ	0xFF5
 24622                           prodh	equ	0xFF4
 24623                           prodl	equ	0xFF3
 24624                           intcon	equ	0xFF2
 24625                           postinc0	equ	0xFEE
 24626                           wreg	equ	0xFE8
 24627                           indf1	equ	0xFE7
 24628                           postdec1	equ	0xFE5
 24629                           fsr1h	equ	0xFE2
 24630                           fsr1l	equ	0xFE1
 24631                           indf2	equ	0xFDF
 24632                           postinc2	equ	0xFDE
 24633                           postdec2	equ	0xFDD
 24634                           plusw2	equ	0xFDB
 24635                           fsr2h	equ	0xFDA
 24636                           fsr2l	equ	0xFD9
 24637                           status	equ	0xFD8
 24638                           
 24639                           	psect	temp
 24640  00005B                     btemp:
 24641                           	opt stack 0
 24642  00005B                     	ds	1
 24643  0000                     int$flags	set	btemp
 24644                           tosu	equ	0xFFF
 24645                           tosh	equ	0xFFE
 24646                           tosl	equ	0xFFD
 24647                           pclatu	equ	0xFFB
 24648                           pclath	equ	0xFFA
 24649                           tblptru	equ	0xFF8
 24650                           tblptrh	equ	0xFF7
 24651                           tblptrl	equ	0xFF6
 24652                           tablat	equ	0xFF5
 24653                           prodh	equ	0xFF4
 24654                           prodl	equ	0xFF3
 24655                           intcon	equ	0xFF2
 24656                           postinc0	equ	0xFEE
 24657                           wreg	equ	0xFE8
 24658                           indf1	equ	0xFE7
 24659                           postdec1	equ	0xFE5
 24660                           fsr1h	equ	0xFE2
 24661                           fsr1l	equ	0xFE1
 24662                           indf2	equ	0xFDF
 24663                           postinc2	equ	0xFDE
 24664                           postdec2	equ	0xFDD
 24665                           plusw2	equ	0xFDB
 24666                           fsr2h	equ	0xFDA
 24667                           fsr2l	equ	0xFD9
 24668                           status	equ	0xFD8


Data Sizes:
    Strings     1525
    Constant    969
    Data        5
    BSS         429
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     45     154
    BANK1           256      9     225
    BANK2           256      0      64
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_219(CODE[7]), STR_217(CODE[7]), STR_215(CODE[7]), STR_212(CODE[7]), 
		 -> STR_70(CODE[3]), STR_66(CODE[4]), STR_64(CODE[3]), STR_30(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_211(CODE[3]), STR_68(CODE[14]), STR_60(CODE[11]), STR_56(CODE[7]), 
		 -> STR_53(CODE[9]), STR_52(CODE[11]), STR_50(CODE[14]), STR_47(CODE[14]), 
		 -> STR_46(CODE[3]), STR_43(CODE[7]), STR_40(CODE[9]), STR_33(CODE[14]), 
		 -> STR_32(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5370_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5370_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5370_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5370_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4083$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    S4073$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4073$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4049$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4049$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4049$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4049$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 18
		 -> oled_putUint16@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_260(CODE[12]), STR_259(CODE[8]), 
		 -> STR_258(CODE[9]), STR_241(CODE[16]), STR_240(CODE[16]), STR_239(CODE[16]), 
		 -> STR_238(CODE[15]), STR_237(CODE[15]), STR_236(CODE[16]), STR_235(CODE[17]), 
		 -> STR_234(CODE[16]), STR_233(CODE[17]), STR_232(CODE[17]), STR_231(CODE[2]), 
		 -> STR_230(CODE[7]), STR_229(CODE[10]), STR_228(CODE[17]), STR_227(CODE[16]), 
		 -> STR_226(CODE[15]), STR_225(CODE[15]), STR_224(CODE[17]), STR_223(CODE[16]), 
		 -> STR_222(CODE[17]), STR_221(CODE[17]), STR_220(CODE[16]), STR_218(CODE[18]), 
		 -> STR_216(CODE[17]), STR_214(CODE[17]), STR_213(CODE[17]), responseData(BANK0[8]), 
		 -> responseId(BANK1[16]), responsePortNum(BANK0[3]), STR_210(CODE[12]), STR_209(CODE[13]), 
		 -> STR_208(CODE[12]), STR_205(CODE[18]), STR_204(CODE[13]), STR_203(CODE[17]), 
		 -> STR_202(CODE[16]), STR_201(CODE[17]), STR_200(CODE[17]), STR_199(CODE[2]), 
		 -> STR_198(CODE[2]), STR_197(CODE[2]), STR_196(CODE[2]), STR_195(CODE[2]), 
		 -> STR_194(CODE[2]), STR_193(CODE[16]), STR_192(CODE[17]), STR_191(CODE[17]), 
		 -> STR_190(CODE[2]), STR_189(CODE[2]), STR_188(CODE[2]), STR_187(CODE[15]), 
		 -> STR_186(CODE[15]), STR_185(CODE[15]), STR_184(CODE[15]), STR_183(CODE[2]), 
		 -> STR_182(CODE[2]), STR_181(CODE[2]), STR_180(CODE[2]), STR_179(CODE[15]), 
		 -> STR_178(CODE[15]), STR_177(CODE[15]), STR_176(CODE[15]), STR_175(CODE[2]), 
		 -> STR_174(CODE[2]), STR_173(CODE[2]), STR_172(CODE[2]), STR_171(CODE[15]), 
		 -> STR_170(CODE[15]), STR_169(CODE[15]), STR_168(CODE[15]), STR_167(CODE[2]), 
		 -> STR_166(CODE[2]), STR_165(CODE[2]), STR_164(CODE[2]), STR_163(CODE[15]), 
		 -> STR_162(CODE[15]), STR_161(CODE[15]), STR_160(CODE[15]), STR_159(CODE[2]), 
		 -> STR_158(CODE[2]), STR_157(CODE[2]), STR_156(CODE[2]), STR_155(CODE[2]), 
		 -> STR_154(CODE[15]), STR_153(CODE[15]), STR_152(CODE[15]), STR_151(CODE[15]), 
		 -> STR_150(CODE[2]), STR_149(CODE[2]), STR_148(CODE[2]), STR_147(CODE[2]), 
		 -> STR_146(CODE[2]), STR_145(CODE[15]), STR_144(CODE[15]), STR_143(CODE[15]), 
		 -> STR_142(CODE[15]), STR_141(CODE[2]), STR_140(CODE[2]), STR_139(CODE[2]), 
		 -> STR_138(CODE[2]), STR_137(CODE[2]), STR_136(CODE[15]), STR_135(CODE[15]), 
		 -> STR_134(CODE[15]), STR_133(CODE[15]), STR_132(CODE[2]), STR_131(CODE[2]), 
		 -> STR_130(CODE[2]), STR_129(CODE[2]), STR_128(CODE[2]), STR_127(CODE[15]), 
		 -> STR_126(CODE[15]), STR_125(CODE[15]), STR_124(CODE[15]), STR_123(CODE[2]), 
		 -> STR_122(CODE[2]), STR_121(CODE[2]), STR_120(CODE[2]), STR_119(CODE[2]), 
		 -> STR_118(CODE[15]), STR_117(CODE[15]), STR_116(CODE[15]), STR_115(CODE[15]), 
		 -> STR_114(CODE[2]), STR_113(CODE[2]), STR_112(CODE[2]), STR_111(CODE[2]), 
		 -> STR_110(CODE[2]), STR_109(CODE[15]), STR_108(CODE[15]), STR_107(CODE[15]), 
		 -> STR_106(CODE[15]), STR_105(CODE[2]), STR_104(CODE[2]), STR_103(CODE[2]), 
		 -> STR_102(CODE[2]), STR_101(CODE[2]), STR_100(CODE[15]), STR_99(CODE[15]), 
		 -> STR_98(CODE[15]), STR_97(CODE[15]), STR_96(CODE[2]), STR_95(CODE[16]), 
		 -> STR_94(CODE[17]), STR_93(CODE[17]), STR_92(CODE[16]), STR_91(CODE[16]), 
		 -> STR_90(CODE[16]), STR_89(CODE[2]), STR_88(CODE[7]), STR_87(CODE[7]), 
		 -> STR_86(CODE[16]), STR_85(CODE[16]), STR_84(CODE[17]), STR_83(CODE[17]), 
		 -> STR_82(CODE[16]), STR_81(CODE[16]), STR_80(CODE[16]), STR_78(CODE[2]), 
		 -> STR_76(CODE[2]), STR_75(CODE[16]), STR_74(CODE[13]), STR_73(CODE[12]), 
		 -> STR_72(CODE[17]), STR_62(CODE[8]), STR_61(CODE[8]), STR_58(CODE[7]), 
		 -> STR_57(CODE[10]), STR_55(CODE[11]), STR_54(CODE[11]), STR_49(CODE[9]), 
		 -> STR_48(CODE[11]), STR_42(CODE[11]), STR_41(CODE[10]), STR_37(CODE[5]), 
		 -> STR_36(CODE[12]), STR_35(CODE[8]), STR_34(CODE[9]), STR_28(CODE[17]), 
		 -> STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[9]), 
		 -> STR_23(CODE[10]), STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), 
		 -> STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), 
		 -> STR_9(CODE[9]), STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendDataCommand@appData	PTR unsigned char  size(1) Largest target is 12
		 -> dataBuffer(BANK0[12]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_207(CODE[12]), STR_206(CODE[14]), STR_79(CODE[14]), STR_77(CODE[12]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_257(CODE[26]), STR_256(CODE[26]), STR_255(CODE[26]), STR_254(CODE[26]), 
		 -> STR_253(CODE[1]), STR_252(CODE[9]), STR_251(CODE[13]), STR_250(CODE[13]), 
		 -> STR_249(CODE[13]), STR_248(CODE[13]), STR_247(CODE[13]), STR_246(CODE[13]), 
		 -> STR_245(CODE[13]), STR_244(CODE[13]), STR_243(CODE[16]), STR_242(CODE[15]), 
		 -> STR_71(CODE[11]), STR_69(CODE[11]), STR_67(CODE[11]), STR_65(CODE[11]), 
		 -> STR_63(CODE[12]), STR_59(CODE[14]), STR_51(CODE[14]), STR_45(CODE[10]), 
		 -> STR_44(CODE[13]), STR_39(CODE[13]), STR_38(CODE[14]), STR_31(CODE[13]), 
		 -> STR_29(CODE[12]), STR_22(CODE[20]), STR_21(CODE[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_test_adc
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_moteApp_delayms
    _test_adc->_oled_putUint16
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_oled_putUint16
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _oled_putUint16->_oled_putString
    _moteApp_add8bToDataBuffer->___lbdiv
    _moteApp_add8bToDataBuffer->___lbmod
    _moteApp_add16bToDataBuffer->___lwdiv
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _modemSleep->_moteApp_delayms
    _modemResync->_moteApp_delayms
    _MOTEapp_getModemResponse->_EUSART_Read
    _ADC_TempConversion->___lwdiv
    _moteJoiningProcess->_oled_putString
    _MOTEapp_WriteDataRate->_moteApp_delayms
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _TMRapp_Handler->___lwmod
    _USBapp_Handler->_oled_putString
    _oled_putString->_oled_putChar
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _oled_writeData->_SPI_Exchange8bit
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _oled_writeCommand->_SPI_Exchange8bit
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1112017
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                        _modemResync
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  520025
                    _moteApp_delayms
                         _oled_clear
                           _test_adc
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          3     3      0   72898
                                             18 BANK0      3     3      0
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   68012
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   71596
                    _moteApp_delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   79832
                    _moteApp_delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   1     1      0    8236
                                              5 BANK0      1     1      0
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _test_adc                                             8     8      0  221647
                                             28 BANK0      6     6      0
                  _ADC_GetConversion
                 _ADC_TempConversion
                    _moteApp_delayms
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                         11    11      0  434805
                                             43 BANK0      2     2      0
                                              0 BANK1      9     9      0
                  _ADC_GetConversion
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
           _MOTEapp_getModemResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                    _moteApp_delayms
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  16    13      3  265151
                                             28 BANK0     15    12      3
                  _ADC_GetConversion
                 _ADC_TempConversion
                     _MOTEapp_SetADR
                _MOTEapp_SetDataRate
              _MOTEapp_WriteDataRate
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
                              _unhex
 ---------------------------------------------------------------------------------
 (3) _unhex                                                1     1      0     186
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      7     3      4    1948
                                              1 BANK0      7     3      4
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     158
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   69919
                                             18 BANK0      9     7      2
                            ___lbdiv
                            ___lbmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint16                                      10     6      4   75427
                                             18 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 3     3      0     297
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            2     1      1    2183
                                              4 BANK0      2     1      1
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     856
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     657
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           3     0      3    6743
                                              7 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   18481
                                             15 BANK0      1     1      0
                 _EUSART_FlushBuffer
                  _EUSART_Initialize
             _PIN_MANAGER_Initialize
                        _modemResync
                         _modemSleep
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1552
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0      62
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      93
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _modemSleep                                           0     0      0    8205
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _modemResync                                          3     3      0    8483
                                              5 BANK0      3     3      0
           _MOTEapp_getModemResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (5) _MOTEapp_getModemResponse                             2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   2     2      0    2178
                                              7 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    2113
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   4     3      1   89901
                                             18 BANK0      4     3      1
                   _DATAEE_WriteByte
                     _MOTEapp_SetADR
                _MOTEapp_SetDataRate
              _MOTEapp_WriteDataRate
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     1      6    2200
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               9     5      4    2459
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_WriteDataRate                                0     0      0    8205
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    3393
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _moteApp_delayms                                      5     3      2    4812
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRate                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetADR                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     304
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3768
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3768
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       0     0      0   72570
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   66784
                                             13 BANK0      5     1      4
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1228
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1228
                                             13 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1098
                                              3 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0     124
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4558
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     209
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2146
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         4     4      0    2104
                                              7 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1866
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   30065
                                             33 COMRAM    12    12      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (12) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   30065
                                             32 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   17700
                                             29 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  1     1      0   12636
                                             28 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             7     7      0    4286
                                             21 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (14) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     500
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     500
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     501
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _USART_mySetLineCodingHandler                        4     4      0     386
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (12) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _USBapp_handlerState
   _modemResync
     _MOTEapp_getModemResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_GetConversion
     _ADC_TempConversion
       ___lwdiv
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModemResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___lwmod
     _moteApp_delayms
     _moteJoiningProcess
       _DATAEE_WriteByte
       _MOTEapp_SetADR
       _MOTEapp_SetDataRate
       _MOTEapp_WriteDataRate
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _MOTEapp_SetADR
       _MOTEapp_SetDataRate
       _MOTEapp_WriteDataRate
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _EUSART_Initialize
         _PIN_MANAGER_Initialize
         _modemResync
           _MOTEapp_getModemResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _modemSleep
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_displayOff
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _Set_Page_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _oled_writeData
                   _SPI_Exchange8bit
           _oled_devInit
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setDisplay
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
       _moteApp_add8bToDataBuffer
         ___lbdiv
         ___lbmod
       _moteApp_clearBuffers
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
       _unhex
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_devInit
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setDisplay
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setFont
   _oled_putString
     _oled_putChar
       _Set_Column_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _Set_Page_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _oled_writeData
         _SPI_Exchange8bit
   _test_powerup
     _moteApp_delayms
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_adc
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
     _test_comms
       _moteApp_delayms
       _moteApp_toggleLeds
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_leds
       _moteApp_delayms
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_switch
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      40       9       25.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      9      E1       7       87.9%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      9A       5       96.3%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     215      14        0.0%
DATA                 0      0     215       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -357222284 
Symbol Table                                                                                   Thu Nov 12 16:40:12 2015

                            _SPI_Initialize 3522                                  _USB_SD_Ptr 7641  
               ?_moteApp_add16bToDataBuffer 00CF                                test_adc@Traw 00E6  
                                        l55 506A                           ??_CMP1_Initialize 00C8  
                                _USB_Buffer 0140                         moteRunningProcess@i 00EB  
                             _USBDeviceInit 5098                     EUSART_FlushBuffer@index 00C8  
                    __end_of_oled_writeData 3516                        ??_moteApp_toggleLeds 00CD  
                        __size_of_CDCInitEP 0052                    USBapp_handlerState@state 00C8  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
      USER_USB_CALLBACK_EVENT_HANDLER@event 003B        USER_USB_CALLBACK_EVENT_HANDLER@pdata 003D  
                                       l120 4B00                                         l301 40CE  
                                       l310 363C                                         l411 6466  
                                       l324 5C46                 __end_of_USBStdGetDscHandler 59C2  
                                       l351 5FCC                                         l338 5CFA  
                                       l363 6034                                         l356 5FD2  
                                       l447 66A4                                         l609 75A6  
                                       l298 4094                                         l811 42F8  
                                       l708 41FE                                         l582 72B8  
                                       l727 37BE                                         l559 6F88  
                                       l833 4C38                                         l818 4364  
                                       l595 741A                                         _BDT 000400  
                                       l695 4462                                         _CKE 007E3E  
                                       l698 4494                                         l895 3D36  
                                       _CKP 007E34                                         _GIE 007F97  
                              __CFG_CPB$OFF 000000                                         _PR2 000FBB  
                              __CFG_CPD$OFF 000000                          _moteJoiningProcess 5FBC  
                                       _UIE 000F64                                         _UIR 000F65  
                             test_adc@count 00E9                             _timer1ReloadVal 0080  
                                _USBSuspend 364C                       ??_MOTEapp_SetDataRate 00C8  
              __end_of_moteApp_clearBuffers 3BE6                        USBStdSetCfgHandler@i 0043  
                           _TMR2_Initialize 353E                                         prod 000FF3  
                                       tosl 000FFD                                         wreg 000FE8  
                            _USBDeviceTasks 56C2                         MOTEapp_SetADR@state 00C8  
                            _USBDeviceState 008A                       moteApp_delayms@length 00C8  
                     ??_USBCtrlTrfRxService 003F                    __size_ofi2_USBDeviceInit 00D8  
                            ??_getsUSBUSART 00D2                                ?_EUSART_Read 002E  
                  USBEnableEndpoint@options 0036                                __CFG_LVP$OFF 000000  
                       ?_moteJoiningProcess 00DA                                        l1206 3556  
                                      l1144 35F2                                        l1048 3976  
                                      l1057 39B4                                        l1350 3AD8  
                                      l1178 3B0C                                        l2351 3CB6  
                                      l1624 393E                                        l1625 393C  
                                      l2361 3B98                  USBConfigureEndpoint@handle 0034  
                                      l1919 57DC                                        l1928 582E  
                                      l1889 4720                                        l9813 39A6  
                                      l9805 429C                                        l9831 3978  
                                      l9841 399A                                        l9825 39D0  
                                      l9905 3D06                                        l9827 39D2  
                                      STR_1 7D2D                                        STR_2 7D1E  
                                      l9857 368E                                        l9865 37A8  
                                      l9873 3870                                        STR_3 7D0F  
                                      STR_4 7F63                                        STR_5 7C86  
                                      STR_6 7C95                                        l9877 3886  
                                      STR_7 7C3C                                        STR_8 7E97  
                                      STR_9 7F6C                                        l9897 3CEA  
           __size_of_MOTEapp_TimerBasedTask 000E                                        _PEIE 007F96  
                                      u8110 4100                                        u8130 412E  
                                      u8117 40F6                       ??_USBCtrlTrfTxService 002E  
                                      u8137 4124                                        u8335 3AE8  
                                      _UCFG 000F62                                        u8336 3AEA  
                                      _UEP0 000F6A                                        _UEP1 000F6B  
                                      _UEIE 000F66                                        _UEIR 000F67  
                                      _UCON 000F60                                        _TMR2 000FBC  
                   __size_of_MOTEapp_SetADR 0008                             _CDCDataInHandle 0076  
    USBStdFeatureReqHandler@current_ep_data 0047                                        _pDst 007C  
                                      _main 4FC6                    ??i2_USBTransferOnePacket 0032  
         __end_of_moteApp_add8bToDataBuffer 4070                                        fsr1h 000FE2  
                                      fsr2h 000FDA                                        indf1 000FE7  
                                      fsr1l 000FE1                                        indf2 000FDF  
                                      fsr2l 000FD9                             _USBDeviceAttach 391C  
                                      btemp 005B                               __CFG_BORV$190 000000  
                                      pclat 000FFA                                        prodh 000FF4  
                                      prodl 000FF3                        _USBapp_setrxByteFlag 34C4  
                                      start 10AA                             ?_oled_putUint16 00DA  
                             __CFG_IESO$OFF 000000                             __end_of_EndLine 3522  
                    __end_of_SPI_Initialize 3530                            __end_of_CMP1_ISR 34A8  
                           ?_oled_putString 00D5                  __end_of_USBCheckStdRequest 4966  
                    ??_USBCtrlTrfOutHandler 0041                 __size_of_moteRunningProcess 1174  
                          ?_oled_setDisplay 002E                               __CFG_MCLRE$ON 000000  
                          _modemBufferIndex 0029                                ___param_bank 000010  
                 ??_USBStdFeatureReqHandler 0043                                 _TMRapp_Tick 34BE  
                      ??_moteJoiningProcess 00DB                      moteApp_delayms@counter 00CB  
             ?_USART_mySetLineCodingHandler 002E                      sendDataCommand@appData 00CB  
                         sendCommand@string 00C9                    ??_USBStdGetStatusHandler 002E  
              __end_of_USBapp_getrxByteFlag 34B4                   __size_of_DATAEE_WriteByte 003A  
                            ?_USBDeviceInit 002E                               ?_EUSART_Write 002E  
                      oled_putUint16@number 00DA              __size_of_OSCILLATOR_Initialize 0016  
                           ?_oled_writeData 002E               __end_of_OSCILLATOR_Initialize 35FC  
                                     l10003 40B2                                       l10013 40D8  
                                     l10005 40BA                                       l10103 4998  
                                     l10007 40C0                                       l10017 40E0  
                                     l11001 6366                                       l10115 49EC  
                                     l11011 63A4                                       l10131 3A22  
                                     l10301 453C                                       l11021 63DC  
                                     l10133 3A26                                       l10127 3A1C  
                                     l10143 3A3E                                       l10151 37D4  
                                     l10039 3740                                       l10305 454A  
                                     l10313 455A                                       l11009 63A0  
                                     l10065 394C                                       l10233 41DA  
                                     l12003 50C4                                       l11043 644A  
                                     l10171 3C86                                       l10139 3A36  
                                     l11131 65FE                                       l10341 5550  
                                     l10333 5518                                       l11053 646E  
                                     l11037 6420                                       l11029 6408  
                                     l10173 3C8E                                       l10421 4798  
                                     l11213 6804                                       l11205 67C6  
                                     l12111 42FA                                       l10191 3B70  
                                     l10343 555E                                       l10335 5526  
                                     l10351 5588                                       l10327 54FC  
                                     l10271 413C                                       l11047 6458  
                                     l10183 3CAC                                       l10175 3C92  
                                     l10159 37EA                                       l10431 47BE  
                                     l11303 69F6                                       l11223 6842  
                                     l11207 67CE                                       l11127 65F4  
                                     l12033 510A                                       l12009 50EE  
                                     l12017 50F8                                       l10097 4978  
                                     l12121 4340                                       l10193 3B78  
                                     l10345 556C                                       l10337 5534  
                                     l10353 55A8                                       l10329 550A  
                                     l10281 418E                                       l11049 645E  
                                     l11057 647E                                       l10441 47EE  
                                     l10425 47AE                                       l11233 6882  
                                     l11153 6688                                       l10603 57F2  
                                     l12131 4354                                       l10195 3B7C  
                                     l10347 557A                                       l10339 5542  
                                     l10283 44E4                                       l10275 4162  
                                     l11059 64C6                                       l11411 6C22  
                                     l11403 6C0C                                       l11331 6A76  
                                     l11323 6A6A                                       l11235 688A  
                                     l11163 66A6                                       l11075 64F8  
                                     l10613 5820                                       l12125 4348  
                                     l10533 44CE                                       l10365 3BA6  
                                     l10445 4820                                       l11261 6944  
                                     l11253 690E                                       l11149 665E  
                                     l11085 651C                                       l11157 6696  
                                     l10607 57FA                                       l12127 434E  
                                     l10199 3B8E                                       l10279 4186  
                                     l10375 3BBA                                       l11511 6E24  
                                     l11431 6C94                                       l11415 6C26  
                                     l11407 6C14                                       l11351 6AEC  
                                     l11327 6A72                                       l11319 6A62  
                                     l11175 66EC                                       l11167 66B0  
                                     l12215 5CFC                                       l12207 5CE4  
                                     l12151 5C0E                                       l12143 5BFA  
                                     l10703 4B38                                       l12303 508C  
                                     l10529 44C6                                       l10385 3BD2  
                                     l10457 3808                                       l11505 6E0C  
                                     l11257 6928                                       l11265 695E  
                                     l11177 66F4                                       l11089 652A  
                                     l12241 5D9A                                       l10627 5848  
                                     l10635 5866                                       l10619 5832  
                                     l10563 476E                                       l11531 6E94  
                                     l11515 6E28                                       l11507 6E1E  
                                     l11443 6CAC                                       l11435 6C9C  
                                     l11355 6AF4                                       l11347 6AE4  
                                     l11291 69E4                                       l11275 6978  
                                     l11267 6966                                       l11187 6734  
                                     l11099 654E                                       l12227 5D44  
                                     l12171 5C58                                       l12163 5C36  
                                     l10707 4B40                                       l10637 586C  
                                     l10645 588A                                       l10557 474C  
                                     l10901 60F6                                       l11613 7084  
                                     l11381 6B86                                       l11541 6EAE  
                                     l11189 673C                                       l12245 5DB0  
                                     l12157 5C26                                       l10709 4B4A  
                                     l10655 589E                                       l10647 588E  
                                     l10559 4750                                       l10567 4792  
                                     l10903 60FA                                       l11631 70CE  
                                     l11535 6E9A                                       l11463 6D22  
                                     l11439 6CA4                                       l11383 6B94  
                                     l11375 6B68                                       l11359 6AFA  
                                     l11295 69EA                                       l11543 6EEC  
                                     l12247 5DC2                                       l12183 5C76  
                                     l12167 5C4A                                       l10657 58BC  
                                     l10921 6160                                       l11713 726E  
                                     l11617 708E                                       l11377 6B6E  
                                     l10841 3D32                                       l10587 362C  
                                     l10931 6196                                       l10907 6108  
                                     l11803 74F2                                       l11731 72E4  
                                     l11643 710C                                       l11635 70E6  
                                     l11571 6F76                                       l11491 6DA2  
                                     l11483 6D98                                       l11467 6D2A  
                                     l11459 6D1A                                       l11387 6B9E  
                                     l11379 6B80                                       l11299 69F2  
                                     l10851 3D52                                       l10843 3D3A  
                                     l10835 3D12                                       l10691 4AEA  
                                     l12275 5014                                       l10861 5FD4  
                                     l11813 7530                                       l11741 734E  
                                     l11717 7276                                       l11709 7268  
                                     l11661 7188                                       l11581 6FE4  
                                     l12197 5CAC                                       l10599 57EA  
                                     l10927 6188                                       l10919 615C  
                                     l11831 757E                                       l11823 7564  
                                     l11751 7396                                       l11639 7100  
                                     l11591 7024                                       l11567 6F5C  
                                     l11559 6F3A                                       l11487 6D9E  
                                     l10847 3D4C                                       l12295 507C  
                                     l10953 6228                                       l10937 61BA  
                                     l10865 5FEC                                       l11841 75A2  
                                     l11761 73D6                                       l11737 731A  
                                     l11745 7380                                       l11593 702C  
                                     l10849 3D4E                                       l10769 4D12  
                                     l10697 4B1C                                       l10689 4AD4  
                                     l12289 506C                                       l10971 629E  
                                     l10947 6200                                       l10883 605E  
                                     l10875 602E                                       l10867 5FF0  
                                     l11835 7590                                       l11771 7408  
                                     l11691 7218                                       l11747 738C  
                                     l10957 6246                                       l10877 603A  
                                     l11693 721A                                       l11669 71AE  
                                     l11775 7436                                       l11855 75EC  
                                     l11881 4C5C                                       l10985 6300  
                                     l11697 7222                                       l10995 634A  
                                     l11965 384E                                       l11799 74E8  
                                     l11969 385E                                       l11897 4C98  
                                     ?_main 002E                             __end_of___lbdiv 3A42  
                                     _EEADR 000FA9                                       STR_10 7E03  
                                     STR_11 7EA3                                       STR_20 7F75  
                                     STR_12 7E2A                                       STR_21 7FFD  
                                     STR_13 7E10                                       STR_30 7FEF  
                                     STR_14 7E1D                                       STR_22 7A72  
                                     STR_23 7F05                                       STR_15 7EE6  
                                     STR_31 7DF6                                       STR_32 7FF2  
                                     STR_24 7F51                                       STR_40 7F3F  
                                     STR_16 7F23                                       STR_17 7F7E  
                                     STR_41 7EFB                                       STR_33 7D66  
                                     STR_25 7B54                                       STR_18 7FA7  
                                     STR_34 7F5A                                       STR_42 7EC5  
                                     STR_50 7D58                                       STR_26 7BA9  
                                     STR_51 7D4A                                       STR_43 7FCC  
                                     STR_19 7FAF                                       STR_35 7F9F  
                                     STR_27 7BBA                                       STR_60 7EBA  
                                     STR_44 7DF6                                       STR_52 7EBA  
                                     STR_36 7E73                                       STR_28 7B10  
                                     STR_53 7F3F                                       STR_37 7F14  
                                     STR_61 7F8F                                       STR_45 7F19  
                                     STR_29 7E8B                                       STR_70 7FF2  
                                     STR_46 7FF2                                       STR_62 7F97  
                                     STR_54 7EAF                                       STR_38 7D4A  
                                     STR_55 7EC5                                       STR_39 7DF6  
                                     STR_71 7ED0                                       STR_47 7D66  
                                     STR_63 7E7F                                       STR_56 7FCC  
                                     STR_64 7D0C                                       STR_48 7EDB  
                                     STR_80 7BEC                                       STR_72 7B65  
                                     STR_49 7F36                                       STR_57 7F0F  
                                     STR_65 7ED0                                       STR_73 7E43  
                                     STR_81 7BDC                                       STR_90 7BEC  
                                     STR_82 7BFC                                       STR_66 7C28  
                                     STR_58 7FC5                                       STR_74 7D81  
                                     STR_91 7BDC                                       STR_59 7D4A  
                                     STR_67 7ED0                                       STR_75 7BFC  
                                     STR_83 7ACC                                       STR_92 7BFC  
                                     STR_68 7D58                                       STR_76 7FF9  
                                     STR_84 7ABB                             __end_of___lbmod 37F2  
                                     STR_85 7BFC                                       STR_69 7ED0  
                                     STR_77 7E67                                       STR_93 7AFF  
                                     STR_86 7BEC                                       STR_78 7FFB  
                                     STR_94 7B32                                       STR_95 7BFC  
                                     STR_87 7FBE                                       STR_79 7D3C  
                                     STR_96 7FF7                                       STR_88 7FB7  
                                     STR_89 7FF9                                       STR_97 7C79  
                                     STR_98 7C88                                       STR_99 7C97  
         __size_of_USBCtrlEPServiceComplete 00E4                             _TMR1_StartTimer 34A8  
                           __end_of___lldiv 4280           __size_of_MOTEapp_setResponseReady 0002  
                                     u10607 37AE                                       _T1CON 000FCD  
                    __end_of_USBDeviceTasks 57C0                                       u10557 524E  
                                     u10567 525C                                       _T2CON 000FBA  
                                     u10577 5272                                       u10587 5286  
                                     u10597 3B06                     __end_of_sendDataCommand 482A  
                 ?_USBCtrlEPServiceComplete 002E                             __end_of___lwdiv 3CC0  
                           __end_of___lwmod 3BA2                   ?_MOTEapp_setResponseReady 002E  
                       oled_putUint8@number 00DC                                       _UADDR 000F63  
                                     _RCREG 000FAE                                       _RCSTA 000FAB  
                                     _TMR1H 000FCF                                       _TMR1L 000FCE  
                                     _SPBRG 000FAF    moteApp_add16bToDataBuffer@bufferLocation 00D1  
   moteApp_add8bToDataBuffer@bufferLocation 00CC                                       _USTAT 000F61  
                                     _TXREG 000FAD                                       _TXSTA 000FAC  
                             __CFG_WRT0$OFF 000000          __size_of_USBCtrlEPAllowStatusStage 00BC  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                         moteHandler@i_1340 01DF                               __CFG_WRT3$OFF 000000  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                            __CFG_EBTR3$OFF 000000             __end_of_USBCtrlEPAllowDataStage 4706  
                         oled_putChar@index 00D4                            __end_of_TMR1_ISR 34FE  
                                     _sd000 7A06                                       _sd001 798C  
           service_pushbutton@Release_Timer 009D                                       _sd002 79C0  
                             __CFG_WRTB$OFF 000000                      moteRunningProcess@Traw 00E9  
                             __CFG_WRTC$OFF 000000                               __CFG_WRTD$OFF 000000  
                           _DATAEE_ReadByte 3594                              __CFG_EBTRB$OFF 000000  
                                i2memset@p1 002E                                       _light 007A  
                                     _unhex 37F2                     __end_of_TMR1_Initialize 391C  
                              _runningState 0098                                       pclath 000FFA  
                                     tablat 000FF5                 MOTEapp_SetDataRate@dataRate 00C8  
                                     plusw2 000FDB                           __end_of_CDCInitEP 3DFA  
                oled_setDisplay@displayType 00CA                                ?_modemResync 002E  
                                     status 000FD8                              __CFG_T3CMX$RC0 000000  
                           _TMR2_StartTimer 34AC                             __end_of_strncmp 41A2  
                           ___lbdiv@divisor 00C8                              __CFG_ICPRT$OFF 000000  
                     ?_USBapp_setrxByteFlag 002E                            __end_ofi2_memset 3844  
                           ___lbdiv@counter 00CA                                _m10SecTicker 0094  
                           ?_SPI_Initialize 002E                             putUSBUSART@data 00C8  
        USART_mySetLineCodingHandler@dwBaud 003B                __size_of_USBStdSetCfgHandler 00A8  
                           __initialization 3FB2                       TMR2_ReadTimer@readVal 00C8  
             __size_of_TMRapp_ClearBitFlags 0004                                __end_of_main 5098  
             __size_of_MOTEapp_handlerState 0008                      _MOTEapp_TimerBasedTask 3530  
                            ??_EUSART_Write 00C8                     __end_of_TMR2_Initialize 354E  
                              ?_sendCommand 00C9                 ?_INTERRUPT_InterruptManager 002E  
                 __size_of_USBCtrlEPService 00B2                                      ??_main 00F5  
                              ?_moteHandler 002E                               __activetblptr 000002  
                        _modemResonseBuffer 0180                             ?_USBDeviceTasks 002E  
                       i2_EUSART_Initialize 3898                       oled_putUint16@numData 00DE  
                 sendDataCommand@dataLength 00CC                                 ?_USBSuspend 002E  
                                _NextUSBOut 001A                              __CFG_SDOMX$RB3 000000  
                           __CFG_CCP2MX$RC1 000000                                _cdc_mem_type 0090  
                  __end_of_SPI_Exchange8bit 355E                     __end_of_USBDeviceAttach 3948  
                                    _ADCON0 000FC2                                      _ADCON1 000FC1  
                                    _ADCON2 000FC0                            _CDCDataOutHandle 0078  
                         _getsUSBUSART$5738 00D3                                      _ACTCON 000FB5  
                                    STR_100 7CA6                                      STR_101 7FF5  
                                    STR_110 7FF5                                      STR_102 7FF5  
                                    STR_111 7FF5                                      STR_103 7FF5  
                                    STR_120 7FF5                                      STR_112 7FF5  
                                    STR_104 7FF5                                      STR_200 7AEE  
                                    STR_121 7FF5                                      STR_113 7FF5  
                                    STR_105 7FF7                                      STR_201 7ADD  
                                    STR_202 7BFC                                      STR_130 7FF5  
                                    STR_122 7FF5                                      STR_106 7C79  
                                    STR_114 7FF7                                      STR_210 7E4F  
                                    _ADRESH 000FC4                                      STR_131 7FF5  
                                    STR_115 7C88                                      STR_107 7C88  
                                    STR_123 7FF7                                      STR_211 7FF2  
                                    STR_203 7B98                                      STR_140 7FF5  
                                    STR_124 7C97                                      STR_116 7C97  
                                    STR_108 7C97                                      STR_132 7FF7  
                                    STR_212 7FE1                                      STR_204 7D74  
                                    STR_220 7C2C                                      STR_221 7AFF  
                                    STR_133 7CA6                                      STR_125 7CA6  
                                    STR_117 7CA6                                      STR_109 7CA6  
                                    STR_141 7FF7                                      STR_213 7B21  
                                    STR_205 7A86                                      STR_230 7E60  
                                    STR_206 7D3C                                      STR_222 7B32  
                                    STR_142 7CB5                                      STR_134 7CB5  
                                    STR_126 7CB5                                      STR_150 7FF7  
                                    STR_118 7CB5                                      STR_214 7AAA  
                                    _ADRESL 000FC3                                      STR_231 7C59  
                                    STR_223 7BFC                                      STR_207 7E67  
                                    STR_119 7FF5                                      STR_151 7CC4  
                                    STR_143 7CC4                                      STR_135 7CC4  
                                    STR_215 7FE8                                      STR_127 7CC4  
                                    STR_240 7BDC                                      STR_232 7AEE  
                                    STR_128 7FF5                                      STR_160 7CD3  
                                    STR_152 7CD3                                      STR_144 7CD3  
                                    STR_208 7E5B                                      STR_136 7CD3  
                                    STR_216 7B76                                      STR_224 7B43  
                                    STR_233 7ADD                                      STR_241 7BFC  
                                    STR_209 7D81                                      STR_137 7FF5  
                                    STR_129 7FF5                                      STR_161 7CE2  
                                    STR_153 7CE2                                      STR_217 7FDA  
                                    STR_145 7CE2                                      STR_225 7C5B  
                                    STR_170 7C4C                                      STR_234 7BFC  
                                    STR_146 7FF5                                      STR_138 7FF5  
                                    STR_162 7CF1                                      STR_250 7DDC  
                                    STR_242 7D00                                      STR_154 7CF1  
                                    STR_226 7C6A                                      STR_218 7A98  
                                    STR_227 7BFC                                      STR_155 7FF5  
                                    STR_147 7FF5                                      STR_139 7FF5  
                                    STR_171 7C79                                      STR_219 7FD3  
                                    STR_251 7DE9                                      STR_163 7C4C  
                                    STR_243 7C1C                                      STR_235 7B87  
                                    STR_180 7FF5                                      STR_172 7FF5  
                                    STR_164 7FF5                                      STR_156 7FF5  
                                    STR_148 7FF5                                      STR_252 7F48  
                                    STR_260 7E37                                      STR_244 7D8E  
                                    STR_236 7C0C                                      STR_228 7BCB  
                                    STR_237 7C6A                                      STR_181 7FF5  
                                    STR_173 7FF5                                      STR_165 7FF5  
                                    STR_157 7FF5                                      STR_149 7FF5  
                                    STR_229 7EF1                                      STR_245 7D9B  
                                    _EEDATA 000FA8                                      STR_238 7C5B  
                                    STR_190 7FF5                                      STR_182 7FF5  
                                    STR_174 7FF5                                      STR_166 7FF5  
                                    STR_158 7FF5                                      STR_246 7DA8  
                                    STR_254 7A3E                                      STR_191 7ACC  
                                    STR_239 7BEC                                      STR_183 7FF7  
                                    STR_175 7FF7                                      STR_167 7FF7  
                                    STR_159 7FF7                                      STR_247 7DB5  
                                    STR_255 7A58                                      STR_184 7C4C  
                                    STR_192 7ABB                                      STR_168 7CE2  
                                    STR_176 7CF1                                      STR_248 7DC2  
                                    STR_256 7A0A                                      STR_177 7C4C  
                                    STR_193 7BFC                                      STR_185 7C79  
                                    STR_169 7CF1                                      STR_249 7DCF  
                                    STR_257 7A24                                      STR_194 7C59  
                                    STR_178 7C79                                      STR_186 7C88  
                                    STR_258 7F2D                                      STR_195 7FF5  
                                    STR_179 7C88                                      STR_187 7C97  
                                    STR_259 7F87                                      STR_196 7FF5  
                                    STR_188 7FF5                                      STR_197 7C59  
                                    STR_189 7FF5                                      STR_198 7C59  
                                    STR_199 7C59                                      _EECON2 000FA7  
                                    ?_unhex 002E           __size_of_MOTEapp_getModemResponse 004A  
                           getsUSBUSART@len 00D1                                      _T1GCON 000FCC  
                      oled_putUint8@numData 00DD                   ?_MOTEapp_getModemResponse 002E  
                     __size_of_CDCTxService 0100                                      i2l1112 1076  
                                    i2l1104 104A                                      i2l1106 105A  
                                    i2l1108 1066                                      i2l1063 379E  
                                    i2l1702 595E                                      i2l1712 43EC  
                                    i2l1705 59AA                                      i2l1810 5F42  
                                    i2l1802 5EC8                                      i2l1707 59AE  
                                    i2l1715 444E                                      i2l1716 43F6  
                                    i2l1717 43FA                                      i2l1725 3B60  
                                    i2l1575 56EA                                      i2l1752 3D60  
                                    i2l1649 5470                                      i2l1585 5766  
                                    i2l2298 426E                                      i2l1762 4F9A  
                                    i2l1754 3DA4                                      i2l1586 57BC  
                                    i2l1587 576C                                      i2l1792 5DE2  
                                    i2l1776 48D4                                      i2l6201 464A  
                                    i2l1785 4904                                      i2l1869 45AA  
                                    i2l7111 5B66                                      i2l6215 39E4  
                                    i2l6401 45D4                                      i2l6233 485A  
                                    i2l7041 5414                                      i2l7115 5B80  
                                    i2l6219 39F2                                      i2l6227 483A  
                                    i2l7125 5BDC                                      i2l6245 48AE  
                                    i2l7141 48DE                                      i2l7045 541A  
                                    i2l6511 4222                                      i2l6503 4EF2  
                                    i2l6407 45DA                                      i2l6513 422E  
                                    i2l7153 48EE                                      i2l7057 5484  
                                    i2l7065 5492                                      i2l6523 4260  
                                    i2l6515 4232                                      i2l7163 4914  
                                    i2l7093 5AF6                                      i2l6373 4580  
                                    i2l6533 3834                                      i2l6471 4E50  
                                    i2l6359 3A5E                                      i2l6439 3C2C  
                                    i2l7167 4926                                      i2l7089 5AEA  
                                    i2l6369 4574                                      i2l6801 4440  
                                    i2l6529 3824                                      i2l6705 46C0  
                                    i2l6475 4E58                                      i2l7099 5B10  
                                    i2l6395 45C2                                      i2l6387 459E  
                                    i2l6379 458A                                      i2l9131 3B5E  
                                    i2l9107 36E0                                      i2l6485 4E80  
                                    i2l6493 4EB6                                      i2l6709 46D4  
                                    i2l9109 36E2                                      i2l6495 4EBC  
                                    i2l6751 4A90                                      i2l9151 4BA2  
                                    i2l9215 51E2                                      i2l6729 4A36  
                                    i2l6843 5E6C                                      i2l6835 5E3C  
                                    i2l6819 5DE4                                      i2l6771 5962  
                                    i2l6763 58E0                                      i2l6677 4DBE  
                                    i2l6861 5EE0                                      i2l6845 5E6E  
                                    i2l9165 4C00                                      i2l6871 5F22  
                                    i2l6759 58D0                                      i2l6791 440C  
                                    i2l9191 51C4                                      i2l7761 4F26  
                                    i2l6881 5F54                                      i2l6873 5F2E  
                                    i2l6849 5E7E                                      i2l9185 519A  
                                    i2l9601 572C                                      i2l6859 5EB6  
                                    i2l6779 59B2                                      i2l9611 573E  
                                    i2l9533 379A                                      i2l7773 4F62  
                                    i2l9605 5734                                      i2l6887 5F8C  
                                    i2l9199 51CE                                      i2l6889 5F98  
                                    i2l9547 3776                                      i2l9539 375C  
                                    i2l7787 4FC0                                      i2l7779 4F80  
                                    i2l9619 575A                                      i2l7789 4FC2  
                                    i2l9645 57A0                                      i2l9581 56FC  
                                    i2l9725 1072                                      i2l9647 57B4  
                                    i2l9639 578A                                      i2l9567 56E2  
                                    i2l9559 56D6                                      i2l9595 5724  
                                    i2l9589 5708                                   ??_EndLine 00C9  
                                    _OSCCON 000FD3                               CDCTxService@i 00D1  
                                    _SPBRGH 000FB0                                      _SSPBUF 000FC9  
                  i2USBTransferOnePacket@ep 0032                           ??i2_USBDeviceInit 0036  
           __size_ofi2_USBTransferOnePacket 009E                        ?i2_EUSART_Initialize 002E  
                      oled_displayOff@state 00CA                               oled_putChar@k 00D3  
                         _shortPacketStatus 002B              moteRunningProcess@changeStates 00F2  
                            __CFG_XINST$OFF 000000                        _moteApp_clearBuffers 3BA2  
                           USBDeviceTasks@i 004E                  __end_of_Set_Column_Address 3688  
               USBStdFeatureReqHandler@pUEP 0045                            __end_of_hexToStr 3752  
                  USBTransferOnePacket@data 00C9                  USBCtrlTrfInHandler@lastDTS 003F  
                           ??_USBDeviceInit 00D0                   __size_of_Set_Page_Address 0014  
                   __end_of_TMR1_StartTimer 34AC                                ?_putUSBUSART 00C8  
                                 ??___lbdiv 00C9                              __CFG_STVREN$ON 000000  
                    modemResync@escapeEvent 00CF                                   ??___lbmod 00C9  
                                 ??___lldiv 0036                        __end_of_getsUSBUSART 4796  
                                 ??___lwdiv 00CC                                   ??___lwmod 00CC  
                         _USBEnableEndpoint 39D6             __size_of_USBStdGetStatusHandler 007E  
                       _EUSART_Transmit_ISR 377A                                      _memset 3844  
                                    clear_0 3FB8                                      clear_1 3FC4  
                                    clear_2 3FD0                                      clear_3 3FDC  
                        ?_USBEnableEndpoint 0036              ??_USART_mySetLineCodingHandler 003B  
                   __end_of_DATAEE_ReadByte 35A8                                      _strcmp 44E4  
                __end_of_ADC_TempConversion 370A               __size_of_USBTransferOnePacket 00A0  
                          ?_sendDataCommand 00C9                             _moteApp_delayms 37A2  
               __size_of_service_pushbutton 004C                                _CDCTxService 57C0  
                              __mediumconst 7640                            __end_of_test_adc 4D7A  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                         ??_USBEnableEndpoint 0037  
                  ADC_GetConversion@channel 00CC                                      unhex@c 00C8  
                                 ?_CMP1_ISR 002E                     __end_of_TMR2_StartTimer 34B0  
                               _CtrlTrfData 000438              __size_of_MOTEapp_WriteDataRate 00EE  
                                 ??_strncmp 00CE                            ___lbdiv@dividend 00C9  
                             ?_oled_devInit 002E                        ?_EUSART_Transmit_ISR 002E  
             __end_of_MOTEapp_WriteDataRate 55CE                        _controlTransferState 0021  
                            _MOTEapp_SetADR 34DA                        _USBapp_getrxByteFlag 34B0  
                          ?_TMR1_Initialize 002E                        __CFG_LS48MHZ$SYS48X8 000000  
                      __size_of_EUSART_Read 002E                           _SYSTEM_Initialize 36A6  
              __size_of_USBapp_handlerState 0008                             ___lbmod@divisor 00C8  
                                __accesstop 0060                     __end_of__initialization 4002  
                    ??_USBapp_setrxByteFlag 002E                             ___lbmod@counter 00CA  
                           __CFG_PBADEN$OFF 000000                                ?_test_switch 002E  
                     ??i2_EUSART_Initialize 002E                             _CMP1_Initialize 355E  
                        ?_SYSTEM_Initialize 002E                          oled_writeData@data 00C9  
                             ___rparam_used 000001                               ?_oled_setFont 00C8  
                  __size_of_USBStallHandler 003E                               ?_oled_putChar 00CB  
                     ?_moteApp_clearBuffers 002E                         __size_of_USBSuspend 001E  
               __size_of_EUSART_FlushBuffer 002C                              __pcstackCOMRAM 002E  
                 __end_of_USBEnableEndpoint 3A0C                            __CFG_nPWRTEN$OFF 000000  
                             __end_of_sd000 7A0A                               __end_of_sd001 79C0  
                             __end_of_sd002 79F4                                __pidataBANK0 34B9  
                       ??_SYSTEM_Initialize 00CA                   oled_putUint16@station_dot 00DC  
                                 ?_TMR1_ISR 002E            __size_of_USBCtrlEPAllowDataStage 008E  
                          _DATAEE_WriteByte 3AB2               __size_of_USBConfigureEndpoint 0088  
                             __end_of_unhex 381A                 __end_of_USBCtrlTrfInHandler 4FC6  
                          ?_TMR2_Initialize 002E                            ___lbdiv@quotient 00CB  
                    i2_USBTransferOnePacket 482A                             __CFG_PCLKEN$OFF 000000  
                            __CFG_nLPBOR$ON 000000                           __end_of_OledFont0 7949  
                         _CDCTxService$5786 00CF                                  _cdc_notice 00AA  
                                 ?i2_memset 002E                                  _cdc_rx_len 0091  
                                _cdc_tx_len 0092                                  ??_CMP1_ISR 002E  
                           _responsePortNum 00C3                    ??_USBCtrlTrfSetupHandler 004B  
                    __end_of_MOTEapp_SetADR 34E2                                  _dataBuffer 009E  
                            ??_oled_devInit 00CA                            ?_USBDeviceAttach 002E  
                 __end_of_SYSTEM_Initialize 36C6                       ??_EUSART_Transmit_ISR 002E  
                    _USBStdGetStatusHandler 43E4                                     ??_unhex 00C8  
                     ?_USBapp_getrxByteFlag 002E                        service_pushbutton@bs 00C8  
                          ??_oled_putUint16 00DE                                  __pbssBANK0 0060  
                                __pbssBANK1 0100                                  __pbssBANK2 0200  
                      __end_of_EUSART_Write 39D6                     __size_of_TMR2_ReadTimer 0008  
                          ??_oled_putString 00D9                              ??_oled_setFont 00CA  
               __size_of_EUSART_Receive_ISR 0028                         oled_putString@index 00D9  
                            ??_oled_putChar 00CD                 __size_of_USBWakeFromSuspend 0022  
                               _pBDTEntryIn 000F                      __size_of_oled_clearRow 001E  
                      __size_of_modemResync 0064                    sendDataCommand@byteCount 00CE  
          __end_of_USBCtrlEPServiceComplete 54E0            __end_of_MOTEapp_setResponseReady 34A4  
                    oled_putChar@start_page 00CC                 __size_of_USBCheckCDCRequest 0088  
                         __CFG_PLLSEL$PLL3X 000000                          __size_of_oled_init 0022  
                          ??_oled_writeData 00C9                        USBCtrlTrfRxService@i 003F  
                              ?_TMRapp_Tick 002E                            ?_TMR1_StartTimer 002E  
                                ??_TMR1_ISR 002E                    oled_putUint16@start_page 00DD  
                   __end_of_moteApp_delayms 37CA                                     _CM1CON0 000F98  
        MOTEapp_getModemResponse@bufferByte 00CA                 __end_of_MOTEapp_SetDataRate 34EA  
                   __size_of_USBapp_Handler 0076                     __size_of_TMRapp_Handler 00DE  
              moteRunningProcess@dummyRead1 00ED                moteRunningProcess@dummyRead2 00EE  
                                   _BAUDCON 000FB8                                     ?_memset 00C8  
                                _device_dsc 79F4                   Set_Column_Address@address 00CA  
                  __size_of_oled_displayOff 0012                            _USBCtrlEPService 4B5C  
               __size_of_moteApp_toggleLeds 0068                                  _ep_data_in 006A  
                   __size_of_ADC_Initialize 0016                                     ?_strcmp 00C8  
                          ?_DATAEE_ReadByte 002E                 __end_of_USBCtrlTrfRxService 5BE8  
                      __size_of_sendCommand 002A                          _USBCheckStdRequest 48C8  
                             _eusartRxCount 0023                           _configDescriptor1 7949  
                                   i2l12345 3C40                                     i2l12347 3C72  
                                   _RS232cp 001C                             __CFG_WDTEN$SWON 000000  
                        __size_of_test_leds 0054                                  ??i2_memset 0034  
                        __size_of_test_oled 0078                 __end_of_USBCtrlTrfTxService 4EF8  
                      __size_of_moteHandler 01E0                         _USBStdSetCfgHandler 4A06  
                                   _OSCCON2 000FD2                                     _OSCTUNE 000F9B  
                    __size_of_oled_putUint8 005A                                     _SSP1ADD 000FC8  
                           ?_MOTEapp_SetADR 002E                     __end_of_CMP1_Initialize 3570  
                       ?_USBCheckStdRequest 002E                            ?_TMR2_StartTimer 002E  
              __size_of_USBStdGetDscHandler 0102                                     _UIEbits 000F64  
                                 ?_hexToStr 002E                                     _UIRbits 000F65  
                    test_switch@buttonCheck 00DC             moteRunningProcess@bufferReadPos 00F1  
                          ??_SPI_Initialize 00C8                                     _EndLine 3516  
                             _cdc_trf_state 0020                        DATAEE_WriteByte@bAdd 00C9  
                __end_of_moteRunningProcess 7640                      ??_moteApp_clearBuffers 00C8  
                ?_moteApp_add8bToDataBuffer 00CC                                     _pCDCDst 0070  
                                   _pCDCSrc 0073                       __size_of_getsUSBUSART 0090  
                                   __Hparam 0000                        ?_USBStdSetCfgHandler 002E  
                                 _CDCInitEP 3DA8                     ?_MOTEapp_TimerBasedTask 002E  
                                   __Lparam 0000                    moteRunningProcess@i_1410 00EC  
                __size_of_USBEnableEndpoint 0036                         moteHandler@s2Button 01DC  
                          _Set_Page_Address 35A8                                   ?_test_adc 002E  
                      ??_USBCheckStdRequest 004A                moteRunningProcess@sleepEvent 00E6  
                         _timerMinTickCount 0082               __size_of_USBCtrlTrfOutHandler 0052  
               __size_of_moteJoiningProcess 0510                                     ___lbdiv 3A0C  
                                   ___lbmod 37CA                                     ___lldiv 420A  
                          ??_USBDeviceTasks 004E                                     ___lwdiv 3C76  
                         ??_USBStallHandler 002E                                     ___lwmod 3B64  
                      __size_of_putUSBUSART 001C                                     __pcinit 3FB2  
                        getsUSBUSART@buffer 00CF                             __size_of_memset 002A  
                 __end_of_configDescriptor1 798C                                     __ramtop 0800  
                         hexToStr@character 00C8            __end_of_MOTEapp_getModemResponse 3D0A  
                                   __ptext0 4FC6                                     __ptext1 3A7A  
                                   __ptext2 4AAE                                     __ptext3 436C  
                                   __ptext4 3E4E                                     __ptext5 3EA2  
                                   __ptext6 41A2                                     __ptext7 4CC4  
                                   __ptext8 5BE8                                     __ptext9 3D0A  
                  __size_of_oled_setDisplay 0014                                     _inPipes 0009  
               _USBDeferOUTDataStagePackets 0089                             __size_of_strcmp 0084  
                 moteRunningProcess@counter 00EF                            oled_setFont@font 00C8  
                                 _T1CONbits 000FCD                       _OSCILLATOR_Initialize 35E6  
                              ??_USBSuspend 0043                               _oled_clearRow 3688  
                                 _T2CONbits 000FBA                                  _modemSleep 3630  
           moteApp_add8bToDataBuffer@number 00CD                                  _oled_clear 35FC  
                  ??_PIN_MANAGER_Initialize 00C8                __end_of_TMRapp_ClearBitFlags 34B8  
                              _LastRS232Out 0019                             i2_USBDeviceInit 516E  
                          i2USBDeviceInit@i 0036                           __end_of_oled_init 372C  
                         ?_SPI_Exchange8bit 002E                __end_of_MOTEapp_handlerState 34D2  
                    ??_USBapp_getrxByteFlag 00C8                          __end_of_USB_CD_Ptr 7649  
                __size_of_SYSTEM_Initialize 0020             __size_of_USBCtrlTrfSetupHandler 005E  
                                ??_hexToStr 00C8                                     _strncmp 413A  
                      end_of_initialization 4002                                _getsUSBUSART 4706  
             sendDataCommand@byteCount_1637 00CF                          ??_SPI_Exchange8bit 00C8  
                      SPI_Exchange8bit@data 00C8                          __end_of_USB_SD_Ptr 7647  
                       _pBDTEntryEP0OutNext 0017                                     memset@c 00CA  
                                   memset@n 00CC                                     memset@p 00CE  
                             __Lmediumconst 7640             _dummy_encapsulated_cmd_response 01D0  
                  ?_USBStdFeatureReqHandler 002E              __end_of_MOTEapp_TimerBasedTask 353E  
                         _EUSART_Initialize 38C4                                  _rxByteFlag 002A  
                     ??_USBStdSetCfgHandler 0043                             ___lldiv@divisor 0032  
                      __size_of_test_switch 00AE                                  ?_CDCInitEP 002E  
                           ___lldiv@counter 003A                           __end_of_test_leds 3EA2  
                         __end_of_test_oled 43E4                          ?_EUSART_Initialize 002E  
                             _oled_putUint8 3EFA                          __end_of_USBSuspend 366A  
            ??_USBapp_CdcEmulatorInitialize 003A                     _USBCtrlEPAllowDataStage 4678  
                                 _RCSTAbits 000FAB                                  ??_test_adc 00E4  
                        test_switch@timeout 00DA                                     postdec1 000FE5  
                                   postdec2 000FDD                                     postinc0 000FEE  
                                   postinc2 000FDE                        __end_of_oled_devInit 531E  
                  _USBCtrlEPServiceComplete 53FC                     moteApp_toggleLeds@state 00CD  
                                _responseId 01C0                            ?_moteApp_delayms 00C8  
                             _randomPortNum 0097                    _MOTEapp_setResponseReady 34A2  
                _USBStatusStageEnabledFlag1 008B                  _USBStatusStageEnabledFlag2 008C  
                       _USBapp_handlerState 34D2                         ??_EUSART_Initialize 00C8  
                        USBEnableEndpoint@p 0037                                   _PORTAbits 000F80  
                                 _PORTCbits 000F82                     oled_putUint8@start_page 00DB  
                            ?_oled_clearRow 002E                                  _test_comms 3EA2  
                      __end_of_oled_setFont 3594                          _Set_Column_Address 366A  
                      __end_of_oled_putChar 42F6                            ___lbmod@dividend 00C9  
                                 _TRISAbits 000F92                                   _TRISBbits 000F93  
                                 _TRISCbits 000F94                           ??_oled_displayOff 00CA  
                     __size_of_EUSART_Write 0034                          _BothEP0OutUOWNsSet 0086  
                             ?_test_powerup 002E                            ?_CMP1_Initialize 002E  
                 USBConfigureEndpoint@EPNum 0033                  ?_USBCtrlEPAllowStatusStage 002E  
                  __end_of_DATAEE_WriteByte 3AEC                         ?_Set_Column_Address 002E  
            moteRunningProcess@counter_1556 00F0         USER_USB_CALLBACK_EVENT_HANDLER@size 003F  
                            _TMR2_ReadTimer 34EA                                   _USTATcopy 002D  
                         __size_of_CMP1_ISR 0004                        ?_USBapp_handlerState 002E  
                        _ADC_TempConversion 36E8                    oled_putString@start_page 00D8  
                               ___lbmod@rem 00CB                   __end_of_EUSART_Initialize 38F0  
              __end_of_USBTransferOnePacket 4A06                                 _CM2CON1bits 000F9A  
                                 _TXSTAbits 000FAC                             moteHandler@Traw 01DA  
                            ?_oled_putUint8 00DA                           putUSBUSART@length 00CA  
                       ?_ADC_TempConversion 002E                      _USBCtrlTrfSetupHandler 3F54  
                      ??_Set_Column_Address 00CA                     ?i2_USBTransferOnePacket 002E  
                     __end_of_USBDeviceInit 516E                              _TMRapp_Handler 531E  
                            _USBapp_Handler 42F6                        __size_of_TMRapp_Tick 0006  
              ??_moteApp_add16bToDataBuffer 00D2                                _EUSART_Write 39A2  
                     sendDataCommand@string 00C9                     __end_ofi2_USBDeviceInit 5246  
                         __size_of_TMR1_ISR 000C                  __end_of_service_pushbutton 3D56  
                            _ADC_Initialize 35D0                 moteApp_clearBuffers@counter 00C8  
                   moteApp_GoToSleep@status 00D7                                   i2memset@c 0030  
                                 i2memset@n 0032                                   i2memset@p 0034  
                    ?_OSCILLATOR_Initialize 002E                              __end_of_memset 386E  
                         _USBBusIsSuspended 0087                    oled_writeCommand@command 00C9  
                               ?_modemSleep 002E                              __end_of_strcmp 4568  
                               ?_oled_clear 002E                         start_initialization 3FB2  
                      ??_ADC_TempConversion 00CF                     ?_USBStdGetStatusHandler 002E  
             USBCtrlTrfRxService@byteToRead 0040                              ??_test_powerup 00EA  
                  _MOTEapp_getModemResponse 3CC0             __size_of_PIN_MANAGER_Initialize 0046  
                         ??_oled_setDisplay 00CA                               ??_EUSART_Read 00C8  
                    __end_of_TMR2_ReadTimer 34F2                                 _cdc_data_rx 000540  
                               _cdc_data_tx 000500                 __end_ofi2_EUSART_Initialize 38C4  
                         __size_ofi2_memset 002A                                   _OledFont0 7649  
              __end_of_USBConfigureEndpoint 4678             __end_of_USBStdFeatureReqHandler 5FBC  
                  __size_of_sendDataCommand 0094                       ??_USBapp_handlerState 00C8  
         __end_of_USBCtrlEPAllowStatusStage 4E36                               _periodicState 00F9  
                  __end_of_USBCtrlEPService 4C0E                       _MOTEapp_WriteDataRate 54E0  
      __end_of_USART_mySetLineCodingHandler 3E4E       __size_of_USART_mySetLineCodingHandler 0054  
              _USART_mySetLineCodingHandler 3DFA                  __end_of_EUSART_FlushBuffer 3974  
                       DATAEE_ReadByte@bAdd 00C8               __size_of_USBapp_setrxByteFlag 0006  
       __size_of_moteApp_add16bToDataBuffer 010A                   ??_USBCtrlEPAllowDataStage 002F  
                               ??_CDCInitEP 003A                              USBDeviceInit@i 00D0  
                    _pBDTEntryEP0OutCurrent 0015                    __size_of_TMR1_Initialize 002C  
                   USBTransferOnePacket@dir 00C8                     USBTransferOnePacket@len 00CB  
                    __end_of_USBapp_Handler 436C                      __end_of_TMRapp_Handler 53FC  
            __end_ofi2_USBTransferOnePacket 48C8                        _TMRapp_ClearBitFlags 34B4  
                       _USBStdGetDscHandler 58C0                        _MOTEapp_handlerState 34CA  
                    __end_of_ADC_Initialize 35E6                                 __pdataBANK0 00F5  
                                  ??_memset 00CE                             ??_oled_clearRow 00D5  
MOTEapp_getModemResponse@terminatorReceived 00C9             MOTEapp_TimerBasedTask@timerTask 00C8  
                                  ??_strcmp 00CC                                 ?_test_comms 002E  
                 oled_putString@station_dot 00D7                      _USBActiveConfiguration 002C  
            __end_of_USBStdGetStatusHandler 4462                            ??_MOTEapp_SetADR 00C8  
               __end_of_EUSART_Transmit_ISR 37A2                                 __pbssCOMRAM 0001  
                service_pushbutton@PB_Timer 0066                               __pcstackBANK0 00C8  
                             __pcstackBANK1 01D8                __size_of_USBCtrlTrfInHandler 00CE  
                  __size_of_TMR2_Initialize 0010                    __end_of_Set_Page_Address 35BC  
                           ?_TMR2_ReadTimer 002E                                 _activeState 008D  
                      ?_USBStdGetDscHandler 002E                   ADC_TempConversion@tempRaw 00CF  
                __end_of_EUSART_Receive_ISR 377A              moteRunningProcess@messageReady 00E5  
                                  ?_EndLine 002E                                   _adrStatus 008E  
                __end_of_USBWakeFromSuspend 36E8                               ??_modemResync 00CD  
                __size_of_EUSART_Initialize 002C                           __size_of_hexToStr 0026  
                           _USBStallHandler 3B26                                _pBDTEntryOut 0060  
                       __end_of_EUSART_Read 39A2                  __end_of_USBCheckCDCRequest 45F0  
                           ??_oled_putUint8 00DC                        oled_putString@string 00D5  
                  __size_of_USBDeviceAttach 002C                 ??_moteApp_add8bToDataBuffer 00CD  
                         _oled_writeCommand 34FE                       __size_of_oled_devInit 00D8  
                   oled_putChar@station_dot 00CB                         __size_of_modemSleep 001C  
                          ___lwdiv@dividend 00C8                      _PIN_MANAGER_Initialize 3BE6  
                       __size_of_oled_clear 0018                       ?_TMRapp_ClearBitFlags 002E  
                      EUSART_Read@readValue 00C8                             ?_TMRapp_Handler 002E  
                           ?_USBapp_Handler 002E                                   __pintcode 1008  
                        ?_oled_writeCommand 002E                               __pmediumconst 7640  
             moteJoiningProcess@switchEvent 00DA                       ?_MOTEapp_handlerState 002E  
                                 __ptext100 58C0                                   __ptext101 5DC8  
                                  ?___lbdiv 00C8                                   __ptext110 5ACC  
                                 __ptext102 3C2C                                   __ptext111 4D7A  
                                 __ptext103 3A42                                   __ptext120 3752  
                                 __ptext112 4EF8                                   __ptext104 3DA8  
                                 __ptext121 34A4                                   __ptext113 4E36  
                                 __ptext105 482A                                   __ptext122 0000  
                                 __ptext114 3DFA                                   __ptext106 39D6  
                                 __ptext115 3898                                   __ptext107 45F0  
                                 __ptext116 420A                                   __ptext108 4568  
                                 __ptext117 34BE                                   __ptext109 3D56  
                                 __ptext118 34F2                                   __ptext119 377A  
                                  ?___lbmod 00C8                  __end_of_moteApp_toggleLeds 420A  
                                  ?___lldiv 002E                                    ?___lwdiv 00C8  
                                  ?___lwmod 00C8                             ?_ADC_Initialize 002E  
                     __size_of_oled_setFont 0012                                _eusartRxHead 0024  
                             ??_sendCommand 00CB                                _eusartTxHead 0027  
                              _eusartRxTail 0025                                _eusartTxTail 0028  
                         __size_of_test_adc 00B6                       __size_of_oled_putChar 0076  
                        _moteRunningProcess 64CC                ??_INTERRUPT_InterruptManager 004F  
                          ?i2_USBDeviceInit 002E                      moteHandler@readMessage 01E0  
                       ??_oled_writeCommand 00C9                               ??_moteHandler 00F3  
                   _eusartTxBufferRemaining 0026                        _USBTransferOnePacket 4966  
                              moteHandler@i 01DE            moteApp_add16bToDataBuffer@number 00CF  
                  __size_of_TMR1_StartTimer 0004                      moteHandler@buttonPress 01DD  
              __size_of_MOTEapp_SetDataRate 0008                         ?_moteRunningProcess 00E4  
              __end_of_USBCtrlTrfOutHandler 3DA8                       ??_USBStdGetDscHandler 002E  
                                  _CMP1_ISR 34A4                                 _ep_data_out 006D  
                          ___lwdiv@quotient 00CD                __size_of_USBCtrlTrfRxService 011C  
                                 _secTicker 0099               USBConfigureEndpoint@direction 002E  
                  __size_of_DATAEE_ReadByte 0014                                    ?_strncmp 00C8  
                            __size_of_unhex 0028                                _oled_devInit 5246  
                    ?_MOTEapp_WriteDataRate 002E                              _eusartRxBuffer 0100  
                         _dataRateSelection 00F7                            _timerMsTickCount 0084  
                                 _oled_init 370A                __size_of_USBCtrlTrfTxService 00C2  
                            _eusartTxBuffer 0200                                    _LATAbits 000F89  
                                  _IOCCbits 000F87                   __end_of_oled_writeCommand 350A  
                                  _LATBbits 000F8A                                    _LATCbits 000F8B  
                ??_USBCtrlEPServiceComplete 002F                  ??_MOTEapp_setResponseReady 00C8  
                                  _PIE1bits 000F9D                                    _IPR3bits 000FA5  
                                  _PIE2bits 000FA0                                    _PIE3bits 000FA3  
                       __size_of_test_comms 0058                    __size_of_TMR2_StartTimer 0004  
                              _oled_setFont 3582                                   _moteState 00F8  
                         ??_sendDataCommand 00CD                               _operationType 0095  
                      ??_moteRunningProcess 00E7                  __end_of_moteJoiningProcess 64CC  
       __size_of_INTERRUPT_InterruptManager 00A2                                _oled_putChar 4280  
                                  i2u421_40 4EE4                                    i2u421_47 4EDA  
                                  _PIR1bits 000F9E                                    i2u419_40 4EA8  
                                  _PIR2bits 000FA1                                    i2u419_47 4E9E  
             __size_of_moteApp_clearBuffers 0044                                    i2u444_40 592C  
                                  i2u444_47 5922                                    i2u445_40 595A  
                                  _PIR3bits 000FA4                                    i2u445_47 5950  
                                  i2u447_40 59A4                                    i2u447_47 599A  
                                  i2u565_48 4FAC                   USBCtrlEPService@setup_cnt 004D  
                 __size_of_SPI_Exchange8bit 0010                                    i2u499_48 5BC8  
                       __end_of_modemResync 40D4                                    _RCONbits 000FD0  
                      __end_of_test_powerup 3AB2                     __size_of_oled_putUint16 00F4  
                             ??_putUSBUSART 00CB                            __CFG_WDTPS$32768 000000  
                                  _UEP0bits 000F6A                  _USBDeferINDataStagePackets 0088  
                                  _SSP1CON1 000FC6          __end_of_moteApp_add16bToDataBuffer 5ACC  
                _moteApp_add16bToDataBuffer 59C2                 __size_of_USBCheckStdRequest 009E  
                                  _TMR1_ISR 34F2                     __size_of_oled_putString 0066  
                                  _SSP1STAT 000FC7                                    _UCONbits 000F60  
                           _oled_displayOff 3570                                   _test_leds 3E4E  
                                  _VREFCON0 000F7D              moteRunningProcess@selectButton 00E4  
                      _USBConfigureEndpoint 45F0                                   _test_oled 436C  
          __size_of_USBStdFeatureReqHandler 01F4                           ??_TMR1_Initialize 00C8  
                                _ADCON0bits 000FC2                     Set_Page_Address@address 00CA  
                     ?_USBTransferOnePacket 00C8                      ADC_TempConversion@temp 00D0  
                 _moteApp_add8bToDataBuffer 4010                     __size_of_oled_writeData 000C  
                             ?_CDCTxService 002E                    moteHandler@gotoNextState 01D9  
                              _RemoteWakeup 001D                         __end_of_sendCommand 3898  
                                  i2_memset 381A                           __CFG_CFGPLLEN$OFF 000000  
                     DATAEE_WriteByte@bData 00C8                          _RS232_Out_Data_Rdy 001B  
                   __end_of_USBStallHandler 3B64                         __end_of_moteHandler 5DC8  
                               _EUSART_Read 3974                           _moteApp_GoToSleep 4462  
                                 copy_data0 3FF6                 ??_USBCtrlEPAllowStatusStage 002E  
               __end_of_USBStdSetCfgHandler 4AAE                           ?_DATAEE_WriteByte 00C8  
             __size_of_USBapp_getrxByteFlag 0004                          ?_moteApp_GoToSleep 002E  
                                ?_oled_init 002E                           ??_TMR2_Initialize 00C8  
                             ??_test_switch 00DA                            __size_of_EndLine 000C  
                        ??_DATAEE_WriteByte 00C9                          __end_of_device_dsc 7A06  
                                _EECON1bits 000FA6                     ?_USBCtrlTrfSetupHandler 002E  
             USBapp_CdcEmulatorInitialize@i 003A                      ??_TMRapp_ClearBitFlags 00C8  
                   USBStdGetStatusHandler@p 002E                                    __Hrparam 0000  
                       ??_moteApp_GoToSleep 00D7                                    __Lrparam 0000  
                    USBTransferOnePacket@ep 00CC                      ??_MOTEapp_handlerState 00C8  
                         _ADC_GetConversion 3AEC                          __CFG_BOREN$SBORDIS 000000  
                                  _SetupPkt 000430                     __size_of_SPI_Initialize 000E  
                   ??_OSCILLATOR_Initialize 00C8                       ?_USBConfigureEndpoint 002E  
                        ?_ADC_GetConversion 00C8                           ??_USBDeviceAttach 00C8  
                                ?_test_leds 002E                            __size_of___lbdiv 0036  
                                ?_test_oled 002E                            __size_of___lbmod 0028  
                ??_MOTEapp_getModemResponse 00C9              moteJoiningProcess@readDataRate 00DB  
                              _selectedFont 00F5                            __size_of___lldiv 0076  
          moteApp_clearBuffers@counter_1700 00C9            moteApp_clearBuffers@counter_1701 00CA  
                           _oled_setDisplay 35BC                            __size_of___lwdiv 004A  
                          __size_of___lwmod 003E                   MOTEapp_handlerState@state 00C8  
                                _ANSELAbits 000F5B                         __end_of_putUSBUSART 3630  
                               _line_coding 00BC                                  _ANSELCbits 000F5D  
                            ??_CDCTxService 00CF                                ??_modemSleep 00CD  
                       ??_ADC_GetConversion 00CA                                ??_oled_clear 00D7  
                  modemResync@escapeCounter 00CD                    __size_of_moteApp_delayms 0028  
                 __end_of_moteApp_GoToSleep 44E4                     __size_of_USBDeviceTasks 00FE  
                           ___lwdiv@divisor 00CA                                    _appTimer 008F  
                           ___lwdiv@counter 00CC                                    __ptext10 64CC  
                                  __ptext11 37F2                                    __ptext20 59C2  
                                  __ptext12 4796                                    __ptext21 4462  
                                  __ptext13 372C                                    __ptext30 3948  
                                  __ptext22 370A                                    __ptext14 3EFA  
                                  __ptext31 34EA                                    __ptext23 3582  
                                  __ptext15 55CE                                    __ptext40 3516  
                                  __ptext32 36E8                                    __ptext24 35BC  
                                  __ptext16 3BA2                                    __ptext41 37A2  
                                  __ptext33 3C76                                    __ptext25 5246  
                                  __ptext17 4010                                    __ptext50 42F6  
                                  __ptext42 34E2                                    __ptext34 3AEC  
                                  __ptext26 3570                                    __ptext18 37CA  
                                  __ptext51 40D4                                    __ptext43 34DA  
                                  __ptext35 5FBC                                    __ptext27 3630  
                                  __ptext19 3A0C                                    __ptext60 4C0E  
                                  __ptext52 35FC                                    __ptext44 3AB2  
                                  __ptext36 413A                                    __ptext28 4070  
                                  __ptext61 3614                                    __ptext53 3688  
                                  __ptext45 531E                                    __ptext37 44E4  
                                  __ptext29 3CC0                                    __ptext70 3844  
                                  __ptext62 4706                                    __ptext54 4280  
                                  __ptext46 3B64                                    __ptext38 54E0  
                                  __ptext71 391C                                    __ptext63 34B0  
                                  __ptext55 350A                                    __ptext47 34B4  
                                  __ptext39 386E                                    __ptext80 38C4  
                                  __ptext72 36A6                                    __ptext64 34A2  
                                  __ptext56 35A8                                    __ptext48 3530  
                                  __ptext81 355E                                    __ptext73 353E  
                                  __ptext65 39A2                                    __ptext57 366A  
                                  __ptext49 34D2                                    __ptext90 364C  
                                  __ptext82 35D0                                    __ptext74 34AC  
                                  __ptext66 3974                                    __ptext58 34FE  
                                  __ptext91 3B26                                    __ptext83 34CA  
                                  __ptext75 38F0                                    __ptext67 57C0  
                                  __ptext59 354E                                    __ptext92 4B5C  
                                  __ptext84 3594                                    __ptext76 34A8  
                                  __ptext68 4966                                    __ptext93 3F54  
                                  __ptext77 3522                                    __ptext69 5098  
                                  __ptext94 53FC                                    __ptext86 34C4  
                                  __ptext78 3BE6                                    __ptext95 4678  
                                  __ptext87 56C2                                    __ptext79 35E6  
                                  __ptext96 48C8                                    __ptext88 516E  
                                  __ptext97 4A06                                    __ptext89 36C6  
                                  __ptext98 381A                                    __ptext99 43E4  
      __end_of_USBapp_CdcEmulatorInitialize 3A7A       __size_of_USBapp_CdcEmulatorInitialize 0038  
              _USBapp_CdcEmulatorInitialize 3A42                                _SSP1CON1bits 000FC6  
                                  _hexToStr 372C                          _service_pushbutton 3D0A  
                         ??_TMR1_StartTimer 00C8                 DATAEE_WriteByte@GIEBitValue 00CA  
                               _OSCCON2bits 000FD2                            __size_of_strncmp 0068  
                               _modemResync 4070              __end_of_USBCtrlTrfSetupHandler 3FB2  
                             __size_of_main 00D2                           ?_USBCtrlEPService 002E  
                __size_of_oled_writeCommand 000C                                  strncmp@len 00CC  
                       ?_service_pushbutton 002E                           ??_DATAEE_ReadByte 00C8  
                 __end_of_ADC_GetConversion 3B26                    __size_of_CMP1_Initialize 0012  
                   __end_of_oled_displayOff 3582                          ??_USBCtrlEPService 004B  
                       _USBCtrlTrfInHandler 4EF8                               ??_TMRapp_Tick 002E  
                        __end_of_modemSleep 364C                            _dataRatePosition 0093  
                        __end_of_oled_clear 3614                         __end_of_test_switch 4B5C  
                                  _outPipes 0001                                    _test_adc 4CC4  
                      _USBCtrlTrfOutHandler 3D56                                    int$flags 005B  
                                  _usbState 009C                   _USBCtrlEPAllowStatusStage 4D7A  
                                 test_adc@L 00E4                                   test_adc@T 00E8  
               __size_of_Set_Column_Address 001E                           ??_TMR2_StartTimer 00C8  
        __end_of_INTERRUPT_InterruptManager 10AA                  _INTERRUPT_InterruptManager 1008  
                              _SSP1STATbits 000FC7                                 _sendCommand 386E  
                    ??_USBTransferOnePacket 00CC                          oled_clearRow@index 00D6  
                        _EUSART_FlushBuffer 3948                                ??_test_comms 00DA  
              __end_of_USBapp_setrxByteFlag 34CA                                 _moteHandler 5BE8  
                          ??_TMR2_ReadTimer 00C8                        ??_service_pushbutton 00C8  
                 _USBDeferStatusStagePacket 001E                    CDCTxService@byte_to_send 00D2  
                                _INTCONbits 000FF2                 __end_of_USBapp_handlerState 34DA  
                      ?_USBCtrlTrfInHandler 002E                         ?_EUSART_FlushBuffer 002E  
               __size_of_ADC_TempConversion 0022               USBCtrlTrfTxService@byteToSend 002E  
                                  memset@p1 00C8                            ?_USBStallHandler 002E  
                  USBStdFeatureReqHandler@p 0048                           ?_Set_Page_Address 002E  
                  ??_MOTEapp_TimerBasedTask 00C8                                _responseData 00B4  
             ?_USBapp_CdcEmulatorInitialize 002E                                    intlevel2 0000  
                               ??_oled_init 00D7                          ??_Set_Page_Address 00CA  
                    __size_of_USBDeviceInit 00D6     __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3C76  
  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 004A           ??_USER_USB_CALLBACK_EVENT_HANDLER 0041  
          ?_USER_USB_CALLBACK_EVENT_HANDLER 003B             _USER_USB_CALLBACK_EVENT_HANDLER 3C2C  
            moteJoiningProcess@messageReady 00DD                            ___lwmod@dividend 00C8  
              i2USBTransferOnePacket@handle 0033                            ___lldiv@dividend 002E  
                   ?_PIN_MANAGER_Initialize 002E                            ??_USBapp_Handler 00DA  
                          ??_TMRapp_Handler 00CD                       __size_of_test_powerup 0038  
                      moteHandler@gotoSleep 01D8                __size_ofi2_EUSART_Initialize 002C  
                                 strncmp@s1 00C8                                   strncmp@s2 00CA  
                          ??_ADC_Initialize 00C8                          __end_of_test_comms 3EFA  
                      ??_EUSART_FlushBuffer 00C8                     __end_of_oled_setDisplay 35D0  
                       _MOTEapp_SetDataRate 34E2                              _oled_putUint16 55CE  
                          _SPI_Exchange8bit 354E                  i2USBTransferOnePacket@data 002F  
                               _sleepTicker 009A                      ??_USBConfigureEndpoint 002F  
                     ?_USBCtrlTrfOutHandler 002E                              _oled_putString 40D4  
                               _putUSBUSART 3614                          _EUSART_Receive_ISR 3752  
                         oled_clearRow@page 00D5                        __CFG_CPUDIV$NOCLKDIV 000000  
                       _USBCtrlTrfRxService 5ACC                          _USBWakeFromSuspend 36C6  
                               ??_test_leds 00DA                               _powerOnStatus 0096  
                               ??_test_oled 00DA                     _USBStdFeatureReqHandler 5DC8  
   __end_of_USBapp_DeviceCdcEmulatorHandler 4CC4    __size_of_USBapp_DeviceCdcEmulatorHandler 00B6  
          ?_USBapp_DeviceCdcEmulatorHandler 002E           ??_USBapp_DeviceCdcEmulatorHandler 00D5  
           _USBapp_DeviceCdcEmulatorHandler 4C0E                          _USBCheckCDCRequest 4568  
                       _USBCtrlTrfTxService 4E36                         __end_of_TMRapp_Tick 34C4  
                         _sleepTxOccurances 009B                       __end_of_oled_clearRow 36A6  
                               _temperature 007E                         ?_EUSART_Receive_ISR 002E  
                            _oled_writeData 350A                         ?_USBWakeFromSuspend 002E  
                                  strcmp@s1 00C8                                    strcmp@t0 00CE  
                                  strcmp@s2 00CA                                    strcmp@t1 00D0  
                                  strcmp@t2 00CF                            ___lldiv@quotient 0036  
                           ___lwmod@divisor 00CA                       ??_USBCtrlTrfInHandler 003F  
                     _USBAlternateInterface 00C6                             ___lwmod@counter 00CC  
                      ?_MOTEapp_SetDataRate 002E                         ?_USBCheckCDCRequest 002E  
                __size_of_moteApp_GoToSleep 0082                   i2USBTransferOnePacket@dir 002E  
                        _moteApp_toggleLeds 41A2                   i2USBTransferOnePacket@len 0031  
                   ??_MOTEapp_WriteDataRate 00CD                         USBEnableEndpoint@ep 0039  
                           _endpoint_number 0022                                  _WDTCONbits 000FD1  
                              _test_powerup 3A7A                             _sendDataCommand 4796  
                      ?_USBCtrlTrfRxService 002E                               ?_getsUSBUSART 00CF  
                  oled_putUint8@station_dot 00DA                          __CFG_FOSC$INTOSCIO 000000  
                        EUSART_Write@txData 00C8                __size_of_EUSART_Transmit_ISR 0028  
            __end_of_PIN_MANAGER_Initialize 3C2C                    ?_USBCtrlEPAllowDataStage 002E  
        __size_of_moteApp_add8bToDataBuffer 0060                        ?_USBCtrlTrfTxService 002E  
                         ??_moteApp_delayms 00CA                         ?_moteApp_toggleLeds 002E  
              _USBStatusStageTimeoutCounter 001F                                 _test_switch 4AAE  
                      ??_EUSART_Receive_ISR 002E                        ??_USBWakeFromSuspend 0043  
                    __end_of_oled_putUint16 56C2                  USBTransferOnePacket@handle 00CD  
                __size_of_ADC_GetConversion 003A                        __end_of_CDCTxService 58C0  
                           _TMR1_Initialize 38F0           moteJoiningProcess@joiningComplete 00DC  
                          ?_oled_displayOff 002E                       __end_of_oled_putUint8 3F54  
                    __end_of_oled_putString 413A                        ??_USBCheckCDCRequest 002E  
                                _USB_CD_Ptr 7647  
