

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -357222284 
                                                                                               Fri Nov 13 11:58:56 2015

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201506240628
     1                           	processor	18LF25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1
   119                           	psect	text103,global,reloc=2,class=CODE,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,delta=1
   122                           	psect	text106,global,reloc=2,class=CODE,delta=1
   123                           	psect	text107,global,reloc=2,class=CODE,delta=1
   124                           	psect	text108,global,reloc=2,class=CODE,delta=1
   125                           	psect	text109,global,reloc=2,class=CODE,delta=1
   126                           	psect	text110,global,reloc=2,class=CODE,delta=1
   127                           	psect	text111,global,reloc=2,class=CODE,delta=1
   128                           	psect	text112,global,reloc=2,class=CODE,delta=1
   129                           	psect	text113,global,reloc=2,class=CODE,delta=1
   130                           	psect	text114,global,reloc=2,class=CODE,delta=1
   131                           	psect	text115,global,reloc=2,class=CODE,delta=1
   132                           	psect	text116,global,reloc=2,class=CODE,delta=1
   133                           	psect	text117,global,reloc=2,class=CODE,delta=1
   134                           	psect	text118,global,reloc=2,class=CODE,delta=1
   135                           	psect	text119,global,reloc=2,class=CODE,delta=1
   136                           	psect	text120,global,reloc=2,class=CODE,delta=1
   137                           	psect	text121,global,reloc=2,class=CODE,delta=1
   138                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   139                           	psect	text122,global,reloc=2,class=CODE,delta=1
   140                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   141                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   142                           	dabs	1,0x400,48,_BDT
   143                           	dabs	1,0x500,64,_cdc_data_tx
   144                           	dabs	1,0x438,8,_CtrlTrfData
   145                           	dabs	1,0x430,8,_SetupPkt
   146                           	dabs	1,0x540,64,_cdc_data_rx
   147  0000                     
   148                           	psect	idataBANK0
   149  0034AF                     __pidataBANK0:
   150                           	opt stack 0
   151                           
   152                           ;initializer for _selectedFont
   153  0034AF  49                 	db	low _OledFont0
   154  0034B0  76                 	db	high _OledFont0
   155                           
   156                           ;initializer for _dataRateSelection
   157  0034B1  02                 	db	2
   158                           
   159                           ;initializer for _moteState
   160  0034B2  01                 	db	1
   161                           
   162                           ;initializer for _periodicState
   163  0034B3  01                 	db	1
   164                           
   165                           	psect	mediumconst
   166  007640                     __pmediumconst:
   167                           	opt stack 0
   168  007640  00                 	db	0
   169  007641                     _USB_SD_Ptr:
   170                           	opt stack 0
   171  007641  06                 	db	low _sd000
   172  007642  7A                 	db	high _sd000
   173  007643  8C                 	db	low _sd001
   174  007644  79                 	db	high _sd001
   175  007645  C0                 	db	low _sd002
   176  007646  79                 	db	high _sd002
   177  007647                     __end_of_USB_SD_Ptr:
   178                           	opt stack 0
   179  007647                     _USB_CD_Ptr:
   180                           	opt stack 0
   181  007647  49                 	db	low _configDescriptor1
   182  007648  79                 	db	high _configDescriptor1
   183  007649                     __end_of_USB_CD_Ptr:
   184                           	opt stack 0
   185  007649                     _OledFont0:
   186                           	opt stack 0
   187  007649  00                 	db	0
   188  00764A  00                 	db	0
   189  00764B  00                 	db	0
   190  00764C  00                 	db	0
   191  00764D  00                 	db	0
   192  00764E  00                 	db	0
   193  00764F  00                 	db	0
   194  007650  00                 	db	0
   195  007651  00                 	db	0
   196  007652  00                 	db	0
   197  007653  00                 	db	0
   198  007654  5F                 	db	95
   199  007655  00                 	db	0
   200  007656  00                 	db	0
   201  007657  00                 	db	0
   202  007658  00                 	db	0
   203  007659  00                 	db	0
   204  00765A  00                 	db	0
   205  00765B  03                 	db	3
   206  00765C  00                 	db	0
   207  00765D  03                 	db	3
   208  00765E  00                 	db	0
   209  00765F  00                 	db	0
   210  007660  00                 	db	0
   211  007661  64                 	db	100
   212  007662  3C                 	db	60
   213  007663  26                 	db	38
   214  007664  64                 	db	100
   215  007665  3C                 	db	60
   216  007666  26                 	db	38
   217  007667  24                 	db	36
   218  007668  00                 	db	0
   219  007669  26                 	db	38
   220  00766A  49                 	db	73
   221  00766B  49                 	db	73
   222  00766C  7F                 	db	127
   223  00766D  49                 	db	73
   224  00766E  49                 	db	73
   225  00766F  32                 	db	50
   226  007670  00                 	db	0
   227  007671  42                 	db	66
   228  007672  25                 	db	37
   229  007673  12                 	db	18
   230  007674  08                 	db	8
   231  007675  24                 	db	36
   232  007676  52                 	db	82
   233  007677  21                 	db	33
   234  007678  00                 	db	0
   235  007679  20                 	db	32
   236  00767A  50                 	db	80
   237  00767B  4E                 	db	78
   238  00767C  55                 	db	85
   239  00767D  22                 	db	34
   240  00767E  58                 	db	88
   241  00767F  28                 	db	40
   242  007680  00                 	db	0
   243  007681  00                 	db	0
   244  007682  00                 	db	0
   245  007683  00                 	db	0
   246  007684  03                 	db	3
   247  007685  00                 	db	0
   248  007686  00                 	db	0
   249  007687  00                 	db	0
   250  007688  00                 	db	0
   251  007689  00                 	db	0
   252  00768A  00                 	db	0
   253  00768B  1C                 	db	28
   254  00768C  22                 	db	34
   255  00768D  41                 	db	65
   256  00768E  00                 	db	0
   257  00768F  00                 	db	0
   258  007690  00                 	db	0
   259  007691  00                 	db	0
   260  007692  00                 	db	0
   261  007693  00                 	db	0
   262  007694  41                 	db	65
   263  007695  22                 	db	34
   264  007696  1C                 	db	28
   265  007697  00                 	db	0
   266  007698  00                 	db	0
   267  007699  00                 	db	0
   268  00769A  15                 	db	21
   269  00769B  15                 	db	21
   270  00769C  0E                 	db	14
   271  00769D  0E                 	db	14
   272  00769E  15                 	db	21
   273  00769F  15                 	db	21
   274  0076A0  00                 	db	0
   275  0076A1  00                 	db	0
   276  0076A2  08                 	db	8
   277  0076A3  08                 	db	8
   278  0076A4  3E                 	db	62
   279  0076A5  08                 	db	8
   280  0076A6  08                 	db	8
   281  0076A7  00                 	db	0
   282  0076A8  00                 	db	0
   283  0076A9  00                 	db	0
   284  0076AA  00                 	db	0
   285  0076AB  00                 	db	0
   286  0076AC  50                 	db	80
   287  0076AD  30                 	db	48
   288  0076AE  00                 	db	0
   289  0076AF  00                 	db	0
   290  0076B0  00                 	db	0
   291  0076B1  00                 	db	0
   292  0076B2  08                 	db	8
   293  0076B3  08                 	db	8
   294  0076B4  08                 	db	8
   295  0076B5  08                 	db	8
   296  0076B6  08                 	db	8
   297  0076B7  00                 	db	0
   298  0076B8  00                 	db	0
   299  0076B9  00                 	db	0
   300  0076BA  00                 	db	0
   301  0076BB  00                 	db	0
   302  0076BC  40                 	db	64
   303  0076BD  00                 	db	0
   304  0076BE  00                 	db	0
   305  0076BF  00                 	db	0
   306  0076C0  00                 	db	0
   307  0076C1  40                 	db	64
   308  0076C2  20                 	db	32
   309  0076C3  10                 	db	16
   310  0076C4  08                 	db	8
   311  0076C5  04                 	db	4
   312  0076C6  02                 	db	2
   313  0076C7  01                 	db	1
   314  0076C8  00                 	db	0
   315  0076C9  00                 	db	0
   316  0076CA  3E                 	db	62
   317  0076CB  41                 	db	65
   318  0076CC  41                 	db	65
   319  0076CD  41                 	db	65
   320  0076CE  3E                 	db	62
   321  0076CF  00                 	db	0
   322  0076D0  00                 	db	0
   323  0076D1  00                 	db	0
   324  0076D2  00                 	db	0
   325  0076D3  41                 	db	65
   326  0076D4  7F                 	db	127
   327  0076D5  40                 	db	64
   328  0076D6  00                 	db	0
   329  0076D7  00                 	db	0
   330  0076D8  00                 	db	0
   331  0076D9  00                 	db	0
   332  0076DA  42                 	db	66
   333  0076DB  61                 	db	97
   334  0076DC  51                 	db	81
   335  0076DD  49                 	db	73
   336  0076DE  6E                 	db	110
   337  0076DF  00                 	db	0
   338  0076E0  00                 	db	0
   339  0076E1  00                 	db	0
   340  0076E2  22                 	db	34
   341  0076E3  41                 	db	65
   342  0076E4  49                 	db	73
   343  0076E5  49                 	db	73
   344  0076E6  36                 	db	54
   345  0076E7  00                 	db	0
   346  0076E8  00                 	db	0
   347  0076E9  00                 	db	0
   348  0076EA  18                 	db	24
   349  0076EB  14                 	db	20
   350  0076EC  12                 	db	18
   351  0076ED  7F                 	db	127
   352  0076EE  10                 	db	16
   353  0076EF  00                 	db	0
   354  0076F0  00                 	db	0
   355  0076F1  00                 	db	0
   356  0076F2  27                 	db	39
   357  0076F3  49                 	db	73
   358  0076F4  49                 	db	73
   359  0076F5  49                 	db	73
   360  0076F6  71                 	db	113
   361  0076F7  00                 	db	0
   362  0076F8  00                 	db	0
   363  0076F9  00                 	db	0
   364  0076FA  3C                 	db	60
   365  0076FB  4A                 	db	74
   366  0076FC  49                 	db	73
   367  0076FD  48                 	db	72
   368  0076FE  70                 	db	112
   369  0076FF  00                 	db	0
   370  007700  00                 	db	0
   371  007701  00                 	db	0
   372  007702  43                 	db	67
   373  007703  21                 	db	33
   374  007704  11                 	db	17
   375  007705  0D                 	db	13
   376  007706  03                 	db	3
   377  007707  00                 	db	0
   378  007708  00                 	db	0
   379  007709  00                 	db	0
   380  00770A  36                 	db	54
   381  00770B  49                 	db	73
   382  00770C  49                 	db	73
   383  00770D  49                 	db	73
   384  00770E  36                 	db	54
   385  00770F  00                 	db	0
   386  007710  00                 	db	0
   387  007711  00                 	db	0
   388  007712  06                 	db	6
   389  007713  09                 	db	9
   390  007714  49                 	db	73
   391  007715  29                 	db	41
   392  007716  1E                 	db	30
   393  007717  00                 	db	0
   394  007718  00                 	db	0
   395  007719  00                 	db	0
   396  00771A  00                 	db	0
   397  00771B  00                 	db	0
   398  00771C  12                 	db	18
   399  00771D  00                 	db	0
   400  00771E  00                 	db	0
   401  00771F  00                 	db	0
   402  007720  00                 	db	0
   403  007721  00                 	db	0
   404  007722  00                 	db	0
   405  007723  00                 	db	0
   406  007724  52                 	db	82
   407  007725  30                 	db	48
   408  007726  00                 	db	0
   409  007727  00                 	db	0
   410  007728  00                 	db	0
   411  007729  00                 	db	0
   412  00772A  00                 	db	0
   413  00772B  08                 	db	8
   414  00772C  14                 	db	20
   415  00772D  14                 	db	20
   416  00772E  22                 	db	34
   417  00772F  00                 	db	0
   418  007730  00                 	db	0
   419  007731  00                 	db	0
   420  007732  14                 	db	20
   421  007733  14                 	db	20
   422  007734  14                 	db	20
   423  007735  14                 	db	20
   424  007736  14                 	db	20
   425  007737  14                 	db	20
   426  007738  00                 	db	0
   427  007739  00                 	db	0
   428  00773A  00                 	db	0
   429  00773B  22                 	db	34
   430  00773C  14                 	db	20
   431  00773D  14                 	db	20
   432  00773E  08                 	db	8
   433  00773F  00                 	db	0
   434  007740  00                 	db	0
   435  007741  00                 	db	0
   436  007742  02                 	db	2
   437  007743  01                 	db	1
   438  007744  59                 	db	89
   439  007745  05                 	db	5
   440  007746  02                 	db	2
   441  007747  00                 	db	0
   442  007748  00                 	db	0
   443  007749  3E                 	db	62
   444  00774A  41                 	db	65
   445  00774B  5D                 	db	93
   446  00774C  55                 	db	85
   447  00774D  4D                 	db	77
   448  00774E  51                 	db	81
   449  00774F  2E                 	db	46
   450  007750  00                 	db	0
   451  007751  40                 	db	64
   452  007752  7C                 	db	124
   453  007753  4A                 	db	74
   454  007754  09                 	db	9
   455  007755  4A                 	db	74
   456  007756  7C                 	db	124
   457  007757  40                 	db	64
   458  007758  00                 	db	0
   459  007759  41                 	db	65
   460  00775A  7F                 	db	127
   461  00775B  49                 	db	73
   462  00775C  49                 	db	73
   463  00775D  49                 	db	73
   464  00775E  49                 	db	73
   465  00775F  36                 	db	54
   466  007760  00                 	db	0
   467  007761  1C                 	db	28
   468  007762  22                 	db	34
   469  007763  41                 	db	65
   470  007764  41                 	db	65
   471  007765  41                 	db	65
   472  007766  41                 	db	65
   473  007767  22                 	db	34
   474  007768  00                 	db	0
   475  007769  41                 	db	65
   476  00776A  7F                 	db	127
   477  00776B  41                 	db	65
   478  00776C  41                 	db	65
   479  00776D  41                 	db	65
   480  00776E  22                 	db	34
   481  00776F  1C                 	db	28
   482  007770  00                 	db	0
   483  007771  41                 	db	65
   484  007772  7F                 	db	127
   485  007773  49                 	db	73
   486  007774  49                 	db	73
   487  007775  5D                 	db	93
   488  007776  41                 	db	65
   489  007777  63                 	db	99
   490  007778  00                 	db	0
   491  007779  41                 	db	65
   492  00777A  7F                 	db	127
   493  00777B  49                 	db	73
   494  00777C  09                 	db	9
   495  00777D  1D                 	db	29
   496  00777E  01                 	db	1
   497  00777F  03                 	db	3
   498  007780  00                 	db	0
   499  007781  1C                 	db	28
   500  007782  22                 	db	34
   501  007783  41                 	db	65
   502  007784  49                 	db	73
   503  007785  49                 	db	73
   504  007786  3A                 	db	58
   505  007787  08                 	db	8
   506  007788  00                 	db	0
   507  007789  41                 	db	65
   508  00778A  7F                 	db	127
   509  00778B  08                 	db	8
   510  00778C  08                 	db	8
   511  00778D  08                 	db	8
   512  00778E  7F                 	db	127
   513  00778F  41                 	db	65
   514  007790  00                 	db	0
   515  007791  00                 	db	0
   516  007792  41                 	db	65
   517  007793  41                 	db	65
   518  007794  7F                 	db	127
   519  007795  41                 	db	65
   520  007796  41                 	db	65
   521  007797  00                 	db	0
   522  007798  00                 	db	0
   523  007799  30                 	db	48
   524  00779A  40                 	db	64
   525  00779B  41                 	db	65
   526  00779C  41                 	db	65
   527  00779D  3F                 	db	63
   528  00779E  01                 	db	1
   529  00779F  01                 	db	1
   530  0077A0  00                 	db	0
   531  0077A1  41                 	db	65
   532  0077A2  7F                 	db	127
   533  0077A3  08                 	db	8
   534  0077A4  0C                 	db	12
   535  0077A5  12                 	db	18
   536  0077A6  61                 	db	97
   537  0077A7  41                 	db	65
   538  0077A8  00                 	db	0
   539  0077A9  41                 	db	65
   540  0077AA  7F                 	db	127
   541  0077AB  41                 	db	65
   542  0077AC  40                 	db	64
   543  0077AD  40                 	db	64
   544  0077AE  40                 	db	64
   545  0077AF  60                 	db	96
   546  0077B0  00                 	db	0
   547  0077B1  41                 	db	65
   548  0077B2  7F                 	db	127
   549  0077B3  42                 	db	66
   550  0077B4  0C                 	db	12
   551  0077B5  42                 	db	66
   552  0077B6  7F                 	db	127
   553  0077B7  41                 	db	65
   554  0077B8  00                 	db	0
   555  0077B9  41                 	db	65
   556  0077BA  7F                 	db	127
   557  0077BB  42                 	db	66
   558  0077BC  0C                 	db	12
   559  0077BD  11                 	db	17
   560  0077BE  7F                 	db	127
   561  0077BF  01                 	db	1
   562  0077C0  00                 	db	0
   563  0077C1  1C                 	db	28
   564  0077C2  22                 	db	34
   565  0077C3  41                 	db	65
   566  0077C4  41                 	db	65
   567  0077C5  41                 	db	65
   568  0077C6  22                 	db	34
   569  0077C7  1C                 	db	28
   570  0077C8  00                 	db	0
   571  0077C9  41                 	db	65
   572  0077CA  7F                 	db	127
   573  0077CB  49                 	db	73
   574  0077CC  09                 	db	9
   575  0077CD  09                 	db	9
   576  0077CE  09                 	db	9
   577  0077CF  06                 	db	6
   578  0077D0  00                 	db	0
   579  0077D1  0C                 	db	12
   580  0077D2  12                 	db	18
   581  0077D3  21                 	db	33
   582  0077D4  21                 	db	33
   583  0077D5  61                 	db	97
   584  0077D6  52                 	db	82
   585  0077D7  4C                 	db	76
   586  0077D8  00                 	db	0
   587  0077D9  41                 	db	65
   588  0077DA  7F                 	db	127
   589  0077DB  09                 	db	9
   590  0077DC  09                 	db	9
   591  0077DD  19                 	db	25
   592  0077DE  69                 	db	105
   593  0077DF  46                 	db	70
   594  0077E0  00                 	db	0
   595  0077E1  66                 	db	102
   596  0077E2  49                 	db	73
   597  0077E3  49                 	db	73
   598  0077E4  49                 	db	73
   599  0077E5  49                 	db	73
   600  0077E6  49                 	db	73
   601  0077E7  33                 	db	51
   602  0077E8  00                 	db	0
   603  0077E9  03                 	db	3
   604  0077EA  01                 	db	1
   605  0077EB  41                 	db	65
   606  0077EC  7F                 	db	127
   607  0077ED  41                 	db	65
   608  0077EE  01                 	db	1
   609  0077EF  03                 	db	3
   610  0077F0  00                 	db	0
   611  0077F1  01                 	db	1
   612  0077F2  3F                 	db	63
   613  0077F3  41                 	db	65
   614  0077F4  40                 	db	64
   615  0077F5  41                 	db	65
   616  0077F6  3F                 	db	63
   617  0077F7  01                 	db	1
   618  0077F8  00                 	db	0
   619  0077F9  01                 	db	1
   620  0077FA  0F                 	db	15
   621  0077FB  31                 	db	49
   622  0077FC  40                 	db	64
   623  0077FD  31                 	db	49
   624  0077FE  0F                 	db	15
   625  0077FF  01                 	db	1
   626  007800  00                 	db	0
   627  007801  01                 	db	1
   628  007802  1F                 	db	31
   629  007803  61                 	db	97
   630  007804  14                 	db	20
   631  007805  61                 	db	97
   632  007806  1F                 	db	31
   633  007807  01                 	db	1
   634  007808  00                 	db	0
   635  007809  41                 	db	65
   636  00780A  41                 	db	65
   637  00780B  36                 	db	54
   638  00780C  08                 	db	8
   639  00780D  36                 	db	54
   640  00780E  41                 	db	65
   641  00780F  41                 	db	65
   642  007810  00                 	db	0
   643  007811  01                 	db	1
   644  007812  03                 	db	3
   645  007813  44                 	db	68
   646  007814  78                 	db	120
   647  007815  44                 	db	68
   648  007816  03                 	db	3
   649  007817  01                 	db	1
   650  007818  00                 	db	0
   651  007819  43                 	db	67
   652  00781A  61                 	db	97
   653  00781B  51                 	db	81
   654  00781C  49                 	db	73
   655  00781D  45                 	db	69
   656  00781E  43                 	db	67
   657  00781F  61                 	db	97
   658  007820  00                 	db	0
   659  007821  00                 	db	0
   660  007822  00                 	db	0
   661  007823  7F                 	db	127
   662  007824  41                 	db	65
   663  007825  41                 	db	65
   664  007826  00                 	db	0
   665  007827  00                 	db	0
   666  007828  00                 	db	0
   667  007829  01                 	db	1
   668  00782A  02                 	db	2
   669  00782B  04                 	db	4
   670  00782C  08                 	db	8
   671  00782D  10                 	db	16
   672  00782E  20                 	db	32
   673  00782F  40                 	db	64
   674  007830  00                 	db	0
   675  007831  00                 	db	0
   676  007832  00                 	db	0
   677  007833  41                 	db	65
   678  007834  41                 	db	65
   679  007835  7F                 	db	127
   680  007836  00                 	db	0
   681  007837  00                 	db	0
   682  007838  00                 	db	0
   683  007839  00                 	db	0
   684  00783A  04                 	db	4
   685  00783B  02                 	db	2
   686  00783C  01                 	db	1
   687  00783D  01                 	db	1
   688  00783E  02                 	db	2
   689  00783F  04                 	db	4
   690  007840  00                 	db	0
   691  007841  00                 	db	0
   692  007842  40                 	db	64
   693  007843  40                 	db	64
   694  007844  40                 	db	64
   695  007845  40                 	db	64
   696  007846  40                 	db	64
   697  007847  40                 	db	64
   698  007848  00                 	db	0
   699  007849  00                 	db	0
   700  00784A  01                 	db	1
   701  00784B  02                 	db	2
   702  00784C  00                 	db	0
   703  00784D  00                 	db	0
   704  00784E  00                 	db	0
   705  00784F  00                 	db	0
   706  007850  00                 	db	0
   707  007851  00                 	db	0
   708  007852  34                 	db	52
   709  007853  4A                 	db	74
   710  007854  4A                 	db	74
   711  007855  4A                 	db	74
   712  007856  3C                 	db	60
   713  007857  40                 	db	64
   714  007858  00                 	db	0
   715  007859  00                 	db	0
   716  00785A  41                 	db	65
   717  00785B  3F                 	db	63
   718  00785C  48                 	db	72
   719  00785D  48                 	db	72
   720  00785E  48                 	db	72
   721  00785F  30                 	db	48
   722  007860  00                 	db	0
   723  007861  00                 	db	0
   724  007862  3C                 	db	60
   725  007863  42                 	db	66
   726  007864  42                 	db	66
   727  007865  42                 	db	66
   728  007866  24                 	db	36
   729  007867  00                 	db	0
   730  007868  00                 	db	0
   731  007869  00                 	db	0
   732  00786A  30                 	db	48
   733  00786B  48                 	db	72
   734  00786C  48                 	db	72
   735  00786D  49                 	db	73
   736  00786E  3F                 	db	63
   737  00786F  40                 	db	64
   738  007870  00                 	db	0
   739  007871  00                 	db	0
   740  007872  3C                 	db	60
   741  007873  4A                 	db	74
   742  007874  4A                 	db	74
   743  007875  4A                 	db	74
   744  007876  2C                 	db	44
   745  007877  00                 	db	0
   746  007878  00                 	db	0
   747  007879  00                 	db	0
   748  00787A  00                 	db	0
   749  00787B  48                 	db	72
   750  00787C  7E                 	db	126
   751  00787D  49                 	db	73
   752  00787E  09                 	db	9
   753  00787F  00                 	db	0
   754  007880  00                 	db	0
   755  007881  00                 	db	0
   756  007882  26                 	db	38
   757  007883  49                 	db	73
   758  007884  49                 	db	73
   759  007885  49                 	db	73
   760  007886  3F                 	db	63
   761  007887  01                 	db	1
   762  007888  00                 	db	0
   763  007889  41                 	db	65
   764  00788A  7F                 	db	127
   765  00788B  48                 	db	72
   766  00788C  04                 	db	4
   767  00788D  44                 	db	68
   768  00788E  78                 	db	120
   769  00788F  40                 	db	64
   770  007890  00                 	db	0
   771  007891  00                 	db	0
   772  007892  00                 	db	0
   773  007893  44                 	db	68
   774  007894  7D                 	db	125
   775  007895  40                 	db	64
   776  007896  00                 	db	0
   777  007897  00                 	db	0
   778  007898  00                 	db	0
   779  007899  00                 	db	0
   780  00789A  00                 	db	0
   781  00789B  40                 	db	64
   782  00789C  44                 	db	68
   783  00789D  3D                 	db	61
   784  00789E  00                 	db	0
   785  00789F  00                 	db	0
   786  0078A0  00                 	db	0
   787  0078A1  41                 	db	65
   788  0078A2  7F                 	db	127
   789  0078A3  10                 	db	16
   790  0078A4  18                 	db	24
   791  0078A5  24                 	db	36
   792  0078A6  42                 	db	66
   793  0078A7  42                 	db	66
   794  0078A8  00                 	db	0
   795  0078A9  00                 	db	0
   796  0078AA  40                 	db	64
   797  0078AB  41                 	db	65
   798  0078AC  7F                 	db	127
   799  0078AD  40                 	db	64
   800  0078AE  40                 	db	64
   801  0078AF  00                 	db	0
   802  0078B0  00                 	db	0
   803  0078B1  42                 	db	66
   804  0078B2  7E                 	db	126
   805  0078B3  02                 	db	2
   806  0078B4  7C                 	db	124
   807  0078B5  02                 	db	2
   808  0078B6  7E                 	db	126
   809  0078B7  40                 	db	64
   810  0078B8  00                 	db	0
   811  0078B9  42                 	db	66
   812  0078BA  7E                 	db	126
   813  0078BB  44                 	db	68
   814  0078BC  02                 	db	2
   815  0078BD  42                 	db	66
   816  0078BE  7C                 	db	124
   817  0078BF  40                 	db	64
   818  0078C0  00                 	db	0
   819  0078C1  00                 	db	0
   820  0078C2  3C                 	db	60
   821  0078C3  42                 	db	66
   822  0078C4  42                 	db	66
   823  0078C5  42                 	db	66
   824  0078C6  3C                 	db	60
   825  0078C7  00                 	db	0
   826  0078C8  00                 	db	0
   827  0078C9  00                 	db	0
   828  0078CA  41                 	db	65
   829  0078CB  7F                 	db	127
   830  0078CC  49                 	db	73
   831  0078CD  09                 	db	9
   832  0078CE  09                 	db	9
   833  0078CF  06                 	db	6
   834  0078D0  00                 	db	0
   835  0078D1  00                 	db	0
   836  0078D2  06                 	db	6
   837  0078D3  09                 	db	9
   838  0078D4  09                 	db	9
   839  0078D5  49                 	db	73
   840  0078D6  7F                 	db	127
   841  0078D7  41                 	db	65
   842  0078D8  00                 	db	0
   843  0078D9  00                 	db	0
   844  0078DA  42                 	db	66
   845  0078DB  7E                 	db	126
   846  0078DC  44                 	db	68
   847  0078DD  02                 	db	2
   848  0078DE  02                 	db	2
   849  0078DF  04                 	db	4
   850  0078E0  00                 	db	0
   851  0078E1  00                 	db	0
   852  0078E2  64                 	db	100
   853  0078E3  4A                 	db	74
   854  0078E4  4A                 	db	74
   855  0078E5  4A                 	db	74
   856  0078E6  36                 	db	54
   857  0078E7  00                 	db	0
   858  0078E8  00                 	db	0
   859  0078E9  00                 	db	0
   860  0078EA  04                 	db	4
   861  0078EB  3F                 	db	63
   862  0078EC  44                 	db	68
   863  0078ED  44                 	db	68
   864  0078EE  20                 	db	32
   865  0078EF  00                 	db	0
   866  0078F0  00                 	db	0
   867  0078F1  00                 	db	0
   868  0078F2  02                 	db	2
   869  0078F3  3E                 	db	62
   870  0078F4  40                 	db	64
   871  0078F5  40                 	db	64
   872  0078F6  22                 	db	34
   873  0078F7  7E                 	db	126
   874  0078F8  40                 	db	64
   875  0078F9  02                 	db	2
   876  0078FA  0E                 	db	14
   877  0078FB  32                 	db	50
   878  0078FC  40                 	db	64
   879  0078FD  32                 	db	50
   880  0078FE  0E                 	db	14
   881  0078FF  02                 	db	2
   882  007900  00                 	db	0
   883  007901  02                 	db	2
   884  007902  1E                 	db	30
   885  007903  62                 	db	98
   886  007904  18                 	db	24
   887  007905  62                 	db	98
   888  007906  1E                 	db	30
   889  007907  02                 	db	2
   890  007908  00                 	db	0
   891  007909  42                 	db	66
   892  00790A  62                 	db	98
   893  00790B  14                 	db	20
   894  00790C  08                 	db	8
   895  00790D  14                 	db	20
   896  00790E  62                 	db	98
   897  00790F  42                 	db	66
   898  007910  00                 	db	0
   899  007911  01                 	db	1
   900  007912  43                 	db	67
   901  007913  45                 	db	69
   902  007914  38                 	db	56
   903  007915  05                 	db	5
   904  007916  03                 	db	3
   905  007917  01                 	db	1
   906  007918  00                 	db	0
   907  007919  00                 	db	0
   908  00791A  46                 	db	70
   909  00791B  62                 	db	98
   910  00791C  52                 	db	82
   911  00791D  4A                 	db	74
   912  00791E  46                 	db	70
   913  00791F  62                 	db	98
   914  007920  00                 	db	0
   915  007921  00                 	db	0
   916  007922  00                 	db	0
   917  007923  08                 	db	8
   918  007924  36                 	db	54
   919  007925  41                 	db	65
   920  007926  00                 	db	0
   921  007927  00                 	db	0
   922  007928  00                 	db	0
   923  007929  00                 	db	0
   924  00792A  00                 	db	0
   925  00792B  00                 	db	0
   926  00792C  7F                 	db	127
   927  00792D  00                 	db	0
   928  00792E  00                 	db	0
   929  00792F  00                 	db	0
   930  007930  00                 	db	0
   931  007931  00                 	db	0
   932  007932  00                 	db	0
   933  007933  00                 	db	0
   934  007934  41                 	db	65
   935  007935  36                 	db	54
   936  007936  08                 	db	8
   937  007937  00                 	db	0
   938  007938  00                 	db	0
   939  007939  00                 	db	0
   940  00793A  18                 	db	24
   941  00793B  08                 	db	8
   942  00793C  08                 	db	8
   943  00793D  10                 	db	16
   944  00793E  10                 	db	16
   945  00793F  18                 	db	24
   946  007940  00                 	db	0
   947  007941  AA                 	db	170
   948  007942  55                 	db	85
   949  007943  AA                 	db	170
   950  007944  55                 	db	85
   951  007945  AA                 	db	170
   952  007946  55                 	db	85
   953  007947  AA                 	db	170
   954  007948  55                 	db	85
   955  007949                     __end_of_OledFont0:
   956                           	opt stack 0
   957  007949                     _configDescriptor1:
   958                           	opt stack 0
   959  007949  09                 	db	9
   960  00794A  02                 	db	2
   961  00794B  43                 	db	67
   962  00794C  00                 	db	0
   963  00794D  02                 	db	2
   964  00794E  01                 	db	1
   965  00794F  00                 	db	0
   966  007950  C0                 	db	192
   967  007951  32                 	db	50
   968  007952  09                 	db	9
   969  007953  04                 	db	4
   970  007954  00                 	db	0
   971  007955  00                 	db	0
   972  007956  01                 	db	1
   973  007957  02                 	db	2
   974  007958  02                 	db	2
   975  007959  01                 	db	1
   976  00795A  00                 	db	0
   977  00795B  05                 	db	5
   978  00795C  24                 	db	36
   979  00795D  00                 	db	0
   980  00795E  10                 	db	16
   981  00795F  01                 	db	1
   982  007960  04                 	db	4
   983  007961  24                 	db	36
   984  007962  02                 	db	2
   985  007963  02                 	db	2
   986  007964  05                 	db	5
   987  007965  24                 	db	36
   988  007966  06                 	db	6
   989  007967  00                 	db	0
   990  007968  01                 	db	1
   991  007969  05                 	db	5
   992  00796A  24                 	db	36
   993  00796B  01                 	db	1
   994  00796C  00                 	db	0
   995  00796D  01                 	db	1
   996  00796E  07                 	db	7
   997  00796F  05                 	db	5
   998  007970  81                 	db	129
   999  007971  03                 	db	3
  1000  007972  08                 	db	8
  1001  007973  00                 	db	0
  1002  007974  02                 	db	2
  1003  007975  09                 	db	9
  1004  007976  04                 	db	4
  1005  007977  01                 	db	1
  1006  007978  00                 	db	0
  1007  007979  02                 	db	2
  1008  00797A  0A                 	db	10
  1009  00797B  00                 	db	0
  1010  00797C  00                 	db	0
  1011  00797D  00                 	db	0
  1012  00797E  07                 	db	7
  1013  00797F  05                 	db	5
  1014  007980  02                 	db	2
  1015  007981  02                 	db	2
  1016  007982  40                 	db	64
  1017  007983  00                 	db	0
  1018  007984  00                 	db	0
  1019  007985  07                 	db	7
  1020  007986  05                 	db	5
  1021  007987  82                 	db	130
  1022  007988  02                 	db	2
  1023  007989  40                 	db	64
  1024  00798A  00                 	db	0
  1025  00798B  00                 	db	0
  1026  00798C                     __end_of_configDescriptor1:
  1027                           	opt stack 0
  1028  00798C                     _sd001:
  1029                           	opt stack 0
  1030  00798C  34                 	db	52
  1031  00798D  03                 	db	3
  1032  00798E  004D               	dw	77
  1033  007990  0069               	dw	105
  1034  007992  0063               	dw	99
  1035  007994  0072               	dw	114
  1036  007996  006F               	dw	111
  1037  007998  0063               	dw	99
  1038  00799A  0068               	dw	104
  1039  00799C  0069               	dw	105
  1040  00799E  0070               	dw	112
  1041  0079A0  0020               	dw	32
  1042  0079A2  0054               	dw	84
  1043  0079A4  0065               	dw	101
  1044  0079A6  0063               	dw	99
  1045  0079A8  0068               	dw	104
  1046  0079AA  006E               	dw	110
  1047  0079AC  006F               	dw	111
  1048  0079AE  006C               	dw	108
  1049  0079B0  006F               	dw	111
  1050  0079B2  0067               	dw	103
  1051  0079B4  0079               	dw	121
  1052  0079B6  0020               	dw	32
  1053  0079B8  0049               	dw	73
  1054  0079BA  006E               	dw	110
  1055  0079BC  0063               	dw	99
  1056  0079BE  002E               	dw	46
  1057  0079C0                     __end_of_sd001:
  1058                           	opt stack 0
  1059  0079C0                     _sd002:
  1060                           	opt stack 0
  1061  0079C0  34                 	db	52
  1062  0079C1  03                 	db	3
  1063  0079C2  0043               	dw	67
  1064  0079C4  0044               	dw	68
  1065  0079C6  0043               	dw	67
  1066  0079C8  0020               	dw	32
  1067  0079CA  0052               	dw	82
  1068  0079CC  0053               	dw	83
  1069  0079CE  002D               	dw	45
  1070  0079D0  0032               	dw	50
  1071  0079D2  0033               	dw	51
  1072  0079D4  0032               	dw	50
  1073  0079D6  0020               	dw	32
  1074  0079D8  0045               	dw	69
  1075  0079DA  006D               	dw	109
  1076  0079DC  0075               	dw	117
  1077  0079DE  006C               	dw	108
  1078  0079E0  0061               	dw	97
  1079  0079E2  0074               	dw	116
  1080  0079E4  0069               	dw	105
  1081  0079E6  006F               	dw	111
  1082  0079E8  006E               	dw	110
  1083  0079EA  0020               	dw	32
  1084  0079EC  0044               	dw	68
  1085  0079EE  0065               	dw	101
  1086  0079F0  006D               	dw	109
  1087  0079F2  006F               	dw	111
  1088  0079F4                     __end_of_sd002:
  1089                           	opt stack 0
  1090  0079F4                     _device_dsc:
  1091                           	opt stack 0
  1092  0079F4  12                 	db	18
  1093  0079F5  01                 	db	1
  1094  0079F6  0200               	dw	512
  1095  0079F8  02                 	db	2
  1096  0079F9  00                 	db	0
  1097  0079FA  00                 	db	0
  1098  0079FB  08                 	db	8
  1099  0079FC  04D8               	dw	1240
  1100  0079FE  000A               	dw	10
  1101  007A00  0100               	dw	256
  1102  007A02  01                 	db	1
  1103  007A03  02                 	db	2
  1104  007A04  00                 	db	0
  1105  007A05  01                 	db	1
  1106  007A06                     __end_of_device_dsc:
  1107                           	opt stack 0
  1108  007A06                     _sd000:
  1109                           	opt stack 0
  1110  007A06  04                 	db	4
  1111  007A07  03                 	db	3
  1112  007A08  0409               	dw	1033
  1113  007A0A                     __end_of_sd000:
  1114                           	opt stack 0
  1115  0000                     _ANSELAbits	set	3931
  1116  0000                     _ANSELCbits	set	3933
  1117  0000                     _ACTCON	set	4021
  1118  0000                     _ADCON0	set	4034
  1119  0000                     _ADCON0bits	set	4034
  1120  0000                     _ADCON1	set	4033
  1121  0000                     _ADCON2	set	4032
  1122  0000                     _ADRESH	set	4036
  1123  0000                     _ADRESL	set	4035
  1124  0000                     _BAUDCON	set	4024
  1125  0000                     _CM1CON0	set	3992
  1126  0000                     _CM2CON1bits	set	3994
  1127  0000                     _EEADR	set	4009
  1128  0000                     _EECON1bits	set	4006
  1129  0000                     _EECON2	set	4007
  1130  0000                     _EEDATA	set	4008
  1131  0000                     _INTCONbits	set	4082
  1132  0000                     _IOCCbits	set	3975
  1133  0000                     _IPR3bits	set	4005
  1134  0000                     _LATAbits	set	3977
  1135  0000                     _LATBbits	set	3978
  1136  0000                     _LATCbits	set	3979
  1137  0000                     _OSCCON	set	4051
  1138  0000                     _OSCCON2	set	4050
  1139  0000                     _OSCCON2bits	set	4050
  1140  0000                     _OSCTUNE	set	3995
  1141  0000                     _PIE1bits	set	3997
  1142  0000                     _PIE2bits	set	4000
  1143  0000                     _PIE3bits	set	4003
  1144  0000                     _PIR1bits	set	3998
  1145  0000                     _PIR2bits	set	4001
  1146  0000                     _PIR3bits	set	4004
  1147  0000                     _PORTAbits	set	3968
  1148  0000                     _PORTCbits	set	3970
  1149  0000                     _PR2	set	4027
  1150  0000                     _RCONbits	set	4048
  1151  0000                     _RCREG	set	4014
  1152  0000                     _RCSTA	set	4011
  1153  0000                     _RCSTAbits	set	4011
  1154  0000                     _SPBRG	set	4015
  1155  0000                     _SPBRGH	set	4016
  1156  0000                     _SSP1ADD	set	4040
  1157  0000                     _SSP1CON1	set	4038
  1158  0000                     _SSP1CON1bits	set	4038
  1159  0000                     _SSP1STAT	set	4039
  1160  0000                     _SSP1STATbits	set	4039
  1161  0000                     _SSPBUF	set	4041
  1162  0000                     _T1CON	set	4045
  1163  0000                     _T1CONbits	set	4045
  1164  0000                     _T1GCON	set	4044
  1165  0000                     _T2CON	set	4026
  1166  0000                     _T2CONbits	set	4026
  1167  0000                     _TMR1H	set	4047
  1168  0000                     _TMR1L	set	4046
  1169  0000                     _TMR2	set	4028
  1170  0000                     _TRISAbits	set	3986
  1171  0000                     _TRISBbits	set	3987
  1172  0000                     _TRISCbits	set	3988
  1173  0000                     _TXREG	set	4013
  1174  0000                     _TXSTA	set	4012
  1175  0000                     _TXSTAbits	set	4012
  1176  0000                     _UADDR	set	3939
  1177  0000                     _UCFG	set	3938
  1178  0000                     _UCON	set	3936
  1179  0000                     _UCONbits	set	3936
  1180  0000                     _UEIE	set	3942
  1181  0000                     _UEIR	set	3943
  1182  0000                     _UEP0bits	set	3946
  1183  0000                     _UIE	set	3940
  1184  0000                     _UIEbits	set	3940
  1185  0000                     _UIR	set	3941
  1186  0000                     _UIRbits	set	3941
  1187  0000                     _USTAT	set	3937
  1188  0000                     _VREFCON0	set	3965
  1189  0000                     _WDTCONbits	set	4049
  1190  0000                     _UEP0	set	3946
  1191  0000                     _UEP1	set	3947
  1192  0000                     _CKE	set	32318
  1193  0000                     _CKP	set	32308
  1194  0000                     _GIE	set	32663
  1195  0000                     _PEIE	set	32662
  1196  007A0A                     STR_256:
  1197  007A0A  73                 	db	115	;'s'
  1198  007A0B  79                 	db	121	;'y'
  1199  007A0C  73                 	db	115	;'s'
  1200  007A0D  20                 	db	32
  1201  007A0E  73                 	db	115	;'s'
  1202  007A0F  65                 	db	101	;'e'
  1203  007A10  74                 	db	116	;'t'
  1204  007A11  20                 	db	32
  1205  007A12  70                 	db	112	;'p'
  1206  007A13  69                 	db	105	;'i'
  1207  007A14  6E                 	db	110	;'n'
  1208  007A15  64                 	db	100	;'d'
  1209  007A16  69                 	db	105	;'i'
  1210  007A17  67                 	db	103	;'g'
  1211  007A18  20                 	db	32
  1212  007A19  47                 	db	71	;'G'
  1213  007A1A  50                 	db	80	;'P'
  1214  007A1B  49                 	db	73	;'I'
  1215  007A1C  4F                 	db	79	;'O'
  1216  007A1D  31                 	db	49	;'1'
  1217  007A1E  30                 	db	48	;'0'
  1218  007A1F  20                 	db	32
  1219  007A20  30                 	db	48	;'0'
  1220  007A21  0D                 	db	13
  1221  007A22  0A                 	db	10
  1222  007A23  00                 	db	0
  1223  007A24                     STR_257:
  1224  007A24  73                 	db	115	;'s'
  1225  007A25  79                 	db	121	;'y'
  1226  007A26  73                 	db	115	;'s'
  1227  007A27  20                 	db	32
  1228  007A28  73                 	db	115	;'s'
  1229  007A29  65                 	db	101	;'e'
  1230  007A2A  74                 	db	116	;'t'
  1231  007A2B  20                 	db	32
  1232  007A2C  70                 	db	112	;'p'
  1233  007A2D  69                 	db	105	;'i'
  1234  007A2E  6E                 	db	110	;'n'
  1235  007A2F  64                 	db	100	;'d'
  1236  007A30  69                 	db	105	;'i'
  1237  007A31  67                 	db	103	;'g'
  1238  007A32  20                 	db	32
  1239  007A33  47                 	db	71	;'G'
  1240  007A34  50                 	db	80	;'P'
  1241  007A35  49                 	db	73	;'I'
  1242  007A36  4F                 	db	79	;'O'
  1243  007A37  31                 	db	49	;'1'
  1244  007A38  31                 	db	49	;'1'
  1245  007A39  20                 	db	32
  1246  007A3A  30                 	db	48	;'0'
  1247  007A3B  0D                 	db	13
  1248  007A3C  0A                 	db	10
  1249  007A3D  00                 	db	0
  1250  007A3E                     STR_254:
  1251  007A3E  73                 	db	115	;'s'
  1252  007A3F  79                 	db	121	;'y'
  1253  007A40  73                 	db	115	;'s'
  1254  007A41  20                 	db	32
  1255  007A42  73                 	db	115	;'s'
  1256  007A43  65                 	db	101	;'e'
  1257  007A44  74                 	db	116	;'t'
  1258  007A45  20                 	db	32
  1259  007A46  70                 	db	112	;'p'
  1260  007A47  69                 	db	105	;'i'
  1261  007A48  6E                 	db	110	;'n'
  1262  007A49  64                 	db	100	;'d'
  1263  007A4A  69                 	db	105	;'i'
  1264  007A4B  67                 	db	103	;'g'
  1265  007A4C  20                 	db	32
  1266  007A4D  47                 	db	71	;'G'
  1267  007A4E  50                 	db	80	;'P'
  1268  007A4F  49                 	db	73	;'I'
  1269  007A50  4F                 	db	79	;'O'
  1270  007A51  31                 	db	49	;'1'
  1271  007A52  30                 	db	48	;'0'
  1272  007A53  20                 	db	32
  1273  007A54  31                 	db	49	;'1'
  1274  007A55  0D                 	db	13
  1275  007A56  0A                 	db	10
  1276  007A57  00                 	db	0
  1277  007A58                     STR_255:
  1278  007A58  73                 	db	115	;'s'
  1279  007A59  79                 	db	121	;'y'
  1280  007A5A  73                 	db	115	;'s'
  1281  007A5B  20                 	db	32
  1282  007A5C  73                 	db	115	;'s'
  1283  007A5D  65                 	db	101	;'e'
  1284  007A5E  74                 	db	116	;'t'
  1285  007A5F  20                 	db	32
  1286  007A60  70                 	db	112	;'p'
  1287  007A61  69                 	db	105	;'i'
  1288  007A62  6E                 	db	110	;'n'
  1289  007A63  64                 	db	100	;'d'
  1290  007A64  69                 	db	105	;'i'
  1291  007A65  67                 	db	103	;'g'
  1292  007A66  20                 	db	32
  1293  007A67  47                 	db	71	;'G'
  1294  007A68  50                 	db	80	;'P'
  1295  007A69  49                 	db	73	;'I'
  1296  007A6A  4F                 	db	79	;'O'
  1297  007A6B  31                 	db	49	;'1'
  1298  007A6C  31                 	db	49	;'1'
  1299  007A6D  20                 	db	32
  1300  007A6E  31                 	db	49	;'1'
  1301  007A6F  0D                 	db	13
  1302  007A70  0A                 	db	10
  1303  007A71  00                 	db	0
  1304  007A72                     STR_22:
  1305  007A72  73                 	db	115	;'s'
  1306  007A73  79                 	db	121	;'y'
  1307  007A74  73                 	db	115	;'s'
  1308  007A75  20                 	db	32
  1309  007A76  73                 	db	115	;'s'
  1310  007A77  6C                 	db	108	;'l'
  1311  007A78  65                 	db	101	;'e'
  1312  007A79  65                 	db	101	;'e'
  1313  007A7A  70                 	db	112	;'p'
  1314  007A7B  20                 	db	32
  1315  007A7C  39                 	db	57	;'9'
  1316  007A7D  39                 	db	57	;'9'
  1317  007A7E  39                 	db	57	;'9'
  1318  007A7F  39                 	db	57	;'9'
  1319  007A80  39                 	db	57	;'9'
  1320  007A81  39                 	db	57	;'9'
  1321  007A82  39                 	db	57	;'9'
  1322  007A83  39                 	db	57	;'9'
  1323  007A84  39                 	db	57	;'9'
  1324  007A85  00                 	db	0
  1325  007A86                     STR_205:
  1326  007A86  28                 	db	40
  1327  007A87  55                 	db	85	;'U'
  1328  007A88  4E                 	db	78	;'N'
  1329  007A89  43                 	db	67	;'C'
  1330  007A8A  4E                 	db	78	;'N'
  1331  007A8B  46                 	db	70	;'F'
  1332  007A8C  29                 	db	41
  1333  007A8D  20                 	db	32
  1334  007A8E  20                 	db	32
  1335  007A8F  20                 	db	32
  1336  007A90  20                 	db	32
  1337  007A91  28                 	db	40
  1338  007A92  43                 	db	67	;'C'
  1339  007A93  4E                 	db	78	;'N'
  1340  007A94  46                 	db	70	;'F'
  1341  007A95  29                 	db	41
  1342  007A96  20                 	db	32
  1343  007A97  00                 	db	0
  1344  007A98                     STR_218:
  1345  007A98  4D                 	db	77	;'M'
  1346  007A99  61                 	db	97	;'a'
  1347  007A9A  63                 	db	99	;'c'
  1348  007A9B  20                 	db	32
  1349  007A9C  45                 	db	69	;'E'
  1350  007A9D  72                 	db	114	;'r'
  1351  007A9E  72                 	db	114	;'r'
  1352  007A9F  6F                 	db	111	;'o'
  1353  007AA0  72                 	db	114	;'r'
  1354  007AA1  20                 	db	32
  1355  007AA2  4F                 	db	79	;'O'
  1356  007AA3  63                 	db	99	;'c'
  1357  007AA4  63                 	db	99	;'c'
  1358  007AA5  75                 	db	117	;'u'
  1359  007AA6  72                 	db	114	;'r'
  1360  007AA7  65                 	db	101	;'e'
  1361  007AA8  64                 	db	100	;'d'
  1362  007AA9  00                 	db	0
  1363  007AAA                     STR_214:
  1364  007AAA  20                 	db	32
  1365  007AAB  20                 	db	32
  1366  007AAC  20                 	db	32
  1367  007AAD  20                 	db	32
  1368  007AAE  52                 	db	82	;'R'
  1369  007AAF  65                 	db	101	;'e'
  1370  007AB0  63                 	db	99	;'c'
  1371  007AB1  65                 	db	101	;'e'
  1372  007AB2  69                 	db	105	;'i'
  1373  007AB3  76                 	db	118	;'v'
  1374  007AB4  65                 	db	101	;'e'
  1375  007AB5  64                 	db	100	;'d'
  1376  007AB6  20                 	db	32
  1377  007AB7  20                 	db	32
  1378  007AB8  20                 	db	32
  1379  007AB9  20                 	db	32
  1380  007ABA  00                 	db	0
  1381  007ABB                     STR_84:
  1382  007ABB  20                 	db	32
  1383  007ABC  20                 	db	32
  1384  007ABD  20                 	db	32
  1385  007ABE  44                 	db	68	;'D'
  1386  007ABF  61                 	db	97	;'a'
  1387  007AC0  74                 	db	116	;'t'
  1388  007AC1  61                 	db	97	;'a'
  1389  007AC2  20                 	db	32
  1390  007AC3  52                 	db	82	;'R'
  1391  007AC4  61                 	db	97	;'a'
  1392  007AC5  74                 	db	116	;'t'
  1393  007AC6  65                 	db	101	;'e'
  1394  007AC7  20                 	db	32
  1395  007AC8  20                 	db	32
  1396  007AC9  20                 	db	32
  1397  007ACA  20                 	db	32
  1398  007ACB  00                 	db	0
  1399  007ACC                     STR_83:
  1400  007ACC  20                 	db	32
  1401  007ACD  20                 	db	32
  1402  007ACE  53                 	db	83	;'S'
  1403  007ACF  65                 	db	101	;'e'
  1404  007AD0  6C                 	db	108	;'l'
  1405  007AD1  65                 	db	101	;'e'
  1406  007AD2  63                 	db	99	;'c'
  1407  007AD3  74                 	db	116	;'t'
  1408  007AD4  20                 	db	32
  1409  007AD5  4C                 	db	76	;'L'
  1410  007AD6  6F                 	db	111	;'o'
  1411  007AD7  52                 	db	82	;'R'
  1412  007AD8  61                 	db	97	;'a'
  1413  007AD9  20                 	db	32
  1414  007ADA  20                 	db	32
  1415  007ADB  20                 	db	32
  1416  007ADC  00                 	db	0
  1417  007ADD                     STR_201:
  1418  007ADD  20                 	db	32
  1419  007ADE  20                 	db	32
  1420  007ADF  4C                 	db	76	;'L'
  1421  007AE0  61                 	db	97	;'a'
  1422  007AE1  73                 	db	115	;'s'
  1423  007AE2  74                 	db	116	;'t'
  1424  007AE3  20                 	db	32
  1425  007AE4  4D                 	db	77	;'M'
  1426  007AE5  65                 	db	101	;'e'
  1427  007AE6  73                 	db	115	;'s'
  1428  007AE7  73                 	db	115	;'s'
  1429  007AE8  61                 	db	97	;'a'
  1430  007AE9  67                 	db	103	;'g'
  1431  007AEA  65                 	db	101	;'e'
  1432  007AEB  20                 	db	32
  1433  007AEC  20                 	db	32
  1434  007AED  00                 	db	0
  1435  007AEE                     STR_200:
  1436  007AEE  20                 	db	32
  1437  007AEF  56                 	db	86	;'V'
  1438  007AF0  69                 	db	105	;'i'
  1439  007AF1  65                 	db	101	;'e'
  1440  007AF2  77                 	db	119	;'w'
  1441  007AF3  20                 	db	32
  1442  007AF4  44                 	db	68	;'D'
  1443  007AF5  6F                 	db	111	;'o'
  1444  007AF6  77                 	db	119	;'w'
  1445  007AF7  6E                 	db	110	;'n'
  1446  007AF8  6C                 	db	108	;'l'
  1447  007AF9  69                 	db	105	;'i'
  1448  007AFA  6E                 	db	110	;'n'
  1449  007AFB  6B                 	db	107	;'k'
  1450  007AFC  20                 	db	32
  1451  007AFD  20                 	db	32
  1452  007AFE  00                 	db	0
  1453  007AFF                     STR_93:
  1454  007AFF  20                 	db	32
  1455  007B00  20                 	db	32
  1456  007B01  49                 	db	73	;'I'
  1457  007B02  73                 	db	115	;'s'
  1458  007B03  73                 	db	115	;'s'
  1459  007B04  75                 	db	117	;'u'
  1460  007B05  65                 	db	101	;'e'
  1461  007B06  20                 	db	32
  1462  007B07  55                 	db	85	;'U'
  1463  007B08  70                 	db	112	;'p'
  1464  007B09  6C                 	db	108	;'l'
  1465  007B0A  69                 	db	105	;'i'
  1466  007B0B  6E                 	db	110	;'n'
  1467  007B0C  6B                 	db	107	;'k'
  1468  007B0D  20                 	db	32
  1469  007B0E  20                 	db	32
  1470  007B0F  00                 	db	0
  1471  007B10                     STR_28:
  1472  007B10  20                 	db	32
  1473  007B11  28                 	db	40
  1474  007B12  53                 	db	83	;'S'
  1475  007B13  31                 	db	49	;'1'
  1476  007B14  29                 	db	41
  1477  007B15  20                 	db	32
  1478  007B16  20                 	db	32
  1479  007B17  20                 	db	32
  1480  007B18  20                 	db	32
  1481  007B19  20                 	db	32
  1482  007B1A  20                 	db	32
  1483  007B1B  28                 	db	40
  1484  007B1C  53                 	db	83	;'S'
  1485  007B1D  32                 	db	50	;'2'
  1486  007B1E  29                 	db	41
  1487  007B1F  20                 	db	32
  1488  007B20  00                 	db	0
  1489  007B21                     STR_213:
  1490  007B21  53                 	db	83	;'S'
  1491  007B22  65                 	db	101	;'e'
  1492  007B23  72                 	db	114	;'r'
  1493  007B24  76                 	db	118	;'v'
  1494  007B25  65                 	db	101	;'e'
  1495  007B26  72                 	db	114	;'r'
  1496  007B27  20                 	db	32
  1497  007B28  52                 	db	82	;'R'
  1498  007B29  65                 	db	101	;'e'
  1499  007B2A  73                 	db	115	;'s'
  1500  007B2B  70                 	db	112	;'p'
  1501  007B2C  6F                 	db	111	;'o'
  1502  007B2D  6E                 	db	110	;'n'
  1503  007B2E  73                 	db	115	;'s'
  1504  007B2F  65                 	db	101	;'e'
  1505  007B30  20                 	db	32
  1506  007B31  00                 	db	0
  1507  007B32                     STR_94:
  1508  007B32  20                 	db	32
  1509  007B33  4C                 	db	76	;'L'
  1510  007B34  6F                 	db	111	;'o'
  1511  007B35  52                 	db	82	;'R'
  1512  007B36  61                 	db	97	;'a'
  1513  007B37  57                 	db	87	;'W'
  1514  007B38  41                 	db	65	;'A'
  1515  007B39  4E                 	db	78	;'N'
  1516  007B3A  20                 	db	32
  1517  007B3B  50                 	db	80	;'P'
  1518  007B3C  61                 	db	97	;'a'
  1519  007B3D  63                 	db	99	;'c'
  1520  007B3E  6B                 	db	107	;'k'
  1521  007B3F  65                 	db	101	;'e'
  1522  007B40  74                 	db	116	;'t'
  1523  007B41  20                 	db	32
  1524  007B42  00                 	db	0
  1525  007B43                     STR_224:
  1526  007B43  20                 	db	32
  1527  007B44  54                 	db	84	;'T'
  1528  007B45  78                 	db	120	;'x'
  1529  007B46  20                 	db	32
  1530  007B47  53                 	db	83	;'S'
  1531  007B48  6C                 	db	108	;'l'
  1532  007B49  65                 	db	101	;'e'
  1533  007B4A  65                 	db	101	;'e'
  1534  007B4B  70                 	db	112	;'p'
  1535  007B4C  20                 	db	32
  1536  007B4D  45                 	db	69	;'E'
  1537  007B4E  76                 	db	118	;'v'
  1538  007B4F  65                 	db	101	;'e'
  1539  007B50  6E                 	db	110	;'n'
  1540  007B51  74                 	db	116	;'t'
  1541  007B52  20                 	db	32
  1542  007B53  00                 	db	0
  1543  007B54                     STR_25:
  1544  007B54  52                 	db	82	;'R'
  1545  007B55  65                 	db	101	;'e'
  1546  007B56  52                 	db	82	;'R'
  1547  007B57  75                 	db	117	;'u'
  1548  007B58  6E                 	db	110	;'n'
  1549  007B59  20                 	db	32
  1550  007B5A  50                 	db	80	;'P'
  1551  007B5B  77                 	db	119	;'w'
  1552  007B5C  72                 	db	114	;'r'
  1553  007B5D  54                 	db	84	;'T'
  1554  007B5E  73                 	db	115	;'s'
  1555  007B5F  74                 	db	116	;'t'
  1556  007B60  3C                 	db	60	;'<'
  1557  007B61  53                 	db	83	;'S'
  1558  007B62  32                 	db	50	;'2'
  1559  007B63  3E                 	db	62	;'>'
  1560  007B64  00                 	db	0
  1561  007B65                     STR_72:
  1562  007B65  49                 	db	73	;'I'
  1563  007B66  73                 	db	115	;'s'
  1564  007B67  73                 	db	115	;'s'
  1565  007B68  75                 	db	117	;'u'
  1566  007B69  65                 	db	101	;'e'
  1567  007B6A  20                 	db	32
  1568  007B6B  50                 	db	80	;'P'
  1569  007B6C  65                 	db	101	;'e'
  1570  007B6D  72                 	db	114	;'r'
  1571  007B6E  6F                 	db	111	;'o'
  1572  007B6F  64                 	db	100	;'d'
  1573  007B70  69                 	db	105	;'i'
  1574  007B71  63                 	db	99	;'c'
  1575  007B72  20                 	db	32
  1576  007B73  54                 	db	84	;'T'
  1577  007B74  58                 	db	88	;'X'
  1578  007B75  00                 	db	0
  1579  007B76                     STR_216:
  1580  007B76  44                 	db	68	;'D'
  1581  007B77  61                 	db	97	;'a'
  1582  007B78  74                 	db	116	;'t'
  1583  007B79  61                 	db	97	;'a'
  1584  007B7A  20                 	db	32
  1585  007B7B  54                 	db	84	;'T'
  1586  007B7C  72                 	db	114	;'r'
  1587  007B7D  61                 	db	97	;'a'
  1588  007B7E  6E                 	db	110	;'n'
  1589  007B7F  73                 	db	115	;'s'
  1590  007B80  6D                 	db	109	;'m'
  1591  007B81  69                 	db	105	;'i'
  1592  007B82  74                 	db	116	;'t'
  1593  007B83  74                 	db	116	;'t'
  1594  007B84  65                 	db	101	;'e'
  1595  007B85  64                 	db	100	;'d'
  1596  007B86  00                 	db	0
  1597  007B87                     STR_235:
  1598  007B87  45                 	db	69	;'E'
  1599  007B88  6E                 	db	110	;'n'
  1600  007B89  74                 	db	116	;'t'
  1601  007B8A  65                 	db	101	;'e'
  1602  007B8B  72                 	db	114	;'r'
  1603  007B8C  20                 	db	32
  1604  007B8D  53                 	db	83	;'S'
  1605  007B8E  6C                 	db	108	;'l'
  1606  007B8F  65                 	db	101	;'e'
  1607  007B90  65                 	db	101	;'e'
  1608  007B91  70                 	db	112	;'p'
  1609  007B92  20                 	db	32
  1610  007B93  4D                 	db	77	;'M'
  1611  007B94  6F                 	db	111	;'o'
  1612  007B95  64                 	db	100	;'d'
  1613  007B96  65                 	db	101	;'e'
  1614  007B97  00                 	db	0
  1615  007B98                     STR_203:
  1616  007B98  55                 	db	85	;'U'
  1617  007B99  70                 	db	112	;'p'
  1618  007B9A  6C                 	db	108	;'l'
  1619  007B9B  69                 	db	105	;'i'
  1620  007B9C  6E                 	db	110	;'n'
  1621  007B9D  6B                 	db	107	;'k'
  1622  007B9E  20                 	db	32
  1623  007B9F  50                 	db	80	;'P'
  1624  007BA0  63                 	db	99	;'c'
  1625  007BA1  6B                 	db	107	;'k'
  1626  007BA2  74                 	db	116	;'t'
  1627  007BA3  20                 	db	32
  1628  007BA4  54                 	db	84	;'T'
  1629  007BA5  79                 	db	121	;'y'
  1630  007BA6  70                 	db	112	;'p'
  1631  007BA7  65                 	db	101	;'e'
  1632  007BA8  00                 	db	0
  1633  007BA9                     STR_26:
  1634  007BA9  4D                 	db	77	;'M'
  1635  007BAA  6F                 	db	111	;'o'
  1636  007BAB  62                 	db	98	;'b'
  1637  007BAC  69                 	db	105	;'i'
  1638  007BAD  6C                 	db	108	;'l'
  1639  007BAE  65                 	db	101	;'e'
  1640  007BAF  20                 	db	32
  1641  007BB0  4D                 	db	77	;'M'
  1642  007BB1  6F                 	db	111	;'o'
  1643  007BB2  74                 	db	116	;'t'
  1644  007BB3  65                 	db	101	;'e'
  1645  007BB4  20                 	db	32
  1646  007BB5  2D                 	db	45
  1647  007BB6  41                 	db	65	;'A'
  1648  007BB7  70                 	db	112	;'p'
  1649  007BB8  70                 	db	112	;'p'
  1650  007BB9  00                 	db	0
  1651  007BBA                     STR_27:
  1652  007BBA  4E                 	db	78	;'N'
  1653  007BBB  61                 	db	97	;'a'
  1654  007BBC  76                 	db	118	;'v'
  1655  007BBD  69                 	db	105	;'i'
  1656  007BBE  67                 	db	103	;'g'
  1657  007BBF  61                 	db	97	;'a'
  1658  007BC0  74                 	db	116	;'t'
  1659  007BC1  65                 	db	101	;'e'
  1660  007BC2  20                 	db	32
  1661  007BC3  20                 	db	32
  1662  007BC4  53                 	db	83	;'S'
  1663  007BC5  65                 	db	101	;'e'
  1664  007BC6  6C                 	db	108	;'l'
  1665  007BC7  65                 	db	101	;'e'
  1666  007BC8  63                 	db	99	;'c'
  1667  007BC9  74                 	db	116	;'t'
  1668  007BCA  00                 	db	0
  1669  007BCB                     STR_228:
  1670  007BCB  44                 	db	68	;'D'
  1671  007BCC  6F                 	db	111	;'o'
  1672  007BCD  77                 	db	119	;'w'
  1673  007BCE  6E                 	db	110	;'n'
  1674  007BCF  6C                 	db	108	;'l'
  1675  007BD0  69                 	db	105	;'i'
  1676  007BD1  6E                 	db	110	;'n'
  1677  007BD2  6B                 	db	107	;'k'
  1678  007BD3  20                 	db	32
  1679  007BD4  44                 	db	68	;'D'
  1680  007BD5  69                 	db	105	;'i'
  1681  007BD6  73                 	db	115	;'s'
  1682  007BD7  70                 	db	112	;'p'
  1683  007BD8  6C                 	db	108	;'l'
  1684  007BD9  61                 	db	97	;'a'
  1685  007BDA  79                 	db	121	;'y'
  1686  007BDB  00                 	db	0
  1687  007BDC                     STR_81:
  1688  007BDC  20                 	db	32
  1689  007BDD  20                 	db	32
  1690  007BDE  20                 	db	32
  1691  007BDF  20                 	db	32
  1692  007BE0  44                 	db	68	;'D'
  1693  007BE1  69                 	db	105	;'i'
  1694  007BE2  73                 	db	115	;'s'
  1695  007BE3  70                 	db	112	;'p'
  1696  007BE4  6C                 	db	108	;'l'
  1697  007BE5  61                 	db	97	;'a'
  1698  007BE6  79                 	db	121	;'y'
  1699  007BE7  20                 	db	32
  1700  007BE8  20                 	db	32
  1701  007BE9  20                 	db	32
  1702  007BEA  20                 	db	32
  1703  007BEB  00                 	db	0
  1704  007BEC                     STR_80:
  1705  007BEC  20                 	db	32
  1706  007BED  20                 	db	32
  1707  007BEE  53                 	db	83	;'S'
  1708  007BEF  65                 	db	101	;'e'
  1709  007BF0  6E                 	db	110	;'n'
  1710  007BF1  73                 	db	115	;'s'
  1711  007BF2  6F                 	db	111	;'o'
  1712  007BF3  72                 	db	114	;'r'
  1713  007BF4  20                 	db	32
  1714  007BF5  44                 	db	68	;'D'
  1715  007BF6  61                 	db	97	;'a'
  1716  007BF7  74                 	db	116	;'t'
  1717  007BF8  61                 	db	97	;'a'
  1718  007BF9  20                 	db	32
  1719  007BFA  20                 	db	32
  1720  007BFB  00                 	db	0
  1721  007BFC                     STR_75:
  1722  007BFC  28                 	db	40
  1723  007BFD  4E                 	db	78	;'N'
  1724  007BFE  41                 	db	65	;'A'
  1725  007BFF  56                 	db	86	;'V'
  1726  007C00  29                 	db	41
  1727  007C01  20                 	db	32
  1728  007C02  20                 	db	32
  1729  007C03  20                 	db	32
  1730  007C04  20                 	db	32
  1731  007C05  28                 	db	40
  1732  007C06  53                 	db	83	;'S'
  1733  007C07  45                 	db	69	;'E'
  1734  007C08  4C                 	db	76	;'L'
  1735  007C09  29                 	db	41
  1736  007C0A  20                 	db	32
  1737  007C0B  00                 	db	0
  1738  007C0C                     STR_236:
  1739  007C0C  28                 	db	40
  1740  007C0D  4E                 	db	78	;'N'
  1741  007C0E  41                 	db	65	;'A'
  1742  007C0F  56                 	db	86	;'V'
  1743  007C10  29                 	db	41
  1744  007C11  20                 	db	32
  1745  007C12  20                 	db	32
  1746  007C13  20                 	db	32
  1747  007C14  20                 	db	32
  1748  007C15  28                 	db	40
  1749  007C16  53                 	db	83	;'S'
  1750  007C17  4C                 	db	76	;'L'
  1751  007C18  50                 	db	80	;'P'
  1752  007C19  29                 	db	41
  1753  007C1A  20                 	db	32
  1754  007C1B  00                 	db	0
  1755  007C1C                     STR_243:
  1756  007C1C  6D                 	db	109	;'m'
  1757  007C1D  61                 	db	97	;'a'
  1758  007C1E  63                 	db	99	;'c'
  1759  007C1F  20                 	db	32
  1760  007C20  73                 	db	115	;'s'
  1761  007C21  65                 	db	101	;'e'
  1762  007C22  74                 	db	116	;'t'
  1763  007C23  20                 	db	32
  1764  007C24  61                 	db	97	;'a'
  1765  007C25  64                 	db	100	;'d'
  1766  007C26  72                 	db	114	;'r'
  1767  007C27  20                 	db	32
  1768  007C28  6F                 	db	111	;'o'
  1769  007C29  66                 	db	102	;'f'
  1770  007C2A  66                 	db	102	;'f'
  1771  007C2B  00                 	db	0
  1772  007C2C                     STR_220:
  1773  007C2C  4E                 	db	78	;'N'
  1774  007C2D  6F                 	db	111	;'o'
  1775  007C2E  20                 	db	32
  1776  007C2F  46                 	db	70	;'F'
  1777  007C30  72                 	db	114	;'r'
  1778  007C31  65                 	db	101	;'e'
  1779  007C32  65                 	db	101	;'e'
  1780  007C33  20                 	db	32
  1781  007C34  43                 	db	67	;'C'
  1782  007C35  68                 	db	104	;'h'
  1783  007C36  61                 	db	97	;'a'
  1784  007C37  6E                 	db	110	;'n'
  1785  007C38  6E                 	db	110	;'n'
  1786  007C39  65                 	db	101	;'e'
  1787  007C3A  6C                 	db	108	;'l'
  1788  007C3B  00                 	db	0
  1789  007C3C                     STR_7:
  1790  007C3C  42                 	db	66	;'B'
  1791  007C3D  75                 	db	117	;'u'
  1792  007C3E  69                 	db	105	;'i'
  1793  007C3F  6C                 	db	108	;'l'
  1794  007C40  64                 	db	100	;'d'
  1795  007C41  20                 	db	32
  1796  007C42  44                 	db	68	;'D'
  1797  007C43  61                 	db	97	;'a'
  1798  007C44  74                 	db	116	;'t'
  1799  007C45  65                 	db	101	;'e'
  1800  007C46  2F                 	db	47
  1801  007C47  54                 	db	84	;'T'
  1802  007C48  69                 	db	105	;'i'
  1803  007C49  6D                 	db	109	;'m'
  1804  007C4A  65                 	db	101	;'e'
  1805  007C4B  00                 	db	0
  1806  007C4C                     STR_163:
  1807  007C4C  45                 	db	69	;'E'
  1808  007C4D  78                 	db	120	;'x'
  1809  007C4E  69                 	db	105	;'i'
  1810  007C4F  74                 	db	116	;'t'
  1811  007C50  20                 	db	32
  1812  007C51  4D                 	db	77	;'M'
  1813  007C52  65                 	db	101	;'e'
  1814  007C53  6E                 	db	110	;'n'
  1815  007C54  75                 	db	117	;'u'
  1816  007C55  20                 	db	32
  1817  007C56  20                 	db	32
  1818  007C57  20                 	db	32
  1819  007C58  20                 	db	32
  1820  007C59  20                 	db	32
  1821  007C5A  00                 	db	0
  1822  007C5B                     STR_225:
  1823  007C5B  20                 	db	32
  1824  007C5C  20                 	db	32
  1825  007C5D  20                 	db	32
  1826  007C5E  20                 	db	32
  1827  007C5F  45                 	db	69	;'E'
  1828  007C60  6E                 	db	110	;'n'
  1829  007C61  61                 	db	97	;'a'
  1830  007C62  62                 	db	98	;'b'
  1831  007C63  6C                 	db	108	;'l'
  1832  007C64  65                 	db	101	;'e'
  1833  007C65  64                 	db	100	;'d'
  1834  007C66  20                 	db	32
  1835  007C67  20                 	db	32
  1836  007C68  20                 	db	32
  1837  007C69  00                 	db	0
  1838  007C6A                     STR_226:
  1839  007C6A  20                 	db	32
  1840  007C6B  20                 	db	32
  1841  007C6C  20                 	db	32
  1842  007C6D  20                 	db	32
  1843  007C6E  44                 	db	68	;'D'
  1844  007C6F  69                 	db	105	;'i'
  1845  007C70  73                 	db	115	;'s'
  1846  007C71  61                 	db	97	;'a'
  1847  007C72  62                 	db	98	;'b'
  1848  007C73  6C                 	db	108	;'l'
  1849  007C74  65                 	db	101	;'e'
  1850  007C75  64                 	db	100	;'d'
  1851  007C76  20                 	db	32
  1852  007C77  20                 	db	32
  1853  007C78  00                 	db	0
  1854  007C79                     STR_97:
  1855  007C79  44                 	db	68	;'D'
  1856  007C7A  61                 	db	97	;'a'
  1857  007C7B  74                 	db	116	;'t'
  1858  007C7C  61                 	db	97	;'a'
  1859  007C7D  20                 	db	32
  1860  007C7E  52                 	db	82	;'R'
  1861  007C7F  61                 	db	97	;'a'
  1862  007C80  74                 	db	116	;'t'
  1863  007C81  65                 	db	101	;'e'
  1864  007C82  3A                 	db	58	;':'
  1865  007C83  20                 	db	32
  1866  007C84  20                 	db	32
  1867  007C85  20                 	db	32
  1868  007C86  30                 	db	48	;'0'
  1869  007C87  00                 	db	0
  1870  007C88                     STR_98:
  1871  007C88  44                 	db	68	;'D'
  1872  007C89  61                 	db	97	;'a'
  1873  007C8A  74                 	db	116	;'t'
  1874  007C8B  61                 	db	97	;'a'
  1875  007C8C  20                 	db	32
  1876  007C8D  52                 	db	82	;'R'
  1877  007C8E  61                 	db	97	;'a'
  1878  007C8F  74                 	db	116	;'t'
  1879  007C90  65                 	db	101	;'e'
  1880  007C91  3A                 	db	58	;':'
  1881  007C92  20                 	db	32
  1882  007C93  20                 	db	32
  1883  007C94  20                 	db	32
  1884  007C95  31                 	db	49	;'1'
  1885  007C96  00                 	db	0
  1886  007C97                     STR_99:
  1887  007C97  44                 	db	68	;'D'
  1888  007C98  61                 	db	97	;'a'
  1889  007C99  74                 	db	116	;'t'
  1890  007C9A  61                 	db	97	;'a'
  1891  007C9B  20                 	db	32
  1892  007C9C  52                 	db	82	;'R'
  1893  007C9D  61                 	db	97	;'a'
  1894  007C9E  74                 	db	116	;'t'
  1895  007C9F  65                 	db	101	;'e'
  1896  007CA0  3A                 	db	58	;':'
  1897  007CA1  20                 	db	32
  1898  007CA2  20                 	db	32
  1899  007CA3  20                 	db	32
  1900  007CA4  32                 	db	50	;'2'
  1901  007CA5  00                 	db	0
  1902  007CA6                     STR_100:
  1903  007CA6  44                 	db	68	;'D'
  1904  007CA7  61                 	db	97	;'a'
  1905  007CA8  74                 	db	116	;'t'
  1906  007CA9  61                 	db	97	;'a'
  1907  007CAA  20                 	db	32
  1908  007CAB  52                 	db	82	;'R'
  1909  007CAC  61                 	db	97	;'a'
  1910  007CAD  74                 	db	116	;'t'
  1911  007CAE  65                 	db	101	;'e'
  1912  007CAF  3A                 	db	58	;':'
  1913  007CB0  20                 	db	32
  1914  007CB1  20                 	db	32
  1915  007CB2  20                 	db	32
  1916  007CB3  33                 	db	51	;'3'
  1917  007CB4  00                 	db	0
  1918  007CB5                     STR_118:
  1919  007CB5  44                 	db	68	;'D'
  1920  007CB6  61                 	db	97	;'a'
  1921  007CB7  74                 	db	116	;'t'
  1922  007CB8  61                 	db	97	;'a'
  1923  007CB9  20                 	db	32
  1924  007CBA  52                 	db	82	;'R'
  1925  007CBB  61                 	db	97	;'a'
  1926  007CBC  74                 	db	116	;'t'
  1927  007CBD  65                 	db	101	;'e'
  1928  007CBE  3A                 	db	58	;':'
  1929  007CBF  20                 	db	32
  1930  007CC0  20                 	db	32
  1931  007CC1  20                 	db	32
  1932  007CC2  34                 	db	52	;'4'
  1933  007CC3  00                 	db	0
  1934  007CC4                     STR_127:
  1935  007CC4  44                 	db	68	;'D'
  1936  007CC5  61                 	db	97	;'a'
  1937  007CC6  74                 	db	116	;'t'
  1938  007CC7  61                 	db	97	;'a'
  1939  007CC8  20                 	db	32
  1940  007CC9  52                 	db	82	;'R'
  1941  007CCA  61                 	db	97	;'a'
  1942  007CCB  74                 	db	116	;'t'
  1943  007CCC  65                 	db	101	;'e'
  1944  007CCD  3A                 	db	58	;':'
  1945  007CCE  20                 	db	32
  1946  007CCF  20                 	db	32
  1947  007CD0  20                 	db	32
  1948  007CD1  35                 	db	53	;'5'
  1949  007CD2  00                 	db	0
  1950  007CD3                     STR_136:
  1951  007CD3  44                 	db	68	;'D'
  1952  007CD4  61                 	db	97	;'a'
  1953  007CD5  74                 	db	116	;'t'
  1954  007CD6  61                 	db	97	;'a'
  1955  007CD7  20                 	db	32
  1956  007CD8  52                 	db	82	;'R'
  1957  007CD9  61                 	db	97	;'a'
  1958  007CDA  74                 	db	116	;'t'
  1959  007CDB  65                 	db	101	;'e'
  1960  007CDC  3A                 	db	58	;':'
  1961  007CDD  20                 	db	32
  1962  007CDE  20                 	db	32
  1963  007CDF  20                 	db	32
  1964  007CE0  36                 	db	54	;'6'
  1965  007CE1  00                 	db	0
  1966  007CE2                     STR_145:
  1967  007CE2  44                 	db	68	;'D'
  1968  007CE3  61                 	db	97	;'a'
  1969  007CE4  74                 	db	116	;'t'
  1970  007CE5  61                 	db	97	;'a'
  1971  007CE6  20                 	db	32
  1972  007CE7  52                 	db	82	;'R'
  1973  007CE8  61                 	db	97	;'a'
  1974  007CE9  74                 	db	116	;'t'
  1975  007CEA  65                 	db	101	;'e'
  1976  007CEB  3A                 	db	58	;':'
  1977  007CEC  20                 	db	32
  1978  007CED  20                 	db	32
  1979  007CEE  20                 	db	32
  1980  007CEF  37                 	db	55	;'7'
  1981  007CF0  00                 	db	0
  1982  007CF1                     STR_154:
  1983  007CF1  41                 	db	65	;'A'
  1984  007CF2  75                 	db	117	;'u'
  1985  007CF3  74                 	db	116	;'t'
  1986  007CF4  6F                 	db	111	;'o'
  1987  007CF5  20                 	db	32
  1988  007CF6  44                 	db	68	;'D'
  1989  007CF7  61                 	db	97	;'a'
  1990  007CF8  74                 	db	116	;'t'
  1991  007CF9  61                 	db	97	;'a'
  1992  007CFA  20                 	db	32
  1993  007CFB  52                 	db	82	;'R'
  1994  007CFC  61                 	db	97	;'a'
  1995  007CFD  74                 	db	116	;'t'
  1996  007CFE  65                 	db	101	;'e'
  1997  007CFF  00                 	db	0
  1998  007D00                     STR_242:
  1999  007D00  6D                 	db	109	;'m'
  2000  007D01  61                 	db	97	;'a'
  2001  007D02  63                 	db	99	;'c'
  2002  007D03  20                 	db	32
  2003  007D04  73                 	db	115	;'s'
  2004  007D05  65                 	db	101	;'e'
  2005  007D06  74                 	db	116	;'t'
  2006  007D07  20                 	db	32
  2007  007D08  61                 	db	97	;'a'
  2008  007D09  64                 	db	100	;'d'
  2009  007D0A  72                 	db	114	;'r'
  2010  007D0B  20                 	db	32
  2011  007D0C  6F                 	db	111	;'o'
  2012  007D0D  6E                 	db	110	;'n'
  2013  007D0E  00                 	db	0
  2014  007D0F                     STR_3:
  2015  007D0F  20                 	db	32
  2016  007D10  20                 	db	32
  2017  007D11  20                 	db	32
  2018  007D12  52                 	db	82	;'R'
  2019  007D13  43                 	db	67	;'C'
  2020  007D14  33                 	db	51	;'3'
  2021  007D15  20                 	db	32
  2022  007D16  43                 	db	67	;'C'
  2023  007D17  6F                 	db	111	;'o'
  2024  007D18  64                 	db	100	;'d'
  2025  007D19  65                 	db	101	;'e'
  2026  007D1A  20                 	db	32
  2027  007D1B  20                 	db	32
  2028  007D1C  20                 	db	32
  2029  007D1D  00                 	db	0
  2030  007D1E                     STR_2:
  2031  007D1E  20                 	db	32
  2032  007D1F  20                 	db	32
  2033  007D20  20                 	db	32
  2034  007D21  4C                 	db	76	;'L'
  2035  007D22  6F                 	db	111	;'o'
  2036  007D23  52                 	db	82	;'R'
  2037  007D24  61                 	db	97	;'a'
  2038  007D25  20                 	db	32
  2039  007D26  44                 	db	68	;'D'
  2040  007D27  65                 	db	101	;'e'
  2041  007D28  6D                 	db	109	;'m'
  2042  007D29  6F                 	db	111	;'o'
  2043  007D2A  20                 	db	32
  2044  007D2B  20                 	db	32
  2045  007D2C  00                 	db	0
  2046  007D2D                     STR_1:
  2047  007D2D  4D                 	db	77	;'M'
  2048  007D2E  69                 	db	105	;'i'
  2049  007D2F  63                 	db	99	;'c'
  2050  007D30  72                 	db	114	;'r'
  2051  007D31  6F                 	db	111	;'o'
  2052  007D32  63                 	db	99	;'c'
  2053  007D33  68                 	db	104	;'h'
  2054  007D34  69                 	db	105	;'i'
  2055  007D35  70                 	db	112	;'p'
  2056  007D36  20                 	db	32
  2057  007D37  4D                 	db	77	;'M'
  2058  007D38  6F                 	db	111	;'o'
  2059  007D39  74                 	db	116	;'t'
  2060  007D3A  65                 	db	101	;'e'
  2061  007D3B  00                 	db	0
  2062  007D3C                     STR_79:
  2063  007D3C  6D                 	db	109	;'m'
  2064  007D3D  61                 	db	97	;'a'
  2065  007D3E  63                 	db	99	;'c'
  2066  007D3F  20                 	db	32
  2067  007D40  74                 	db	116	;'t'
  2068  007D41  78                 	db	120	;'x'
  2069  007D42  20                 	db	32
  2070  007D43  75                 	db	117	;'u'
  2071  007D44  6E                 	db	110	;'n'
  2072  007D45  63                 	db	99	;'c'
  2073  007D46  6E                 	db	110	;'n'
  2074  007D47  66                 	db	102	;'f'
  2075  007D48  20                 	db	32
  2076  007D49  00                 	db	0
  2077  007D4A                     STR_38:
  2078  007D4A  6D                 	db	109	;'m'
  2079  007D4B  61                 	db	97	;'a'
  2080  007D4C  63                 	db	99	;'c'
  2081  007D4D  20                 	db	32
  2082  007D4E  6A                 	db	106	;'j'
  2083  007D4F  6F                 	db	111	;'o'
  2084  007D50  69                 	db	105	;'i'
  2085  007D51  6E                 	db	110	;'n'
  2086  007D52  20                 	db	32
  2087  007D53  6F                 	db	111	;'o'
  2088  007D54  74                 	db	116	;'t'
  2089  007D55  61                 	db	97	;'a'
  2090  007D56  61                 	db	97	;'a'
  2091  007D57  00                 	db	0
  2092  007D58                     STR_50:
  2093  007D58  69                 	db	105	;'i'
  2094  007D59  6E                 	db	110	;'n'
  2095  007D5A  76                 	db	118	;'v'
  2096  007D5B  61                 	db	97	;'a'
  2097  007D5C  6C                 	db	108	;'l'
  2098  007D5D  69                 	db	105	;'i'
  2099  007D5E  64                 	db	100	;'d'
  2100  007D5F  5F                 	db	95	;'_'
  2101  007D60  70                 	db	112	;'p'
  2102  007D61  61                 	db	97	;'a'
  2103  007D62  72                 	db	114	;'r'
  2104  007D63  61                 	db	97	;'a'
  2105  007D64  6D                 	db	109	;'m'
  2106  007D65  00                 	db	0
  2107  007D66                     STR_33:
  2108  007D66  6B                 	db	107	;'k'
  2109  007D67  65                 	db	101	;'e'
  2110  007D68  79                 	db	121	;'y'
  2111  007D69  73                 	db	115	;'s'
  2112  007D6A  5F                 	db	95	;'_'
  2113  007D6B  6E                 	db	110	;'n'
  2114  007D6C  6F                 	db	111	;'o'
  2115  007D6D  74                 	db	116	;'t'
  2116  007D6E  5F                 	db	95	;'_'
  2117  007D6F  69                 	db	105	;'i'
  2118  007D70  6E                 	db	110	;'n'
  2119  007D71  69                 	db	105	;'i'
  2120  007D72  74                 	db	116	;'t'
  2121  007D73  00                 	db	0
  2122  007D74                     STR_204:
  2123  007D74  54                 	db	84	;'T'
  2124  007D75  68                 	db	104	;'h'
  2125  007D76  72                 	db	114	;'r'
  2126  007D77  6F                 	db	111	;'o'
  2127  007D78  75                 	db	117	;'u'
  2128  007D79  20                 	db	32
  2129  007D7A  50                 	db	80	;'P'
  2130  007D7B  6F                 	db	111	;'o'
  2131  007D7C  72                 	db	114	;'r'
  2132  007D7D  74                 	db	116	;'t'
  2133  007D7E  23                 	db	35
  2134  007D7F  20                 	db	32
  2135  007D80  00                 	db	0
  2136  007D81                     STR_74:
  2137  007D81  4C                 	db	76	;'L'
  2138  007D82  3A                 	db	58	;':'
  2139  007D83  20                 	db	32
  2140  007D84  20                 	db	32
  2141  007D85  20                 	db	32
  2142  007D86  20                 	db	32
  2143  007D87  20                 	db	32
  2144  007D88  20                 	db	32
  2145  007D89  20                 	db	32
  2146  007D8A  54                 	db	84	;'T'
  2147  007D8B  3A                 	db	58	;':'
  2148  007D8C  20                 	db	32
  2149  007D8D  00                 	db	0
  2150  007D8E                     STR_244:
  2151  007D8E  6D                 	db	109	;'m'
  2152  007D8F  61                 	db	97	;'a'
  2153  007D90  63                 	db	99	;'c'
  2154  007D91  20                 	db	32
  2155  007D92  73                 	db	115	;'s'
  2156  007D93  65                 	db	101	;'e'
  2157  007D94  74                 	db	116	;'t'
  2158  007D95  20                 	db	32
  2159  007D96  64                 	db	100	;'d'
  2160  007D97  72                 	db	114	;'r'
  2161  007D98  20                 	db	32
  2162  007D99  30                 	db	48	;'0'
  2163  007D9A  00                 	db	0
  2164  007D9B                     STR_245:
  2165  007D9B  6D                 	db	109	;'m'
  2166  007D9C  61                 	db	97	;'a'
  2167  007D9D  63                 	db	99	;'c'
  2168  007D9E  20                 	db	32
  2169  007D9F  73                 	db	115	;'s'
  2170  007DA0  65                 	db	101	;'e'
  2171  007DA1  74                 	db	116	;'t'
  2172  007DA2  20                 	db	32
  2173  007DA3  64                 	db	100	;'d'
  2174  007DA4  72                 	db	114	;'r'
  2175  007DA5  20                 	db	32
  2176  007DA6  31                 	db	49	;'1'
  2177  007DA7  00                 	db	0
  2178  007DA8                     STR_246:
  2179  007DA8  6D                 	db	109	;'m'
  2180  007DA9  61                 	db	97	;'a'
  2181  007DAA  63                 	db	99	;'c'
  2182  007DAB  20                 	db	32
  2183  007DAC  73                 	db	115	;'s'
  2184  007DAD  65                 	db	101	;'e'
  2185  007DAE  74                 	db	116	;'t'
  2186  007DAF  20                 	db	32
  2187  007DB0  64                 	db	100	;'d'
  2188  007DB1  72                 	db	114	;'r'
  2189  007DB2  20                 	db	32
  2190  007DB3  32                 	db	50	;'2'
  2191  007DB4  00                 	db	0
  2192  007DB5                     STR_247:
  2193  007DB5  6D                 	db	109	;'m'
  2194  007DB6  61                 	db	97	;'a'
  2195  007DB7  63                 	db	99	;'c'
  2196  007DB8  20                 	db	32
  2197  007DB9  73                 	db	115	;'s'
  2198  007DBA  65                 	db	101	;'e'
  2199  007DBB  74                 	db	116	;'t'
  2200  007DBC  20                 	db	32
  2201  007DBD  64                 	db	100	;'d'
  2202  007DBE  72                 	db	114	;'r'
  2203  007DBF  20                 	db	32
  2204  007DC0  33                 	db	51	;'3'
  2205  007DC1  00                 	db	0
  2206  007DC2                     STR_248:
  2207  007DC2  6D                 	db	109	;'m'
  2208  007DC3  61                 	db	97	;'a'
  2209  007DC4  63                 	db	99	;'c'
  2210  007DC5  20                 	db	32
  2211  007DC6  73                 	db	115	;'s'
  2212  007DC7  65                 	db	101	;'e'
  2213  007DC8  74                 	db	116	;'t'
  2214  007DC9  20                 	db	32
  2215  007DCA  64                 	db	100	;'d'
  2216  007DCB  72                 	db	114	;'r'
  2217  007DCC  20                 	db	32
  2218  007DCD  34                 	db	52	;'4'
  2219  007DCE  00                 	db	0
  2220  007DCF                     STR_249:
  2221  007DCF  6D                 	db	109	;'m'
  2222  007DD0  61                 	db	97	;'a'
  2223  007DD1  63                 	db	99	;'c'
  2224  007DD2  20                 	db	32
  2225  007DD3  73                 	db	115	;'s'
  2226  007DD4  65                 	db	101	;'e'
  2227  007DD5  74                 	db	116	;'t'
  2228  007DD6  20                 	db	32
  2229  007DD7  64                 	db	100	;'d'
  2230  007DD8  72                 	db	114	;'r'
  2231  007DD9  20                 	db	32
  2232  007DDA  35                 	db	53	;'5'
  2233  007DDB  00                 	db	0
  2234  007DDC                     STR_250:
  2235  007DDC  6D                 	db	109	;'m'
  2236  007DDD  61                 	db	97	;'a'
  2237  007DDE  63                 	db	99	;'c'
  2238  007DDF  20                 	db	32
  2239  007DE0  73                 	db	115	;'s'
  2240  007DE1  65                 	db	101	;'e'
  2241  007DE2  74                 	db	116	;'t'
  2242  007DE3  20                 	db	32
  2243  007DE4  64                 	db	100	;'d'
  2244  007DE5  72                 	db	114	;'r'
  2245  007DE6  20                 	db	32
  2246  007DE7  36                 	db	54	;'6'
  2247  007DE8  00                 	db	0
  2248  007DE9                     STR_251:
  2249  007DE9  6D                 	db	109	;'m'
  2250  007DEA  61                 	db	97	;'a'
  2251  007DEB  63                 	db	99	;'c'
  2252  007DEC  20                 	db	32
  2253  007DED  73                 	db	115	;'s'
  2254  007DEE  65                 	db	101	;'e'
  2255  007DEF  74                 	db	116	;'t'
  2256  007DF0  20                 	db	32
  2257  007DF1  64                 	db	100	;'d'
  2258  007DF2  72                 	db	114	;'r'
  2259  007DF3  20                 	db	32
  2260  007DF4  37                 	db	55	;'7'
  2261  007DF5  00                 	db	0
  2262  007DF6                     STR_31:
  2263  007DF6  6D                 	db	109	;'m'
  2264  007DF7  61                 	db	97	;'a'
  2265  007DF8  63                 	db	99	;'c'
  2266  007DF9  20                 	db	32
  2267  007DFA  6A                 	db	106	;'j'
  2268  007DFB  6F                 	db	111	;'o'
  2269  007DFC  69                 	db	105	;'i'
  2270  007DFD  6E                 	db	110	;'n'
  2271  007DFE  20                 	db	32
  2272  007DFF  61                 	db	97	;'a'
  2273  007E00  62                 	db	98	;'b'
  2274  007E01  70                 	db	112	;'p'
  2275  007E02  00                 	db	0
  2276  007E03                     STR_10:
  2277  007E03  42                 	db	66	;'B'
  2278  007E04  75                 	db	117	;'u'
  2279  007E05  74                 	db	116	;'t'
  2280  007E06  74                 	db	116	;'t'
  2281  007E07  6F                 	db	111	;'o'
  2282  007E08  6E                 	db	110	;'n'
  2283  007E09  20                 	db	32
  2284  007E0A  54                 	db	84	;'T'
  2285  007E0B  65                 	db	101	;'e'
  2286  007E0C  73                 	db	115	;'s'
  2287  007E0D  74                 	db	116	;'t'
  2288  007E0E  3A                 	db	58	;':'
  2289  007E0F  00                 	db	0
  2290  007E10                     STR_13:
  2291  007E10  42                 	db	66	;'B'
  2292  007E11  75                 	db	117	;'u'
  2293  007E12  74                 	db	116	;'t'
  2294  007E13  74                 	db	116	;'t'
  2295  007E14  6F                 	db	111	;'o'
  2296  007E15  6E                 	db	110	;'n'
  2297  007E16  31                 	db	49	;'1'
  2298  007E17  20                 	db	32
  2299  007E18  50                 	db	80	;'P'
  2300  007E19  41                 	db	65	;'A'
  2301  007E1A  53                 	db	83	;'S'
  2302  007E1B  53                 	db	83	;'S'
  2303  007E1C  00                 	db	0
  2304  007E1D                     STR_14:
  2305  007E1D  42                 	db	66	;'B'
  2306  007E1E  75                 	db	117	;'u'
  2307  007E1F  74                 	db	116	;'t'
  2308  007E20  74                 	db	116	;'t'
  2309  007E21  6F                 	db	111	;'o'
  2310  007E22  6E                 	db	110	;'n'
  2311  007E23  32                 	db	50	;'2'
  2312  007E24  20                 	db	32
  2313  007E25  50                 	db	80	;'P'
  2314  007E26  41                 	db	65	;'A'
  2315  007E27  53                 	db	83	;'S'
  2316  007E28  53                 	db	83	;'S'
  2317  007E29  00                 	db	0
  2318  007E2A                     STR_12:
  2319  007E2A  50                 	db	80	;'P'
  2320  007E2B  72                 	db	114	;'r'
  2321  007E2C  65                 	db	101	;'e'
  2322  007E2D  73                 	db	115	;'s'
  2323  007E2E  73                 	db	115	;'s'
  2324  007E2F  20                 	db	32
  2325  007E30  42                 	db	66	;'B'
  2326  007E31  75                 	db	117	;'u'
  2327  007E32  74                 	db	116	;'t'
  2328  007E33  74                 	db	116	;'t'
  2329  007E34  6F                 	db	111	;'o'
  2330  007E35  6E                 	db	110	;'n'
  2331  007E36  00                 	db	0
  2332  007E37                     STR_260:
  2333  007E37  55                 	db	85	;'U'
  2334  007E38  53                 	db	83	;'S'
  2335  007E39  42                 	db	66	;'B'
  2336  007E3A  20                 	db	32
  2337  007E3B  48                 	db	72	;'H'
  2338  007E3C  61                 	db	97	;'a'
  2339  007E3D  6E                 	db	110	;'n'
  2340  007E3E  64                 	db	100	;'d'
  2341  007E3F  6C                 	db	108	;'l'
  2342  007E40  65                 	db	101	;'e'
  2343  007E41  72                 	db	114	;'r'
  2344  007E42  00                 	db	0
  2345  007E43                     STR_73:
  2346  007E43  4F                 	db	79	;'O'
  2347  007E44  6E                 	db	110	;'n'
  2348  007E45  20                 	db	32
  2349  007E46  50                 	db	80	;'P'
  2350  007E47  6F                 	db	111	;'o'
  2351  007E48  72                 	db	114	;'r'
  2352  007E49  74                 	db	116	;'t'
  2353  007E4A  20                 	db	32
  2354  007E4B  23                 	db	35
  2355  007E4C  3A                 	db	58	;':'
  2356  007E4D  20                 	db	32
  2357  007E4E  00                 	db	0
  2358  007E4F                     STR_210:
  2359  007E4F  54                 	db	84	;'T'
  2360  007E50  78                 	db	120	;'x'
  2361  007E51  20                 	db	32
  2362  007E52  50                 	db	80	;'P'
  2363  007E53  6F                 	db	111	;'o'
  2364  007E54  72                 	db	114	;'r'
  2365  007E55  74                 	db	116	;'t'
  2366  007E56  20                 	db	32
  2367  007E57  23                 	db	35
  2368  007E58  3A                 	db	58	;':'
  2369  007E59  20                 	db	32
  2370  007E5A  00                 	db	0
  2371  007E5B                     STR_208:
  2372  007E5B  53                 	db	83	;'S'
  2373  007E5C  65                 	db	101	;'e'
  2374  007E5D  6E                 	db	110	;'n'
  2375  007E5E  74                 	db	116	;'t'
  2376  007E5F  20                 	db	32
  2377  007E60  44                 	db	68	;'D'
  2378  007E61  61                 	db	97	;'a'
  2379  007E62  74                 	db	116	;'t'
  2380  007E63  61                 	db	97	;'a'
  2381  007E64  3A                 	db	58	;':'
  2382  007E65  20                 	db	32
  2383  007E66  00                 	db	0
  2384  007E67                     STR_77:
  2385  007E67  6D                 	db	109	;'m'
  2386  007E68  61                 	db	97	;'a'
  2387  007E69  63                 	db	99	;'c'
  2388  007E6A  20                 	db	32
  2389  007E6B  74                 	db	116	;'t'
  2390  007E6C  78                 	db	120	;'x'
  2391  007E6D  20                 	db	32
  2392  007E6E  63                 	db	99	;'c'
  2393  007E6F  6E                 	db	110	;'n'
  2394  007E70  66                 	db	102	;'f'
  2395  007E71  20                 	db	32
  2396  007E72  00                 	db	0
  2397  007E73                     STR_36:
  2398  007E73  54                 	db	84	;'T'
  2399  007E74  72                 	db	114	;'r'
  2400  007E75  79                 	db	121	;'y'
  2401  007E76  69                 	db	105	;'i'
  2402  007E77  6E                 	db	110	;'n'
  2403  007E78  67                 	db	103	;'g'
  2404  007E79  20                 	db	32
  2405  007E7A  4F                 	db	79	;'O'
  2406  007E7B  54                 	db	84	;'T'
  2407  007E7C  41                 	db	65	;'A'
  2408  007E7D  41                 	db	65	;'A'
  2409  007E7E  00                 	db	0
  2410  007E7F                     STR_63:
  2411  007E7F  6D                 	db	109	;'m'
  2412  007E80  61                 	db	97	;'a'
  2413  007E81  63                 	db	99	;'c'
  2414  007E82  20                 	db	32
  2415  007E83  67                 	db	103	;'g'
  2416  007E84  65                 	db	101	;'e'
  2417  007E85  74                 	db	116	;'t'
  2418  007E86  20                 	db	32
  2419  007E87  61                 	db	97	;'a'
  2420  007E88  64                 	db	100	;'d'
  2421  007E89  72                 	db	114	;'r'
  2422  007E8A  00                 	db	0
  2423  007E8B                     STR_29:
  2424  007E8B  73                 	db	115	;'s'
  2425  007E8C  79                 	db	121	;'y'
  2426  007E8D  73                 	db	115	;'s'
  2427  007E8E  20                 	db	32
  2428  007E8F  67                 	db	103	;'g'
  2429  007E90  65                 	db	101	;'e'
  2430  007E91  74                 	db	116	;'t'
  2431  007E92  20                 	db	32
  2432  007E93  76                 	db	118	;'v'
  2433  007E94  65                 	db	101	;'e'
  2434  007E95  72                 	db	114	;'r'
  2435  007E96  00                 	db	0
  2436  007E97                     STR_8:
  2437  007E97  4E                 	db	78	;'N'
  2438  007E98  6F                 	db	111	;'o'
  2439  007E99  76                 	db	118	;'v'
  2440  007E9A  20                 	db	32
  2441  007E9B  31                 	db	49	;'1'
  2442  007E9C  33                 	db	51	;'3'
  2443  007E9D  20                 	db	32
  2444  007E9E  32                 	db	50	;'2'
  2445  007E9F  30                 	db	48	;'0'
  2446  007EA0  31                 	db	49	;'1'
  2447  007EA1  35                 	db	53	;'5'
  2448  007EA2  00                 	db	0
  2449  007EA3                     STR_11:
  2450  007EA3  42                 	db	66	;'B'
  2451  007EA4  75                 	db	117	;'u'
  2452  007EA5  74                 	db	116	;'t'
  2453  007EA6  74                 	db	116	;'t'
  2454  007EA7  6F                 	db	111	;'o'
  2455  007EA8  6E                 	db	110	;'n'
  2456  007EA9  20                 	db	32
  2457  007EAA  46                 	db	70	;'F'
  2458  007EAB  41                 	db	65	;'A'
  2459  007EAC  49                 	db	73	;'I'
  2460  007EAD  4C                 	db	76	;'L'
  2461  007EAE  00                 	db	0
  2462  007EAF                     STR_54:
  2463  007EAF  4F                 	db	79	;'O'
  2464  007EB0  54                 	db	84	;'T'
  2465  007EB1  41                 	db	65	;'A'
  2466  007EB2  41                 	db	65	;'A'
  2467  007EB3  20                 	db	32
  2468  007EB4  4A                 	db	74	;'J'
  2469  007EB5  6F                 	db	111	;'o'
  2470  007EB6  69                 	db	105	;'i'
  2471  007EB7  6E                 	db	110	;'n'
  2472  007EB8  20                 	db	32
  2473  007EB9  00                 	db	0
  2474  007EBA                     STR_52:
  2475  007EBA  6E                 	db	110	;'n'
  2476  007EBB  6F                 	db	111	;'o'
  2477  007EBC  5F                 	db	95	;'_'
  2478  007EBD  66                 	db	102	;'f'
  2479  007EBE  72                 	db	114	;'r'
  2480  007EBF  65                 	db	101	;'e'
  2481  007EC0  65                 	db	101	;'e'
  2482  007EC1  5F                 	db	95	;'_'
  2483  007EC2  63                 	db	99	;'c'
  2484  007EC3  68                 	db	104	;'h'
  2485  007EC4  00                 	db	0
  2486  007EC5                     STR_42:
  2487  007EC5  53                 	db	83	;'S'
  2488  007EC6  75                 	db	117	;'u'
  2489  007EC7  63                 	db	99	;'c'
  2490  007EC8  63                 	db	99	;'c'
  2491  007EC9  65                 	db	101	;'e'
  2492  007ECA  73                 	db	115	;'s'
  2493  007ECB  73                 	db	115	;'s'
  2494  007ECC  66                 	db	102	;'f'
  2495  007ECD  75                 	db	117	;'u'
  2496  007ECE  6C                 	db	108	;'l'
  2497  007ECF  00                 	db	0
  2498  007ED0                     STR_65:
  2499  007ED0  6D                 	db	109	;'m'
  2500  007ED1  61                 	db	97	;'a'
  2501  007ED2  63                 	db	99	;'c'
  2502  007ED3  20                 	db	32
  2503  007ED4  67                 	db	103	;'g'
  2504  007ED5  65                 	db	101	;'e'
  2505  007ED6  74                 	db	116	;'t'
  2506  007ED7  20                 	db	32
  2507  007ED8  64                 	db	100	;'d'
  2508  007ED9  72                 	db	114	;'r'
  2509  007EDA  00                 	db	0
  2510  007EDB                     STR_48:
  2511  007EDB  56                 	db	86	;'V'
  2512  007EDC  61                 	db	97	;'a'
  2513  007EDD  6C                 	db	108	;'l'
  2514  007EDE  69                 	db	105	;'i'
  2515  007EDF  64                 	db	100	;'d'
  2516  007EE0  20                 	db	32
  2517  007EE1  4B                 	db	75	;'K'
  2518  007EE2  65                 	db	101	;'e'
  2519  007EE3  79                 	db	121	;'y'
  2520  007EE4  73                 	db	115	;'s'
  2521  007EE5  00                 	db	0
  2522  007EE6                     STR_15:
  2523  007EE6  43                 	db	67	;'C'
  2524  007EE7  6F                 	db	111	;'o'
  2525  007EE8  6D                 	db	109	;'m'
  2526  007EE9  6D                 	db	109	;'m'
  2527  007EEA  20                 	db	32
  2528  007EEB  54                 	db	84	;'T'
  2529  007EEC  65                 	db	101	;'e'
  2530  007EED  73                 	db	115	;'s'
  2531  007EEE  74                 	db	116	;'t'
  2532  007EEF  3A                 	db	58	;':'
  2533  007EF0  00                 	db	0
  2534  007EF1                     STR_229:
  2535  007EF1  52                 	db	82	;'R'
  2536  007EF2  78                 	db	120	;'x'
  2537  007EF3  20                 	db	32
  2538  007EF4  50                 	db	80	;'P'
  2539  007EF5  6F                 	db	111	;'o'
  2540  007EF6  72                 	db	114	;'r'
  2541  007EF7  74                 	db	116	;'t'
  2542  007EF8  23                 	db	35
  2543  007EF9  20                 	db	32
  2544  007EFA  00                 	db	0
  2545  007EFB                     STR_41:
  2546  007EFB  41                 	db	65	;'A'
  2547  007EFC  42                 	db	66	;'B'
  2548  007EFD  50                 	db	80	;'P'
  2549  007EFE  20                 	db	32
  2550  007EFF  4A                 	db	74	;'J'
  2551  007F00  6F                 	db	111	;'o'
  2552  007F01  69                 	db	105	;'i'
  2553  007F02  6E                 	db	110	;'n'
  2554  007F03  20                 	db	32
  2555  007F04  00                 	db	0
  2556  007F05                     STR_23:
  2557  007F05  4D                 	db	77	;'M'
  2558  007F06  4F                 	db	79	;'O'
  2559  007F07  54                 	db	84	;'T'
  2560  007F08  45                 	db	69	;'E'
  2561  007F09  20                 	db	32
  2562  007F0A  4D                 	db	77	;'M'
  2563  007F0B  6F                 	db	111	;'o'
  2564  007F0C  64                 	db	100	;'d'
  2565  007F0D  65                 	db	101	;'e'
  2566  007F0E  00                 	db	0
  2567  007F0F                     STR_57:
  2568  007F0F  4F                 	db	79	;'O'
  2569  007F10  54                 	db	84	;'T'
  2570  007F11  41                 	db	65	;'A'
  2571  007F12  41                 	db	65	;'A'
  2572  007F13  20                 	db	32
  2573  007F14  4A                 	db	74	;'J'
  2574  007F15  6F                 	db	111	;'o'
  2575  007F16  69                 	db	105	;'i'
  2576  007F17  6E                 	db	110	;'n'
  2577  007F18  00                 	db	0
  2578  007F19                     STR_45:
  2579  007F19  6D                 	db	109	;'m'
  2580  007F1A  61                 	db	97	;'a'
  2581  007F1B  63                 	db	99	;'c'
  2582  007F1C  20                 	db	32
  2583  007F1D  72                 	db	114	;'r'
  2584  007F1E  65                 	db	101	;'e'
  2585  007F1F  73                 	db	115	;'s'
  2586  007F20  65                 	db	101	;'e'
  2587  007F21  74                 	db	116	;'t'
  2588  007F22  00                 	db	0
  2589  007F23                     STR_16:
  2590  007F23  4C                 	db	76	;'L'
  2591  007F24  45                 	db	69	;'E'
  2592  007F25  44                 	db	68	;'D'
  2593  007F26  20                 	db	32
  2594  007F27  54                 	db	84	;'T'
  2595  007F28  65                 	db	101	;'e'
  2596  007F29  73                 	db	115	;'s'
  2597  007F2A  74                 	db	116	;'t'
  2598  007F2B  3A                 	db	58	;':'
  2599  007F2C  00                 	db	0
  2600  007F2D                     STR_258:
  2601  007F2D  43                 	db	67	;'C'
  2602  007F2E  44                 	db	68	;'D'
  2603  007F2F  43                 	db	67	;'C'
  2604  007F30  20                 	db	32
  2605  007F31  4D                 	db	77	;'M'
  2606  007F32  6F                 	db	111	;'o'
  2607  007F33  64                 	db	100	;'d'
  2608  007F34  65                 	db	101	;'e'
  2609  007F35  00                 	db	0
  2610  007F36                     STR_49:
  2611  007F36  52                 	db	82	;'R'
  2612  007F37  65                 	db	101	;'e'
  2613  007F38  71                 	db	113	;'q'
  2614  007F39  75                 	db	117	;'u'
  2615  007F3A  69                 	db	105	;'i'
  2616  007F3B  72                 	db	114	;'r'
  2617  007F3C  65                 	db	101	;'e'
  2618  007F3D  64                 	db	100	;'d'
  2619  007F3E  00                 	db	0
  2620  007F3F                     STR_40:
  2621  007F3F  61                 	db	97	;'a'
  2622  007F40  63                 	db	99	;'c'
  2623  007F41  63                 	db	99	;'c'
  2624  007F42  65                 	db	101	;'e'
  2625  007F43  70                 	db	112	;'p'
  2626  007F44  74                 	db	116	;'t'
  2627  007F45  65                 	db	101	;'e'
  2628  007F46  64                 	db	100	;'d'
  2629  007F47  00                 	db	0
  2630  007F48                     STR_252:
  2631  007F48  6D                 	db	109	;'m'
  2632  007F49  61                 	db	97	;'a'
  2633  007F4A  63                 	db	99	;'c'
  2634  007F4B  20                 	db	32
  2635  007F4C  73                 	db	115	;'s'
  2636  007F4D  61                 	db	97	;'a'
  2637  007F4E  76                 	db	118	;'v'
  2638  007F4F  65                 	db	101	;'e'
  2639  007F50  00                 	db	0
  2640  007F51                     STR_24:
  2641  007F51  53                 	db	83	;'S'
  2642  007F52  74                 	db	116	;'t'
  2643  007F53  61                 	db	97	;'a'
  2644  007F54  72                 	db	114	;'r'
  2645  007F55  74                 	db	116	;'t'
  2646  007F56  69                 	db	105	;'i'
  2647  007F57  6E                 	db	110	;'n'
  2648  007F58  67                 	db	103	;'g'
  2649  007F59  00                 	db	0
  2650  007F5A                     STR_34:
  2651  007F5A  41                 	db	65	;'A'
  2652  007F5B  42                 	db	66	;'B'
  2653  007F5C  50                 	db	80	;'P'
  2654  007F5D  20                 	db	32
  2655  007F5E  4A                 	db	74	;'J'
  2656  007F5F  6F                 	db	111	;'o'
  2657  007F60  69                 	db	105	;'i'
  2658  007F61  6E                 	db	110	;'n'
  2659  007F62  00                 	db	0
  2660  007F63                     STR_4:
  2661  007F63  4D                 	db	77	;'M'
  2662  007F64  6F                 	db	111	;'o'
  2663  007F65  54                 	db	84	;'T'
  2664  007F66  65                 	db	101	;'e'
  2665  007F67  20                 	db	32
  2666  007F68  76                 	db	118	;'v'
  2667  007F69  20                 	db	32
  2668  007F6A  2E                 	db	46
  2669  007F6B  00                 	db	0
  2670  007F6C                     STR_9:
  2671  007F6C  31                 	db	49	;'1'
  2672  007F6D  31                 	db	49	;'1'
  2673  007F6E  3A                 	db	58	;':'
  2674  007F6F  35                 	db	53	;'5'
  2675  007F70  38                 	db	56	;'8'
  2676  007F71  3A                 	db	58	;':'
  2677  007F72  32                 	db	50	;'2'
  2678  007F73  32                 	db	50	;'2'
  2679  007F74  00                 	db	0
  2680  007F75  52                 	db	82	;'R'
  2681  007F76  46                 	db	70	;'F'
  2682  007F77  20                 	db	32
  2683  007F78  54                 	db	84	;'T'
  2684  007F79  65                 	db	101	;'e'
  2685  007F7A  73                 	db	115	;'s'
  2686  007F7B  74                 	db	116	;'t'
  2687  007F7C  3A                 	db	58	;':'
  2688  007F7D  00                 	db	0
  2689  007F7E                     STR_17:
  2690  007F7E  41                 	db	65	;'A'
  2691  007F7F  44                 	db	68	;'D'
  2692  007F80  43                 	db	67	;'C'
  2693  007F81  20                 	db	32
  2694  007F82  54                 	db	84	;'T'
  2695  007F83  65                 	db	101	;'e'
  2696  007F84  73                 	db	115	;'s'
  2697  007F85  74                 	db	116	;'t'
  2698  007F86  00                 	db	0
  2699  007F87                     STR_259:
  2700  007F87  43                 	db	67	;'C'
  2701  007F88  6F                 	db	111	;'o'
  2702  007F89  6D                 	db	109	;'m'
  2703  007F8A  6D                 	db	109	;'m'
  2704  007F8B  61                 	db	97	;'a'
  2705  007F8C  6E                 	db	110	;'n'
  2706  007F8D  64                 	db	100	;'d'
  2707  007F8E  00                 	db	0
  2708  007F8F                     STR_61:
  2709  007F8F  4E                 	db	78	;'N'
  2710  007F90  4F                 	db	79	;'O'
  2711  007F91  20                 	db	32
  2712  007F92  46                 	db	70	;'F'
  2713  007F93  52                 	db	82	;'R'
  2714  007F94  45                 	db	69	;'E'
  2715  007F95  45                 	db	69	;'E'
  2716  007F96  00                 	db	0
  2717  007F97                     STR_62:
  2718  007F97  43                 	db	67	;'C'
  2719  007F98  48                 	db	72	;'H'
  2720  007F99  41                 	db	65	;'A'
  2721  007F9A  4E                 	db	78	;'N'
  2722  007F9B  4E                 	db	78	;'N'
  2723  007F9C  45                 	db	69	;'E'
  2724  007F9D  4C                 	db	76	;'L'
  2725  007F9E  00                 	db	0
  2726  007F9F                     STR_35:
  2727  007F9F  4E                 	db	78	;'N'
  2728  007FA0  6F                 	db	111	;'o'
  2729  007FA1  20                 	db	32
  2730  007FA2  4B                 	db	75	;'K'
  2731  007FA3  65                 	db	101	;'e'
  2732  007FA4  79                 	db	121	;'y'
  2733  007FA5  73                 	db	115	;'s'
  2734  007FA6  00                 	db	0
  2735  007FA7                     STR_18:
  2736  007FA7  54                 	db	84	;'T'
  2737  007FA8  65                 	db	101	;'e'
  2738  007FA9  6D                 	db	109	;'m'
  2739  007FAA  70                 	db	112	;'p'
  2740  007FAB  20                 	db	32
  2741  007FAC  20                 	db	32
  2742  007FAD  3D                 	db	61	;'='
  2743  007FAE  00                 	db	0
  2744  007FAF                     STR_19:
  2745  007FAF  4C                 	db	76	;'L'
  2746  007FB0  69                 	db	105	;'i'
  2747  007FB1  67                 	db	103	;'g'
  2748  007FB2  68                 	db	104	;'h'
  2749  007FB3  74                 	db	116	;'t'
  2750  007FB4  20                 	db	32
  2751  007FB5  3D                 	db	61	;'='
  2752  007FB6  00                 	db	0
  2753  007FB7                     STR_88:
  2754  007FB7  54                 	db	84	;'T'
  2755  007FB8  65                 	db	101	;'e'
  2756  007FB9  6D                 	db	109	;'m'
  2757  007FBA  70                 	db	112	;'p'
  2758  007FBB  20                 	db	32
  2759  007FBC  3A                 	db	58	;':'
  2760  007FBD  00                 	db	0
  2761  007FBE                     STR_87:
  2762  007FBE  4C                 	db	76	;'L'
  2763  007FBF  69                 	db	105	;'i'
  2764  007FC0  67                 	db	103	;'g'
  2765  007FC1  68                 	db	104	;'h'
  2766  007FC2  74                 	db	116	;'t'
  2767  007FC3  3A                 	db	58	;':'
  2768  007FC4  00                 	db	0
  2769  007FC5                     STR_58:
  2770  007FC5  44                 	db	68	;'D'
  2771  007FC6  65                 	db	101	;'e'
  2772  007FC7  6E                 	db	110	;'n'
  2773  007FC8  69                 	db	105	;'i'
  2774  007FC9  65                 	db	101	;'e'
  2775  007FCA  64                 	db	100	;'d'
  2776  007FCB  00                 	db	0
  2777  007FCC                     STR_43:
  2778  007FCC  64                 	db	100	;'d'
  2779  007FCD  65                 	db	101	;'e'
  2780  007FCE  6E                 	db	110	;'n'
  2781  007FCF  69                 	db	105	;'i'
  2782  007FD0  65                 	db	101	;'e'
  2783  007FD1  64                 	db	100	;'d'
  2784  007FD2  00                 	db	0
  2785  007FD3                     STR_219:
  2786  007FD3  6E                 	db	110	;'n'
  2787  007FD4  6F                 	db	111	;'o'
  2788  007FD5  5F                 	db	95	;'_'
  2789  007FD6  66                 	db	102	;'f'
  2790  007FD7  72                 	db	114	;'r'
  2791  007FD8  65                 	db	101	;'e'
  2792  007FD9  00                 	db	0
  2793  007FDA                     STR_217:
  2794  007FDA  6D                 	db	109	;'m'
  2795  007FDB  61                 	db	97	;'a'
  2796  007FDC  63                 	db	99	;'c'
  2797  007FDD  5F                 	db	95	;'_'
  2798  007FDE  65                 	db	101	;'e'
  2799  007FDF  72                 	db	114	;'r'
  2800  007FE0  00                 	db	0
  2801  007FE1                     STR_212:
  2802  007FE1  6D                 	db	109	;'m'
  2803  007FE2  61                 	db	97	;'a'
  2804  007FE3  63                 	db	99	;'c'
  2805  007FE4  5F                 	db	95	;'_'
  2806  007FE5  72                 	db	114	;'r'
  2807  007FE6  78                 	db	120	;'x'
  2808  007FE7  00                 	db	0
  2809  007FE8                     STR_215:
  2810  007FE8  6D                 	db	109	;'m'
  2811  007FE9  61                 	db	97	;'a'
  2812  007FEA  63                 	db	99	;'c'
  2813  007FEB  5F                 	db	95	;'_'
  2814  007FEC  74                 	db	116	;'t'
  2815  007FED  78                 	db	120	;'x'
  2816  007FEE  00                 	db	0
  2817  007FEF                     STR_30:
  2818  007FEF  52                 	db	82	;'R'
  2819  007FF0  4E                 	db	78	;'N'
  2820  007FF1  00                 	db	0
  2821  007FF2                     STR_32:
  2822  007FF2  6F                 	db	111	;'o'
  2823  007FF3  6B                 	db	107	;'k'
  2824  007FF4  00                 	db	0
  2825  007FF5                     STR_101:
  2826  007FF5  2A                 	db	42
  2827  007FF6  00                 	db	0
  2828  007FF7                     STR_96:
  2829  007FF7  3C                 	db	60	;'<'
  2830  007FF8  00                 	db	0
  2831  007FF9                     STR_76:
  2832  007FF9  43                 	db	67	;'C'
  2833  007FFA  00                 	db	0
  2834  007FFB                     STR_78:
  2835  007FFB  55                 	db	85	;'U'
  2836  007FFC  00                 	db	0
  2837  007FFD                     STR_21:
  2838  007FFD  7A                 	db	122	;'z'
  2839  007FFE  00                 	db	0
  2840  0000                     
  2841                           ; #config settings
  2842  007FFF  00                 	db	0	; dummy byte at the end
  2843  0000                     
  2844                           	psect	cinit
  2845  003FA8                     __pcinit:
  2846                           	opt stack 0
  2847  003FA8                     start_initialization:
  2848                           	opt stack 0
  2849  003FA8                     __initialization:
  2850                           	opt stack 0
  2851                           
  2852                           ; Clear objects allocated to BANK2 (64 bytes)
  2853  003FA8  EE02  F000         	lfsr	0,__pbssBANK2
  2854  003FAC  0E40               	movlw	64
  2855  003FAE                     clear_0:
  2856  003FAE  6AEE               	clrf	postinc0,c
  2857  003FB0  06E8               	decf	wreg,f,c
  2858  003FB2  E1FD               	bnz	clear_0
  2859                           
  2860                           ; Clear objects allocated to BANK1 (216 bytes)
  2861  003FB4  EE01  F000         	lfsr	0,__pbssBANK1
  2862  003FB8  0ED8               	movlw	216
  2863  003FBA                     clear_1:
  2864  003FBA  6AEE               	clrf	postinc0,c
  2865  003FBC  06E8               	decf	wreg,f,c
  2866  003FBE  E1FD               	bnz	clear_1
  2867                           
  2868                           ; Clear objects allocated to BANK0 (104 bytes)
  2869  003FC0  EE00  F060         	lfsr	0,__pbssBANK0
  2870  003FC4  0E68               	movlw	104
  2871  003FC6                     clear_2:
  2872  003FC6  6AEE               	clrf	postinc0,c
  2873  003FC8  06E8               	decf	wreg,f,c
  2874  003FCA  E1FD               	bnz	clear_2
  2875                           
  2876                           ; Clear objects allocated to COMRAM (45 bytes)
  2877  003FCC  EE00  F001         	lfsr	0,__pbssCOMRAM
  2878  003FD0  0E2D               	movlw	45
  2879  003FD2                     clear_3:
  2880  003FD2  6AEE               	clrf	postinc0,c
  2881  003FD4  06E8               	decf	wreg,f,c
  2882  003FD6  E1FD               	bnz	clear_3
  2883                           
  2884                           ; Initialize objects allocated to BANK0 (5 bytes)
  2885                           ; load TBLPTR registers with __pidataBANK0
  2886  003FD8  0EAF               	movlw	low __pidataBANK0
  2887  003FDA  6EF6               	movwf	tblptrl,c
  2888  003FDC  0E34               	movlw	high __pidataBANK0
  2889  003FDE  6EF7               	movwf	tblptrh,c
  2890  003FE0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2891  003FE2  6EF8               	movwf	tblptru,c
  2892  003FE4  EE00  F0F5         	lfsr	0,__pdataBANK0
  2893  003FE8  EE10 F005          	lfsr	1,5
  2894  003FEC                     copy_data0:
  2895  003FEC  0009               	tblrd		*+
  2896  003FEE  CFF5 FFEE          	movff	tablat,postinc0
  2897  003FF2  50E5               	movf	postdec1,w,c
  2898  003FF4  50E1               	movf	fsr1l,w,c
  2899  003FF6  E1FA               	bnz	copy_data0
  2900  003FF8                     end_of_initialization:
  2901                           	opt stack 0
  2902  003FF8                     __end_of__initialization:
  2903                           	opt stack 0
  2904  003FF8  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2905  003FFA  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2906  003FFC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2907  003FFE  6EF8               	movwf	tblptru,c
  2908  004000  0100               	movlb	0
  2909  004002  EFDE  F027         	goto	_main	;jump to C main() function
  2910                           tblptru	equ	0xFF8
  2911                           tblptrh	equ	0xFF7
  2912                           tblptrl	equ	0xFF6
  2913                           tablat	equ	0xFF5
  2914                           postinc0	equ	0xFEE
  2915                           wreg	equ	0xFE8
  2916                           postdec1	equ	0xFE5
  2917                           fsr1l	equ	0xFE1
  2918                           
  2919                           	psect	bssCOMRAM
  2920  000001                     __pbssCOMRAM:
  2921                           	opt stack 0
  2922  000001                     _outPipes:
  2923                           	opt stack 0
  2924  000001                     	ds	8
  2925  000009                     _inPipes:
  2926                           	opt stack 0
  2927  000009                     	ds	6
  2928  00000F                     _pBDTEntryIn:
  2929                           	opt stack 0
  2930  00000F                     	ds	6
  2931  000015                     _pBDTEntryEP0OutCurrent:
  2932                           	opt stack 0
  2933  000015                     	ds	2
  2934  000017                     _pBDTEntryEP0OutNext:
  2935                           	opt stack 0
  2936  000017                     	ds	2
  2937  000019                     _LastRS232Out:
  2938                           	opt stack 0
  2939  000019                     	ds	1
  2940  00001A                     _NextUSBOut:
  2941                           	opt stack 0
  2942  00001A                     	ds	1
  2943  00001B                     _RS232_Out_Data_Rdy:
  2944                           	opt stack 0
  2945  00001B                     	ds	1
  2946  00001C                     _RS232cp:
  2947                           	opt stack 0
  2948  00001C                     	ds	1
  2949  00001D                     _RemoteWakeup:
  2950                           	opt stack 0
  2951  00001D                     	ds	1
  2952  00001E                     _USBDeferStatusStagePacket:
  2953                           	opt stack 0
  2954  00001E                     	ds	1
  2955  00001F                     _USBStatusStageTimeoutCounter:
  2956                           	opt stack 0
  2957  00001F                     	ds	1
  2958  000020                     _cdc_trf_state:
  2959                           	opt stack 0
  2960  000020                     	ds	1
  2961  000021                     _controlTransferState:
  2962                           	opt stack 0
  2963  000021                     	ds	1
  2964  000022                     _endpoint_number:
  2965                           	opt stack 0
  2966  000022                     	ds	1
  2967  000023                     _eusartRxCount:
  2968                           	opt stack 0
  2969  000023                     	ds	1
  2970  000024                     _eusartRxHead:
  2971                           	opt stack 0
  2972  000024                     	ds	1
  2973  000025                     _eusartRxTail:
  2974                           	opt stack 0
  2975  000025                     	ds	1
  2976  000026                     _eusartTxBufferRemaining:
  2977                           	opt stack 0
  2978  000026                     	ds	1
  2979  000027                     _eusartTxHead:
  2980                           	opt stack 0
  2981  000027                     	ds	1
  2982  000028                     _eusartTxTail:
  2983                           	opt stack 0
  2984  000028                     	ds	1
  2985  000029                     _modemBufferIndex:
  2986                           	opt stack 0
  2987  000029                     	ds	1
  2988  00002A                     _rxByteFlag:
  2989                           	opt stack 0
  2990  00002A                     	ds	1
  2991  00002B                     _shortPacketStatus:
  2992                           	opt stack 0
  2993  00002B                     	ds	1
  2994  00002C                     _USBActiveConfiguration:
  2995                           	opt stack 0
  2996  00002C                     	ds	1
  2997  00002D                     _USTATcopy:
  2998                           	opt stack 0
  2999  00002D                     	ds	1
  3000                           tblptru	equ	0xFF8
  3001                           tblptrh	equ	0xFF7
  3002                           tblptrl	equ	0xFF6
  3003                           tablat	equ	0xFF5
  3004                           postinc0	equ	0xFEE
  3005                           wreg	equ	0xFE8
  3006                           postdec1	equ	0xFE5
  3007                           fsr1l	equ	0xFE1
  3008                           
  3009                           	psect	bssBANK0
  3010  000060                     __pbssBANK0:
  3011                           	opt stack 0
  3012  000060                     _pBDTEntryOut:
  3013                           	opt stack 0
  3014  000060                     	ds	6
  3015  000066                     service_pushbutton@PB_Timer:
  3016                           	opt stack 0
  3017  000066                     	ds	4
  3018  00006A                     _ep_data_in:
  3019                           	opt stack 0
  3020  00006A                     	ds	3
  3021  00006D                     _ep_data_out:
  3022                           	opt stack 0
  3023  00006D                     	ds	3
  3024  000070                     _pCDCDst:
  3025                           	opt stack 0
  3026  000070                     	ds	3
  3027  000073                     _pCDCSrc:
  3028                           	opt stack 0
  3029  000073                     	ds	3
  3030  000076                     _CDCDataInHandle:
  3031                           	opt stack 0
  3032  000076                     	ds	2
  3033  000078                     _CDCDataOutHandle:
  3034                           	opt stack 0
  3035  000078                     	ds	2
  3036  00007A                     _light:
  3037                           	opt stack 0
  3038  00007A                     	ds	2
  3039  00007C                     _pDst:
  3040                           	opt stack 0
  3041  00007C                     	ds	2
  3042  00007E                     _temperature:
  3043                           	opt stack 0
  3044  00007E                     	ds	2
  3045  000080                     _timer1ReloadVal:
  3046                           	opt stack 0
  3047  000080                     	ds	2
  3048  000082                     _timerMinTickCount:
  3049                           	opt stack 0
  3050  000082                     	ds	2
  3051  000084                     _timerMsTickCount:
  3052                           	opt stack 0
  3053  000084                     	ds	2
  3054  000086                     _BothEP0OutUOWNsSet:
  3055                           	opt stack 0
  3056  000086                     	ds	1
  3057  000087                     _USBBusIsSuspended:
  3058                           	opt stack 0
  3059  000087                     	ds	1
  3060  000088                     _USBDeferINDataStagePackets:
  3061                           	opt stack 0
  3062  000088                     	ds	1
  3063  000089                     _USBDeferOUTDataStagePackets:
  3064                           	opt stack 0
  3065  000089                     	ds	1
  3066  00008A                     _USBDeviceState:
  3067                           	opt stack 0
  3068  00008A                     	ds	1
  3069  00008B                     _USBStatusStageEnabledFlag1:
  3070                           	opt stack 0
  3071  00008B                     	ds	1
  3072  00008C                     _USBStatusStageEnabledFlag2:
  3073                           	opt stack 0
  3074  00008C                     	ds	1
  3075  00008D                     _activeState:
  3076                           	opt stack 0
  3077  00008D                     	ds	1
  3078  00008E                     _adrStatus:
  3079                           	opt stack 0
  3080  00008E                     	ds	1
  3081  00008F                     _appTimer:
  3082                           	opt stack 0
  3083  00008F                     	ds	1
  3084  000090                     _cdc_mem_type:
  3085                           	opt stack 0
  3086  000090                     	ds	1
  3087  000091                     _cdc_rx_len:
  3088                           	opt stack 0
  3089  000091                     	ds	1
  3090  000092                     _cdc_tx_len:
  3091                           	opt stack 0
  3092  000092                     	ds	1
  3093  000093                     _dataRatePosition:
  3094                           	opt stack 0
  3095  000093                     	ds	1
  3096  000094                     _m10SecTicker:
  3097                           	opt stack 0
  3098  000094                     	ds	1
  3099  000095                     _operationType:
  3100                           	opt stack 0
  3101  000095                     	ds	1
  3102  000096                     _powerOnStatus:
  3103                           	opt stack 0
  3104  000096                     	ds	1
  3105  000097                     _randomPortNum:
  3106                           	opt stack 0
  3107  000097                     	ds	1
  3108  000098                     _runningState:
  3109                           	opt stack 0
  3110  000098                     	ds	1
  3111  000099                     _secTicker:
  3112                           	opt stack 0
  3113  000099                     	ds	1
  3114  00009A                     _sleepTicker:
  3115                           	opt stack 0
  3116  00009A                     	ds	1
  3117  00009B                     _sleepTxOccurances:
  3118                           	opt stack 0
  3119  00009B                     	ds	1
  3120  00009C                     _usbState:
  3121                           	opt stack 0
  3122  00009C                     	ds	1
  3123  00009D                     service_pushbutton@Release_Timer:
  3124                           	opt stack 0
  3125  00009D                     	ds	1
  3126  00009E                     _dataBuffer:
  3127                           	opt stack 0
  3128  00009E                     	ds	12
  3129  0000AA                     _cdc_notice:
  3130                           	opt stack 0
  3131  0000AA                     	ds	10
  3132  0000B4                     _responseData:
  3133                           	opt stack 0
  3134  0000B4                     	ds	8
  3135  0000BC                     _line_coding:
  3136                           	opt stack 0
  3137  0000BC                     	ds	7
  3138  0000C3                     _responsePortNum:
  3139                           	opt stack 0
  3140  0000C3                     	ds	3
  3141  0000C6                     _USBAlternateInterface:
  3142                           	opt stack 0
  3143  0000C6                     	ds	2
  3144                           tblptru	equ	0xFF8
  3145                           tblptrh	equ	0xFF7
  3146                           tblptrl	equ	0xFF6
  3147                           tablat	equ	0xFF5
  3148                           postinc0	equ	0xFEE
  3149                           wreg	equ	0xFE8
  3150                           postdec1	equ	0xFE5
  3151                           fsr1l	equ	0xFE1
  3152                           
  3153                           	psect	dataBANK0
  3154  0000F5                     __pdataBANK0:
  3155                           	opt stack 0
  3156  0000F5                     _selectedFont:
  3157                           	opt stack 0
  3158  0000F5                     	ds	2
  3159  0000F7                     _dataRateSelection:
  3160                           	opt stack 0
  3161  0000F7                     	ds	1
  3162  0000F8                     _moteState:
  3163                           	opt stack 0
  3164  0000F8                     	ds	1
  3165  0000F9                     _periodicState:
  3166                           	opt stack 0
  3167  0000F9                     	ds	1
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           postinc0	equ	0xFEE
  3173                           wreg	equ	0xFE8
  3174                           postdec1	equ	0xFE5
  3175                           fsr1l	equ	0xFE1
  3176                           
  3177                           	psect	bssBANK1
  3178  000100                     __pbssBANK1:
  3179                           	opt stack 0
  3180  000100                     _eusartRxBuffer:
  3181                           	opt stack 0
  3182  000100                     	ds	64
  3183  000140                     _USB_Buffer:
  3184                           	opt stack 0
  3185  000140                     	ds	64
  3186  000180                     _modemResonseBuffer:
  3187                           	opt stack 0
  3188  000180                     	ds	64
  3189  0001C0                     _responseId:
  3190                           	opt stack 0
  3191  0001C0                     	ds	16
  3192  0001D0                     _dummy_encapsulated_cmd_response:
  3193                           	opt stack 0
  3194  0001D0                     	ds	8
  3195                           tblptru	equ	0xFF8
  3196                           tblptrh	equ	0xFF7
  3197                           tblptrl	equ	0xFF6
  3198                           tablat	equ	0xFF5
  3199                           postinc0	equ	0xFEE
  3200                           wreg	equ	0xFE8
  3201                           postdec1	equ	0xFE5
  3202                           fsr1l	equ	0xFE1
  3203                           
  3204                           	psect	bssBANK2
  3205  000200                     __pbssBANK2:
  3206                           	opt stack 0
  3207  000200                     _eusartTxBuffer:
  3208                           	opt stack 0
  3209  000200                     	ds	64
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           postinc0	equ	0xFEE
  3215                           wreg	equ	0xFE8
  3216                           postdec1	equ	0xFE5
  3217                           fsr1l	equ	0xFE1
  3218                           
  3219                           	psect	cstackBANK1
  3220  0001D8                     __pcstackBANK1:
  3221                           	opt stack 0
  3222  0001D8                     moteHandler@gotoSleep:
  3223                           	opt stack 0
  3224                           
  3225                           ; 1 bytes @ 0x0
  3226  0001D8                     	ds	1
  3227  0001D9                     moteHandler@gotoNextState:
  3228                           	opt stack 0
  3229                           
  3230                           ; 1 bytes @ 0x1
  3231  0001D9                     	ds	1
  3232  0001DA                     moteHandler@Traw:
  3233                           	opt stack 0
  3234                           
  3235                           ; 2 bytes @ 0x2
  3236  0001DA                     	ds	2
  3237  0001DC                     moteHandler@s2Button:
  3238                           	opt stack 0
  3239                           
  3240                           ; 1 bytes @ 0x4
  3241  0001DC                     	ds	1
  3242  0001DD                     moteHandler@buttonPress:
  3243                           	opt stack 0
  3244                           
  3245                           ; 1 bytes @ 0x5
  3246  0001DD                     	ds	1
  3247  0001DE                     moteHandler@i:
  3248                           	opt stack 0
  3249                           
  3250                           ; 1 bytes @ 0x6
  3251  0001DE                     	ds	1
  3252  0001DF                     moteHandler@i_1340:
  3253                           	opt stack 0
  3254                           
  3255                           ; 1 bytes @ 0x7
  3256  0001DF                     	ds	1
  3257  0001E0                     moteHandler@readMessage:
  3258                           	opt stack 0
  3259                           
  3260                           ; 1 bytes @ 0x8
  3261  0001E0                     	ds	1
  3262                           tblptru	equ	0xFF8
  3263                           tblptrh	equ	0xFF7
  3264                           tblptrl	equ	0xFF6
  3265                           tablat	equ	0xFF5
  3266                           postinc0	equ	0xFEE
  3267                           wreg	equ	0xFE8
  3268                           postdec1	equ	0xFE5
  3269                           fsr1l	equ	0xFE1
  3270                           
  3271                           	psect	cstackBANK0
  3272  0000C8                     __pcstackBANK0:
  3273                           	opt stack 0
  3274  0000C8                     ??_TMR1_Initialize:
  3275  0000C8                     ?_ADC_GetConversion:
  3276                           	opt stack 0
  3277  0000C8                     ?_strncmp:
  3278                           	opt stack 0
  3279  0000C8                     ?_strcmp:
  3280                           	opt stack 0
  3281  0000C8                     ?_USBTransferOnePacket:
  3282                           	opt stack 0
  3283  0000C8                     ?___lwdiv:
  3284                           	opt stack 0
  3285  0000C8                     ?___lwmod:
  3286                           	opt stack 0
  3287  0000C8                     MOTEapp_handlerState@state:
  3288                           	opt stack 0
  3289  0000C8                     MOTEapp_SetADR@state:
  3290                           	opt stack 0
  3291  0000C8                     MOTEapp_SetDataRate@dataRate:
  3292                           	opt stack 0
  3293  0000C8                     MOTEapp_TimerBasedTask@timerTask:
  3294                           	opt stack 0
  3295  0000C8                     unhex@c:
  3296                           	opt stack 0
  3297  0000C8                     hexToStr@character:
  3298                           	opt stack 0
  3299  0000C8                     moteApp_clearBuffers@counter:
  3300                           	opt stack 0
  3301  0000C8                     USBapp_handlerState@state:
  3302                           	opt stack 0
  3303  0000C8                     service_pushbutton@bs:
  3304                           	opt stack 0
  3305  0000C8                     EUSART_Read@readValue:
  3306                           	opt stack 0
  3307  0000C8                     EUSART_Write@txData:
  3308                           	opt stack 0
  3309  0000C8                     EUSART_FlushBuffer@index:
  3310                           	opt stack 0
  3311  0000C8                     SPI_Exchange8bit@data:
  3312                           	opt stack 0
  3313  0000C8                     DATAEE_WriteByte@bData:
  3314                           	opt stack 0
  3315  0000C8                     DATAEE_ReadByte@bAdd:
  3316                           	opt stack 0
  3317  0000C8                     TMR2_ReadTimer@readVal:
  3318                           	opt stack 0
  3319  0000C8                     USBTransferOnePacket@dir:
  3320                           	opt stack 0
  3321  0000C8                     ___lbdiv@divisor:
  3322                           	opt stack 0
  3323  0000C8                     ___lbmod@divisor:
  3324                           	opt stack 0
  3325  0000C8                     moteApp_delayms@length:
  3326                           	opt stack 0
  3327  0000C8                     oled_setFont@font:
  3328                           	opt stack 0
  3329  0000C8                     putUSBUSART@data:
  3330                           	opt stack 0
  3331  0000C8                     ___lwdiv@dividend:
  3332                           	opt stack 0
  3333  0000C8                     ___lwmod@dividend:
  3334                           	opt stack 0
  3335  0000C8                     memset@p1:
  3336                           	opt stack 0
  3337  0000C8                     strcmp@s1:
  3338                           	opt stack 0
  3339  0000C8                     strncmp@s1:
  3340                           	opt stack 0
  3341                           
  3342                           ; 2 bytes @ 0x0
  3343  0000C8                     	ds	1
  3344  0000C9                     MOTEapp_getModemResponse@terminatorReceived:
  3345                           	opt stack 0
  3346  0000C9                     moteApp_clearBuffers@counter_1700:
  3347                           	opt stack 0
  3348  0000C9                     oled_writeCommand@command:
  3349                           	opt stack 0
  3350  0000C9                     oled_writeData@data:
  3351                           	opt stack 0
  3352  0000C9                     DATAEE_WriteByte@bAdd:
  3353                           	opt stack 0
  3354  0000C9                     ___lbdiv@dividend:
  3355                           	opt stack 0
  3356  0000C9                     ___lbmod@dividend:
  3357                           	opt stack 0
  3358  0000C9                     sendCommand@string:
  3359                           	opt stack 0
  3360  0000C9                     sendDataCommand@string:
  3361                           	opt stack 0
  3362  0000C9                     USBTransferOnePacket@data:
  3363                           	opt stack 0
  3364                           
  3365                           ; 2 bytes @ 0x1
  3366  0000C9                     	ds	1
  3367  0000CA                     ??_moteApp_delayms:
  3368  0000CA                     ??_ADC_GetConversion:
  3369  0000CA                     ??_oled_devInit:
  3370  0000CA                     MOTEapp_getModemResponse@bufferByte:
  3371                           	opt stack 0
  3372  0000CA                     moteApp_clearBuffers@counter_1701:
  3373                           	opt stack 0
  3374  0000CA                     Set_Page_Address@address:
  3375                           	opt stack 0
  3376  0000CA                     Set_Column_Address@address:
  3377                           	opt stack 0
  3378  0000CA                     oled_setDisplay@displayType:
  3379                           	opt stack 0
  3380  0000CA                     oled_displayOff@state:
  3381                           	opt stack 0
  3382  0000CA                     DATAEE_WriteByte@GIEBitValue:
  3383                           	opt stack 0
  3384  0000CA                     putUSBUSART@length:
  3385                           	opt stack 0
  3386  0000CA                     ___lbdiv@counter:
  3387                           	opt stack 0
  3388  0000CA                     ___lbmod@counter:
  3389                           	opt stack 0
  3390  0000CA                     ___lwdiv@divisor:
  3391                           	opt stack 0
  3392  0000CA                     ___lwmod@divisor:
  3393                           	opt stack 0
  3394  0000CA                     memset@c:
  3395                           	opt stack 0
  3396  0000CA                     strcmp@s2:
  3397                           	opt stack 0
  3398  0000CA                     strncmp@s2:
  3399                           	opt stack 0
  3400                           
  3401                           ; 2 bytes @ 0x2
  3402  0000CA                     	ds	1
  3403  0000CB                     sendDataCommand@appData:
  3404                           	opt stack 0
  3405  0000CB                     oled_putChar@station_dot:
  3406                           	opt stack 0
  3407  0000CB                     USBTransferOnePacket@len:
  3408                           	opt stack 0
  3409  0000CB                     ___lbdiv@quotient:
  3410                           	opt stack 0
  3411  0000CB                     ___lbmod@rem:
  3412                           	opt stack 0
  3413  0000CB                     moteApp_delayms@counter:
  3414                           	opt stack 0
  3415                           
  3416                           ; 2 bytes @ 0x3
  3417  0000CB                     	ds	1
  3418  0000CC                     ??_strcmp:
  3419  0000CC                     sendDataCommand@dataLength:
  3420                           	opt stack 0
  3421  0000CC                     moteApp_add8bToDataBuffer@bufferLocation:
  3422                           	opt stack 0
  3423  0000CC                     oled_putChar@start_page:
  3424                           	opt stack 0
  3425  0000CC                     ADC_GetConversion@channel:
  3426                           	opt stack 0
  3427  0000CC                     USBTransferOnePacket@ep:
  3428                           	opt stack 0
  3429  0000CC                     ___lwdiv@counter:
  3430                           	opt stack 0
  3431  0000CC                     ___lwmod@counter:
  3432                           	opt stack 0
  3433  0000CC                     memset@n:
  3434                           	opt stack 0
  3435  0000CC                     strncmp@len:
  3436                           	opt stack 0
  3437                           
  3438                           ; 2 bytes @ 0x4
  3439  0000CC                     	ds	1
  3440  0000CD                     ??_oled_putChar:
  3441  0000CD                     ??_sendDataCommand:
  3442  0000CD                     moteApp_toggleLeds@state:
  3443                           	opt stack 0
  3444  0000CD                     moteApp_add8bToDataBuffer@number:
  3445                           	opt stack 0
  3446  0000CD                     modemResync@escapeCounter:
  3447                           	opt stack 0
  3448  0000CD                     USBTransferOnePacket@handle:
  3449                           	opt stack 0
  3450  0000CD                     ___lwdiv@quotient:
  3451                           	opt stack 0
  3452                           
  3453                           ; 2 bytes @ 0x5
  3454  0000CD                     	ds	1
  3455  0000CE                     ??_strncmp:
  3456  0000CE                     sendDataCommand@byteCount:
  3457                           	opt stack 0
  3458  0000CE                     strcmp@t0:
  3459                           	opt stack 0
  3460  0000CE                     memset@p:
  3461                           	opt stack 0
  3462                           
  3463                           ; 2 bytes @ 0x6
  3464  0000CE                     	ds	1
  3465  0000CF                     modemResync@escapeEvent:
  3466                           	opt stack 0
  3467  0000CF                     sendDataCommand@byteCount_1637:
  3468                           	opt stack 0
  3469  0000CF                     ADC_TempConversion@tempRaw:
  3470                           	opt stack 0
  3471  0000CF                     strcmp@t2:
  3472                           	opt stack 0
  3473  0000CF                     moteApp_add16bToDataBuffer@number:
  3474                           	opt stack 0
  3475  0000CF                     getsUSBUSART@buffer:
  3476                           	opt stack 0
  3477  0000CF                     _CDCTxService$5786:
  3478                           	opt stack 0
  3479                           
  3480                           ; 2 bytes @ 0x7
  3481  0000CF                     	ds	1
  3482  0000D0                     ADC_TempConversion@temp:
  3483                           	opt stack 0
  3484  0000D0                     USBDeviceInit@i:
  3485                           	opt stack 0
  3486  0000D0                     strcmp@t1:
  3487                           	opt stack 0
  3488                           
  3489                           ; 1 bytes @ 0x8
  3490  0000D0                     	ds	1
  3491  0000D1                     moteApp_add16bToDataBuffer@bufferLocation:
  3492                           	opt stack 0
  3493  0000D1                     getsUSBUSART@len:
  3494                           	opt stack 0
  3495  0000D1                     CDCTxService@i:
  3496                           	opt stack 0
  3497                           
  3498                           ; 1 bytes @ 0x9
  3499  0000D1                     	ds	1
  3500  0000D2                     CDCTxService@byte_to_send:
  3501                           	opt stack 0
  3502                           
  3503                           ; 1 bytes @ 0xA
  3504  0000D2                     	ds	1
  3505  0000D3                     oled_putChar@k:
  3506                           	opt stack 0
  3507  0000D3                     _getsUSBUSART$5738:
  3508                           	opt stack 0
  3509                           
  3510                           ; 2 bytes @ 0xB
  3511  0000D3                     	ds	1
  3512  0000D4                     oled_putChar@index:
  3513                           	opt stack 0
  3514                           
  3515                           ; 1 bytes @ 0xC
  3516  0000D4                     	ds	1
  3517  0000D5                     ??_USBapp_DeviceCdcEmulatorHandler:
  3518  0000D5                     oled_clearRow@page:
  3519                           	opt stack 0
  3520  0000D5                     oled_putString@string:
  3521                           	opt stack 0
  3522                           
  3523                           ; 2 bytes @ 0xD
  3524  0000D5                     	ds	1
  3525  0000D6                     oled_clearRow@index:
  3526                           	opt stack 0
  3527                           
  3528                           ; 1 bytes @ 0xE
  3529  0000D6                     	ds	1
  3530  0000D7                     moteApp_GoToSleep@status:
  3531                           	opt stack 0
  3532  0000D7                     oled_putString@station_dot:
  3533                           	opt stack 0
  3534                           
  3535                           ; 1 bytes @ 0xF
  3536  0000D7                     	ds	1
  3537  0000D8                     oled_putString@start_page:
  3538                           	opt stack 0
  3539                           
  3540                           ; 1 bytes @ 0x10
  3541  0000D8                     	ds	1
  3542  0000D9                     oled_putString@index:
  3543                           	opt stack 0
  3544                           
  3545                           ; 1 bytes @ 0x11
  3546  0000D9                     	ds	1
  3547  0000DA                     moteJoiningProcess@switchEvent:
  3548                           	opt stack 0
  3549  0000DA                     oled_putUint8@station_dot:
  3550                           	opt stack 0
  3551  0000DA                     test_switch@timeout:
  3552                           	opt stack 0
  3553  0000DA                     oled_putUint16@number:
  3554                           	opt stack 0
  3555                           
  3556                           ; 2 bytes @ 0x12
  3557  0000DA                     	ds	1
  3558  0000DB                     moteJoiningProcess@joiningComplete:
  3559                           	opt stack 0
  3560  0000DB                     oled_putUint8@start_page:
  3561                           	opt stack 0
  3562                           
  3563                           ; 1 bytes @ 0x13
  3564  0000DB                     	ds	1
  3565  0000DC                     test_switch@buttonCheck:
  3566                           	opt stack 0
  3567  0000DC                     moteJoiningProcess@readDataRate:
  3568                           	opt stack 0
  3569  0000DC                     oled_putUint8@number:
  3570                           	opt stack 0
  3571  0000DC                     oled_putUint16@station_dot:
  3572                           	opt stack 0
  3573                           
  3574                           ; 1 bytes @ 0x14
  3575  0000DC                     	ds	1
  3576  0000DD                     moteJoiningProcess@messageReady:
  3577                           	opt stack 0
  3578  0000DD                     oled_putUint16@start_page:
  3579                           	opt stack 0
  3580  0000DD                     oled_putUint8@numData:
  3581                           	opt stack 0
  3582                           
  3583                           ; 6 bytes @ 0x15
  3584  0000DD                     	ds	1
  3585  0000DE                     oled_putUint16@numData:
  3586                           	opt stack 0
  3587                           
  3588                           ; 6 bytes @ 0x16
  3589  0000DE                     	ds	6
  3590  0000E4                     moteRunningProcess@selectButton:
  3591                           	opt stack 0
  3592  0000E4                     test_adc@L:
  3593                           	opt stack 0
  3594                           
  3595                           ; 2 bytes @ 0x1C
  3596  0000E4                     	ds	1
  3597  0000E5                     moteRunningProcess@messageReady:
  3598                           	opt stack 0
  3599                           
  3600                           ; 1 bytes @ 0x1D
  3601  0000E5                     	ds	1
  3602  0000E6                     moteRunningProcess@sleepEvent:
  3603                           	opt stack 0
  3604  0000E6                     test_adc@Traw:
  3605                           	opt stack 0
  3606                           
  3607                           ; 2 bytes @ 0x1E
  3608  0000E6                     	ds	1
  3609  0000E7                     ??_moteRunningProcess:
  3610                           
  3611                           ; 0 bytes @ 0x1F
  3612  0000E7                     	ds	1
  3613  0000E8                     test_adc@T:
  3614                           	opt stack 0
  3615                           
  3616                           ; 1 bytes @ 0x20
  3617  0000E8                     	ds	1
  3618  0000E9                     test_adc@count:
  3619                           	opt stack 0
  3620  0000E9                     moteRunningProcess@Traw:
  3621                           	opt stack 0
  3622                           
  3623                           ; 2 bytes @ 0x21
  3624  0000E9                     	ds	1
  3625  0000EA                     
  3626                           ; 0 bytes @ 0x22
  3627  0000EA                     	ds	1
  3628  0000EB                     moteRunningProcess@i:
  3629                           	opt stack 0
  3630                           
  3631                           ; 1 bytes @ 0x23
  3632  0000EB                     	ds	1
  3633  0000EC                     moteRunningProcess@i_1410:
  3634                           	opt stack 0
  3635                           
  3636                           ; 1 bytes @ 0x24
  3637  0000EC                     	ds	1
  3638  0000ED                     moteRunningProcess@dummyRead1:
  3639                           	opt stack 0
  3640                           
  3641                           ; 1 bytes @ 0x25
  3642  0000ED                     	ds	1
  3643  0000EE                     moteRunningProcess@dummyRead2:
  3644                           	opt stack 0
  3645                           
  3646                           ; 1 bytes @ 0x26
  3647  0000EE                     	ds	1
  3648  0000EF                     moteRunningProcess@counter:
  3649                           	opt stack 0
  3650                           
  3651                           ; 1 bytes @ 0x27
  3652  0000EF                     	ds	1
  3653  0000F0                     moteRunningProcess@counter_1556:
  3654                           	opt stack 0
  3655                           
  3656                           ; 1 bytes @ 0x28
  3657  0000F0                     	ds	1
  3658  0000F1                     moteRunningProcess@bufferReadPos:
  3659                           	opt stack 0
  3660                           
  3661                           ; 1 bytes @ 0x29
  3662  0000F1                     	ds	1
  3663  0000F2                     moteRunningProcess@changeStates:
  3664                           	opt stack 0
  3665                           
  3666                           ; 1 bytes @ 0x2A
  3667  0000F2                     	ds	1
  3668  0000F3                     ??_moteHandler:
  3669                           
  3670                           ; 0 bytes @ 0x2B
  3671  0000F3                     	ds	2
  3672  0000F5                     tblptru	equ	0xFF8
  3673                           tblptrh	equ	0xFF7
  3674                           tblptrl	equ	0xFF6
  3675                           tablat	equ	0xFF5
  3676                           postinc0	equ	0xFEE
  3677                           wreg	equ	0xFE8
  3678                           postdec1	equ	0xFE5
  3679                           fsr1l	equ	0xFE1
  3680                           
  3681                           ; 0 bytes @ 0x2D
  3682                           
  3683                           	psect	cstackCOMRAM
  3684  00002E                     __pcstackCOMRAM:
  3685                           	opt stack 0
  3686  00002E                     ??_USBStdGetDscHandler:
  3687  00002E                     ?i2_USBTransferOnePacket:
  3688                           	opt stack 0
  3689  00002E                     ?___lldiv:
  3690                           	opt stack 0
  3691  00002E                     USBConfigureEndpoint@direction:
  3692                           	opt stack 0
  3693  00002E                     USBCtrlTrfTxService@byteToSend:
  3694                           	opt stack 0
  3695  00002E                     i2USBTransferOnePacket@dir:
  3696                           	opt stack 0
  3697  00002E                     USBStdGetStatusHandler@p:
  3698                           	opt stack 0
  3699  00002E                     i2memset@p1:
  3700                           	opt stack 0
  3701  00002E                     ___lldiv@dividend:
  3702                           	opt stack 0
  3703                           
  3704                           ; 4 bytes @ 0x0
  3705  00002E                     	ds	1
  3706  00002F                     ??_USBConfigureEndpoint:
  3707  00002F                     i2USBTransferOnePacket@data:
  3708                           	opt stack 0
  3709                           
  3710                           ; 2 bytes @ 0x1
  3711  00002F                     	ds	1
  3712  000030                     i2memset@c:
  3713                           	opt stack 0
  3714                           
  3715                           ; 2 bytes @ 0x2
  3716  000030                     	ds	1
  3717  000031                     i2USBTransferOnePacket@len:
  3718                           	opt stack 0
  3719                           
  3720                           ; 1 bytes @ 0x3
  3721  000031                     	ds	1
  3722  000032                     i2USBTransferOnePacket@ep:
  3723                           	opt stack 0
  3724  000032                     i2memset@n:
  3725                           	opt stack 0
  3726  000032                     ___lldiv@divisor:
  3727                           	opt stack 0
  3728                           
  3729                           ; 4 bytes @ 0x4
  3730  000032                     	ds	1
  3731  000033                     USBConfigureEndpoint@EPNum:
  3732                           	opt stack 0
  3733  000033                     i2USBTransferOnePacket@handle:
  3734                           	opt stack 0
  3735                           
  3736                           ; 2 bytes @ 0x5
  3737  000033                     	ds	1
  3738  000034                     USBConfigureEndpoint@handle:
  3739                           	opt stack 0
  3740  000034                     i2memset@p:
  3741                           	opt stack 0
  3742                           
  3743                           ; 2 bytes @ 0x6
  3744  000034                     	ds	2
  3745  000036                     USBEnableEndpoint@options:
  3746                           	opt stack 0
  3747  000036                     i2USBDeviceInit@i:
  3748                           	opt stack 0
  3749  000036                     ___lldiv@quotient:
  3750                           	opt stack 0
  3751                           
  3752                           ; 4 bytes @ 0x8
  3753  000036                     	ds	1
  3754  000037                     USBEnableEndpoint@p:
  3755                           	opt stack 0
  3756                           
  3757                           ; 2 bytes @ 0x9
  3758  000037                     	ds	2
  3759  000039                     USBEnableEndpoint@ep:
  3760                           	opt stack 0
  3761                           
  3762                           ; 1 bytes @ 0xB
  3763  000039                     	ds	1
  3764  00003A                     USBapp_CdcEmulatorInitialize@i:
  3765                           	opt stack 0
  3766  00003A                     ___lldiv@counter:
  3767                           	opt stack 0
  3768                           
  3769                           ; 1 bytes @ 0xC
  3770  00003A                     	ds	1
  3771  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3772                           	opt stack 0
  3773  00003B                     USART_mySetLineCodingHandler@dwBaud:
  3774                           	opt stack 0
  3775                           
  3776                           ; 4 bytes @ 0xD
  3777  00003B                     	ds	2
  3778  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3779                           	opt stack 0
  3780                           
  3781                           ; 2 bytes @ 0xF
  3782  00003D                     	ds	2
  3783  00003F                     USBCtrlTrfRxService@i:
  3784                           	opt stack 0
  3785  00003F                     USBCtrlTrfInHandler@lastDTS:
  3786                           	opt stack 0
  3787  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3788                           	opt stack 0
  3789                           
  3790                           ; 2 bytes @ 0x11
  3791  00003F                     	ds	1
  3792  000040                     USBCtrlTrfRxService@byteToRead:
  3793                           	opt stack 0
  3794                           
  3795                           ; 1 bytes @ 0x12
  3796  000040                     	ds	1
  3797  000041                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3798                           
  3799                           ; 0 bytes @ 0x13
  3800  000041                     	ds	2
  3801  000043                     ??_USBStdFeatureReqHandler:
  3802  000043                     USBStdSetCfgHandler@i:
  3803                           	opt stack 0
  3804                           
  3805                           ; 1 bytes @ 0x15
  3806  000043                     	ds	2
  3807  000045                     USBStdFeatureReqHandler@pUEP:
  3808                           	opt stack 0
  3809                           
  3810                           ; 2 bytes @ 0x17
  3811  000045                     	ds	2
  3812  000047                     USBStdFeatureReqHandler@current_ep_data:
  3813                           	opt stack 0
  3814                           
  3815                           ; 1 bytes @ 0x19
  3816  000047                     	ds	1
  3817  000048                     USBStdFeatureReqHandler@p:
  3818                           	opt stack 0
  3819                           
  3820                           ; 2 bytes @ 0x1A
  3821  000048                     	ds	2
  3822  00004A                     ??_USBCheckStdRequest:
  3823                           
  3824                           ; 0 bytes @ 0x1C
  3825  00004A                     	ds	1
  3826  00004B                     ??_USBCtrlEPService:
  3827  00004B                     
  3828                           ; 0 bytes @ 0x1D
  3829  00004B                     	ds	2
  3830  00004D                     USBCtrlEPService@setup_cnt:
  3831                           	opt stack 0
  3832                           
  3833                           ; 1 bytes @ 0x1F
  3834  00004D                     	ds	1
  3835  00004E                     USBDeviceTasks@i:
  3836                           	opt stack 0
  3837                           
  3838                           ; 1 bytes @ 0x20
  3839  00004E                     	ds	1
  3840  00004F                     ??_INTERRUPT_InterruptManager:
  3841                           
  3842                           ; 0 bytes @ 0x21
  3843  00004F                     	ds	12
  3844                           tblptru	equ	0xFF8
  3845                           tblptrh	equ	0xFF7
  3846                           tblptrl	equ	0xFF6
  3847                           tablat	equ	0xFF5
  3848                           postinc0	equ	0xFEE
  3849                           wreg	equ	0xFE8
  3850                           postdec1	equ	0xFE5
  3851                           fsr1l	equ	0xFE1
  3852                           
  3853 ;;
  3854 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3855 ;;
  3856 ;; *************** function _main *****************
  3857 ;; Defined at:
  3858 ;;		line 40 in file "main.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;		None
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;		None               void
  3865 ;; Registers used:
  3866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : F/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3872 ;;      Params:         0       0       0       0       0       0       0       0       0
  3873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3875 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3876 ;;Total ram usage:        0 bytes
  3877 ;; Hardware stack levels required when called:   21
  3878 ;; This function calls:
  3879 ;;		_DATAEE_ReadByte
  3880 ;;		_DATAEE_WriteByte
  3881 ;;		_MOTEapp_handlerState
  3882 ;;		_SYSTEM_Initialize
  3883 ;;		_USBDeviceAttach
  3884 ;;		_USBDeviceInit
  3885 ;;		_USBapp_Handler
  3886 ;;		_USBapp_handlerState
  3887 ;;		_modemResync
  3888 ;;		_moteApp_delayms
  3889 ;;		_moteHandler
  3890 ;;		_oled_clear
  3891 ;;		_oled_init
  3892 ;;		_oled_putString
  3893 ;;		_test_powerup
  3894 ;; This function is called by:
  3895 ;;		Startup code after reset
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text0
  3900  004FBC                     __ptext0:
  3901                           	opt stack 0
  3902  004FBC                     _main:
  3903                           	opt stack 10
  3904                           
  3905                           ;main.c: 43: SYSTEM_Initialize();
  3906                           
  3907                           ;incstack = 0
  3908  004FBC  EC4E  F01B         	call	_SYSTEM_Initialize	;wreg free
  3909                           
  3910                           ;main.c: 45: oled_init();
  3911  004FC0  EC80  F01B         	call	_oled_init	;wreg free
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;main.c: 46: USBDeviceInit();
  3915  004FC4  EC47  F028         	call	_USBDeviceInit	;wreg free
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;main.c: 48: USBDeviceAttach();
  3919  004FC8  EC89  F01C         	call	_USBDeviceAttach	;wreg free
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;main.c: 50: PEIE = 1;
  3923  004FCC  8CF2               	bsf	intcon,6,c	;volatile
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;main.c: 51: GIE = 1;
  3927  004FCE  8EF2               	bsf	intcon,7,c	;volatile
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;main.c: 53: moteApp_delayms(300);
  3931  004FD0  0E01               	movlw	1
  3932  004FD2  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3933  004FD4  0E2C               	movlw	44
  3934  004FD6  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  3935  004FD8  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;main.c: 54: modemResync();
  3939  004FDC  EC33  F020         	call	_modemResync	;wreg free
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;main.c: 55: moteApp_delayms(300);
  3943  004FE0  0E01               	movlw	1
  3944  004FE2  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3945  004FE4  0E2C               	movlw	44
  3946  004FE6  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  3947  004FE8  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  3948                           
  3949                           ;main.c: 59: powerOnStatus = DATAEE_ReadByte(0x00);
  3950  004FEC  0E00               	movlw	0
  3951  004FEE  ECC5  F01A         	call	_DATAEE_ReadByte
  3952  004FF2  0100               	movlb	0	; () banked
  3953  004FF4  6F96               	movwf	_powerOnStatus& (0+255),b
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;main.c: 60: if ( powerOnStatus != 0x55)
  3957  004FF6  0E55               	movlw	85
  3958  004FF8  1996               	xorwf	_powerOnStatus& (0+255),w,b
  3959  004FFA  E007               	bz	l12282
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;main.c: 61: {
  3963                           ;main.c: 62: test_powerup();
  3964  004FFC  EC38  F01D         	call	_test_powerup	;wreg free
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;main.c: 63: DATAEE_WriteByte(0x00, 0x55);
  3968  005000  0E55               	movlw	85
  3969  005002  6FC8               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3970  005004  0E00               	movlw	0
  3971  005006  EC54  F01D         	call	_DATAEE_WriteByte
  3972  00500A                     l12282:
  3973                           
  3974                           ;main.c: 64: }
  3975                           ;main.c: 67: operationType = USB;
  3976  00500A  0100               	movlb	0	; () banked
  3977  00500C  6B95               	clrf	_operationType& (0+255),b
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;main.c: 68: USBapp_handlerState(USB_STARTUP);
  3981  00500E  0E00               	movlw	0
  3982  005010  EC64  F01A         	call	_USBapp_handlerState
  3983                           
  3984                           ;main.c: 70: oled_clear();
  3985  005014  ECF9  F01A         	call	_oled_clear	;wreg free
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;main.c: 71: oled_putString("Microchip Mote",0,0);
  3989  005018  0E2D               	movlw	low STR_1
  3990  00501A  6FD5               	movwf	oled_putString@string& (0+255),b
  3991  00501C  0E7D               	movlw	high STR_1
  3992  00501E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  3993  005020  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  3994  005022  6BD8               	clrf	oled_putString@start_page& (0+255),b
  3995  005024  EC65  F020         	call	_oled_putString	;wreg free
  3996                           
  3997                           ;main.c: 72: oled_putString("   LoRa Demo  ",0,1);
  3998  005028  0E1E               	movlw	low STR_2
  3999  00502A  0100               	movlb	0	; () banked
  4000  00502C  6FD5               	movwf	oled_putString@string& (0+255),b
  4001  00502E  0E7D               	movlw	high STR_2
  4002  005030  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4003  005032  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4004  005034  0E01               	movlw	1
  4005  005036  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4006  005038  EC65  F020         	call	_oled_putString	;wreg free
  4007                           
  4008                           ;main.c: 73: oled_putString("   RC3 Code   ",0,3);
  4009  00503C  0E0F               	movlw	low STR_3
  4010  00503E  0100               	movlb	0	; () banked
  4011  005040  6FD5               	movwf	oled_putString@string& (0+255),b
  4012  005042  0E7D               	movlw	high STR_3
  4013  005044  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4014  005046  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4015  005048  0E03               	movlw	3
  4016  00504A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4017  00504C  EC65  F020         	call	_oled_putString	;wreg free
  4018                           
  4019                           ;main.c: 74: moteApp_delayms(700);
  4020  005050  0E02               	movlw	2
  4021  005052  0100               	movlb	0	; () banked
  4022  005054  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4023  005056  0EBC               	movlw	188
  4024  005058  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4025  00505A  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4026  00505E  D011               	goto	l12310
  4027  005060                     l55:
  4028  005060  D7FF               	goto	l55
  4029  005062                     l12296:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;main.c: 86: USBapp_Handler();
  4033  005062  EC76  F021         	call	_USBapp_Handler	;wreg free
  4034                           
  4035                           ;main.c: 88: operationType = MOTE;
  4036  005066  0E01               	movlw	1
  4037  005068  0100               	movlb	0	; () banked
  4038  00506A  6F95               	movwf	_operationType& (0+255),b
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;main.c: 89: MOTEapp_handlerState(MOTE_STARTUP);
  4042  00506C  EC60  F01A         	call	_MOTEapp_handlerState
  4043                           
  4044                           ;main.c: 90: break;
  4045  005070  D008               	goto	l12310
  4046  005072                     l12302:
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;main.c: 92: if (moteHandler() == MOTE_SWAP)
  4050  005072  ECEF  F02D         	call	_moteHandler	;wreg free
  4051  005076  0A04               	xorlw	4
  4052  005078  E104               	bnz	l12310
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;main.c: 93: {
  4056                           ;main.c: 95: operationType = USB;
  4057  00507A  6B95               	clrf	_operationType& (0+255),b
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;main.c: 96: USBapp_handlerState(USB_STARTUP);
  4061  00507C  0E00               	movlw	0
  4062  00507E  EC64  F01A         	call	_USBapp_handlerState
  4063  005082                     l12310:
  4064  005082  0100               	movlb	0	; () banked
  4065  005084  5195               	movf	_operationType& (0+255),w,b
  4066                           
  4067                           ; Switch size 1, requested type "speed"
  4068                           ; Number of cases is 2, Range of values is 0 to 1
  4069                           ; switch strategies available:
  4070                           ; Name         Instructions Cycles
  4071                           ; simple_byte            7     4 (average)
  4072                           ;	Chosen strategy is simple_byte
  4073  005086  E0ED               	bz	l12296
  4074  005088  0A01               	xorlw	1	; case 1
  4075  00508A  E0F3               	bz	l12302
  4076  00508C  D7E9               	goto	l55
  4077  00508E                     __end_of_main:
  4078                           	opt stack 0
  4079                           tblptru	equ	0xFF8
  4080                           tblptrh	equ	0xFF7
  4081                           tblptrl	equ	0xFF6
  4082                           tablat	equ	0xFF5
  4083                           intcon	equ	0xFF2
  4084                           postinc0	equ	0xFEE
  4085                           wreg	equ	0xFE8
  4086                           postdec1	equ	0xFE5
  4087                           fsr1l	equ	0xFE1
  4088                           
  4089 ;; *************** function _test_powerup *****************
  4090 ;; Defined at:
  4091 ;;		line 27 in file "../Includes/Board/poweruptest.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;		None               void
  4098 ;; Registers used:
  4099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : F/0
  4102 ;;		On exit  : F/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4105 ;;      Params:         0       0       0       0       0       0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4108 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4109 ;;Total ram usage:        0 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:   18
  4112 ;; This function calls:
  4113 ;;		_moteApp_delayms
  4114 ;;		_oled_clear
  4115 ;;		_test_adc
  4116 ;;		_test_comms
  4117 ;;		_test_leds
  4118 ;;		_test_oled
  4119 ;;		_test_switch
  4120 ;; This function is called by:
  4121 ;;		_main
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text1
  4126  003A70                     __ptext1:
  4127                           	opt stack 0
  4128  003A70                     _test_powerup:
  4129                           	opt stack 12
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;poweruptest.c: 30: test_oled();
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;incstack = 0
  4136  003A70  ECB1  F021         	call	_test_oled	;wreg free
  4137                           
  4138                           ;poweruptest.c: 31: moteApp_delayms(20);
  4139  003A74  0100               	movlb	0	; () banked
  4140  003A76  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4141  003A78  0E14               	movlw	20
  4142  003A7A  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4143  003A7C  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;poweruptest.c: 33: test_switch();
  4147  003A80  EC52  F025         	call	_test_switch	;wreg free
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;poweruptest.c: 35: oled_clear();
  4151  003A84  ECF9  F01A         	call	_oled_clear	;wreg free
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;poweruptest.c: 36: moteApp_delayms(20);
  4155  003A88  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4156  003A8A  0E14               	movlw	20
  4157  003A8C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4158  003A8E  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;poweruptest.c: 37: test_comms();
  4162  003A92  EC4C  F01F         	call	_test_comms	;wreg free
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;poweruptest.c: 39: test_leds();
  4166  003A96  EC22  F01F         	call	_test_leds	;wreg free
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;poweruptest.c: 41: test_adc();
  4170  003A9A  EC5D  F026         	call	_test_adc	;wreg free
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;poweruptest.c: 44: moteApp_delayms(20);
  4174  003A9E  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4175  003AA0  0E14               	movlw	20
  4176  003AA2  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4177  003AA4  EFCC  F01B         	goto	_moteApp_delayms	;wreg free
  4178  003AA8                     __end_of_test_powerup:
  4179                           	opt stack 0
  4180                           tblptru	equ	0xFF8
  4181                           tblptrh	equ	0xFF7
  4182                           tblptrl	equ	0xFF6
  4183                           tablat	equ	0xFF5
  4184                           intcon	equ	0xFF2
  4185                           postinc0	equ	0xFEE
  4186                           wreg	equ	0xFE8
  4187                           postdec1	equ	0xFE5
  4188                           fsr1l	equ	0xFE1
  4189                           
  4190 ;; *************** function _test_switch *****************
  4191 ;; Defined at:
  4192 ;;		line 60 in file "../Includes/Board/poweruptest.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  timeout         2   18[BANK0 ] unsigned int 
  4197 ;;  buttonCheck     1   20[BANK0 ] unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;		None               void
  4200 ;; Registers used:
  4201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : F/0
  4204 ;;		On exit  : F/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0
  4208 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4210 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4211 ;;Total ram usage:        3 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:   17
  4214 ;; This function calls:
  4215 ;;		_moteApp_delayms
  4216 ;;		_oled_clear
  4217 ;;		_oled_putString
  4218 ;; This function is called by:
  4219 ;;		_test_powerup
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text2
  4224  004AA4                     __ptext2:
  4225                           	opt stack 0
  4226  004AA4                     _test_switch:
  4227                           	opt stack 12
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;poweruptest.c: 62: uint16_t timeout = 500;
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;incstack = 0
  4234  004AA4  0E01               	movlw	1
  4235  004AA6  6FDB               	movwf	(test_switch@timeout+1)& (0+255),b
  4236  004AA8  0EF4               	movlw	244
  4237  004AAA  6FDA               	movwf	test_switch@timeout& (0+255),b
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;poweruptest.c: 63: uint8_t buttonCheck = 0x00;
  4241  004AAC  6BDC               	clrf	test_switch@buttonCheck& (0+255),b
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;poweruptest.c: 64: oled_clear();
  4245  004AAE  ECF9  F01A         	call	_oled_clear	;wreg free
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;poweruptest.c: 65: oled_putString("Button Test:",0,0);
  4249  004AB2  0E03               	movlw	low STR_10
  4250  004AB4  6FD5               	movwf	oled_putString@string& (0+255),b
  4251  004AB6  0E7E               	movlw	high STR_10
  4252  004AB8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4253  004ABA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4254  004ABC  6BD8               	clrf	oled_putString@start_page& (0+255),b
  4255  004ABE  EC65  F020         	call	_oled_putString	;wreg free
  4256                           
  4257                           ;poweruptest.c: 67: if( (PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  4258  004AC2  A082               	btfss	3970,0,c	;volatile
  4259  004AC4  D002               	goto	l10694
  4260  004AC6  B282               	btfsc	3970,1,c	;volatile
  4261  004AC8  D00B               	goto	l10696
  4262  004ACA                     l10694:
  4263                           
  4264                           ;poweruptest.c: 68: {
  4265                           ;poweruptest.c: 69: oled_putString("Button FAIL",0,3);
  4266  004ACA  0EA3               	movlw	low STR_11
  4267  004ACC  0100               	movlb	0	; () banked
  4268  004ACE  6FD5               	movwf	oled_putString@string& (0+255),b
  4269  004AD0  0E7E               	movlw	high STR_11
  4270  004AD2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4271  004AD4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4272  004AD6  0E03               	movlw	3
  4273  004AD8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4274  004ADA  EC65  F020         	call	_oled_putString	;wreg free
  4275                           
  4276                           ;poweruptest.c: 70: }
  4277  004ADE  D030               	goto	l10714
  4278  004AE0                     l10696:
  4279                           
  4280                           ;poweruptest.c: 71: else
  4281                           ;poweruptest.c: 72: {
  4282                           ;poweruptest.c: 73: oled_putString("Press Button",0,1);
  4283  004AE0  0E2A               	movlw	low STR_12
  4284  004AE2  0100               	movlb	0	; () banked
  4285  004AE4  6FD5               	movwf	oled_putString@string& (0+255),b
  4286  004AE6  0E7E               	movlw	high STR_12
  4287  004AE8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4288  004AEA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4289  004AEC  0E01               	movlw	1
  4290  004AEE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4291  004AF0  EC65  F020         	call	_oled_putString	;wreg free
  4292  004AF4  D025               	goto	l10714
  4293  004AF6                     l120:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;poweruptest.c: 76: {
  4297                           ;poweruptest.c: 77: if(PORTCbits.RC0 == 0)
  4298  004AF6  B082               	btfsc	3970,0,c	;volatile
  4299  004AF8  D00C               	goto	l10702
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;poweruptest.c: 78: {
  4303                           ;poweruptest.c: 79: oled_putString("Button1 PASS",0,2);
  4304  004AFA  0E10               	movlw	low STR_13
  4305  004AFC  6FD5               	movwf	oled_putString@string& (0+255),b
  4306  004AFE  0E7E               	movlw	high STR_13
  4307  004B00  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4308  004B02  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4309  004B04  0E02               	movlw	2
  4310  004B06  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4311  004B08  EC65  F020         	call	_oled_putString	;wreg free
  4312                           
  4313                           ;poweruptest.c: 80: buttonCheck = buttonCheck + 0x08;
  4314  004B0C  0E08               	movlw	8
  4315  004B0E  0100               	movlb	0	; () banked
  4316  004B10  27DC               	addwf	test_switch@buttonCheck& (0+255),f,b
  4317  004B12                     l10702:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;poweruptest.c: 81: }
  4321                           ;poweruptest.c: 82: if(PORTCbits.RC1 == 0)
  4322  004B12  B282               	btfsc	3970,1,c	;volatile
  4323  004B14  D00C               	goto	l10708
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;poweruptest.c: 83: {
  4327                           ;poweruptest.c: 84: oled_putString("Button2 PASS",0,3);
  4328  004B16  0E1D               	movlw	low STR_14
  4329  004B18  6FD5               	movwf	oled_putString@string& (0+255),b
  4330  004B1A  0E7E               	movlw	high STR_14
  4331  004B1C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4332  004B1E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4333  004B20  0E03               	movlw	3
  4334  004B22  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4335  004B24  EC65  F020         	call	_oled_putString	;wreg free
  4336                           
  4337                           ;poweruptest.c: 85: buttonCheck = buttonCheck + 0x80;
  4338  004B28  0E80               	movlw	128
  4339  004B2A  0100               	movlb	0	; () banked
  4340  004B2C  27DC               	addwf	test_switch@buttonCheck& (0+255),f,b
  4341  004B2E                     l10708:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;poweruptest.c: 86: }
  4345                           ;poweruptest.c: 87: if (buttonCheck == 0x88)
  4346  004B2E  0E88               	movlw	136
  4347  004B30  19DC               	xorwf	test_switch@buttonCheck& (0+255),w,b
  4348  004B32  E101               	bnz	l10712
  4349  004B34  0012               	return	
  4350  004B36                     l10712:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;poweruptest.c: 90: }
  4354                           ;poweruptest.c: 91: moteApp_delayms(10);
  4355  004B36  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4356  004B38  0E0A               	movlw	10
  4357  004B3A  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4358  004B3C  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4359  004B40                     l10714:
  4360  004B40  0100               	movlb	0	; () banked
  4361  004B42  07DA               	decf	test_switch@timeout& (0+255),f,b
  4362  004B44  A0D8               	btfss	status,0,c
  4363  004B46  07DB               	decf	(test_switch@timeout+1)& (0+255),f,b
  4364  004B48  29DA               	incf	test_switch@timeout& (0+255),w,b
  4365  004B4A  E1D5               	bnz	l120
  4366  004B4C  29DB               	incf	(test_switch@timeout+1)& (0+255),w,b
  4367  004B4E  E1D3               	bnz	l120
  4368                           
  4369                           ; BSR set to: 0
  4370  004B50  0012               	return		;funcret
  4371  004B52                     __end_of_test_switch:
  4372                           	opt stack 0
  4373                           tblptru	equ	0xFF8
  4374                           tblptrh	equ	0xFF7
  4375                           tblptrl	equ	0xFF6
  4376                           tablat	equ	0xFF5
  4377                           intcon	equ	0xFF2
  4378                           postinc0	equ	0xFEE
  4379                           wreg	equ	0xFE8
  4380                           postdec1	equ	0xFE5
  4381                           fsr1l	equ	0xFE1
  4382                           status	equ	0xFD8
  4383                           
  4384 ;; *************** function _test_oled *****************
  4385 ;; Defined at:
  4386 ;;		line 47 in file "../Includes/Board/poweruptest.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;		None
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;		None
  4391 ;; Return value:  Size  Location     Type
  4392 ;;		None               void
  4393 ;; Registers used:
  4394 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : F/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0
  4401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4403 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4404 ;;Total ram usage:        0 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:   17
  4407 ;; This function calls:
  4408 ;;		_oled_clear
  4409 ;;		_oled_putString
  4410 ;; This function is called by:
  4411 ;;		_test_powerup
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text3
  4416  004362                     __ptext3:
  4417                           	opt stack 0
  4418  004362                     _test_oled:
  4419                           	opt stack 12
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;poweruptest.c: 49: oled_clear();
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;incstack = 0
  4426  004362  ECF9  F01A         	call	_oled_clear	;wreg free
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;poweruptest.c: 51: oled_putString("MoTe v .",0,0);
  4430  004366  0E63               	movlw	low STR_4
  4431  004368  6FD5               	movwf	oled_putString@string& (0+255),b
  4432  00436A  0E7F               	movlw	high STR_4
  4433  00436C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4434  00436E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4435  004370  6BD8               	clrf	oled_putString@start_page& (0+255),b
  4436  004372  EC65  F020         	call	_oled_putString	;wreg free
  4437                           
  4438                           ;poweruptest.c: 52: oled_putString("0",0,6);
  4439  004376  0E86               	movlw	low (STR_97+13)
  4440  004378  0100               	movlb	0	; () banked
  4441  00437A  6FD5               	movwf	oled_putString@string& (0+255),b
  4442  00437C  0E7C               	movlw	high (STR_97+13)
  4443  00437E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4444  004380  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4445  004382  0E06               	movlw	6
  4446  004384  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4447  004386  EC65  F020         	call	_oled_putString	;wreg free
  4448                           
  4449                           ;poweruptest.c: 53: oled_putString("1",0,8);
  4450  00438A  0E95               	movlw	low (STR_98+13)
  4451  00438C  0100               	movlb	0	; () banked
  4452  00438E  6FD5               	movwf	oled_putString@string& (0+255),b
  4453  004390  0E7C               	movlw	high (STR_98+13)
  4454  004392  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4455  004394  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4456  004396  0E08               	movlw	8
  4457  004398  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4458  00439A  EC65  F020         	call	_oled_putString	;wreg free
  4459                           
  4460                           ;poweruptest.c: 54: oled_putString("Build Date/Time",0,1);
  4461  00439E  0E3C               	movlw	low STR_7
  4462  0043A0  0100               	movlb	0	; () banked
  4463  0043A2  6FD5               	movwf	oled_putString@string& (0+255),b
  4464  0043A4  0E7C               	movlw	high STR_7
  4465  0043A6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4466  0043A8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4467  0043AA  0E01               	movlw	1
  4468  0043AC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4469  0043AE  EC65  F020         	call	_oled_putString	;wreg free
  4470                           
  4471                           ;poweruptest.c: 55: oled_putString("Nov 13 2015",0,2);
  4472  0043B2  0E97               	movlw	low STR_8
  4473  0043B4  0100               	movlb	0	; () banked
  4474  0043B6  6FD5               	movwf	oled_putString@string& (0+255),b
  4475  0043B8  0E7E               	movlw	high STR_8
  4476  0043BA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4477  0043BC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4478  0043BE  0E02               	movlw	2
  4479  0043C0  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4480  0043C2  EC65  F020         	call	_oled_putString	;wreg free
  4481                           
  4482                           ;poweruptest.c: 56: oled_putString("11:58:22",0,3);
  4483  0043C6  0E6C               	movlw	low STR_9
  4484  0043C8  0100               	movlb	0	; () banked
  4485  0043CA  6FD5               	movwf	oled_putString@string& (0+255),b
  4486  0043CC  0E7F               	movlw	high STR_9
  4487  0043CE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4488  0043D0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4489  0043D2  0E03               	movlw	3
  4490  0043D4  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4491  0043D6  EF65  F020         	goto	_oled_putString	;wreg free
  4492  0043DA                     __end_of_test_oled:
  4493                           	opt stack 0
  4494                           tblptru	equ	0xFF8
  4495                           tblptrh	equ	0xFF7
  4496                           tblptrl	equ	0xFF6
  4497                           tablat	equ	0xFF5
  4498                           intcon	equ	0xFF2
  4499                           postinc0	equ	0xFEE
  4500                           wreg	equ	0xFE8
  4501                           postdec1	equ	0xFE5
  4502                           fsr1l	equ	0xFE1
  4503                           status	equ	0xFD8
  4504                           
  4505 ;; *************** function _test_leds *****************
  4506 ;; Defined at:
  4507 ;;		line 108 in file "../Includes/Board/poweruptest.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;		None
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;		None
  4512 ;; Return value:  Size  Location     Type
  4513 ;;		None               void
  4514 ;; Registers used:
  4515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : F/0
  4518 ;;		On exit  : F/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4521 ;;      Params:         0       0       0       0       0       0       0       0       0
  4522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4524 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4525 ;;Total ram usage:        0 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:   16
  4528 ;; This function calls:
  4529 ;;		_moteApp_delayms
  4530 ;;		_oled_putString
  4531 ;; This function is called by:
  4532 ;;		_test_powerup
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text4
  4537  003E44                     __ptext4:
  4538                           	opt stack 0
  4539  003E44                     _test_leds:
  4540                           	opt stack 13
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;poweruptest.c: 110: oled_putString("LED Test:",0,1);
  4544                           
  4545                           ;incstack = 0
  4546  003E44  0E23               	movlw	low STR_16
  4547  003E46  6FD5               	movwf	oled_putString@string& (0+255),b
  4548  003E48  0E7F               	movlw	high STR_16
  4549  003E4A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4550  003E4C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4551  003E4E  0E01               	movlw	1
  4552  003E50  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4553  003E52  EC65  F020         	call	_oled_putString	;wreg free
  4554                           
  4555                           ;poweruptest.c: 112: LATAbits.LATA6 = 1;
  4556  003E56  8C89               	bsf	3977,6,c	;volatile
  4557                           
  4558                           ;poweruptest.c: 113: LATAbits.LATA7 = 1;
  4559  003E58  8E89               	bsf	3977,7,c	;volatile
  4560                           
  4561                           ;poweruptest.c: 114: moteApp_delayms(500);
  4562  003E5A  0E01               	movlw	1
  4563  003E5C  0100               	movlb	0	; () banked
  4564  003E5E  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4565  003E60  0EF4               	movlw	244
  4566  003E62  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4567  003E64  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;poweruptest.c: 115: LATAbits.LATA6 = 0;
  4571  003E68  9C89               	bcf	3977,6,c	;volatile
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;poweruptest.c: 116: LATAbits.LATA7 = 0;
  4575  003E6A  9E89               	bcf	3977,7,c	;volatile
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;poweruptest.c: 117: moteApp_delayms(500);
  4579  003E6C  0E01               	movlw	1
  4580  003E6E  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4581  003E70  0EF4               	movlw	244
  4582  003E72  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4583  003E74  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;poweruptest.c: 118: LATAbits.LATA6 = 1;
  4587  003E78  8C89               	bsf	3977,6,c	;volatile
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;poweruptest.c: 119: LATAbits.LATA7 = 1;
  4591  003E7A  8E89               	bsf	3977,7,c	;volatile
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;poweruptest.c: 120: moteApp_delayms(500);
  4595  003E7C  0E01               	movlw	1
  4596  003E7E  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4597  003E80  0EF4               	movlw	244
  4598  003E82  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4599  003E84  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;poweruptest.c: 121: LATAbits.LATA6 = 0;
  4603  003E88  9C89               	bcf	3977,6,c	;volatile
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;poweruptest.c: 122: LATAbits.LATA7 = 0;
  4607  003E8A  9E89               	bcf	3977,7,c	;volatile
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;poweruptest.c: 123: moteApp_delayms(500);
  4611  003E8C  0E01               	movlw	1
  4612  003E8E  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4613  003E90  0EF4               	movlw	244
  4614  003E92  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4615  003E94  EFCC  F01B         	goto	_moteApp_delayms	;wreg free
  4616  003E98                     __end_of_test_leds:
  4617                           	opt stack 0
  4618                           tblptru	equ	0xFF8
  4619                           tblptrh	equ	0xFF7
  4620                           tblptrl	equ	0xFF6
  4621                           tablat	equ	0xFF5
  4622                           intcon	equ	0xFF2
  4623                           postinc0	equ	0xFEE
  4624                           wreg	equ	0xFE8
  4625                           postdec1	equ	0xFE5
  4626                           fsr1l	equ	0xFE1
  4627                           status	equ	0xFD8
  4628                           
  4629 ;; *************** function _test_comms *****************
  4630 ;; Defined at:
  4631 ;;		line 95 in file "../Includes/Board/poweruptest.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;		None               void
  4638 ;; Registers used:
  4639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : F/0
  4642 ;;		On exit  : F/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0
  4646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4648 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4649 ;;Total ram usage:        0 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:   16
  4652 ;; This function calls:
  4653 ;;		_moteApp_delayms
  4654 ;;		_moteApp_toggleLeds
  4655 ;;		_oled_putString
  4656 ;; This function is called by:
  4657 ;;		_test_powerup
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text5
  4662  003E98                     __ptext5:
  4663                           	opt stack 0
  4664  003E98                     _test_comms:
  4665                           	opt stack 13
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;poweruptest.c: 97: oled_putString("Comm Test:",0,0);
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;incstack = 0
  4672  003E98  0EE6               	movlw	low STR_15
  4673  003E9A  6FD5               	movwf	oled_putString@string& (0+255),b
  4674  003E9C  0E7E               	movlw	high STR_15
  4675  003E9E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4676  003EA0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4677  003EA2  6BD8               	clrf	oled_putString@start_page& (0+255),b
  4678  003EA4  EC65  F020         	call	_oled_putString	;wreg free
  4679                           
  4680                           ;poweruptest.c: 98: moteApp_toggleLeds(1);
  4681  003EA8  0E01               	movlw	1
  4682  003EAA  ECCC  F020         	call	_moteApp_toggleLeds
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;poweruptest.c: 99: moteApp_delayms(500);
  4686  003EAE  0E01               	movlw	1
  4687  003EB0  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4688  003EB2  0EF4               	movlw	244
  4689  003EB4  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4690  003EB6  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;poweruptest.c: 100: moteApp_toggleLeds(0);
  4694  003EBA  0E00               	movlw	0
  4695  003EBC  ECCC  F020         	call	_moteApp_toggleLeds
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;poweruptest.c: 101: moteApp_delayms(500);
  4699  003EC0  0E01               	movlw	1
  4700  003EC2  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4701  003EC4  0EF4               	movlw	244
  4702  003EC6  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4703  003EC8  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;poweruptest.c: 102: moteApp_toggleLeds(1);
  4707  003ECC  0E01               	movlw	1
  4708  003ECE  ECCC  F020         	call	_moteApp_toggleLeds
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;poweruptest.c: 103: moteApp_delayms(500);
  4712  003ED2  0E01               	movlw	1
  4713  003ED4  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4714  003ED6  0EF4               	movlw	244
  4715  003ED8  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4716  003EDA  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;poweruptest.c: 104: moteApp_toggleLeds(0);
  4720  003EDE  0E00               	movlw	0
  4721  003EE0  ECCC  F020         	call	_moteApp_toggleLeds
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;poweruptest.c: 105: moteApp_delayms(500);
  4725  003EE4  0E01               	movlw	1
  4726  003EE6  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4727  003EE8  0EF4               	movlw	244
  4728  003EEA  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4729  003EEC  EFCC  F01B         	goto	_moteApp_delayms	;wreg free
  4730  003EF0                     __end_of_test_comms:
  4731                           	opt stack 0
  4732                           tblptru	equ	0xFF8
  4733                           tblptrh	equ	0xFF7
  4734                           tblptrl	equ	0xFF6
  4735                           tablat	equ	0xFF5
  4736                           intcon	equ	0xFF2
  4737                           postinc0	equ	0xFEE
  4738                           wreg	equ	0xFE8
  4739                           postdec1	equ	0xFE5
  4740                           fsr1l	equ	0xFE1
  4741                           status	equ	0xFD8
  4742                           
  4743 ;; *************** function _moteApp_toggleLeds *****************
  4744 ;; Defined at:
  4745 ;;		line 1365 in file "../Includes/Board/MOTEapp.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  state           1    wreg     unsigned char 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  state           1    5[BANK0 ] unsigned char 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;		None               void
  4752 ;; Registers used:
  4753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : F/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4759 ;;      Params:         0       0       0       0       0       0       0       0       0
  4760 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4762 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4763 ;;Total ram usage:        1 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:   14
  4766 ;; This function calls:
  4767 ;;		_moteApp_delayms
  4768 ;;		_sendCommand
  4769 ;; This function is called by:
  4770 ;;		_test_comms
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text6
  4775  004198                     __ptext6:
  4776                           	opt stack 0
  4777  004198                     _moteApp_toggleLeds:
  4778                           	opt stack 14
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;incstack = 0
  4782                           ;moteApp_toggleLeds@state stored from wreg
  4783  004198  0100               	movlb	0	; () banked
  4784  00419A  6FCD               	movwf	moteApp_toggleLeds@state& (0+255),b
  4785                           
  4786                           ;MOTEapp.c: 1367: moteApp_delayms(50);
  4787  00419C  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4788  00419E  0E32               	movlw	50
  4789  0041A0  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4790  0041A2  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;MOTEapp.c: 1368: if (state)
  4794  0041A6  51CD               	movf	moteApp_toggleLeds@state& (0+255),w,b
  4795  0041A8  E013               	bz	l10238
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;MOTEapp.c: 1369: {
  4799                           ;MOTEapp.c: 1370: sendCommand("sys set pindig GPIO10 1\r\n");
  4800  0041AA  0E3E               	movlw	low STR_254
  4801  0041AC  6FC9               	movwf	sendCommand@string& (0+255),b
  4802  0041AE  0E7A               	movlw	high STR_254
  4803  0041B0  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
  4804  0041B2  EC32  F01C         	call	_sendCommand	;wreg free
  4805                           
  4806                           ;MOTEapp.c: 1371: moteApp_delayms(50);
  4807  0041B6  0100               	movlb	0	; () banked
  4808  0041B8  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4809  0041BA  0E32               	movlw	50
  4810  0041BC  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4811  0041BE  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;MOTEapp.c: 1372: sendCommand("sys set pindig GPIO11 1\r\n");
  4815  0041C2  0E58               	movlw	low STR_255
  4816  0041C4  6FC9               	movwf	sendCommand@string& (0+255),b
  4817  0041C6  0E7A               	movlw	high STR_255
  4818  0041C8  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
  4819  0041CA  EC32  F01C         	call	_sendCommand	;wreg free
  4820                           
  4821                           ;MOTEapp.c: 1373: }
  4822  0041CE  D012               	goto	l709
  4823  0041D0                     l10238:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;MOTEapp.c: 1374: else
  4827                           ;MOTEapp.c: 1375: {
  4828                           ;MOTEapp.c: 1376: sendCommand("sys set pindig GPIO10 0\r\n");
  4829  0041D0  0E0A               	movlw	low STR_256
  4830  0041D2  6FC9               	movwf	sendCommand@string& (0+255),b
  4831  0041D4  0E7A               	movlw	high STR_256
  4832  0041D6  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
  4833  0041D8  EC32  F01C         	call	_sendCommand	;wreg free
  4834                           
  4835                           ;MOTEapp.c: 1377: moteApp_delayms(50);
  4836  0041DC  0100               	movlb	0	; () banked
  4837  0041DE  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4838  0041E0  0E32               	movlw	50
  4839  0041E2  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4840  0041E4  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;MOTEapp.c: 1378: sendCommand("sys set pindig GPIO11 0\r\n");
  4844  0041E8  0E24               	movlw	low STR_257
  4845  0041EA  6FC9               	movwf	sendCommand@string& (0+255),b
  4846  0041EC  0E7A               	movlw	high STR_257
  4847  0041EE  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
  4848  0041F0  EC32  F01C         	call	_sendCommand	;wreg free
  4849  0041F4                     l709:
  4850                           
  4851                           ;MOTEapp.c: 1379: }
  4852                           ;MOTEapp.c: 1380: moteApp_delayms(50);
  4853  0041F4  0100               	movlb	0	; () banked
  4854  0041F6  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4855  0041F8  0E32               	movlw	50
  4856  0041FA  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4857  0041FC  EFCC  F01B         	goto	_moteApp_delayms	;wreg free
  4858  004200                     __end_of_moteApp_toggleLeds:
  4859                           	opt stack 0
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           intcon	equ	0xFF2
  4865                           postinc0	equ	0xFEE
  4866                           wreg	equ	0xFE8
  4867                           postdec1	equ	0xFE5
  4868                           fsr1l	equ	0xFE1
  4869                           status	equ	0xFD8
  4870                           
  4871 ;; *************** function _test_adc *****************
  4872 ;; Defined at:
  4873 ;;		line 126 in file "../Includes/Board/poweruptest.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  Traw            2   30[BANK0 ] unsigned int 
  4878 ;;  L               2   28[BANK0 ] unsigned int 
  4879 ;;  F               2    0        unsigned int 
  4880 ;;  count           1   33[BANK0 ] unsigned char 
  4881 ;;  T               1   32[BANK0 ] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;		None               void
  4884 ;; Registers used:
  4885 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : F/0
  4888 ;;		On exit  : F/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4891 ;;      Params:         0       0       0       0       0       0       0       0       0
  4892 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4894 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4895 ;;Total ram usage:        6 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:   17
  4898 ;; This function calls:
  4899 ;;		_ADC_GetConversion
  4900 ;;		_ADC_TempConversion
  4901 ;;		_moteApp_delayms
  4902 ;;		_oled_clear
  4903 ;;		_oled_putChar
  4904 ;;		_oled_putString
  4905 ;;		_oled_putUint16
  4906 ;;		_oled_putUint8
  4907 ;; This function is called by:
  4908 ;;		_test_powerup
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text7
  4913  004CBA                     __ptext7:
  4914                           	opt stack 0
  4915  004CBA                     _test_adc:
  4916                           	opt stack 12
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;poweruptest.c: 128: uint16_t L,Traw,F;
  4920                           ;poweruptest.c: 129: uint8_t count, T;
  4921                           ;poweruptest.c: 131: oled_clear();
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;incstack = 0
  4925  004CBA  ECF9  F01A         	call	_oled_clear	;wreg free
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;poweruptest.c: 132: oled_putString("ADC Test",0,0);
  4929  004CBE  0E7E               	movlw	low STR_17
  4930  004CC0  6FD5               	movwf	oled_putString@string& (0+255),b
  4931  004CC2  0E7F               	movlw	high STR_17
  4932  004CC4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4933  004CC6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4934  004CC8  6BD8               	clrf	oled_putString@start_page& (0+255),b
  4935  004CCA  EC65  F020         	call	_oled_putString	;wreg free
  4936                           
  4937                           ;poweruptest.c: 133: oled_putString("Temp  =",0,1);
  4938  004CCE  0EA7               	movlw	low STR_18
  4939  004CD0  0100               	movlb	0	; () banked
  4940  004CD2  6FD5               	movwf	oled_putString@string& (0+255),b
  4941  004CD4  0E7F               	movlw	high STR_18
  4942  004CD6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4943  004CD8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4944  004CDA  0E01               	movlw	1
  4945  004CDC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4946  004CDE  EC65  F020         	call	_oled_putString	;wreg free
  4947                           
  4948                           ;poweruptest.c: 134: oled_putChar('C',14,1);
  4949  004CE2  0E0E               	movlw	14
  4950  004CE4  0100               	movlb	0	; () banked
  4951  004CE6  6FCB               	movwf	oled_putChar@station_dot& (0+255),b
  4952  004CE8  0E01               	movlw	1
  4953  004CEA  6FCC               	movwf	oled_putChar@start_page& (0+255),b
  4954  004CEC  0E43               	movlw	67
  4955  004CEE  EC3B  F021         	call	_oled_putChar
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;poweruptest.c: 135: oled_putString("Light =",0,2);
  4959  004CF2  0EAF               	movlw	low STR_19
  4960  004CF4  6FD5               	movwf	oled_putString@string& (0+255),b
  4961  004CF6  0E7F               	movlw	high STR_19
  4962  004CF8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  4963  004CFA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  4964  004CFC  0E02               	movlw	2
  4965  004CFE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  4966  004D00  EC65  F020         	call	_oled_putString	;wreg free
  4967                           
  4968                           ;poweruptest.c: 137: for(count=0;count< 50;count++)
  4969  004D04  0100               	movlb	0	; () banked
  4970  004D06  6BE9               	clrf	test_adc@count& (0+255),b
  4971  004D08                     l10774:
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;poweruptest.c: 138: {
  4975                           ;poweruptest.c: 140: moteApp_delayms(50);
  4976  004D08  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4977  004D0A  0E32               	movlw	50
  4978  004D0C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4979  004D0E  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4980                           
  4981                           ;poweruptest.c: 141: Traw = ADC_GetConversion(Temp_channel);
  4982  004D12  0E02               	movlw	2
  4983  004D14  EC71  F01D         	call	_ADC_GetConversion
  4984  004D18  C0C8  F0E6         	movff	?_ADC_GetConversion,test_adc@Traw
  4985  004D1C  C0C9  F0E7         	movff	?_ADC_GetConversion+1,test_adc@Traw+1
  4986                           
  4987                           ;poweruptest.c: 142: T = ADC_TempConversion(Traw);
  4988  004D20  51E6               	movf	test_adc@Traw& (0+255),w,b
  4989  004D22  EC6F  F01B         	call	_ADC_TempConversion
  4990  004D26  6FE8               	movwf	test_adc@T& (0+255),b
  4991                           
  4992                           ;poweruptest.c: 144: moteApp_delayms(50);
  4993  004D28  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4994  004D2A  0E32               	movlw	50
  4995  004D2C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  4996  004D2E  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  4997                           
  4998                           ;poweruptest.c: 145: L = ADC_GetConversion(Light_channel);
  4999  004D32  0E03               	movlw	3
  5000  004D34  EC71  F01D         	call	_ADC_GetConversion
  5001  004D38  C0C8  F0E4         	movff	?_ADC_GetConversion,test_adc@L
  5002  004D3C  C0C9  F0E5         	movff	?_ADC_GetConversion+1,test_adc@L+1
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;poweruptest.c: 147: oled_putUint8(T,10,1);
  5006  004D40  0E0A               	movlw	10
  5007  004D42  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  5008  004D44  0E01               	movlw	1
  5009  004D46  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  5010  004D48  51E8               	movf	test_adc@T& (0+255),w,b
  5011  004D4A  EC78  F01F         	call	_oled_putUint8
  5012                           
  5013                           ;poweruptest.c: 148: oled_putUint16(L,10,2);
  5014  004D4E  C0E4  F0DA         	movff	test_adc@L,oled_putUint16@number
  5015  004D52  C0E5  F0DB         	movff	test_adc@L+1,oled_putUint16@number+1
  5016  004D56  0E0A               	movlw	10
  5017  004D58  0100               	movlb	0	; () banked
  5018  004D5A  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  5019  004D5C  0E02               	movlw	2
  5020  004D5E  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  5021  004D60  ECE2  F02A         	call	_oled_putUint16	;wreg free
  5022  004D64  0100               	movlb	0	; () banked
  5023  004D66  2BE9               	incf	test_adc@count& (0+255),f,b
  5024                           
  5025                           ; BSR set to: 0
  5026  004D68  0E31               	movlw	49
  5027  004D6A  65E9               	cpfsgt	test_adc@count& (0+255),b
  5028  004D6C  D7CD               	goto	l10774
  5029  004D6E  0C31               	retlw	49
  5030  004D70                     __end_of_test_adc:
  5031                           	opt stack 0
  5032                           tblptru	equ	0xFF8
  5033                           tblptrh	equ	0xFF7
  5034                           tblptrl	equ	0xFF6
  5035                           tablat	equ	0xFF5
  5036                           intcon	equ	0xFF2
  5037                           postinc0	equ	0xFEE
  5038                           wreg	equ	0xFE8
  5039                           postdec1	equ	0xFE5
  5040                           fsr1l	equ	0xFE1
  5041                           status	equ	0xFD8
  5042                           
  5043 ;; *************** function _moteHandler *****************
  5044 ;; Defined at:
  5045 ;;		line 159 in file "../Includes/Board/MOTEapp.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;		None
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  i               1    7[BANK1 ] unsigned char 
  5050 ;;  i               1    6[BANK1 ] unsigned char 
  5051 ;;  Traw            2    2[BANK1 ] unsigned int 
  5052 ;;  readMessage     1    8[BANK1 ] unsigned char 
  5053 ;;  buttonPress     1    5[BANK1 ] enum E6421
  5054 ;;  s2Button        1    4[BANK1 ] unsigned char 
  5055 ;;  gotoNextStat    1    1[BANK1 ] unsigned char 
  5056 ;;  gotoSleep       1    0[BANK1 ] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      enum E7396
  5059 ;; Registers used:
  5060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : F/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0
  5067 ;;      Locals:         0       0       9       0       0       0       0       0       0
  5068 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5069 ;;      Totals:         0       2       9       0       0       0       0       0       0
  5070 ;;Total ram usage:       11 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:   20
  5073 ;; This function calls:
  5074 ;;		_ADC_GetConversion
  5075 ;;		_ADC_TempConversion
  5076 ;;		_MOTEapp_TimerBasedTask
  5077 ;;		_MOTEapp_getModemResponse
  5078 ;;		_TMRapp_ClearBitFlags
  5079 ;;		_TMRapp_Handler
  5080 ;;		_moteApp_delayms
  5081 ;;		_moteJoiningProcess
  5082 ;;		_moteRunningProcess
  5083 ;;		_oled_clear
  5084 ;;		_oled_putString
  5085 ;;		_service_pushbutton
  5086 ;; This function is called by:
  5087 ;;		_main
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text8
  5092  005BDE                     __ptext8:
  5093                           	opt stack 0
  5094  005BDE                     _moteHandler:
  5095                           	opt stack 10
  5096                           
  5097                           ;MOTEapp.c: 161: bool gotoSleep = 0;
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;incstack = 0
  5101  005BDE  0101               	movlb	1	; () banked
  5102  005BE0  6BD8               	clrf	moteHandler@gotoSleep& (0+255),b
  5103                           
  5104                           ;MOTEapp.c: 162: bool gotoNextState = 0;
  5105  005BE2  6BD9               	clrf	moteHandler@gotoNextState& (0+255),b
  5106                           
  5107                           ;MOTEapp.c: 163: bool s2Button = 0;
  5108  005BE4  6BDC               	clrf	moteHandler@s2Button& (0+255),b
  5109                           
  5110                           ; BSR set to: 1
  5111                           ;MOTEapp.c: 168: if (PORTAbits.RA0)
  5112                           
  5113                           ; BSR set to: 1
  5114  005BE6  A080               	btfss	3968,0,c	;volatile
  5115  005BE8  D003               	goto	l12150
  5116                           
  5117                           ; BSR set to: 1
  5118                           ;MOTEapp.c: 169: moteState = MOTE_SWAP;
  5119  005BEA  0E04               	movlw	4
  5120  005BEC  0100               	movlb	0	; () banked
  5121  005BEE  6FF8               	movwf	_moteState& (0+255),b
  5122  005BF0                     l12150:
  5123                           
  5124                           ;MOTEapp.c: 172: if ( appTimer.mSecTick )
  5125  005BF0  0100               	movlb	0	; () banked
  5126  005BF2  A18F               	btfss	_appTimer& (0+255),0,b
  5127  005BF4  D007               	goto	l12158
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;MOTEapp.c: 173: {
  5131                           ;MOTEapp.c: 175: TMRapp_ClearBitFlags();
  5132  005BF6  EC55  F01A         	call	_TMRapp_ClearBitFlags	;wreg free
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;MOTEapp.c: 177: TMRapp_Handler();
  5136  005BFA  EC8A  F029         	call	_TMRapp_Handler	;wreg free
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;MOTEapp.c: 178: MOTEapp_TimerBasedTask(appTimer);
  5140  005BFE  518F               	movf	_appTimer& (0+255),w,b
  5141  005C00  EC93  F01A         	call	_MOTEapp_TimerBasedTask
  5142  005C04                     l12158:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;MOTEapp.c: 179: }
  5146                           ;MOTEapp.c: 182: buttonPress = service_pushbutton();
  5147  005C04  EC80  F01E         	call	_service_pushbutton	;wreg free
  5148  005C08  0101               	movlb	1	; () banked
  5149  005C0A  6FDD               	movwf	moteHandler@buttonPress& (0+255),b
  5150                           
  5151                           ;MOTEapp.c: 183: if (buttonPress == ShortPress1)
  5152  005C0C  05DD               	decf	moteHandler@buttonPress& (0+255),w,b
  5153  005C0E  E106               	bnz	l12164
  5154                           
  5155                           ; BSR set to: 1
  5156                           ;MOTEapp.c: 184: {
  5157                           ;MOTEapp.c: 185: secTicker = 0;
  5158  005C10  0100               	movlb	0	; () banked
  5159  005C12  6B99               	clrf	_secTicker& (0+255),b
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;MOTEapp.c: 186: gotoNextState = 1;
  5163  005C14  0E01               	movlw	1
  5164  005C16  0101               	movlb	1	; () banked
  5165  005C18  6FD9               	movwf	moteHandler@gotoNextState& (0+255),b
  5166                           
  5167                           ;MOTEapp.c: 187: }
  5168  005C1A  D008               	goto	l12170
  5169  005C1C                     l12164:
  5170                           
  5171                           ; BSR set to: 1
  5172                           ;MOTEapp.c: 188: else if (buttonPress == ShortPress2)
  5173  005C1C  0E02               	movlw	2
  5174  005C1E  19DD               	xorwf	moteHandler@buttonPress& (0+255),w,b
  5175  005C20  E105               	bnz	l12170
  5176                           
  5177                           ; BSR set to: 1
  5178                           ;MOTEapp.c: 189: {
  5179                           ;MOTEapp.c: 190: secTicker = 0;
  5180  005C22  0100               	movlb	0	; () banked
  5181  005C24  6B99               	clrf	_secTicker& (0+255),b
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;MOTEapp.c: 191: s2Button = 1;
  5185  005C26  0E01               	movlw	1
  5186  005C28  0101               	movlb	1	; () banked
  5187  005C2A  6FDC               	movwf	moteHandler@s2Button& (0+255),b
  5188  005C2C                     l12170:
  5189                           
  5190                           ; BSR set to: 1
  5191                           ;MOTEapp.c: 192: }
  5192                           ;MOTEapp.c: 195: if ( MOTEapp_getModemResponse() )
  5193  005C2C  EC5B  F01E         	call	_MOTEapp_getModemResponse	;wreg free
  5194  005C30  0900               	iorlw	0
  5195  005C32  E004               	bz	l324
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;MOTEapp.c: 196: readMessage = 1;
  5199  005C34  0E01               	movlw	1
  5200  005C36  0101               	movlb	1	; () banked
  5201  005C38  6FE0               	movwf	moteHandler@readMessage& (0+255),b
  5202  005C3A  D002               	goto	l12174
  5203  005C3C                     l324:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;MOTEapp.c: 197: else
  5207                           ;MOTEapp.c: 198: readMessage = 0;
  5208  005C3C  0101               	movlb	1	; () banked
  5209  005C3E  6BE0               	clrf	moteHandler@readMessage& (0+255),b
  5210  005C40                     l12174:
  5211                           
  5212                           ; BSR set to: 1
  5213                           ;MOTEapp.c: 201: if ( (runningState == runningUplink) || (runningState == runningSensorM
      +                          enu) )
  5214  005C40  0E06               	movlw	6
  5215  005C42  0100               	movlb	0	; () banked
  5216  005C44  1998               	xorwf	_runningState& (0+255),w,b
  5217  005C46  E003               	bz	l12178
  5218                           
  5219                           ; BSR set to: 0
  5220  005C48  0E02               	movlw	2
  5221  005C4A  1998               	xorwf	_runningState& (0+255),w,b
  5222  005C4C  E146               	bnz	l12214
  5223  005C4E                     l12178:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;MOTEapp.c: 202: {
  5227                           ;MOTEapp.c: 204: if (m10SecTicker >= 5)
  5228  005C4E  0E04               	movlw	4
  5229  005C50  6594               	cpfsgt	_m10SecTicker& (0+255),b
  5230  005C52  D043               	goto	l12214
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;MOTEapp.c: 205: {
  5234                           ;MOTEapp.c: 206: uint16_t Traw = 0;
  5235  005C54  0101               	movlb	1	; () banked
  5236  005C56  6BDA               	clrf	moteHandler@Traw& (0+255),b
  5237  005C58  6BDB               	clrf	(moteHandler@Traw+1)& (0+255),b
  5238                           
  5239                           ; BSR set to: 1
  5240                           ;MOTEapp.c: 207: moteApp_delayms(10);
  5241  005C5A  0100               	movlb	0	; () banked
  5242  005C5C  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5243  005C5E  0E0A               	movlw	10
  5244  005C60  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  5245  005C62  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;MOTEapp.c: 208: for(uint8_t i = 32; i>0; i--)
  5249  005C66  0E20               	movlw	32
  5250  005C68  0101               	movlb	1	; () banked
  5251  005C6A  6FDE               	movwf	moteHandler@i& (0+255),b
  5252  005C6C                     l12190:
  5253                           
  5254                           ; BSR set to: 1
  5255                           ;MOTEapp.c: 209: {
  5256                           ;MOTEapp.c: 210: light = (light + ADC_GetConversion(Light_channel)) / 2;
  5257  005C6C  0E03               	movlw	3
  5258  005C6E  EC71  F01D         	call	_ADC_GetConversion
  5259  005C72  517A               	movf	_light& (0+255),w,b
  5260  005C74  27C8               	addwf	?_ADC_GetConversion& (0+255),f,b
  5261  005C76  517B               	movf	(_light+1)& (0+255),w,b
  5262  005C78  23C9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5263  005C7A  90D8               	bcf	status,0,c
  5264  005C7C  31C9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5265  005C7E  6FF3               	movwf	??_moteHandler& (0+255),b
  5266  005C80  31C8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5267  005C82  6F7A               	movwf	_light& (0+255),b
  5268  005C84  C0F3  F07B         	movff	??_moteHandler,_light+1
  5269                           
  5270                           ; BSR set to: 0
  5271  005C88  0101               	movlb	1	; () banked
  5272  005C8A  07DE               	decf	moteHandler@i& (0+255),f,b
  5273                           
  5274                           ; BSR set to: 1
  5275  005C8C  51DE               	movf	moteHandler@i& (0+255),w,b
  5276  005C8E  E1EE               	bnz	l12190
  5277                           
  5278                           ; BSR set to: 1
  5279                           ;MOTEapp.c: 211: }
  5280                           ;MOTEapp.c: 212: moteApp_delayms(10);
  5281  005C90  0100               	movlb	0	; () banked
  5282  005C92  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5283  005C94  0E0A               	movlw	10
  5284  005C96  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  5285  005C98  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;MOTEapp.c: 213: for(uint8_t i = 32; i>0; i--)
  5289  005C9C  0E20               	movlw	32
  5290  005C9E  0101               	movlb	1	; () banked
  5291  005CA0  6FDF               	movwf	moteHandler@i_1340& (0+255),b
  5292  005CA2                     l12204:
  5293                           
  5294                           ; BSR set to: 1
  5295                           ;MOTEapp.c: 214: {
  5296                           ;MOTEapp.c: 215: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  5297  005CA2  0E02               	movlw	2
  5298  005CA4  EC71  F01D         	call	_ADC_GetConversion
  5299  005CA8  0101               	movlb	1	; () banked
  5300  005CAA  51DA               	movf	moteHandler@Traw& (0+255),w,b
  5301  005CAC  0100               	movlb	0	; () banked
  5302  005CAE  27C8               	addwf	?_ADC_GetConversion& (0+255),f,b
  5303  005CB0  0101               	movlb	1	; () banked
  5304  005CB2  51DB               	movf	(moteHandler@Traw+1)& (0+255),w,b
  5305  005CB4  0100               	movlb	0	; () banked
  5306  005CB6  23C9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5307  005CB8  90D8               	bcf	status,0,c
  5308  005CBA  31C9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5309  005CBC  6FF3               	movwf	??_moteHandler& (0+255),b
  5310  005CBE  31C8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5311  005CC0  0101               	movlb	1	; () banked
  5312  005CC2  6FDA               	movwf	moteHandler@Traw& (0+255),b
  5313  005CC4  C0F3  F1DB         	movff	??_moteHandler,moteHandler@Traw+1
  5314                           
  5315                           ; BSR set to: 1
  5316  005CC8  07DF               	decf	moteHandler@i_1340& (0+255),f,b
  5317                           
  5318                           ; BSR set to: 1
  5319  005CCA  51DF               	movf	moteHandler@i_1340& (0+255),w,b
  5320  005CCC  E1EA               	bnz	l12204
  5321                           
  5322                           ; BSR set to: 1
  5323                           ;MOTEapp.c: 216: }
  5324                           ;MOTEapp.c: 217: temperature = ADC_TempConversion(Traw);
  5325  005CCE  51DA               	movf	moteHandler@Traw& (0+255),w,b
  5326  005CD0  EC6F  F01B         	call	_ADC_TempConversion
  5327  005CD4  6F7E               	movwf	_temperature& (0+255),b
  5328  005CD6  6B7F               	clrf	(_temperature+1)& (0+255),b
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;MOTEapp.c: 218: m10SecTicker = 0;
  5332  005CD8  6B94               	clrf	_m10SecTicker& (0+255),b
  5333  005CDA                     l12214:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;MOTEapp.c: 219: }
  5337                           ;MOTEapp.c: 220: }
  5338                           ;MOTEapp.c: 222: if(secTicker)
  5339  005CDA  5199               	movf	_secTicker& (0+255),w,b
  5340  005CDC  E064               	bz	l12252
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;MOTEapp.c: 223: {
  5344                           ;MOTEapp.c: 224: if (secTicker >= 10)
  5345  005CDE  0E09               	movlw	9
  5346  005CE0  6599               	cpfsgt	_secTicker& (0+255),b
  5347  005CE2  D061               	goto	l12252
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;MOTEapp.c: 225: {
  5351                           ;MOTEapp.c: 226: gotoSleep = 1;
  5352  005CE4  0E01               	movlw	1
  5353  005CE6  0101               	movlb	1	; () banked
  5354  005CE8  6FD8               	movwf	moteHandler@gotoSleep& (0+255),b
  5355                           
  5356                           ; BSR set to: 1
  5357                           ;MOTEapp.c: 227: secTicker = 0;
  5358  005CEA  0100               	movlb	0	; () banked
  5359  005CEC  6B99               	clrf	_secTicker& (0+255),b
  5360  005CEE  D05B               	goto	l12252
  5361  005CF0                     l338:
  5362                           
  5363                           ; BSR set to: 0
  5364  005CF0  D7FF               	goto	l338
  5365  005CF2                     l12222:
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;MOTEapp.c: 237: oled_clear();
  5369  005CF2  ECF9  F01A         	call	_oled_clear	;wreg free
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;MOTEapp.c: 238: oled_putString("MOTE Mode",1,0);
  5373  005CF6  0E05               	movlw	low STR_23
  5374  005CF8  6FD5               	movwf	oled_putString@string& (0+255),b
  5375  005CFA  0E7F               	movlw	high STR_23
  5376  005CFC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5377  005CFE  0E01               	movlw	1
  5378  005D00  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  5379  005D02  6BD8               	clrf	oled_putString@start_page& (0+255),b
  5380  005D04  EC65  F020         	call	_oled_putString	;wreg free
  5381                           
  5382                           ;MOTEapp.c: 239: oled_putString("Starting",2,1);
  5383  005D08  0E51               	movlw	low STR_24
  5384  005D0A  0100               	movlb	0	; () banked
  5385  005D0C  6FD5               	movwf	oled_putString@string& (0+255),b
  5386  005D0E  0E7F               	movlw	high STR_24
  5387  005D10  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5388  005D12  0E02               	movlw	2
  5389  005D14  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  5390  005D16  0E01               	movlw	1
  5391  005D18  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5392  005D1A  EC65  F020         	call	_oled_putString	;wreg free
  5393                           
  5394                           ;MOTEapp.c: 240: oled_putString("ReRun PwrTst<S2>",0,3);
  5395  005D1E  0E54               	movlw	low STR_25
  5396  005D20  0100               	movlb	0	; () banked
  5397  005D22  6FD5               	movwf	oled_putString@string& (0+255),b
  5398  005D24  0E7B               	movlw	high STR_25
  5399  005D26  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5400  005D28  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5401  005D2A  0E03               	movlw	3
  5402  005D2C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5403  005D2E  EC65  F020         	call	_oled_putString	;wreg free
  5404                           
  5405                           ;MOTEapp.c: 241: activeState = moteStartup;
  5406  005D32  0100               	movlb	0	; () banked
  5407  005D34  6B8D               	clrf	_activeState& (0+255),b
  5408                           
  5409                           ; BSR set to: 0
  5410                           ;MOTEapp.c: 242: moteState = MOTE_JOINING;
  5411  005D36  0E02               	movlw	2
  5412  005D38  D029               	goto	L1
  5413  005D3A                     l12234:
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;MOTEapp.c: 245: if ( moteJoiningProcess(readMessage, s2Button) )
  5417  005D3A  C1DC  F0DA         	movff	moteHandler@s2Button,moteJoiningProcess@switchEvent
  5418  005D3E  0101               	movlb	1	; () banked
  5419  005D40  51E0               	movf	moteHandler@readMessage& (0+255),w,b
  5420  005D42  ECD9  F02F         	call	_moteJoiningProcess
  5421  005D46  0900               	iorlw	0
  5422  005D48  E037               	bz	l12254
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;MOTEapp.c: 246: {
  5426                           ;MOTEapp.c: 247: oled_clear();
  5427  005D4A  ECF9  F01A         	call	_oled_clear	;wreg free
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;MOTEapp.c: 248: oled_putString("Mobile Mote -App",0,0);
  5431  005D4E  0EA9               	movlw	low STR_26
  5432  005D50  6FD5               	movwf	oled_putString@string& (0+255),b
  5433  005D52  0E7B               	movlw	high STR_26
  5434  005D54  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5435  005D56  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5436  005D58  6BD8               	clrf	oled_putString@start_page& (0+255),b
  5437  005D5A  EC65  F020         	call	_oled_putString	;wreg free
  5438                           
  5439                           ;MOTEapp.c: 249: oled_putString("Navigate  Select", 0,2);
  5440  005D5E  0EBA               	movlw	low STR_27
  5441  005D60  0100               	movlb	0	; () banked
  5442  005D62  6FD5               	movwf	oled_putString@string& (0+255),b
  5443  005D64  0E7B               	movlw	high STR_27
  5444  005D66  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5445  005D68  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5446  005D6A  0E02               	movlw	2
  5447  005D6C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5448  005D6E  EC65  F020         	call	_oled_putString	;wreg free
  5449                           
  5450                           ;MOTEapp.c: 250: oled_putString(" (S1)      (S2) ", 0,3);
  5451  005D72  0E10               	movlw	low STR_28
  5452  005D74  0100               	movlb	0	; () banked
  5453  005D76  6FD5               	movwf	oled_putString@string& (0+255),b
  5454  005D78  0E7B               	movlw	high STR_28
  5455  005D7A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5456  005D7C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5457  005D7E  0E03               	movlw	3
  5458  005D80  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5459  005D82  EC65  F020         	call	_oled_putString	;wreg free
  5460                           
  5461                           ;MOTEapp.c: 251: runningState = runningEnter;
  5462  005D86  0100               	movlb	0	; () banked
  5463  005D88  6B98               	clrf	_runningState& (0+255),b
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;MOTEapp.c: 252: moteState = MOTE_RUNNING;
  5467  005D8A  0E03               	movlw	3
  5468  005D8C                     L1:
  5469  005D8C  6FF8               	movwf	_moteState& (0+255),b
  5470  005D8E  D014               	goto	l12254
  5471  005D90                     l12248:
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;MOTEapp.c: 256: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  5475  005D90  C1DC  F0E4         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  5476  005D94  C1E0  F0E5         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  5477  005D98  C1D8  F0E6         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  5478  005D9C  0101               	movlb	1	; () banked
  5479  005D9E  51D9               	movf	moteHandler@gotoNextState& (0+255),w,b
  5480  005DA0  EC66  F032         	call	_moteRunningProcess
  5481                           
  5482                           ;MOTEapp.c: 257: break;
  5483  005DA4  D009               	goto	l12254
  5484  005DA6                     l12252:
  5485                           
  5486                           ; BSR set to: 0
  5487  005DA6  51F8               	movf	_moteState& (0+255),w,b
  5488                           
  5489                           ; Switch size 1, requested type "speed"
  5490                           ; Number of cases is 4, Range of values is 1 to 4
  5491                           ; switch strategies available:
  5492                           ; Name         Instructions Cycles
  5493                           ; simple_byte           13     7 (average)
  5494                           ;	Chosen strategy is simple_byte
  5495  005DA8  0A01               	xorlw	1	; case 1
  5496  005DAA  E0A3               	bz	l12222
  5497  005DAC  0A03               	xorlw	3	; case 2
  5498  005DAE  E0C5               	bz	l12234
  5499  005DB0  0A01               	xorlw	1	; case 3
  5500  005DB2  E0EE               	bz	l12248
  5501  005DB4  0A07               	xorlw	7	; case 4
  5502  005DB6  E19C               	bnz	l338
  5503  005DB8                     l12254:
  5504                           
  5505                           ;MOTEapp.c: 262: return moteState;
  5506  005DB8  0100               	movlb	0	; () banked
  5507  005DBA  51F8               	movf	_moteState& (0+255),w,b
  5508                           
  5509                           ; BSR set to: 0
  5510  005DBC  0012               	return		;funcret
  5511  005DBE                     __end_of_moteHandler:
  5512                           	opt stack 0
  5513                           tblptru	equ	0xFF8
  5514                           tblptrh	equ	0xFF7
  5515                           tblptrl	equ	0xFF6
  5516                           tablat	equ	0xFF5
  5517                           intcon	equ	0xFF2
  5518                           postinc0	equ	0xFEE
  5519                           wreg	equ	0xFE8
  5520                           postdec1	equ	0xFE5
  5521                           fsr1l	equ	0xFE1
  5522                           status	equ	0xFD8
  5523                           
  5524 ;; *************** function _service_pushbutton *****************
  5525 ;; Defined at:
  5526 ;;		line 14 in file "../Includes/Drivers/buttons.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;		None
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  bs              1    0[BANK0 ] enum E6333
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      enum E6421
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0
  5535 ;; Tracked objects:
  5536 ;;		On entry : F/0
  5537 ;;		On exit  : F/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5540 ;;      Params:         0       0       0       0       0       0       0       0       0
  5541 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5543 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5544 ;;Total ram usage:        1 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:   11
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_moteHandler
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text9
  5555  003D00                     __ptext9:
  5556                           	opt stack 0
  5557  003D00                     _service_pushbutton:
  5558                           	opt stack 18
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;buttons.c: 20: if ((PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;incstack = 0
  5565  003D00  A082               	btfss	3970,0,c	;volatile
  5566  003D02  D002               	goto	l10840
  5567                           
  5568                           ; BSR set to: 0
  5569  003D04  B282               	btfsc	3970,1,c	;volatile
  5570  003D06  D014               	goto	l10848
  5571  003D08                     l10840:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;buttons.c: 21: {
  5575                           ;buttons.c: 22: ++PB_Timer;
  5576  003D08  2B66               	incf	service_pushbutton@PB_Timer& (0+255),f,b
  5577  003D0A  0E00               	movlw	0
  5578  003D0C  2367               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
  5579  003D0E  2368               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
  5580  003D10  2369               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
  5581                           
  5582                           ;buttons.c: 26: if (PB_Timer == 55)
  5583  003D12  0E37               	movlw	55
  5584  003D14  1966               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
  5585  003D16  1167               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
  5586  003D18  1168               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
  5587  003D1A  1169               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
  5588  003D1C  E107               	bnz	l896
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;buttons.c: 27: {
  5592                           ;buttons.c: 28: Release_Timer = 0;
  5593  003D1E  6B9D               	clrf	service_pushbutton@Release_Timer& (0+255),b
  5594                           
  5595                           ;buttons.c: 30: if (PORTCbits.RC0 == 0)
  5596  003D20  B082               	btfsc	3970,0,c	;volatile
  5597  003D22  D002               	goto	l10846
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;buttons.c: 31: {
  5601                           ;buttons.c: 32: bs = ShortPress1;
  5602  003D24  0E01               	movlw	1
  5603  003D26  D00F               	goto	L2
  5604  003D28                     l10846:
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;buttons.c: 34: else
  5608                           ;buttons.c: 35: {
  5609                           ;buttons.c: 36: bs = ShortPress2;
  5610  003D28  0E02               	movlw	2
  5611  003D2A  D00D               	goto	L2
  5612  003D2C                     l896:
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;buttons.c: 39: else
  5616                           ;buttons.c: 40: {
  5617                           ;buttons.c: 41: bs = NoButton;
  5618  003D2C  6BC8               	clrf	service_pushbutton@bs& (0+255),b
  5619  003D2E  D00C               	goto	l10856
  5620  003D30                     l10848:
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;buttons.c: 44: else
  5624                           ;buttons.c: 45: {
  5625                           ;buttons.c: 46: if (Release_Timer == 20)
  5626  003D30  0E14               	movlw	20
  5627  003D32  199D               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
  5628  003D34  E106               	bnz	l10852
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;buttons.c: 47: {
  5632                           ;buttons.c: 48: PB_Timer = 0;
  5633  003D36  6B66               	clrf	service_pushbutton@PB_Timer& (0+255),b
  5634  003D38  6B67               	clrf	(service_pushbutton@PB_Timer+1)& (0+255),b
  5635  003D3A  6B68               	clrf	(service_pushbutton@PB_Timer+2)& (0+255),b
  5636  003D3C  6B69               	clrf	(service_pushbutton@PB_Timer+3)& (0+255),b
  5637                           
  5638                           ;buttons.c: 49: Release_Timer = 0;
  5639  003D3E  6B9D               	clrf	service_pushbutton@Release_Timer& (0+255),b
  5640                           
  5641                           ;buttons.c: 50: }
  5642  003D40  D001               	goto	l10854
  5643  003D42                     l10852:
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;buttons.c: 51: else
  5647                           ;buttons.c: 52: {
  5648                           ;buttons.c: 53: Release_Timer++;
  5649  003D42  2B9D               	incf	service_pushbutton@Release_Timer& (0+255),f,b
  5650  003D44                     l10854:
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;buttons.c: 54: }
  5654                           ;buttons.c: 55: bs = Released;
  5655  003D44  0E03               	movlw	3
  5656  003D46                     L2:
  5657  003D46  6FC8               	movwf	service_pushbutton@bs& (0+255),b
  5658  003D48                     l10856:
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;buttons.c: 56: }
  5662                           ;buttons.c: 58: return bs;
  5663  003D48  51C8               	movf	service_pushbutton@bs& (0+255),w,b
  5664                           
  5665                           ; BSR set to: 0
  5666  003D4A  0012               	return		;funcret
  5667  003D4C                     __end_of_service_pushbutton:
  5668                           	opt stack 0
  5669                           tblptru	equ	0xFF8
  5670                           tblptrh	equ	0xFF7
  5671                           tblptrl	equ	0xFF6
  5672                           tablat	equ	0xFF5
  5673                           intcon	equ	0xFF2
  5674                           postinc0	equ	0xFEE
  5675                           wreg	equ	0xFE8
  5676                           postdec1	equ	0xFE5
  5677                           fsr1l	equ	0xFE1
  5678                           status	equ	0xFD8
  5679                           
  5680 ;; *************** function _moteRunningProcess *****************
  5681 ;; Defined at:
  5682 ;;		line 492 in file "../Includes/Board/MOTEapp.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  changeStates    1    wreg     unsigned char 
  5685 ;;  selectButton    1   28[BANK0 ] unsigned char 
  5686 ;;  messageReady    1   29[BANK0 ] unsigned char 
  5687 ;;  sleepEvent      1   30[BANK0 ] unsigned char 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  changeStates    1   42[BANK0 ] unsigned char 
  5690 ;;  counter         1   40[BANK0 ] unsigned char 
  5691 ;;  counter         1   39[BANK0 ] unsigned char 
  5692 ;;  bufferReadPo    1   41[BANK0 ] unsigned char 
  5693 ;;  dummyRead2      1   38[BANK0 ] unsigned char 
  5694 ;;  dummyRead1      1   37[BANK0 ] unsigned char 
  5695 ;;  i               1   36[BANK0 ] unsigned char 
  5696 ;;  i               1   35[BANK0 ] unsigned char 
  5697 ;;  Traw            2   33[BANK0 ] unsigned int 
  5698 ;;  readByte        1    0        unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      enum E6659
  5701 ;; Registers used:
  5702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : F/1
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5708 ;;      Params:         0       3       0       0       0       0       0       0       0
  5709 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5710 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5711 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5712 ;;Total ram usage:       15 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:   19
  5715 ;; This function calls:
  5716 ;;		_ADC_GetConversion
  5717 ;;		_ADC_TempConversion
  5718 ;;		_MOTEapp_SetADR
  5719 ;;		_MOTEapp_SetDataRate
  5720 ;;		_MOTEapp_WriteDataRate
  5721 ;;		_TMR2_ReadTimer
  5722 ;;		_moteApp_GoToSleep
  5723 ;;		_moteApp_add16bToDataBuffer
  5724 ;;		_moteApp_add8bToDataBuffer
  5725 ;;		_moteApp_clearBuffers
  5726 ;;		_moteApp_delayms
  5727 ;;		_oled_clear
  5728 ;;		_oled_putString
  5729 ;;		_oled_putUint16
  5730 ;;		_oled_putUint8
  5731 ;;		_sendDataCommand
  5732 ;;		_strcmp
  5733 ;;		_strncmp
  5734 ;;		_unhex
  5735 ;; This function is called by:
  5736 ;;		_moteHandler
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text10
  5741  0064CC                     __ptext10:
  5742                           	opt stack 0
  5743  0064CC                     _moteRunningProcess:
  5744                           	opt stack 10
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;incstack = 0
  5748                           ;moteRunningProcess@changeStates stored from wreg
  5749  0064CC  0100               	movlb	0	; () banked
  5750  0064CE  6FF2               	movwf	moteRunningProcess@changeStates& (0+255),b
  5751                           
  5752                           ;MOTEapp.c: 496: if ((sleepEvent) && (periodicState))
  5753  0064D0  51E6               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  5754  0064D2  E102 EFF6  F03A    	bz	l11862
  5755                           
  5756                           ; BSR set to: 0
  5757  0064D8  51F9               	movf	_periodicState& (0+255),w,b
  5758  0064DA  E102 EFF6  F03A    	bz	l11862
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;MOTEapp.c: 497: {
  5762                           ;MOTEapp.c: 498: if (sleepTicker >= 33)
  5763  0064E0  0E20               	movlw	32
  5764  0064E2  659A               	cpfsgt	_sleepTicker& (0+255),b
  5765  0064E4  D0D8               	goto	l11164
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;MOTEapp.c: 499: {
  5769                           ;MOTEapp.c: 501: uint16_t Traw = 0;
  5770  0064E6  6BE9               	clrf	moteRunningProcess@Traw& (0+255),b
  5771  0064E8  6BEA               	clrf	(moteRunningProcess@Traw+1)& (0+255),b
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;MOTEapp.c: 502: moteApp_delayms(10);
  5775  0064EA  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5776  0064EC  0E0A               	movlw	10
  5777  0064EE  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  5778  0064F0  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;MOTEapp.c: 503: for(uint8_t i = 32; i>0; i--)
  5782  0064F4  0E20               	movlw	32
  5783  0064F6  6FEB               	movwf	moteRunningProcess@i& (0+255),b
  5784  0064F8                     l11082:
  5785                           
  5786                           ; BSR set to: 0
  5787  0064F8  51EB               	movf	moteRunningProcess@i& (0+255),w,b
  5788  0064FA  E010               	bz	l11092
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;MOTEapp.c: 504: {
  5792                           ;MOTEapp.c: 505: light = (light + ADC_GetConversion(Light_channel)) / 2;
  5793  0064FC  0E03               	movlw	3
  5794  0064FE  EC71  F01D         	call	_ADC_GetConversion
  5795  006502  517A               	movf	_light& (0+255),w,b
  5796  006504  27C8               	addwf	?_ADC_GetConversion& (0+255),f,b
  5797  006506  517B               	movf	(_light+1)& (0+255),w,b
  5798  006508  23C9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5799  00650A  90D8               	bcf	status,0,c
  5800  00650C  31C9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5801  00650E  6FE7               	movwf	??_moteRunningProcess& (0+255),b
  5802  006510  31C8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5803  006512  6F7A               	movwf	_light& (0+255),b
  5804  006514  C0E7  F07B         	movff	??_moteRunningProcess,_light+1
  5805                           
  5806                           ; BSR set to: 0
  5807  006518  07EB               	decf	moteRunningProcess@i& (0+255),f,b
  5808  00651A  D7EE               	goto	l11082
  5809  00651C                     l11092:
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;MOTEapp.c: 506: }
  5813                           ;MOTEapp.c: 507: moteApp_delayms(10);
  5814  00651C  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  5815  00651E  0E0A               	movlw	10
  5816  006520  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  5817  006522  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;MOTEapp.c: 508: for(uint8_t i = 32; i>0; i--)
  5821  006526  0E20               	movlw	32
  5822  006528  6FEC               	movwf	moteRunningProcess@i_1410& (0+255),b
  5823  00652A                     l11096:
  5824                           
  5825                           ; BSR set to: 0
  5826  00652A  51EC               	movf	moteRunningProcess@i_1410& (0+255),w,b
  5827  00652C  E010               	bz	l11106
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;MOTEapp.c: 509: {
  5831                           ;MOTEapp.c: 510: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  5832  00652E  0E02               	movlw	2
  5833  006530  EC71  F01D         	call	_ADC_GetConversion
  5834  006534  51E9               	movf	moteRunningProcess@Traw& (0+255),w,b
  5835  006536  27C8               	addwf	?_ADC_GetConversion& (0+255),f,b
  5836  006538  51EA               	movf	(moteRunningProcess@Traw+1)& (0+255),w,b
  5837  00653A  23C9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5838  00653C  90D8               	bcf	status,0,c
  5839  00653E  31C9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5840  006540  6FE7               	movwf	??_moteRunningProcess& (0+255),b
  5841  006542  31C8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5842  006544  6FE9               	movwf	moteRunningProcess@Traw& (0+255),b
  5843  006546  C0E7  F0EA         	movff	??_moteRunningProcess,moteRunningProcess@Traw+1
  5844                           
  5845                           ; BSR set to: 0
  5846  00654A  07EC               	decf	moteRunningProcess@i_1410& (0+255),f,b
  5847  00654C  D7EE               	goto	l11096
  5848  00654E                     l11106:
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;MOTEapp.c: 511: }
  5852                           ;MOTEapp.c: 512: temperature = ADC_TempConversion(Traw);
  5853  00654E  51E9               	movf	moteRunningProcess@Traw& (0+255),w,b
  5854  006550  EC6F  F01B         	call	_ADC_TempConversion
  5855  006554  6F7E               	movwf	_temperature& (0+255),b
  5856  006556  6B7F               	clrf	(_temperature+1)& (0+255),b
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;MOTEapp.c: 514: sleepTicker = 0;
  5860  006558  6B9A               	clrf	_sleepTicker& (0+255),b
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;MOTEapp.c: 515: oled_clear();
  5864  00655A  ECF9  F01A         	call	_oled_clear	;wreg free
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;MOTEapp.c: 516: oled_putString("Issue Perodic TX",0,0);
  5868  00655E  0E65               	movlw	low STR_72
  5869  006560  6FD5               	movwf	oled_putString@string& (0+255),b
  5870  006562  0E7B               	movlw	high STR_72
  5871  006564  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5872  006566  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5873  006568  6BD8               	clrf	oled_putString@start_page& (0+255),b
  5874  00656A  EC65  F020         	call	_oled_putString	;wreg free
  5875                           
  5876                           ;MOTEapp.c: 517: oled_putString("On Port #: ",0,1);
  5877  00656E  0E43               	movlw	low STR_73
  5878  006570  0100               	movlb	0	; () banked
  5879  006572  6FD5               	movwf	oled_putString@string& (0+255),b
  5880  006574  0E7E               	movlw	high STR_73
  5881  006576  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5882  006578  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5883  00657A  0E01               	movlw	1
  5884  00657C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5885  00657E  EC65  F020         	call	_oled_putString	;wreg free
  5886                           
  5887                           ;MOTEapp.c: 518: oled_putUint8(randomPortNum,10,1);
  5888  006582  0E0A               	movlw	10
  5889  006584  0100               	movlb	0	; () banked
  5890  006586  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  5891  006588  0E01               	movlw	1
  5892  00658A  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  5893  00658C  5197               	movf	_randomPortNum& (0+255),w,b
  5894  00658E  EC78  F01F         	call	_oled_putUint8
  5895                           
  5896                           ;MOTEapp.c: 519: oled_putString("L:       T: ",0,2);
  5897  006592  0E81               	movlw	low STR_74
  5898  006594  0100               	movlb	0	; () banked
  5899  006596  6FD5               	movwf	oled_putString@string& (0+255),b
  5900  006598  0E7D               	movlw	high STR_74
  5901  00659A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5902  00659C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5903  00659E  0E02               	movlw	2
  5904  0065A0  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5905  0065A2  EC65  F020         	call	_oled_putString	;wreg free
  5906                           
  5907                           ;MOTEapp.c: 520: oled_putUint16(light,3,2);
  5908  0065A6  C07A  F0DA         	movff	_light,oled_putUint16@number
  5909  0065AA  C07B  F0DB         	movff	_light+1,oled_putUint16@number+1
  5910  0065AE  0E03               	movlw	3
  5911  0065B0  0100               	movlb	0	; () banked
  5912  0065B2  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  5913  0065B4  0E02               	movlw	2
  5914  0065B6  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  5915  0065B8  ECE2  F02A         	call	_oled_putUint16	;wreg free
  5916                           
  5917                           ;MOTEapp.c: 521: oled_putUint8(temperature,12,2);
  5918  0065BC  0E0C               	movlw	12
  5919  0065BE  0100               	movlb	0	; () banked
  5920  0065C0  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  5921  0065C2  0E02               	movlw	2
  5922  0065C4  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  5923  0065C6  517E               	movf	_temperature& (0+255),w,b
  5924  0065C8  EC78  F01F         	call	_oled_putUint8
  5925                           
  5926                           ;MOTEapp.c: 522: oled_putString("(NAV)    (SEL) ",0,3);
  5927  0065CC  0EFC               	movlw	low STR_75
  5928  0065CE  0100               	movlb	0	; () banked
  5929  0065D0  6FD5               	movwf	oled_putString@string& (0+255),b
  5930  0065D2  0E7B               	movlw	high STR_75
  5931  0065D4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  5932  0065D6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  5933  0065D8  0E03               	movlw	3
  5934  0065DA  6FD8               	movwf	oled_putString@start_page& (0+255),b
  5935  0065DC  EC65  F020         	call	_oled_putString	;wreg free
  5936                           
  5937                           ;MOTEapp.c: 524: moteApp_clearBuffers();
  5938  0065E0  ECCC  F01D         	call	_moteApp_clearBuffers	;wreg free
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;MOTEapp.c: 525: randomPortNum = TMR2_ReadTimer();
  5942  0065E4  EC70  F01A         	call	_TMR2_ReadTimer	;wreg free
  5943  0065E8  6F97               	movwf	_randomPortNum& (0+255),b
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;MOTEapp.c: 527: if (!randomPortNum)
  5947  0065EA  5197               	movf	_randomPortNum& (0+255),w,b
  5948  0065EC  E103               	bnz	l11134
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;MOTEapp.c: 528: randomPortNum = 5;
  5952  0065EE  0E05               	movlw	5
  5953  0065F0  6F97               	movwf	_randomPortNum& (0+255),b
  5954  0065F2  D005               	goto	l11138
  5955  0065F4                     l11134:
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;MOTEapp.c: 529: else if (randomPortNum > 223)
  5959  0065F4  0EDF               	movlw	223
  5960  0065F6  6597               	cpfsgt	_randomPortNum& (0+255),b
  5961  0065F8  D002               	goto	l11138
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;MOTEapp.c: 530: randomPortNum = randomPortNum - 50;
  5965  0065FA  0ECE               	movlw	206
  5966  0065FC  2797               	addwf	_randomPortNum& (0+255),f,b
  5967  0065FE                     l11138:
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;MOTEapp.c: 532: moteApp_add8bToDataBuffer(randomPortNum, 0);
  5971  0065FE  6BCC               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  5972  006600  5197               	movf	_randomPortNum& (0+255),w,b
  5973  006602  EC03  F020         	call	_moteApp_add8bToDataBuffer
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;MOTEapp.c: 533: dataBuffer[3] = 0x20;
  5977  006606  0E20               	movlw	32
  5978  006608  6FA1               	movwf	(_dataBuffer+3)& (0+255),b
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;MOTEapp.c: 534: moteApp_add16bToDataBuffer(light, 4);
  5982  00660A  C07A  F0CF         	movff	_light,moteApp_add16bToDataBuffer@number
  5983  00660E  C07B  F0D0         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  5984  006612  0E04               	movlw	4
  5985  006614  6FD1               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  5986  006616  ECDC  F02C         	call	_moteApp_add16bToDataBuffer	;wreg free
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;MOTEapp.c: 535: moteApp_add8bToDataBuffer(temperature, 9);
  5990  00661A  0E09               	movlw	9
  5991  00661C  6FCC               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  5992  00661E  517E               	movf	_temperature& (0+255),w,b
  5993  006620  EC03  F020         	call	_moteApp_add8bToDataBuffer
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;MOTEapp.c: 536: __nop();
  5997  006624  F000               	nop	
  5998                           
  5999                           ;MOTEapp.c: 537: if(++sleepTxOccurances > 3)
  6000  006626  0100               	movlb	0	; () banked
  6001  006628  2B9B               	incf	_sleepTxOccurances& (0+255),f,b
  6002  00662A  0E03               	movlw	3
  6003  00662C  659B               	cpfsgt	_sleepTxOccurances& (0+255),b
  6004  00662E  D017               	goto	l11156
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;MOTEapp.c: 538: {
  6008                           ;MOTEapp.c: 539: sleepTxOccurances = 0;
  6009  006630  6B9B               	clrf	_sleepTxOccurances& (0+255),b
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;MOTEapp.c: 540: oled_putString("C",15,1);
  6013  006632  0EF9               	movlw	low STR_76
  6014  006634  6FD5               	movwf	oled_putString@string& (0+255),b
  6015  006636  0E7F               	movlw	high STR_76
  6016  006638  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6017  00663A  0E0F               	movlw	15
  6018  00663C  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6019  00663E  0E01               	movlw	1
  6020  006640  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6021  006642  EC65  F020         	call	_oled_putString	;wreg free
  6022                           
  6023                           ;MOTEapp.c: 541: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  6024  006646  0E67               	movlw	low STR_77
  6025  006648  0100               	movlb	0	; () banked
  6026  00664A  6FC9               	movwf	sendDataCommand@string& (0+255),b
  6027  00664C  0E7E               	movlw	high STR_77
  6028  00664E  6FCA               	movwf	(sendDataCommand@string+1)& (0+255),b
  6029  006650  0E9E               	movlw	low _dataBuffer
  6030  006652  6FCB               	movwf	sendDataCommand@appData& (0+255),b
  6031  006654  0E0C               	movlw	12
  6032  006656  6FCC               	movwf	sendDataCommand@dataLength& (0+255),b
  6033  006658  ECC6  F023         	call	_sendDataCommand	;wreg free
  6034                           
  6035                           ;MOTEapp.c: 542: }
  6036  00665C  D015               	goto	l11160
  6037  00665E                     l11156:
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;MOTEapp.c: 544: else
  6041                           ;MOTEapp.c: 545: {
  6042                           ;MOTEapp.c: 546: oled_putString("U",15,1);
  6043  00665E  0EFB               	movlw	low STR_78
  6044  006660  6FD5               	movwf	oled_putString@string& (0+255),b
  6045  006662  0E7F               	movlw	high STR_78
  6046  006664  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6047  006666  0E0F               	movlw	15
  6048  006668  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6049  00666A  0E01               	movlw	1
  6050  00666C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6051  00666E  EC65  F020         	call	_oled_putString	;wreg free
  6052                           
  6053                           ;MOTEapp.c: 547: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6054  006672  0E3C               	movlw	low STR_79
  6055  006674  0100               	movlb	0	; () banked
  6056  006676  6FC9               	movwf	sendDataCommand@string& (0+255),b
  6057  006678  0E7D               	movlw	high STR_79
  6058  00667A  6FCA               	movwf	(sendDataCommand@string+1)& (0+255),b
  6059  00667C  0E9E               	movlw	low _dataBuffer
  6060  00667E  6FCB               	movwf	sendDataCommand@appData& (0+255),b
  6061  006680  0E0C               	movlw	12
  6062  006682  6FCC               	movwf	sendDataCommand@dataLength& (0+255),b
  6063  006684  ECC6  F023         	call	_sendDataCommand	;wreg free
  6064  006688                     l11160:
  6065                           
  6066                           ;MOTEapp.c: 548: }
  6067                           ;MOTEapp.c: 549: secTicker = 10 - (10 / 3);
  6068  006688  0E07               	movlw	7
  6069  00668A  0100               	movlb	0	; () banked
  6070  00668C  6F99               	movwf	_secTicker& (0+255),b
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;MOTEapp.c: 550: runningState = runningUplinkTransmit;
  6074  00668E  0E08               	movlw	8
  6075  006690  6F98               	movwf	_runningState& (0+255),b
  6076                           
  6077                           ;MOTEapp.c: 551: }
  6078  006692  EFF6  F03A         	goto	l11862
  6079  006696                     l11164:
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;MOTEapp.c: 552: else
  6083                           ;MOTEapp.c: 553: {
  6084                           ;MOTEapp.c: 554: sleepTicker++;
  6085  006696  2B9A               	incf	_sleepTicker& (0+255),f,b
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;MOTEapp.c: 555: runningState = runningSleep;
  6089  006698  0E0E               	movlw	14
  6090  00669A  6F98               	movwf	_runningState& (0+255),b
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;MOTEapp.c: 556: selectButton = 1;
  6094  00669C  0E01               	movlw	1
  6095  00669E  6FE4               	movwf	moteRunningProcess@selectButton& (0+255),b
  6096  0066A0  EFF6  F03A         	goto	l11862
  6097  0066A4                     l448:
  6098  0066A4  D7FF               	goto	l448
  6099  0066A6                     l11170:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;MOTEapp.c: 567: if ( (changeStates) || (selectButton) )
  6103  0066A6  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6104  0066A8  E103               	bnz	l11174
  6105                           
  6106                           ; BSR set to: 0
  6107  0066AA  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6108  0066AC  B4D8               	btfsc	status,2,c
  6109  0066AE  0012               	return	
  6110  0066B0                     l11174:
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;MOTEapp.c: 568: {
  6114                           ;MOTEapp.c: 569: oled_clear();
  6115  0066B0  ECF9  F01A         	call	_oled_clear	;wreg free
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;MOTEapp.c: 570: oled_putString("  Sensor Data  ",0,0);
  6119  0066B4  0EEC               	movlw	low STR_80
  6120  0066B6  6FD5               	movwf	oled_putString@string& (0+255),b
  6121  0066B8  0E7B               	movlw	high STR_80
  6122  0066BA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6123  0066BC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6124  0066BE  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6125  0066C0  EC65  F020         	call	_oled_putString	;wreg free
  6126                           
  6127                           ;MOTEapp.c: 571: oled_putString("    Display    ",0,1);
  6128  0066C4  0EDC               	movlw	low STR_81
  6129  0066C6  0100               	movlb	0	; () banked
  6130  0066C8  6FD5               	movwf	oled_putString@string& (0+255),b
  6131  0066CA  0E7B               	movlw	high STR_81
  6132  0066CC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6133  0066CE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6134  0066D0  0E01               	movlw	1
  6135  0066D2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6136  0066D4  EC65  F020         	call	_oled_putString	;wreg free
  6137                           
  6138                           ;MOTEapp.c: 572: oled_putString("(NAV)    (SEL) ",0,3);
  6139  0066D8  0EFC               	movlw	low STR_75
  6140  0066DA  0100               	movlb	0	; () banked
  6141  0066DC  6FD5               	movwf	oled_putString@string& (0+255),b
  6142  0066DE  0E7B               	movlw	high STR_75
  6143  0066E0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6144  0066E2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6145  0066E4  0E03               	movlw	3
  6146  0066E6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6147  0066E8  EC65  F020         	call	_oled_putString	;wreg free
  6148  0066EC                     l11182:
  6149                           
  6150                           ;MOTEapp.c: 573: runningState = runningSensor;
  6151  0066EC  0E01               	movlw	1
  6152  0066EE  0100               	movlb	0	; () banked
  6153  0066F0  6F98               	movwf	_runningState& (0+255),b
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;MOTEapp.c: 574: }
  6157                           ;MOTEapp.c: 575: break;
  6158  0066F2  0C01               	retlw	1
  6159  0066F4                     l11184:
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;MOTEapp.c: 577: if (changeStates)
  6163  0066F4  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6164  0066F6  E022               	bz	l11196
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;MOTEapp.c: 578: {
  6168                           ;MOTEapp.c: 579: oled_clear();
  6169  0066F8  ECF9  F01A         	call	_oled_clear	;wreg free
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;MOTEapp.c: 580: oled_putString("  Select LoRa   ",0,0);
  6173  0066FC  0ECC               	movlw	low STR_83
  6174  0066FE  6FD5               	movwf	oled_putString@string& (0+255),b
  6175  006700  0E7A               	movlw	high STR_83
  6176  006702  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6177  006704  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6178  006706  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6179  006708  EC65  F020         	call	_oled_putString	;wreg free
  6180                           
  6181                           ;MOTEapp.c: 581: oled_putString("   Data Rate    ",0,1);
  6182  00670C  0EBB               	movlw	low STR_84
  6183  00670E  0100               	movlb	0	; () banked
  6184  006710  6FD5               	movwf	oled_putString@string& (0+255),b
  6185  006712  0E7A               	movlw	high STR_84
  6186  006714  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6187  006716  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6188  006718  0E01               	movlw	1
  6189  00671A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6190  00671C  EC65  F020         	call	_oled_putString	;wreg free
  6191                           
  6192                           ;MOTEapp.c: 582: oled_putString("(NAV)    (SEL) ",0,3);
  6193  006720  0EFC               	movlw	low STR_75
  6194  006722  0100               	movlb	0	; () banked
  6195  006724  6FD5               	movwf	oled_putString@string& (0+255),b
  6196  006726  0E7B               	movlw	high STR_75
  6197  006728  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6198  00672A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6199  00672C  0E03               	movlw	3
  6200  00672E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6201  006730  EC65  F020         	call	_oled_putString	;wreg free
  6202  006734                     l11194:
  6203                           
  6204                           ;MOTEapp.c: 583: runningState = runningDataRateDisplay;
  6205  006734  0E03               	movlw	3
  6206  006736  0100               	movlb	0	; () banked
  6207  006738  6F98               	movwf	_runningState& (0+255),b
  6208                           
  6209                           ;MOTEapp.c: 584: }
  6210  00673A  0C03               	retlw	3
  6211  00673C                     l11196:
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;MOTEapp.c: 585: else if (selectButton)
  6215  00673C  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6216  00673E  B4D8               	btfsc	status,2,c
  6217  006740  0012               	return	
  6218                           
  6219                           ; BSR set to: 0
  6220                           ;MOTEapp.c: 586: {
  6221                           ;MOTEapp.c: 587: oled_clear();
  6222  006742  ECF9  F01A         	call	_oled_clear	;wreg free
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;MOTEapp.c: 588: oled_putString("  Sensor Data  ",0,0);
  6226  006746  0EEC               	movlw	low STR_80
  6227  006748  6FD5               	movwf	oled_putString@string& (0+255),b
  6228  00674A  0E7B               	movlw	high STR_80
  6229  00674C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6230  00674E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6231  006750  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6232  006752  EC65  F020         	call	_oled_putString	;wreg free
  6233                           
  6234                           ;MOTEapp.c: 589: oled_putString("Light:",0,1);
  6235  006756  0EBE               	movlw	low STR_87
  6236  006758  0100               	movlb	0	; () banked
  6237  00675A  6FD5               	movwf	oled_putString@string& (0+255),b
  6238  00675C  0E7F               	movlw	high STR_87
  6239  00675E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6240  006760  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6241  006762  0E01               	movlw	1
  6242  006764  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6243  006766  EC65  F020         	call	_oled_putString	;wreg free
  6244                           
  6245                           ;MOTEapp.c: 590: oled_putString("Temp :",0,2);
  6246  00676A  0EB7               	movlw	low STR_88
  6247  00676C  0100               	movlb	0	; () banked
  6248  00676E  6FD5               	movwf	oled_putString@string& (0+255),b
  6249  006770  0E7F               	movlw	high STR_88
  6250  006772  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6251  006774  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6252  006776  0E02               	movlw	2
  6253  006778  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6254  00677A  EC65  F020         	call	_oled_putString	;wreg free
  6255                           
  6256                           ;MOTEapp.c: 591: oled_putString("C",12,2);
  6257  00677E  0EF9               	movlw	low STR_76
  6258  006780  0100               	movlb	0	; () banked
  6259  006782  6FD5               	movwf	oled_putString@string& (0+255),b
  6260  006784  0E7F               	movlw	high STR_76
  6261  006786  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6262  006788  0E0C               	movlw	12
  6263  00678A  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6264  00678C  0E02               	movlw	2
  6265  00678E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6266  006790  EC65  F020         	call	_oled_putString	;wreg free
  6267                           
  6268                           ;MOTEapp.c: 592: if (temperature)
  6269  006794  0100               	movlb	0	; () banked
  6270  006796  517E               	movf	_temperature& (0+255),w,b
  6271  006798  117F               	iorwf	(_temperature+1)& (0+255),w,b
  6272  00679A  E015               	bz	l11212
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;MOTEapp.c: 593: {
  6276                           ;MOTEapp.c: 594: oled_putUint16(light,6,1);
  6277  00679C  C07A  F0DA         	movff	_light,oled_putUint16@number
  6278  0067A0  C07B  F0DB         	movff	_light+1,oled_putUint16@number+1
  6279  0067A4  0E06               	movlw	6
  6280  0067A6  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  6281  0067A8  0E01               	movlw	1
  6282  0067AA  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  6283  0067AC  ECE2  F02A         	call	_oled_putUint16	;wreg free
  6284                           
  6285                           ;MOTEapp.c: 595: oled_putUint16(temperature,6,2);
  6286  0067B0  C07E  F0DA         	movff	_temperature,oled_putUint16@number
  6287  0067B4  C07F  F0DB         	movff	_temperature+1,oled_putUint16@number+1
  6288  0067B8  0E06               	movlw	6
  6289  0067BA  0100               	movlb	0	; () banked
  6290  0067BC  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  6291  0067BE  0E02               	movlw	2
  6292  0067C0  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  6293  0067C2  ECE2  F02A         	call	_oled_putUint16	;wreg free
  6294  0067C6                     l11212:
  6295                           
  6296                           ;MOTEapp.c: 596: }
  6297                           ;MOTEapp.c: 597: runningState = runningSensorMenu;
  6298  0067C6  0E02               	movlw	2
  6299  0067C8  0100               	movlb	0	; () banked
  6300  0067CA  6F98               	movwf	_runningState& (0+255),b
  6301  0067CC  0C02               	retlw	2
  6302  0067CE                     l11214:
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;MOTEapp.c: 601: oled_putUint16(light,6,1);
  6306  0067CE  C07A  F0DA         	movff	_light,oled_putUint16@number
  6307  0067D2  C07B  F0DB         	movff	_light+1,oled_putUint16@number+1
  6308  0067D6  0E06               	movlw	6
  6309  0067D8  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  6310  0067DA  0E01               	movlw	1
  6311  0067DC  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  6312  0067DE  ECE2  F02A         	call	_oled_putUint16	;wreg free
  6313                           
  6314                           ;MOTEapp.c: 602: oled_putUint16(temperature,6,2);
  6315  0067E2  C07E  F0DA         	movff	_temperature,oled_putUint16@number
  6316  0067E6  C07F  F0DB         	movff	_temperature+1,oled_putUint16@number+1
  6317  0067EA  0E06               	movlw	6
  6318  0067EC  0100               	movlb	0	; () banked
  6319  0067EE  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  6320  0067F0  0E02               	movlw	2
  6321  0067F2  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  6322  0067F4  ECE2  F02A         	call	_oled_putUint16	;wreg free
  6323                           
  6324                           ;MOTEapp.c: 603: if ( (changeStates) || (selectButton) )
  6325  0067F8  0100               	movlb	0	; () banked
  6326  0067FA  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6327  0067FC  E103               	bnz	l11220
  6328                           
  6329                           ; BSR set to: 0
  6330  0067FE  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6331  006800  B4D8               	btfsc	status,2,c
  6332  006802  0012               	return	
  6333  006804                     l11220:
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;MOTEapp.c: 604: {
  6337                           ;MOTEapp.c: 605: oled_clear();
  6338  006804  ECF9  F01A         	call	_oled_clear	;wreg free
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;MOTEapp.c: 606: oled_putString("  Sensor Data  ",0,0);
  6342  006808  0EEC               	movlw	low STR_80
  6343  00680A  6FD5               	movwf	oled_putString@string& (0+255),b
  6344  00680C  0E7B               	movlw	high STR_80
  6345  00680E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6346  006810  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6347  006812  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6348  006814  EC65  F020         	call	_oled_putString	;wreg free
  6349                           
  6350                           ;MOTEapp.c: 607: oled_putString("    Display    ",0,1);
  6351  006818  0EDC               	movlw	low STR_81
  6352  00681A  0100               	movlb	0	; () banked
  6353  00681C  6FD5               	movwf	oled_putString@string& (0+255),b
  6354  00681E  0E7B               	movlw	high STR_81
  6355  006820  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6356  006822  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6357  006824  0E01               	movlw	1
  6358  006826  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6359  006828  EC65  F020         	call	_oled_putString	;wreg free
  6360                           
  6361                           ;MOTEapp.c: 608: oled_putString("(NAV)    (SEL) ",0,3);
  6362  00682C  0EFC               	movlw	low STR_75
  6363  00682E  0100               	movlb	0	; () banked
  6364  006830  6FD5               	movwf	oled_putString@string& (0+255),b
  6365  006832  0E7B               	movlw	high STR_75
  6366  006834  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6367  006836  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6368  006838  0E03               	movlw	3
  6369  00683A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6370  00683C  EC65  F020         	call	_oled_putString	;wreg free
  6371  006840  D755               	goto	l11182
  6372  006842                     l11230:
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;MOTEapp.c: 613: if (changeStates)
  6376  006842  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6377  006844  E022               	bz	l11242
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;MOTEapp.c: 614: {
  6381                           ;MOTEapp.c: 615: oled_clear();
  6382  006846  ECF9  F01A         	call	_oled_clear	;wreg free
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;MOTEapp.c: 616: oled_putString("  Issue Uplink  ",0,0);
  6386  00684A  0EFF               	movlw	low STR_93
  6387  00684C  6FD5               	movwf	oled_putString@string& (0+255),b
  6388  00684E  0E7A               	movlw	high STR_93
  6389  006850  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6390  006852  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6391  006854  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6392  006856  EC65  F020         	call	_oled_putString	;wreg free
  6393                           
  6394                           ;MOTEapp.c: 617: oled_putString(" LoRaWAN Packet ",0,1);
  6395  00685A  0E32               	movlw	low STR_94
  6396  00685C  0100               	movlb	0	; () banked
  6397  00685E  6FD5               	movwf	oled_putString@string& (0+255),b
  6398  006860  0E7B               	movlw	high STR_94
  6399  006862  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6400  006864  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6401  006866  0E01               	movlw	1
  6402  006868  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6403  00686A  EC65  F020         	call	_oled_putString	;wreg free
  6404                           
  6405                           ;MOTEapp.c: 618: oled_putString("(NAV)    (SEL) ",0,3);
  6406  00686E  0EFC               	movlw	low STR_75
  6407  006870  0100               	movlb	0	; () banked
  6408  006872  6FD5               	movwf	oled_putString@string& (0+255),b
  6409  006874  0E7B               	movlw	high STR_75
  6410  006876  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6411  006878  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6412  00687A  0E03               	movlw	3
  6413  00687C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6414  00687E  EC65  F020         	call	_oled_putString	;wreg free
  6415  006882                     l11240:
  6416                           
  6417                           ;MOTEapp.c: 619: runningState = runningUplink;
  6418  006882  0E06               	movlw	6
  6419  006884  0100               	movlb	0	; () banked
  6420  006886  6F98               	movwf	_runningState& (0+255),b
  6421                           
  6422                           ;MOTEapp.c: 620: }
  6423  006888  0C06               	retlw	6
  6424  00688A                     l11242:
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;MOTEapp.c: 621: else if (selectButton)
  6428  00688A  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6429  00688C  B4D8               	btfsc	status,2,c
  6430  00688E  0012               	return	
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;MOTEapp.c: 622: {
  6434                           ;MOTEapp.c: 623: oled_clear();
  6435  006890  ECF9  F01A         	call	_oled_clear	;wreg free
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;MOTEapp.c: 624: oled_putString("<", 15,0);
  6439  006894  0EF7               	movlw	low STR_96
  6440  006896  6FD5               	movwf	oled_putString@string& (0+255),b
  6441  006898  0E7F               	movlw	high STR_96
  6442  00689A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6443  00689C  0E0F               	movlw	15
  6444  00689E  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6445  0068A0  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6446  0068A2  EC65  F020         	call	_oled_putString	;wreg free
  6447                           
  6448                           ;MOTEapp.c: 625: oled_putString("Data Rate:   0", 0,0);
  6449  0068A6  0E79               	movlw	low STR_97
  6450  0068A8  0100               	movlb	0	; () banked
  6451  0068AA  6FD5               	movwf	oled_putString@string& (0+255),b
  6452  0068AC  0E7C               	movlw	high STR_97
  6453  0068AE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6454  0068B0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6455  0068B2  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6456  0068B4  EC65  F020         	call	_oled_putString	;wreg free
  6457                           
  6458                           ;MOTEapp.c: 626: oled_putString("Data Rate:   1", 0,1);
  6459  0068B8  0E88               	movlw	low STR_98
  6460  0068BA  0100               	movlb	0	; () banked
  6461  0068BC  6FD5               	movwf	oled_putString@string& (0+255),b
  6462  0068BE  0E7C               	movlw	high STR_98
  6463  0068C0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6464  0068C2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6465  0068C4  0E01               	movlw	1
  6466  0068C6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6467  0068C8  EC65  F020         	call	_oled_putString	;wreg free
  6468                           
  6469                           ;MOTEapp.c: 627: oled_putString("Data Rate:   2", 0,2);
  6470  0068CC  0E97               	movlw	low STR_99
  6471  0068CE  0100               	movlb	0	; () banked
  6472  0068D0  6FD5               	movwf	oled_putString@string& (0+255),b
  6473  0068D2  0E7C               	movlw	high STR_99
  6474  0068D4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6475  0068D6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6476  0068D8  0E02               	movlw	2
  6477  0068DA  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6478  0068DC  EC65  F020         	call	_oled_putString	;wreg free
  6479                           
  6480                           ;MOTEapp.c: 628: oled_putString("Data Rate:   3", 0,3);
  6481  0068E0  0EA6               	movlw	low STR_100
  6482  0068E2  0100               	movlb	0	; () banked
  6483  0068E4  6FD5               	movwf	oled_putString@string& (0+255),b
  6484  0068E6  0E7C               	movlw	high STR_100
  6485  0068E8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6486  0068EA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6487  0068EC  0E03               	movlw	3
  6488  0068EE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6489  0068F0  EC65  F020         	call	_oled_putString	;wreg free
  6490                           
  6491                           ;MOTEapp.c: 630: if (dataRateSelection == 0)
  6492  0068F4  0100               	movlb	0	; () banked
  6493  0068F6  51F7               	movf	_dataRateSelection& (0+255),w,b
  6494  0068F8  E10A               	bnz	l11260
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;MOTEapp.c: 631: oled_putString("*", 14,0);
  6498  0068FA  0EF5               	movlw	low STR_101
  6499  0068FC  6FD5               	movwf	oled_putString@string& (0+255),b
  6500  0068FE  0E7F               	movlw	high STR_101
  6501  006900  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6502  006902  0E0E               	movlw	14
  6503  006904  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6504  006906  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6505  006908  EC65  F020         	call	_oled_putString	;wreg free
  6506  00690C  D028               	goto	l11272
  6507  00690E                     l11260:
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;MOTEapp.c: 632: else if (dataRateSelection == 1)
  6511  00690E  05F7               	decf	_dataRateSelection& (0+255),w,b
  6512  006910  E10B               	bnz	l11264
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;MOTEapp.c: 633: oled_putString("*", 14,1);
  6516  006912  0EF5               	movlw	low STR_101
  6517  006914  6FD5               	movwf	oled_putString@string& (0+255),b
  6518  006916  0E7F               	movlw	high STR_101
  6519  006918  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6520  00691A  0E0E               	movlw	14
  6521  00691C  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6522  00691E  0E01               	movlw	1
  6523  006920  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6524  006922  EC65  F020         	call	_oled_putString	;wreg free
  6525  006926  D01B               	goto	l11272
  6526  006928                     l11264:
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;MOTEapp.c: 634: else if (dataRateSelection == 2)
  6530  006928  0E02               	movlw	2
  6531  00692A  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6532  00692C  E10B               	bnz	l11268
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;MOTEapp.c: 635: oled_putString("*", 14,2);
  6536  00692E  0EF5               	movlw	low STR_101
  6537  006930  6FD5               	movwf	oled_putString@string& (0+255),b
  6538  006932  0E7F               	movlw	high STR_101
  6539  006934  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6540  006936  0E0E               	movlw	14
  6541  006938  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6542  00693A  0E02               	movlw	2
  6543  00693C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6544  00693E  EC65  F020         	call	_oled_putString	;wreg free
  6545  006942  D00D               	goto	l11272
  6546  006944                     l11268:
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;MOTEapp.c: 636: else if (dataRateSelection == 3)
  6550  006944  0E03               	movlw	3
  6551  006946  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6552  006948  E10A               	bnz	l11272
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;MOTEapp.c: 637: oled_putString("*", 14,3);
  6556  00694A  0EF5               	movlw	low STR_101
  6557  00694C  6FD5               	movwf	oled_putString@string& (0+255),b
  6558  00694E  0E7F               	movlw	high STR_101
  6559  006950  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6560  006952  0E0E               	movlw	14
  6561  006954  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6562  006956  0E03               	movlw	3
  6563  006958  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6564  00695A  EC65  F020         	call	_oled_putString	;wreg free
  6565  00695E                     l11272:
  6566                           
  6567                           ;MOTEapp.c: 638: runningState = runningDataRateSelect;
  6568  00695E  0E04               	movlw	4
  6569  006960  0100               	movlb	0	; () banked
  6570  006962  6F98               	movwf	_runningState& (0+255),b
  6571  006964  0C04               	retlw	4
  6572  006966                     l11274:
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;MOTEapp.c: 642: if (changeStates)
  6576  006966  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6577  006968  E101 D2C0          	bz	l11550
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;MOTEapp.c: 643: {
  6581                           ;MOTEapp.c: 644: dataRatePosition++;
  6582  00696C  2B93               	incf	_dataRatePosition& (0+255),f,b
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;MOTEapp.c: 646: if (dataRatePosition > 9)
  6586  00696E  0E09               	movlw	9
  6587  006970  6593               	cpfsgt	_dataRatePosition& (0+255),b
  6588  006972  D29D               	goto	l11548
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;MOTEapp.c: 647: dataRatePosition = 0;
  6592  006974  6B93               	clrf	_dataRatePosition& (0+255),b
  6593  006976  D29B               	goto	l11548
  6594  006978                     l11282:
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;MOTEapp.c: 652: oled_clear();
  6598  006978  ECF9  F01A         	call	_oled_clear	;wreg free
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;MOTEapp.c: 653: oled_putString("<", 15,0);
  6602  00697C  0EF7               	movlw	low STR_96
  6603  00697E  6FD5               	movwf	oled_putString@string& (0+255),b
  6604  006980  0E7F               	movlw	high STR_96
  6605  006982  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6606  006984  0E0F               	movlw	15
  6607  006986  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6608  006988  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6609  00698A  EC65  F020         	call	_oled_putString	;wreg free
  6610                           
  6611                           ;MOTEapp.c: 654: oled_putString("Data Rate:   0", 0,0);
  6612  00698E  0E79               	movlw	low STR_97
  6613  006990  0100               	movlb	0	; () banked
  6614  006992  6FD5               	movwf	oled_putString@string& (0+255),b
  6615  006994  0E7C               	movlw	high STR_97
  6616  006996  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6617  006998  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6618  00699A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6619  00699C  EC65  F020         	call	_oled_putString	;wreg free
  6620                           
  6621                           ;MOTEapp.c: 655: oled_putString("Data Rate:   1", 0,1);
  6622  0069A0  0E88               	movlw	low STR_98
  6623  0069A2  0100               	movlb	0	; () banked
  6624  0069A4  6FD5               	movwf	oled_putString@string& (0+255),b
  6625  0069A6  0E7C               	movlw	high STR_98
  6626  0069A8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6627  0069AA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6628  0069AC  0E01               	movlw	1
  6629  0069AE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6630  0069B0  EC65  F020         	call	_oled_putString	;wreg free
  6631                           
  6632                           ;MOTEapp.c: 656: oled_putString("Data Rate:   2", 0,2);
  6633  0069B4  0E97               	movlw	low STR_99
  6634  0069B6  0100               	movlb	0	; () banked
  6635  0069B8  6FD5               	movwf	oled_putString@string& (0+255),b
  6636  0069BA  0E7C               	movlw	high STR_99
  6637  0069BC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6638  0069BE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6639  0069C0  0E02               	movlw	2
  6640  0069C2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6641  0069C4  EC65  F020         	call	_oled_putString	;wreg free
  6642                           
  6643                           ;MOTEapp.c: 657: oled_putString("Data Rate:   3", 0,3);
  6644  0069C8  0EA6               	movlw	low STR_100
  6645  0069CA  0100               	movlb	0	; () banked
  6646  0069CC  6FD5               	movwf	oled_putString@string& (0+255),b
  6647  0069CE  0E7C               	movlw	high STR_100
  6648  0069D0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6649  0069D2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6650  0069D4  0E03               	movlw	3
  6651  0069D6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6652  0069D8  EC65  F020         	call	_oled_putString	;wreg free
  6653                           
  6654                           ;MOTEapp.c: 659: if (dataRateSelection == 0)
  6655  0069DC  0100               	movlb	0	; () banked
  6656  0069DE  51F7               	movf	_dataRateSelection& (0+255),w,b
  6657  0069E0  E101               	bnz	l11298
  6658  0069E2  D214               	goto	l11512
  6659  0069E4                     l11298:
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;MOTEapp.c: 661: else if (dataRateSelection == 1)
  6663  0069E4  05F7               	decf	_dataRateSelection& (0+255),w,b
  6664  0069E6  E101               	bnz	l11302
  6665  0069E8  D0C2               	goto	l11384
  6666  0069EA                     l11302:
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;MOTEapp.c: 663: else if (dataRateSelection == 2)
  6670  0069EA  0E02               	movlw	2
  6671  0069EC  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6672  0069EE  E101               	bnz	l11306
  6673  0069F0  D0CA               	goto	l11388
  6674  0069F2                     l11306:
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;MOTEapp.c: 665: else if (dataRateSelection == 3)
  6678  0069F2  0E03               	movlw	3
  6679  0069F4  D080               	goto	L38
  6680  0069F6                     l11310:
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;MOTEapp.c: 669: oled_clear();
  6684  0069F6  ECF9  F01A         	call	_oled_clear	;wreg free
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;MOTEapp.c: 670: oled_putString("<", 15,0);
  6688  0069FA  0EF7               	movlw	low STR_96
  6689  0069FC  6FD5               	movwf	oled_putString@string& (0+255),b
  6690  0069FE  0E7F               	movlw	high STR_96
  6691  006A00  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6692  006A02  0E0F               	movlw	15
  6693  006A04  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6694  006A06  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6695  006A08  EC65  F020         	call	_oled_putString	;wreg free
  6696                           
  6697                           ;MOTEapp.c: 671: oled_putString("Data Rate:   1", 0,0);
  6698  006A0C  0E88               	movlw	low STR_98
  6699  006A0E  0100               	movlb	0	; () banked
  6700  006A10  6FD5               	movwf	oled_putString@string& (0+255),b
  6701  006A12  0E7C               	movlw	high STR_98
  6702  006A14  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6703  006A16  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6704  006A18  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6705  006A1A  EC65  F020         	call	_oled_putString	;wreg free
  6706                           
  6707                           ;MOTEapp.c: 672: oled_putString("Data Rate:   2", 0,1);
  6708  006A1E  0E97               	movlw	low STR_99
  6709  006A20  0100               	movlb	0	; () banked
  6710  006A22  6FD5               	movwf	oled_putString@string& (0+255),b
  6711  006A24  0E7C               	movlw	high STR_99
  6712  006A26  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6713  006A28  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6714  006A2A  0E01               	movlw	1
  6715  006A2C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6716  006A2E  EC65  F020         	call	_oled_putString	;wreg free
  6717                           
  6718                           ;MOTEapp.c: 673: oled_putString("Data Rate:   3", 0,2);
  6719  006A32  0EA6               	movlw	low STR_100
  6720  006A34  0100               	movlb	0	; () banked
  6721  006A36  6FD5               	movwf	oled_putString@string& (0+255),b
  6722  006A38  0E7C               	movlw	high STR_100
  6723  006A3A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6724  006A3C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6725  006A3E  0E02               	movlw	2
  6726  006A40  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6727  006A42  EC65  F020         	call	_oled_putString	;wreg free
  6728                           
  6729                           ;MOTEapp.c: 674: oled_putString("Data Rate:   4", 0,3);
  6730  006A46  0EB5               	movlw	low STR_118
  6731  006A48  0100               	movlb	0	; () banked
  6732  006A4A  6FD5               	movwf	oled_putString@string& (0+255),b
  6733  006A4C  0E7C               	movlw	high STR_118
  6734  006A4E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6735  006A50  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6736  006A52  0E03               	movlw	3
  6737  006A54  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6738  006A56  EC65  F020         	call	_oled_putString	;wreg free
  6739                           
  6740                           ;MOTEapp.c: 676: if (dataRateSelection == 1)
  6741  006A5A  0100               	movlb	0	; () banked
  6742  006A5C  05F7               	decf	_dataRateSelection& (0+255),w,b
  6743  006A5E  E101               	bnz	l11326
  6744  006A60  D1D5               	goto	l11512
  6745  006A62                     l11326:
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;MOTEapp.c: 678: else if (dataRateSelection == 2)
  6749  006A62  0E02               	movlw	2
  6750  006A64  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6751  006A66  E101               	bnz	l11330
  6752  006A68  D082               	goto	l11384
  6753  006A6A                     l11330:
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;MOTEapp.c: 680: else if (dataRateSelection == 3)
  6757  006A6A  0E03               	movlw	3
  6758  006A6C  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6759  006A6E  E101               	bnz	l11334
  6760  006A70  D08A               	goto	l11388
  6761  006A72                     l11334:
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;MOTEapp.c: 682: else if (dataRateSelection == 4)
  6765  006A72  0E04               	movlw	4
  6766  006A74  D040               	goto	L38
  6767  006A76                     l11338:
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;MOTEapp.c: 686: oled_clear();
  6771  006A76  ECF9  F01A         	call	_oled_clear	;wreg free
  6772                           
  6773                           ; BSR set to: 0
  6774                           ;MOTEapp.c: 687: oled_putString("<", 15,0);
  6775  006A7A  0EF7               	movlw	low STR_96
  6776  006A7C  6FD5               	movwf	oled_putString@string& (0+255),b
  6777  006A7E  0E7F               	movlw	high STR_96
  6778  006A80  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6779  006A82  0E0F               	movlw	15
  6780  006A84  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6781  006A86  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6782  006A88  EC65  F020         	call	_oled_putString	;wreg free
  6783                           
  6784                           ;MOTEapp.c: 688: oled_putString("Data Rate:   2", 0,0);
  6785  006A8C  0E97               	movlw	low STR_99
  6786  006A8E  0100               	movlb	0	; () banked
  6787  006A90  6FD5               	movwf	oled_putString@string& (0+255),b
  6788  006A92  0E7C               	movlw	high STR_99
  6789  006A94  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6790  006A96  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6791  006A98  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6792  006A9A  EC65  F020         	call	_oled_putString	;wreg free
  6793                           
  6794                           ;MOTEapp.c: 689: oled_putString("Data Rate:   3", 0,1);
  6795  006A9E  0EA6               	movlw	low STR_100
  6796  006AA0  0100               	movlb	0	; () banked
  6797  006AA2  6FD5               	movwf	oled_putString@string& (0+255),b
  6798  006AA4  0E7C               	movlw	high STR_100
  6799  006AA6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6800  006AA8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6801  006AAA  0E01               	movlw	1
  6802  006AAC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6803  006AAE  EC65  F020         	call	_oled_putString	;wreg free
  6804                           
  6805                           ;MOTEapp.c: 690: oled_putString("Data Rate:   4", 0,2);
  6806  006AB2  0EB5               	movlw	low STR_118
  6807  006AB4  0100               	movlb	0	; () banked
  6808  006AB6  6FD5               	movwf	oled_putString@string& (0+255),b
  6809  006AB8  0E7C               	movlw	high STR_118
  6810  006ABA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6811  006ABC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6812  006ABE  0E02               	movlw	2
  6813  006AC0  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6814  006AC2  EC65  F020         	call	_oled_putString	;wreg free
  6815                           
  6816                           ;MOTEapp.c: 691: oled_putString("Data Rate:   5", 0,3);
  6817  006AC6  0EC4               	movlw	low STR_127
  6818  006AC8  0100               	movlb	0	; () banked
  6819  006ACA  6FD5               	movwf	oled_putString@string& (0+255),b
  6820  006ACC  0E7C               	movlw	high STR_127
  6821  006ACE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6822  006AD0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6823  006AD2  0E03               	movlw	3
  6824  006AD4  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6825  006AD6  EC65  F020         	call	_oled_putString	;wreg free
  6826                           
  6827                           ;MOTEapp.c: 693: if (dataRateSelection == 2)
  6828  006ADA  0E02               	movlw	2
  6829  006ADC  0100               	movlb	0	; () banked
  6830  006ADE  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6831  006AE0  E101               	bnz	l11354
  6832  006AE2  D194               	goto	l11512
  6833  006AE4                     l11354:
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;MOTEapp.c: 695: else if (dataRateSelection == 3)
  6837  006AE4  0E03               	movlw	3
  6838  006AE6  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6839  006AE8  E101               	bnz	l11358
  6840  006AEA  D041               	goto	l11384
  6841  006AEC                     l11358:
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;MOTEapp.c: 697: else if (dataRateSelection == 4)
  6845  006AEC  0E04               	movlw	4
  6846  006AEE  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6847  006AF0  E101               	bnz	l11362
  6848  006AF2  D049               	goto	l11388
  6849  006AF4                     l11362:
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;MOTEapp.c: 699: else if (dataRateSelection == 5)
  6853  006AF4  0E05               	movlw	5
  6854  006AF6                     L38:
  6855  006AF6  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6856  006AF8  D04F               	goto	L34
  6857  006AFA                     l11366:
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;MOTEapp.c: 703: oled_clear();
  6861  006AFA  ECF9  F01A         	call	_oled_clear	;wreg free
  6862                           
  6863                           ; BSR set to: 0
  6864                           ;MOTEapp.c: 704: oled_putString("<", 15,0);
  6865  006AFE  0EF7               	movlw	low STR_96
  6866  006B00  6FD5               	movwf	oled_putString@string& (0+255),b
  6867  006B02  0E7F               	movlw	high STR_96
  6868  006B04  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6869  006B06  0E0F               	movlw	15
  6870  006B08  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6871  006B0A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6872  006B0C  EC65  F020         	call	_oled_putString	;wreg free
  6873                           
  6874                           ;MOTEapp.c: 705: oled_putString("Data Rate:   3", 0,0);
  6875  006B10  0EA6               	movlw	low STR_100
  6876  006B12  0100               	movlb	0	; () banked
  6877  006B14  6FD5               	movwf	oled_putString@string& (0+255),b
  6878  006B16  0E7C               	movlw	high STR_100
  6879  006B18  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6880  006B1A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6881  006B1C  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6882  006B1E  EC65  F020         	call	_oled_putString	;wreg free
  6883                           
  6884                           ;MOTEapp.c: 706: oled_putString("Data Rate:   4", 0,1);
  6885  006B22  0EB5               	movlw	low STR_118
  6886  006B24  0100               	movlb	0	; () banked
  6887  006B26  6FD5               	movwf	oled_putString@string& (0+255),b
  6888  006B28  0E7C               	movlw	high STR_118
  6889  006B2A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6890  006B2C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6891  006B2E  0E01               	movlw	1
  6892  006B30  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6893  006B32  EC65  F020         	call	_oled_putString	;wreg free
  6894                           
  6895                           ;MOTEapp.c: 707: oled_putString("Data Rate:   5", 0,2);
  6896  006B36  0EC4               	movlw	low STR_127
  6897  006B38  0100               	movlb	0	; () banked
  6898  006B3A  6FD5               	movwf	oled_putString@string& (0+255),b
  6899  006B3C  0E7C               	movlw	high STR_127
  6900  006B3E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6901  006B40  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6902  006B42  0E02               	movlw	2
  6903  006B44  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6904  006B46  EC65  F020         	call	_oled_putString	;wreg free
  6905                           
  6906                           ;MOTEapp.c: 708: oled_putString("Data Rate:   6", 0,3);
  6907  006B4A  0ED3               	movlw	low STR_136
  6908  006B4C  0100               	movlb	0	; () banked
  6909  006B4E  6FD5               	movwf	oled_putString@string& (0+255),b
  6910  006B50  0E7C               	movlw	high STR_136
  6911  006B52  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6912  006B54  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6913  006B56  0E03               	movlw	3
  6914  006B58  6FD8               	movwf	oled_putString@start_page& (0+255),b
  6915  006B5A  EC65  F020         	call	_oled_putString	;wreg free
  6916                           
  6917                           ;MOTEapp.c: 710: if (dataRateSelection == 3)
  6918  006B5E  0E03               	movlw	3
  6919  006B60  0100               	movlb	0	; () banked
  6920  006B62  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6921  006B64  E101               	bnz	l11382
  6922  006B66  D152               	goto	l11512
  6923  006B68                     l11382:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;MOTEapp.c: 712: else if (dataRateSelection == 4)
  6927  006B68  0E04               	movlw	4
  6928  006B6A  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6929  006B6C  E109               	bnz	l11386
  6930  006B6E                     l11384:
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;MOTEapp.c: 713: oled_putString("*", 14,1);
  6934  006B6E  0EF5               	movlw	low STR_101
  6935  006B70  6FD5               	movwf	oled_putString@string& (0+255),b
  6936  006B72  0E7F               	movlw	high STR_101
  6937  006B74  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6938  006B76  0E0E               	movlw	14
  6939  006B78  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6940  006B7A  0E01               	movlw	1
  6941  006B7C  EFBC  F03A         	goto	L29
  6942  006B80                     l11386:
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;MOTEapp.c: 714: else if (dataRateSelection == 5)
  6946  006B80  0E05               	movlw	5
  6947  006B82  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  6948  006B84  E107               	bnz	l11390
  6949  006B86                     l11388:
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;MOTEapp.c: 715: oled_putString("*", 14,2);
  6953  006B86  0EF5               	movlw	low STR_101
  6954  006B88  6FD5               	movwf	oled_putString@string& (0+255),b
  6955  006B8A  0E7F               	movlw	high STR_101
  6956  006B8C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6957  006B8E  0E0E               	movlw	14
  6958  006B90  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6959  006B92  D044               	goto	L35
  6960  006B94                     l11390:
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;MOTEapp.c: 716: else if (dataRateSelection == 6)
  6964  006B94  0E06               	movlw	6
  6965  006B96  D7AF               	goto	L38
  6966  006B98                     L34:
  6967  006B98  A4D8               	btfss	status,2,c
  6968  006B9A  0012               	return	
  6969  006B9C  D180               	goto	L70
  6970  006B9E                     l11394:
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;MOTEapp.c: 720: oled_clear();
  6974  006B9E  ECF9  F01A         	call	_oled_clear	;wreg free
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;MOTEapp.c: 721: oled_putString("<", 15,0);
  6978  006BA2  0EF7               	movlw	low STR_96
  6979  006BA4  6FD5               	movwf	oled_putString@string& (0+255),b
  6980  006BA6  0E7F               	movlw	high STR_96
  6981  006BA8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6982  006BAA  0E0F               	movlw	15
  6983  006BAC  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  6984  006BAE  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6985  006BB0  EC65  F020         	call	_oled_putString	;wreg free
  6986                           
  6987                           ;MOTEapp.c: 722: oled_putString("Data Rate:   4", 0,0);
  6988  006BB4  0EB5               	movlw	low STR_118
  6989  006BB6  0100               	movlb	0	; () banked
  6990  006BB8  6FD5               	movwf	oled_putString@string& (0+255),b
  6991  006BBA  0E7C               	movlw	high STR_118
  6992  006BBC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  6993  006BBE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  6994  006BC0  6BD8               	clrf	oled_putString@start_page& (0+255),b
  6995  006BC2  EC65  F020         	call	_oled_putString	;wreg free
  6996                           
  6997                           ;MOTEapp.c: 723: oled_putString("Data Rate:   5", 0,1);
  6998  006BC6  0EC4               	movlw	low STR_127
  6999  006BC8  0100               	movlb	0	; () banked
  7000  006BCA  6FD5               	movwf	oled_putString@string& (0+255),b
  7001  006BCC  0E7C               	movlw	high STR_127
  7002  006BCE  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7003  006BD0  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7004  006BD2  0E01               	movlw	1
  7005  006BD4  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7006  006BD6  EC65  F020         	call	_oled_putString	;wreg free
  7007                           
  7008                           ;MOTEapp.c: 724: oled_putString("Data Rate:   6", 0,2);
  7009  006BDA  0ED3               	movlw	low STR_136
  7010  006BDC  0100               	movlb	0	; () banked
  7011  006BDE  6FD5               	movwf	oled_putString@string& (0+255),b
  7012  006BE0  0E7C               	movlw	high STR_136
  7013  006BE2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7014  006BE4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7015  006BE6  0E02               	movlw	2
  7016  006BE8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7017  006BEA  EC65  F020         	call	_oled_putString	;wreg free
  7018                           
  7019                           ;MOTEapp.c: 725: oled_putString("Data Rate:   7", 0,3);
  7020  006BEE  0EE2               	movlw	low STR_145
  7021  006BF0  0100               	movlb	0	; () banked
  7022  006BF2  6FD5               	movwf	oled_putString@string& (0+255),b
  7023  006BF4  0E7C               	movlw	high STR_145
  7024  006BF6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7025  006BF8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7026  006BFA  0E03               	movlw	3
  7027  006BFC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7028  006BFE  EC65  F020         	call	_oled_putString	;wreg free
  7029                           
  7030                           ;MOTEapp.c: 727: if (dataRateSelection == 4)
  7031  006C02  0E04               	movlw	4
  7032  006C04  0100               	movlb	0	; () banked
  7033  006C06  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7034  006C08  E101               	bnz	l11410
  7035  006C0A  D100               	goto	l11512
  7036  006C0C                     l11410:
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;MOTEapp.c: 729: else if (dataRateSelection == 5)
  7040  006C0C  0E05               	movlw	5
  7041  006C0E  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7042  006C10  E101               	bnz	l11414
  7043  006C12  D7AD               	goto	l11384
  7044  006C14                     l11414:
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;MOTEapp.c: 731: else if (dataRateSelection == 6)
  7048  006C14  0E06               	movlw	6
  7049  006C16  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7050  006C18  E104               	bnz	l11418
  7051  006C1A  D7B5               	goto	l11388
  7052  006C1C                     L35:
  7053  006C1C  0E02               	movlw	2
  7054  006C1E  EFBC  F03A         	goto	L29
  7055  006C22                     l11418:
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;MOTEapp.c: 733: else if (dataRateSelection == 7)
  7059  006C22  0E07               	movlw	7
  7060  006C24  D768               	goto	L38
  7061  006C26                     l11422:
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;MOTEapp.c: 737: oled_clear();
  7065  006C26  ECF9  F01A         	call	_oled_clear	;wreg free
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;MOTEapp.c: 738: oled_putString("<", 15,0);
  7069  006C2A  0EF7               	movlw	low STR_96
  7070  006C2C  6FD5               	movwf	oled_putString@string& (0+255),b
  7071  006C2E  0E7F               	movlw	high STR_96
  7072  006C30  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7073  006C32  0E0F               	movlw	15
  7074  006C34  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7075  006C36  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7076  006C38  EC65  F020         	call	_oled_putString	;wreg free
  7077                           
  7078                           ;MOTEapp.c: 739: oled_putString("Data Rate:   5", 0,0);
  7079  006C3C  0EC4               	movlw	low STR_127
  7080  006C3E  0100               	movlb	0	; () banked
  7081  006C40  6FD5               	movwf	oled_putString@string& (0+255),b
  7082  006C42  0E7C               	movlw	high STR_127
  7083  006C44  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7084  006C46  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7085  006C48  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7086  006C4A  EC65  F020         	call	_oled_putString	;wreg free
  7087                           
  7088                           ;MOTEapp.c: 740: oled_putString("Data Rate:   6", 0,1);
  7089  006C4E  0ED3               	movlw	low STR_136
  7090  006C50  0100               	movlb	0	; () banked
  7091  006C52  6FD5               	movwf	oled_putString@string& (0+255),b
  7092  006C54  0E7C               	movlw	high STR_136
  7093  006C56  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7094  006C58  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7095  006C5A  0E01               	movlw	1
  7096  006C5C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7097  006C5E  EC65  F020         	call	_oled_putString	;wreg free
  7098                           
  7099                           ;MOTEapp.c: 741: oled_putString("Data Rate:   7", 0,2);
  7100  006C62  0EE2               	movlw	low STR_145
  7101  006C64  0100               	movlb	0	; () banked
  7102  006C66  6FD5               	movwf	oled_putString@string& (0+255),b
  7103  006C68  0E7C               	movlw	high STR_145
  7104  006C6A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7105  006C6C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7106  006C6E  0E02               	movlw	2
  7107  006C70  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7108  006C72  EC65  F020         	call	_oled_putString	;wreg free
  7109                           
  7110                           ;MOTEapp.c: 742: oled_putString("Auto Data Rate", 0,3);
  7111  006C76  0EF1               	movlw	low STR_154
  7112  006C78  0100               	movlb	0	; () banked
  7113  006C7A  6FD5               	movwf	oled_putString@string& (0+255),b
  7114  006C7C  0E7C               	movlw	high STR_154
  7115  006C7E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7116  006C80  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7117  006C82  0E03               	movlw	3
  7118  006C84  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7119  006C86  EC65  F020         	call	_oled_putString	;wreg free
  7120                           
  7121                           ;MOTEapp.c: 744: if (dataRateSelection == 5)
  7122  006C8A  0E05               	movlw	5
  7123  006C8C  0100               	movlb	0	; () banked
  7124  006C8E  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7125  006C90  E101               	bnz	l11438
  7126  006C92  D0BC               	goto	l11512
  7127  006C94                     l11438:
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;MOTEapp.c: 746: else if (dataRateSelection == 6)
  7131  006C94  0E06               	movlw	6
  7132  006C96  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7133  006C98  E101               	bnz	l11442
  7134  006C9A  D769               	goto	l11384
  7135  006C9C                     l11442:
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;MOTEapp.c: 748: else if (dataRateSelection == 7)
  7139  006C9C  0E07               	movlw	7
  7140  006C9E  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7141  006CA0  E101               	bnz	l11446
  7142  006CA2  D771               	goto	l11388
  7143  006CA4                     l11446:
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;MOTEapp.c: 750: else if (adrStatus)
  7147  006CA4  518E               	movf	_adrStatus& (0+255),w,b
  7148  006CA6  B4D8               	btfsc	status,2,c
  7149  006CA8  0012               	return	
  7150  006CAA  D0F9               	goto	L70
  7151  006CAC                     l11450:
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;MOTEapp.c: 754: oled_clear();
  7155  006CAC  ECF9  F01A         	call	_oled_clear	;wreg free
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;MOTEapp.c: 755: oled_putString("<", 15,0);
  7159  006CB0  0EF7               	movlw	low STR_96
  7160  006CB2  6FD5               	movwf	oled_putString@string& (0+255),b
  7161  006CB4  0E7F               	movlw	high STR_96
  7162  006CB6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7163  006CB8  0E0F               	movlw	15
  7164  006CBA  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7165  006CBC  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7166  006CBE  EC65  F020         	call	_oled_putString	;wreg free
  7167                           
  7168                           ;MOTEapp.c: 756: oled_putString("Data Rate:   6", 0,0);
  7169  006CC2  0ED3               	movlw	low STR_136
  7170  006CC4  0100               	movlb	0	; () banked
  7171  006CC6  6FD5               	movwf	oled_putString@string& (0+255),b
  7172  006CC8  0E7C               	movlw	high STR_136
  7173  006CCA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7174  006CCC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7175  006CCE  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7176  006CD0  EC65  F020         	call	_oled_putString	;wreg free
  7177                           
  7178                           ;MOTEapp.c: 757: oled_putString("Data Rate:   7", 0,1);
  7179  006CD4  0EE2               	movlw	low STR_145
  7180  006CD6  0100               	movlb	0	; () banked
  7181  006CD8  6FD5               	movwf	oled_putString@string& (0+255),b
  7182  006CDA  0E7C               	movlw	high STR_145
  7183  006CDC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7184  006CDE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7185  006CE0  0E01               	movlw	1
  7186  006CE2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7187  006CE4  EC65  F020         	call	_oled_putString	;wreg free
  7188                           
  7189                           ;MOTEapp.c: 758: oled_putString("Auto Data Rate", 0,2);
  7190  006CE8  0EF1               	movlw	low STR_154
  7191  006CEA  0100               	movlb	0	; () banked
  7192  006CEC  6FD5               	movwf	oled_putString@string& (0+255),b
  7193  006CEE  0E7C               	movlw	high STR_154
  7194  006CF0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7195  006CF2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7196  006CF4  0E02               	movlw	2
  7197  006CF6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7198  006CF8  EC65  F020         	call	_oled_putString	;wreg free
  7199                           
  7200                           ;MOTEapp.c: 759: oled_putString("Exit Menu     ", 0,3);
  7201  006CFC  0E4C               	movlw	low STR_163
  7202  006CFE  0100               	movlb	0	; () banked
  7203  006D00  6FD5               	movwf	oled_putString@string& (0+255),b
  7204  006D02  0E7C               	movlw	high STR_163
  7205  006D04  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7206  006D06  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7207  006D08  0E03               	movlw	3
  7208  006D0A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7209  006D0C  EC65  F020         	call	_oled_putString	;wreg free
  7210                           
  7211                           ;MOTEapp.c: 761: if (dataRateSelection == 6)
  7212  006D10  0E06               	movlw	6
  7213  006D12  0100               	movlb	0	; () banked
  7214  006D14  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7215  006D16  E101               	bnz	l11466
  7216  006D18  D079               	goto	l11512
  7217  006D1A                     l11466:
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;MOTEapp.c: 763: else if (dataRateSelection == 7)
  7221  006D1A  0E07               	movlw	7
  7222  006D1C  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7223  006D1E  E101               	bnz	l11470
  7224  006D20  D726               	goto	l11384
  7225  006D22                     l11470:
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;MOTEapp.c: 765: else if (adrStatus)
  7229  006D22  518E               	movf	_adrStatus& (0+255),w,b
  7230  006D24  B4D8               	btfsc	status,2,c
  7231  006D26  0012               	return	
  7232  006D28  D72E               	goto	l11388
  7233  006D2A                     l11474:
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;MOTEapp.c: 769: oled_clear();
  7237  006D2A  ECF9  F01A         	call	_oled_clear	;wreg free
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;MOTEapp.c: 770: oled_putString("<", 15,0);
  7241  006D2E  0EF7               	movlw	low STR_96
  7242  006D30  6FD5               	movwf	oled_putString@string& (0+255),b
  7243  006D32  0E7F               	movlw	high STR_96
  7244  006D34  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7245  006D36  0E0F               	movlw	15
  7246  006D38  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7247  006D3A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7248  006D3C  EC65  F020         	call	_oled_putString	;wreg free
  7249                           
  7250                           ;MOTEapp.c: 771: oled_putString("Data Rate:   7", 0,0);
  7251  006D40  0EE2               	movlw	low STR_145
  7252  006D42  0100               	movlb	0	; () banked
  7253  006D44  6FD5               	movwf	oled_putString@string& (0+255),b
  7254  006D46  0E7C               	movlw	high STR_145
  7255  006D48  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7256  006D4A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7257  006D4C  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7258  006D4E  EC65  F020         	call	_oled_putString	;wreg free
  7259                           
  7260                           ;MOTEapp.c: 772: oled_putString("Auto Data Rate", 0,1);
  7261  006D52  0EF1               	movlw	low STR_154
  7262  006D54  0100               	movlb	0	; () banked
  7263  006D56  6FD5               	movwf	oled_putString@string& (0+255),b
  7264  006D58  0E7C               	movlw	high STR_154
  7265  006D5A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7266  006D5C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7267  006D5E  0E01               	movlw	1
  7268  006D60  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7269  006D62  EC65  F020         	call	_oled_putString	;wreg free
  7270                           
  7271                           ;MOTEapp.c: 773: oled_putString("Exit Menu     ", 0,2);
  7272  006D66  0E4C               	movlw	low STR_163
  7273  006D68  0100               	movlb	0	; () banked
  7274  006D6A  6FD5               	movwf	oled_putString@string& (0+255),b
  7275  006D6C  0E7C               	movlw	high STR_163
  7276  006D6E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7277  006D70  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7278  006D72  0E02               	movlw	2
  7279  006D74  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7280  006D76  EC65  F020         	call	_oled_putString	;wreg free
  7281                           
  7282                           ;MOTEapp.c: 774: oled_putString("Data Rate:   0", 0,3);
  7283  006D7A  0E79               	movlw	low STR_97
  7284  006D7C  0100               	movlb	0	; () banked
  7285  006D7E  6FD5               	movwf	oled_putString@string& (0+255),b
  7286  006D80  0E7C               	movlw	high STR_97
  7287  006D82  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7288  006D84  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7289  006D86  0E03               	movlw	3
  7290  006D88  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7291  006D8A  EC65  F020         	call	_oled_putString	;wreg free
  7292                           
  7293                           ;MOTEapp.c: 776: if (dataRateSelection == 7)
  7294  006D8E  0E07               	movlw	7
  7295  006D90  0100               	movlb	0	; () banked
  7296  006D92  19F7               	xorwf	_dataRateSelection& (0+255),w,b
  7297  006D94  E101               	bnz	l11490
  7298  006D96  D03A               	goto	l11512
  7299  006D98                     l11490:
  7300                           
  7301                           ; BSR set to: 0
  7302                           ;MOTEapp.c: 778: else if (adrStatus)
  7303  006D98  518E               	movf	_adrStatus& (0+255),w,b
  7304  006D9A  E001               	bz	l11494
  7305  006D9C  D6E8               	goto	l11384
  7306  006D9E                     l11494:
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;MOTEapp.c: 780: else if (dataRateSelection == 0)
  7310  006D9E  51F7               	movf	_dataRateSelection& (0+255),w,b
  7311  006DA0  D6FB               	goto	L34
  7312  006DA2                     l11498:
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;MOTEapp.c: 784: oled_clear();
  7316  006DA2  ECF9  F01A         	call	_oled_clear	;wreg free
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;MOTEapp.c: 785: oled_putString("<", 15,0);
  7320  006DA6  0EF7               	movlw	low STR_96
  7321  006DA8  6FD5               	movwf	oled_putString@string& (0+255),b
  7322  006DAA  0E7F               	movlw	high STR_96
  7323  006DAC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7324  006DAE  0E0F               	movlw	15
  7325  006DB0  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7326  006DB2  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7327  006DB4  EC65  F020         	call	_oled_putString	;wreg free
  7328                           
  7329                           ;MOTEapp.c: 786: oled_putString("Auto Data Rate", 0,0);
  7330  006DB8  0EF1               	movlw	low STR_154
  7331  006DBA  0100               	movlb	0	; () banked
  7332  006DBC  6FD5               	movwf	oled_putString@string& (0+255),b
  7333  006DBE  0E7C               	movlw	high STR_154
  7334  006DC0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7335  006DC2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7336  006DC4  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7337  006DC6  EC65  F020         	call	_oled_putString	;wreg free
  7338                           
  7339                           ;MOTEapp.c: 787: oled_putString("Exit Menu     ", 0,1);
  7340  006DCA  0E4C               	movlw	low STR_163
  7341  006DCC  0100               	movlb	0	; () banked
  7342  006DCE  6FD5               	movwf	oled_putString@string& (0+255),b
  7343  006DD0  0E7C               	movlw	high STR_163
  7344  006DD2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7345  006DD4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7346  006DD6  0E01               	movlw	1
  7347  006DD8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7348  006DDA  EC65  F020         	call	_oled_putString	;wreg free
  7349                           
  7350                           ;MOTEapp.c: 788: oled_putString("Data Rate:   0", 0,2);
  7351  006DDE  0E79               	movlw	low STR_97
  7352  006DE0  0100               	movlb	0	; () banked
  7353  006DE2  6FD5               	movwf	oled_putString@string& (0+255),b
  7354  006DE4  0E7C               	movlw	high STR_97
  7355  006DE6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7356  006DE8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7357  006DEA  0E02               	movlw	2
  7358  006DEC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7359  006DEE  EC65  F020         	call	_oled_putString	;wreg free
  7360                           
  7361                           ;MOTEapp.c: 789: oled_putString("Data Rate:   1", 0,3);
  7362  006DF2  0E88               	movlw	low STR_98
  7363  006DF4  0100               	movlb	0	; () banked
  7364  006DF6  6FD5               	movwf	oled_putString@string& (0+255),b
  7365  006DF8  0E7C               	movlw	high STR_98
  7366  006DFA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7367  006DFC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7368  006DFE  0E03               	movlw	3
  7369  006E00  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7370  006E02  EC65  F020         	call	_oled_putString	;wreg free
  7371                           
  7372                           ;MOTEapp.c: 791: if (adrStatus)
  7373  006E06  0100               	movlb	0	; () banked
  7374  006E08  518E               	movf	_adrStatus& (0+255),w,b
  7375  006E0A  E009               	bz	l11514
  7376  006E0C                     l11512:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;MOTEapp.c: 792: oled_putString("*", 14,0);
  7380  006E0C  0EF5               	movlw	low STR_101
  7381  006E0E  6FD5               	movwf	oled_putString@string& (0+255),b
  7382  006E10  0E7F               	movlw	high STR_101
  7383  006E12  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7384  006E14  0E0E               	movlw	14
  7385  006E16  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7386  006E18  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7387  006E1A  EF65  F020         	goto	_oled_putString	;wreg free
  7388  006E1E                     l11514:
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;MOTEapp.c: 793: else if (dataRateSelection == 0)
  7392  006E1E  51F7               	movf	_dataRateSelection& (0+255),w,b
  7393  006E20  E101               	bnz	l11518
  7394  006E22  D6B1               	goto	l11388
  7395  006E24                     l11518:
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;MOTEapp.c: 795: else if (dataRateSelection == 1)
  7399  006E24  05F7               	decf	_dataRateSelection& (0+255),w,b
  7400  006E26  D6B8               	goto	L34
  7401  006E28                     l11522:
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;MOTEapp.c: 799: oled_clear();
  7405  006E28  ECF9  F01A         	call	_oled_clear	;wreg free
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;MOTEapp.c: 800: oled_putString("<", 15,0);
  7409  006E2C  0EF7               	movlw	low STR_96
  7410  006E2E  6FD5               	movwf	oled_putString@string& (0+255),b
  7411  006E30  0E7F               	movlw	high STR_96
  7412  006E32  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7413  006E34  0E0F               	movlw	15
  7414  006E36  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7415  006E38  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7416  006E3A  EC65  F020         	call	_oled_putString	;wreg free
  7417                           
  7418                           ;MOTEapp.c: 801: oled_putString("Exit Menu     ", 0,0);
  7419  006E3E  0E4C               	movlw	low STR_163
  7420  006E40  0100               	movlb	0	; () banked
  7421  006E42  6FD5               	movwf	oled_putString@string& (0+255),b
  7422  006E44  0E7C               	movlw	high STR_163
  7423  006E46  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7424  006E48  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7425  006E4A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7426  006E4C  EC65  F020         	call	_oled_putString	;wreg free
  7427                           
  7428                           ;MOTEapp.c: 802: oled_putString("Data Rate:   0", 0,1);
  7429  006E50  0E79               	movlw	low STR_97
  7430  006E52  0100               	movlb	0	; () banked
  7431  006E54  6FD5               	movwf	oled_putString@string& (0+255),b
  7432  006E56  0E7C               	movlw	high STR_97
  7433  006E58  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7434  006E5A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7435  006E5C  0E01               	movlw	1
  7436  006E5E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7437  006E60  EC65  F020         	call	_oled_putString	;wreg free
  7438                           
  7439                           ;MOTEapp.c: 803: oled_putString("Data Rate:   1", 0,2);
  7440  006E64  0E88               	movlw	low STR_98
  7441  006E66  0100               	movlb	0	; () banked
  7442  006E68  6FD5               	movwf	oled_putString@string& (0+255),b
  7443  006E6A  0E7C               	movlw	high STR_98
  7444  006E6C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7445  006E6E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7446  006E70  0E02               	movlw	2
  7447  006E72  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7448  006E74  EC65  F020         	call	_oled_putString	;wreg free
  7449                           
  7450                           ;MOTEapp.c: 804: oled_putString("Data Rate:   2", 0,3);
  7451  006E78  0E97               	movlw	low STR_99
  7452  006E7A  0100               	movlb	0	; () banked
  7453  006E7C  6FD5               	movwf	oled_putString@string& (0+255),b
  7454  006E7E  0E7C               	movlw	high STR_99
  7455  006E80  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7456  006E82  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7457  006E84  0E03               	movlw	3
  7458  006E86  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7459  006E88  EC65  F020         	call	_oled_putString	;wreg free
  7460                           
  7461                           ;MOTEapp.c: 806: if (dataRateSelection == 0)
  7462  006E8C  0100               	movlb	0	; () banked
  7463  006E8E  51F7               	movf	_dataRateSelection& (0+255),w,b
  7464  006E90  E101               	bnz	l11538
  7465  006E92  D66D               	goto	l11384
  7466  006E94                     l11538:
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;MOTEapp.c: 808: else if (dataRateSelection == 1)
  7470  006E94  05F7               	decf	_dataRateSelection& (0+255),w,b
  7471  006E96  E101               	bnz	l11542
  7472  006E98  D676               	goto	l11388
  7473  006E9A                     l11542:
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;MOTEapp.c: 810: else if (dataRateSelection == 2)
  7477  006E9A  0E02               	movlw	2
  7478  006E9C  D62C               	goto	L38
  7479  006E9E                     L70:
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;MOTEapp.c: 811: oled_putString("*", 14,3);
  7483  006E9E  0EF5               	movlw	low STR_101
  7484  006EA0  6FD5               	movwf	oled_putString@string& (0+255),b
  7485  006EA2  0E7F               	movlw	high STR_101
  7486  006EA4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7487  006EA6  0E0E               	movlw	14
  7488  006EA8  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7489  006EAA  0E03               	movlw	3
  7490  006EAC  D365               	goto	L29
  7491  006EAE                     l11548:
  7492                           
  7493                           ; BSR set to: 0
  7494  006EAE  5193               	movf	_dataRatePosition& (0+255),w,b
  7495                           
  7496                           ; Switch size 1, requested type "speed"
  7497                           ; Number of cases is 10, Range of values is 0 to 9
  7498                           ; switch strategies available:
  7499                           ; Name         Instructions Cycles
  7500                           ; simple_byte           31    16 (average)
  7501                           ;	Chosen strategy is simple_byte
  7502  006EB0  E101 D562          	bz	l11282
  7503  006EB4  0A01               	xorlw	1	; case 1
  7504  006EB6  E101 D59E          	bz	l11310
  7505  006EBA  0A03               	xorlw	3	; case 2
  7506  006EBC  E101 D5DB          	bz	l11338
  7507  006EC0  0A01               	xorlw	1	; case 3
  7508  006EC2  E101 D61A          	bz	l11366
  7509  006EC6  0A07               	xorlw	7	; case 4
  7510  006EC8  E101 D669          	bz	l11394
  7511  006ECC  0A01               	xorlw	1	; case 5
  7512  006ECE  E101 D6AA          	bz	l11422
  7513  006ED2  0A03               	xorlw	3	; case 6
  7514  006ED4  E101 D6EA          	bz	l11450
  7515  006ED8  0A01               	xorlw	1	; case 7
  7516  006EDA  E101 D726          	bz	l11474
  7517  006EDE  0A0F               	xorlw	15	; case 8
  7518  006EE0  E101 D75F          	bz	l11498
  7519  006EE4  0A01               	xorlw	1	; case 9
  7520  006EE6  A4D8               	btfss	status,2,c
  7521  006EE8  0012               	return	
  7522  006EEA  D79E               	goto	l11522
  7523  006EEC                     l11550:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;MOTEapp.c: 815: else if (selectButton)
  7527  006EEC  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7528  006EEE  B4D8               	btfsc	status,2,c
  7529  006EF0  0012               	return	
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;MOTEapp.c: 816: {
  7533                           ;MOTEapp.c: 817: if (dataRatePosition == 9)
  7534  006EF2  0E09               	movlw	9
  7535  006EF4  1993               	xorwf	_dataRatePosition& (0+255),w,b
  7536  006EF6  E121               	bnz	l11566
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;MOTEapp.c: 818: {
  7540                           ;MOTEapp.c: 820: oled_clear();
  7541  006EF8  ECF9  F01A         	call	_oled_clear	;wreg free
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;MOTEapp.c: 821: dataRatePosition = 0;
  7545  006EFC  6B93               	clrf	_dataRatePosition& (0+255),b
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;MOTEapp.c: 822: oled_putString("  Select LoRa   ",0,0);
  7549  006EFE  0ECC               	movlw	low STR_83
  7550  006F00  6FD5               	movwf	oled_putString@string& (0+255),b
  7551  006F02  0E7A               	movlw	high STR_83
  7552  006F04  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7553  006F06  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7554  006F08  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7555  006F0A  EC65  F020         	call	_oled_putString	;wreg free
  7556                           
  7557                           ;MOTEapp.c: 823: oled_putString("   Data Rate    ",0,1);
  7558  006F0E  0EBB               	movlw	low STR_84
  7559  006F10  0100               	movlb	0	; () banked
  7560  006F12  6FD5               	movwf	oled_putString@string& (0+255),b
  7561  006F14  0E7A               	movlw	high STR_84
  7562  006F16  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7563  006F18  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7564  006F1A  0E01               	movlw	1
  7565  006F1C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7566  006F1E  EC65  F020         	call	_oled_putString	;wreg free
  7567                           
  7568                           ;MOTEapp.c: 824: oled_putString("(NAV)    (SEL) ",0,3);
  7569  006F22  0EFC               	movlw	low STR_75
  7570  006F24  0100               	movlb	0	; () banked
  7571  006F26  6FD5               	movwf	oled_putString@string& (0+255),b
  7572  006F28  0E7B               	movlw	high STR_75
  7573  006F2A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7574  006F2C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7575  006F2E  0E03               	movlw	3
  7576  006F30  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7577  006F32  EC65  F020         	call	_oled_putString	;wreg free
  7578  006F36  EF9A  F033         	goto	l11194
  7579  006F3A                     l11566:
  7580                           
  7581                           ; BSR set to: 0
  7582                           ;MOTEapp.c: 827: else
  7583                           ;MOTEapp.c: 828: {
  7584                           ;MOTEapp.c: 829: if (dataRatePosition == 8)
  7585  006F3A  0E08               	movlw	8
  7586  006F3C  1993               	xorwf	_dataRatePosition& (0+255),w,b
  7587  006F3E  E11B               	bnz	l11578
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;MOTEapp.c: 830: {
  7591                           ;MOTEapp.c: 831: if (adrStatus)
  7592  006F40  518E               	movf	_adrStatus& (0+255),w,b
  7593  006F42  E00C               	bz	l11574
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;MOTEapp.c: 832: {
  7597                           ;MOTEapp.c: 833: oled_putString(" ", 14,0);
  7598  006F44  0E59               	movlw	low (STR_163+13)
  7599  006F46  6FD5               	movwf	oled_putString@string& (0+255),b
  7600  006F48  0E7C               	movlw	high (STR_163+13)
  7601  006F4A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7602  006F4C  0E0E               	movlw	14
  7603  006F4E  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7604  006F50  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7605  006F52  EC65  F020         	call	_oled_putString	;wreg free
  7606                           
  7607                           ;MOTEapp.c: 834: adrStatus = 0;
  7608  006F56  0100               	movlb	0	; () banked
  7609  006F58  6B8E               	clrf	_adrStatus& (0+255),b
  7610                           
  7611                           ;MOTEapp.c: 835: }
  7612  006F5A  D016               	goto	l560
  7613  006F5C                     l11574:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;MOTEapp.c: 836: else
  7617                           ;MOTEapp.c: 837: {
  7618                           ;MOTEapp.c: 838: oled_putString("*", 14,0);
  7619  006F5C  0EF5               	movlw	low STR_101
  7620  006F5E  6FD5               	movwf	oled_putString@string& (0+255),b
  7621  006F60  0E7F               	movlw	high STR_101
  7622  006F62  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7623  006F64  0E0E               	movlw	14
  7624  006F66  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7625  006F68  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7626  006F6A  EC65  F020         	call	_oled_putString	;wreg free
  7627                           
  7628                           ;MOTEapp.c: 839: adrStatus = 1;
  7629  006F6E  0E01               	movlw	1
  7630  006F70  0100               	movlb	0	; () banked
  7631  006F72  6F8E               	movwf	_adrStatus& (0+255),b
  7632  006F74  D009               	goto	l560
  7633  006F76                     l11578:
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;MOTEapp.c: 842: else
  7637                           ;MOTEapp.c: 843: {
  7638                           ;MOTEapp.c: 844: oled_putString("*", 14,0);
  7639  006F76  0EF5               	movlw	low STR_101
  7640  006F78  6FD5               	movwf	oled_putString@string& (0+255),b
  7641  006F7A  0E7F               	movlw	high STR_101
  7642  006F7C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7643  006F7E  0E0E               	movlw	14
  7644  006F80  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7645  006F82  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7646  006F84  EC65  F020         	call	_oled_putString	;wreg free
  7647  006F88                     l560:
  7648                           
  7649                           ;MOTEapp.c: 845: }
  7650                           ;MOTEapp.c: 846: oled_putString(" ", 14,1);
  7651  006F88  0E59               	movlw	low (STR_163+13)
  7652  006F8A  0100               	movlb	0	; () banked
  7653  006F8C  6FD5               	movwf	oled_putString@string& (0+255),b
  7654  006F8E  0E7C               	movlw	high (STR_163+13)
  7655  006F90  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7656  006F92  0E0E               	movlw	14
  7657  006F94  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7658  006F96  0E01               	movlw	1
  7659  006F98  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7660  006F9A  EC65  F020         	call	_oled_putString	;wreg free
  7661                           
  7662                           ;MOTEapp.c: 847: oled_putString(" ", 14,2);
  7663  006F9E  0E59               	movlw	low (STR_163+13)
  7664  006FA0  0100               	movlb	0	; () banked
  7665  006FA2  6FD5               	movwf	oled_putString@string& (0+255),b
  7666  006FA4  0E7C               	movlw	high (STR_163+13)
  7667  006FA6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7668  006FA8  0E0E               	movlw	14
  7669  006FAA  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7670  006FAC  0E02               	movlw	2
  7671  006FAE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7672  006FB0  EC65  F020         	call	_oled_putString	;wreg free
  7673                           
  7674                           ;MOTEapp.c: 848: oled_putString(" ", 14,3);
  7675  006FB4  0E59               	movlw	low (STR_163+13)
  7676  006FB6  0100               	movlb	0	; () banked
  7677  006FB8  6FD5               	movwf	oled_putString@string& (0+255),b
  7678  006FBA  0E7C               	movlw	high (STR_163+13)
  7679  006FBC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7680  006FBE  0E0E               	movlw	14
  7681  006FC0  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  7682  006FC2  0E03               	movlw	3
  7683  006FC4  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7684  006FC6  EC65  F020         	call	_oled_putString	;wreg free
  7685                           
  7686                           ;MOTEapp.c: 849: MOTEapp_SetADR(adrStatus);
  7687  006FCA  0100               	movlb	0	; () banked
  7688  006FCC  518E               	movf	_adrStatus& (0+255),w,b
  7689  006FCE  EC68  F01A         	call	_MOTEapp_SetADR
  7690                           
  7691                           ;MOTEapp.c: 850: MOTEapp_SetDataRate(dataRatePosition);
  7692  006FD2  0100               	movlb	0	; () banked
  7693  006FD4  5193               	movf	_dataRatePosition& (0+255),w,b
  7694  006FD6  EC6C  F01A         	call	_MOTEapp_SetDataRate
  7695                           
  7696                           ;MOTEapp.c: 851: MOTEapp_WriteDataRate();
  7697  006FDA  EC6B  F02A         	call	_MOTEapp_WriteDataRate	;wreg free
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;MOTEapp.c: 854: activeState = moteGetDr;
  7701  006FDE  0E07               	movlw	7
  7702  006FE0  6F8D               	movwf	_activeState& (0+255),b
  7703  006FE2  0C07               	retlw	7
  7704  006FE4                     l11588:
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;MOTEapp.c: 859: if (changeStates)
  7708  006FE4  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7709  006FE6  E022               	bz	l11600
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;MOTEapp.c: 860: {
  7713                           ;MOTEapp.c: 861: oled_clear();
  7714  006FE8  ECF9  F01A         	call	_oled_clear	;wreg free
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;MOTEapp.c: 862: oled_putString(" View Downlink  ",0,0);
  7718  006FEC  0EEE               	movlw	low STR_200
  7719  006FEE  6FD5               	movwf	oled_putString@string& (0+255),b
  7720  006FF0  0E7A               	movlw	high STR_200
  7721  006FF2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7722  006FF4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7723  006FF6  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7724  006FF8  EC65  F020         	call	_oled_putString	;wreg free
  7725                           
  7726                           ;MOTEapp.c: 863: oled_putString("  Last Message  ",0,1);
  7727  006FFC  0EDD               	movlw	low STR_201
  7728  006FFE  0100               	movlb	0	; () banked
  7729  007000  6FD5               	movwf	oled_putString@string& (0+255),b
  7730  007002  0E7A               	movlw	high STR_201
  7731  007004  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7732  007006  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7733  007008  0E01               	movlw	1
  7734  00700A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7735  00700C  EC65  F020         	call	_oled_putString	;wreg free
  7736                           
  7737                           ;MOTEapp.c: 864: oled_putString("(NAV)    (SEL) ",0,3);
  7738  007010  0EFC               	movlw	low STR_75
  7739  007012  0100               	movlb	0	; () banked
  7740  007014  6FD5               	movwf	oled_putString@string& (0+255),b
  7741  007016  0E7B               	movlw	high STR_75
  7742  007018  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7743  00701A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7744  00701C  0E03               	movlw	3
  7745  00701E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7746  007020  EC65  F020         	call	_oled_putString	;wreg free
  7747  007024                     l11598:
  7748                           
  7749                           ;MOTEapp.c: 865: runningState = runningDownlink;
  7750  007024  0E0A               	movlw	10
  7751  007026  0100               	movlb	0	; () banked
  7752  007028  6F98               	movwf	_runningState& (0+255),b
  7753                           
  7754                           ;MOTEapp.c: 866: }
  7755  00702A  0C0A               	retlw	10
  7756  00702C                     l11600:
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;MOTEapp.c: 867: else if (selectButton)
  7760  00702C  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7761  00702E  B4D8               	btfsc	status,2,c
  7762  007030  0012               	return	
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;MOTEapp.c: 868: {
  7766                           ;MOTEapp.c: 869: sleepTicker = 0;
  7767  007032  6B9A               	clrf	_sleepTicker& (0+255),b
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;MOTEapp.c: 871: oled_clear();
  7771  007034  ECF9  F01A         	call	_oled_clear	;wreg free
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;MOTEapp.c: 872: oled_putString("Uplink Pckt Type",0,0);
  7775  007038  0E98               	movlw	low STR_203
  7776  00703A  6FD5               	movwf	oled_putString@string& (0+255),b
  7777  00703C  0E7B               	movlw	high STR_203
  7778  00703E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7779  007040  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7780  007042  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7781  007044  EC65  F020         	call	_oled_putString	;wreg free
  7782                           
  7783                           ;MOTEapp.c: 873: oled_putString("Throu Port# ",0,1);
  7784  007048  0E74               	movlw	low STR_204
  7785  00704A  0100               	movlb	0	; () banked
  7786  00704C  6FD5               	movwf	oled_putString@string& (0+255),b
  7787  00704E  0E7D               	movlw	high STR_204
  7788  007050  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7789  007052  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7790  007054  0E01               	movlw	1
  7791  007056  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7792  007058  EC65  F020         	call	_oled_putString	;wreg free
  7793                           
  7794                           ;MOTEapp.c: 875: oled_putString("(UNCNF)    (CNF) ",0,3);
  7795  00705C  0E86               	movlw	low STR_205
  7796  00705E  0100               	movlb	0	; () banked
  7797  007060  6FD5               	movwf	oled_putString@string& (0+255),b
  7798  007062  0E7A               	movlw	high STR_205
  7799  007064  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7800  007066  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7801  007068  0E03               	movlw	3
  7802  00706A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7803  00706C  EC65  F020         	call	_oled_putString	;wreg free
  7804                           
  7805                           ;MOTEapp.c: 877: moteApp_clearBuffers();
  7806  007070  ECCC  F01D         	call	_moteApp_clearBuffers	;wreg free
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;MOTEapp.c: 878: randomPortNum = TMR2_ReadTimer();
  7810  007074  EC70  F01A         	call	_TMR2_ReadTimer	;wreg free
  7811  007078  6F97               	movwf	_randomPortNum& (0+255),b
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;MOTEapp.c: 880: if (!randomPortNum)
  7815  00707A  5197               	movf	_randomPortNum& (0+255),w,b
  7816  00707C  E103               	bnz	l11620
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;MOTEapp.c: 881: randomPortNum = 5;
  7820  00707E  0E05               	movlw	5
  7821  007080  6F97               	movwf	_randomPortNum& (0+255),b
  7822  007082  D005               	goto	l11624
  7823  007084                     l11620:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;MOTEapp.c: 882: else if (randomPortNum > 223)
  7827  007084  0EDF               	movlw	223
  7828  007086  6597               	cpfsgt	_randomPortNum& (0+255),b
  7829  007088  D002               	goto	l11624
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;MOTEapp.c: 883: randomPortNum = randomPortNum - 50;
  7833  00708A  0ECE               	movlw	206
  7834  00708C  2797               	addwf	_randomPortNum& (0+255),f,b
  7835  00708E                     l11624:
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;MOTEapp.c: 884: oled_putUint8(randomPortNum,12,1);
  7839  00708E  0E0C               	movlw	12
  7840  007090  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  7841  007092  0E01               	movlw	1
  7842  007094  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  7843  007096  5197               	movf	_randomPortNum& (0+255),w,b
  7844  007098  EC78  F01F         	call	_oled_putUint8
  7845                           
  7846                           ;MOTEapp.c: 886: moteApp_add8bToDataBuffer(randomPortNum, 0);
  7847  00709C  0100               	movlb	0	; () banked
  7848  00709E  6BCC               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7849  0070A0  5197               	movf	_randomPortNum& (0+255),w,b
  7850  0070A2  EC03  F020         	call	_moteApp_add8bToDataBuffer
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;MOTEapp.c: 887: dataBuffer[3] = 0x20;
  7854  0070A6  0E20               	movlw	32
  7855  0070A8  6FA1               	movwf	(_dataBuffer+3)& (0+255),b
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;MOTEapp.c: 888: moteApp_add16bToDataBuffer(light, 4);
  7859  0070AA  C07A  F0CF         	movff	_light,moteApp_add16bToDataBuffer@number
  7860  0070AE  C07B  F0D0         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  7861  0070B2  0E04               	movlw	4
  7862  0070B4  6FD1               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  7863  0070B6  ECDC  F02C         	call	_moteApp_add16bToDataBuffer	;wreg free
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;MOTEapp.c: 889: moteApp_add8bToDataBuffer(temperature, 9);
  7867  0070BA  0E09               	movlw	9
  7868  0070BC  6FCC               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7869  0070BE  517E               	movf	_temperature& (0+255),w,b
  7870  0070C0  EC03  F020         	call	_moteApp_add8bToDataBuffer
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;MOTEapp.c: 890: __nop();
  7874  0070C4  F000               	nop	
  7875                           
  7876                           ;MOTEapp.c: 892: runningState = runningUplinkSelect;
  7877  0070C6  0E07               	movlw	7
  7878  0070C8  0100               	movlb	0	; () banked
  7879  0070CA  6F98               	movwf	_runningState& (0+255),b
  7880  0070CC  0C07               	retlw	7
  7881  0070CE                     l11638:
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;MOTEapp.c: 896: if (changeStates)
  7885  0070CE  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7886  0070D0  E00A               	bz	l11642
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;MOTEapp.c: 897: {
  7890                           ;MOTEapp.c: 898: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7891  0070D2  0E3C               	movlw	low STR_79
  7892  0070D4  6FC9               	movwf	sendDataCommand@string& (0+255),b
  7893  0070D6  0E7D               	movlw	high STR_79
  7894  0070D8  6FCA               	movwf	(sendDataCommand@string+1)& (0+255),b
  7895  0070DA  0E9E               	movlw	low _dataBuffer
  7896  0070DC  6FCB               	movwf	sendDataCommand@appData& (0+255),b
  7897  0070DE  0E0C               	movlw	12
  7898  0070E0  6FCC               	movwf	sendDataCommand@dataLength& (0+255),b
  7899  0070E2  ECC6  F023         	call	_sendDataCommand	;wreg free
  7900  0070E6                     l11642:
  7901                           
  7902                           ;MOTEapp.c: 900: }
  7903                           ;MOTEapp.c: 901: if (selectButton)
  7904  0070E6  0100               	movlb	0	; () banked
  7905  0070E8  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7906  0070EA  E00A               	bz	l11646
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;MOTEapp.c: 902: {
  7910                           ;MOTEapp.c: 903: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7911  0070EC  0E67               	movlw	low STR_77
  7912  0070EE  6FC9               	movwf	sendDataCommand@string& (0+255),b
  7913  0070F0  0E7E               	movlw	high STR_77
  7914  0070F2  6FCA               	movwf	(sendDataCommand@string+1)& (0+255),b
  7915  0070F4  0E9E               	movlw	low _dataBuffer
  7916  0070F6  6FCB               	movwf	sendDataCommand@appData& (0+255),b
  7917  0070F8  0E0C               	movlw	12
  7918  0070FA  6FCC               	movwf	sendDataCommand@dataLength& (0+255),b
  7919  0070FC  ECC6  F023         	call	_sendDataCommand	;wreg free
  7920  007100                     l11646:
  7921                           
  7922                           ;MOTEapp.c: 904: }
  7923                           ;MOTEapp.c: 906: if ( (changeStates) || (selectButton) )
  7924  007100  0100               	movlb	0	; () banked
  7925  007102  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7926  007104  E103               	bnz	l11650
  7927                           
  7928                           ; BSR set to: 0
  7929  007106  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7930  007108  B4D8               	btfsc	status,2,c
  7931  00710A  0012               	return	
  7932  00710C                     l11650:
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;MOTEapp.c: 907: {
  7936                           ;MOTEapp.c: 908: oled_clear();
  7937  00710C  ECF9  F01A         	call	_oled_clear	;wreg free
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;MOTEapp.c: 909: oled_putString("Sent Data: ",0,0);
  7941  007110  0E5B               	movlw	low STR_208
  7942  007112  6FD5               	movwf	oled_putString@string& (0+255),b
  7943  007114  0E7E               	movlw	high STR_208
  7944  007116  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7945  007118  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7946  00711A  6BD8               	clrf	oled_putString@start_page& (0+255),b
  7947  00711C  EC65  F020         	call	_oled_putString	;wreg free
  7948                           
  7949                           ;MOTEapp.c: 910: oled_putString("L:       T: ",0,1);
  7950  007120  0E81               	movlw	low STR_74
  7951  007122  0100               	movlb	0	; () banked
  7952  007124  6FD5               	movwf	oled_putString@string& (0+255),b
  7953  007126  0E7D               	movlw	high STR_74
  7954  007128  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7955  00712A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7956  00712C  0E01               	movlw	1
  7957  00712E  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7958  007130  EC65  F020         	call	_oled_putString	;wreg free
  7959                           
  7960                           ;MOTEapp.c: 911: oled_putUint16(light,3,2);
  7961  007134  C07A  F0DA         	movff	_light,oled_putUint16@number
  7962  007138  C07B  F0DB         	movff	_light+1,oled_putUint16@number+1
  7963  00713C  0E03               	movlw	3
  7964  00713E  0100               	movlb	0	; () banked
  7965  007140  6FDC               	movwf	oled_putUint16@station_dot& (0+255),b
  7966  007142  0E02               	movlw	2
  7967  007144  6FDD               	movwf	oled_putUint16@start_page& (0+255),b
  7968  007146  ECE2  F02A         	call	_oled_putUint16	;wreg free
  7969                           
  7970                           ;MOTEapp.c: 912: oled_putUint8(temperature,12,2);
  7971  00714A  0E0C               	movlw	12
  7972  00714C  0100               	movlb	0	; () banked
  7973  00714E  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  7974  007150  0E02               	movlw	2
  7975  007152  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  7976  007154  517E               	movf	_temperature& (0+255),w,b
  7977  007156  EC78  F01F         	call	_oled_putUint8
  7978                           
  7979                           ;MOTEapp.c: 913: oled_putString("Tx Port #: ",0,1);
  7980  00715A  0E4F               	movlw	low STR_210
  7981  00715C  0100               	movlb	0	; () banked
  7982  00715E  6FD5               	movwf	oled_putString@string& (0+255),b
  7983  007160  0E7E               	movlw	high STR_210
  7984  007162  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  7985  007164  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  7986  007166  0E01               	movlw	1
  7987  007168  6FD8               	movwf	oled_putString@start_page& (0+255),b
  7988  00716A  EC65  F020         	call	_oled_putString	;wreg free
  7989                           
  7990                           ;MOTEapp.c: 914: oled_putUint8(randomPortNum,12,1);
  7991  00716E  0E0C               	movlw	12
  7992  007170  0100               	movlb	0	; () banked
  7993  007172  6FDA               	movwf	oled_putUint8@station_dot& (0+255),b
  7994  007174  0E01               	movlw	1
  7995  007176  6FDB               	movwf	oled_putUint8@start_page& (0+255),b
  7996  007178  5197               	movf	_randomPortNum& (0+255),w,b
  7997  00717A  EC78  F01F         	call	_oled_putUint8
  7998                           
  7999                           ;MOTEapp.c: 915: LATAbits.LATA6 = 0;
  8000  00717E  9C89               	bcf	3977,6,c	;volatile
  8001                           
  8002                           ;MOTEapp.c: 916: runningState = runningUplinkTransmit;
  8003  007180  0E08               	movlw	8
  8004  007182  0100               	movlb	0	; () banked
  8005  007184  6F98               	movwf	_runningState& (0+255),b
  8006  007186  0C08               	retlw	8
  8007  007188                     l11668:
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;MOTEapp.c: 920: if ( messageReady )
  8011  007188  51E5               	movf	moteRunningProcess@messageReady& (0+255),w,b
  8012  00718A  E101 D0FF          	bz	l11754
  8013                           
  8014                           ; BSR set to: 0
  8015                           ;MOTEapp.c: 921: {
  8016                           ;MOTEapp.c: 922: if(strcmp(modemResonseBuffer, "ok") == 0)
  8017  00718E  0E80               	movlw	low _modemResonseBuffer
  8018  007190  6FC8               	movwf	strcmp@s1& (0+255),b
  8019  007192  0E01               	movlw	high _modemResonseBuffer
  8020  007194  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
  8021  007196  0EF2               	movlw	low STR_32
  8022  007198  6FCA               	movwf	strcmp@s2& (0+255),b
  8023  00719A  0E7F               	movlw	high STR_32
  8024  00719C  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
  8025  00719E  EC6D  F022         	call	_strcmp	;wreg free
  8026  0071A2  51C8               	movf	?_strcmp& (0+255),w,b
  8027  0071A4  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
  8028  0071A6  E103               	bnz	l11676
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;MOTEapp.c: 923: {
  8032                           ;MOTEapp.c: 924: LATAbits.LATA6 = 1;
  8033  0071A8  8C89               	bsf	3977,6,c	;volatile
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;MOTEapp.c: 925: runningState = runningUplinkTransmit;
  8037  0071AA  0E08               	movlw	8
  8038  0071AC  6F98               	movwf	_runningState& (0+255),b
  8039  0071AE                     l11676:
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;MOTEapp.c: 926: }
  8043                           ;MOTEapp.c: 927: if(strncmp(modemResonseBuffer, "mac_rx", 6) == 0)
  8044  0071AE  0E80               	movlw	low _modemResonseBuffer
  8045  0071B0  6FC8               	movwf	strncmp@s1& (0+255),b
  8046  0071B2  0E01               	movlw	high _modemResonseBuffer
  8047  0071B4  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
  8048  0071B6  0EE1               	movlw	low STR_212
  8049  0071B8  6FCA               	movwf	strncmp@s2& (0+255),b
  8050  0071BA  0E7F               	movlw	high STR_212
  8051  0071BC  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
  8052  0071BE  6BCD               	clrf	(strncmp@len+1)& (0+255),b
  8053  0071C0  0E06               	movlw	6
  8054  0071C2  6FCC               	movwf	strncmp@len& (0+255),b
  8055  0071C4  EC98  F020         	call	_strncmp	;wreg free
  8056  0071C8  51C8               	movf	?_strncmp& (0+255),w,b
  8057  0071CA  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
  8058  0071CC  E001 D08A          	bnz	l11738
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;MOTEapp.c: 928: {
  8062                           ;MOTEapp.c: 929: uint8_t bufferReadPos = 7;
  8063  0071D0  0E07               	movlw	7
  8064  0071D2  6FF1               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;MOTEapp.c: 930: uint8_t dummyRead1;
  8068                           ;MOTEapp.c: 931: uint8_t dummyRead2;
  8069                           ;MOTEapp.c: 934: responsePortNum[0] = modemResonseBuffer[bufferReadPos++];
  8070  0071D4  0E80               	movlw	low _modemResonseBuffer
  8071  0071D6  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8072  0071D8  6ED9               	movwf	fsr2l,c
  8073  0071DA  6ADA               	clrf	fsr2h,c
  8074  0071DC  0E01               	movlw	high _modemResonseBuffer
  8075  0071DE  22DA               	addwfc	fsr2h,f,c
  8076  0071E0  50DF               	movf	indf2,w,c
  8077  0071E2  6FC3               	movwf	_responsePortNum& (0+255),b
  8078                           
  8079                           ; BSR set to: 0
  8080  0071E4  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;MOTEapp.c: 935: responsePortNum[1] = modemResonseBuffer[bufferReadPos++];
  8084  0071E6  0E80               	movlw	low _modemResonseBuffer
  8085  0071E8  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8086  0071EA  6ED9               	movwf	fsr2l,c
  8087  0071EC  6ADA               	clrf	fsr2h,c
  8088  0071EE  0E01               	movlw	high _modemResonseBuffer
  8089  0071F0  22DA               	addwfc	fsr2h,f,c
  8090  0071F2  50DF               	movf	indf2,w,c
  8091  0071F4  6FC4               	movwf	(_responsePortNum+1)& (0+255),b
  8092                           
  8093                           ; BSR set to: 0
  8094  0071F6  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;MOTEapp.c: 936: if (responsePortNum[1] != ' ')
  8098  0071F8  0E20               	movlw	32
  8099  0071FA  19C4               	xorwf	(_responsePortNum+1)& (0+255),w,b
  8100  0071FC  E00D               	bz	l11698
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;MOTEapp.c: 937: {
  8104                           ;MOTEapp.c: 938: responsePortNum[2] = modemResonseBuffer[bufferReadPos++];
  8105  0071FE  0E80               	movlw	low _modemResonseBuffer
  8106  007200  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8107  007202  6ED9               	movwf	fsr2l,c
  8108  007204  6ADA               	clrf	fsr2h,c
  8109  007206  0E01               	movlw	high _modemResonseBuffer
  8110  007208  22DA               	addwfc	fsr2h,f,c
  8111  00720A  50DF               	movf	indf2,w,c
  8112  00720C  6FC5               	movwf	(_responsePortNum+2)& (0+255),b
  8113                           
  8114                           ; BSR set to: 0
  8115  00720E  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8116                           
  8117                           ; BSR set to: 0
  8118                           ;MOTEapp.c: 939: if (responsePortNum[2] != ' ')
  8119  007210  0E20               	movlw	32
  8120  007212  19C5               	xorwf	(_responsePortNum+2)& (0+255),w,b
  8121  007214  E001               	bz	l11698
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;MOTEapp.c: 940: {
  8125                           ;MOTEapp.c: 941: bufferReadPos++;
  8126  007216  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8127  007218                     l11698:
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;MOTEapp.c: 942: }
  8131                           ;MOTEapp.c: 943: }
  8132                           ;MOTEapp.c: 945: for (uint8_t counter = 0; counter < 16; counter++)
  8133  007218  6BEF               	clrf	moteRunningProcess@counter& (0+255),b
  8134  00721A                     l11700:
  8135                           
  8136                           ; BSR set to: 0
  8137  00721A  0E0F               	movlw	15
  8138  00721C  65EF               	cpfsgt	moteRunningProcess@counter& (0+255),b
  8139  00721E  D001               	goto	l11704
  8140  007220  D023               	goto	l11716
  8141  007222                     l11704:
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;MOTEapp.c: 946: {
  8145                           ;MOTEapp.c: 947: dummyRead1 = unhex(modemResonseBuffer[bufferReadPos++]);
  8146  007222  0E80               	movlw	low _modemResonseBuffer
  8147  007224  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8148  007226  6ED9               	movwf	fsr2l,c
  8149  007228  6ADA               	clrf	fsr2h,c
  8150  00722A  0E01               	movlw	high _modemResonseBuffer
  8151  00722C  22DA               	addwfc	fsr2h,f,c
  8152  00722E  50DF               	movf	indf2,w,c
  8153  007230  ECF4  F01B         	call	_unhex
  8154  007234  6FED               	movwf	moteRunningProcess@dummyRead1& (0+255),b
  8155                           
  8156                           ; BSR set to: 0
  8157  007236  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;MOTEapp.c: 948: dummyRead2 = unhex(modemResonseBuffer[bufferReadPos++]);
  8161  007238  0E80               	movlw	low _modemResonseBuffer
  8162  00723A  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8163  00723C  6ED9               	movwf	fsr2l,c
  8164  00723E  6ADA               	clrf	fsr2h,c
  8165  007240  0E01               	movlw	high _modemResonseBuffer
  8166  007242  22DA               	addwfc	fsr2h,f,c
  8167  007244  50DF               	movf	indf2,w,c
  8168  007246  ECF4  F01B         	call	_unhex
  8169  00724A  6FEE               	movwf	moteRunningProcess@dummyRead2& (0+255),b
  8170  00724C  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;MOTEapp.c: 949: responseId[counter] = (dummyRead1 << 4) + dummyRead2;
  8174  00724E  0EC0               	movlw	low _responseId
  8175  007250  25EF               	addwf	moteRunningProcess@counter& (0+255),w,b
  8176  007252  6ED9               	movwf	fsr2l,c
  8177  007254  6ADA               	clrf	fsr2h,c
  8178  007256  0E01               	movlw	high _responseId
  8179  007258  22DA               	addwfc	fsr2h,f,c
  8180  00725A  51ED               	movf	moteRunningProcess@dummyRead1& (0+255),w,b
  8181  00725C  0D10               	mullw	16
  8182  00725E  50F3               	movf	prodl,w,c
  8183  007260  25EE               	addwf	moteRunningProcess@dummyRead2& (0+255),w,b
  8184  007262  6EDF               	movwf	indf2,c
  8185                           
  8186                           ; BSR set to: 0
  8187  007264  2BEF               	incf	moteRunningProcess@counter& (0+255),f,b
  8188  007266  D7D9               	goto	l11700
  8189  007268                     l11716:
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;MOTEapp.c: 950: }
  8193                           ;MOTEapp.c: 952: bufferReadPos++;
  8194  007268  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8195                           
  8196                           ;MOTEapp.c: 953: bufferReadPos++;
  8197  00726A  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;MOTEapp.c: 956: for (uint8_t counter = 0; counter < 8; counter++)
  8201  00726C  6BF0               	clrf	moteRunningProcess@counter_1556& (0+255),b
  8202  00726E                     l11720:
  8203                           
  8204                           ; BSR set to: 0
  8205  00726E  0E07               	movlw	7
  8206  007270  65F0               	cpfsgt	moteRunningProcess@counter_1556& (0+255),b
  8207  007272  D001               	goto	l11724
  8208  007274  D021               	goto	l583
  8209  007276                     l11724:
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;MOTEapp.c: 957: {
  8213                           ;MOTEapp.c: 958: dummyRead1 = unhex(modemResonseBuffer[bufferReadPos++]);
  8214  007276  0E80               	movlw	low _modemResonseBuffer
  8215  007278  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8216  00727A  6ED9               	movwf	fsr2l,c
  8217  00727C  6ADA               	clrf	fsr2h,c
  8218  00727E  0E01               	movlw	high _modemResonseBuffer
  8219  007280  22DA               	addwfc	fsr2h,f,c
  8220  007282  50DF               	movf	indf2,w,c
  8221  007284  ECF4  F01B         	call	_unhex
  8222  007288  6FED               	movwf	moteRunningProcess@dummyRead1& (0+255),b
  8223                           
  8224                           ; BSR set to: 0
  8225  00728A  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;MOTEapp.c: 959: dummyRead2 = unhex(modemResonseBuffer[bufferReadPos++]);
  8229  00728C  0E80               	movlw	low _modemResonseBuffer
  8230  00728E  25F1               	addwf	moteRunningProcess@bufferReadPos& (0+255),w,b
  8231  007290  6ED9               	movwf	fsr2l,c
  8232  007292  6ADA               	clrf	fsr2h,c
  8233  007294  0E01               	movlw	high _modemResonseBuffer
  8234  007296  22DA               	addwfc	fsr2h,f,c
  8235  007298  50DF               	movf	indf2,w,c
  8236  00729A  ECF4  F01B         	call	_unhex
  8237  00729E  6FEE               	movwf	moteRunningProcess@dummyRead2& (0+255),b
  8238  0072A0  2BF1               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  8239                           
  8240                           ; BSR set to: 0
  8241                           ;MOTEapp.c: 960: responseData[counter] = (dummyRead1 << 4) + dummyRead2;
  8242  0072A2  51F0               	movf	moteRunningProcess@counter_1556& (0+255),w,b
  8243  0072A4  0FB4               	addlw	low _responseData
  8244  0072A6  6ED9               	movwf	fsr2l,c
  8245  0072A8  6ADA               	clrf	fsr2h,c
  8246  0072AA  51ED               	movf	moteRunningProcess@dummyRead1& (0+255),w,b
  8247  0072AC  0D10               	mullw	16
  8248  0072AE  50F3               	movf	prodl,w,c
  8249  0072B0  25EE               	addwf	moteRunningProcess@dummyRead2& (0+255),w,b
  8250  0072B2  6EDF               	movwf	indf2,c
  8251                           
  8252                           ; BSR set to: 0
  8253  0072B4  2BF0               	incf	moteRunningProcess@counter_1556& (0+255),f,b
  8254  0072B6  D7DB               	goto	l11720
  8255  0072B8                     l583:
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;MOTEapp.c: 961: }
  8259                           ;MOTEapp.c: 963: LATAbits.LATA7 = 1;
  8260  0072B8  8E89               	bsf	3977,7,c	;volatile
  8261                           
  8262                           ;MOTEapp.c: 964: LATAbits.LATA6 = 0;
  8263  0072BA  9C89               	bcf	3977,6,c	;volatile
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;MOTEapp.c: 966: oled_putString("Server Response ",0,2);
  8267  0072BC  0E21               	movlw	low STR_213
  8268  0072BE  6FD5               	movwf	oled_putString@string& (0+255),b
  8269  0072C0  0E7B               	movlw	high STR_213
  8270  0072C2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8271  0072C4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8272  0072C6  0E02               	movlw	2
  8273  0072C8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8274  0072CA  EC65  F020         	call	_oled_putString	;wreg free
  8275                           
  8276                           ;MOTEapp.c: 967: oled_putString("    Received    ",0,3);
  8277  0072CE  0EAA               	movlw	low STR_214
  8278  0072D0  0100               	movlb	0	; () banked
  8279  0072D2  6FD5               	movwf	oled_putString@string& (0+255),b
  8280  0072D4  0E7A               	movlw	high STR_214
  8281  0072D6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8282  0072D8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8283  0072DA  0E03               	movlw	3
  8284  0072DC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8285  0072DE  EC65  F020         	call	_oled_putString	;wreg free
  8286                           
  8287                           ;MOTEapp.c: 968: }
  8288  0072E2  D04E               	goto	l11752
  8289  0072E4                     l11738:
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;MOTEapp.c: 969: else if(strncmp(modemResonseBuffer, "mac_tx", 6) == 0)
  8293  0072E4  0E80               	movlw	low _modemResonseBuffer
  8294  0072E6  6FC8               	movwf	strncmp@s1& (0+255),b
  8295  0072E8  0E01               	movlw	high _modemResonseBuffer
  8296  0072EA  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
  8297  0072EC  0EE8               	movlw	low STR_215
  8298  0072EE  6FCA               	movwf	strncmp@s2& (0+255),b
  8299  0072F0  0E7F               	movlw	high STR_215
  8300  0072F2  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
  8301  0072F4  6BCD               	clrf	(strncmp@len+1)& (0+255),b
  8302  0072F6  0E06               	movlw	6
  8303  0072F8  6FCC               	movwf	strncmp@len& (0+255),b
  8304  0072FA  EC98  F020         	call	_strncmp	;wreg free
  8305  0072FE  51C8               	movf	?_strncmp& (0+255),w,b
  8306  007300  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
  8307  007302  E10B               	bnz	l11744
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;MOTEapp.c: 970: {
  8311                           ;MOTEapp.c: 971: LATAbits.LATA6 = 0;
  8312  007304  9C89               	bcf	3977,6,c	;volatile
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;MOTEapp.c: 972: oled_putString("Data Transmitted",0,3);
  8316  007306  0E76               	movlw	low STR_216
  8317  007308  6FD5               	movwf	oled_putString@string& (0+255),b
  8318  00730A  0E7B               	movlw	high STR_216
  8319  00730C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8320  00730E  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8321  007310  0E03               	movlw	3
  8322  007312  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8323  007314  EC65  F020         	call	_oled_putString	;wreg free
  8324                           
  8325                           ;MOTEapp.c: 973: }
  8326  007318  D033               	goto	l11752
  8327  00731A                     l11744:
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;MOTEapp.c: 974: else if(strncmp(modemResonseBuffer, "mac_er", 6) == 0)
  8331  00731A  0E80               	movlw	low _modemResonseBuffer
  8332  00731C  6FC8               	movwf	strncmp@s1& (0+255),b
  8333  00731E  0E01               	movlw	high _modemResonseBuffer
  8334  007320  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
  8335  007322  0EDA               	movlw	low STR_217
  8336  007324  6FCA               	movwf	strncmp@s2& (0+255),b
  8337  007326  0E7F               	movlw	high STR_217
  8338  007328  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
  8339  00732A  6BCD               	clrf	(strncmp@len+1)& (0+255),b
  8340  00732C  0E06               	movlw	6
  8341  00732E  6FCC               	movwf	strncmp@len& (0+255),b
  8342  007330  EC98  F020         	call	_strncmp	;wreg free
  8343  007334  51C8               	movf	?_strncmp& (0+255),w,b
  8344  007336  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
  8345  007338  E10A               	bnz	l11748
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;MOTEapp.c: 975: {
  8349                           ;MOTEapp.c: 976: oled_putString("Mac Error Occured",0,3);
  8350  00733A  0E98               	movlw	low STR_218
  8351  00733C  6FD5               	movwf	oled_putString@string& (0+255),b
  8352  00733E  0E7A               	movlw	high STR_218
  8353  007340  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8354  007342  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8355  007344  0E03               	movlw	3
  8356  007346  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8357  007348  EC65  F020         	call	_oled_putString	;wreg free
  8358                           
  8359                           ;MOTEapp.c: 977: }
  8360  00734C  D019               	goto	l11752
  8361  00734E                     l11748:
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;MOTEapp.c: 978: else if(strncmp(modemResonseBuffer, "no_fre", 6) == 0)
  8365  00734E  0E80               	movlw	low _modemResonseBuffer
  8366  007350  6FC8               	movwf	strncmp@s1& (0+255),b
  8367  007352  0E01               	movlw	high _modemResonseBuffer
  8368  007354  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
  8369  007356  0ED3               	movlw	low STR_219
  8370  007358  6FCA               	movwf	strncmp@s2& (0+255),b
  8371  00735A  0E7F               	movlw	high STR_219
  8372  00735C  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
  8373  00735E  6BCD               	clrf	(strncmp@len+1)& (0+255),b
  8374  007360  0E06               	movlw	6
  8375  007362  6FCC               	movwf	strncmp@len& (0+255),b
  8376  007364  EC98  F020         	call	_strncmp	;wreg free
  8377  007368  51C8               	movf	?_strncmp& (0+255),w,b
  8378  00736A  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
  8379  00736C  E109               	bnz	l11752
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;MOTEapp.c: 979: {
  8383                           ;MOTEapp.c: 980: oled_putString("No Free Channel",0,3);
  8384  00736E  0E2C               	movlw	low STR_220
  8385  007370  6FD5               	movwf	oled_putString@string& (0+255),b
  8386  007372  0E7C               	movlw	high STR_220
  8387  007374  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8388  007376  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8389  007378  0E03               	movlw	3
  8390  00737A  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8391  00737C  EC65  F020         	call	_oled_putString	;wreg free
  8392  007380                     l11752:
  8393                           
  8394                           ;MOTEapp.c: 981: }
  8395                           ;MOTEapp.c: 982: moteApp_delayms(20);
  8396  007380  0100               	movlb	0	; () banked
  8397  007382  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8398  007384  0E14               	movlw	20
  8399  007386  6FC8               	movwf	moteApp_delayms@length& (0+255),b
  8400  007388  ECCC  F01B         	call	_moteApp_delayms	;wreg free
  8401  00738C                     l11754:
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;MOTEapp.c: 983: }
  8405                           ;MOTEapp.c: 984: if ( (changeStates) || (selectButton) )
  8406  00738C  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8407  00738E  E103               	bnz	l11758
  8408                           
  8409                           ; BSR set to: 0
  8410  007390  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8411  007392  B4D8               	btfsc	status,2,c
  8412  007394  0012               	return	
  8413  007396                     l11758:
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;MOTEapp.c: 985: {
  8417                           ;MOTEapp.c: 986: oled_clear();
  8418  007396  ECF9  F01A         	call	_oled_clear	;wreg free
  8419                           
  8420                           ; BSR set to: 0
  8421                           ;MOTEapp.c: 987: oled_putString("  Issue Uplink  ",0,0);
  8422  00739A  0EFF               	movlw	low STR_93
  8423  00739C  6FD5               	movwf	oled_putString@string& (0+255),b
  8424  00739E  0E7A               	movlw	high STR_93
  8425  0073A0  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8426  0073A2  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8427  0073A4  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8428  0073A6  EC65  F020         	call	_oled_putString	;wreg free
  8429                           
  8430                           ;MOTEapp.c: 988: oled_putString(" LoRaWAN Packet ",0,1);
  8431  0073AA  0E32               	movlw	low STR_94
  8432  0073AC  0100               	movlb	0	; () banked
  8433  0073AE  6FD5               	movwf	oled_putString@string& (0+255),b
  8434  0073B0  0E7B               	movlw	high STR_94
  8435  0073B2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8436  0073B4  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8437  0073B6  0E01               	movlw	1
  8438  0073B8  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8439  0073BA  EC65  F020         	call	_oled_putString	;wreg free
  8440                           
  8441                           ;MOTEapp.c: 989: oled_putString("(NAV)    (SEL) ",0,3);
  8442  0073BE  0EFC               	movlw	low STR_75
  8443  0073C0  0100               	movlb	0	; () banked
  8444  0073C2  6FD5               	movwf	oled_putString@string& (0+255),b
  8445  0073C4  0E7B               	movlw	high STR_75
  8446  0073C6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8447  0073C8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8448  0073CA  0E03               	movlw	3
  8449  0073CC  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8450  0073CE  EC65  F020         	call	_oled_putString	;wreg free
  8451  0073D2  EF41  F034         	goto	l11240
  8452  0073D6                     l11768:
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;MOTEapp.c: 994: if (changeStates)
  8456  0073D6  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8457  0073D8  E02E               	bz	l11782
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;MOTEapp.c: 995: {
  8461                           ;MOTEapp.c: 996: oled_clear();
  8462  0073DA  ECF9  F01A         	call	_oled_clear	;wreg free
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;MOTEapp.c: 997: oled_putString(" Tx Sleep Event ",0,0);
  8466  0073DE  0E43               	movlw	low STR_224
  8467  0073E0  6FD5               	movwf	oled_putString@string& (0+255),b
  8468  0073E2  0E7B               	movlw	high STR_224
  8469  0073E4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8470  0073E6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8471  0073E8  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8472  0073EA  EC65  F020         	call	_oled_putString	;wreg free
  8473                           
  8474                           ;MOTEapp.c: 998: if (periodicState)
  8475  0073EE  0100               	movlb	0	; () banked
  8476  0073F0  51F9               	movf	_periodicState& (0+255),w,b
  8477  0073F2  E00A               	bz	l11778
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;MOTEapp.c: 999: oled_putString("    Enabled   ", 0,2);
  8481  0073F4  0E5B               	movlw	low STR_225
  8482  0073F6  6FD5               	movwf	oled_putString@string& (0+255),b
  8483  0073F8  0E7C               	movlw	high STR_225
  8484  0073FA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8485  0073FC  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8486  0073FE  0E02               	movlw	2
  8487  007400  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8488  007402  EC65  F020         	call	_oled_putString	;wreg free
  8489  007406  D009               	goto	l596
  8490  007408                     l11778:
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;MOTEapp.c: 1000: else
  8494                           ;MOTEapp.c: 1001: oled_putString("    Disabled  ", 0,2);
  8495  007408  0E6A               	movlw	low STR_226
  8496  00740A  6FD5               	movwf	oled_putString@string& (0+255),b
  8497  00740C  0E7C               	movlw	high STR_226
  8498  00740E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8499  007410  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8500  007412  0E02               	movlw	2
  8501  007414  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8502  007416  EC65  F020         	call	_oled_putString	;wreg free
  8503  00741A                     l596:
  8504                           
  8505                           ;MOTEapp.c: 1002: oled_putString("(NAV)    (SEL) ",0,3);
  8506  00741A  0EFC               	movlw	low STR_75
  8507  00741C  0100               	movlb	0	; () banked
  8508  00741E  6FD5               	movwf	oled_putString@string& (0+255),b
  8509  007420  0E7B               	movlw	high STR_75
  8510  007422  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8511  007424  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8512  007426  0E03               	movlw	3
  8513  007428  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8514  00742A  EC65  F020         	call	_oled_putString	;wreg free
  8515                           
  8516                           ;MOTEapp.c: 1003: runningState = runningPeriodic;
  8517  00742E  0E0C               	movlw	12
  8518  007430  0100               	movlb	0	; () banked
  8519  007432  6F98               	movwf	_runningState& (0+255),b
  8520                           
  8521                           ;MOTEapp.c: 1004: }
  8522  007434  0C0C               	retlw	12
  8523  007436                     l11782:
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;MOTEapp.c: 1005: else if (selectButton)
  8527  007436  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8528  007438  B4D8               	btfsc	status,2,c
  8529  00743A  0012               	return	
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;MOTEapp.c: 1006: {
  8533                           ;MOTEapp.c: 1007: oled_clear();
  8534  00743C  ECF9  F01A         	call	_oled_clear	;wreg free
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;MOTEapp.c: 1009: LATAbits.LATA7 = 0;
  8538  007440  9E89               	bcf	3977,7,c	;volatile
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;MOTEapp.c: 1011: oled_putString("Downlink Display",0,0);
  8542  007442  0ECB               	movlw	low STR_228
  8543  007444  6FD5               	movwf	oled_putString@string& (0+255),b
  8544  007446  0E7B               	movlw	high STR_228
  8545  007448  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8546  00744A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8547  00744C  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8548  00744E  EC65  F020         	call	_oled_putString	;wreg free
  8549                           
  8550                           ;MOTEapp.c: 1013: oled_putString("Rx Port# ",0,1);
  8551  007452  0EF1               	movlw	low STR_229
  8552  007454  0100               	movlb	0	; () banked
  8553  007456  6FD5               	movwf	oled_putString@string& (0+255),b
  8554  007458  0E7E               	movlw	high STR_229
  8555  00745A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8556  00745C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8557  00745E  0E01               	movlw	1
  8558  007460  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8559  007462  EC65  F020         	call	_oled_putString	;wreg free
  8560                           
  8561                           ;MOTEapp.c: 1014: oled_putString(&responsePortNum,9,1);
  8562  007466  0EC3               	movlw	low _responsePortNum
  8563  007468  0100               	movlb	0	; () banked
  8564  00746A  6FD5               	movwf	oled_putString@string& (0+255),b
  8565  00746C  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  8566  00746E  0E09               	movlw	9
  8567  007470  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  8568  007472  0E01               	movlw	1
  8569  007474  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8570  007476  EC65  F020         	call	_oled_putString	;wreg free
  8571                           
  8572                           ;MOTEapp.c: 1016: oled_putString("Data: ",0,2);
  8573  00747A  0E60               	movlw	low (STR_208+5)
  8574  00747C  0100               	movlb	0	; () banked
  8575  00747E  6FD5               	movwf	oled_putString@string& (0+255),b
  8576  007480  0E7E               	movlw	high (STR_208+5)
  8577  007482  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8578  007484  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8579  007486  0E02               	movlw	2
  8580  007488  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8581  00748A  EC65  F020         	call	_oled_putString	;wreg free
  8582                           
  8583                           ;MOTEapp.c: 1017: oled_putString(&responseData[0],6,2);
  8584  00748E  0EB4               	movlw	low _responseData
  8585  007490  0100               	movlb	0	; () banked
  8586  007492  6FD5               	movwf	oled_putString@string& (0+255),b
  8587  007494  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  8588  007496  0E06               	movlw	6
  8589  007498  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  8590  00749A  0E02               	movlw	2
  8591  00749C  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8592  00749E  EC65  F020         	call	_oled_putString	;wreg free
  8593                           
  8594                           ;MOTEapp.c: 1018: oled_putString(" ",11,2);
  8595  0074A2  0E59               	movlw	low (STR_163+13)
  8596  0074A4  0100               	movlb	0	; () banked
  8597  0074A6  6FD5               	movwf	oled_putString@string& (0+255),b
  8598  0074A8  0E7C               	movlw	high (STR_163+13)
  8599  0074AA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8600  0074AC  0E0B               	movlw	11
  8601  0074AE  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  8602  0074B0  0E02               	movlw	2
  8603  0074B2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8604  0074B4  EC65  F020         	call	_oled_putString	;wreg free
  8605                           
  8606                           ;MOTEapp.c: 1019: oled_putString(&responseData[5],12,2);
  8607  0074B8  0EB9               	movlw	low (_responseData+5)
  8608  0074BA  0100               	movlb	0	; () banked
  8609  0074BC  6FD5               	movwf	oled_putString@string& (0+255),b
  8610  0074BE  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  8611  0074C0  0E0C               	movlw	12
  8612  0074C2  6FD7               	movwf	oled_putString@station_dot& (0+255),b
  8613  0074C4  0E02               	movlw	2
  8614  0074C6  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8615  0074C8  EC65  F020         	call	_oled_putString	;wreg free
  8616                           
  8617                           ;MOTEapp.c: 1021: oled_putString(&responseId[0],0,3);
  8618  0074CC  0EC0               	movlw	low _responseId
  8619  0074CE  0100               	movlb	0	; () banked
  8620  0074D0  6FD5               	movwf	oled_putString@string& (0+255),b
  8621  0074D2  0E01               	movlw	high _responseId
  8622  0074D4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8623  0074D6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8624  0074D8  0E03               	movlw	3
  8625  0074DA  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8626  0074DC  EC65  F020         	call	_oled_putString	;wreg free
  8627                           
  8628                           ;MOTEapp.c: 1023: runningState = runningDownlinkDisplay;
  8629  0074E0  0E0B               	movlw	11
  8630  0074E2  0100               	movlb	0	; () banked
  8631  0074E4  6F98               	movwf	_runningState& (0+255),b
  8632  0074E6  0C0B               	retlw	11
  8633  0074E8                     l11806:
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;MOTEapp.c: 1027: if ( (changeStates) || (selectButton) )
  8637  0074E8  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8638  0074EA  E103               	bnz	l11810
  8639                           
  8640                           ; BSR set to: 0
  8641  0074EC  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8642  0074EE  B4D8               	btfsc	status,2,c
  8643  0074F0  0012               	return	
  8644  0074F2                     l11810:
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;MOTEapp.c: 1028: {
  8648                           ;MOTEapp.c: 1029: oled_clear();
  8649  0074F2  ECF9  F01A         	call	_oled_clear	;wreg free
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;MOTEapp.c: 1030: oled_putString(" View Downlink  ",0,0);
  8653  0074F6  0EEE               	movlw	low STR_200
  8654  0074F8  6FD5               	movwf	oled_putString@string& (0+255),b
  8655  0074FA  0E7A               	movlw	high STR_200
  8656  0074FC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8657  0074FE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8658  007500  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8659  007502  EC65  F020         	call	_oled_putString	;wreg free
  8660                           
  8661                           ;MOTEapp.c: 1031: oled_putString("  Last Message  ",0,1);
  8662  007506  0EDD               	movlw	low STR_201
  8663  007508  0100               	movlb	0	; () banked
  8664  00750A  6FD5               	movwf	oled_putString@string& (0+255),b
  8665  00750C  0E7A               	movlw	high STR_201
  8666  00750E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8667  007510  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8668  007512  0E01               	movlw	1
  8669  007514  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8670  007516  EC65  F020         	call	_oled_putString	;wreg free
  8671                           
  8672                           ;MOTEapp.c: 1032: oled_putString("(NAV)    (SEL) ",0,3);
  8673  00751A  0EFC               	movlw	low STR_75
  8674  00751C  0100               	movlb	0	; () banked
  8675  00751E  6FD5               	movwf	oled_putString@string& (0+255),b
  8676  007520  0E7B               	movlw	high STR_75
  8677  007522  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8678  007524  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8679  007526  0E03               	movlw	3
  8680  007528  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8681  00752A  EC65  F020         	call	_oled_putString	;wreg free
  8682  00752E  D57A               	goto	l11598
  8683  007530                     l11820:
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;MOTEapp.c: 1037: if (changeStates)
  8687  007530  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8688  007532  E018               	bz	l11830
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;MOTEapp.c: 1038: {
  8692                           ;MOTEapp.c: 1039: oled_clear();
  8693  007534  ECF9  F01A         	call	_oled_clear	;wreg free
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;MOTEapp.c: 1040: oled_putString("Enter Sleep Mode",0,0);
  8697  007538  0E87               	movlw	low STR_235
  8698  00753A  6FD5               	movwf	oled_putString@string& (0+255),b
  8699  00753C  0E7B               	movlw	high STR_235
  8700  00753E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8701  007540  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8702  007542  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8703  007544  EC65  F020         	call	_oled_putString	;wreg free
  8704                           
  8705                           ;MOTEapp.c: 1041: oled_putString("(NAV)    (SLP) ",0,3);
  8706  007548  0E0C               	movlw	low STR_236
  8707  00754A  0100               	movlb	0	; () banked
  8708  00754C  6FD5               	movwf	oled_putString@string& (0+255),b
  8709  00754E  0E7C               	movlw	high STR_236
  8710  007550  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8711  007552  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8712  007554  0E03               	movlw	3
  8713  007556  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8714  007558  EC65  F020         	call	_oled_putString	;wreg free
  8715                           
  8716                           ;MOTEapp.c: 1042: runningState = runningSleep;
  8717  00755C  0E0E               	movlw	14
  8718  00755E  0100               	movlb	0	; () banked
  8719  007560  6F98               	movwf	_runningState& (0+255),b
  8720                           
  8721                           ;MOTEapp.c: 1043: }
  8722  007562  0C0E               	retlw	14
  8723  007564                     l11830:
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;MOTEapp.c: 1044: else if (selectButton)
  8727  007564  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8728  007566  B4D8               	btfsc	status,2,c
  8729  007568  0012               	return	
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;MOTEapp.c: 1045: {
  8733                           ;MOTEapp.c: 1046: if (periodicState)
  8734  00756A  51F9               	movf	_periodicState& (0+255),w,b
  8735  00756C  E008               	bz	l11838
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;MOTEapp.c: 1047: {
  8739                           ;MOTEapp.c: 1048: periodicState = 0;
  8740  00756E  6BF9               	clrf	_periodicState& (0+255),b
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;MOTEapp.c: 1049: oled_putString("    Disabled  ", 0,2);
  8744  007570  0E6A               	movlw	low STR_226
  8745  007572  6FD5               	movwf	oled_putString@string& (0+255),b
  8746  007574  0E7C               	movlw	high STR_226
  8747  007576  D008               	goto	L30
  8748  007578                     L29:
  8749  007578  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8750  00757A  EF65  F020         	goto	_oled_putString	;wreg free
  8751  00757E                     l11838:
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;MOTEapp.c: 1051: else
  8755                           ;MOTEapp.c: 1052: {
  8756                           ;MOTEapp.c: 1053: periodicState = 1;
  8757  00757E  0E01               	movlw	1
  8758  007580  6FF9               	movwf	_periodicState& (0+255),b
  8759                           
  8760                           ; BSR set to: 0
  8761                           ;MOTEapp.c: 1054: oled_putString("    Enabled   ", 0,2);
  8762  007582  0E5B               	movlw	low STR_225
  8763  007584  6FD5               	movwf	oled_putString@string& (0+255),b
  8764  007586  0E7C               	movlw	high STR_225
  8765  007588                     L30:
  8766  007588  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8767  00758A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8768  00758C  EF0E  F036         	goto	L35
  8769  007590                     l11842:
  8770                           
  8771                           ; BSR set to: 0
  8772                           ;MOTEapp.c: 1059: if (selectButton)
  8773  007590  51E4               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8774  007592  E009               	bz	l610
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;MOTEapp.c: 1060: {
  8778                           ;MOTEapp.c: 1061: if( moteApp_GoToSleep() )
  8779  007594  EC2C  F022         	call	_moteApp_GoToSleep	;wreg free
  8780  007598  0900               	iorlw	0
  8781  00759A  E003               	bz	l11848
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;MOTEapp.c: 1062: {
  8785                           ;MOTEapp.c: 1063: changeStates = 1;
  8786  00759C  0E01               	movlw	1
  8787  00759E  6FF2               	movwf	moteRunningProcess@changeStates& (0+255),b
  8788                           
  8789                           ;MOTEapp.c: 1064: }
  8790  0075A0  D002               	goto	l610
  8791  0075A2                     l11848:
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;MOTEapp.c: 1065: else
  8795                           ;MOTEapp.c: 1066: {
  8796                           ;MOTEapp.c: 1067: secTicker = 10 - 1;
  8797  0075A2  0E09               	movlw	9
  8798  0075A4  6F99               	movwf	_secTicker& (0+255),b
  8799  0075A6                     l610:
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;MOTEapp.c: 1068: }
  8803                           ;MOTEapp.c: 1069: }
  8804                           ;MOTEapp.c: 1070: if (changeStates)
  8805  0075A6  51F2               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8806  0075A8  B4D8               	btfsc	status,2,c
  8807  0075AA  0012               	return	
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;MOTEapp.c: 1071: {
  8811                           ;MOTEapp.c: 1072: oled_clear();
  8812  0075AC  ECF9  F01A         	call	_oled_clear	;wreg free
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;MOTEapp.c: 1073: oled_putString("  Sensor Data  ",0,0);
  8816  0075B0  0EEC               	movlw	low STR_80
  8817  0075B2  6FD5               	movwf	oled_putString@string& (0+255),b
  8818  0075B4  0E7B               	movlw	high STR_80
  8819  0075B6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8820  0075B8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8821  0075BA  6BD8               	clrf	oled_putString@start_page& (0+255),b
  8822  0075BC  EC65  F020         	call	_oled_putString	;wreg free
  8823                           
  8824                           ;MOTEapp.c: 1074: oled_putString("    Display    ",0,1);
  8825  0075C0  0EDC               	movlw	low STR_81
  8826  0075C2  0100               	movlb	0	; () banked
  8827  0075C4  6FD5               	movwf	oled_putString@string& (0+255),b
  8828  0075C6  0E7B               	movlw	high STR_81
  8829  0075C8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8830  0075CA  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8831  0075CC  0E01               	movlw	1
  8832  0075CE  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8833  0075D0  EC65  F020         	call	_oled_putString	;wreg free
  8834                           
  8835                           ;MOTEapp.c: 1075: oled_putString("(NAV)    (SEL) ",0,3);
  8836  0075D4  0EFC               	movlw	low STR_75
  8837  0075D6  0100               	movlb	0	; () banked
  8838  0075D8  6FD5               	movwf	oled_putString@string& (0+255),b
  8839  0075DA  0E7B               	movlw	high STR_75
  8840  0075DC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
  8841  0075DE  6BD7               	clrf	oled_putString@station_dot& (0+255),b
  8842  0075E0  0E03               	movlw	3
  8843  0075E2  6FD8               	movwf	oled_putString@start_page& (0+255),b
  8844  0075E4  EC65  F020         	call	_oled_putString	;wreg free
  8845  0075E8  EF76  F033         	goto	l11182
  8846  0075EC                     l11862:
  8847                           
  8848                           ; BSR set to: 0
  8849  0075EC  5198               	movf	_runningState& (0+255),w,b
  8850                           
  8851                           ; Switch size 1, requested type "speed"
  8852                           ; Number of cases is 12, Range of values is 0 to 14
  8853                           ; switch strategies available:
  8854                           ; Name         Instructions Cycles
  8855                           ; simple_byte           37    19 (average)
  8856                           ;	Chosen strategy is simple_byte
  8857  0075EE  E102 EF53  F033    	bz	l11170
  8858  0075F4  0A01               	xorlw	1	; case 1
  8859  0075F6  E102 EF7A  F033    	bz	l11184
  8860  0075FC  0A03               	xorlw	3	; case 2
  8861  0075FE  E102 EFE7  F033    	bz	l11214
  8862  007604  0A01               	xorlw	1	; case 3
  8863  007606  E102 EF21  F034    	bz	l11230
  8864  00760C  0A07               	xorlw	7	; case 4
  8865  00760E  E102 EFB3  F034    	bz	l11274
  8866  007614  0A02               	xorlw	2	; case 6
  8867  007616  E101 D4E5          	bz	l11588
  8868  00761A  0A01               	xorlw	1	; case 7
  8869  00761C  E101 D557          	bz	l11638
  8870  007620  0A0F               	xorlw	15	; case 8
  8871  007622  E101 D5B1          	bz	l11668
  8872  007626  0A02               	xorlw	2	; case 10
  8873  007628  E101 D6D5          	bz	l11768
  8874  00762C  0A01               	xorlw	1	; case 11
  8875  00762E  E101 D75B          	bz	l11806
  8876  007632  0A07               	xorlw	7	; case 12
  8877  007634  E101 D77C          	bz	l11820
  8878  007638  0A02               	xorlw	2	; case 14
  8879  00763A  E0AA               	bz	l11842
  8880  00763C  EF52  F033         	goto	l448
  8881  007640                     __end_of_moteRunningProcess:
  8882                           	opt stack 0
  8883                           tblptru	equ	0xFF8
  8884                           tblptrh	equ	0xFF7
  8885                           tblptrl	equ	0xFF6
  8886                           tablat	equ	0xFF5
  8887                           prodl	equ	0xFF3
  8888                           intcon	equ	0xFF2
  8889                           postinc0	equ	0xFEE
  8890                           wreg	equ	0xFE8
  8891                           postdec1	equ	0xFE5
  8892                           fsr1l	equ	0xFE1
  8893                           indf2	equ	0xFDF
  8894                           fsr2h	equ	0xFDA
  8895                           fsr2l	equ	0xFD9
  8896                           status	equ	0xFD8
  8897                           
  8898 ;; *************** function _unhex *****************
  8899 ;; Defined at:
  8900 ;;		line 1264 in file "../Includes/Board/MOTEapp.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;  c               1    wreg     unsigned char 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  c               1    0[BANK0 ] unsigned char 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      unsigned char 
  8907 ;; Registers used:
  8908 ;;		wreg, status,2, status,0
  8909 ;; Tracked objects:
  8910 ;;		On entry : F/0
  8911 ;;		On exit  : F/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8914 ;;      Params:         0       0       0       0       0       0       0       0       0
  8915 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8917 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8918 ;;Total ram usage:        1 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; Hardware stack levels required when called:   11
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_moteRunningProcess
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text11
  8929  0037E8                     __ptext11:
  8930                           	opt stack 0
  8931  0037E8                     _unhex:
  8932                           	opt stack 17
  8933                           
  8934                           ;incstack = 0
  8935                           ;unhex@c stored from wreg
  8936  0037E8  6FC8               	movwf	unhex@c& (0+255),b
  8937                           
  8938                           ;MOTEapp.c: 1266: if (c >= '0' && c <= '9')
  8939  0037EA  0E2F               	movlw	47
  8940  0037EC  0100               	movlb	0	; () banked
  8941  0037EE  65C8               	cpfsgt	unhex@c& (0+255),b
  8942  0037F0  D006               	goto	l10462
  8943                           
  8944                           ; BSR set to: 0
  8945  0037F2  0E3A               	movlw	58
  8946  0037F4  61C8               	cpfslt	unhex@c& (0+255),b
  8947  0037F6  D003               	goto	l10462
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;MOTEapp.c: 1267: return c - '0';
  8951  0037F8  51C8               	movf	unhex@c& (0+255),w,b
  8952  0037FA  0FD0               	addlw	208
  8953  0037FC  0012               	return	
  8954  0037FE                     l10462:
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;MOTEapp.c: 1268: if (c >= 'A' && c <= 'F')
  8958  0037FE  0E40               	movlw	64
  8959  003800  65C8               	cpfsgt	unhex@c& (0+255),b
  8960  003802  0C2D               	retlw	45
  8961                           
  8962                           ; BSR set to: 0
  8963  003804  0E47               	movlw	71
  8964  003806  61C8               	cpfslt	unhex@c& (0+255),b
  8965  003808  0C2D               	retlw	45
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;MOTEapp.c: 1269: return c - 'A' + 10;
  8969  00380A  51C8               	movf	unhex@c& (0+255),w,b
  8970  00380C  0FC9               	addlw	201
  8971  00380E  0012               	return	
  8972  003810                     __end_of_unhex:
  8973                           	opt stack 0
  8974                           tblptru	equ	0xFF8
  8975                           tblptrh	equ	0xFF7
  8976                           tblptrl	equ	0xFF6
  8977                           tablat	equ	0xFF5
  8978                           prodl	equ	0xFF3
  8979                           intcon	equ	0xFF2
  8980                           postinc0	equ	0xFEE
  8981                           wreg	equ	0xFE8
  8982                           postdec1	equ	0xFE5
  8983                           fsr1l	equ	0xFE1
  8984                           indf2	equ	0xFDF
  8985                           fsr2h	equ	0xFDA
  8986                           fsr2l	equ	0xFD9
  8987                           status	equ	0xFD8
  8988                           
  8989 ;; *************** function _sendDataCommand *****************
  8990 ;; Defined at:
  8991 ;;		line 1241 in file "../Includes/Board/MOTEapp.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  8994 ;;		 -> STR_207(12), STR_206(14), STR_79(14), STR_77(12), 
  8995 ;;  appData         1    3[BANK0 ] PTR unsigned char 
  8996 ;;		 -> dataBuffer(12), 
  8997 ;;  dataLength      1    4[BANK0 ] unsigned char 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9000 ;;  byteCount       1    6[BANK0 ] unsigned char 
  9001 ;; Return value:  Size  Location     Type
  9002 ;;		None               void
  9003 ;; Registers used:
  9004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9005 ;; Tracked objects:
  9006 ;;		On entry : F/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9010 ;;      Params:         0       4       0       0       0       0       0       0       0
  9011 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9012 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9013 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9014 ;;Total ram usage:        7 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; Hardware stack levels required when called:   13
  9017 ;; This function calls:
  9018 ;;		_EUSART_Write
  9019 ;;		_EndLine
  9020 ;;		_hexToStr
  9021 ;; This function is called by:
  9022 ;;		_moteRunningProcess
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text12
  9027  00478C                     __ptext12:
  9028                           	opt stack 0
  9029  00478C                     _sendDataCommand:
  9030                           	opt stack 15
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;MOTEapp.c: 1244: while (*string)
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;incstack = 0
  9037  00478C  D00B               	goto	l10430
  9038  00478E                     l10426:
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;MOTEapp.c: 1245: {
  9042                           ;MOTEapp.c: 1246: EUSART_Write(*string++);
  9043  00478E  C0C9  FFF6         	movff	sendDataCommand@string,tblptrl
  9044  004792  C0CA  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9045  004796                     	if	0	;tblptru may be non-zero
  9046  004796                     	endif
  9047  004796                     	if	0	;tblptru may be non-zero
  9048  004796                     	endif
  9049  004796  0008               	tblrd		*
  9050  004798  50F5               	movf	tablat,w,c
  9051  00479A  ECCC  F01C         	call	_EUSART_Write
  9052  00479E  0100               	movlb	0	; () banked
  9053  0047A0  4BC9               	infsnz	sendDataCommand@string& (0+255),f,b
  9054  0047A2  2BCA               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9055  0047A4                     l10430:
  9056                           
  9057                           ; BSR set to: 0
  9058  0047A4  C0C9  FFF6         	movff	sendDataCommand@string,tblptrl
  9059  0047A8  C0CA  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9060  0047AC                     	if	0	;tblptru may be non-zero
  9061  0047AC                     	endif
  9062  0047AC                     	if	0	;tblptru may be non-zero
  9063  0047AC                     	endif
  9064  0047AC  0008               	tblrd		*
  9065  0047AE  50F5               	movf	tablat,w,c
  9066  0047B0  E1EE               	bnz	l10426
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;MOTEapp.c: 1247: }
  9070                           ;MOTEapp.c: 1249: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9071  0047B2  6BCE               	clrf	sendDataCommand@byteCount& (0+255),b
  9072  0047B4                     l10436:
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;MOTEapp.c: 1250: {
  9076                           ;MOTEapp.c: 1251: EUSART_Write(appData[byteCount]);
  9077  0047B4  51CB               	movf	sendDataCommand@appData& (0+255),w,b
  9078  0047B6  25CE               	addwf	sendDataCommand@byteCount& (0+255),w,b
  9079  0047B8  6ED9               	movwf	fsr2l,c
  9080  0047BA  6ADA               	clrf	fsr2h,c
  9081  0047BC  50DF               	movf	indf2,w,c
  9082  0047BE  ECCC  F01C         	call	_EUSART_Write
  9083  0047C2  0100               	movlb	0	; () banked
  9084  0047C4  2BCE               	incf	sendDataCommand@byteCount& (0+255),f,b
  9085                           
  9086                           ; BSR set to: 0
  9087  0047C6  0E02               	movlw	2
  9088  0047C8  65CE               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9089  0047CA  D7F4               	goto	l10436
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;MOTEapp.c: 1252: }
  9093                           ;MOTEapp.c: 1254: EUSART_Write(appData[3]);
  9094  0047CC  51CB               	movf	sendDataCommand@appData& (0+255),w,b
  9095  0047CE  6ED9               	movwf	fsr2l,c
  9096  0047D0  6ADA               	clrf	fsr2h,c
  9097  0047D2  0E03               	movlw	3
  9098  0047D4  26D9               	addwf	fsr2l,f,c
  9099  0047D6  50DF               	movf	indf2,w,c
  9100  0047D8  ECCC  F01C         	call	_EUSART_Write
  9101                           
  9102                           ;MOTEapp.c: 1256: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  9103  0047DC  0E04               	movlw	4
  9104  0047DE  0100               	movlb	0	; () banked
  9105  0047E0  6FCF               	movwf	sendDataCommand@byteCount_1637& (0+255),b
  9106  0047E2  D019               	goto	l10450
  9107  0047E4                     l10446:
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;MOTEapp.c: 1257: {
  9111                           ;MOTEapp.c: 1258: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  9112  0047E4  51CB               	movf	sendDataCommand@appData& (0+255),w,b
  9113  0047E6  25CF               	addwf	sendDataCommand@byteCount_1637& (0+255),w,b
  9114  0047E8  6ED9               	movwf	fsr2l,c
  9115  0047EA  6ADA               	clrf	fsr2h,c
  9116  0047EC  50DF               	movf	indf2,w,c
  9117  0047EE  6FCD               	movwf	??_sendDataCommand& (0+255),b
  9118  0047F0  39CD               	swapf	??_sendDataCommand& (0+255),w,b
  9119  0047F2  0B0F               	andlw	15
  9120  0047F4  EC91  F01B         	call	_hexToStr
  9121  0047F8  ECCC  F01C         	call	_EUSART_Write
  9122                           
  9123                           ;MOTEapp.c: 1259: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  9124  0047FC  0100               	movlb	0	; () banked
  9125  0047FE  51CB               	movf	sendDataCommand@appData& (0+255),w,b
  9126  004800  25CF               	addwf	sendDataCommand@byteCount_1637& (0+255),w,b
  9127  004802  6ED9               	movwf	fsr2l,c
  9128  004804  6ADA               	clrf	fsr2h,c
  9129  004806  50DF               	movf	indf2,w,c
  9130  004808  0B0F               	andlw	15
  9131  00480A  EC91  F01B         	call	_hexToStr
  9132  00480E  ECCC  F01C         	call	_EUSART_Write
  9133  004812  0100               	movlb	0	; () banked
  9134  004814  2BCF               	incf	sendDataCommand@byteCount_1637& (0+255),f,b
  9135  004816                     l10450:
  9136                           
  9137                           ; BSR set to: 0
  9138  004816  51CC               	movf	sendDataCommand@dataLength& (0+255),w,b
  9139  004818  5DCF               	subwf	sendDataCommand@byteCount_1637& (0+255),w,b
  9140  00481A  E3E4               	bnc	l10446
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;MOTEapp.c: 1260: }
  9144                           ;MOTEapp.c: 1261: EndLine();
  9145  00481C  EF86  F01A         	goto	_EndLine	;wreg free
  9146  004820                     __end_of_sendDataCommand:
  9147                           	opt stack 0
  9148                           tblptru	equ	0xFF8
  9149                           tblptrh	equ	0xFF7
  9150                           tblptrl	equ	0xFF6
  9151                           tablat	equ	0xFF5
  9152                           prodl	equ	0xFF3
  9153                           intcon	equ	0xFF2
  9154                           postinc0	equ	0xFEE
  9155                           wreg	equ	0xFE8
  9156                           postdec1	equ	0xFE5
  9157                           fsr1l	equ	0xFE1
  9158                           indf2	equ	0xFDF
  9159                           fsr2h	equ	0xFDA
  9160                           fsr2l	equ	0xFD9
  9161                           status	equ	0xFD8
  9162                           
  9163 ;; *************** function _hexToStr *****************
  9164 ;; Defined at:
  9165 ;;		line 1273 in file "../Includes/Board/MOTEapp.c"
  9166 ;; Parameters:    Size  Location     Type
  9167 ;;  character       1    wreg     unsigned char 
  9168 ;; Auto vars:     Size  Location     Type
  9169 ;;  character       1    0[BANK0 ] unsigned char 
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  1    wreg      unsigned char 
  9172 ;; Registers used:
  9173 ;;		wreg, status,2, status,0
  9174 ;; Tracked objects:
  9175 ;;		On entry : F/0
  9176 ;;		On exit  : F/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9179 ;;      Params:         0       0       0       0       0       0       0       0       0
  9180 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9182 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9183 ;;Total ram usage:        1 bytes
  9184 ;; Hardware stack levels used:    1
  9185 ;; Hardware stack levels required when called:   11
  9186 ;; This function calls:
  9187 ;;		Nothing
  9188 ;; This function is called by:
  9189 ;;		_sendDataCommand
  9190 ;; This function uses a non-reentrant model
  9191 ;;
  9192                           
  9193                           	psect	text13
  9194  003722                     __ptext13:
  9195                           	opt stack 0
  9196  003722                     _hexToStr:
  9197                           	opt stack 16
  9198                           
  9199                           ;incstack = 0
  9200                           ;hexToStr@character stored from wreg
  9201  003722  6FC8               	movwf	hexToStr@character& (0+255),b
  9202                           
  9203                           ;MOTEapp.c: 1276: character = character & 0x0F;
  9204  003724  0E0F               	movlw	15
  9205  003726  0100               	movlb	0	; () banked
  9206  003728  17C8               	andwf	hexToStr@character& (0+255),f,b
  9207                           
  9208                           ;MOTEapp.c: 1278: if (character < 0x0A)
  9209  00372A  0E0A               	movlw	10
  9210  00372C  61C8               	cpfslt	hexToStr@character& (0+255),b
  9211  00372E  D003               	goto	l10044
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;MOTEapp.c: 1279: {
  9215                           ;MOTEapp.c: 1280: return character + '0';
  9216  003730  51C8               	movf	hexToStr@character& (0+255),w,b
  9217  003732  0F30               	addlw	48
  9218  003734  0012               	return	
  9219  003736                     l10044:
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;MOTEapp.c: 1282: else if ( (character >= 0x0A) && (character <= 0x0F) )
  9223  003736  0E09               	movlw	9
  9224  003738  65C8               	cpfsgt	hexToStr@character& (0+255),b
  9225  00373A  0C00               	retlw	0
  9226                           
  9227                           ; BSR set to: 0
  9228  00373C  0E10               	movlw	16
  9229  00373E  61C8               	cpfslt	hexToStr@character& (0+255),b
  9230  003740  0C00               	retlw	0
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;MOTEapp.c: 1283: {
  9234                           ;MOTEapp.c: 1284: return character + '0' + 7;
  9235  003742  51C8               	movf	hexToStr@character& (0+255),w,b
  9236  003744  0F37               	addlw	55
  9237  003746  0012               	return	
  9238  003748                     __end_of_hexToStr:
  9239                           	opt stack 0
  9240                           tblptru	equ	0xFF8
  9241                           tblptrh	equ	0xFF7
  9242                           tblptrl	equ	0xFF6
  9243                           tablat	equ	0xFF5
  9244                           prodl	equ	0xFF3
  9245                           intcon	equ	0xFF2
  9246                           postinc0	equ	0xFEE
  9247                           wreg	equ	0xFE8
  9248                           postdec1	equ	0xFE5
  9249                           fsr1l	equ	0xFE1
  9250                           indf2	equ	0xFDF
  9251                           fsr2h	equ	0xFDA
  9252                           fsr2l	equ	0xFD9
  9253                           status	equ	0xFD8
  9254                           
  9255 ;; *************** function _oled_putUint8 *****************
  9256 ;; Defined at:
  9257 ;;		line 226 in file "../Includes/Drivers/SSD1306oLED.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;  number          1    wreg     unsigned char 
  9260 ;;  station_dot     1   18[BANK0 ] unsigned char 
  9261 ;;  start_page      1   19[BANK0 ] unsigned char 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  number          1   20[BANK0 ] unsigned char 
  9264 ;;  numData         6   21[BANK0 ] struct .
  9265 ;; Return value:  Size  Location     Type
  9266 ;;		None               void
  9267 ;; Registers used:
  9268 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9269 ;; Tracked objects:
  9270 ;;		On entry : F/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9274 ;;      Params:         0       2       0       0       0       0       0       0       0
  9275 ;;      Locals:         0       7       0       0       0       0       0       0       0
  9276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9277 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9278 ;;Total ram usage:        9 bytes
  9279 ;; Hardware stack levels used:    1
  9280 ;; Hardware stack levels required when called:   16
  9281 ;; This function calls:
  9282 ;;		___lbdiv
  9283 ;;		___lbmod
  9284 ;;		_oled_putString
  9285 ;; This function is called by:
  9286 ;;		_test_adc
  9287 ;;		_moteRunningProcess
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           	psect	text14
  9292  003EF0                     __ptext14:
  9293                           	opt stack 0
  9294  003EF0                     _oled_putUint8:
  9295                           	opt stack 12
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;incstack = 0
  9299                           ;oled_putUint8@number stored from wreg
  9300  003EF0  6FDC               	movwf	oled_putUint8@number& (0+255),b
  9301                           
  9302                           ;SSD1306oLED.c: 228: display_data_t numData;
  9303                           ;SSD1306oLED.c: 229: numData.d2 = '0' + (number % 10);
  9304  003EF2  0E0A               	movlw	10
  9305  003EF4  0100               	movlb	0	; () banked
  9306  003EF6  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9307  003EF8  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9308  003EFA  ECE0  F01B         	call	___lbmod
  9309  003EFE  0F30               	addlw	48
  9310  003F00  6FDF               	movwf	(oled_putUint8@numData+2)& (0+255),b
  9311                           
  9312                           ;SSD1306oLED.c: 230: number /= 10;
  9313  003F02  0E0A               	movlw	10
  9314  003F04  6FC8               	movwf	___lbdiv@divisor& (0+255),b
  9315  003F06  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9316  003F08  EC01  F01D         	call	___lbdiv
  9317  003F0C  6FDC               	movwf	oled_putUint8@number& (0+255),b
  9318                           
  9319                           ;SSD1306oLED.c: 231: numData.d1 = '0' + (number % 10);
  9320  003F0E  0E0A               	movlw	10
  9321  003F10  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9322  003F12  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9323  003F14  ECE0  F01B         	call	___lbmod
  9324  003F18  0F30               	addlw	48
  9325  003F1A  6FDE               	movwf	(oled_putUint8@numData+1)& (0+255),b
  9326                           
  9327                           ;SSD1306oLED.c: 232: number /= 10;
  9328  003F1C  0E0A               	movlw	10
  9329  003F1E  6FC8               	movwf	___lbdiv@divisor& (0+255),b
  9330  003F20  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9331  003F22  EC01  F01D         	call	___lbdiv
  9332  003F26  6FDC               	movwf	oled_putUint8@number& (0+255),b
  9333                           
  9334                           ;SSD1306oLED.c: 233: numData.d0 = '0' + (number % 10);
  9335  003F28  0E0A               	movlw	10
  9336  003F2A  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9337  003F2C  51DC               	movf	oled_putUint8@number& (0+255),w,b
  9338  003F2E  ECE0  F01B         	call	___lbmod
  9339  003F32  0F30               	addlw	48
  9340  003F34  6FDD               	movwf	oled_putUint8@numData& (0+255),b
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;SSD1306oLED.c: 235: numData.b[3]=0;
  9344  003F36  6BE0               	clrf	(oled_putUint8@numData+3)& (0+255),b
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;SSD1306oLED.c: 237: oled_putString(numData.b,station_dot,start_page);
  9348  003F38  0EDD               	movlw	low oled_putUint8@numData
  9349  003F3A  6FD5               	movwf	oled_putString@string& (0+255),b
  9350  003F3C  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  9351  003F3E  C0DA  F0D7         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  9352  003F42  C0DB  F0D8         	movff	oled_putUint8@start_page,oled_putString@start_page
  9353  003F46  EF65  F020         	goto	_oled_putString	;wreg free
  9354  003F4A                     __end_of_oled_putUint8:
  9355                           	opt stack 0
  9356                           tblptru	equ	0xFF8
  9357                           tblptrh	equ	0xFF7
  9358                           tblptrl	equ	0xFF6
  9359                           tablat	equ	0xFF5
  9360                           prodl	equ	0xFF3
  9361                           intcon	equ	0xFF2
  9362                           postinc0	equ	0xFEE
  9363                           wreg	equ	0xFE8
  9364                           postdec1	equ	0xFE5
  9365                           fsr1l	equ	0xFE1
  9366                           indf2	equ	0xFDF
  9367                           fsr2h	equ	0xFDA
  9368                           fsr2l	equ	0xFD9
  9369                           status	equ	0xFD8
  9370                           
  9371 ;; *************** function _oled_putUint16 *****************
  9372 ;; Defined at:
  9373 ;;		line 240 in file "../Includes/Drivers/SSD1306oLED.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  number          2   18[BANK0 ] unsigned int 
  9376 ;;  station_dot     1   20[BANK0 ] unsigned char 
  9377 ;;  start_page      1   21[BANK0 ] unsigned char 
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;  numData         6   22[BANK0 ] struct .
  9380 ;; Return value:  Size  Location     Type
  9381 ;;		None               void
  9382 ;; Registers used:
  9383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9384 ;; Tracked objects:
  9385 ;;		On entry : F/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9389 ;;      Params:         0       4       0       0       0       0       0       0       0
  9390 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9392 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9393 ;;Total ram usage:       10 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; Hardware stack levels required when called:   16
  9396 ;; This function calls:
  9397 ;;		___lwdiv
  9398 ;;		___lwmod
  9399 ;;		_oled_putString
  9400 ;; This function is called by:
  9401 ;;		_test_adc
  9402 ;;		_moteRunningProcess
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text15
  9407  0055C4                     __ptext15:
  9408                           	opt stack 0
  9409  0055C4                     _oled_putUint16:
  9410                           	opt stack 12
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;SSD1306oLED.c: 242: display_data_t numData;
  9414                           ;SSD1306oLED.c: 243: numData.d4 = '0' + (number % 10);
  9415                           
  9416                           ;incstack = 0
  9417  0055C4  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9418  0055C8  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9419  0055CC  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9420  0055CE  0E0A               	movlw	10
  9421  0055D0  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9422  0055D2  ECAD  F01D         	call	___lwmod	;wreg free
  9423  0055D6  51C8               	movf	?___lwmod& (0+255),w,b
  9424  0055D8  0F30               	addlw	48
  9425  0055DA  6FE2               	movwf	(oled_putUint16@numData+4)& (0+255),b
  9426                           
  9427                           ;SSD1306oLED.c: 244: number /= 10;
  9428  0055DC  C0DA  F0C8         	movff	oled_putUint16@number,___lwdiv@dividend
  9429  0055E0  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9430  0055E4  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9431  0055E6  0E0A               	movlw	10
  9432  0055E8  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  9433  0055EA  EC36  F01E         	call	___lwdiv	;wreg free
  9434  0055EE  C0C8  F0DA         	movff	?___lwdiv,oled_putUint16@number
  9435  0055F2  C0C9  F0DB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9436                           
  9437                           ;SSD1306oLED.c: 245: numData.d3 = '0' + (number % 10);
  9438  0055F6  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9439  0055FA  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9440  0055FE  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9441  005600  0E0A               	movlw	10
  9442  005602  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9443  005604  ECAD  F01D         	call	___lwmod	;wreg free
  9444  005608  51C8               	movf	?___lwmod& (0+255),w,b
  9445  00560A  0F30               	addlw	48
  9446  00560C  6FE1               	movwf	(oled_putUint16@numData+3)& (0+255),b
  9447                           
  9448                           ;SSD1306oLED.c: 246: number /= 10;
  9449  00560E  C0DA  F0C8         	movff	oled_putUint16@number,___lwdiv@dividend
  9450  005612  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9451  005616  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9452  005618  0E0A               	movlw	10
  9453  00561A  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  9454  00561C  EC36  F01E         	call	___lwdiv	;wreg free
  9455  005620  C0C8  F0DA         	movff	?___lwdiv,oled_putUint16@number
  9456  005624  C0C9  F0DB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9457                           
  9458                           ;SSD1306oLED.c: 247: numData.d2 = '0' + (number % 10);
  9459  005628  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9460  00562C  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9461  005630  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9462  005632  0E0A               	movlw	10
  9463  005634  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9464  005636  ECAD  F01D         	call	___lwmod	;wreg free
  9465  00563A  51C8               	movf	?___lwmod& (0+255),w,b
  9466  00563C  0F30               	addlw	48
  9467  00563E  6FE0               	movwf	(oled_putUint16@numData+2)& (0+255),b
  9468                           
  9469                           ;SSD1306oLED.c: 248: number /= 10;
  9470  005640  C0DA  F0C8         	movff	oled_putUint16@number,___lwdiv@dividend
  9471  005644  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9472  005648  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9473  00564A  0E0A               	movlw	10
  9474  00564C  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  9475  00564E  EC36  F01E         	call	___lwdiv	;wreg free
  9476  005652  C0C8  F0DA         	movff	?___lwdiv,oled_putUint16@number
  9477  005656  C0C9  F0DB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9478                           
  9479                           ;SSD1306oLED.c: 249: numData.d1 = '0' + (number % 10);
  9480  00565A  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9481  00565E  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9482  005662  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9483  005664  0E0A               	movlw	10
  9484  005666  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9485  005668  ECAD  F01D         	call	___lwmod	;wreg free
  9486  00566C  51C8               	movf	?___lwmod& (0+255),w,b
  9487  00566E  0F30               	addlw	48
  9488  005670  6FDF               	movwf	(oled_putUint16@numData+1)& (0+255),b
  9489                           
  9490                           ;SSD1306oLED.c: 250: number /= 10;
  9491  005672  C0DA  F0C8         	movff	oled_putUint16@number,___lwdiv@dividend
  9492  005676  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9493  00567A  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9494  00567C  0E0A               	movlw	10
  9495  00567E  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  9496  005680  EC36  F01E         	call	___lwdiv	;wreg free
  9497  005684  C0C8  F0DA         	movff	?___lwdiv,oled_putUint16@number
  9498  005688  C0C9  F0DB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9499                           
  9500                           ;SSD1306oLED.c: 251: numData.d0 = '0' + (number % 10);
  9501  00568C  C0DA  F0C8         	movff	oled_putUint16@number,___lwmod@dividend
  9502  005690  C0DB  F0C9         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9503  005694  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
  9504  005696  0E0A               	movlw	10
  9505  005698  6FCA               	movwf	___lwmod@divisor& (0+255),b
  9506  00569A  ECAD  F01D         	call	___lwmod	;wreg free
  9507  00569E  51C8               	movf	?___lwmod& (0+255),w,b
  9508  0056A0  0F30               	addlw	48
  9509  0056A2  6FDE               	movwf	oled_putUint16@numData& (0+255),b
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;SSD1306oLED.c: 253: numData.b[5]=0;
  9513  0056A4  6BE3               	clrf	(oled_putUint16@numData+5)& (0+255),b
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;SSD1306oLED.c: 255: oled_putString(numData.b,station_dot,start_page);
  9517  0056A6  0EDE               	movlw	low oled_putUint16@numData
  9518  0056A8  6FD5               	movwf	oled_putString@string& (0+255),b
  9519  0056AA  6BD6               	clrf	(oled_putString@string+1)& (0+255),b
  9520  0056AC  C0DC  F0D7         	movff	oled_putUint16@station_dot,oled_putString@station_dot
  9521  0056B0  C0DD  F0D8         	movff	oled_putUint16@start_page,oled_putString@start_page
  9522  0056B4  EF65  F020         	goto	_oled_putString	;wreg free
  9523  0056B8                     __end_of_oled_putUint16:
  9524                           	opt stack 0
  9525                           tblptru	equ	0xFF8
  9526                           tblptrh	equ	0xFF7
  9527                           tblptrl	equ	0xFF6
  9528                           tablat	equ	0xFF5
  9529                           prodl	equ	0xFF3
  9530                           intcon	equ	0xFF2
  9531                           postinc0	equ	0xFEE
  9532                           wreg	equ	0xFE8
  9533                           postdec1	equ	0xFE5
  9534                           fsr1l	equ	0xFE1
  9535                           indf2	equ	0xFDF
  9536                           fsr2h	equ	0xFDA
  9537                           fsr2l	equ	0xFD9
  9538                           status	equ	0xFD8
  9539                           
  9540 ;; *************** function _moteApp_clearBuffers *****************
  9541 ;; Defined at:
  9542 ;;		line 1383 in file "../Includes/Board/MOTEapp.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;		None
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;  counter         1    2[BANK0 ] unsigned char 
  9547 ;;  counter         1    1[BANK0 ] unsigned char 
  9548 ;;  counter         1    0[BANK0 ] unsigned char 
  9549 ;; Return value:  Size  Location     Type
  9550 ;;		None               void
  9551 ;; Registers used:
  9552 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : F/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0
  9559 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9561 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9562 ;;Total ram usage:        3 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:   11
  9565 ;; This function calls:
  9566 ;;		Nothing
  9567 ;; This function is called by:
  9568 ;;		_moteRunningProcess
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           	psect	text16
  9573  003B98                     __ptext16:
  9574                           	opt stack 0
  9575  003B98                     _moteApp_clearBuffers:
  9576                           	opt stack 17
  9577                           
  9578                           ;MOTEapp.c: 1385: for (uint8_t counter = 0; counter < 3; counter++)
  9579                           
  9580                           ;incstack = 0
  9581  003B98  0100               	movlb	0	; () banked
  9582  003B9A  6BC8               	clrf	moteApp_clearBuffers@counter& (0+255),b
  9583  003B9C                     l10370:
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;MOTEapp.c: 1386: {
  9587                           ;MOTEapp.c: 1387: responsePortNum[counter] = 0;
  9588  003B9C  51C8               	movf	moteApp_clearBuffers@counter& (0+255),w,b
  9589  003B9E  0FC3               	addlw	low _responsePortNum
  9590  003BA0  6ED9               	movwf	fsr2l,c
  9591  003BA2  6ADA               	clrf	fsr2h,c
  9592  003BA4  6ADF               	clrf	indf2,c
  9593                           
  9594                           ; BSR set to: 0
  9595  003BA6  2BC8               	incf	moteApp_clearBuffers@counter& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598  003BA8  0E02               	movlw	2
  9599  003BAA  65C8               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
  9600  003BAC  D7F7               	goto	l10370
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;MOTEapp.c: 1388: }
  9604                           ;MOTEapp.c: 1389: for (uint8_t counter = 0; counter < 34; counter++)
  9605  003BAE  6BC9               	clrf	moteApp_clearBuffers@counter_1700& (0+255),b
  9606  003BB0                     l10380:
  9607                           
  9608                           ; BSR set to: 0
  9609                           ;MOTEapp.c: 1390: {
  9610                           ;MOTEapp.c: 1391: responseId[counter] = 0;
  9611  003BB0  0EC0               	movlw	low _responseId
  9612  003BB2  25C9               	addwf	moteApp_clearBuffers@counter_1700& (0+255),w,b
  9613  003BB4  6ED9               	movwf	fsr2l,c
  9614  003BB6  6ADA               	clrf	fsr2h,c
  9615  003BB8  0E01               	movlw	high _responseId
  9616  003BBA  22DA               	addwfc	fsr2h,f,c
  9617  003BBC  6ADF               	clrf	indf2,c
  9618                           
  9619                           ; BSR set to: 0
  9620  003BBE  2BC9               	incf	moteApp_clearBuffers@counter_1700& (0+255),f,b
  9621                           
  9622                           ; BSR set to: 0
  9623  003BC0  0E21               	movlw	33
  9624  003BC2  65C9               	cpfsgt	moteApp_clearBuffers@counter_1700& (0+255),b
  9625  003BC4  D7F5               	goto	l10380
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;MOTEapp.c: 1392: }
  9629                           ;MOTEapp.c: 1393: for (uint8_t counter = 0; counter < 10; counter++)
  9630  003BC6  6BCA               	clrf	moteApp_clearBuffers@counter_1701& (0+255),b
  9631  003BC8                     l10390:
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;MOTEapp.c: 1394: {
  9635                           ;MOTEapp.c: 1395: responseData[counter] = 0;
  9636  003BC8  51CA               	movf	moteApp_clearBuffers@counter_1701& (0+255),w,b
  9637  003BCA  0FB4               	addlw	low _responseData
  9638  003BCC  6ED9               	movwf	fsr2l,c
  9639  003BCE  6ADA               	clrf	fsr2h,c
  9640  003BD0  6ADF               	clrf	indf2,c
  9641                           
  9642                           ; BSR set to: 0
  9643  003BD2  2BCA               	incf	moteApp_clearBuffers@counter_1701& (0+255),f,b
  9644                           
  9645                           ; BSR set to: 0
  9646  003BD4  0E09               	movlw	9
  9647  003BD6  65CA               	cpfsgt	moteApp_clearBuffers@counter_1701& (0+255),b
  9648  003BD8  D7F7               	goto	l10390
  9649  003BDA  0C09               	retlw	9
  9650  003BDC                     __end_of_moteApp_clearBuffers:
  9651                           	opt stack 0
  9652                           tblptru	equ	0xFF8
  9653                           tblptrh	equ	0xFF7
  9654                           tblptrl	equ	0xFF6
  9655                           tablat	equ	0xFF5
  9656                           prodl	equ	0xFF3
  9657                           intcon	equ	0xFF2
  9658                           postinc0	equ	0xFEE
  9659                           wreg	equ	0xFE8
  9660                           postdec1	equ	0xFE5
  9661                           fsr1l	equ	0xFE1
  9662                           indf2	equ	0xFDF
  9663                           fsr2h	equ	0xFDA
  9664                           fsr2l	equ	0xFD9
  9665                           status	equ	0xFD8
  9666                           
  9667 ;; *************** function _moteApp_add8bToDataBuffer *****************
  9668 ;; Defined at:
  9669 ;;		line 1399 in file "../Includes/Board/MOTEapp.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  number          1    wreg     unsigned char 
  9672 ;;  bufferLocati    1    4[BANK0 ] unsigned char 
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;  number          1    5[BANK0 ] unsigned char 
  9675 ;; Return value:  Size  Location     Type
  9676 ;;		None               void
  9677 ;; Registers used:
  9678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9679 ;; Tracked objects:
  9680 ;;		On entry : F/0
  9681 ;;		On exit  : F/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9684 ;;      Params:         0       1       0       0       0       0       0       0       0
  9685 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9687 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9688 ;;Total ram usage:        2 bytes
  9689 ;; Hardware stack levels used:    1
  9690 ;; Hardware stack levels required when called:   12
  9691 ;; This function calls:
  9692 ;;		___lbdiv
  9693 ;;		___lbmod
  9694 ;; This function is called by:
  9695 ;;		_moteRunningProcess
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699                           	psect	text17
  9700  004006                     __ptext17:
  9701                           	opt stack 0
  9702  004006                     _moteApp_add8bToDataBuffer:
  9703                           	opt stack 16
  9704                           
  9705                           ; BSR set to: 0
  9706                           ;incstack = 0
  9707                           ;moteApp_add8bToDataBuffer@number stored from wreg
  9708  004006  6FCD               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9709                           
  9710                           ;MOTEapp.c: 1401: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  9711  004008  0100               	movlb	0	; () banked
  9712  00400A  51CC               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9713  00400C  0FA0               	addlw	low (_dataBuffer+2)
  9714  00400E  6ED9               	movwf	fsr2l,c
  9715  004010  6ADA               	clrf	fsr2h,c
  9716  004012  0E0A               	movlw	10
  9717  004014  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9718  004016  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9719  004018  ECE0  F01B         	call	___lbmod
  9720  00401C  0F30               	addlw	48
  9721  00401E  6EDF               	movwf	indf2,c
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;MOTEapp.c: 1402: number /= 10;
  9725  004020  0E0A               	movlw	10
  9726  004022  6FC8               	movwf	___lbdiv@divisor& (0+255),b
  9727  004024  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9728  004026  EC01  F01D         	call	___lbdiv
  9729  00402A  6FCD               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;MOTEapp.c: 1403: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  9733  00402C  51CC               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9734  00402E  0F9F               	addlw	low (_dataBuffer+1)
  9735  004030  6ED9               	movwf	fsr2l,c
  9736  004032  6ADA               	clrf	fsr2h,c
  9737  004034  0E0A               	movlw	10
  9738  004036  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9739  004038  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9740  00403A  ECE0  F01B         	call	___lbmod
  9741  00403E  0F30               	addlw	48
  9742  004040  6EDF               	movwf	indf2,c
  9743                           
  9744                           ;MOTEapp.c: 1404: number /= 10;
  9745  004042  0E0A               	movlw	10
  9746  004044  6FC8               	movwf	___lbdiv@divisor& (0+255),b
  9747  004046  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9748  004048  EC01  F01D         	call	___lbdiv
  9749  00404C  6FCD               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;MOTEapp.c: 1405: dataBuffer[bufferLocation] = '0' + (number % 10);
  9753  00404E  51CC               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  9754  004050  0F9E               	addlw	low _dataBuffer
  9755  004052  6ED9               	movwf	fsr2l,c
  9756  004054  6ADA               	clrf	fsr2h,c
  9757  004056  0E0A               	movlw	10
  9758  004058  6FC8               	movwf	___lbmod@divisor& (0+255),b
  9759  00405A  51CD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  9760  00405C  ECE0  F01B         	call	___lbmod
  9761  004060  0F30               	addlw	48
  9762  004062  6EDF               	movwf	indf2,c
  9763                           
  9764                           ; BSR set to: 0
  9765  004064  0012               	return		;funcret
  9766  004066                     __end_of_moteApp_add8bToDataBuffer:
  9767                           	opt stack 0
  9768                           tblptru	equ	0xFF8
  9769                           tblptrh	equ	0xFF7
  9770                           tblptrl	equ	0xFF6
  9771                           tablat	equ	0xFF5
  9772                           prodl	equ	0xFF3
  9773                           intcon	equ	0xFF2
  9774                           postinc0	equ	0xFEE
  9775                           wreg	equ	0xFE8
  9776                           postdec1	equ	0xFE5
  9777                           fsr1l	equ	0xFE1
  9778                           indf2	equ	0xFDF
  9779                           fsr2h	equ	0xFDA
  9780                           fsr2l	equ	0xFD9
  9781                           status	equ	0xFD8
  9782                           
  9783 ;; *************** function ___lbmod *****************
  9784 ;; Defined at:
  9785 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbmod.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  dividend        1    wreg     unsigned char 
  9788 ;;  divisor         1    0[BANK0 ] unsigned char 
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;  dividend        1    1[BANK0 ] unsigned char 
  9791 ;;  rem             1    3[BANK0 ] unsigned char 
  9792 ;;  counter         1    2[BANK0 ] unsigned char 
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  1    wreg      unsigned char 
  9795 ;; Registers used:
  9796 ;;		wreg, status,2, status,0
  9797 ;; Tracked objects:
  9798 ;;		On entry : F/0
  9799 ;;		On exit  : F/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9802 ;;      Params:         0       1       0       0       0       0       0       0       0
  9803 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9805 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9806 ;;Total ram usage:        4 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; Hardware stack levels required when called:   11
  9809 ;; This function calls:
  9810 ;;		Nothing
  9811 ;; This function is called by:
  9812 ;;		_moteApp_add8bToDataBuffer
  9813 ;;		_oled_putUint8
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           	psect	text18
  9818  0037C0                     __ptext18:
  9819                           	opt stack 0
  9820  0037C0                     ___lbmod:
  9821                           	opt stack 16
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;incstack = 0
  9825                           ;___lbmod@dividend stored from wreg
  9826  0037C0  6FC9               	movwf	___lbmod@dividend& (0+255),b
  9827  0037C2  0E08               	movlw	8
  9828  0037C4  0100               	movlb	0	; () banked
  9829  0037C6  6FCA               	movwf	___lbmod@counter& (0+255),b
  9830                           
  9831                           ; BSR set to: 0
  9832  0037C8  6BCB               	clrf	___lbmod@rem& (0+255),b
  9833  0037CA                     l10156:
  9834                           
  9835                           ; BSR set to: 0
  9836  0037CA  90D8               	bcf	status,0,c
  9837  0037CC  35C9               	rlcf	___lbmod@dividend& (0+255),w,b
  9838  0037CE  35CB               	rlcf	___lbmod@rem& (0+255),w,b
  9839  0037D0  6FCB               	movwf	___lbmod@rem& (0+255),b
  9840                           
  9841                           ; BSR set to: 0
  9842  0037D2  90D8               	bcf	status,0,c
  9843  0037D4  37C9               	rlcf	___lbmod@dividend& (0+255),f,b
  9844                           
  9845                           ; BSR set to: 0
  9846  0037D6  51C8               	movf	___lbmod@divisor& (0+255),w,b
  9847  0037D8  5DCB               	subwf	___lbmod@rem& (0+255),w,b
  9848  0037DA  E302               	bnc	l10164
  9849                           
  9850                           ; BSR set to: 0
  9851  0037DC  51C8               	movf	___lbmod@divisor& (0+255),w,b
  9852  0037DE  5FCB               	subwf	___lbmod@rem& (0+255),f,b
  9853  0037E0                     l10164:
  9854                           
  9855                           ; BSR set to: 0
  9856  0037E0  2FCA               	decfsz	___lbmod@counter& (0+255),f,b
  9857  0037E2  D7F3               	goto	l10156
  9858                           
  9859                           ; BSR set to: 0
  9860  0037E4  51CB               	movf	___lbmod@rem& (0+255),w,b
  9861                           
  9862                           ; BSR set to: 0
  9863  0037E6  0012               	return		;funcret
  9864  0037E8                     __end_of___lbmod:
  9865                           	opt stack 0
  9866                           tblptru	equ	0xFF8
  9867                           tblptrh	equ	0xFF7
  9868                           tblptrl	equ	0xFF6
  9869                           tablat	equ	0xFF5
  9870                           prodl	equ	0xFF3
  9871                           intcon	equ	0xFF2
  9872                           postinc0	equ	0xFEE
  9873                           wreg	equ	0xFE8
  9874                           postdec1	equ	0xFE5
  9875                           fsr1l	equ	0xFE1
  9876                           indf2	equ	0xFDF
  9877                           fsr2h	equ	0xFDA
  9878                           fsr2l	equ	0xFD9
  9879                           status	equ	0xFD8
  9880                           
  9881 ;; *************** function ___lbdiv *****************
  9882 ;; Defined at:
  9883 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbdiv.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;  dividend        1    wreg     unsigned char 
  9886 ;;  divisor         1    0[BANK0 ] unsigned char 
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;  dividend        1    1[BANK0 ] unsigned char 
  9889 ;;  quotient        1    3[BANK0 ] unsigned char 
  9890 ;;  counter         1    2[BANK0 ] unsigned char 
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  1    wreg      unsigned char 
  9893 ;; Registers used:
  9894 ;;		wreg, status,2, status,0
  9895 ;; Tracked objects:
  9896 ;;		On entry : F/0
  9897 ;;		On exit  : F/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9900 ;;      Params:         0       1       0       0       0       0       0       0       0
  9901 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9903 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9904 ;;Total ram usage:        4 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:   11
  9907 ;; This function calls:
  9908 ;;		Nothing
  9909 ;; This function is called by:
  9910 ;;		_moteApp_add8bToDataBuffer
  9911 ;;		_oled_putUint8
  9912 ;; This function uses a non-reentrant model
  9913 ;;
  9914                           
  9915                           	psect	text19
  9916  003A02                     __ptext19:
  9917                           	opt stack 0
  9918  003A02                     ___lbdiv:
  9919                           	opt stack 16
  9920                           
  9921                           ; BSR set to: 0
  9922                           ;incstack = 0
  9923                           ;___lbdiv@dividend stored from wreg
  9924  003A02  6FC9               	movwf	___lbdiv@dividend& (0+255),b
  9925  003A04  0100               	movlb	0	; () banked
  9926  003A06  6BCB               	clrf	___lbdiv@quotient& (0+255),b
  9927                           
  9928                           ; BSR set to: 0
  9929  003A08  51C8               	movf	___lbdiv@divisor& (0+255),w,b
  9930  003A0A  E014               	bz	l10148
  9931                           
  9932                           ; BSR set to: 0
  9933  003A0C  0E01               	movlw	1
  9934  003A0E  6FCA               	movwf	___lbdiv@counter& (0+255),b
  9935  003A10  D003               	goto	l10136
  9936  003A12                     l10132:
  9937                           
  9938                           ; BSR set to: 0
  9939  003A12  90D8               	bcf	status,0,c
  9940  003A14  37C8               	rlcf	___lbdiv@divisor& (0+255),f,b
  9941                           
  9942                           ; BSR set to: 0
  9943  003A16  2BCA               	incf	___lbdiv@counter& (0+255),f,b
  9944  003A18                     l10136:
  9945                           
  9946                           ; BSR set to: 0
  9947  003A18  AFC8               	btfss	___lbdiv@divisor& (0+255),7,b
  9948  003A1A  D7FB               	goto	l10132
  9949  003A1C                     l10138:
  9950                           
  9951                           ; BSR set to: 0
  9952  003A1C  90D8               	bcf	status,0,c
  9953  003A1E  37CB               	rlcf	___lbdiv@quotient& (0+255),f,b
  9954  003A20  51C8               	movf	___lbdiv@divisor& (0+255),w,b
  9955  003A22  5DC9               	subwf	___lbdiv@dividend& (0+255),w,b
  9956  003A24  E303               	bnc	l10144
  9957                           
  9958                           ; BSR set to: 0
  9959  003A26  51C8               	movf	___lbdiv@divisor& (0+255),w,b
  9960  003A28  5FC9               	subwf	___lbdiv@dividend& (0+255),f,b
  9961                           
  9962                           ; BSR set to: 0
  9963  003A2A  81CB               	bsf	___lbdiv@quotient& (0+255),0,b
  9964  003A2C                     l10144:
  9965                           
  9966                           ; BSR set to: 0
  9967  003A2C  90D8               	bcf	status,0,c
  9968  003A2E  33C8               	rrcf	___lbdiv@divisor& (0+255),f,b
  9969                           
  9970                           ; BSR set to: 0
  9971  003A30  2FCA               	decfsz	___lbdiv@counter& (0+255),f,b
  9972  003A32  D7F4               	goto	l10138
  9973  003A34                     l10148:
  9974                           
  9975                           ; BSR set to: 0
  9976  003A34  51CB               	movf	___lbdiv@quotient& (0+255),w,b
  9977                           
  9978                           ; BSR set to: 0
  9979  003A36  0012               	return		;funcret
  9980  003A38                     __end_of___lbdiv:
  9981                           	opt stack 0
  9982                           tblptru	equ	0xFF8
  9983                           tblptrh	equ	0xFF7
  9984                           tblptrl	equ	0xFF6
  9985                           tablat	equ	0xFF5
  9986                           prodl	equ	0xFF3
  9987                           intcon	equ	0xFF2
  9988                           postinc0	equ	0xFEE
  9989                           wreg	equ	0xFE8
  9990                           postdec1	equ	0xFE5
  9991                           fsr1l	equ	0xFE1
  9992                           indf2	equ	0xFDF
  9993                           fsr2h	equ	0xFDA
  9994                           fsr2l	equ	0xFD9
  9995                           status	equ	0xFD8
  9996                           
  9997 ;; *************** function _moteApp_add16bToDataBuffer *****************
  9998 ;; Defined at:
  9999 ;;		line 1408 in file "../Includes/Board/MOTEapp.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  number          2    7[BANK0 ] unsigned int 
 10002 ;;  bufferLocati    1    9[BANK0 ] unsigned char 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;		None
 10005 ;; Return value:  Size  Location     Type
 10006 ;;		None               void
 10007 ;; Registers used:
 10008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10009 ;; Tracked objects:
 10010 ;;		On entry : F/0
 10011 ;;		On exit  : F/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10014 ;;      Params:         0       3       0       0       0       0       0       0       0
 10015 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10016 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10017 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10018 ;;Total ram usage:        3 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; Hardware stack levels required when called:   12
 10021 ;; This function calls:
 10022 ;;		___lwdiv
 10023 ;;		___lwmod
 10024 ;; This function is called by:
 10025 ;;		_moteRunningProcess
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           	psect	text20
 10030  0059B8                     __ptext20:
 10031                           	opt stack 0
 10032  0059B8                     _moteApp_add16bToDataBuffer:
 10033                           	opt stack 16
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;MOTEapp.c: 1410: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;incstack = 0
 10040  0059B8  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10041  0059BA  0FA2               	addlw	low (_dataBuffer+4)
 10042  0059BC  6ED9               	movwf	fsr2l,c
 10043  0059BE  6ADA               	clrf	fsr2h,c
 10044  0059C0  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10045  0059C4  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10046  0059C8  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10047  0059CA  0E0A               	movlw	10
 10048  0059CC  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10049  0059CE  ECAD  F01D         	call	___lwmod	;wreg free
 10050  0059D2  51C8               	movf	?___lwmod& (0+255),w,b
 10051  0059D4  0F30               	addlw	48
 10052  0059D6  6EDF               	movwf	indf2,c
 10053                           
 10054                           ; BSR set to: 0
 10055                           ;MOTEapp.c: 1411: number /= 10;
 10056  0059D8  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10057  0059DC  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10058  0059E0  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10059  0059E2  0E0A               	movlw	10
 10060  0059E4  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 10061  0059E6  EC36  F01E         	call	___lwdiv	;wreg free
 10062  0059EA  C0C8  F0CF         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10063  0059EE  C0C9  F0D0         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;MOTEapp.c: 1412: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
 10067  0059F2  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10068  0059F4  0FA1               	addlw	low (_dataBuffer+3)
 10069  0059F6  6ED9               	movwf	fsr2l,c
 10070  0059F8  6ADA               	clrf	fsr2h,c
 10071  0059FA  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10072  0059FE  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10073  005A02  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10074  005A04  0E0A               	movlw	10
 10075  005A06  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10076  005A08  ECAD  F01D         	call	___lwmod	;wreg free
 10077  005A0C  51C8               	movf	?___lwmod& (0+255),w,b
 10078  005A0E  0F30               	addlw	48
 10079  005A10  6EDF               	movwf	indf2,c
 10080                           
 10081                           ;MOTEapp.c: 1413: number /= 10;
 10082  005A12  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10083  005A16  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10084  005A1A  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10085  005A1C  0E0A               	movlw	10
 10086  005A1E  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 10087  005A20  EC36  F01E         	call	___lwdiv	;wreg free
 10088  005A24  C0C8  F0CF         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10089  005A28  C0C9  F0D0         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;MOTEapp.c: 1414: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 10093  005A2C  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10094  005A2E  0FA0               	addlw	low (_dataBuffer+2)
 10095  005A30  6ED9               	movwf	fsr2l,c
 10096  005A32  6ADA               	clrf	fsr2h,c
 10097  005A34  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10098  005A38  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10099  005A3C  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10100  005A3E  0E0A               	movlw	10
 10101  005A40  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10102  005A42  ECAD  F01D         	call	___lwmod	;wreg free
 10103  005A46  51C8               	movf	?___lwmod& (0+255),w,b
 10104  005A48  0F30               	addlw	48
 10105  005A4A  6EDF               	movwf	indf2,c
 10106                           
 10107                           ; BSR set to: 0
 10108                           ;MOTEapp.c: 1415: number /= 10;
 10109  005A4C  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10110  005A50  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10111  005A54  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10112  005A56  0E0A               	movlw	10
 10113  005A58  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 10114  005A5A  EC36  F01E         	call	___lwdiv	;wreg free
 10115  005A5E  C0C8  F0CF         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10116  005A62  C0C9  F0D0         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10117                           
 10118                           ;MOTEapp.c: 1416: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 10119  005A66  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10120  005A68  0F9F               	addlw	low (_dataBuffer+1)
 10121  005A6A  6ED9               	movwf	fsr2l,c
 10122  005A6C  6ADA               	clrf	fsr2h,c
 10123  005A6E  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10124  005A72  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10125  005A76  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10126  005A78  0E0A               	movlw	10
 10127  005A7A  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10128  005A7C  ECAD  F01D         	call	___lwmod	;wreg free
 10129  005A80  51C8               	movf	?___lwmod& (0+255),w,b
 10130  005A82  0F30               	addlw	48
 10131  005A84  6EDF               	movwf	indf2,c
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;MOTEapp.c: 1417: number /= 10;
 10135  005A86  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 10136  005A8A  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 10137  005A8E  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10138  005A90  0E0A               	movlw	10
 10139  005A92  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 10140  005A94  EC36  F01E         	call	___lwdiv	;wreg free
 10141  005A98  C0C8  F0CF         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 10142  005A9C  C0C9  F0D0         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;MOTEapp.c: 1418: dataBuffer[bufferLocation] = '0' + (number % 10);
 10146  005AA0  51D1               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 10147  005AA2  0F9E               	addlw	low _dataBuffer
 10148  005AA4  6ED9               	movwf	fsr2l,c
 10149  005AA6  6ADA               	clrf	fsr2h,c
 10150  005AA8  C0CF  F0C8         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 10151  005AAC  C0D0  F0C9         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 10152  005AB0  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 10153  005AB2  0E0A               	movlw	10
 10154  005AB4  6FCA               	movwf	___lwmod@divisor& (0+255),b
 10155  005AB6  ECAD  F01D         	call	___lwmod	;wreg free
 10156  005ABA  51C8               	movf	?___lwmod& (0+255),w,b
 10157  005ABC  0F30               	addlw	48
 10158  005ABE  6EDF               	movwf	indf2,c
 10159                           
 10160                           ; BSR set to: 0
 10161  005AC0  0012               	return		;funcret
 10162  005AC2                     __end_of_moteApp_add16bToDataBuffer:
 10163                           	opt stack 0
 10164                           tblptru	equ	0xFF8
 10165                           tblptrh	equ	0xFF7
 10166                           tblptrl	equ	0xFF6
 10167                           tablat	equ	0xFF5
 10168                           prodl	equ	0xFF3
 10169                           intcon	equ	0xFF2
 10170                           postinc0	equ	0xFEE
 10171                           wreg	equ	0xFE8
 10172                           postdec1	equ	0xFE5
 10173                           fsr1l	equ	0xFE1
 10174                           indf2	equ	0xFDF
 10175                           fsr2h	equ	0xFDA
 10176                           fsr2l	equ	0xFD9
 10177                           status	equ	0xFD8
 10178                           
 10179 ;; *************** function _moteApp_GoToSleep *****************
 10180 ;; Defined at:
 10181 ;;		line 1292 in file "../Includes/Board/MOTEapp.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;		None
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  status          1   15[BANK0 ] unsigned char 
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      unsigned char 
 10188 ;; Registers used:
 10189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10190 ;; Tracked objects:
 10191 ;;		On entry : F/0
 10192 ;;		On exit  : F/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10195 ;;      Params:         0       0       0       0       0       0       0       0       0
 10196 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10197 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10198 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10199 ;;Total ram usage:        1 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:   18
 10202 ;; This function calls:
 10203 ;;		_EUSART_FlushBuffer
 10204 ;;		_EUSART_Initialize
 10205 ;;		_PIN_MANAGER_Initialize
 10206 ;;		_modemResync
 10207 ;;		_modemSleep
 10208 ;;		_oled_displayOff
 10209 ;;		_oled_init
 10210 ;; This function is called by:
 10211 ;;		_moteRunningProcess
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215                           	psect	text21
 10216  004458                     __ptext21:
 10217                           	opt stack 0
 10218  004458                     _moteApp_GoToSleep:
 10219                           	opt stack 10
 10220  004458                     l696:
 10221                           
 10222                           ; BSR set to: 0
 10223  004458  A282               	btfss	3970,1,c	;volatile
 10224  00445A  D7FE               	goto	l696
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;MOTEapp.c: 1296: modemSleep();
 10228  00445C  EC13  F01B         	call	_modemSleep	;wreg free
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;MOTEapp.c: 1297: oled_displayOff(1);
 10232  004460  0E01               	movlw	1
 10233  004462  ECB3  F01A         	call	_oled_displayOff
 10234                           
 10235                           ;MOTEapp.c: 1298: ADCON0bits.ADON = 0;
 10236  004466  90C2               	bcf	4034,0,c	;volatile
 10237                           
 10238                           ;MOTEapp.c: 1299: INTCONbits.GIE = 0;
 10239  004468  9EF2               	bcf	intcon,7,c	;volatile
 10240                           
 10241                           ;MOTEapp.c: 1300: GIE = 0;
 10242  00446A  9EF2               	bcf	intcon,7,c	;volatile
 10243                           
 10244                           ;MOTEapp.c: 1301: PEIE = 0;
 10245  00446C  9CF2               	bcf	intcon,6,c	;volatile
 10246                           
 10247                           ;MOTEapp.c: 1303: ANSELAbits.ANSA0 = 1;
 10248  00446E  010F               	movlb	15	; () banked
 10249  004470  815B               	bsf	91,0,b	;volatile
 10250                           
 10251                           ; BSR set to: 15
 10252                           ;MOTEapp.c: 1305: PIE2bits.C1IE = 1;
 10253  004472  8CA0               	bsf	4000,6,c	;volatile
 10254                           
 10255                           ; BSR set to: 15
 10256                           ;MOTEapp.c: 1306: IOCCbits.IOCC0 = 1;
 10257  004474  8087               	bsf	3975,0,c	;volatile
 10258                           
 10259                           ; BSR set to: 15
 10260                           ;MOTEapp.c: 1307: IOCCbits.IOCC1 = 1;
 10261  004476  8287               	bsf	3975,1,c	;volatile
 10262                           
 10263                           ; BSR set to: 15
 10264                           ;MOTEapp.c: 1308: IOCCbits.IOCC2 = 1;
 10265  004478  8487               	bsf	3975,2,c	;volatile
 10266                           
 10267                           ; BSR set to: 15
 10268                           ;MOTEapp.c: 1309: INTCONbits.IOCIE = 1;
 10269  00447A  86F2               	bsf	intcon,3,c	;volatile
 10270                           
 10271                           ; BSR set to: 15
 10272  00447C  5082               	movf	3970,w,c	;volatile
 10273                           
 10274                           ; BSR set to: 15
 10275  00447E  5082               	movf	3970,w,c	;volatile
 10276                           
 10277                           ; BSR set to: 15
 10278  004480  5082               	movf	3970,w,c	;volatile
 10279                           
 10280                           ; BSR set to: 15
 10281                           ;MOTEapp.c: 1314: if (periodicState)
 10282  004482  0100               	movlb	0	; () banked
 10283  004484  51F9               	movf	_periodicState& (0+255),w,b
 10284  004486  E001               	bz	l699
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;MOTEapp.c: 1315: {
 10288                           ;MOTEapp.c: 1316: WDTCONbits.SWDTEN = 1;
 10289  004488  80D1               	bsf	4049,0,c	;volatile
 10290  00448A                     l699:
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;MOTEapp.c: 1317: }
 10294                           ;MOTEapp.c: 1318: INTCONbits.IOCIF = 0;
 10295  00448A  90F2               	bcf	intcon,0,c	;volatile
 10296                           
 10297                           ;MOTEapp.c: 1319: PIR2bits.C1IF = 0;
 10298  00448C  9CA1               	bcf	4001,6,c	;volatile
 10299                           
 10300                           ;MOTEapp.c: 1320: __nop();
 10301  00448E  F000               	nop	
 10302  004490  0003               	sleep		;# 
 10303                           
 10304                           ;MOTEapp.c: 1322: __nop();
 10305  004492  F000               	nop	
 10306                           
 10307                           ;MOTEapp.c: 1324: WDTCONbits.SWDTEN = 0;
 10308  004494  90D1               	bcf	4049,0,c	;volatile
 10309                           
 10310                           ;MOTEapp.c: 1325: EUSART_FlushBuffer();
 10311  004496  EC9F  F01C         	call	_EUSART_FlushBuffer	;wreg free
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;MOTEapp.c: 1327: INTCONbits.IOCIE = 0;
 10315  00449A  96F2               	bcf	intcon,3,c	;volatile
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;MOTEapp.c: 1328: IOCCbits.IOCC0 = 0;
 10319  00449C  9087               	bcf	3975,0,c	;volatile
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;MOTEapp.c: 1329: IOCCbits.IOCC1 = 0;
 10323  00449E  9287               	bcf	3975,1,c	;volatile
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;MOTEapp.c: 1330: IOCCbits.IOCC2 = 0;
 10327  0044A0  9487               	bcf	3975,2,c	;volatile
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;MOTEapp.c: 1331: PIE2bits.C1IE = 0;
 10331  0044A2  9CA0               	bcf	4000,6,c	;volatile
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;MOTEapp.c: 1332: GIE = 1;
 10335  0044A4  8EF2               	bsf	intcon,7,c	;volatile
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;MOTEapp.c: 1334: PIN_MANAGER_Initialize();
 10339  0044A6  ECEE  F01D         	call	_PIN_MANAGER_Initialize	;wreg free
 10340                           
 10341                           ; BSR set to: 15
 10342                           ;MOTEapp.c: 1335: EUSART_Initialize();
 10343  0044AA  EC5D  F01C         	call	_EUSART_Initialize	;wreg free
 10344                           
 10345                           ;MOTEapp.c: 1337: if (INTCONbits.IOCIF)
 10346  0044AE  A0F2               	btfss	intcon,0,c	;volatile
 10347  0044B0  D005               	goto	l10534
 10348                           
 10349                           ;MOTEapp.c: 1338: {
 10350                           ;MOTEapp.c: 1339: INTCONbits.IOCIF = 0;
 10351  0044B2  90F2               	bcf	intcon,0,c	;volatile
 10352                           
 10353                           ;MOTEapp.c: 1340: status = 1;
 10354  0044B4  0E01               	movlw	1
 10355  0044B6  0100               	movlb	0	; () banked
 10356  0044B8  6FD7               	movwf	moteApp_GoToSleep@status& (0+255),b
 10357                           
 10358                           ;MOTEapp.c: 1341: }
 10359  0044BA  D004               	goto	l10538
 10360  0044BC                     l10534:
 10361                           
 10362                           ;MOTEapp.c: 1347: else
 10363                           ;MOTEapp.c: 1348: {
 10364                           ;MOTEapp.c: 1349: secTicker = 10;
 10365  0044BC  0E0A               	movlw	10
 10366  0044BE  0100               	movlb	0	; () banked
 10367  0044C0  6F99               	movwf	_secTicker& (0+255),b
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;MOTEapp.c: 1350: status = 0;
 10371  0044C2  6BD7               	clrf	moteApp_GoToSleep@status& (0+255),b
 10372  0044C4                     l10538:
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;MOTEapp.c: 1351: }
 10376                           ;MOTEapp.c: 1352: ANSELAbits.ANSA0 = 0;
 10377  0044C4  010F               	movlb	15	; () banked
 10378  0044C6  915B               	bcf	91,0,b	;volatile
 10379                           
 10380                           ; BSR set to: 15
 10381                           ;MOTEapp.c: 1353: oled_displayOff(0);
 10382  0044C8  0E00               	movlw	0
 10383  0044CA  ECB3  F01A         	call	_oled_displayOff
 10384                           
 10385                           ;MOTEapp.c: 1354: oled_init();
 10386  0044CE  EC80  F01B         	call	_oled_init	;wreg free
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;MOTEapp.c: 1356: modemResync();
 10390  0044D2  EC33  F020         	call	_modemResync	;wreg free
 10391                           
 10392                           ; BSR set to: 0
 10393                           ;MOTEapp.c: 1357: return status;
 10394  0044D6  51D7               	movf	moteApp_GoToSleep@status& (0+255),w,b
 10395                           
 10396                           ; BSR set to: 0
 10397  0044D8  0012               	return		;funcret
 10398  0044DA                     __end_of_moteApp_GoToSleep:
 10399                           	opt stack 0
 10400                           tblptru	equ	0xFF8
 10401                           tblptrh	equ	0xFF7
 10402                           tblptrl	equ	0xFF6
 10403                           tablat	equ	0xFF5
 10404                           prodl	equ	0xFF3
 10405                           intcon	equ	0xFF2
 10406                           postinc0	equ	0xFEE
 10407                           wreg	equ	0xFE8
 10408                           postdec1	equ	0xFE5
 10409                           fsr1l	equ	0xFE1
 10410                           indf2	equ	0xFDF
 10411                           fsr2h	equ	0xFDA
 10412                           fsr2l	equ	0xFD9
 10413                           status	equ	0xFD8
 10414                           
 10415 ;; *************** function _oled_init *****************
 10416 ;; Defined at:
 10417 ;;		line 308 in file "../Includes/Drivers/SSD1306oLED.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;		None
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;		None
 10422 ;; Return value:  Size  Location     Type
 10423 ;;		None               void
 10424 ;; Registers used:
 10425 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : F/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10431 ;;      Params:         0       0       0       0       0       0       0       0       0
 10432 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10433 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10434 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10435 ;;Total ram usage:        0 bytes
 10436 ;; Hardware stack levels used:    1
 10437 ;; Hardware stack levels required when called:   17
 10438 ;; This function calls:
 10439 ;;		_oled_clear
 10440 ;;		_oled_devInit
 10441 ;;		_oled_setDisplay
 10442 ;;		_oled_setFont
 10443 ;; This function is called by:
 10444 ;;		_main
 10445 ;;		_moteApp_GoToSleep
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449                           	psect	text22
 10450  003700                     __ptext22:
 10451                           	opt stack 0
 10452  003700                     _oled_init:
 10453                           	opt stack 13
 10454                           
 10455                           ;SSD1306oLED.c: 311: TRISBbits.TRISB2=0;
 10456                           
 10457                           ; BSR set to: 0
 10458                           ;incstack = 0
 10459  003700  9493               	bcf	3987,2,c	;volatile
 10460                           
 10461                           ;SSD1306oLED.c: 312: TRISBbits.TRISB4=0;
 10462  003702  9893               	bcf	3987,4,c	;volatile
 10463                           
 10464                           ;SSD1306oLED.c: 313: TRISBbits.TRISB5=0;
 10465  003704  9A93               	bcf	3987,5,c	;volatile
 10466                           
 10467                           ;SSD1306oLED.c: 315: oled_devInit();
 10468  003706  EC1E  F029         	call	_oled_devInit	;wreg free
 10469                           
 10470                           ;SSD1306oLED.c: 316: oled_setDisplay(Normal);
 10471  00370A  0E00               	movlw	0
 10472  00370C  ECD9  F01A         	call	_oled_setDisplay
 10473                           
 10474                           ;SSD1306oLED.c: 318: oled_setFont(OledFont0);
 10475  003710  0E49               	movlw	low _OledFont0
 10476  003712  0100               	movlb	0	; () banked
 10477  003714  6FC8               	movwf	oled_setFont@font& (0+255),b
 10478  003716  0E76               	movlw	high _OledFont0
 10479  003718  6FC9               	movwf	(oled_setFont@font+1)& (0+255),b
 10480  00371A  ECBC  F01A         	call	_oled_setFont	;wreg free
 10481                           
 10482                           ; BSR set to: 0
 10483                           ;SSD1306oLED.c: 319: oled_clear();
 10484  00371E  EFF9  F01A         	goto	_oled_clear	;wreg free
 10485  003722                     __end_of_oled_init:
 10486                           	opt stack 0
 10487                           tblptru	equ	0xFF8
 10488                           tblptrh	equ	0xFF7
 10489                           tblptrl	equ	0xFF6
 10490                           tablat	equ	0xFF5
 10491                           prodl	equ	0xFF3
 10492                           intcon	equ	0xFF2
 10493                           postinc0	equ	0xFEE
 10494                           wreg	equ	0xFE8
 10495                           postdec1	equ	0xFE5
 10496                           fsr1l	equ	0xFE1
 10497                           indf2	equ	0xFDF
 10498                           fsr2h	equ	0xFDA
 10499                           fsr2l	equ	0xFD9
 10500                           status	equ	0xFD8
 10501                           
 10502 ;; *************** function _oled_setFont *****************
 10503 ;; Defined at:
 10504 ;;		line 218 in file "../Includes/Drivers/SSD1306oLED.c"
 10505 ;; Parameters:    Size  Location     Type
 10506 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 10507 ;;		 -> OledFont0(768), 
 10508 ;; Auto vars:     Size  Location     Type
 10509 ;;		None
 10510 ;; Return value:  Size  Location     Type
 10511 ;;		None               void
 10512 ;; Registers used:
 10513 ;;		wreg, status,2, status,0
 10514 ;; Tracked objects:
 10515 ;;		On entry : F/0
 10516 ;;		On exit  : F/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10519 ;;      Params:         0       2       0       0       0       0       0       0       0
 10520 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10521 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10522 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10523 ;;Total ram usage:        2 bytes
 10524 ;; Hardware stack levels used:    1
 10525 ;; Hardware stack levels required when called:   11
 10526 ;; This function calls:
 10527 ;;		Nothing
 10528 ;; This function is called by:
 10529 ;;		_oled_init
 10530 ;; This function uses a non-reentrant model
 10531 ;;
 10532                           
 10533                           	psect	text23
 10534  003578                     __ptext23:
 10535                           	opt stack 0
 10536  003578                     _oled_setFont:
 10537                           	opt stack 18
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;SSD1306oLED.c: 220: if(font!=0)
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;incstack = 0
 10544  003578  51C8               	movf	oled_setFont@font& (0+255),w,b
 10545  00357A  11C9               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 10546  00357C  B4D8               	btfsc	status,2,c
 10547  00357E  0012               	return	
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;SSD1306oLED.c: 221: {
 10551                           ;SSD1306oLED.c: 222: selectedFont=font;
 10552  003580  C0C8  F0F5         	movff	oled_setFont@font,_selectedFont
 10553  003584  C0C9  F0F6         	movff	oled_setFont@font+1,_selectedFont+1
 10554                           
 10555                           ; BSR set to: 0
 10556  003588  0012               	return		;funcret
 10557  00358A                     __end_of_oled_setFont:
 10558                           	opt stack 0
 10559                           tblptru	equ	0xFF8
 10560                           tblptrh	equ	0xFF7
 10561                           tblptrl	equ	0xFF6
 10562                           tablat	equ	0xFF5
 10563                           prodl	equ	0xFF3
 10564                           intcon	equ	0xFF2
 10565                           postinc0	equ	0xFEE
 10566                           wreg	equ	0xFE8
 10567                           postdec1	equ	0xFE5
 10568                           fsr1l	equ	0xFE1
 10569                           indf2	equ	0xFDF
 10570                           fsr2h	equ	0xFDA
 10571                           fsr2l	equ	0xFD9
 10572                           status	equ	0xFD8
 10573                           
 10574 ;; *************** function _oled_setDisplay *****************
 10575 ;; Defined at:
 10576 ;;		line 383 in file "../Includes/Drivers/SSD1306oLED.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;  displayType     1    wreg     enum E6453
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;  displayType     1    2[BANK0 ] enum E6453
 10581 ;; Return value:  Size  Location     Type
 10582 ;;		None               void
 10583 ;; Registers used:
 10584 ;;		wreg, status,2, status,0, cstack
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10590 ;;      Params:         0       0       0       0       0       0       0       0       0
 10591 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10592 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10593 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10594 ;;Total ram usage:        1 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; Hardware stack levels required when called:   13
 10597 ;; This function calls:
 10598 ;;		_oled_writeCommand
 10599 ;; This function is called by:
 10600 ;;		_oled_init
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604                           	psect	text24
 10605  0035B2                     __ptext24:
 10606                           	opt stack 0
 10607  0035B2                     _oled_setDisplay:
 10608                           	opt stack 16
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;incstack = 0
 10612                           ;oled_setDisplay@displayType stored from wreg
 10613  0035B2  0100               	movlb	0	; () banked
 10614  0035B4  6FCA               	movwf	oled_setDisplay@displayType& (0+255),b
 10615                           
 10616                           ;SSD1306oLED.c: 385: displayType = 0xA6 + displayType;
 10617  0035B6  0EA6               	movlw	166
 10618  0035B8  27CA               	addwf	oled_setDisplay@displayType& (0+255),f,b
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;SSD1306oLED.c: 387: LATBbits.LATB4 = 0;
 10622  0035BA  988A               	bcf	3978,4,c	;volatile
 10623                           
 10624                           ; BSR set to: 0
 10625                           ;SSD1306oLED.c: 389: oled_writeCommand(displayType);
 10626  0035BC  51CA               	movf	oled_setDisplay@displayType& (0+255),w,b
 10627  0035BE  EC7A  F01A         	call	_oled_writeCommand
 10628                           
 10629                           ;SSD1306oLED.c: 391: LATBbits.LATB4 = 1;
 10630  0035C2  888A               	bsf	3978,4,c	;volatile
 10631  0035C4  0012               	return		;funcret
 10632  0035C6                     __end_of_oled_setDisplay:
 10633                           	opt stack 0
 10634                           tblptru	equ	0xFF8
 10635                           tblptrh	equ	0xFF7
 10636                           tblptrl	equ	0xFF6
 10637                           tablat	equ	0xFF5
 10638                           prodl	equ	0xFF3
 10639                           intcon	equ	0xFF2
 10640                           postinc0	equ	0xFEE
 10641                           wreg	equ	0xFE8
 10642                           postdec1	equ	0xFE5
 10643                           fsr1l	equ	0xFE1
 10644                           indf2	equ	0xFDF
 10645                           fsr2h	equ	0xFDA
 10646                           fsr2l	equ	0xFD9
 10647                           status	equ	0xFD8
 10648                           
 10649 ;; *************** function _oled_devInit *****************
 10650 ;; Defined at:
 10651 ;;		line 322 in file "../Includes/Drivers/SSD1306oLED.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;		None
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;		None
 10656 ;; Return value:  Size  Location     Type
 10657 ;;		None               void
 10658 ;; Registers used:
 10659 ;;		wreg, status,2, cstack
 10660 ;; Tracked objects:
 10661 ;;		On entry : 0/0
 10662 ;;		On exit  : 0/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10665 ;;      Params:         0       0       0       0       0       0       0       0       0
 10666 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10667 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10668 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10669 ;;Total ram usage:        1 bytes
 10670 ;; Hardware stack levels used:    1
 10671 ;; Hardware stack levels required when called:   13
 10672 ;; This function calls:
 10673 ;;		_oled_writeCommand
 10674 ;; This function is called by:
 10675 ;;		_oled_init
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679                           	psect	text25
 10680  00523C                     __ptext25:
 10681                           	opt stack 0
 10682  00523C                     _oled_devInit:
 10683                           	opt stack 16
 10684                           
 10685                           ;SSD1306oLED.c: 324: LATBbits.LATB4 = 1;
 10686                           
 10687                           ;incstack = 0
 10688  00523C  888A               	bsf	3978,4,c	;volatile
 10689                           
 10690                           ;SSD1306oLED.c: 326: LATBbits.LATB5 = 1;
 10691  00523E  8A8A               	bsf	3978,5,c	;volatile
 10692                           
 10693                           ;SSD1306oLED.c: 330: LATBbits.LATB2 = 1;
 10694  005240  848A               	bsf	3978,2,c	;volatile
 10695                           
 10696                           ;SSD1306oLED.c: 331: _delay((unsigned long)((20)*(48000000/4000000.0)));
 10697  005242  0E50               	movlw	80
 10698  005244                     u10587:
 10699  005244  2EE8               	decfsz	wreg,f,c
 10700  005246  D7FE               	goto	u10587
 10701                           
 10702                           ;SSD1306oLED.c: 332: LATBbits.LATB2 = 0;
 10703  005248  948A               	bcf	3978,2,c	;volatile
 10704                           
 10705                           ;SSD1306oLED.c: 333: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10706  00524A  0E04               	movlw	4
 10707  00524C  0100               	movlb	0	; () banked
 10708  00524E  6FCA               	movwf	??_oled_devInit& (0+255),b
 10709  005250  0E1C               	movlw	28
 10710  005252                     u10597:
 10711  005252  2EE8               	decfsz	wreg,f,c
 10712  005254  D7FE               	goto	u10597
 10713  005256  2FCA               	decfsz	??_oled_devInit& (0+255),f,b
 10714  005258  D7FC               	goto	u10597
 10715  00525A  D000               	nop2	
 10716                           
 10717                           ;SSD1306oLED.c: 334: LATBbits.LATB2 = 1;
 10718  00525C  848A               	bsf	3978,2,c	;volatile
 10719                           
 10720                           ;SSD1306oLED.c: 336: LATBbits.LATB4 = 0;
 10721  00525E  988A               	bcf	3978,4,c	;volatile
 10722                           
 10723                           ;SSD1306oLED.c: 337: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10724  005260  0E04               	movlw	4
 10725  005262  0100               	movlb	0	; () banked
 10726  005264  6FCA               	movwf	??_oled_devInit& (0+255),b
 10727  005266  0E1C               	movlw	28
 10728  005268                     u10607:
 10729  005268  2EE8               	decfsz	wreg,f,c
 10730  00526A  D7FE               	goto	u10607
 10731  00526C  2FCA               	decfsz	??_oled_devInit& (0+255),f,b
 10732  00526E  D7FC               	goto	u10607
 10733  005270  D000               	nop2	
 10734                           
 10735                           ;SSD1306oLED.c: 338: LATBbits.LATB5 = 0;
 10736  005272  9A8A               	bcf	3978,5,c	;volatile
 10737                           
 10738                           ;SSD1306oLED.c: 339: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10739  005274  0E04               	movlw	4
 10740  005276  0100               	movlb	0	; () banked
 10741  005278  6FCA               	movwf	??_oled_devInit& (0+255),b
 10742  00527A  0E1C               	movlw	28
 10743  00527C                     u10617:
 10744  00527C  2EE8               	decfsz	wreg,f,c
 10745  00527E  D7FE               	goto	u10617
 10746  005280  2FCA               	decfsz	??_oled_devInit& (0+255),f,b
 10747  005282  D7FC               	goto	u10617
 10748  005284  D000               	nop2	
 10749                           
 10750                           ;SSD1306oLED.c: 342: oled_writeCommand(0xAE);
 10751  005286  0EAE               	movlw	174
 10752  005288  EC7A  F01A         	call	_oled_writeCommand
 10753                           
 10754                           ;SSD1306oLED.c: 344: oled_writeCommand(0xD5);
 10755  00528C  0ED5               	movlw	213
 10756  00528E  EC7A  F01A         	call	_oled_writeCommand
 10757                           
 10758                           ;SSD1306oLED.c: 345: oled_writeCommand(0x80);
 10759  005292  0E80               	movlw	128
 10760  005294  EC7A  F01A         	call	_oled_writeCommand
 10761                           
 10762                           ;SSD1306oLED.c: 347: oled_writeCommand(0xA8);
 10763  005298  0EA8               	movlw	168
 10764  00529A  EC7A  F01A         	call	_oled_writeCommand
 10765                           
 10766                           ;SSD1306oLED.c: 348: oled_writeCommand(0x1F);
 10767  00529E  0E1F               	movlw	31
 10768  0052A0  EC7A  F01A         	call	_oled_writeCommand
 10769                           
 10770                           ;SSD1306oLED.c: 350: oled_writeCommand(0xD3);
 10771  0052A4  0ED3               	movlw	211
 10772  0052A6  EC7A  F01A         	call	_oled_writeCommand
 10773                           
 10774                           ;SSD1306oLED.c: 351: oled_writeCommand(0x00);
 10775  0052AA  0E00               	movlw	0
 10776  0052AC  EC7A  F01A         	call	_oled_writeCommand
 10777                           
 10778                           ;SSD1306oLED.c: 353: oled_writeCommand(0x8D);
 10779  0052B0  0E8D               	movlw	141
 10780  0052B2  EC7A  F01A         	call	_oled_writeCommand
 10781                           
 10782                           ;SSD1306oLED.c: 354: oled_writeCommand(0x14);
 10783  0052B6  0E14               	movlw	20
 10784  0052B8  EC7A  F01A         	call	_oled_writeCommand
 10785                           
 10786                           ;SSD1306oLED.c: 356: oled_writeCommand(0x40);
 10787  0052BC  0E40               	movlw	64
 10788  0052BE  EC7A  F01A         	call	_oled_writeCommand
 10789                           
 10790                           ;SSD1306oLED.c: 358: oled_writeCommand(0xA6);
 10791  0052C2  0EA6               	movlw	166
 10792  0052C4  EC7A  F01A         	call	_oled_writeCommand
 10793                           
 10794                           ;SSD1306oLED.c: 360: oled_writeCommand(0xA4);
 10795  0052C8  0EA4               	movlw	164
 10796  0052CA  EC7A  F01A         	call	_oled_writeCommand
 10797                           
 10798                           ;SSD1306oLED.c: 362: oled_writeCommand(0xA0);
 10799  0052CE  0EA0               	movlw	160
 10800  0052D0  EC7A  F01A         	call	_oled_writeCommand
 10801                           
 10802                           ;SSD1306oLED.c: 364: oled_writeCommand(0xC0);
 10803  0052D4  0EC0               	movlw	192
 10804  0052D6  EC7A  F01A         	call	_oled_writeCommand
 10805                           
 10806                           ;SSD1306oLED.c: 366: oled_writeCommand(0xDA);
 10807  0052DA  0EDA               	movlw	218
 10808  0052DC  EC7A  F01A         	call	_oled_writeCommand
 10809                           
 10810                           ;SSD1306oLED.c: 367: oled_writeCommand(0x42);
 10811  0052E0  0E42               	movlw	66
 10812  0052E2  EC7A  F01A         	call	_oled_writeCommand
 10813                           
 10814                           ;SSD1306oLED.c: 369: oled_writeCommand(0x81);
 10815  0052E6  0E81               	movlw	129
 10816  0052E8  EC7A  F01A         	call	_oled_writeCommand
 10817                           
 10818                           ;SSD1306oLED.c: 370: oled_writeCommand(0x7F);
 10819  0052EC  0E7F               	movlw	127
 10820  0052EE  EC7A  F01A         	call	_oled_writeCommand
 10821                           
 10822                           ;SSD1306oLED.c: 372: oled_writeCommand(0xD9);
 10823  0052F2  0ED9               	movlw	217
 10824  0052F4  EC7A  F01A         	call	_oled_writeCommand
 10825                           
 10826                           ;SSD1306oLED.c: 373: oled_writeCommand(0xF1);
 10827  0052F8  0EF1               	movlw	241
 10828  0052FA  EC7A  F01A         	call	_oled_writeCommand
 10829                           
 10830                           ;SSD1306oLED.c: 375: oled_writeCommand(0xDB);
 10831  0052FE  0EDB               	movlw	219
 10832  005300  EC7A  F01A         	call	_oled_writeCommand
 10833                           
 10834                           ;SSD1306oLED.c: 376: oled_writeCommand(0x40);
 10835  005304  0E40               	movlw	64
 10836  005306  EC7A  F01A         	call	_oled_writeCommand
 10837                           
 10838                           ;SSD1306oLED.c: 378: oled_writeCommand(0xAF);
 10839  00530A  0EAF               	movlw	175
 10840  00530C  EC7A  F01A         	call	_oled_writeCommand
 10841                           
 10842                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 1;
 10843  005310  888A               	bsf	3978,4,c	;volatile
 10844  005312  0012               	return		;funcret
 10845  005314                     __end_of_oled_devInit:
 10846                           	opt stack 0
 10847                           tblptru	equ	0xFF8
 10848                           tblptrh	equ	0xFF7
 10849                           tblptrl	equ	0xFF6
 10850                           tablat	equ	0xFF5
 10851                           prodl	equ	0xFF3
 10852                           intcon	equ	0xFF2
 10853                           postinc0	equ	0xFEE
 10854                           wreg	equ	0xFE8
 10855                           postdec1	equ	0xFE5
 10856                           fsr1l	equ	0xFE1
 10857                           indf2	equ	0xFDF
 10858                           fsr2h	equ	0xFDA
 10859                           fsr2l	equ	0xFD9
 10860                           status	equ	0xFD8
 10861                           
 10862 ;; *************** function _oled_displayOff *****************
 10863 ;; Defined at:
 10864 ;;		line 394 in file "../Includes/Drivers/SSD1306oLED.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;  state           1    wreg     unsigned char 
 10867 ;; Auto vars:     Size  Location     Type
 10868 ;;  state           1    2[BANK0 ] unsigned char 
 10869 ;; Return value:  Size  Location     Type
 10870 ;;		None               void
 10871 ;; Registers used:
 10872 ;;		wreg, status,2, status,0, cstack
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10878 ;;      Params:         0       0       0       0       0       0       0       0       0
 10879 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10880 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10881 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10882 ;;Total ram usage:        1 bytes
 10883 ;; Hardware stack levels used:    1
 10884 ;; Hardware stack levels required when called:   13
 10885 ;; This function calls:
 10886 ;;		_oled_writeCommand
 10887 ;; This function is called by:
 10888 ;;		_moteApp_GoToSleep
 10889 ;; This function uses a non-reentrant model
 10890 ;;
 10891                           
 10892                           	psect	text26
 10893  003566                     __ptext26:
 10894                           	opt stack 0
 10895  003566                     _oled_displayOff:
 10896                           	opt stack 14
 10897                           
 10898                           ;incstack = 0
 10899                           ;oled_displayOff@state stored from wreg
 10900  003566  0100               	movlb	0	; () banked
 10901  003568  6FCA               	movwf	oled_displayOff@state& (0+255),b
 10902                           
 10903                           ;SSD1306oLED.c: 396: LATBbits.LATB4 = 0;
 10904  00356A  988A               	bcf	3978,4,c	;volatile
 10905                           
 10906                           ;SSD1306oLED.c: 397: oled_writeCommand(0xAF - state);
 10907  00356C  51CA               	movf	oled_displayOff@state& (0+255),w,b
 10908  00356E  08AF               	sublw	175
 10909  003570  EC7A  F01A         	call	_oled_writeCommand
 10910                           
 10911                           ;SSD1306oLED.c: 398: LATBbits.LATB4 = 1;
 10912  003574  888A               	bsf	3978,4,c	;volatile
 10913  003576  0012               	return		;funcret
 10914  003578                     __end_of_oled_displayOff:
 10915                           	opt stack 0
 10916                           tblptru	equ	0xFF8
 10917                           tblptrh	equ	0xFF7
 10918                           tblptrl	equ	0xFF6
 10919                           tablat	equ	0xFF5
 10920                           prodl	equ	0xFF3
 10921                           intcon	equ	0xFF2
 10922                           postinc0	equ	0xFEE
 10923                           wreg	equ	0xFE8
 10924                           postdec1	equ	0xFE5
 10925                           fsr1l	equ	0xFE1
 10926                           indf2	equ	0xFDF
 10927                           fsr2h	equ	0xFDA
 10928                           fsr2l	equ	0xFD9
 10929                           status	equ	0xFD8
 10930                           
 10931 ;; *************** function _modemSleep *****************
 10932 ;; Defined at:
 10933 ;;		line 146 in file "../Includes/Board/MOTEapp.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;		None
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;		None
 10938 ;; Return value:  Size  Location     Type
 10939 ;;		None               void
 10940 ;; Registers used:
 10941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10942 ;; Tracked objects:
 10943 ;;		On entry : F/0
 10944 ;;		On exit  : F/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10947 ;;      Params:         0       0       0       0       0       0       0       0       0
 10948 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10949 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10950 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10951 ;;Total ram usage:        0 bytes
 10952 ;; Hardware stack levels used:    1
 10953 ;; Hardware stack levels required when called:   14
 10954 ;; This function calls:
 10955 ;;		_moteApp_delayms
 10956 ;;		_sendCommand
 10957 ;; This function is called by:
 10958 ;;		_moteApp_GoToSleep
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           	psect	text27
 10963  003626                     __ptext27:
 10964                           	opt stack 0
 10965  003626                     _modemSleep:
 10966                           	opt stack 13
 10967                           
 10968                           ; BSR set to: 0
 10969                           ;MOTEapp.c: 148: sendCommand("sys sleep 999999999");
 10970                           
 10971                           ;incstack = 0
 10972  003626  0E72               	movlw	low STR_22
 10973  003628  6FC9               	movwf	sendCommand@string& (0+255),b
 10974  00362A  0E7A               	movlw	high STR_22
 10975  00362C  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 10976  00362E  EC32  F01C         	call	_sendCommand	;wreg free
 10977  003632                     l310:
 10978  003632  B89D               	btfsc	3997,4,c	;volatile
 10979  003634  D7FE               	goto	l310
 10980                           
 10981                           ;MOTEapp.c: 151: moteApp_delayms(20);
 10982  003636  0100               	movlb	0	; () banked
 10983  003638  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 10984  00363A  0E14               	movlw	20
 10985  00363C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 10986  00363E  EFCC  F01B         	goto	_moteApp_delayms	;wreg free
 10987  003642                     __end_of_modemSleep:
 10988                           	opt stack 0
 10989                           tblptru	equ	0xFF8
 10990                           tblptrh	equ	0xFF7
 10991                           tblptrl	equ	0xFF6
 10992                           tablat	equ	0xFF5
 10993                           prodl	equ	0xFF3
 10994                           intcon	equ	0xFF2
 10995                           postinc0	equ	0xFEE
 10996                           wreg	equ	0xFE8
 10997                           postdec1	equ	0xFE5
 10998                           fsr1l	equ	0xFE1
 10999                           indf2	equ	0xFDF
 11000                           fsr2h	equ	0xFDA
 11001                           fsr2l	equ	0xFD9
 11002                           status	equ	0xFD8
 11003                           
 11004 ;; *************** function _modemResync *****************
 11005 ;; Defined at:
 11006 ;;		line 109 in file "../Includes/Board/MOTEapp.c"
 11007 ;; Parameters:    Size  Location     Type
 11008 ;;		None
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 11011 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 11012 ;; Return value:  Size  Location     Type
 11013 ;;		None               void
 11014 ;; Registers used:
 11015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11016 ;; Tracked objects:
 11017 ;;		On entry : F/0
 11018 ;;		On exit  : F/0
 11019 ;;		Unchanged: 0/0
 11020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11021 ;;      Params:         0       0       0       0       0       0       0       0       0
 11022 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11024 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11025 ;;Total ram usage:        3 bytes
 11026 ;; Hardware stack levels used:    1
 11027 ;; Hardware stack levels required when called:   14
 11028 ;; This function calls:
 11029 ;;		_MOTEapp_getModemResponse
 11030 ;;		_moteApp_delayms
 11031 ;;		_sendCommand
 11032 ;; This function is called by:
 11033 ;;		_main
 11034 ;;		_moteApp_GoToSleep
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text28
 11039  004066                     __ptext28:
 11040                           	opt stack 0
 11041  004066                     _modemResync:
 11042                           	opt stack 13
 11043                           
 11044                           ; BSR set to: 0
 11045                           ;MOTEapp.c: 111: bool escapeEvent = 0;
 11046                           
 11047                           ; BSR set to: 0
 11048                           ;incstack = 0
 11049  004066  6BCF               	clrf	modemResync@escapeEvent& (0+255),b
 11050                           
 11051                           ;MOTEapp.c: 112: uint16_t escapeCounter = 0;
 11052  004068  6BCD               	clrf	modemResync@escapeCounter& (0+255),b
 11053  00406A  6BCE               	clrf	(modemResync@escapeCounter+1)& (0+255),b
 11054                           
 11055                           ;MOTEapp.c: 120: TXSTAbits.TXEN = 0;
 11056  00406C  9AAC               	bcf	4012,5,c	;volatile
 11057                           
 11058                           ;MOTEapp.c: 121: LATCbits.LATC6 = 0;
 11059  00406E  9C8B               	bcf	3979,6,c	;volatile
 11060                           
 11061                           ; BSR set to: 0
 11062                           ;MOTEapp.c: 122: moteApp_delayms(10);
 11063  004070  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11064  004072  0E0A               	movlw	10
 11065  004074  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11066  004076  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;MOTEapp.c: 127: TXSTAbits.TXEN = 1;
 11070  00407A  8AAC               	bsf	4012,5,c	;volatile
 11071                           
 11072                           ;MOTEapp.c: 128: moteApp_delayms(5);
 11073  00407C  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11074  00407E  0E05               	movlw	5
 11075  004080  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11076  004082  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 11077                           
 11078                           ; BSR set to: 0
 11079                           ;MOTEapp.c: 130: TXREG = 0x55;
 11080  004086  0E55               	movlw	85
 11081  004088  6EAD               	movwf	4013,c	;volatile
 11082  00408A                     l298:
 11083                           
 11084                           ; BSR set to: 0
 11085  00408A  A2AC               	btfss	4012,1,c	;volatile
 11086  00408C  D7FE               	goto	l298
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;MOTEapp.c: 134: sendCommand("z");
 11090  00408E  0EFD               	movlw	low STR_21
 11091  004090  6FC9               	movwf	sendCommand@string& (0+255),b
 11092  004092  0E7F               	movlw	high STR_21
 11093  004094  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 11094  004096  EC32  F01C         	call	_sendCommand	;wreg free
 11095                           
 11096                           ;MOTEapp.c: 136: moteApp_delayms(40);
 11097  00409A  0100               	movlb	0	; () banked
 11098  00409C  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11099  00409E  0E28               	movlw	40
 11100  0040A0  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11101  0040A2  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 11102                           
 11103                           ;MOTEapp.c: 137: while (escapeEvent)
 11104  0040A6  D00E               	goto	l301
 11105  0040A8                     l10008:
 11106                           
 11107                           ; BSR set to: 0
 11108                           ;MOTEapp.c: 138: {
 11109                           ;MOTEapp.c: 139: if(MOTEapp_getModemResponse())
 11110  0040A8  EC5B  F01E         	call	_MOTEapp_getModemResponse	;wreg free
 11111  0040AC  0900               	iorlw	0
 11112  0040AE  E003               	bz	l10012
 11113  0040B0                     l10010:
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;MOTEapp.c: 140: escapeEvent = 1;
 11117  0040B0  0E01               	movlw	1
 11118  0040B2  6FCF               	movwf	modemResync@escapeEvent& (0+255),b
 11119  0040B4  D007               	goto	l301
 11120  0040B6                     l10012:
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;MOTEapp.c: 141: else if (++escapeCounter > 5000)
 11124  0040B6  4BCD               	infsnz	modemResync@escapeCounter& (0+255),f,b
 11125  0040B8  2BCE               	incf	(modemResync@escapeCounter+1)& (0+255),f,b
 11126  0040BA  0E89               	movlw	137
 11127  0040BC  5DCD               	subwf	modemResync@escapeCounter& (0+255),w,b
 11128  0040BE  0E13               	movlw	19
 11129  0040C0  59CE               	subwfb	(modemResync@escapeCounter+1)& (0+255),w,b
 11130  0040C2  E2F6               	bc	l10010
 11131  0040C4                     l301:
 11132                           
 11133                           ; BSR set to: 0
 11134  0040C4  51CF               	movf	modemResync@escapeEvent& (0+255),w,b
 11135  0040C6  E1F0               	bnz	l10008
 11136                           
 11137                           ; BSR set to: 0
 11138  0040C8  0012               	return		;funcret
 11139  0040CA                     __end_of_modemResync:
 11140                           	opt stack 0
 11141                           tblptru	equ	0xFF8
 11142                           tblptrh	equ	0xFF7
 11143                           tblptrl	equ	0xFF6
 11144                           tablat	equ	0xFF5
 11145                           prodl	equ	0xFF3
 11146                           intcon	equ	0xFF2
 11147                           postinc0	equ	0xFEE
 11148                           wreg	equ	0xFE8
 11149                           postdec1	equ	0xFE5
 11150                           fsr1l	equ	0xFE1
 11151                           indf2	equ	0xFDF
 11152                           fsr2h	equ	0xFDA
 11153                           fsr2l	equ	0xFD9
 11154                           status	equ	0xFD8
 11155                           
 11156 ;; *************** function _MOTEapp_getModemResponse *****************
 11157 ;; Defined at:
 11158 ;;		line 1192 in file "../Includes/Board/MOTEapp.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;		None
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 11163 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 11164 ;; Return value:  Size  Location     Type
 11165 ;;                  1    wreg      unsigned char 
 11166 ;; Registers used:
 11167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11168 ;; Tracked objects:
 11169 ;;		On entry : E/1
 11170 ;;		On exit  : F/0
 11171 ;;		Unchanged: 0/0
 11172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11173 ;;      Params:         0       0       0       0       0       0       0       0       0
 11174 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11175 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11176 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11177 ;;Total ram usage:        2 bytes
 11178 ;; Hardware stack levels used:    1
 11179 ;; Hardware stack levels required when called:   12
 11180 ;; This function calls:
 11181 ;;		_EUSART_Read
 11182 ;; This function is called by:
 11183 ;;		_modemResync
 11184 ;;		_moteHandler
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           	psect	text29
 11189  003CB6                     __ptext29:
 11190                           	opt stack 0
 11191  003CB6                     _MOTEapp_getModemResponse:
 11192                           	opt stack 14
 11193                           
 11194                           ;MOTEapp.c: 1194: bool terminatorReceived = 0;
 11195                           
 11196                           ; BSR set to: 0
 11197                           ;incstack = 0
 11198  003CB6  0100               	movlb	0	; () banked
 11199  003CB8  6BC9               	clrf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;MOTEapp.c: 1195: if ((eusartRxCount))
 11203  003CBA  5023               	movf	_eusartRxCount,w,c	;volatile
 11204  003CBC  E01F               	bz	l9910
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;MOTEapp.c: 1198: bufferByte = EUSART_Read();
 11208                           
 11209                           ; BSR set to: 0
 11210  003CBE  ECB5  F01C         	call	_EUSART_Read	;wreg free
 11211  003CC2  6FCA               	movwf	MOTEapp_getModemResponse@bufferByte& (0+255),b
 11212                           
 11213                           ; BSR set to: 0
 11214                           ;MOTEapp.c: 1200: if (bufferByte == 0x0D)
 11215  003CC4  0E0D               	movlw	13
 11216  003CC6  19CA               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 11217  003CC8  E10B               	bnz	l9902
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;MOTEapp.c: 1201: {
 11221                           ;MOTEapp.c: 1202: modemResonseBuffer[modemBufferIndex] = 0x00;
 11222  003CCA  0E80               	movlw	low _modemResonseBuffer
 11223  003CCC  2429               	addwf	_modemBufferIndex,w,c
 11224  003CCE  6ED9               	movwf	fsr2l,c
 11225  003CD0  6ADA               	clrf	fsr2h,c
 11226  003CD2  0E01               	movlw	high _modemResonseBuffer
 11227  003CD4  22DA               	addwfc	fsr2h,f,c
 11228  003CD6  6ADF               	clrf	indf2,c
 11229                           
 11230                           ; BSR set to: 0
 11231                           ;MOTEapp.c: 1203: terminatorReceived = 1;
 11232  003CD8  0E01               	movlw	1
 11233  003CDA  6FC9               	movwf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
 11234                           
 11235                           ; BSR set to: 0
 11236                           ;MOTEapp.c: 1204: modemBufferIndex = 0;
 11237  003CDC  6A29               	clrf	_modemBufferIndex,c
 11238                           
 11239                           ;MOTEapp.c: 1205: }
 11240  003CDE  D00E               	goto	l9910
 11241  003CE0                     l9902:
 11242                           
 11243                           ; BSR set to: 0
 11244                           ;MOTEapp.c: 1206: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 11245  003CE0  51CA               	movf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 11246  003CE2  E00C               	bz	l9910
 11247                           
 11248                           ; BSR set to: 0
 11249  003CE4  0E0A               	movlw	10
 11250  003CE6  19CA               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 11251  003CE8  E009               	bz	l9910
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;MOTEapp.c: 1210: else
 11255                           ;MOTEapp.c: 1211: {
 11256                           ;MOTEapp.c: 1212: modemResonseBuffer[modemBufferIndex] = bufferByte;
 11257  003CEA  0E80               	movlw	low _modemResonseBuffer
 11258  003CEC  2429               	addwf	_modemBufferIndex,w,c
 11259  003CEE  6ED9               	movwf	fsr2l,c
 11260  003CF0  6ADA               	clrf	fsr2h,c
 11261  003CF2  0E01               	movlw	high _modemResonseBuffer
 11262  003CF4  22DA               	addwfc	fsr2h,f,c
 11263  003CF6  C0CA  FFDF         	movff	MOTEapp_getModemResponse@bufferByte,indf2
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;MOTEapp.c: 1214: modemBufferIndex++;
 11267  003CFA  2A29               	incf	_modemBufferIndex,f,c
 11268  003CFC                     l9910:
 11269                           
 11270                           ; BSR set to: 0
 11271                           ;MOTEapp.c: 1215: }
 11272                           ;MOTEapp.c: 1216: }
 11273                           ;MOTEapp.c: 1217: return terminatorReceived;
 11274  003CFC  51C9               	movf	MOTEapp_getModemResponse@terminatorReceived& (0+255),w,b
 11275                           
 11276                           ; BSR set to: 0
 11277  003CFE  0012               	return		;funcret
 11278  003D00                     __end_of_MOTEapp_getModemResponse:
 11279                           	opt stack 0
 11280                           tblptru	equ	0xFF8
 11281                           tblptrh	equ	0xFF7
 11282                           tblptrl	equ	0xFF6
 11283                           tablat	equ	0xFF5
 11284                           prodl	equ	0xFF3
 11285                           intcon	equ	0xFF2
 11286                           postinc0	equ	0xFEE
 11287                           wreg	equ	0xFE8
 11288                           postdec1	equ	0xFE5
 11289                           fsr1l	equ	0xFE1
 11290                           indf2	equ	0xFDF
 11291                           fsr2h	equ	0xFDA
 11292                           fsr2l	equ	0xFD9
 11293                           status	equ	0xFD8
 11294                           
 11295 ;; *************** function _EUSART_FlushBuffer *****************
 11296 ;; Defined at:
 11297 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 11298 ;; Parameters:    Size  Location     Type
 11299 ;;		None
 11300 ;; Auto vars:     Size  Location     Type
 11301 ;;  index           1    0[BANK0 ] unsigned char 
 11302 ;; Return value:  Size  Location     Type
 11303 ;;		None               void
 11304 ;; Registers used:
 11305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11306 ;; Tracked objects:
 11307 ;;		On entry : 0/0
 11308 ;;		On exit  : F/0
 11309 ;;		Unchanged: 0/0
 11310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11311 ;;      Params:         0       0       0       0       0       0       0       0       0
 11312 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11313 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11314 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11315 ;;Total ram usage:        1 bytes
 11316 ;; Hardware stack levels used:    1
 11317 ;; Hardware stack levels required when called:   11
 11318 ;; This function calls:
 11319 ;;		Nothing
 11320 ;; This function is called by:
 11321 ;;		_moteApp_GoToSleep
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           	psect	text30
 11326  00393E                     __ptext30:
 11327                           	opt stack 0
 11328  00393E                     _EUSART_FlushBuffer:
 11329                           	opt stack 16
 11330                           
 11331                           ;eusart.c: 204: uint8_t index;
 11332                           ;eusart.c: 205: for (index=0; index < 64; index++)
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;incstack = 0
 11336  00393E  0100               	movlb	0	; () banked
 11337  003940  6BC8               	clrf	EUSART_FlushBuffer@index& (0+255),b
 11338  003942                     l10070:
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;eusart.c: 206: {
 11342                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 11343  003942  0E00               	movlw	low _eusartRxBuffer
 11344  003944  25C8               	addwf	EUSART_FlushBuffer@index& (0+255),w,b
 11345  003946  6ED9               	movwf	fsr2l,c
 11346  003948  6ADA               	clrf	fsr2h,c
 11347  00394A  0E01               	movlw	high _eusartRxBuffer
 11348  00394C  22DA               	addwfc	fsr2h,f,c
 11349  00394E  6ADF               	clrf	indf2,c
 11350                           
 11351                           ; BSR set to: 0
 11352  003950  2BC8               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 11353                           
 11354                           ; BSR set to: 0
 11355  003952  0E3F               	movlw	63
 11356  003954  65C8               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 11357  003956  D7F5               	goto	l10070
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;eusart.c: 208: }
 11361                           ;eusart.c: 209: eusartRxHead = 0;
 11362  003958  6A24               	clrf	_eusartRxHead,c
 11363                           
 11364                           ;eusart.c: 210: eusartRxTail = 0;
 11365  00395A  6A25               	clrf	_eusartRxTail,c
 11366                           
 11367                           ;eusart.c: 211: eusartRxCount = 0;
 11368  00395C  6A23               	clrf	_eusartRxCount,c	;volatile
 11369                           
 11370                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 11371  00395E  989D               	bcf	3997,4,c	;volatile
 11372                           
 11373                           ;eusart.c: 214: eusartTxHead = 0;
 11374  003960  6A27               	clrf	_eusartTxHead,c
 11375                           
 11376                           ;eusart.c: 215: eusartTxTail = 0;
 11377  003962  6A28               	clrf	_eusartTxTail,c
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 11381  003964  0E40               	movlw	64
 11382  003966  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 11383                           
 11384                           ; BSR set to: 0
 11385  003968  0C40               	retlw	64	;funcret
 11386  00396A                     __end_of_EUSART_FlushBuffer:
 11387                           	opt stack 0
 11388                           tblptru	equ	0xFF8
 11389                           tblptrh	equ	0xFF7
 11390                           tblptrl	equ	0xFF6
 11391                           tablat	equ	0xFF5
 11392                           prodl	equ	0xFF3
 11393                           intcon	equ	0xFF2
 11394                           postinc0	equ	0xFEE
 11395                           wreg	equ	0xFE8
 11396                           postdec1	equ	0xFE5
 11397                           fsr1l	equ	0xFE1
 11398                           indf2	equ	0xFDF
 11399                           fsr2h	equ	0xFDA
 11400                           fsr2l	equ	0xFD9
 11401                           status	equ	0xFD8
 11402                           
 11403 ;; *************** function _TMR2_ReadTimer *****************
 11404 ;; Defined at:
 11405 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;		None
 11408 ;; Auto vars:     Size  Location     Type
 11409 ;;  readVal         1    0[BANK0 ] unsigned char 
 11410 ;; Return value:  Size  Location     Type
 11411 ;;                  1    wreg      unsigned char 
 11412 ;; Registers used:
 11413 ;;		wreg, status,2
 11414 ;; Tracked objects:
 11415 ;;		On entry : F/0
 11416 ;;		On exit  : F/0
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11419 ;;      Params:         0       0       0       0       0       0       0       0       0
 11420 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11421 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11422 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11423 ;;Total ram usage:        1 bytes
 11424 ;; Hardware stack levels used:    1
 11425 ;; Hardware stack levels required when called:   11
 11426 ;; This function calls:
 11427 ;;		Nothing
 11428 ;; This function is called by:
 11429 ;;		_moteRunningProcess
 11430 ;; This function uses a non-reentrant model
 11431 ;;
 11432                           
 11433                           	psect	text31
 11434  0034E0                     __ptext31:
 11435                           	opt stack 0
 11436  0034E0                     _TMR2_ReadTimer:
 11437                           	opt stack 17
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;tmr2.c: 88: uint8_t readVal;
 11441                           ;tmr2.c: 90: readVal = TMR2;
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;incstack = 0
 11445  0034E0  CFBC F0C8          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 11446                           
 11447                           ; BSR set to: 0
 11448                           ;tmr2.c: 92: return readVal;
 11449  0034E4  51C8               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 11450                           
 11451                           ; BSR set to: 0
 11452  0034E6  0012               	return		;funcret
 11453  0034E8                     __end_of_TMR2_ReadTimer:
 11454                           	opt stack 0
 11455                           tblptru	equ	0xFF8
 11456                           tblptrh	equ	0xFF7
 11457                           tblptrl	equ	0xFF6
 11458                           tablat	equ	0xFF5
 11459                           prodl	equ	0xFF3
 11460                           intcon	equ	0xFF2
 11461                           postinc0	equ	0xFEE
 11462                           wreg	equ	0xFE8
 11463                           postdec1	equ	0xFE5
 11464                           fsr1l	equ	0xFE1
 11465                           indf2	equ	0xFDF
 11466                           fsr2h	equ	0xFDA
 11467                           fsr2l	equ	0xFD9
 11468                           status	equ	0xFD8
 11469                           
 11470 ;; *************** function _ADC_TempConversion *****************
 11471 ;; Defined at:
 11472 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  tempRaw         1    wreg     enum E6334
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  tempRaw         1    7[BANK0 ] enum E6334
 11477 ;;  temp            1    8[BANK0 ] unsigned char 
 11478 ;; Return value:  Size  Location     Type
 11479 ;;                  1    wreg      unsigned char 
 11480 ;; Registers used:
 11481 ;;		wreg, status,2, status,0, cstack
 11482 ;; Tracked objects:
 11483 ;;		On entry : E/0
 11484 ;;		On exit  : F/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11487 ;;      Params:         0       0       0       0       0       0       0       0       0
 11488 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11489 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11490 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11491 ;;Total ram usage:        2 bytes
 11492 ;; Hardware stack levels used:    1
 11493 ;; Hardware stack levels required when called:   12
 11494 ;; This function calls:
 11495 ;;		___lwdiv
 11496 ;; This function is called by:
 11497 ;;		_test_adc
 11498 ;;		_moteHandler
 11499 ;;		_moteRunningProcess
 11500 ;; This function uses a non-reentrant model
 11501 ;;
 11502                           
 11503                           	psect	text32
 11504  0036DE                     __ptext32:
 11505                           	opt stack 0
 11506  0036DE                     _ADC_TempConversion:
 11507                           	opt stack 16
 11508                           
 11509                           ; BSR set to: 0
 11510                           ;incstack = 0
 11511                           ;ADC_TempConversion@tempRaw stored from wreg
 11512  0036DE  0100               	movlb	0	; () banked
 11513  0036E0  6FCF               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 11514                           
 11515                           ;adc.c: 138: uint8_t temp;
 11516                           ;adc.c: 140: temp = (uint16_t) (tempRaw - 250) / 5;
 11517  0036E2  0E06               	movlw	6
 11518  0036E4  25CF               	addwf	ADC_TempConversion@tempRaw& (0+255),w,b
 11519  0036E6  6FC8               	movwf	___lwdiv@dividend& (0+255),b
 11520  0036E8  6BC9               	clrf	(___lwdiv@dividend+1)& (0+255),b
 11521  0036EA  0EFF               	movlw	255
 11522  0036EC  23C9               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
 11523  0036EE  6BCB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 11524  0036F0  0E05               	movlw	5
 11525  0036F2  6FCA               	movwf	___lwdiv@divisor& (0+255),b
 11526  0036F4  EC36  F01E         	call	___lwdiv	;wreg free
 11527  0036F8  51C8               	movf	?___lwdiv& (0+255),w,b
 11528  0036FA  6FD0               	movwf	ADC_TempConversion@temp& (0+255),b
 11529                           
 11530                           ; BSR set to: 0
 11531                           ;adc.c: 141: return temp;
 11532  0036FC  51D0               	movf	ADC_TempConversion@temp& (0+255),w,b
 11533                           
 11534                           ; BSR set to: 0
 11535  0036FE  0012               	return		;funcret
 11536  003700                     __end_of_ADC_TempConversion:
 11537                           	opt stack 0
 11538                           tblptru	equ	0xFF8
 11539                           tblptrh	equ	0xFF7
 11540                           tblptrl	equ	0xFF6
 11541                           tablat	equ	0xFF5
 11542                           prodl	equ	0xFF3
 11543                           intcon	equ	0xFF2
 11544                           postinc0	equ	0xFEE
 11545                           wreg	equ	0xFE8
 11546                           postdec1	equ	0xFE5
 11547                           fsr1l	equ	0xFE1
 11548                           indf2	equ	0xFDF
 11549                           fsr2h	equ	0xFDA
 11550                           fsr2l	equ	0xFD9
 11551                           status	equ	0xFD8
 11552                           
 11553 ;; *************** function ___lwdiv *****************
 11554 ;; Defined at:
 11555 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 11556 ;; Parameters:    Size  Location     Type
 11557 ;;  dividend        2    0[BANK0 ] unsigned int 
 11558 ;;  divisor         2    2[BANK0 ] unsigned int 
 11559 ;; Auto vars:     Size  Location     Type
 11560 ;;  quotient        2    5[BANK0 ] unsigned int 
 11561 ;;  counter         1    4[BANK0 ] unsigned char 
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  2    0[BANK0 ] unsigned int 
 11564 ;; Registers used:
 11565 ;;		wreg, status,2, status,0
 11566 ;; Tracked objects:
 11567 ;;		On entry : F/0
 11568 ;;		On exit  : F/0
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11571 ;;      Params:         0       4       0       0       0       0       0       0       0
 11572 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11573 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11574 ;;      Totals:         0       7       0       0       0       0       0       0       0
 11575 ;;Total ram usage:        7 bytes
 11576 ;; Hardware stack levels used:    1
 11577 ;; Hardware stack levels required when called:   11
 11578 ;; This function calls:
 11579 ;;		Nothing
 11580 ;; This function is called by:
 11581 ;;		_moteApp_add16bToDataBuffer
 11582 ;;		_oled_putUint16
 11583 ;;		_ADC_TempConversion
 11584 ;; This function uses a non-reentrant model
 11585 ;;
 11586                           
 11587                           	psect	text33
 11588  003C6C                     __ptext33:
 11589                           	opt stack 0
 11590  003C6C                     ___lwdiv:
 11591                           	opt stack 16
 11592                           
 11593                           ; BSR set to: 0
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;incstack = 0
 11597  003C6C  6BCD               	clrf	___lwdiv@quotient& (0+255),b
 11598  003C6E  6BCE               	clrf	(___lwdiv@quotient+1)& (0+255),b
 11599                           
 11600                           ; BSR set to: 0
 11601  003C70  51CA               	movf	___lwdiv@divisor& (0+255),w,b
 11602  003C72  11CB               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 11603  003C74  E01B               	bz	l2352
 11604                           
 11605                           ; BSR set to: 0
 11606  003C76  0E01               	movlw	1
 11607  003C78  6FCC               	movwf	___lwdiv@counter& (0+255),b
 11608  003C7A  D004               	goto	l10178
 11609  003C7C                     l10176:
 11610                           
 11611                           ; BSR set to: 0
 11612  003C7C  90D8               	bcf	status,0,c
 11613  003C7E  37CA               	rlcf	___lwdiv@divisor& (0+255),f,b
 11614  003C80  37CB               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 11615  003C82  2BCC               	incf	___lwdiv@counter& (0+255),f,b
 11616  003C84                     l10178:
 11617                           
 11618                           ; BSR set to: 0
 11619  003C84  AFCB               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 11620  003C86  D7FA               	goto	l10176
 11621  003C88                     l10180:
 11622                           
 11623                           ; BSR set to: 0
 11624  003C88  90D8               	bcf	status,0,c
 11625  003C8A  37CD               	rlcf	___lwdiv@quotient& (0+255),f,b
 11626  003C8C  37CE               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 11627                           
 11628                           ; BSR set to: 0
 11629  003C8E  51CA               	movf	___lwdiv@divisor& (0+255),w,b
 11630  003C90  5DC8               	subwf	___lwdiv@dividend& (0+255),w,b
 11631  003C92  51CB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11632  003C94  59C9               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 11633  003C96  E305               	bnc	l10188
 11634                           
 11635                           ; BSR set to: 0
 11636  003C98  51CA               	movf	___lwdiv@divisor& (0+255),w,b
 11637  003C9A  5FC8               	subwf	___lwdiv@dividend& (0+255),f,b
 11638  003C9C  51CB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11639  003C9E  5BC9               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 11640                           
 11641                           ; BSR set to: 0
 11642  003CA0  81CD               	bsf	___lwdiv@quotient& (0+255),0,b
 11643  003CA2                     l10188:
 11644                           
 11645                           ; BSR set to: 0
 11646  003CA2  90D8               	bcf	status,0,c
 11647  003CA4  33CB               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 11648  003CA6  33CA               	rrcf	___lwdiv@divisor& (0+255),f,b
 11649                           
 11650                           ; BSR set to: 0
 11651  003CA8  2FCC               	decfsz	___lwdiv@counter& (0+255),f,b
 11652  003CAA  D7EE               	goto	l10180
 11653  003CAC                     l2352:
 11654                           
 11655                           ; BSR set to: 0
 11656  003CAC  C0CD  F0C8         	movff	___lwdiv@quotient,?___lwdiv
 11657  003CB0  C0CE  F0C9         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11658                           
 11659                           ; BSR set to: 0
 11660  003CB4  0012               	return		;funcret
 11661  003CB6                     __end_of___lwdiv:
 11662                           	opt stack 0
 11663                           tblptru	equ	0xFF8
 11664                           tblptrh	equ	0xFF7
 11665                           tblptrl	equ	0xFF6
 11666                           tablat	equ	0xFF5
 11667                           prodl	equ	0xFF3
 11668                           intcon	equ	0xFF2
 11669                           postinc0	equ	0xFEE
 11670                           wreg	equ	0xFE8
 11671                           postdec1	equ	0xFE5
 11672                           fsr1l	equ	0xFE1
 11673                           indf2	equ	0xFDF
 11674                           fsr2h	equ	0xFDA
 11675                           fsr2l	equ	0xFD9
 11676                           status	equ	0xFD8
 11677                           
 11678 ;; *************** function _ADC_GetConversion *****************
 11679 ;; Defined at:
 11680 ;;		line 113 in file "../Includes/MccGenerated/adc.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;  channel         1    wreg     enum E6334
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;  channel         1    4[BANK0 ] enum E6334
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  2    0[BANK0 ] unsigned int 
 11687 ;; Registers used:
 11688 ;;		wreg, status,2, status,0
 11689 ;; Tracked objects:
 11690 ;;		On entry : E/0
 11691 ;;		On exit  : F/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11694 ;;      Params:         0       2       0       0       0       0       0       0       0
 11695 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11696 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11697 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11698 ;;Total ram usage:        5 bytes
 11699 ;; Hardware stack levels used:    1
 11700 ;; Hardware stack levels required when called:   11
 11701 ;; This function calls:
 11702 ;;		Nothing
 11703 ;; This function is called by:
 11704 ;;		_test_adc
 11705 ;;		_moteHandler
 11706 ;;		_moteRunningProcess
 11707 ;; This function uses a non-reentrant model
 11708 ;;
 11709                           
 11710                           	psect	text34
 11711  003AE2                     __ptext34:
 11712                           	opt stack 0
 11713  003AE2                     _ADC_GetConversion:
 11714                           	opt stack 17
 11715                           
 11716                           ; BSR set to: 0
 11717                           ;incstack = 0
 11718                           ;ADC_GetConversion@channel stored from wreg
 11719  003AE2  0100               	movlb	0	; () banked
 11720  003AE4  6FCC               	movwf	ADC_GetConversion@channel& (0+255),b
 11721                           
 11722                           ;adc.c: 116: ADCON0bits.CHS = channel;
 11723  003AE6  C0CC  F0CA         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 11724  003AEA  47CA               	rlncf	??_ADC_GetConversion& (0+255),f,b
 11725  003AEC  47CA               	rlncf	??_ADC_GetConversion& (0+255),f,b
 11726  003AEE  50C2               	movf	4034,w,c	;volatile
 11727  003AF0  19CA               	xorwf	??_ADC_GetConversion& (0+255),w,b
 11728  003AF2  0B83               	andlw	-125
 11729  003AF4  19CA               	xorwf	??_ADC_GetConversion& (0+255),w,b
 11730  003AF6  6EC2               	movwf	4034,c	;volatile
 11731                           
 11732                           ; BSR set to: 0
 11733                           ;adc.c: 119: ADCON0bits.ADON = 1;
 11734  003AF8  80C2               	bsf	4034,0,c	;volatile
 11735                           
 11736                           ; BSR set to: 0
 11737                           ;adc.c: 122: _delay((unsigned long)((5)*(48000000/4000000.0)));
 11738  003AFA  0E14               	movlw	20
 11739  003AFC                     u10627:
 11740  003AFC  2EE8               	decfsz	wreg,f,c
 11741  003AFE  D7FE               	goto	u10627
 11742                           
 11743                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
 11744  003B00  82C2               	bsf	4034,1,c	;volatile
 11745  003B02                     l1179:
 11746  003B02  B2C2               	btfsc	4034,1,c	;volatile
 11747  003B04  D7FE               	goto	l1179
 11748                           
 11749                           ;adc.c: 130: }
 11750                           ;adc.c: 133: return ((ADRESH << 8) + ADRESL);
 11751  003B06  50C4               	movf	4036,w,c	;volatile
 11752  003B08  0100               	movlb	0	; () banked
 11753  003B0A  6FCB               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 11754  003B0C  6BCA               	clrf	??_ADC_GetConversion& (0+255),b
 11755  003B0E  50C3               	movf	4035,w,c	;volatile
 11756  003B10  25CA               	addwf	??_ADC_GetConversion& (0+255),w,b
 11757  003B12  6FC8               	movwf	?_ADC_GetConversion& (0+255),b
 11758  003B14  0E00               	movlw	0
 11759  003B16  21CB               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 11760  003B18  6FC9               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 11761                           
 11762                           ; BSR set to: 0
 11763  003B1A  0012               	return		;funcret
 11764  003B1C                     __end_of_ADC_GetConversion:
 11765                           	opt stack 0
 11766                           tblptru	equ	0xFF8
 11767                           tblptrh	equ	0xFF7
 11768                           tblptrl	equ	0xFF6
 11769                           tablat	equ	0xFF5
 11770                           prodl	equ	0xFF3
 11771                           intcon	equ	0xFF2
 11772                           postinc0	equ	0xFEE
 11773                           wreg	equ	0xFE8
 11774                           postdec1	equ	0xFE5
 11775                           fsr1l	equ	0xFE1
 11776                           indf2	equ	0xFDF
 11777                           fsr2h	equ	0xFDA
 11778                           fsr2l	equ	0xFD9
 11779                           status	equ	0xFD8
 11780                           
 11781 ;; *************** function _moteJoiningProcess *****************
 11782 ;; Defined at:
 11783 ;;		line 265 in file "../Includes/Board/MOTEapp.c"
 11784 ;; Parameters:    Size  Location     Type
 11785 ;;  messageReady    1    wreg     unsigned char 
 11786 ;;  switchEvent     1   18[BANK0 ] unsigned char 
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;  messageReady    1   21[BANK0 ] unsigned char 
 11789 ;;  readDataRate    1   20[BANK0 ] unsigned char 
 11790 ;;  joiningCompl    1   19[BANK0 ] unsigned char 
 11791 ;; Return value:  Size  Location     Type
 11792 ;;                  1    wreg      enum E6636
 11793 ;; Registers used:
 11794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11795 ;; Tracked objects:
 11796 ;;		On entry : F/1
 11797 ;;		On exit  : F/0
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11800 ;;      Params:         0       1       0       0       0       0       0       0       0
 11801 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11802 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11803 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11804 ;;Total ram usage:        4 bytes
 11805 ;; Hardware stack levels used:    1
 11806 ;; Hardware stack levels required when called:   17
 11807 ;; This function calls:
 11808 ;;		_DATAEE_WriteByte
 11809 ;;		_MOTEapp_SetADR
 11810 ;;		_MOTEapp_SetDataRate
 11811 ;;		_MOTEapp_WriteDataRate
 11812 ;;		_moteApp_delayms
 11813 ;;		_oled_clear
 11814 ;;		_oled_putString
 11815 ;;		_sendCommand
 11816 ;;		_strcmp
 11817 ;;		_strncmp
 11818 ;; This function is called by:
 11819 ;;		_moteHandler
 11820 ;; This function uses a non-reentrant model
 11821 ;;
 11822                           
 11823                           	psect	text35
 11824  005FB2                     __ptext35:
 11825                           	opt stack 0
 11826  005FB2                     _moteJoiningProcess:
 11827                           	opt stack 12
 11828                           
 11829                           ; BSR set to: 0
 11830                           ;incstack = 0
 11831                           ;moteJoiningProcess@messageReady stored from wreg
 11832  005FB2  0100               	movlb	0	; () banked
 11833  005FB4  6FDD               	movwf	moteJoiningProcess@messageReady& (0+255),b
 11834                           
 11835                           ;MOTEapp.c: 267: bool joiningComplete = 0;
 11836  005FB6  6BDB               	clrf	moteJoiningProcess@joiningComplete& (0+255),b
 11837                           
 11838                           ; BSR set to: 0
 11839                           ;MOTEapp.c: 269: if (switchEvent)
 11840  005FB8  51DA               	movf	moteJoiningProcess@switchEvent& (0+255),w,b
 11841  005FBA  E101 D260          	bz	l11064
 11842                           
 11843                           ; BSR set to: 0
 11844                           ;MOTEapp.c: 270: {
 11845                           ;MOTEapp.c: 271: activeState = moteComFailure;
 11846  005FBE  0E0C               	movlw	12
 11847  005FC0  6F8D               	movwf	_activeState& (0+255),b
 11848  005FC2                     l351:
 11849  005FC2  A282               	btfss	3970,1,c	;volatile
 11850  005FC4  D7FE               	goto	l351
 11851  005FC6  D25B               	goto	l11064
 11852  005FC8                     l356:
 11853  005FC8  D7FF               	goto	l356
 11854  005FCA                     l10866:
 11855                           
 11856                           ; BSR set to: 0
 11857                           ;MOTEapp.c: 282: sendCommand("sys get ver");
 11858  005FCA  0E8B               	movlw	low STR_29
 11859  005FCC  6FC9               	movwf	sendCommand@string& (0+255),b
 11860  005FCE  0E7E               	movlw	high STR_29
 11861  005FD0  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 11862  005FD2  EC32  F01C         	call	_sendCommand	;wreg free
 11863                           
 11864                           ;MOTEapp.c: 283: moteApp_delayms(50);
 11865  005FD6  0100               	movlb	0	; () banked
 11866  005FD8  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11867  005FDA  0E32               	movlw	50
 11868  005FDC  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11869  005FDE  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 11870  005FE2                     l10870:
 11871                           
 11872                           ;MOTEapp.c: 284: activeState = moteReset;
 11873  005FE2  0E01               	movlw	1
 11874  005FE4  D020               	goto	L39
 11875  005FE6                     l10872:
 11876                           
 11877                           ; BSR set to: 0
 11878                           ;MOTEapp.c: 287: if ( messageReady )
 11879  005FE6  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 11880  005FE8  E101 D26D          	bz	l11066
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;MOTEapp.c: 288: {
 11884                           ;MOTEapp.c: 289: if(strncmp(modemResonseBuffer, "RN", 2) == 0)
 11885  005FEC  0E80               	movlw	low _modemResonseBuffer
 11886  005FEE  6FC8               	movwf	strncmp@s1& (0+255),b
 11887  005FF0  0E01               	movlw	high _modemResonseBuffer
 11888  005FF2  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
 11889  005FF4  0EEF               	movlw	low STR_30
 11890  005FF6  6FCA               	movwf	strncmp@s2& (0+255),b
 11891  005FF8  0E7F               	movlw	high STR_30
 11892  005FFA  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
 11893  005FFC  6BCD               	clrf	(strncmp@len+1)& (0+255),b
 11894  005FFE  0E02               	movlw	2
 11895  006000  6FCC               	movwf	strncmp@len& (0+255),b
 11896  006002  EC98  F020         	call	_strncmp	;wreg free
 11897  006006  51C8               	movf	?_strncmp& (0+255),w,b
 11898  006008  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
 11899  00600A  E10F               	bnz	l363
 11900                           
 11901                           ; BSR set to: 0
 11902                           ;MOTEapp.c: 290: {
 11903                           ;MOTEapp.c: 291: sendCommand("mac join abp");
 11904  00600C  0EF6               	movlw	low STR_31
 11905  00600E  6FC9               	movwf	sendCommand@string& (0+255),b
 11906  006010  0E7D               	movlw	high STR_31
 11907  006012  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 11908  006014  EC32  F01C         	call	_sendCommand	;wreg free
 11909                           
 11910                           ;MOTEapp.c: 292: moteApp_delayms(50);
 11911  006018  0100               	movlb	0	; () banked
 11912  00601A  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 11913  00601C  0E32               	movlw	50
 11914  00601E  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 11915  006020  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 11916  006024                     l10880:
 11917                           
 11918                           ;MOTEapp.c: 293: activeState = moteCheckAbp;
 11919  006024  0E02               	movlw	2
 11920  006026                     L39:
 11921  006026  0100               	movlb	0	; () banked
 11922  006028  D20E               	goto	L48
 11923  00602A                     l363:
 11924                           
 11925                           ;MOTEapp.c: 295: else
 11926                           ;MOTEapp.c: 296: {
 11927                           ;MOTEapp.c: 298: activeState = moteStartup;
 11928  00602A  0100               	movlb	0	; () banked
 11929  00602C  6B8D               	clrf	_activeState& (0+255),b
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;MOTEapp.c: 299: }
 11933                           ;MOTEapp.c: 300: }
 11934                           ;MOTEapp.c: 301: break;
 11935  00602E  D24B               	goto	l11066
 11936  006030                     l10882:
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;MOTEapp.c: 303: if ( messageReady )
 11940  006030  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 11941  006032  E101 D248          	bz	l11066
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;MOTEapp.c: 304: {
 11945                           ;MOTEapp.c: 305: if(strcmp(modemResonseBuffer, "ok") == 0)
 11946  006036  0E80               	movlw	low _modemResonseBuffer
 11947  006038  6FC8               	movwf	strcmp@s1& (0+255),b
 11948  00603A  0E01               	movlw	high _modemResonseBuffer
 11949  00603C  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 11950  00603E  0EF2               	movlw	low STR_32
 11951  006040  6FCA               	movwf	strcmp@s2& (0+255),b
 11952  006042  0E7F               	movlw	high STR_32
 11953  006044  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 11954  006046  EC6D  F022         	call	_strcmp	;wreg free
 11955  00604A  51C8               	movf	?_strcmp& (0+255),w,b
 11956  00604C  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 11957  00604E  E102               	bnz	l10888
 11958                           
 11959                           ; BSR set to: 0
 11960                           ;MOTEapp.c: 306: {
 11961                           ;MOTEapp.c: 307: activeState = moteWaitAbp;
 11962  006050  0E03               	movlw	3
 11963  006052  D1F9               	goto	L48
 11964  006054                     l10888:
 11965                           
 11966                           ; BSR set to: 0
 11967                           ;MOTEapp.c: 309: else if(strcmp(modemResonseBuffer, "keys_not_init") == 0)
 11968  006054  0E80               	movlw	low _modemResonseBuffer
 11969  006056  6FC8               	movwf	strcmp@s1& (0+255),b
 11970  006058  0E01               	movlw	high _modemResonseBuffer
 11971  00605A  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 11972  00605C  0E66               	movlw	low STR_33
 11973  00605E  6FCA               	movwf	strcmp@s2& (0+255),b
 11974  006060  0E7D               	movlw	high STR_33
 11975  006062  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 11976  006064  EC6D  F022         	call	_strcmp	;wreg free
 11977  006068  51C8               	movf	?_strcmp& (0+255),w,b
 11978  00606A  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 11979  00606C  E141               	bnz	l10908
 11980                           
 11981                           ; BSR set to: 0
 11982                           ;MOTEapp.c: 310: {
 11983                           ;MOTEapp.c: 311: oled_clear();
 11984  00606E  ECF9  F01A         	call	_oled_clear	;wreg free
 11985                           
 11986                           ; BSR set to: 0
 11987                           ;MOTEapp.c: 312: oled_putString("ABP Join",1,0);
 11988  006072  0E5A               	movlw	low STR_34
 11989  006074  6FD5               	movwf	oled_putString@string& (0+255),b
 11990  006076  0E7F               	movlw	high STR_34
 11991  006078  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 11992  00607A  0E01               	movlw	1
 11993  00607C  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 11994  00607E  6BD8               	clrf	oled_putString@start_page& (0+255),b
 11995  006080  EC65  F020         	call	_oled_putString	;wreg free
 11996                           
 11997                           ;MOTEapp.c: 313: oled_putString("No Keys",2,1);
 11998  006084  0E9F               	movlw	low STR_35
 11999  006086  0100               	movlb	0	; () banked
 12000  006088  6FD5               	movwf	oled_putString@string& (0+255),b
 12001  00608A  0E7F               	movlw	high STR_35
 12002  00608C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12003  00608E  0E02               	movlw	2
 12004  006090  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12005  006092  0E01               	movlw	1
 12006  006094  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12007  006096  EC65  F020         	call	_oled_putString	;wreg free
 12008                           
 12009                           ;MOTEapp.c: 314: moteApp_delayms(500);
 12010  00609A  0E01               	movlw	1
 12011  00609C  0100               	movlb	0	; () banked
 12012  00609E  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12013  0060A0  0EF4               	movlw	244
 12014  0060A2  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12015  0060A4  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;MOTEapp.c: 315: oled_clear();
 12019  0060A8  ECF9  F01A         	call	_oled_clear	;wreg free
 12020                           
 12021                           ; BSR set to: 0
 12022                           ;MOTEapp.c: 316: oled_putString("Trying OTAA",1,0);
 12023  0060AC  0E73               	movlw	low STR_36
 12024  0060AE  6FD5               	movwf	oled_putString@string& (0+255),b
 12025  0060B0  0E7E               	movlw	high STR_36
 12026  0060B2  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12027  0060B4  0E01               	movlw	1
 12028  0060B6  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12029  0060B8  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12030  0060BA  EC65  F020         	call	_oled_putString	;wreg free
 12031                           
 12032                           ;MOTEapp.c: 317: oled_putString("Join",2,1);
 12033  0060BE  0E14               	movlw	low (STR_57+5)
 12034  0060C0  0100               	movlb	0	; () banked
 12035  0060C2  6FD5               	movwf	oled_putString@string& (0+255),b
 12036  0060C4  0E7F               	movlw	high (STR_57+5)
 12037  0060C6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12038  0060C8  0E02               	movlw	2
 12039  0060CA  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12040  0060CC  0E01               	movlw	1
 12041  0060CE  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12042  0060D0  EC65  F020         	call	_oled_putString	;wreg free
 12043                           
 12044                           ;MOTEapp.c: 318: moteApp_delayms(200);
 12045  0060D4  0100               	movlb	0	; () banked
 12046  0060D6  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12047  0060D8  0EC8               	movlw	200
 12048  0060DA  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12049  0060DC  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 12050                           
 12051                           ; BSR set to: 0
 12052                           ;MOTEapp.c: 319: sendCommand("mac join otaa");
 12053  0060E0  0E4A               	movlw	low STR_38
 12054  0060E2  6FC9               	movwf	sendCommand@string& (0+255),b
 12055  0060E4  0E7D               	movlw	high STR_38
 12056  0060E6  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12057  0060E8  EC32  F01C         	call	_sendCommand	;wreg free
 12058  0060EC                     l10906:
 12059                           
 12060                           ;MOTEapp.c: 320: activeState = moteCheckOtaa;
 12061  0060EC  0E04               	movlw	4
 12062  0060EE  D79B               	goto	L39
 12063  0060F0                     l10908:
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;MOTEapp.c: 322: else
 12067                           ;MOTEapp.c: 323: {
 12068                           ;MOTEapp.c: 324: sendCommand("mac join abp");
 12069  0060F0  0EF6               	movlw	low STR_31
 12070  0060F2  6FC9               	movwf	sendCommand@string& (0+255),b
 12071  0060F4  0E7D               	movlw	high STR_31
 12072  0060F6  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12073  0060F8  EC32  F01C         	call	_sendCommand	;wreg free
 12074  0060FC  D793               	goto	l10880
 12075  0060FE                     l10912:
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;MOTEapp.c: 330: if ( messageReady )
 12079  0060FE  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12080  006100  E101 D1E1          	bz	l11066
 12081                           
 12082                           ; BSR set to: 0
 12083                           ;MOTEapp.c: 331: {
 12084                           ;MOTEapp.c: 332: if(strcmp(modemResonseBuffer, "accepted") == 0)
 12085  006104  0E80               	movlw	low _modemResonseBuffer
 12086  006106  6FC8               	movwf	strcmp@s1& (0+255),b
 12087  006108  0E01               	movlw	high _modemResonseBuffer
 12088  00610A  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12089  00610C  0E3F               	movlw	low STR_40
 12090  00610E  6FCA               	movwf	strcmp@s2& (0+255),b
 12091  006110  0E7F               	movlw	high STR_40
 12092  006112  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12093  006114  EC6D  F022         	call	_strcmp	;wreg free
 12094  006118  51C8               	movf	?_strcmp& (0+255),w,b
 12095  00611A  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12096  00611C  E11C               	bnz	l10926
 12097                           
 12098                           ; BSR set to: 0
 12099                           ;MOTEapp.c: 333: {
 12100                           ;MOTEapp.c: 334: oled_clear();
 12101  00611E  ECF9  F01A         	call	_oled_clear	;wreg free
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;MOTEapp.c: 335: oled_putString("ABP Join ",0,0);
 12105  006122  0EFB               	movlw	low STR_41
 12106  006124  6FD5               	movwf	oled_putString@string& (0+255),b
 12107  006126  0E7E               	movlw	high STR_41
 12108  006128  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12109  00612A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12110  00612C  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12111  00612E  EC65  F020         	call	_oled_putString	;wreg free
 12112                           
 12113                           ;MOTEapp.c: 336: oled_putString("Successful",0,1);
 12114  006132  0EC5               	movlw	low STR_42
 12115  006134  0100               	movlb	0	; () banked
 12116  006136  6FD5               	movwf	oled_putString@string& (0+255),b
 12117  006138  0E7E               	movlw	high STR_42
 12118  00613A  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12119  00613C  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12120  00613E  0E01               	movlw	1
 12121  006140  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12122  006142  EC65  F020         	call	_oled_putString	;wreg free
 12123                           
 12124                           ;MOTEapp.c: 337: moteApp_delayms(250);
 12125  006146  0100               	movlb	0	; () banked
 12126  006148  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12127  00614A  0EFA               	movlw	250
 12128  00614C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12129  00614E  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 12130  006152                     l10924:
 12131                           
 12132                           ; BSR set to: 0
 12133                           ;MOTEapp.c: 338: activeState = moteJoined;
 12134  006152  0E06               	movlw	6
 12135  006154  D178               	goto	L48
 12136  006156                     l10926:
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;MOTEapp.c: 340: else if(strcmp(modemResonseBuffer, "denied") == 0)
 12140  006156  0E80               	movlw	low _modemResonseBuffer
 12141  006158  6FC8               	movwf	strcmp@s1& (0+255),b
 12142  00615A  0E01               	movlw	high _modemResonseBuffer
 12143  00615C  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12144  00615E  0ECC               	movlw	low STR_43
 12145  006160  6FCA               	movwf	strcmp@s2& (0+255),b
 12146  006162  0E7F               	movlw	high STR_43
 12147  006164  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12148  006166  EC6D  F022         	call	_strcmp	;wreg free
 12149  00616A  51C8               	movf	?_strcmp& (0+255),w,b
 12150  00616C  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12151  00616E  E107               	bnz	l10932
 12152                           
 12153                           ; BSR set to: 0
 12154                           ;MOTEapp.c: 341: {
 12155                           ;MOTEapp.c: 342: sendCommand("mac join abp");
 12156  006170  0EF6               	movlw	low STR_31
 12157  006172  6FC9               	movwf	sendCommand@string& (0+255),b
 12158  006174  0E7D               	movlw	high STR_31
 12159  006176  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12160  006178  EC32  F01C         	call	_sendCommand	;wreg free
 12161  00617C  D753               	goto	l10880
 12162  00617E                     l10932:
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;MOTEapp.c: 345: else
 12166                           ;MOTEapp.c: 346: {
 12167                           ;MOTEapp.c: 347: sendCommand("mac reset");
 12168  00617E  0E19               	movlw	low STR_45
 12169  006180  6FC9               	movwf	sendCommand@string& (0+255),b
 12170  006182  0E7F               	movlw	high STR_45
 12171  006184  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12172  006186  EC32  F01C         	call	_sendCommand	;wreg free
 12173  00618A  D72B               	goto	l10870
 12174  00618C                     l10936:
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;MOTEapp.c: 354: if ( messageReady )
 12178  00618C  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12179  00618E  E101 D19A          	bz	l11066
 12180                           
 12181                           ; BSR set to: 0
 12182                           ;MOTEapp.c: 355: {
 12183                           ;MOTEapp.c: 356: if(strcmp(modemResonseBuffer, "ok") == 0)
 12184  006192  0E80               	movlw	low _modemResonseBuffer
 12185  006194  6FC8               	movwf	strcmp@s1& (0+255),b
 12186  006196  0E01               	movlw	high _modemResonseBuffer
 12187  006198  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12188  00619A  0EF2               	movlw	low STR_32
 12189  00619C  6FCA               	movwf	strcmp@s2& (0+255),b
 12190  00619E  0E7F               	movlw	high STR_32
 12191  0061A0  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12192  0061A2  EC6D  F022         	call	_strcmp	;wreg free
 12193  0061A6  51C8               	movf	?_strcmp& (0+255),w,b
 12194  0061A8  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12195  0061AA  E102               	bnz	l10942
 12196                           
 12197                           ; BSR set to: 0
 12198                           ;MOTEapp.c: 357: {
 12199                           ;MOTEapp.c: 358: activeState = moteWaitOtaa;
 12200  0061AC  0E05               	movlw	5
 12201  0061AE  D14B               	goto	L48
 12202  0061B0                     l10942:
 12203                           
 12204                           ; BSR set to: 0
 12205                           ;MOTEapp.c: 360: else if(strcmp(modemResonseBuffer, "keys_not_init") == 0)
 12206  0061B0  0E80               	movlw	low _modemResonseBuffer
 12207  0061B2  6FC8               	movwf	strcmp@s1& (0+255),b
 12208  0061B4  0E01               	movlw	high _modemResonseBuffer
 12209  0061B6  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12210  0061B8  0E66               	movlw	low STR_33
 12211  0061BA  6FCA               	movwf	strcmp@s2& (0+255),b
 12212  0061BC  0E7D               	movlw	high STR_33
 12213  0061BE  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12214  0061C0  EC6D  F022         	call	_strcmp	;wreg free
 12215  0061C4  51C8               	movf	?_strcmp& (0+255),w,b
 12216  0061C6  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12217  0061C8  E116               	bnz	l10952
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;MOTEapp.c: 361: {
 12221                           ;MOTEapp.c: 362: oled_clear();
 12222  0061CA  ECF9  F01A         	call	_oled_clear	;wreg free
 12223                           
 12224                           ; BSR set to: 0
 12225                           ;MOTEapp.c: 363: oled_putString("Valid Keys",0,0);
 12226  0061CE  0EDB               	movlw	low STR_48
 12227  0061D0  6FD5               	movwf	oled_putString@string& (0+255),b
 12228  0061D2  0E7E               	movlw	high STR_48
 12229  0061D4  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12230  0061D6  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12231  0061D8  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12232  0061DA  EC65  F020         	call	_oled_putString	;wreg free
 12233                           
 12234                           ;MOTEapp.c: 364: oled_putString("Required",0,1);
 12235  0061DE  0E36               	movlw	low STR_49
 12236  0061E0  0100               	movlb	0	; () banked
 12237  0061E2  6FD5               	movwf	oled_putString@string& (0+255),b
 12238  0061E4  0E7F               	movlw	high STR_49
 12239  0061E6  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12240  0061E8  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12241  0061EA  0E01               	movlw	1
 12242  0061EC  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12243  0061EE  EC65  F020         	call	_oled_putString	;wreg free
 12244                           
 12245                           ;MOTEapp.c: 365: activeState = moteNeedKeys;
 12246  0061F2  0E0B               	movlw	11
 12247  0061F4  D718               	goto	L39
 12248  0061F6                     l10952:
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;MOTEapp.c: 367: else if(strcmp(modemResonseBuffer, "invalid_param") == 0)
 12252  0061F6  0E80               	movlw	low _modemResonseBuffer
 12253  0061F8  6FC8               	movwf	strcmp@s1& (0+255),b
 12254  0061FA  0E01               	movlw	high _modemResonseBuffer
 12255  0061FC  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12256  0061FE  0E58               	movlw	low STR_50
 12257  006200  6FCA               	movwf	strcmp@s2& (0+255),b
 12258  006202  0E7D               	movlw	high STR_50
 12259  006204  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12260  006206  EC6D  F022         	call	_strcmp	;wreg free
 12261  00620A  51C8               	movf	?_strcmp& (0+255),w,b
 12262  00620C  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12263  00620E  E107               	bnz	l10958
 12264                           
 12265                           ; BSR set to: 0
 12266                           ;MOTEapp.c: 368: {
 12267                           ;MOTEapp.c: 369: sendCommand("mac join otaa");
 12268  006210  0E4A               	movlw	low STR_38
 12269  006212  6FC9               	movwf	sendCommand@string& (0+255),b
 12270  006214  0E7D               	movlw	high STR_38
 12271  006216  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12272  006218  EC32  F01C         	call	_sendCommand	;wreg free
 12273  00621C  D703               	goto	l10880
 12274  00621E                     l10958:
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;MOTEapp.c: 372: else if(strcmp(modemResonseBuffer, "no_free_ch") == 0)
 12278  00621E  0E80               	movlw	low _modemResonseBuffer
 12279  006220  6FC8               	movwf	strcmp@s1& (0+255),b
 12280  006222  0E01               	movlw	high _modemResonseBuffer
 12281  006224  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12282  006226  0EBA               	movlw	low STR_52
 12283  006228  6FCA               	movwf	strcmp@s2& (0+255),b
 12284  00622A  0E7E               	movlw	high STR_52
 12285  00622C  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12286  00622E  EC6D  F022         	call	_strcmp	;wreg free
 12287  006232  51C8               	movf	?_strcmp& (0+255),w,b
 12288  006234  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12289  006236  E101 D6F8          	bz	l363
 12290  00623A  D145               	goto	l11066
 12291  00623C                     l10962:
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;MOTEapp.c: 379: if ( messageReady )
 12295  00623C  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12296  00623E  E101 D142          	bz	l11066
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;MOTEapp.c: 380: {
 12300                           ;MOTEapp.c: 381: if(strcmp(modemResonseBuffer, "accepted") == 0)
 12301  006242  0E80               	movlw	low _modemResonseBuffer
 12302  006244  6FC8               	movwf	strcmp@s1& (0+255),b
 12303  006246  0E01               	movlw	high _modemResonseBuffer
 12304  006248  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12305  00624A  0E3F               	movlw	low STR_40
 12306  00624C  6FCA               	movwf	strcmp@s2& (0+255),b
 12307  00624E  0E7F               	movlw	high STR_40
 12308  006250  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12309  006252  EC6D  F022         	call	_strcmp	;wreg free
 12310  006256  51C8               	movf	?_strcmp& (0+255),w,b
 12311  006258  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12312  00625A  E11C               	bnz	l10976
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;MOTEapp.c: 382: {
 12316                           ;MOTEapp.c: 383: oled_clear();
 12317  00625C  ECF9  F01A         	call	_oled_clear	;wreg free
 12318                           
 12319                           ; BSR set to: 0
 12320                           ;MOTEapp.c: 384: oled_putString("OTAA Join ",0,0);
 12321  006260  0EAF               	movlw	low STR_54
 12322  006262  6FD5               	movwf	oled_putString@string& (0+255),b
 12323  006264  0E7E               	movlw	high STR_54
 12324  006266  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12325  006268  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12326  00626A  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12327  00626C  EC65  F020         	call	_oled_putString	;wreg free
 12328                           
 12329                           ;MOTEapp.c: 385: oled_putString("Successful",0,1);
 12330  006270  0EC5               	movlw	low STR_42
 12331  006272  0100               	movlb	0	; () banked
 12332  006274  6FD5               	movwf	oled_putString@string& (0+255),b
 12333  006276  0E7E               	movlw	high STR_42
 12334  006278  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12335  00627A  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 12336  00627C  0E01               	movlw	1
 12337  00627E  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12338  006280  EC65  F020         	call	_oled_putString	;wreg free
 12339                           
 12340                           ;MOTEapp.c: 386: moteApp_delayms(500);
 12341  006284  0E01               	movlw	1
 12342  006286  0100               	movlb	0	; () banked
 12343  006288  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12344  00628A  0EF4               	movlw	244
 12345  00628C  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12346  00628E  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 12347  006292  D75F               	goto	l10924
 12348  006294                     l10976:
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;MOTEapp.c: 389: else if(strcmp(modemResonseBuffer, "denied") == 0)
 12352  006294  0E80               	movlw	low _modemResonseBuffer
 12353  006296  6FC8               	movwf	strcmp@s1& (0+255),b
 12354  006298  0E01               	movlw	high _modemResonseBuffer
 12355  00629A  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12356  00629C  0ECC               	movlw	low STR_43
 12357  00629E  6FCA               	movwf	strcmp@s2& (0+255),b
 12358  0062A0  0E7F               	movlw	high STR_43
 12359  0062A2  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12360  0062A4  EC6D  F022         	call	_strcmp	;wreg free
 12361  0062A8  51C8               	movf	?_strcmp& (0+255),w,b
 12362  0062AA  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12363  0062AC  E124               	bnz	l10990
 12364                           
 12365                           ; BSR set to: 0
 12366                           ;MOTEapp.c: 390: {
 12367                           ;MOTEapp.c: 391: oled_clear();
 12368  0062AE  ECF9  F01A         	call	_oled_clear	;wreg free
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;MOTEapp.c: 392: oled_putString("OTAA Join",1,0);
 12372  0062B2  0E0F               	movlw	low STR_57
 12373  0062B4  6FD5               	movwf	oled_putString@string& (0+255),b
 12374  0062B6  0E7F               	movlw	high STR_57
 12375  0062B8  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12376  0062BA  0E01               	movlw	1
 12377  0062BC  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12378  0062BE  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12379  0062C0  EC65  F020         	call	_oled_putString	;wreg free
 12380                           
 12381                           ;MOTEapp.c: 393: oled_putString("Denied",2,1);
 12382  0062C4  0EC5               	movlw	low STR_58
 12383  0062C6  0100               	movlb	0	; () banked
 12384  0062C8  6FD5               	movwf	oled_putString@string& (0+255),b
 12385  0062CA  0E7F               	movlw	high STR_58
 12386  0062CC  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12387  0062CE  0E02               	movlw	2
 12388  0062D0  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12389  0062D2  0E01               	movlw	1
 12390  0062D4  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12391  0062D6  EC65  F020         	call	_oled_putString	;wreg free
 12392                           
 12393                           ;MOTEapp.c: 394: sendCommand("mac join otaa");
 12394  0062DA  0E4A               	movlw	low STR_38
 12395  0062DC  0100               	movlb	0	; () banked
 12396  0062DE  6FC9               	movwf	sendCommand@string& (0+255),b
 12397  0062E0  0E7D               	movlw	high STR_38
 12398  0062E2  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12399  0062E4  EC32  F01C         	call	_sendCommand	;wreg free
 12400                           
 12401                           ;MOTEapp.c: 395: moteApp_delayms(100);
 12402  0062E8  0100               	movlb	0	; () banked
 12403  0062EA  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12404  0062EC  0E64               	movlw	100
 12405  0062EE  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12406  0062F0  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 12407  0062F4  D6FB               	goto	l10906
 12408  0062F6                     l10990:
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;MOTEapp.c: 398: else if(strcmp(modemResonseBuffer, "no_free_ch") == 0)
 12412  0062F6  0E80               	movlw	low _modemResonseBuffer
 12413  0062F8  6FC8               	movwf	strcmp@s1& (0+255),b
 12414  0062FA  0E01               	movlw	high _modemResonseBuffer
 12415  0062FC  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12416  0062FE  0EBA               	movlw	low STR_52
 12417  006300  6FCA               	movwf	strcmp@s2& (0+255),b
 12418  006302  0E7E               	movlw	high STR_52
 12419  006304  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12420  006306  EC6D  F022         	call	_strcmp	;wreg free
 12421  00630A  51C8               	movf	?_strcmp& (0+255),w,b
 12422  00630C  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12423  00630E  E001 D0DA          	bnz	l11066
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;MOTEapp.c: 399: {
 12427                           ;MOTEapp.c: 400: oled_clear();
 12428  006312  ECF9  F01A         	call	_oled_clear	;wreg free
 12429                           
 12430                           ; BSR set to: 0
 12431                           ;MOTEapp.c: 401: oled_putString("NO FREE",1,0);
 12432  006316  0E8F               	movlw	low STR_61
 12433  006318  6FD5               	movwf	oled_putString@string& (0+255),b
 12434  00631A  0E7F               	movlw	high STR_61
 12435  00631C  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12436  00631E  0E01               	movlw	1
 12437  006320  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12438  006322  6BD8               	clrf	oled_putString@start_page& (0+255),b
 12439  006324  EC65  F020         	call	_oled_putString	;wreg free
 12440                           
 12441                           ;MOTEapp.c: 402: oled_putString("CHANNEL",2,1);
 12442  006328  0E97               	movlw	low STR_62
 12443  00632A  0100               	movlb	0	; () banked
 12444  00632C  6FD5               	movwf	oled_putString@string& (0+255),b
 12445  00632E  0E7F               	movlw	high STR_62
 12446  006330  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 12447  006332  0E02               	movlw	2
 12448  006334  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 12449  006336  0E01               	movlw	1
 12450  006338  6FD8               	movwf	oled_putString@start_page& (0+255),b
 12451  00633A  EC65  F020         	call	_oled_putString	;wreg free
 12452  00633E  D675               	goto	l363
 12453  006340                     l11000:
 12454                           
 12455                           ; BSR set to: 0
 12456                           ;MOTEapp.c: 408: sendCommand("mac get adr");
 12457  006340  0E7F               	movlw	low STR_63
 12458  006342  6FC9               	movwf	sendCommand@string& (0+255),b
 12459  006344  0E7E               	movlw	high STR_63
 12460  006346  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12461  006348  EC32  F01C         	call	_sendCommand	;wreg free
 12462                           
 12463                           ;MOTEapp.c: 409: moteApp_delayms(100);
 12464  00634C  0100               	movlb	0	; () banked
 12465  00634E  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12466  006350  0E64               	movlw	100
 12467  006352  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12468  006354  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 12469                           
 12470                           ; BSR set to: 0
 12471                           ;MOTEapp.c: 410: activeState = moteSetAdr;
 12472  006358  0E08               	movlw	8
 12473  00635A  D075               	goto	L48
 12474  00635C                     l11006:
 12475                           
 12476                           ; BSR set to: 0
 12477                           ;MOTEapp.c: 413: if ( messageReady )
 12478  00635C  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12479  00635E  E101 D0B2          	bz	l11066
 12480                           
 12481                           ; BSR set to: 0
 12482                           ;MOTEapp.c: 414: {
 12483                           ;MOTEapp.c: 415: if(strncmp(modemResonseBuffer, "on", 2) == 0)
 12484  006362  0E80               	movlw	low _modemResonseBuffer
 12485  006364  6FC8               	movwf	strncmp@s1& (0+255),b
 12486  006366  0E01               	movlw	high _modemResonseBuffer
 12487  006368  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
 12488  00636A  0E0C               	movlw	low (STR_242+12)
 12489  00636C  6FCA               	movwf	strncmp@s2& (0+255),b
 12490  00636E  0E7D               	movlw	high (STR_242+12)
 12491  006370  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
 12492  006372  6BCD               	clrf	(strncmp@len+1)& (0+255),b
 12493  006374  0E02               	movlw	2
 12494  006376  6FCC               	movwf	strncmp@len& (0+255),b
 12495  006378  EC98  F020         	call	_strncmp	;wreg free
 12496  00637C  51C8               	movf	?_strncmp& (0+255),w,b
 12497  00637E  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
 12498  006380  E10C               	bnz	l11016
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;MOTEapp.c: 416: {
 12502                           ;MOTEapp.c: 417: MOTEapp_SetADR(1);
 12503  006382  0E01               	movlw	1
 12504  006384  EC68  F01A         	call	_MOTEapp_SetADR
 12505                           
 12506                           ;MOTEapp.c: 418: sendCommand("mac get dr");
 12507  006388  0ED0               	movlw	low STR_65
 12508  00638A  0100               	movlb	0	; () banked
 12509  00638C  6FC9               	movwf	sendCommand@string& (0+255),b
 12510  00638E  0E7E               	movlw	high STR_65
 12511  006390  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12512  006392  EC32  F01C         	call	_sendCommand	;wreg free
 12513  006396                     l11014:
 12514                           
 12515                           ;MOTEapp.c: 419: activeState = moteGetDr;
 12516  006396  0E07               	movlw	7
 12517  006398  D646               	goto	L39
 12518  00639A                     l11016:
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;MOTEapp.c: 421: else if(strncmp(modemResonseBuffer, "off", 2) == 0)
 12522  00639A  0E80               	movlw	low _modemResonseBuffer
 12523  00639C  6FC8               	movwf	strncmp@s1& (0+255),b
 12524  00639E  0E01               	movlw	high _modemResonseBuffer
 12525  0063A0  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
 12526  0063A2  0E28               	movlw	low (STR_243+12)
 12527  0063A4  6FCA               	movwf	strncmp@s2& (0+255),b
 12528  0063A6  0E7C               	movlw	high (STR_243+12)
 12529  0063A8  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
 12530  0063AA  6BCD               	clrf	(strncmp@len+1)& (0+255),b
 12531  0063AC  0E02               	movlw	2
 12532  0063AE  6FCC               	movwf	strncmp@len& (0+255),b
 12533  0063B0  EC98  F020         	call	_strncmp	;wreg free
 12534  0063B4  51C8               	movf	?_strncmp& (0+255),w,b
 12535  0063B6  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
 12536  0063B8  E001 D6CB          	bnz	l10924
 12537                           
 12538                           ; BSR set to: 0
 12539                           ;MOTEapp.c: 422: {
 12540                           ;MOTEapp.c: 423: MOTEapp_SetADR(0);
 12541  0063BC  0E00               	movlw	0
 12542  0063BE  EC68  F01A         	call	_MOTEapp_SetADR
 12543                           
 12544                           ;MOTEapp.c: 424: sendCommand("mac get dr");
 12545  0063C2  0ED0               	movlw	low STR_65
 12546  0063C4  0100               	movlb	0	; () banked
 12547  0063C6  6FC9               	movwf	sendCommand@string& (0+255),b
 12548  0063C8  0E7E               	movlw	high STR_65
 12549  0063CA  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12550  0063CC  EC32  F01C         	call	_sendCommand	;wreg free
 12551  0063D0  D7E2               	goto	l11014
 12552  0063D2                     l11026:
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;MOTEapp.c: 434: if ( messageReady )
 12556  0063D2  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12557  0063D4  E078               	bz	l11066
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;MOTEapp.c: 435: {
 12561                           ;MOTEapp.c: 436: if(strcmp(modemResonseBuffer, "invalid_param") == 0)
 12562  0063D6  0E80               	movlw	low _modemResonseBuffer
 12563  0063D8  6FC8               	movwf	strcmp@s1& (0+255),b
 12564  0063DA  0E01               	movlw	high _modemResonseBuffer
 12565  0063DC  6FC9               	movwf	(strcmp@s1+1)& (0+255),b
 12566  0063DE  0E58               	movlw	low STR_50
 12567  0063E0  6FCA               	movwf	strcmp@s2& (0+255),b
 12568  0063E2  0E7D               	movlw	high STR_50
 12569  0063E4  6FCB               	movwf	(strcmp@s2+1)& (0+255),b
 12570  0063E6  EC6D  F022         	call	_strcmp	;wreg free
 12571  0063EA  51C8               	movf	?_strcmp& (0+255),w,b
 12572  0063EC  11C9               	iorwf	(?_strcmp+1)& (0+255),w,b
 12573  0063EE  E107               	bnz	l11034
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;MOTEapp.c: 437: {
 12577                           ;MOTEapp.c: 438: sendCommand("mac get dr");
 12578  0063F0  0ED0               	movlw	low STR_65
 12579  0063F2  6FC9               	movwf	sendCommand@string& (0+255),b
 12580  0063F4  0E7E               	movlw	high STR_65
 12581  0063F6  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12582  0063F8  EC32  F01C         	call	_sendCommand	;wreg free
 12583  0063FC  D7CC               	goto	l11014
 12584  0063FE                     l11034:
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;MOTEapp.c: 441: else
 12588                           ;MOTEapp.c: 442: {
 12589                           ;MOTEapp.c: 443: uint8_t readDataRate;
 12590                           ;MOTEapp.c: 444: readDataRate = modemResonseBuffer[0] - '0';
 12591  0063FE  0101               	movlb	1	; () banked
 12592  006400  5180               	movf	_modemResonseBuffer& (0+255),w,b
 12593  006402  0FD0               	addlw	208
 12594  006404  0100               	movlb	0	; () banked
 12595  006406  6FDC               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 12596                           
 12597                           ;MOTEapp.c: 445: if (readDataRate > 6)
 12598  006408  0E06               	movlw	6
 12599  00640A  65DC               	cpfsgt	moteJoiningProcess@readDataRate& (0+255),b
 12600  00640C  D002               	goto	l11038
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;MOTEapp.c: 446: readDataRate = 2;
 12604  00640E  0E02               	movlw	2
 12605  006410  6FDC               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 12606  006412                     l11038:
 12607                           
 12608                           ; BSR set to: 0
 12609                           ;MOTEapp.c: 447: MOTEapp_SetDataRate(readDataRate);
 12610  006412  51DC               	movf	moteJoiningProcess@readDataRate& (0+255),w,b
 12611  006414  EC6C  F01A         	call	_MOTEapp_SetDataRate
 12612                           
 12613                           ;MOTEapp.c: 448: MOTEapp_WriteDataRate();
 12614  006418  EC6B  F02A         	call	_MOTEapp_WriteDataRate	;wreg free
 12615                           
 12616                           ; BSR set to: 0
 12617                           ;MOTEapp.c: 449: activeState = moteSetDr;
 12618  00641C  0E09               	movlw	9
 12619  00641E  D013               	goto	L48
 12620  006420                     l11044:
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;MOTEapp.c: 454: if ( messageReady )
 12624  006420  51DD               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 12625  006422  E051               	bz	l11066
 12626                           
 12627                           ; BSR set to: 0
 12628                           ;MOTEapp.c: 455: {
 12629                           ;MOTEapp.c: 456: if(strncmp(modemResonseBuffer, "ok", 2) == 0)
 12630  006424  0E80               	movlw	low _modemResonseBuffer
 12631  006426  6FC8               	movwf	strncmp@s1& (0+255),b
 12632  006428  0E01               	movlw	high _modemResonseBuffer
 12633  00642A  6FC9               	movwf	(strncmp@s1+1)& (0+255),b
 12634  00642C  0EF2               	movlw	low STR_32
 12635  00642E  6FCA               	movwf	strncmp@s2& (0+255),b
 12636  006430  0E7F               	movlw	high STR_32
 12637  006432  6FCB               	movwf	(strncmp@s2+1)& (0+255),b
 12638  006434  6BCD               	clrf	(strncmp@len+1)& (0+255),b
 12639  006436  0E02               	movlw	2
 12640  006438  6FCC               	movwf	strncmp@len& (0+255),b
 12641  00643A  EC98  F020         	call	_strncmp	;wreg free
 12642  00643E  51C8               	movf	?_strncmp& (0+255),w,b
 12643  006440  11C9               	iorwf	(?_strncmp+1)& (0+255),w,b
 12644  006442  E103               	bnz	l11050
 12645                           
 12646                           ; BSR set to: 0
 12647                           ;MOTEapp.c: 457: {
 12648                           ;MOTEapp.c: 458: activeState = moteDoneDr;
 12649  006444  0E0A               	movlw	10
 12650  006446                     L48:
 12651  006446  6F8D               	movwf	_activeState& (0+255),b
 12652                           
 12653                           ;MOTEapp.c: 459: }
 12654  006448  D03E               	goto	l11066
 12655  00644A                     l11050:
 12656                           
 12657                           ; BSR set to: 0
 12658                           ;MOTEapp.c: 460: else
 12659                           ;MOTEapp.c: 461: {
 12660                           ;MOTEapp.c: 462: sendCommand("mac get dr");
 12661  00644A  0ED0               	movlw	low STR_65
 12662  00644C  6FC9               	movwf	sendCommand@string& (0+255),b
 12663  00644E  0E7E               	movlw	high STR_65
 12664  006450  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 12665  006452  EC32  F01C         	call	_sendCommand	;wreg free
 12666  006456  D79F               	goto	l11014
 12667  006458                     l11054:
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;MOTEapp.c: 468: joiningComplete = 1;
 12671  006458  0E01               	movlw	1
 12672  00645A  6FDB               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 12673                           
 12674                           ;MOTEapp.c: 469: break;
 12675  00645C  D034               	goto	l11066
 12676  00645E                     l11056:
 12677                           
 12678                           ; BSR set to: 0
 12679                           ;MOTEapp.c: 474: DATAEE_WriteByte(0x00, 0x00);
 12680  00645E  0E00               	movlw	0
 12681  006460  6BC8               	clrf	DATAEE_WriteByte@bData& (0+255),b
 12682  006462  EC54  F01D         	call	_DATAEE_WriteByte
 12683  006466                     l412:
 12684  006466  B082               	btfsc	3970,0,c	;volatile
 12685  006468  D002               	goto	l11060
 12686  00646A  A282               	btfss	3970,1,c	;volatile
 12687  00646C  D7FC               	goto	l412
 12688  00646E                     l11060:
 12689                           
 12690                           ;MOTEapp.c: 476: moteApp_delayms(40);
 12691  00646E  0100               	movlb	0	; () banked
 12692  006470  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 12693  006472  0E28               	movlw	40
 12694  006474  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 12695  006476  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 12696  00647A  00FF               	reset		;# 
 12697                           
 12698                           ;MOTEapp.c: 479: break;
 12699  00647C  D024               	goto	l11066
 12700  00647E                     l11064:
 12701  00647E  0100               	movlb	0	; () banked
 12702  006480  518D               	movf	_activeState& (0+255),w,b
 12703                           
 12704                           ; Switch size 1, requested type "speed"
 12705                           ; Number of cases is 13, Range of values is 0 to 12
 12706                           ; switch strategies available:
 12707                           ; Name         Instructions Cycles
 12708                           ; simple_byte           40    21 (average)
 12709                           ;	Chosen strategy is simple_byte
 12710  006482  E101 D5A2          	bz	l10866
 12711  006486  0A01               	xorlw	1	; case 1
 12712  006488  E101 D5AD          	bz	l10872
 12713  00648C  0A03               	xorlw	3	; case 2
 12714  00648E  E101 D5CF          	bz	l10882
 12715  006492  0A01               	xorlw	1	; case 3
 12716  006494  E101 D633          	bz	l10912
 12717  006498  0A07               	xorlw	7	; case 4
 12718  00649A  E101 D677          	bz	l10936
 12719  00649E  0A01               	xorlw	1	; case 5
 12720  0064A0  E101 D6CC          	bz	l10962
 12721  0064A4  0A03               	xorlw	3	; case 6
 12722  0064A6  E101 D74B          	bz	l11000
 12723  0064AA  0A01               	xorlw	1	; case 7
 12724  0064AC  E092               	bz	l11026
 12725  0064AE  0A0F               	xorlw	15	; case 8
 12726  0064B0  E101 D754          	bz	l11006
 12727  0064B4  0A01               	xorlw	1	; case 9
 12728  0064B6  E0B4               	bz	l11044
 12729  0064B8  0A03               	xorlw	3	; case 10
 12730  0064BA  E0CE               	bz	l11054
 12731  0064BC  0A01               	xorlw	1	; case 11
 12732  0064BE  E003               	bz	l11066
 12733  0064C0  0A07               	xorlw	7	; case 12
 12734  0064C2  E0CD               	bz	l11056
 12735  0064C4  D581               	goto	l356
 12736  0064C6                     l11066:
 12737                           
 12738                           ;MOTEapp.c: 481: return joiningComplete;
 12739  0064C6  0100               	movlb	0	; () banked
 12740  0064C8  51DB               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 12741                           
 12742                           ; BSR set to: 0
 12743  0064CA  0012               	return		;funcret
 12744  0064CC                     __end_of_moteJoiningProcess:
 12745                           	opt stack 0
 12746                           tblptru	equ	0xFF8
 12747                           tblptrh	equ	0xFF7
 12748                           tblptrl	equ	0xFF6
 12749                           tablat	equ	0xFF5
 12750                           prodl	equ	0xFF3
 12751                           intcon	equ	0xFF2
 12752                           postinc0	equ	0xFEE
 12753                           wreg	equ	0xFE8
 12754                           postdec1	equ	0xFE5
 12755                           fsr1l	equ	0xFE1
 12756                           indf2	equ	0xFDF
 12757                           fsr2h	equ	0xFDA
 12758                           fsr2l	equ	0xFD9
 12759                           status	equ	0xFD8
 12760                           
 12761 ;; *************** function _strncmp *****************
 12762 ;; Defined at:
 12763 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strncmp.c"
 12764 ;; Parameters:    Size  Location     Type
 12765 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 12766 ;;		 -> modemResonseBuffer(64), 
 12767 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 12768 ;;		 -> STR_219(7), STR_217(7), STR_215(7), STR_212(7), 
 12769 ;;		 -> STR_70(3), STR_66(4), STR_64(3), STR_30(3), 
 12770 ;;  len             2    4[BANK0 ] unsigned int 
 12771 ;; Auto vars:     Size  Location     Type
 12772 ;;		None
 12773 ;; Return value:  Size  Location     Type
 12774 ;;                  2    0[BANK0 ] int 
 12775 ;; Registers used:
 12776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12777 ;; Tracked objects:
 12778 ;;		On entry : F/0
 12779 ;;		On exit  : F/0
 12780 ;;		Unchanged: 0/0
 12781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12782 ;;      Params:         0       6       0       0       0       0       0       0       0
 12783 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12784 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12785 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12786 ;;Total ram usage:        7 bytes
 12787 ;; Hardware stack levels used:    1
 12788 ;; Hardware stack levels required when called:   11
 12789 ;; This function calls:
 12790 ;;		Nothing
 12791 ;; This function is called by:
 12792 ;;		_moteJoiningProcess
 12793 ;;		_moteRunningProcess
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           	psect	text36
 12798  004130                     __ptext36:
 12799                           	opt stack 0
 12800  004130                     _strncmp:
 12801                           	opt stack 17
 12802                           
 12803                           ; BSR set to: 0
 12804                           
 12805                           ; BSR set to: 0
 12806                           ;incstack = 0
 12807  004130  D029               	goto	l10286
 12808  004132                     l10276:
 12809                           
 12810                           ; BSR set to: 0
 12811  004132  C0C8  FFD9         	movff	strncmp@s1,fsr2l
 12812  004136  C0C9  FFDA         	movff	strncmp@s1+1,fsr2h
 12813  00413A  50DF               	movf	indf2,w,c
 12814  00413C  E00D               	bz	l10280
 12815                           
 12816                           ; BSR set to: 0
 12817  00413E  C0C8  FFD9         	movff	strncmp@s1,fsr2l
 12818  004142  C0C9  FFDA         	movff	strncmp@s1+1,fsr2h
 12819  004146  50DF               	movf	indf2,w,c
 12820  004148  6FCE               	movwf	??_strncmp& (0+255),b
 12821  00414A  C0CA  FFF6         	movff	strncmp@s2,tblptrl
 12822  00414E  C0CB  FFF7         	movff	strncmp@s2+1,tblptrh
 12823  004152                     	if	0	;tblptru may be non-zero
 12824  004152                     	endif
 12825  004152                     	if	0	;tblptru may be non-zero
 12826  004152                     	endif
 12827  004152  0008               	tblrd		*
 12828  004154  18F5               	xorwf	tablat,w,c
 12829  004156  E012               	bz	l10284
 12830  004158                     l10280:
 12831                           
 12832                           ; BSR set to: 0
 12833  004158  C0C8  FFD9         	movff	strncmp@s1,fsr2l
 12834  00415C  C0C9  FFDA         	movff	strncmp@s1+1,fsr2h
 12835  004160  50DF               	movf	indf2,w,c
 12836  004162  6FCE               	movwf	??_strncmp& (0+255),b
 12837  004164  C0CA  FFF6         	movff	strncmp@s2,tblptrl
 12838  004168  C0CB  FFF7         	movff	strncmp@s2+1,tblptrh
 12839  00416C                     	if	0	;tblptru may be non-zero
 12840  00416C                     	endif
 12841  00416C                     	if	0	;tblptru may be non-zero
 12842  00416C                     	endif
 12843  00416C  0008               	tblrd		*
 12844  00416E  50F5               	movf	tablat,w,c
 12845  004170  5DCE               	subwf	??_strncmp& (0+255),w,b
 12846  004172  6FC8               	movwf	?_strncmp& (0+255),b
 12847  004174  6BC9               	clrf	(?_strncmp+1)& (0+255),b
 12848  004176  A0D8               	btfss	status,0,c
 12849  004178  07C9               	decf	(?_strncmp+1)& (0+255),f,b
 12850  00417A  0012               	return	
 12851  00417C                     l10284:
 12852                           
 12853                           ; BSR set to: 0
 12854  00417C  4BC8               	infsnz	strncmp@s1& (0+255),f,b
 12855  00417E  2BC9               	incf	(strncmp@s1+1)& (0+255),f,b
 12856  004180  4BCA               	infsnz	strncmp@s2& (0+255),f,b
 12857  004182  2BCB               	incf	(strncmp@s2+1)& (0+255),f,b
 12858  004184                     l10286:
 12859                           
 12860                           ; BSR set to: 0
 12861  004184  07CC               	decf	strncmp@len& (0+255),f,b
 12862  004186  A0D8               	btfss	status,0,c
 12863  004188  07CD               	decf	(strncmp@len+1)& (0+255),f,b
 12864  00418A  29CC               	incf	strncmp@len& (0+255),w,b
 12865  00418C  E1D2               	bnz	l10276
 12866  00418E  29CD               	incf	(strncmp@len+1)& (0+255),w,b
 12867  004190  E1D0               	bnz	l10276
 12868                           
 12869                           ; BSR set to: 0
 12870  004192  6BC8               	clrf	?_strncmp& (0+255),b
 12871  004194  6BC9               	clrf	(?_strncmp+1)& (0+255),b
 12872                           
 12873                           ; BSR set to: 0
 12874  004196  0012               	return		;funcret
 12875  004198                     __end_of_strncmp:
 12876                           	opt stack 0
 12877                           tblptru	equ	0xFF8
 12878                           tblptrh	equ	0xFF7
 12879                           tblptrl	equ	0xFF6
 12880                           tablat	equ	0xFF5
 12881                           prodl	equ	0xFF3
 12882                           intcon	equ	0xFF2
 12883                           postinc0	equ	0xFEE
 12884                           wreg	equ	0xFE8
 12885                           postdec1	equ	0xFE5
 12886                           fsr1l	equ	0xFE1
 12887                           indf2	equ	0xFDF
 12888                           fsr2h	equ	0xFDA
 12889                           fsr2l	equ	0xFD9
 12890                           status	equ	0xFD8
 12891                           
 12892 ;; *************** function _strcmp *****************
 12893 ;; Defined at:
 12894 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
 12895 ;; Parameters:    Size  Location     Type
 12896 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 12897 ;;		 -> modemResonseBuffer(64), 
 12898 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 12899 ;;		 -> STR_211(3), STR_68(14), STR_60(11), STR_56(7), 
 12900 ;;		 -> STR_53(9), STR_52(11), STR_50(14), STR_47(14), 
 12901 ;;		 -> STR_46(3), STR_43(7), STR_40(9), STR_33(14), 
 12902 ;;		 -> STR_32(3), 
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;  t1              1    8[BANK0 ] unsigned char 
 12905 ;;  t2              1    7[BANK0 ] unsigned char 
 12906 ;;  t0              1    6[BANK0 ] unsigned char 
 12907 ;; Return value:  Size  Location     Type
 12908 ;;                  2    0[BANK0 ] int 
 12909 ;; Registers used:
 12910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12911 ;; Tracked objects:
 12912 ;;		On entry : F/0
 12913 ;;		On exit  : F/0
 12914 ;;		Unchanged: 0/0
 12915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12916 ;;      Params:         0       4       0       0       0       0       0       0       0
 12917 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12918 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12919 ;;      Totals:         0       9       0       0       0       0       0       0       0
 12920 ;;Total ram usage:        9 bytes
 12921 ;; Hardware stack levels used:    1
 12922 ;; Hardware stack levels required when called:   11
 12923 ;; This function calls:
 12924 ;;		Nothing
 12925 ;; This function is called by:
 12926 ;;		_moteJoiningProcess
 12927 ;;		_moteRunningProcess
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931                           	psect	text37
 12932  0044DA                     __ptext37:
 12933                           	opt stack 0
 12934  0044DA                     _strcmp:
 12935                           	opt stack 17
 12936  0044DA                     l10288:
 12937                           
 12938                           ; BSR set to: 0
 12939  0044DA  C0C8  FFD9         	movff	strcmp@s1,fsr2l
 12940  0044DE  C0C9  FFDA         	movff	strcmp@s1+1,fsr2h
 12941  0044E2  50DF               	movf	indf2,w,c
 12942  0044E4  6FCE               	movwf	strcmp@t0& (0+255),b
 12943                           
 12944                           ; BSR set to: 0
 12945  0044E6  C0CA  FFF6         	movff	strcmp@s2,tblptrl
 12946  0044EA  C0CB  FFF7         	movff	strcmp@s2+1,tblptrh
 12947  0044EE                     	if	0	;tblptru may be non-zero
 12948  0044EE                     	endif
 12949  0044EE                     	if	0	;tblptru may be non-zero
 12950  0044EE                     	endif
 12951  0044EE  0008               	tblrd		*
 12952  0044F0  CFF5 F0D0          	movff	tablat,strcmp@t1
 12953                           
 12954                           ; BSR set to: 0
 12955  0044F4  51CE               	movf	strcmp@t0& (0+255),w,b
 12956  0044F6  E02C               	bz	l10318
 12957                           
 12958                           ; BSR set to: 0
 12959  0044F8  0E02               	movlw	2
 12960  0044FA  27C8               	addwf	strcmp@s1& (0+255),f,b
 12961  0044FC  0E00               	movlw	0
 12962  0044FE  23C9               	addwfc	(strcmp@s1+1)& (0+255),f,b
 12963  004500  51D0               	movf	strcmp@t1& (0+255),w,b
 12964  004502  19CE               	xorwf	strcmp@t0& (0+255),w,b
 12965  004504  E125               	bnz	l10318
 12966                           
 12967                           ; BSR set to: 0
 12968  004506  EE2F F0FF          	lfsr	2,-1
 12969  00450A  51C8               	movf	strcmp@s1& (0+255),w,b
 12970  00450C  26D9               	addwf	fsr2l,f,c
 12971  00450E  51C9               	movf	(strcmp@s1+1)& (0+255),w,b
 12972  004510  22DA               	addwfc	fsr2h,f,c
 12973  004512  50DF               	movf	indf2,w,c
 12974  004514  6FCF               	movwf	strcmp@t2& (0+255),b
 12975                           
 12976                           ; BSR set to: 0
 12977  004516  29CA               	incf	strcmp@s2& (0+255),w,b
 12978  004518  6FCC               	movwf	??_strcmp& (0+255),b
 12979  00451A  0E00               	movlw	0
 12980  00451C  21CB               	addwfc	(strcmp@s2+1)& (0+255),w,b
 12981  00451E  6FCD               	movwf	(??_strcmp+1)& (0+255),b
 12982  004520  C0CC  FFF6         	movff	??_strcmp,tblptrl
 12983  004524  C0CD  FFF7         	movff	??_strcmp+1,tblptrh
 12984  004528                     	if	0	;tblptru may be non-zero
 12985  004528                     	endif
 12986  004528                     	if	0	;tblptru may be non-zero
 12987  004528                     	endif
 12988  004528  0008               	tblrd		*
 12989  00452A  CFF5 F0D0          	movff	tablat,strcmp@t1
 12990                           
 12991                           ; BSR set to: 0
 12992  00452E  51CF               	movf	strcmp@t2& (0+255),w,b
 12993  004530  E107               	bnz	l10310
 12994  004532                     l10306:
 12995                           
 12996                           ; BSR set to: 0
 12997  004532  51D0               	movf	strcmp@t1& (0+255),w,b
 12998  004534  5DCF               	subwf	strcmp@t2& (0+255),w,b
 12999  004536  6FC8               	movwf	?_strcmp& (0+255),b
 13000  004538  6BC9               	clrf	(?_strcmp+1)& (0+255),b
 13001  00453A  A0D8               	btfss	status,0,c
 13002  00453C  07C9               	decf	(?_strcmp+1)& (0+255),f,b
 13003  00453E  0012               	return	
 13004  004540                     l10310:
 13005                           
 13006                           ; BSR set to: 0
 13007  004540  0E02               	movlw	2
 13008  004542  27CA               	addwf	strcmp@s2& (0+255),f,b
 13009  004544  0E00               	movlw	0
 13010  004546  23CB               	addwfc	(strcmp@s2+1)& (0+255),f,b
 13011  004548  51CF               	movf	strcmp@t2& (0+255),w,b
 13012  00454A  19D0               	xorwf	strcmp@t1& (0+255),w,b
 13013  00454C  E1F2               	bnz	l10306
 13014  00454E  D7C5               	goto	l10288
 13015  004550                     l10318:
 13016                           
 13017                           ; BSR set to: 0
 13018  004550  51D0               	movf	strcmp@t1& (0+255),w,b
 13019  004552  5DCE               	subwf	strcmp@t0& (0+255),w,b
 13020  004554  6FC8               	movwf	?_strcmp& (0+255),b
 13021  004556  6BC9               	clrf	(?_strcmp+1)& (0+255),b
 13022  004558  A0D8               	btfss	status,0,c
 13023  00455A  07C9               	decf	(?_strcmp+1)& (0+255),f,b
 13024                           
 13025                           ; BSR set to: 0
 13026  00455C  0012               	return		;funcret
 13027  00455E                     __end_of_strcmp:
 13028                           	opt stack 0
 13029                           tblptru	equ	0xFF8
 13030                           tblptrh	equ	0xFF7
 13031                           tblptrl	equ	0xFF6
 13032                           tablat	equ	0xFF5
 13033                           prodl	equ	0xFF3
 13034                           intcon	equ	0xFF2
 13035                           postinc0	equ	0xFEE
 13036                           wreg	equ	0xFE8
 13037                           postdec1	equ	0xFE5
 13038                           fsr1l	equ	0xFE1
 13039                           indf2	equ	0xFDF
 13040                           fsr2h	equ	0xFDA
 13041                           fsr2l	equ	0xFD9
 13042                           status	equ	0xFD8
 13043                           
 13044 ;; *************** function _MOTEapp_WriteDataRate *****************
 13045 ;; Defined at:
 13046 ;;		line 1102 in file "../Includes/Board/MOTEapp.c"
 13047 ;; Parameters:    Size  Location     Type
 13048 ;;		None
 13049 ;; Auto vars:     Size  Location     Type
 13050 ;;		None
 13051 ;; Return value:  Size  Location     Type
 13052 ;;		None               void
 13053 ;; Registers used:
 13054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13055 ;; Tracked objects:
 13056 ;;		On entry : 0/0
 13057 ;;		On exit  : F/0
 13058 ;;		Unchanged: 0/0
 13059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13060 ;;      Params:         0       0       0       0       0       0       0       0       0
 13061 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13062 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13063 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13064 ;;Total ram usage:        0 bytes
 13065 ;; Hardware stack levels used:    1
 13066 ;; Hardware stack levels required when called:   14
 13067 ;; This function calls:
 13068 ;;		_moteApp_delayms
 13069 ;;		_sendCommand
 13070 ;; This function is called by:
 13071 ;;		_moteJoiningProcess
 13072 ;;		_moteRunningProcess
 13073 ;; This function uses a non-reentrant model
 13074 ;;
 13075                           
 13076                           	psect	text38
 13077  0054D6                     __ptext38:
 13078                           	opt stack 0
 13079  0054D6                     _MOTEapp_WriteDataRate:
 13080                           	opt stack 14
 13081                           
 13082                           ;MOTEapp.c: 1105: moteApp_delayms(100);
 13083                           
 13084                           ; BSR set to: 0
 13085                           ;incstack = 0
 13086  0054D6  0100               	movlb	0	; () banked
 13087  0054D8  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 13088  0054DA  0E64               	movlw	100
 13089  0054DC  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 13090  0054DE  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;MOTEapp.c: 1107: if (adrStatus)
 13094  0054E2  518E               	movf	_adrStatus& (0+255),w,b
 13095  0054E4  E00D               	bz	l10334
 13096                           
 13097                           ; BSR set to: 0
 13098                           ;MOTEapp.c: 1108: {
 13099                           ;MOTEapp.c: 1109: sendCommand("mac set adr on");
 13100  0054E6  0E00               	movlw	low STR_242
 13101  0054E8  6FC9               	movwf	sendCommand@string& (0+255),b
 13102  0054EA  0E7D               	movlw	high STR_242
 13103  0054EC  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13104  0054EE  EC32  F01C         	call	_sendCommand	;wreg free
 13105  0054F2                     l10332:
 13106                           
 13107                           ;MOTEapp.c: 1110: moteApp_delayms(100);
 13108  0054F2  0100               	movlb	0	; () banked
 13109  0054F4  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 13110  0054F6  0E64               	movlw	100
 13111  0054F8  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 13112  0054FA  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 13113                           
 13114                           ;MOTEapp.c: 1111: }
 13115  0054FE  D03F               	goto	l10356
 13116  005500                     l10334:
 13117                           
 13118                           ; BSR set to: 0
 13119                           ;MOTEapp.c: 1112: else
 13120                           ;MOTEapp.c: 1113: {
 13121                           ;MOTEapp.c: 1114: sendCommand("mac set adr off");
 13122  005500  0E1C               	movlw	low STR_243
 13123  005502  6FC9               	movwf	sendCommand@string& (0+255),b
 13124  005504  0E7C               	movlw	high STR_243
 13125  005506  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13126  005508  EC32  F01C         	call	_sendCommand	;wreg free
 13127  00550C  D7F2               	goto	l10332
 13128  00550E                     l10338:
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;MOTEapp.c: 1121: sendCommand("mac set dr 0");
 13132  00550E  0E8E               	movlw	low STR_244
 13133  005510  6FC9               	movwf	sendCommand@string& (0+255),b
 13134  005512  0E7D               	movlw	high STR_244
 13135  005514  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13136  005516  EC32  F01C         	call	_sendCommand	;wreg free
 13137                           
 13138                           ;MOTEapp.c: 1122: break;
 13139  00551A  D041               	goto	l10358
 13140  00551C                     l10340:
 13141                           
 13142                           ; BSR set to: 0
 13143                           ;MOTEapp.c: 1124: sendCommand("mac set dr 1");
 13144  00551C  0E9B               	movlw	low STR_245
 13145  00551E  6FC9               	movwf	sendCommand@string& (0+255),b
 13146  005520  0E7D               	movlw	high STR_245
 13147  005522  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13148  005524  EC32  F01C         	call	_sendCommand	;wreg free
 13149                           
 13150                           ;MOTEapp.c: 1125: break;
 13151  005528  D03A               	goto	l10358
 13152  00552A                     l10342:
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;MOTEapp.c: 1127: sendCommand("mac set dr 2");
 13156  00552A  0EA8               	movlw	low STR_246
 13157  00552C  6FC9               	movwf	sendCommand@string& (0+255),b
 13158  00552E  0E7D               	movlw	high STR_246
 13159  005530  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13160  005532  EC32  F01C         	call	_sendCommand	;wreg free
 13161                           
 13162                           ;MOTEapp.c: 1128: break;
 13163  005536  D033               	goto	l10358
 13164  005538                     l10344:
 13165                           
 13166                           ; BSR set to: 0
 13167                           ;MOTEapp.c: 1130: sendCommand("mac set dr 3");
 13168  005538  0EB5               	movlw	low STR_247
 13169  00553A  6FC9               	movwf	sendCommand@string& (0+255),b
 13170  00553C  0E7D               	movlw	high STR_247
 13171  00553E  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13172  005540  EC32  F01C         	call	_sendCommand	;wreg free
 13173                           
 13174                           ;MOTEapp.c: 1131: break;
 13175  005544  D02C               	goto	l10358
 13176  005546                     l10346:
 13177                           
 13178                           ; BSR set to: 0
 13179                           ;MOTEapp.c: 1133: sendCommand("mac set dr 4");
 13180  005546  0EC2               	movlw	low STR_248
 13181  005548  6FC9               	movwf	sendCommand@string& (0+255),b
 13182  00554A  0E7D               	movlw	high STR_248
 13183  00554C  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13184  00554E  EC32  F01C         	call	_sendCommand	;wreg free
 13185                           
 13186                           ;MOTEapp.c: 1134: break;
 13187  005552  D025               	goto	l10358
 13188  005554                     l10348:
 13189                           
 13190                           ; BSR set to: 0
 13191                           ;MOTEapp.c: 1136: sendCommand("mac set dr 5");
 13192  005554  0ECF               	movlw	low STR_249
 13193  005556  6FC9               	movwf	sendCommand@string& (0+255),b
 13194  005558  0E7D               	movlw	high STR_249
 13195  00555A  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13196  00555C  EC32  F01C         	call	_sendCommand	;wreg free
 13197                           
 13198                           ;MOTEapp.c: 1137: break;
 13199  005560  D01E               	goto	l10358
 13200  005562                     l10350:
 13201                           
 13202                           ; BSR set to: 0
 13203                           ;MOTEapp.c: 1139: sendCommand("mac set dr 6");
 13204  005562  0EDC               	movlw	low STR_250
 13205  005564  6FC9               	movwf	sendCommand@string& (0+255),b
 13206  005566  0E7D               	movlw	high STR_250
 13207  005568  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13208  00556A  EC32  F01C         	call	_sendCommand	;wreg free
 13209                           
 13210                           ;MOTEapp.c: 1140: break;
 13211  00556E  D017               	goto	l10358
 13212  005570                     l10352:
 13213                           
 13214                           ; BSR set to: 0
 13215                           ;MOTEapp.c: 1142: sendCommand("mac set dr 7");
 13216  005570  0EE9               	movlw	low STR_251
 13217  005572  6FC9               	movwf	sendCommand@string& (0+255),b
 13218  005574  0E7D               	movlw	high STR_251
 13219  005576  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13220  005578  EC32  F01C         	call	_sendCommand	;wreg free
 13221                           
 13222                           ;MOTEapp.c: 1143: break;
 13223  00557C  D010               	goto	l10358
 13224  00557E                     l10356:
 13225                           
 13226                           ; BSR set to: 0
 13227  00557E  51F7               	movf	_dataRateSelection& (0+255),w,b
 13228                           
 13229                           ; Switch size 1, requested type "speed"
 13230                           ; Number of cases is 8, Range of values is 0 to 7
 13231                           ; switch strategies available:
 13232                           ; Name         Instructions Cycles
 13233                           ; simple_byte           25    13 (average)
 13234                           ;	Chosen strategy is simple_byte
 13235  005580  E0C6               	bz	l10338
 13236  005582  0A01               	xorlw	1	; case 1
 13237  005584  E0CB               	bz	l10340
 13238  005586  0A03               	xorlw	3	; case 2
 13239  005588  E0D0               	bz	l10342
 13240  00558A  0A01               	xorlw	1	; case 3
 13241  00558C  E0D5               	bz	l10344
 13242  00558E  0A07               	xorlw	7	; case 4
 13243  005590  E0DA               	bz	l10346
 13244  005592  0A01               	xorlw	1	; case 5
 13245  005594  E0DF               	bz	l10348
 13246  005596  0A03               	xorlw	3	; case 6
 13247  005598  E0E4               	bz	l10350
 13248  00559A  0A01               	xorlw	1	; case 7
 13249  00559C  E0E9               	bz	l10352
 13250  00559E                     l10358:
 13251                           
 13252                           ;MOTEapp.c: 1148: moteApp_delayms(100);
 13253  00559E  0100               	movlb	0	; () banked
 13254  0055A0  6BC9               	clrf	(moteApp_delayms@length+1)& (0+255),b
 13255  0055A2  0E64               	movlw	100
 13256  0055A4  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 13257  0055A6  ECCC  F01B         	call	_moteApp_delayms	;wreg free
 13258                           
 13259                           ; BSR set to: 0
 13260                           ;MOTEapp.c: 1149: sendCommand("mac save");
 13261  0055AA  0E48               	movlw	low STR_252
 13262  0055AC  6FC9               	movwf	sendCommand@string& (0+255),b
 13263  0055AE  0E7F               	movlw	high STR_252
 13264  0055B0  6FCA               	movwf	(sendCommand@string+1)& (0+255),b
 13265  0055B2  EC32  F01C         	call	_sendCommand	;wreg free
 13266                           
 13267                           ;MOTEapp.c: 1150: moteApp_delayms(300);
 13268  0055B6  0E01               	movlw	1
 13269  0055B8  0100               	movlb	0	; () banked
 13270  0055BA  6FC9               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13271  0055BC  0E2C               	movlw	44
 13272  0055BE  6FC8               	movwf	moteApp_delayms@length& (0+255),b
 13273  0055C0  EFCC  F01B         	goto	_moteApp_delayms	;wreg free
 13274  0055C4                     __end_of_MOTEapp_WriteDataRate:
 13275                           	opt stack 0
 13276                           tblptru	equ	0xFF8
 13277                           tblptrh	equ	0xFF7
 13278                           tblptrl	equ	0xFF6
 13279                           tablat	equ	0xFF5
 13280                           prodl	equ	0xFF3
 13281                           intcon	equ	0xFF2
 13282                           postinc0	equ	0xFEE
 13283                           wreg	equ	0xFE8
 13284                           postdec1	equ	0xFE5
 13285                           fsr1l	equ	0xFE1
 13286                           indf2	equ	0xFDF
 13287                           fsr2h	equ	0xFDA
 13288                           fsr2l	equ	0xFD9
 13289                           status	equ	0xFD8
 13290                           
 13291 ;; *************** function _sendCommand *****************
 13292 ;; Defined at:
 13293 ;;		line 1231 in file "../Includes/Board/MOTEapp.c"
 13294 ;; Parameters:    Size  Location     Type
 13295 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 13296 ;;		 -> STR_257(26), STR_256(26), STR_255(26), STR_254(26), 
 13297 ;;		 -> STR_253(1), STR_252(9), STR_251(13), STR_250(13), 
 13298 ;;		 -> STR_249(13), STR_248(13), STR_247(13), STR_246(13), 
 13299 ;;		 -> STR_245(13), STR_244(13), STR_243(16), STR_242(15), 
 13300 ;;		 -> STR_71(11), STR_69(11), STR_67(11), STR_65(11), 
 13301 ;;		 -> STR_63(12), STR_59(14), STR_51(14), STR_45(10), 
 13302 ;;		 -> STR_44(13), STR_39(13), STR_38(14), STR_31(13), 
 13303 ;;		 -> STR_29(12), STR_22(20), STR_21(2), 
 13304 ;; Auto vars:     Size  Location     Type
 13305 ;;		None
 13306 ;; Return value:  Size  Location     Type
 13307 ;;		None               void
 13308 ;; Registers used:
 13309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13310 ;; Tracked objects:
 13311 ;;		On entry : F/0
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13315 ;;      Params:         0       2       0       0       0       0       0       0       0
 13316 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13317 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13318 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13319 ;;Total ram usage:        2 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; Hardware stack levels required when called:   13
 13322 ;; This function calls:
 13323 ;;		_EUSART_Write
 13324 ;;		_EndLine
 13325 ;; This function is called by:
 13326 ;;		_modemResync
 13327 ;;		_modemSleep
 13328 ;;		_moteJoiningProcess
 13329 ;;		_MOTEapp_WriteDataRate
 13330 ;;		_moteApp_toggleLeds
 13331 ;; This function uses a non-reentrant model
 13332 ;;
 13333                           
 13334                           	psect	text39
 13335  003864                     __ptext39:
 13336                           	opt stack 0
 13337  003864                     _sendCommand:
 13338                           	opt stack 14
 13339                           
 13340                           ; BSR set to: 0
 13341                           ;MOTEapp.c: 1234: while (*string)
 13342                           
 13343                           ; BSR set to: 0
 13344                           ;incstack = 0
 13345  003864  D00B               	goto	l9882
 13346  003866                     l9878:
 13347                           
 13348                           ; BSR set to: 0
 13349                           ;MOTEapp.c: 1235: {
 13350                           ;MOTEapp.c: 1236: EUSART_Write(*string++);
 13351  003866  C0C9  FFF6         	movff	sendCommand@string,tblptrl
 13352  00386A  C0CA  FFF7         	movff	sendCommand@string+1,tblptrh
 13353  00386E                     	if	0	;tblptru may be non-zero
 13354  00386E                     	endif
 13355  00386E                     	if	0	;tblptru may be non-zero
 13356  00386E                     	endif
 13357  00386E  0008               	tblrd		*
 13358  003870  50F5               	movf	tablat,w,c
 13359  003872  ECCC  F01C         	call	_EUSART_Write
 13360  003876  0100               	movlb	0	; () banked
 13361  003878  4BC9               	infsnz	sendCommand@string& (0+255),f,b
 13362  00387A  2BCA               	incf	(sendCommand@string+1)& (0+255),f,b
 13363  00387C                     l9882:
 13364                           
 13365                           ; BSR set to: 0
 13366  00387C  C0C9  FFF6         	movff	sendCommand@string,tblptrl
 13367  003880  C0CA  FFF7         	movff	sendCommand@string+1,tblptrh
 13368  003884                     	if	0	;tblptru may be non-zero
 13369  003884                     	endif
 13370  003884                     	if	0	;tblptru may be non-zero
 13371  003884                     	endif
 13372  003884  0008               	tblrd		*
 13373  003886  50F5               	movf	tablat,w,c
 13374  003888  E1EE               	bnz	l9878
 13375                           
 13376                           ; BSR set to: 0
 13377                           ;MOTEapp.c: 1237: }
 13378                           ;MOTEapp.c: 1238: EndLine();
 13379  00388A  EF86  F01A         	goto	_EndLine	;wreg free
 13380  00388E                     __end_of_sendCommand:
 13381                           	opt stack 0
 13382                           tblptru	equ	0xFF8
 13383                           tblptrh	equ	0xFF7
 13384                           tblptrl	equ	0xFF6
 13385                           tablat	equ	0xFF5
 13386                           prodl	equ	0xFF3
 13387                           intcon	equ	0xFF2
 13388                           postinc0	equ	0xFEE
 13389                           wreg	equ	0xFE8
 13390                           postdec1	equ	0xFE5
 13391                           fsr1l	equ	0xFE1
 13392                           indf2	equ	0xFDF
 13393                           fsr2h	equ	0xFDA
 13394                           fsr2l	equ	0xFD9
 13395                           status	equ	0xFD8
 13396                           
 13397 ;; *************** function _EndLine *****************
 13398 ;; Defined at:
 13399 ;;		line 1225 in file "../Includes/Board/MOTEapp.c"
 13400 ;; Parameters:    Size  Location     Type
 13401 ;;		None
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;		None
 13404 ;; Return value:  Size  Location     Type
 13405 ;;		None               void
 13406 ;; Registers used:
 13407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13408 ;; Tracked objects:
 13409 ;;		On entry : F/0
 13410 ;;		On exit  : 0/0
 13411 ;;		Unchanged: 0/0
 13412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13413 ;;      Params:         0       0       0       0       0       0       0       0       0
 13414 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13415 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13416 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13417 ;;Total ram usage:        0 bytes
 13418 ;; Hardware stack levels used:    1
 13419 ;; Hardware stack levels required when called:   12
 13420 ;; This function calls:
 13421 ;;		_EUSART_Write
 13422 ;; This function is called by:
 13423 ;;		_sendCommand
 13424 ;;		_sendDataCommand
 13425 ;; This function uses a non-reentrant model
 13426 ;;
 13427                           
 13428                           	psect	text40
 13429  00350C                     __ptext40:
 13430                           	opt stack 0
 13431  00350C                     _EndLine:
 13432                           	opt stack 14
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;MOTEapp.c: 1227: EUSART_Write(0x0D);
 13436                           
 13437                           ;incstack = 0
 13438  00350C  0E0D               	movlw	13
 13439  00350E  ECCC  F01C         	call	_EUSART_Write
 13440                           
 13441                           ;MOTEapp.c: 1228: EUSART_Write(0x0A);
 13442  003512  0E0A               	movlw	10
 13443  003514  EFCC  F01C         	goto	_EUSART_Write
 13444  003518                     __end_of_EndLine:
 13445                           	opt stack 0
 13446                           tblptru	equ	0xFF8
 13447                           tblptrh	equ	0xFF7
 13448                           tblptrl	equ	0xFF6
 13449                           tablat	equ	0xFF5
 13450                           prodl	equ	0xFF3
 13451                           intcon	equ	0xFF2
 13452                           postinc0	equ	0xFEE
 13453                           wreg	equ	0xFE8
 13454                           postdec1	equ	0xFE5
 13455                           fsr1l	equ	0xFE1
 13456                           indf2	equ	0xFDF
 13457                           fsr2h	equ	0xFDA
 13458                           fsr2l	equ	0xFD9
 13459                           status	equ	0xFD8
 13460                           
 13461 ;; *************** function _moteApp_delayms *****************
 13462 ;; Defined at:
 13463 ;;		line 1421 in file "../Includes/Board/MOTEapp.c"
 13464 ;; Parameters:    Size  Location     Type
 13465 ;;  length          2    0[BANK0 ] unsigned int 
 13466 ;; Auto vars:     Size  Location     Type
 13467 ;;  counter         2    3[BANK0 ] unsigned int 
 13468 ;; Return value:  Size  Location     Type
 13469 ;;		None               void
 13470 ;; Registers used:
 13471 ;;		wreg, status,2, status,0
 13472 ;; Tracked objects:
 13473 ;;		On entry : F/0
 13474 ;;		On exit  : F/0
 13475 ;;		Unchanged: 0/0
 13476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13477 ;;      Params:         0       2       0       0       0       0       0       0       0
 13478 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13479 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13480 ;;      Totals:         0       5       0       0       0       0       0       0       0
 13481 ;;Total ram usage:        5 bytes
 13482 ;; Hardware stack levels used:    1
 13483 ;; Hardware stack levels required when called:   11
 13484 ;; This function calls:
 13485 ;;		Nothing
 13486 ;; This function is called by:
 13487 ;;		_main
 13488 ;;		_test_powerup
 13489 ;;		_test_switch
 13490 ;;		_test_comms
 13491 ;;		_test_leds
 13492 ;;		_test_adc
 13493 ;;		_modemResync
 13494 ;;		_modemSleep
 13495 ;;		_moteHandler
 13496 ;;		_moteJoiningProcess
 13497 ;;		_moteRunningProcess
 13498 ;;		_MOTEapp_WriteDataRate
 13499 ;;		_moteApp_toggleLeds
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           	psect	text41
 13504  003798                     __ptext41:
 13505                           	opt stack 0
 13506  003798                     _moteApp_delayms:
 13507                           	opt stack 17
 13508                           
 13509                           ; BSR set to: 0
 13510                           ;MOTEapp.c: 1423: uint16_t counter;
 13511                           ;MOTEapp.c: 1424: for(counter = 0; counter < length; counter++)
 13512                           
 13513                           ;incstack = 0
 13514  003798  6BCB               	clrf	moteApp_delayms@counter& (0+255),b
 13515  00379A  6BCC               	clrf	(moteApp_delayms@counter+1)& (0+255),b
 13516  00379C  D00B               	goto	l728
 13517  00379E                     l9870:
 13518                           
 13519                           ; BSR set to: 0
 13520                           ;MOTEapp.c: 1425: {
 13521                           ;MOTEapp.c: 1426: _delay((unsigned long)((1)*(48000000/4000.0)));
 13522  00379E  0E10               	movlw	16
 13523  0037A0  6FCA               	movwf	??_moteApp_delayms& (0+255),b
 13524  0037A2  0E94               	movlw	148
 13525  0037A4                     u10637:
 13526  0037A4  2EE8               	decfsz	wreg,f,c
 13527  0037A6  D7FE               	goto	u10637
 13528  0037A8  2FCA               	decfsz	??_moteApp_delayms& (0+255),f,b
 13529  0037AA  D7FC               	goto	u10637
 13530  0037AC  D000               	nop2	
 13531  0037AE  0100               	movlb	0	; () banked
 13532  0037B0  4BCB               	infsnz	moteApp_delayms@counter& (0+255),f,b
 13533  0037B2  2BCC               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 13534  0037B4                     l728:
 13535                           
 13536                           ; BSR set to: 0
 13537  0037B4  51C8               	movf	moteApp_delayms@length& (0+255),w,b
 13538  0037B6  5DCB               	subwf	moteApp_delayms@counter& (0+255),w,b
 13539  0037B8  51C9               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 13540  0037BA  59CC               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 13541  0037BC  E3F0               	bnc	l9870
 13542                           
 13543                           ; BSR set to: 0
 13544  0037BE  0012               	return		;funcret
 13545  0037C0                     __end_of_moteApp_delayms:
 13546                           	opt stack 0
 13547                           tblptru	equ	0xFF8
 13548                           tblptrh	equ	0xFF7
 13549                           tblptrl	equ	0xFF6
 13550                           tablat	equ	0xFF5
 13551                           prodl	equ	0xFF3
 13552                           intcon	equ	0xFF2
 13553                           postinc0	equ	0xFEE
 13554                           wreg	equ	0xFE8
 13555                           postdec1	equ	0xFE5
 13556                           fsr1l	equ	0xFE1
 13557                           indf2	equ	0xFDF
 13558                           fsr2h	equ	0xFDA
 13559                           fsr2l	equ	0xFD9
 13560                           status	equ	0xFD8
 13561                           
 13562 ;; *************** function _MOTEapp_SetDataRate *****************
 13563 ;; Defined at:
 13564 ;;		line 1097 in file "../Includes/Board/MOTEapp.c"
 13565 ;; Parameters:    Size  Location     Type
 13566 ;;  dataRate        1    wreg     unsigned char 
 13567 ;; Auto vars:     Size  Location     Type
 13568 ;;  dataRate        1    0[BANK0 ] unsigned char 
 13569 ;; Return value:  Size  Location     Type
 13570 ;;		None               void
 13571 ;; Registers used:
 13572 ;;		wreg
 13573 ;; Tracked objects:
 13574 ;;		On entry : F/0
 13575 ;;		On exit  : 0/0
 13576 ;;		Unchanged: 0/0
 13577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13578 ;;      Params:         0       0       0       0       0       0       0       0       0
 13579 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13580 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13581 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13582 ;;Total ram usage:        1 bytes
 13583 ;; Hardware stack levels used:    1
 13584 ;; Hardware stack levels required when called:   11
 13585 ;; This function calls:
 13586 ;;		Nothing
 13587 ;; This function is called by:
 13588 ;;		_moteJoiningProcess
 13589 ;;		_moteRunningProcess
 13590 ;; This function uses a non-reentrant model
 13591 ;;
 13592                           
 13593                           	psect	text42
 13594  0034D8                     __ptext42:
 13595                           	opt stack 0
 13596  0034D8                     _MOTEapp_SetDataRate:
 13597                           	opt stack 17
 13598                           
 13599                           ; BSR set to: 0
 13600                           ;incstack = 0
 13601                           ;MOTEapp_SetDataRate@dataRate stored from wreg
 13602  0034D8  6FC8               	movwf	MOTEapp_SetDataRate@dataRate& (0+255),b
 13603                           
 13604                           ;MOTEapp.c: 1099: dataRateSelection = dataRate;
 13605  0034DA  C0C8  F0F7         	movff	MOTEapp_SetDataRate@dataRate,_dataRateSelection
 13606  0034DE  0012               	return		;funcret
 13607  0034E0                     __end_of_MOTEapp_SetDataRate:
 13608                           	opt stack 0
 13609                           tblptru	equ	0xFF8
 13610                           tblptrh	equ	0xFF7
 13611                           tblptrl	equ	0xFF6
 13612                           tablat	equ	0xFF5
 13613                           prodl	equ	0xFF3
 13614                           intcon	equ	0xFF2
 13615                           postinc0	equ	0xFEE
 13616                           wreg	equ	0xFE8
 13617                           postdec1	equ	0xFE5
 13618                           fsr1l	equ	0xFE1
 13619                           indf2	equ	0xFDF
 13620                           fsr2h	equ	0xFDA
 13621                           fsr2l	equ	0xFD9
 13622                           status	equ	0xFD8
 13623                           
 13624 ;; *************** function _MOTEapp_SetADR *****************
 13625 ;; Defined at:
 13626 ;;		line 1092 in file "../Includes/Board/MOTEapp.c"
 13627 ;; Parameters:    Size  Location     Type
 13628 ;;  state           1    wreg     unsigned char 
 13629 ;; Auto vars:     Size  Location     Type
 13630 ;;  state           1    0[BANK0 ] unsigned char 
 13631 ;; Return value:  Size  Location     Type
 13632 ;;		None               void
 13633 ;; Registers used:
 13634 ;;		wreg
 13635 ;; Tracked objects:
 13636 ;;		On entry : F/0
 13637 ;;		On exit  : 0/0
 13638 ;;		Unchanged: 0/0
 13639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13640 ;;      Params:         0       0       0       0       0       0       0       0       0
 13641 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13642 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13643 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13644 ;;Total ram usage:        1 bytes
 13645 ;; Hardware stack levels used:    1
 13646 ;; Hardware stack levels required when called:   11
 13647 ;; This function calls:
 13648 ;;		Nothing
 13649 ;; This function is called by:
 13650 ;;		_moteJoiningProcess
 13651 ;;		_moteRunningProcess
 13652 ;; This function uses a non-reentrant model
 13653 ;;
 13654                           
 13655                           	psect	text43
 13656  0034D0                     __ptext43:
 13657                           	opt stack 0
 13658  0034D0                     _MOTEapp_SetADR:
 13659                           	opt stack 17
 13660                           
 13661                           ;incstack = 0
 13662                           ;MOTEapp_SetADR@state stored from wreg
 13663  0034D0  6FC8               	movwf	MOTEapp_SetADR@state& (0+255),b
 13664                           
 13665                           ;MOTEapp.c: 1094: adrStatus = state;
 13666  0034D2  C0C8  F08E         	movff	MOTEapp_SetADR@state,_adrStatus
 13667  0034D6  0012               	return		;funcret
 13668  0034D8                     __end_of_MOTEapp_SetADR:
 13669                           	opt stack 0
 13670                           tblptru	equ	0xFF8
 13671                           tblptrh	equ	0xFF7
 13672                           tblptrl	equ	0xFF6
 13673                           tablat	equ	0xFF5
 13674                           prodl	equ	0xFF3
 13675                           intcon	equ	0xFF2
 13676                           postinc0	equ	0xFEE
 13677                           wreg	equ	0xFE8
 13678                           postdec1	equ	0xFE5
 13679                           fsr1l	equ	0xFE1
 13680                           indf2	equ	0xFDF
 13681                           fsr2h	equ	0xFDA
 13682                           fsr2l	equ	0xFD9
 13683                           status	equ	0xFD8
 13684                           
 13685 ;; *************** function _DATAEE_WriteByte *****************
 13686 ;; Defined at:
 13687 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 13688 ;; Parameters:    Size  Location     Type
 13689 ;;  bAdd            1    wreg     unsigned char 
 13690 ;;  bData           1    0[BANK0 ] unsigned char 
 13691 ;; Auto vars:     Size  Location     Type
 13692 ;;  bAdd            1    1[BANK0 ] unsigned char 
 13693 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 13694 ;; Return value:  Size  Location     Type
 13695 ;;		None               void
 13696 ;; Registers used:
 13697 ;;		wreg, status,2
 13698 ;; Tracked objects:
 13699 ;;		On entry : F/0
 13700 ;;		On exit  : 0/0
 13701 ;;		Unchanged: 0/0
 13702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13703 ;;      Params:         0       1       0       0       0       0       0       0       0
 13704 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13705 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13706 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13707 ;;Total ram usage:        3 bytes
 13708 ;; Hardware stack levels used:    1
 13709 ;; Hardware stack levels required when called:   11
 13710 ;; This function calls:
 13711 ;;		Nothing
 13712 ;; This function is called by:
 13713 ;;		_main
 13714 ;;		_moteJoiningProcess
 13715 ;; This function uses a non-reentrant model
 13716 ;;
 13717                           
 13718                           	psect	text44
 13719  003AA8                     __ptext44:
 13720                           	opt stack 0
 13721  003AA8                     _DATAEE_WriteByte:
 13722                           	opt stack 17
 13723                           
 13724                           ;incstack = 0
 13725                           ;DATAEE_WriteByte@bAdd stored from wreg
 13726  003AA8  6FC9               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 13727                           
 13728                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 13729  003AAA  0E00               	movlw	0
 13730  003AAC  BEF2               	btfsc	intcon,7,c	;volatile
 13731  003AAE  0E01               	movlw	1
 13732  003AB0  0100               	movlb	0	; () banked
 13733  003AB2  6FCA               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 13734                           
 13735                           ; BSR set to: 0
 13736                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 13737  003AB4  C0C9  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;memory.c: 171: EEDATA = bData;
 13741  003AB8  C0C8  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 13745  003ABC  9EA6               	bcf	4006,7,c	;volatile
 13746                           
 13747                           ; BSR set to: 0
 13748                           ;memory.c: 173: EECON1bits.CFGS = 0;
 13749  003ABE  9CA6               	bcf	4006,6,c	;volatile
 13750                           
 13751                           ; BSR set to: 0
 13752                           ;memory.c: 174: EECON1bits.WREN = 1;
 13753  003AC0  84A6               	bsf	4006,2,c	;volatile
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;memory.c: 175: INTCONbits.GIE = 0;
 13757  003AC2  9EF2               	bcf	intcon,7,c	;volatile
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;memory.c: 176: EECON2 = 0x55;
 13761  003AC4  0E55               	movlw	85
 13762  003AC6  6EA7               	movwf	4007,c	;volatile
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;memory.c: 177: EECON2 = 0xAA;
 13766  003AC8  0EAA               	movlw	170
 13767  003ACA  6EA7               	movwf	4007,c	;volatile
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;memory.c: 178: EECON1bits.WR = 1;
 13771  003ACC  82A6               	bsf	4006,1,c	;volatile
 13772  003ACE                     l1351:
 13773  003ACE  B2A6               	btfsc	4006,1,c	;volatile
 13774  003AD0  D7FE               	goto	l1351
 13775                           
 13776                           ;memory.c: 182: }
 13777                           ;memory.c: 184: EECON1bits.WREN = 0;
 13778  003AD2  94A6               	bcf	4006,2,c	;volatile
 13779                           
 13780                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 13781  003AD4  0100               	movlb	0	; () banked
 13782  003AD6  B1CA               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 13783  003AD8  D002               	bra	u8355
 13784  003ADA  9EF2               	bcf	intcon,7,c	;volatile
 13785  003ADC  D001               	bra	u8356
 13786  003ADE                     u8355:
 13787  003ADE  8EF2               	bsf	intcon,7,c	;volatile
 13788  003AE0                     u8356:
 13789  003AE0  0012               	return		;funcret
 13790  003AE2                     __end_of_DATAEE_WriteByte:
 13791                           	opt stack 0
 13792                           tblptru	equ	0xFF8
 13793                           tblptrh	equ	0xFF7
 13794                           tblptrl	equ	0xFF6
 13795                           tablat	equ	0xFF5
 13796                           prodl	equ	0xFF3
 13797                           intcon	equ	0xFF2
 13798                           postinc0	equ	0xFEE
 13799                           wreg	equ	0xFE8
 13800                           postdec1	equ	0xFE5
 13801                           fsr1l	equ	0xFE1
 13802                           indf2	equ	0xFDF
 13803                           fsr2h	equ	0xFDA
 13804                           fsr2l	equ	0xFD9
 13805                           status	equ	0xFD8
 13806                           
 13807 ;; *************** function _TMRapp_Handler *****************
 13808 ;; Defined at:
 13809 ;;		line 22 in file "../Includes/Drivers/TMRapp.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;		None
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;		None
 13814 ;; Return value:  Size  Location     Type
 13815 ;;		None               void
 13816 ;; Registers used:
 13817 ;;		wreg, status,2, status,0, cstack
 13818 ;; Tracked objects:
 13819 ;;		On entry : F/0
 13820 ;;		On exit  : F/0
 13821 ;;		Unchanged: 0/0
 13822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13823 ;;      Params:         0       0       0       0       0       0       0       0       0
 13824 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13825 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13826 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13827 ;;Total ram usage:        0 bytes
 13828 ;; Hardware stack levels used:    1
 13829 ;; Hardware stack levels required when called:   12
 13830 ;; This function calls:
 13831 ;;		___lwmod
 13832 ;; This function is called by:
 13833 ;;		_moteHandler
 13834 ;; This function uses a non-reentrant model
 13835 ;;
 13836                           
 13837                           	psect	text45
 13838  005314                     __ptext45:
 13839                           	opt stack 0
 13840  005314                     _TMRapp_Handler:
 13841                           	opt stack 17
 13842                           
 13843                           ; BSR set to: 0
 13844                           ;TMRapp.c: 25: timerMsTickCount++;
 13845                           
 13846                           ;incstack = 0
 13847  005314  4B84               	infsnz	_timerMsTickCount& (0+255),f,b
 13848  005316  2B85               	incf	(_timerMsTickCount+1)& (0+255),f,b
 13849                           
 13850                           ; BSR set to: 0
 13851                           ;TMRapp.c: 27: if ( (timerMsTickCount % 10) == 0)
 13852  005318  C084  F0C8         	movff	_timerMsTickCount,___lwmod@dividend
 13853  00531C  C085  F0C9         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 13854  005320  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 13855  005322  0E0A               	movlw	10
 13856  005324  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13857  005326  ECAD  F01D         	call	___lwmod	;wreg free
 13858  00532A  51C8               	movf	?___lwmod& (0+255),w,b
 13859  00532C  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13860  00532E  A4D8               	btfss	status,2,c
 13861  005330  0012               	return	
 13862                           
 13863                           ; BSR set to: 0
 13864                           ;TMRapp.c: 28: {
 13865                           ;TMRapp.c: 29: appTimer.mSecTenTick = 1;
 13866  005332  838F               	bsf	_appTimer& (0+255),1,b
 13867                           
 13868                           ; BSR set to: 0
 13869                           ;TMRapp.c: 30: if ( (timerMsTickCount % 100) == 0)
 13870  005334  C084  F0C8         	movff	_timerMsTickCount,___lwmod@dividend
 13871  005338  C085  F0C9         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 13872  00533C  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 13873  00533E  0E64               	movlw	100
 13874  005340  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13875  005342  ECAD  F01D         	call	___lwmod	;wreg free
 13876  005346  51C8               	movf	?___lwmod& (0+255),w,b
 13877  005348  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13878  00534A  A4D8               	btfss	status,2,c
 13879  00534C  0012               	return	
 13880                           
 13881                           ; BSR set to: 0
 13882                           ;TMRapp.c: 31: {
 13883                           ;TMRapp.c: 32: appTimer.mSecHundredTick = 1;
 13884  00534E  858F               	bsf	_appTimer& (0+255),2,b
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;TMRapp.c: 33: if ( (timerMsTickCount % 1000) == 0)
 13888  005350  C084  F0C8         	movff	_timerMsTickCount,___lwmod@dividend
 13889  005354  C085  F0C9         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 13890  005358  0E03               	movlw	3
 13891  00535A  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
 13892  00535C  0EE8               	movlw	232
 13893  00535E  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13894  005360  ECAD  F01D         	call	___lwmod	;wreg free
 13895  005364  51C8               	movf	?___lwmod& (0+255),w,b
 13896  005366  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13897  005368  A4D8               	btfss	status,2,c
 13898  00536A  0012               	return	
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;TMRapp.c: 34: {
 13902                           ;TMRapp.c: 35: appTimer.SecTick = 1;
 13903  00536C  878F               	bsf	_appTimer& (0+255),3,b
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;TMRapp.c: 36: if ( (timerMsTickCount % 60000) == 0)
 13907  00536E  C084  F0C8         	movff	_timerMsTickCount,___lwmod@dividend
 13908  005372  C085  F0C9         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 13909  005376  0EEA               	movlw	234
 13910  005378  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
 13911  00537A  0E60               	movlw	96
 13912  00537C  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13913  00537E  ECAD  F01D         	call	___lwmod	;wreg free
 13914  005382  51C8               	movf	?___lwmod& (0+255),w,b
 13915  005384  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13916  005386  A4D8               	btfss	status,2,c
 13917  005388  0012               	return	
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;TMRapp.c: 37: {
 13921                           ;TMRapp.c: 38: timerMinTickCount++;
 13922  00538A  4B82               	infsnz	_timerMinTickCount& (0+255),f,b
 13923  00538C  2B83               	incf	(_timerMinTickCount+1)& (0+255),f,b
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;TMRapp.c: 39: appTimer.MinTick = 1;
 13927  00538E  898F               	bsf	_appTimer& (0+255),4,b
 13928                           
 13929                           ; BSR set to: 0
 13930                           ;TMRapp.c: 40: if ( (timerMinTickCount % 60) == 0)
 13931  005390  C082  F0C8         	movff	_timerMinTickCount,___lwmod@dividend
 13932  005394  C083  F0C9         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 13933  005398  6BCB               	clrf	(___lwmod@divisor+1)& (0+255),b
 13934  00539A  0E3C               	movlw	60
 13935  00539C  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13936  00539E  ECAD  F01D         	call	___lwmod	;wreg free
 13937  0053A2  51C8               	movf	?___lwmod& (0+255),w,b
 13938  0053A4  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13939  0053A6  A4D8               	btfss	status,2,c
 13940  0053A8  0012               	return	
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;TMRapp.c: 41: {
 13944                           ;TMRapp.c: 42: appTimer.HourTick = 1;
 13945  0053AA  8B8F               	bsf	_appTimer& (0+255),5,b
 13946                           
 13947                           ; BSR set to: 0
 13948                           ;TMRapp.c: 43: if ( (timerMinTickCount % 720) == 0)
 13949  0053AC  C082  F0C8         	movff	_timerMinTickCount,___lwmod@dividend
 13950  0053B0  C083  F0C9         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 13951  0053B4  0E02               	movlw	2
 13952  0053B6  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
 13953  0053B8  0ED0               	movlw	208
 13954  0053BA  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13955  0053BC  ECAD  F01D         	call	___lwmod	;wreg free
 13956  0053C0  51C8               	movf	?___lwmod& (0+255),w,b
 13957  0053C2  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13958  0053C4  A4D8               	btfss	status,2,c
 13959  0053C6  0012               	return	
 13960                           
 13961                           ; BSR set to: 0
 13962                           ;TMRapp.c: 44: {
 13963                           ;TMRapp.c: 45: appTimer.HalfDayTick = 1;
 13964  0053C8  8D8F               	bsf	_appTimer& (0+255),6,b
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;TMRapp.c: 46: if ( (timerMinTickCount % 1440) == 0)
 13968  0053CA  C082  F0C8         	movff	_timerMinTickCount,___lwmod@dividend
 13969  0053CE  C083  F0C9         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 13970  0053D2  0E05               	movlw	5
 13971  0053D4  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
 13972  0053D6  0EA0               	movlw	160
 13973  0053D8  6FCA               	movwf	___lwmod@divisor& (0+255),b
 13974  0053DA  ECAD  F01D         	call	___lwmod	;wreg free
 13975  0053DE  51C8               	movf	?___lwmod& (0+255),w,b
 13976  0053E0  11C9               	iorwf	(?___lwmod+1)& (0+255),w,b
 13977  0053E2  A4D8               	btfss	status,2,c
 13978  0053E4  0012               	return	
 13979                           
 13980                           ; BSR set to: 0
 13981                           ;TMRapp.c: 47: {
 13982                           ;TMRapp.c: 48: appTimer.DayTick = 1;
 13983  0053E6  8F8F               	bsf	_appTimer& (0+255),7,b
 13984                           
 13985                           ;TMRapp.c: 50: timerMsTickCount = 0;
 13986  0053E8  6B84               	clrf	_timerMsTickCount& (0+255),b
 13987  0053EA  6B85               	clrf	(_timerMsTickCount+1)& (0+255),b
 13988                           
 13989                           ;TMRapp.c: 51: timerMinTickCount = 0;
 13990  0053EC  6B82               	clrf	_timerMinTickCount& (0+255),b
 13991  0053EE  6B83               	clrf	(_timerMinTickCount+1)& (0+255),b
 13992  0053F0  0012               	return	
 13993  0053F2                     __end_of_TMRapp_Handler:
 13994                           	opt stack 0
 13995                           tblptru	equ	0xFF8
 13996                           tblptrh	equ	0xFF7
 13997                           tblptrl	equ	0xFF6
 13998                           tablat	equ	0xFF5
 13999                           prodl	equ	0xFF3
 14000                           intcon	equ	0xFF2
 14001                           postinc0	equ	0xFEE
 14002                           wreg	equ	0xFE8
 14003                           postdec1	equ	0xFE5
 14004                           fsr1l	equ	0xFE1
 14005                           indf2	equ	0xFDF
 14006                           fsr2h	equ	0xFDA
 14007                           fsr2l	equ	0xFD9
 14008                           status	equ	0xFD8
 14009                           
 14010 ;; *************** function ___lwmod *****************
 14011 ;; Defined at:
 14012 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14013 ;; Parameters:    Size  Location     Type
 14014 ;;  dividend        2    0[BANK0 ] unsigned int 
 14015 ;;  divisor         2    2[BANK0 ] unsigned int 
 14016 ;; Auto vars:     Size  Location     Type
 14017 ;;  counter         1    4[BANK0 ] unsigned char 
 14018 ;; Return value:  Size  Location     Type
 14019 ;;                  2    0[BANK0 ] unsigned int 
 14020 ;; Registers used:
 14021 ;;		wreg, status,2, status,0
 14022 ;; Tracked objects:
 14023 ;;		On entry : F/0
 14024 ;;		On exit  : F/0
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14027 ;;      Params:         0       4       0       0       0       0       0       0       0
 14028 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14029 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14030 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14031 ;;Total ram usage:        5 bytes
 14032 ;; Hardware stack levels used:    1
 14033 ;; Hardware stack levels required when called:   11
 14034 ;; This function calls:
 14035 ;;		Nothing
 14036 ;; This function is called by:
 14037 ;;		_moteApp_add16bToDataBuffer
 14038 ;;		_TMRapp_Handler
 14039 ;;		_oled_putUint16
 14040 ;; This function uses a non-reentrant model
 14041 ;;
 14042                           
 14043                           	psect	text46
 14044  003B5A                     __ptext46:
 14045                           	opt stack 0
 14046  003B5A                     ___lwmod:
 14047                           	opt stack 16
 14048                           
 14049                           ; BSR set to: 0
 14050                           
 14051                           ; BSR set to: 0
 14052                           ;incstack = 0
 14053  003B5A  51CA               	movf	___lwmod@divisor& (0+255),w,b
 14054  003B5C  11CB               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14055  003B5E  E017               	bz	l2362
 14056                           
 14057                           ; BSR set to: 0
 14058  003B60  0E01               	movlw	1
 14059  003B62  6FCC               	movwf	___lwmod@counter& (0+255),b
 14060  003B64  D004               	goto	l10198
 14061  003B66                     l10196:
 14062                           
 14063                           ; BSR set to: 0
 14064  003B66  90D8               	bcf	status,0,c
 14065  003B68  37CA               	rlcf	___lwmod@divisor& (0+255),f,b
 14066  003B6A  37CB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14067  003B6C  2BCC               	incf	___lwmod@counter& (0+255),f,b
 14068  003B6E                     l10198:
 14069                           
 14070                           ; BSR set to: 0
 14071  003B6E  AFCB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14072  003B70  D7FA               	goto	l10196
 14073  003B72                     l10200:
 14074                           
 14075                           ; BSR set to: 0
 14076  003B72  51CA               	movf	___lwmod@divisor& (0+255),w,b
 14077  003B74  5DC8               	subwf	___lwmod@dividend& (0+255),w,b
 14078  003B76  51CB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14079  003B78  59C9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14080  003B7A  E304               	bnc	l10204
 14081                           
 14082                           ; BSR set to: 0
 14083  003B7C  51CA               	movf	___lwmod@divisor& (0+255),w,b
 14084  003B7E  5FC8               	subwf	___lwmod@dividend& (0+255),f,b
 14085  003B80  51CB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14086  003B82  5BC9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14087  003B84                     l10204:
 14088                           
 14089                           ; BSR set to: 0
 14090  003B84  90D8               	bcf	status,0,c
 14091  003B86  33CB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14092  003B88  33CA               	rrcf	___lwmod@divisor& (0+255),f,b
 14093                           
 14094                           ; BSR set to: 0
 14095  003B8A  2FCC               	decfsz	___lwmod@counter& (0+255),f,b
 14096  003B8C  D7F2               	goto	l10200
 14097  003B8E                     l2362:
 14098                           
 14099                           ; BSR set to: 0
 14100  003B8E  C0C8  F0C8         	movff	___lwmod@dividend,?___lwmod
 14101  003B92  C0C9  F0C9         	movff	___lwmod@dividend+1,?___lwmod+1
 14102                           
 14103                           ; BSR set to: 0
 14104  003B96  0012               	return		;funcret
 14105  003B98                     __end_of___lwmod:
 14106                           	opt stack 0
 14107                           tblptru	equ	0xFF8
 14108                           tblptrh	equ	0xFF7
 14109                           tblptrl	equ	0xFF6
 14110                           tablat	equ	0xFF5
 14111                           prodl	equ	0xFF3
 14112                           intcon	equ	0xFF2
 14113                           postinc0	equ	0xFEE
 14114                           wreg	equ	0xFE8
 14115                           postdec1	equ	0xFE5
 14116                           fsr1l	equ	0xFE1
 14117                           indf2	equ	0xFDF
 14118                           fsr2h	equ	0xFDA
 14119                           fsr2l	equ	0xFD9
 14120                           status	equ	0xFD8
 14121                           
 14122 ;; *************** function _TMRapp_ClearBitFlags *****************
 14123 ;; Defined at:
 14124 ;;		line 16 in file "../Includes/Drivers/TMRapp.c"
 14125 ;; Parameters:    Size  Location     Type
 14126 ;;		None
 14127 ;; Auto vars:     Size  Location     Type
 14128 ;;		None
 14129 ;; Return value:  Size  Location     Type
 14130 ;;		None               void
 14131 ;; Registers used:
 14132 ;;		None
 14133 ;; Tracked objects:
 14134 ;;		On entry : F/0
 14135 ;;		On exit  : F/0
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14138 ;;      Params:         0       0       0       0       0       0       0       0       0
 14139 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14140 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14141 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14142 ;;Total ram usage:        0 bytes
 14143 ;; Hardware stack levels used:    1
 14144 ;; Hardware stack levels required when called:   11
 14145 ;; This function calls:
 14146 ;;		Nothing
 14147 ;; This function is called by:
 14148 ;;		_moteHandler
 14149 ;; This function uses a non-reentrant model
 14150 ;;
 14151                           
 14152                           	psect	text47
 14153  0034AA                     __ptext47:
 14154                           	opt stack 0
 14155  0034AA                     _TMRapp_ClearBitFlags:
 14156                           	opt stack 18
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;TMRapp.c: 19: appTimer.TicksBitMap = 0x00;
 14160                           
 14161                           ; BSR set to: 0
 14162                           ;incstack = 0
 14163  0034AA  6B8F               	clrf	_appTimer& (0+255),b
 14164                           
 14165                           ; BSR set to: 0
 14166  0034AC  0012               	return		;funcret
 14167  0034AE                     __end_of_TMRapp_ClearBitFlags:
 14168                           	opt stack 0
 14169                           tblptru	equ	0xFF8
 14170                           tblptrh	equ	0xFF7
 14171                           tblptrl	equ	0xFF6
 14172                           tablat	equ	0xFF5
 14173                           prodl	equ	0xFF3
 14174                           intcon	equ	0xFF2
 14175                           postinc0	equ	0xFEE
 14176                           wreg	equ	0xFE8
 14177                           postdec1	equ	0xFE5
 14178                           fsr1l	equ	0xFE1
 14179                           indf2	equ	0xFDF
 14180                           fsr2h	equ	0xFDA
 14181                           fsr2l	equ	0xFD9
 14182                           status	equ	0xFD8
 14183                           
 14184 ;; *************** function _MOTEapp_TimerBasedTask *****************
 14185 ;; Defined at:
 14186 ;;		line 1153 in file "../Includes/Board/MOTEapp.c"
 14187 ;; Parameters:    Size  Location     Type
 14188 ;;  timerTask       1    wreg     struct .
 14189 ;; Auto vars:     Size  Location     Type
 14190 ;;  timerTask       1    0[BANK0 ] struct .
 14191 ;; Return value:  Size  Location     Type
 14192 ;;		None               void
 14193 ;; Registers used:
 14194 ;;		wreg, status,2, status,0
 14195 ;; Tracked objects:
 14196 ;;		On entry : F/0
 14197 ;;		On exit  : F/0
 14198 ;;		Unchanged: 0/0
 14199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14200 ;;      Params:         0       0       0       0       0       0       0       0       0
 14201 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14202 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14203 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14204 ;;Total ram usage:        1 bytes
 14205 ;; Hardware stack levels used:    1
 14206 ;; Hardware stack levels required when called:   11
 14207 ;; This function calls:
 14208 ;;		Nothing
 14209 ;; This function is called by:
 14210 ;;		_moteHandler
 14211 ;; This function uses a non-reentrant model
 14212 ;;
 14213                           
 14214                           	psect	text48
 14215  003526                     __ptext48:
 14216                           	opt stack 0
 14217  003526                     _MOTEapp_TimerBasedTask:
 14218                           	opt stack 18
 14219                           
 14220                           ; BSR set to: 0
 14221                           ;incstack = 0
 14222                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 14223  003526  6FC8               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 14224                           
 14225                           ;MOTEapp.c: 1158: if (timerTask.mSecTenTick)
 14226  003528  0100               	movlb	0	; () banked
 14227  00352A  B3C8               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 14228                           
 14229                           ; BSR set to: 0
 14230                           ;MOTEapp.c: 1159: {
 14231                           ;MOTEapp.c: 1161: m10SecTicker++;
 14232  00352C  2B94               	incf	_m10SecTicker& (0+255),f,b
 14233                           
 14234                           ; BSR set to: 0
 14235                           ;MOTEapp.c: 1167: }
 14236                           ;MOTEapp.c: 1168: if (timerTask.SecTick)
 14237  00352E  B7C8               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 14238                           
 14239                           ; BSR set to: 0
 14240                           ;MOTEapp.c: 1169: {
 14241                           ;MOTEapp.c: 1171: secTicker++;
 14242  003530  2B99               	incf	_secTicker& (0+255),f,b
 14243  003532  0012               	return	
 14244  003534                     __end_of_MOTEapp_TimerBasedTask:
 14245                           	opt stack 0
 14246                           tblptru	equ	0xFF8
 14247                           tblptrh	equ	0xFF7
 14248                           tblptrl	equ	0xFF6
 14249                           tablat	equ	0xFF5
 14250                           prodl	equ	0xFF3
 14251                           intcon	equ	0xFF2
 14252                           postinc0	equ	0xFEE
 14253                           wreg	equ	0xFE8
 14254                           postdec1	equ	0xFE5
 14255                           fsr1l	equ	0xFE1
 14256                           indf2	equ	0xFDF
 14257                           fsr2h	equ	0xFDA
 14258                           fsr2l	equ	0xFD9
 14259                           status	equ	0xFD8
 14260                           
 14261 ;; *************** function _USBapp_handlerState *****************
 14262 ;; Defined at:
 14263 ;;		line 63 in file "../Includes/Board/USBapp.c"
 14264 ;; Parameters:    Size  Location     Type
 14265 ;;  state           1    wreg     enum E6418
 14266 ;; Auto vars:     Size  Location     Type
 14267 ;;  state           1    0[BANK0 ] enum E6418
 14268 ;; Return value:  Size  Location     Type
 14269 ;;		None               void
 14270 ;; Registers used:
 14271 ;;		wreg
 14272 ;; Tracked objects:
 14273 ;;		On entry : F/0
 14274 ;;		On exit  : 0/0
 14275 ;;		Unchanged: 0/0
 14276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14277 ;;      Params:         0       0       0       0       0       0       0       0       0
 14278 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14279 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14280 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14281 ;;Total ram usage:        1 bytes
 14282 ;; Hardware stack levels used:    1
 14283 ;; Hardware stack levels required when called:   11
 14284 ;; This function calls:
 14285 ;;		Nothing
 14286 ;; This function is called by:
 14287 ;;		_main
 14288 ;; This function uses a non-reentrant model
 14289 ;;
 14290                           
 14291                           	psect	text49
 14292  0034C8                     __ptext49:
 14293                           	opt stack 0
 14294  0034C8                     _USBapp_handlerState:
 14295                           	opt stack 19
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;incstack = 0
 14299                           ;USBapp_handlerState@state stored from wreg
 14300  0034C8  6FC8               	movwf	USBapp_handlerState@state& (0+255),b
 14301                           
 14302                           ;USBapp.c: 65: usbState = state;
 14303  0034CA  C0C8  F09C         	movff	USBapp_handlerState@state,_usbState
 14304  0034CE  0012               	return		;funcret
 14305  0034D0                     __end_of_USBapp_handlerState:
 14306                           	opt stack 0
 14307                           tblptru	equ	0xFF8
 14308                           tblptrh	equ	0xFF7
 14309                           tblptrl	equ	0xFF6
 14310                           tablat	equ	0xFF5
 14311                           prodl	equ	0xFF3
 14312                           intcon	equ	0xFF2
 14313                           postinc0	equ	0xFEE
 14314                           wreg	equ	0xFE8
 14315                           postdec1	equ	0xFE5
 14316                           fsr1l	equ	0xFE1
 14317                           indf2	equ	0xFDF
 14318                           fsr2h	equ	0xFDA
 14319                           fsr2l	equ	0xFD9
 14320                           status	equ	0xFD8
 14321                           
 14322 ;; *************** function _USBapp_Handler *****************
 14323 ;; Defined at:
 14324 ;;		line 68 in file "../Includes/Board/USBapp.c"
 14325 ;; Parameters:    Size  Location     Type
 14326 ;;		None
 14327 ;; Auto vars:     Size  Location     Type
 14328 ;;		None
 14329 ;; Return value:  Size  Location     Type
 14330 ;;		None               void
 14331 ;; Registers used:
 14332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14333 ;; Tracked objects:
 14334 ;;		On entry : 0/0
 14335 ;;		On exit  : 0/0
 14336 ;;		Unchanged: 0/0
 14337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14338 ;;      Params:         0       0       0       0       0       0       0       0       0
 14339 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14340 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14341 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14342 ;;Total ram usage:        0 bytes
 14343 ;; Hardware stack levels used:    1
 14344 ;; Hardware stack levels required when called:   17
 14345 ;; This function calls:
 14346 ;;		_USBapp_DeviceCdcEmulatorHandler
 14347 ;;		_oled_clear
 14348 ;;		_oled_putString
 14349 ;; This function is called by:
 14350 ;;		_main
 14351 ;; This function uses a non-reentrant model
 14352 ;;
 14353                           
 14354                           	psect	text50
 14355  0042EC                     __ptext50:
 14356                           	opt stack 0
 14357  0042EC                     _USBapp_Handler:
 14358                           	opt stack 13
 14359                           
 14360                           ;USBapp.c: 72: {
 14361                           ;USBapp.c: 73: switch(usbState)
 14362                           
 14363                           ;incstack = 0
 14364                           ;USBapp.c: 71: do
 14365  0042EC  D02E               	goto	l12138
 14366  0042EE                     l812:
 14367                           
 14368                           ; BSR set to: 0
 14369  0042EE  D7FF               	goto	l812
 14370  0042F0                     l12118:
 14371                           
 14372                           ; BSR set to: 0
 14373                           ;USBapp.c: 80: oled_clear();
 14374  0042F0  ECF9  F01A         	call	_oled_clear	;wreg free
 14375                           
 14376                           ; BSR set to: 0
 14377                           ;USBapp.c: 81: oled_putString("CDC Mode",1,0);
 14378  0042F4  0E2D               	movlw	low STR_258
 14379  0042F6  6FD5               	movwf	oled_putString@string& (0+255),b
 14380  0042F8  0E7F               	movlw	high STR_258
 14381  0042FA  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 14382  0042FC  0E01               	movlw	1
 14383  0042FE  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 14384  004300  6BD8               	clrf	oled_putString@start_page& (0+255),b
 14385  004302  EC65  F020         	call	_oled_putString	;wreg free
 14386                           
 14387                           ;USBapp.c: 82: oled_putString("Command",2,1);
 14388  004306  0E87               	movlw	low STR_259
 14389  004308  0100               	movlb	0	; () banked
 14390  00430A  6FD5               	movwf	oled_putString@string& (0+255),b
 14391  00430C  0E7F               	movlw	high STR_259
 14392  00430E  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 14393  004310  0E02               	movlw	2
 14394  004312  6FD7               	movwf	oled_putString@station_dot& (0+255),b
 14395  004314  0E01               	movlw	1
 14396  004316  6FD8               	movwf	oled_putString@start_page& (0+255),b
 14397  004318  EC65  F020         	call	_oled_putString	;wreg free
 14398                           
 14399                           ;USBapp.c: 83: oled_putString("USB Handler",0,2);
 14400  00431C  0E37               	movlw	low STR_260
 14401  00431E  0100               	movlb	0	; () banked
 14402  004320  6FD5               	movwf	oled_putString@string& (0+255),b
 14403  004322  0E7E               	movlw	high STR_260
 14404  004324  6FD6               	movwf	(oled_putString@string+1)& (0+255),b
 14405  004326  6BD7               	clrf	oled_putString@station_dot& (0+255),b
 14406  004328  0E02               	movlw	2
 14407  00432A  6FD8               	movwf	oled_putString@start_page& (0+255),b
 14408  00432C  EC65  F020         	call	_oled_putString	;wreg free
 14409                           
 14410                           ;USBapp.c: 85: usbState = USB_RUNNING;
 14411  004330  0E01               	movlw	1
 14412  004332  0100               	movlb	0	; () banked
 14413  004334  D005               	goto	L51
 14414  004336                     l12128:
 14415                           
 14416                           ; BSR set to: 0
 14417                           ;USBapp.c: 89: if( USBDeviceState < CONFIGURED_STATE )
 14418  004336  0E20               	movlw	32
 14419  004338  618A               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 14420  00433A  D001               	goto	l12132
 14421  00433C  D00E               	goto	l819
 14422  00433E                     l12132:
 14423                           
 14424                           ; BSR set to: 0
 14425                           ;USBapp.c: 93: }
 14426                           ;USBapp.c: 94: usbState = USB_CDC;
 14427  00433E  0E02               	movlw	2
 14428  004340                     L51:
 14429  004340  6F9C               	movwf	_usbState& (0+255),b
 14430                           
 14431                           ;USBapp.c: 95: break;
 14432  004342  D00B               	goto	l819
 14433  004344                     l12134:
 14434                           
 14435                           ; BSR set to: 0
 14436                           ;USBapp.c: 98: USBapp_DeviceCdcEmulatorHandler();
 14437  004344  EC02  F026         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 14438                           
 14439                           ;USBapp.c: 101: break;
 14440  004348  D008               	goto	l819
 14441  00434A                     l12138:
 14442  00434A  0100               	movlb	0	; () banked
 14443  00434C  519C               	movf	_usbState& (0+255),w,b
 14444                           
 14445                           ; Switch size 1, requested type "speed"
 14446                           ; Number of cases is 3, Range of values is 0 to 2
 14447                           ; switch strategies available:
 14448                           ; Name         Instructions Cycles
 14449                           ; simple_byte           10     6 (average)
 14450                           ;	Chosen strategy is simple_byte
 14451  00434E  E0D0               	bz	l12118
 14452  004350  0A01               	xorlw	1	; case 1
 14453  004352  E0F1               	bz	l12128
 14454  004354  0A03               	xorlw	3	; case 2
 14455  004356  E0F6               	bz	l12134
 14456  004358  D7CA               	goto	l812
 14457  00435A                     l819:
 14458                           
 14459                           ; BSR set to: 0
 14460                           ;USBapp.c: 103: }while(PORTAbits.RA0);
 14461  00435A  B080               	btfsc	3968,0,c	;volatile
 14462  00435C  D7F6               	goto	l12138
 14463                           
 14464                           ; BSR set to: 0
 14465                           ;USBapp.c: 104: __nop();
 14466  00435E  F000               	nop	
 14467  004360  0012               	return		;funcret
 14468  004362                     __end_of_USBapp_Handler:
 14469                           	opt stack 0
 14470                           tblptru	equ	0xFF8
 14471                           tblptrh	equ	0xFF7
 14472                           tblptrl	equ	0xFF6
 14473                           tablat	equ	0xFF5
 14474                           prodl	equ	0xFF3
 14475                           intcon	equ	0xFF2
 14476                           postinc0	equ	0xFEE
 14477                           wreg	equ	0xFE8
 14478                           postdec1	equ	0xFE5
 14479                           fsr1l	equ	0xFE1
 14480                           indf2	equ	0xFDF
 14481                           fsr2h	equ	0xFDA
 14482                           fsr2l	equ	0xFD9
 14483                           status	equ	0xFD8
 14484                           
 14485 ;; *************** function _oled_putString *****************
 14486 ;; Defined at:
 14487 ;;		line 273 in file "../Includes/Drivers/SSD1306oLED.c"
 14488 ;; Parameters:    Size  Location     Type
 14489 ;;  string          2   13[BANK0 ] PTR const unsigned char 
 14490 ;;		 -> oled_putUint16@numData(6), oled_putUint8@numData(6), STR_260(12), STR_259(8), 
 14491 ;;		 -> STR_258(9), STR_241(16), STR_240(16), STR_239(16), 
 14492 ;;		 -> STR_238(15), STR_237(15), STR_236(16), STR_235(17), 
 14493 ;;		 -> STR_234(16), STR_233(17), STR_232(17), STR_231(2), 
 14494 ;;		 -> STR_230(7), STR_229(10), STR_228(17), STR_227(16), 
 14495 ;;		 -> STR_226(15), STR_225(15), STR_224(17), STR_223(16), 
 14496 ;;		 -> STR_222(17), STR_221(17), STR_220(16), STR_218(18), 
 14497 ;;		 -> STR_216(17), STR_214(17), STR_213(17), responseData(8), 
 14498 ;;		 -> responseId(16), responsePortNum(3), STR_210(12), STR_209(13), 
 14499 ;;		 -> STR_208(12), STR_205(18), STR_204(13), STR_203(17), 
 14500 ;;		 -> STR_202(16), STR_201(17), STR_200(17), STR_199(2), 
 14501 ;;		 -> STR_198(2), STR_197(2), STR_196(2), STR_195(2), 
 14502 ;;		 -> STR_194(2), STR_193(16), STR_192(17), STR_191(17), 
 14503 ;;		 -> STR_190(2), STR_189(2), STR_188(2), STR_187(15), 
 14504 ;;		 -> STR_186(15), STR_185(15), STR_184(15), STR_183(2), 
 14505 ;;		 -> STR_182(2), STR_181(2), STR_180(2), STR_179(15), 
 14506 ;;		 -> STR_178(15), STR_177(15), STR_176(15), STR_175(2), 
 14507 ;;		 -> STR_174(2), STR_173(2), STR_172(2), STR_171(15), 
 14508 ;;		 -> STR_170(15), STR_169(15), STR_168(15), STR_167(2), 
 14509 ;;		 -> STR_166(2), STR_165(2), STR_164(2), STR_163(15), 
 14510 ;;		 -> STR_162(15), STR_161(15), STR_160(15), STR_159(2), 
 14511 ;;		 -> STR_158(2), STR_157(2), STR_156(2), STR_155(2), 
 14512 ;;		 -> STR_154(15), STR_153(15), STR_152(15), STR_151(15), 
 14513 ;;		 -> STR_150(2), STR_149(2), STR_148(2), STR_147(2), 
 14514 ;;		 -> STR_146(2), STR_145(15), STR_144(15), STR_143(15), 
 14515 ;;		 -> STR_142(15), STR_141(2), STR_140(2), STR_139(2), 
 14516 ;;		 -> STR_138(2), STR_137(2), STR_136(15), STR_135(15), 
 14517 ;;		 -> STR_134(15), STR_133(15), STR_132(2), STR_131(2), 
 14518 ;;		 -> STR_130(2), STR_129(2), STR_128(2), STR_127(15), 
 14519 ;;		 -> STR_126(15), STR_125(15), STR_124(15), STR_123(2), 
 14520 ;;		 -> STR_122(2), STR_121(2), STR_120(2), STR_119(2), 
 14521 ;;		 -> STR_118(15), STR_117(15), STR_116(15), STR_115(15), 
 14522 ;;		 -> STR_114(2), STR_113(2), STR_112(2), STR_111(2), 
 14523 ;;		 -> STR_110(2), STR_109(15), STR_108(15), STR_107(15), 
 14524 ;;		 -> STR_106(15), STR_105(2), STR_104(2), STR_103(2), 
 14525 ;;		 -> STR_102(2), STR_101(2), STR_100(15), STR_99(15), 
 14526 ;;		 -> STR_98(15), STR_97(15), STR_96(2), STR_95(16), 
 14527 ;;		 -> STR_94(17), STR_93(17), STR_92(16), STR_91(16), 
 14528 ;;		 -> STR_90(16), STR_89(2), STR_88(7), STR_87(7), 
 14529 ;;		 -> STR_86(16), STR_85(16), STR_84(17), STR_83(17), 
 14530 ;;		 -> STR_82(16), STR_81(16), STR_80(16), STR_78(2), 
 14531 ;;		 -> STR_76(2), STR_75(16), STR_74(13), STR_73(12), 
 14532 ;;		 -> STR_72(17), STR_62(8), STR_61(8), STR_58(7), 
 14533 ;;		 -> STR_57(10), STR_55(11), STR_54(11), STR_49(9), 
 14534 ;;		 -> STR_48(11), STR_42(11), STR_41(10), STR_37(5), 
 14535 ;;		 -> STR_36(12), STR_35(8), STR_34(9), STR_28(17), 
 14536 ;;		 -> STR_27(17), STR_26(17), STR_25(17), STR_24(9), 
 14537 ;;		 -> STR_23(10), STR_20(9), STR_19(8), STR_18(8), 
 14538 ;;		 -> STR_17(9), STR_16(10), STR_15(11), STR_14(13), 
 14539 ;;		 -> STR_13(13), STR_12(13), STR_11(12), STR_10(13), 
 14540 ;;		 -> STR_9(9), STR_8(12), STR_7(16), STR_6(2), 
 14541 ;;		 -> STR_5(2), STR_4(9), STR_3(15), STR_2(15), 
 14542 ;;		 -> STR_1(15), 
 14543 ;;  station_dot     1   15[BANK0 ] unsigned char 
 14544 ;;  start_page      1   16[BANK0 ] unsigned char 
 14545 ;; Auto vars:     Size  Location     Type
 14546 ;;  index           1   17[BANK0 ] unsigned char 
 14547 ;; Return value:  Size  Location     Type
 14548 ;;		None               void
 14549 ;; Registers used:
 14550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14551 ;; Tracked objects:
 14552 ;;		On entry : F/0
 14553 ;;		On exit  : 0/0
 14554 ;;		Unchanged: 0/0
 14555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14556 ;;      Params:         0       4       0       0       0       0       0       0       0
 14557 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14558 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14559 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14560 ;;Total ram usage:        5 bytes
 14561 ;; Hardware stack levels used:    1
 14562 ;; Hardware stack levels required when called:   15
 14563 ;; This function calls:
 14564 ;;		_oled_putChar
 14565 ;; This function is called by:
 14566 ;;		_main
 14567 ;;		_test_oled
 14568 ;;		_test_switch
 14569 ;;		_test_comms
 14570 ;;		_test_leds
 14571 ;;		_test_adc
 14572 ;;		_moteHandler
 14573 ;;		_moteJoiningProcess
 14574 ;;		_moteRunningProcess
 14575 ;;		_USBapp_Handler
 14576 ;;		_oled_putUint8
 14577 ;;		_oled_putUint16
 14578 ;; This function uses a non-reentrant model
 14579 ;;
 14580                           
 14581                           	psect	text51
 14582  0040CA                     __ptext51:
 14583                           	opt stack 0
 14584  0040CA                     _oled_putString:
 14585                           	opt stack 13
 14586                           
 14587                           ; BSR set to: 0
 14588                           ;SSD1306oLED.c: 275: uint8_t index;
 14589                           ;SSD1306oLED.c: 276: for(index = station_dot; index < 16; index++)
 14590                           
 14591                           ;incstack = 0
 14592  0040CA  C0D7  F0D9         	movff	oled_putString@station_dot,oled_putString@index
 14593  0040CE                     l10018:
 14594                           
 14595                           ; BSR set to: 0
 14596  0040CE  0E0F               	movlw	15
 14597  0040D0  65D9               	cpfsgt	oled_putString@index& (0+255),b
 14598  0040D2  D001               	goto	l10022
 14599  0040D4  0C0F               	retlw	15
 14600  0040D6                     l10022:
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;SSD1306oLED.c: 277: {
 14604                           ;SSD1306oLED.c: 278: if (*string != 0)
 14605  0040D6  C0D5  FFF6         	movff	oled_putString@string,tblptrl
 14606  0040DA  C0D6  FFF7         	movff	oled_putString@string+1,tblptrh
 14607  0040DE  6AF8               	clrf	tblptru,c
 14608  0040E0  0E07               	movlw	(high __ramtop+-1)
 14609  0040E2  64F7               	cpfsgt	tblptrh,c
 14610  0040E4  D003               	bra	u8137
 14611  0040E6  0008               	tblrd		*
 14612  0040E8  50F5               	movf	tablat,w,c
 14613  0040EA  D005               	bra	u8130
 14614  0040EC                     u8137:
 14615  0040EC  CFF6 FFE1          	movff	tblptrl,fsr1l
 14616  0040F0  CFF7 FFE2          	movff	tblptrh,fsr1h
 14617  0040F4  50E7               	movf	indf1,w,c
 14618  0040F6                     u8130:
 14619  0040F6  0900               	iorlw	0
 14620  0040F8  B4D8               	btfsc	status,2,c
 14621  0040FA  0012               	return	
 14622                           
 14623                           ;SSD1306oLED.c: 279: {
 14624                           ;SSD1306oLED.c: 280: oled_putChar(*string, index, start_page);
 14625  0040FC  C0D9  F0CB         	movff	oled_putString@index,oled_putChar@station_dot
 14626  004100  C0D8  F0CC         	movff	oled_putString@start_page,oled_putChar@start_page
 14627  004104  C0D5  FFF6         	movff	oled_putString@string,tblptrl
 14628  004108  C0D6  FFF7         	movff	oled_putString@string+1,tblptrh
 14629  00410C  6AF8               	clrf	tblptru,c
 14630  00410E  0E07               	movlw	(high __ramtop+-1)
 14631  004110  64F7               	cpfsgt	tblptrh,c
 14632  004112  D003               	bra	u8157
 14633  004114  0008               	tblrd		*
 14634  004116  50F5               	movf	tablat,w,c
 14635  004118  D005               	bra	u8150
 14636  00411A                     u8157:
 14637  00411A  CFF6 FFE1          	movff	tblptrl,fsr1l
 14638  00411E  CFF7 FFE2          	movff	tblptrh,fsr1h
 14639  004122  50E7               	movf	indf1,w,c
 14640  004124                     u8150:
 14641  004124  EC3B  F021         	call	_oled_putChar
 14642                           
 14643                           ; BSR set to: 0
 14644                           ;SSD1306oLED.c: 281: *string++;
 14645  004128  4BD5               	infsnz	oled_putString@string& (0+255),f,b
 14646  00412A  2BD6               	incf	(oled_putString@string+1)& (0+255),f,b
 14647                           
 14648                           ; BSR set to: 0
 14649                           
 14650                           ;SSD1306oLED.c: 282: }
 14651  00412C  2BD9               	incf	oled_putString@index& (0+255),f,b
 14652  00412E  D7CF               	goto	l10018
 14653  004130                     __end_of_oled_putString:
 14654                           	opt stack 0
 14655                           tblptru	equ	0xFF8
 14656                           tblptrh	equ	0xFF7
 14657                           tblptrl	equ	0xFF6
 14658                           tablat	equ	0xFF5
 14659                           prodl	equ	0xFF3
 14660                           intcon	equ	0xFF2
 14661                           postinc0	equ	0xFEE
 14662                           wreg	equ	0xFE8
 14663                           indf1	equ	0xFE7
 14664                           postdec1	equ	0xFE5
 14665                           fsr1h	equ	0xFE2
 14666                           fsr1l	equ	0xFE1
 14667                           indf2	equ	0xFDF
 14668                           fsr2h	equ	0xFDA
 14669                           fsr2l	equ	0xFD9
 14670                           status	equ	0xFD8
 14671                           
 14672 ;; *************** function _oled_clear *****************
 14673 ;; Defined at:
 14674 ;;		line 290 in file "../Includes/Drivers/SSD1306oLED.c"
 14675 ;; Parameters:    Size  Location     Type
 14676 ;;		None
 14677 ;; Auto vars:     Size  Location     Type
 14678 ;;		None
 14679 ;; Return value:  Size  Location     Type
 14680 ;;		None               void
 14681 ;; Registers used:
 14682 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14683 ;; Tracked objects:
 14684 ;;		On entry : 0/0
 14685 ;;		On exit  : F/0
 14686 ;;		Unchanged: 0/0
 14687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14688 ;;      Params:         0       0       0       0       0       0       0       0       0
 14689 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14690 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14691 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14692 ;;Total ram usage:        0 bytes
 14693 ;; Hardware stack levels used:    1
 14694 ;; Hardware stack levels required when called:   16
 14695 ;; This function calls:
 14696 ;;		_oled_clearRow
 14697 ;; This function is called by:
 14698 ;;		_main
 14699 ;;		_test_powerup
 14700 ;;		_test_oled
 14701 ;;		_test_switch
 14702 ;;		_test_adc
 14703 ;;		_moteHandler
 14704 ;;		_moteJoiningProcess
 14705 ;;		_moteRunningProcess
 14706 ;;		_USBapp_Handler
 14707 ;;		_oled_init
 14708 ;; This function uses a non-reentrant model
 14709 ;;
 14710                           
 14711                           	psect	text52
 14712  0035F2                     __ptext52:
 14713                           	opt stack 0
 14714  0035F2                     _oled_clear:
 14715                           	opt stack 12
 14716                           
 14717                           ;SSD1306oLED.c: 292: oled_clearRow(0);
 14718                           
 14719                           ;incstack = 0
 14720  0035F2  0E00               	movlw	0
 14721  0035F4  EC3F  F01B         	call	_oled_clearRow
 14722                           
 14723                           ;SSD1306oLED.c: 293: oled_clearRow(1);
 14724  0035F8  0E01               	movlw	1
 14725  0035FA  EC3F  F01B         	call	_oled_clearRow
 14726                           
 14727                           ;SSD1306oLED.c: 294: oled_clearRow(2);
 14728  0035FE  0E02               	movlw	2
 14729  003600  EC3F  F01B         	call	_oled_clearRow
 14730                           
 14731                           ;SSD1306oLED.c: 295: oled_clearRow(3);
 14732  003604  0E03               	movlw	3
 14733  003606  EF3F  F01B         	goto	_oled_clearRow
 14734  00360A                     __end_of_oled_clear:
 14735                           	opt stack 0
 14736                           tblptru	equ	0xFF8
 14737                           tblptrh	equ	0xFF7
 14738                           tblptrl	equ	0xFF6
 14739                           tablat	equ	0xFF5
 14740                           prodl	equ	0xFF3
 14741                           intcon	equ	0xFF2
 14742                           postinc0	equ	0xFEE
 14743                           wreg	equ	0xFE8
 14744                           indf1	equ	0xFE7
 14745                           postdec1	equ	0xFE5
 14746                           fsr1h	equ	0xFE2
 14747                           fsr1l	equ	0xFE1
 14748                           indf2	equ	0xFDF
 14749                           fsr2h	equ	0xFDA
 14750                           fsr2l	equ	0xFD9
 14751                           status	equ	0xFD8
 14752                           
 14753 ;; *************** function _oled_clearRow *****************
 14754 ;; Defined at:
 14755 ;;		line 298 in file "../Includes/Drivers/SSD1306oLED.c"
 14756 ;; Parameters:    Size  Location     Type
 14757 ;;  page            1    wreg     unsigned char 
 14758 ;; Auto vars:     Size  Location     Type
 14759 ;;  page            1   13[BANK0 ] unsigned char 
 14760 ;;  index           1   14[BANK0 ] unsigned char 
 14761 ;; Return value:  Size  Location     Type
 14762 ;;		None               void
 14763 ;; Registers used:
 14764 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14765 ;; Tracked objects:
 14766 ;;		On entry : 0/0
 14767 ;;		On exit  : F/0
 14768 ;;		Unchanged: 0/0
 14769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14770 ;;      Params:         0       0       0       0       0       0       0       0       0
 14771 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14772 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14773 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14774 ;;Total ram usage:        2 bytes
 14775 ;; Hardware stack levels used:    1
 14776 ;; Hardware stack levels required when called:   15
 14777 ;; This function calls:
 14778 ;;		_oled_putChar
 14779 ;; This function is called by:
 14780 ;;		_oled_clear
 14781 ;; This function uses a non-reentrant model
 14782 ;;
 14783                           
 14784                           	psect	text53
 14785  00367E                     __ptext53:
 14786                           	opt stack 0
 14787  00367E                     _oled_clearRow:
 14788                           	opt stack 12
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;incstack = 0
 14792                           ;oled_clearRow@page stored from wreg
 14793  00367E  0100               	movlb	0	; () banked
 14794  003680  6FD5               	movwf	oled_clearRow@page& (0+255),b
 14795                           
 14796                           ;SSD1306oLED.c: 300: uint8_t index;
 14797                           ;SSD1306oLED.c: 302: for(index = 0; index < 16; index++)
 14798  003682  6BD6               	clrf	oled_clearRow@index& (0+255),b
 14799  003684                     l9862:
 14800                           
 14801                           ; BSR set to: 0
 14802                           ;SSD1306oLED.c: 303: {
 14803                           ;SSD1306oLED.c: 304: oled_putChar( ' ', index, page);
 14804  003684  C0D6  F0CB         	movff	oled_clearRow@index,oled_putChar@station_dot
 14805  003688  C0D5  F0CC         	movff	oled_clearRow@page,oled_putChar@start_page
 14806  00368C  0E20               	movlw	32
 14807  00368E  EC3B  F021         	call	_oled_putChar
 14808                           
 14809                           ; BSR set to: 0
 14810  003692  2BD6               	incf	oled_clearRow@index& (0+255),f,b
 14811                           
 14812                           ; BSR set to: 0
 14813  003694  0E0F               	movlw	15
 14814  003696  65D6               	cpfsgt	oled_clearRow@index& (0+255),b
 14815  003698  D7F5               	goto	l9862
 14816  00369A  0C0F               	retlw	15
 14817  00369C                     __end_of_oled_clearRow:
 14818                           	opt stack 0
 14819                           tblptru	equ	0xFF8
 14820                           tblptrh	equ	0xFF7
 14821                           tblptrl	equ	0xFF6
 14822                           tablat	equ	0xFF5
 14823                           prodl	equ	0xFF3
 14824                           intcon	equ	0xFF2
 14825                           postinc0	equ	0xFEE
 14826                           wreg	equ	0xFE8
 14827                           indf1	equ	0xFE7
 14828                           postdec1	equ	0xFE5
 14829                           fsr1h	equ	0xFE2
 14830                           fsr1l	equ	0xFE1
 14831                           indf2	equ	0xFDF
 14832                           fsr2h	equ	0xFDA
 14833                           fsr2l	equ	0xFD9
 14834                           status	equ	0xFD8
 14835                           
 14836 ;; *************** function _oled_putChar *****************
 14837 ;; Defined at:
 14838 ;;		line 258 in file "../Includes/Drivers/SSD1306oLED.c"
 14839 ;; Parameters:    Size  Location     Type
 14840 ;;  k               1    wreg     unsigned char 
 14841 ;;  station_dot     1    3[BANK0 ] unsigned char 
 14842 ;;  start_page      1    4[BANK0 ] unsigned char 
 14843 ;; Auto vars:     Size  Location     Type
 14844 ;;  k               1   11[BANK0 ] unsigned char 
 14845 ;;  index           1   12[BANK0 ] unsigned char 
 14846 ;; Return value:  Size  Location     Type
 14847 ;;		None               void
 14848 ;; Registers used:
 14849 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14850 ;; Tracked objects:
 14851 ;;		On entry : 0/0
 14852 ;;		On exit  : F/0
 14853 ;;		Unchanged: 0/0
 14854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14855 ;;      Params:         0       2       0       0       0       0       0       0       0
 14856 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14857 ;;      Temps:          0       6       0       0       0       0       0       0       0
 14858 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14859 ;;Total ram usage:       10 bytes
 14860 ;; Hardware stack levels used:    1
 14861 ;; Hardware stack levels required when called:   14
 14862 ;; This function calls:
 14863 ;;		_Set_Column_Address
 14864 ;;		_Set_Page_Address
 14865 ;;		_oled_writeData
 14866 ;; This function is called by:
 14867 ;;		_test_adc
 14868 ;;		_oled_putString
 14869 ;;		_oled_clearRow
 14870 ;; This function uses a non-reentrant model
 14871 ;;
 14872                           
 14873                           	psect	text54
 14874  004276                     __ptext54:
 14875                           	opt stack 0
 14876  004276                     _oled_putChar:
 14877                           	opt stack 13
 14878                           
 14879                           ; BSR set to: 0
 14880                           ;incstack = 0
 14881                           ;oled_putChar@k stored from wreg
 14882  004276  0100               	movlb	0	; () banked
 14883  004278  6FD3               	movwf	oled_putChar@k& (0+255),b
 14884                           
 14885                           ;SSD1306oLED.c: 260: uint8_t index;
 14886                           ;SSD1306oLED.c: 262: Set_Page_Address(start_page);
 14887  00427A  51CC               	movf	oled_putChar@start_page& (0+255),w,b
 14888  00427C  ECCF  F01A         	call	_Set_Page_Address
 14889                           
 14890                           ;SSD1306oLED.c: 263: Set_Column_Address(0x00 + station_dot * 8);
 14891  004280  0100               	movlb	0	; () banked
 14892  004282  51CB               	movf	oled_putChar@station_dot& (0+255),w,b
 14893  004284  0D08               	mullw	8
 14894  004286  50F3               	movf	prodl,w,c
 14895  004288  EC30  F01B         	call	_Set_Column_Address
 14896                           
 14897                           ;SSD1306oLED.c: 265: LATBbits.LATB4 = 0;
 14898  00428C  988A               	bcf	3978,4,c	;volatile
 14899                           
 14900                           ;SSD1306oLED.c: 266: for(index = 0; index < 8; index++)
 14901  00428E  0100               	movlb	0	; () banked
 14902  004290  6BD4               	clrf	oled_putChar@index& (0+255),b
 14903  004292                     l9810:
 14904                           
 14905                           ; BSR set to: 0
 14906                           ;SSD1306oLED.c: 267: {
 14907                           ;SSD1306oLED.c: 268: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 14908  004292  6BCD               	clrf	??_oled_putChar& (0+255),b
 14909  004294  69CE               	setf	(??_oled_putChar+1)& (0+255),b
 14910  004296  51D3               	movf	oled_putChar@k& (0+255),w,b
 14911  004298  6FCF               	movwf	(??_oled_putChar+2)& (0+255),b
 14912  00429A  6BD0               	clrf	(??_oled_putChar+3)& (0+255),b
 14913  00429C  90D8               	bcf	status,0,c
 14914  00429E  37CF               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 14915  0042A0  37D0               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 14916  0042A2  90D8               	bcf	status,0,c
 14917  0042A4  37CF               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 14918  0042A6  37D0               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 14919  0042A8  90D8               	bcf	status,0,c
 14920  0042AA  37CF               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 14921  0042AC  37D0               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 14922  0042AE  C0F5  F0D1         	movff	_selectedFont,??_oled_putChar+4
 14923  0042B2  C0F6  F0D2         	movff	_selectedFont+1,??_oled_putChar+5
 14924  0042B6  51CF               	movf	(??_oled_putChar+2)& (0+255),w,b
 14925  0042B8  27D1               	addwf	(??_oled_putChar+4)& (0+255),f,b
 14926  0042BA  51D0               	movf	(??_oled_putChar+3)& (0+255),w,b
 14927  0042BC  23D2               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 14928  0042BE  51D4               	movf	oled_putChar@index& (0+255),w,b
 14929  0042C0  27D1               	addwf	(??_oled_putChar+4)& (0+255),f,b
 14930  0042C2  0E00               	movlw	0
 14931  0042C4  23D2               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 14932  0042C6  51CD               	movf	??_oled_putChar& (0+255),w,b
 14933  0042C8  27D1               	addwf	(??_oled_putChar+4)& (0+255),f,b
 14934  0042CA  51CE               	movf	(??_oled_putChar+1)& (0+255),w,b
 14935  0042CC  23D2               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 14936  0042CE  C0D1  FFF6         	movff	??_oled_putChar+4,tblptrl
 14937  0042D2  C0D2  FFF7         	movff	??_oled_putChar+5,tblptrh
 14938  0042D6                     	if	0	;tblptru may be non-zero
 14939  0042D6                     	endif
 14940  0042D6                     	if	0	;tblptru may be non-zero
 14941  0042D6                     	endif
 14942  0042D6  0008               	tblrd		*
 14943  0042D8  50F5               	movf	tablat,w,c
 14944  0042DA  EC80  F01A         	call	_oled_writeData
 14945  0042DE  0100               	movlb	0	; () banked
 14946  0042E0  2BD4               	incf	oled_putChar@index& (0+255),f,b
 14947                           
 14948                           ; BSR set to: 0
 14949  0042E2  0E07               	movlw	7
 14950  0042E4  65D4               	cpfsgt	oled_putChar@index& (0+255),b
 14951  0042E6  D7D5               	goto	l9810
 14952                           
 14953                           ; BSR set to: 0
 14954                           ;SSD1306oLED.c: 269: }
 14955                           ;SSD1306oLED.c: 270: LATBbits.LATB4 = 1;
 14956  0042E8  888A               	bsf	3978,4,c	;volatile
 14957                           
 14958                           ; BSR set to: 0
 14959  0042EA  0C07               	retlw	7	;funcret
 14960  0042EC                     __end_of_oled_putChar:
 14961                           	opt stack 0
 14962                           tblptru	equ	0xFF8
 14963                           tblptrh	equ	0xFF7
 14964                           tblptrl	equ	0xFF6
 14965                           tablat	equ	0xFF5
 14966                           prodl	equ	0xFF3
 14967                           intcon	equ	0xFF2
 14968                           postinc0	equ	0xFEE
 14969                           wreg	equ	0xFE8
 14970                           indf1	equ	0xFE7
 14971                           postdec1	equ	0xFE5
 14972                           fsr1h	equ	0xFE2
 14973                           fsr1l	equ	0xFE1
 14974                           indf2	equ	0xFDF
 14975                           fsr2h	equ	0xFDA
 14976                           fsr2l	equ	0xFD9
 14977                           status	equ	0xFD8
 14978                           
 14979 ;; *************** function _oled_writeData *****************
 14980 ;; Defined at:
 14981 ;;		line 407 in file "../Includes/Drivers/SSD1306oLED.c"
 14982 ;; Parameters:    Size  Location     Type
 14983 ;;  data            1    wreg     unsigned char 
 14984 ;; Auto vars:     Size  Location     Type
 14985 ;;  data            1    1[BANK0 ] unsigned char 
 14986 ;; Return value:  Size  Location     Type
 14987 ;;		None               void
 14988 ;; Registers used:
 14989 ;;		wreg, status,2, cstack
 14990 ;; Tracked objects:
 14991 ;;		On entry : F/0
 14992 ;;		On exit  : 0/0
 14993 ;;		Unchanged: 0/0
 14994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14995 ;;      Params:         0       0       0       0       0       0       0       0       0
 14996 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14997 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14998 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14999 ;;Total ram usage:        1 bytes
 15000 ;; Hardware stack levels used:    1
 15001 ;; Hardware stack levels required when called:   12
 15002 ;; This function calls:
 15003 ;;		_SPI_Exchange8bit
 15004 ;; This function is called by:
 15005 ;;		_oled_putChar
 15006 ;; This function uses a non-reentrant model
 15007 ;;
 15008                           
 15009                           	psect	text55
 15010  003500                     __ptext55:
 15011                           	opt stack 0
 15012  003500                     _oled_writeData:
 15013                           	opt stack 14
 15014                           
 15015                           ; BSR set to: 0
 15016                           ;incstack = 0
 15017                           ;oled_writeData@data stored from wreg
 15018  003500  6FC9               	movwf	oled_writeData@data& (0+255),b
 15019                           
 15020                           ;SSD1306oLED.c: 409: LATBbits.LATB5 = 1;
 15021  003502  8A8A               	bsf	3978,5,c	;volatile
 15022                           
 15023                           ;SSD1306oLED.c: 410: SPI_Exchange8bit(data);
 15024  003504  0100               	movlb	0	; () banked
 15025  003506  51C9               	movf	oled_writeData@data& (0+255),w,b
 15026  003508  EFA2  F01A         	goto	_SPI_Exchange8bit
 15027  00350C                     __end_of_oled_writeData:
 15028                           	opt stack 0
 15029                           tblptru	equ	0xFF8
 15030                           tblptrh	equ	0xFF7
 15031                           tblptrl	equ	0xFF6
 15032                           tablat	equ	0xFF5
 15033                           prodl	equ	0xFF3
 15034                           intcon	equ	0xFF2
 15035                           postinc0	equ	0xFEE
 15036                           wreg	equ	0xFE8
 15037                           indf1	equ	0xFE7
 15038                           postdec1	equ	0xFE5
 15039                           fsr1h	equ	0xFE2
 15040                           fsr1l	equ	0xFE1
 15041                           indf2	equ	0xFDF
 15042                           fsr2h	equ	0xFDA
 15043                           fsr2l	equ	0xFD9
 15044                           status	equ	0xFD8
 15045                           
 15046 ;; *************** function _Set_Page_Address *****************
 15047 ;; Defined at:
 15048 ;;		line 201 in file "../Includes/Drivers/SSD1306oLED.c"
 15049 ;; Parameters:    Size  Location     Type
 15050 ;;  address         1    wreg     unsigned char 
 15051 ;; Auto vars:     Size  Location     Type
 15052 ;;  address         1    2[BANK0 ] unsigned char 
 15053 ;; Return value:  Size  Location     Type
 15054 ;;		None               void
 15055 ;; Registers used:
 15056 ;;		wreg, status,2, status,0, cstack
 15057 ;; Tracked objects:
 15058 ;;		On entry : F/0
 15059 ;;		On exit  : 0/0
 15060 ;;		Unchanged: 0/0
 15061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15062 ;;      Params:         0       0       0       0       0       0       0       0       0
 15063 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15064 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15065 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15066 ;;Total ram usage:        1 bytes
 15067 ;; Hardware stack levels used:    1
 15068 ;; Hardware stack levels required when called:   13
 15069 ;; This function calls:
 15070 ;;		_oled_writeCommand
 15071 ;; This function is called by:
 15072 ;;		_oled_putChar
 15073 ;; This function uses a non-reentrant model
 15074 ;;
 15075                           
 15076                           	psect	text56
 15077  00359E                     __ptext56:
 15078                           	opt stack 0
 15079  00359E                     _Set_Page_Address:
 15080                           	opt stack 13
 15081                           
 15082                           ;incstack = 0
 15083                           ;Set_Page_Address@address stored from wreg
 15084  00359E  6FCA               	movwf	Set_Page_Address@address& (0+255),b
 15085                           
 15086                           ;SSD1306oLED.c: 203: address = 0xB0 | address;
 15087  0035A0  0EB0               	movlw	176
 15088  0035A2  0100               	movlb	0	; () banked
 15089  0035A4  13CA               	iorwf	Set_Page_Address@address& (0+255),f,b
 15090                           
 15091                           ; BSR set to: 0
 15092                           ;SSD1306oLED.c: 204: LATBbits.LATB4 = 0;
 15093  0035A6  988A               	bcf	3978,4,c	;volatile
 15094                           
 15095                           ; BSR set to: 0
 15096                           ;SSD1306oLED.c: 205: oled_writeCommand(address);
 15097  0035A8  51CA               	movf	Set_Page_Address@address& (0+255),w,b
 15098  0035AA  EC7A  F01A         	call	_oled_writeCommand
 15099                           
 15100                           ;SSD1306oLED.c: 206: LATBbits.LATB4 = 1;
 15101  0035AE  888A               	bsf	3978,4,c	;volatile
 15102  0035B0  0012               	return		;funcret
 15103  0035B2                     __end_of_Set_Page_Address:
 15104                           	opt stack 0
 15105                           tblptru	equ	0xFF8
 15106                           tblptrh	equ	0xFF7
 15107                           tblptrl	equ	0xFF6
 15108                           tablat	equ	0xFF5
 15109                           prodl	equ	0xFF3
 15110                           intcon	equ	0xFF2
 15111                           postinc0	equ	0xFEE
 15112                           wreg	equ	0xFE8
 15113                           indf1	equ	0xFE7
 15114                           postdec1	equ	0xFE5
 15115                           fsr1h	equ	0xFE2
 15116                           fsr1l	equ	0xFE1
 15117                           indf2	equ	0xFDF
 15118                           fsr2h	equ	0xFDA
 15119                           fsr2l	equ	0xFD9
 15120                           status	equ	0xFD8
 15121                           
 15122 ;; *************** function _Set_Column_Address *****************
 15123 ;; Defined at:
 15124 ;;		line 210 in file "../Includes/Drivers/SSD1306oLED.c"
 15125 ;; Parameters:    Size  Location     Type
 15126 ;;  address         1    wreg     unsigned char 
 15127 ;; Auto vars:     Size  Location     Type
 15128 ;;  address         1    2[BANK0 ] unsigned char 
 15129 ;; Return value:  Size  Location     Type
 15130 ;;		None               void
 15131 ;; Registers used:
 15132 ;;		wreg, status,2, status,0, cstack
 15133 ;; Tracked objects:
 15134 ;;		On entry : F/0
 15135 ;;		On exit  : 0/0
 15136 ;;		Unchanged: 0/0
 15137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15138 ;;      Params:         0       0       0       0       0       0       0       0       0
 15139 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15140 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15141 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15142 ;;Total ram usage:        1 bytes
 15143 ;; Hardware stack levels used:    1
 15144 ;; Hardware stack levels required when called:   13
 15145 ;; This function calls:
 15146 ;;		_oled_writeCommand
 15147 ;; This function is called by:
 15148 ;;		_oled_putChar
 15149 ;; This function uses a non-reentrant model
 15150 ;;
 15151                           
 15152                           	psect	text57
 15153  003660                     __ptext57:
 15154                           	opt stack 0
 15155  003660                     _Set_Column_Address:
 15156                           	opt stack 13
 15157                           
 15158                           ;incstack = 0
 15159                           ;Set_Column_Address@address stored from wreg
 15160  003660  6FCA               	movwf	Set_Column_Address@address& (0+255),b
 15161                           
 15162                           ;SSD1306oLED.c: 212: LATBbits.LATB4 = 0;
 15163  003662  988A               	bcf	3978,4,c	;volatile
 15164                           
 15165                           ;SSD1306oLED.c: 213: oled_writeCommand(0x10 | (address >> 4) );
 15166  003664  0100               	movlb	0	; () banked
 15167  003666  39CA               	swapf	Set_Column_Address@address& (0+255),w,b
 15168  003668  0B0F               	andlw	15
 15169  00366A  0910               	iorlw	16
 15170  00366C  EC7A  F01A         	call	_oled_writeCommand
 15171                           
 15172                           ;SSD1306oLED.c: 214: oled_writeCommand(0x0F & address);
 15173  003670  0100               	movlb	0	; () banked
 15174  003672  51CA               	movf	Set_Column_Address@address& (0+255),w,b
 15175  003674  0B0F               	andlw	15
 15176  003676  EC7A  F01A         	call	_oled_writeCommand
 15177                           
 15178                           ;SSD1306oLED.c: 215: LATBbits.LATB4 = 1;
 15179  00367A  888A               	bsf	3978,4,c	;volatile
 15180  00367C  0012               	return		;funcret
 15181  00367E                     __end_of_Set_Column_Address:
 15182                           	opt stack 0
 15183                           tblptru	equ	0xFF8
 15184                           tblptrh	equ	0xFF7
 15185                           tblptrl	equ	0xFF6
 15186                           tablat	equ	0xFF5
 15187                           prodl	equ	0xFF3
 15188                           intcon	equ	0xFF2
 15189                           postinc0	equ	0xFEE
 15190                           wreg	equ	0xFE8
 15191                           indf1	equ	0xFE7
 15192                           postdec1	equ	0xFE5
 15193                           fsr1h	equ	0xFE2
 15194                           fsr1l	equ	0xFE1
 15195                           indf2	equ	0xFDF
 15196                           fsr2h	equ	0xFDA
 15197                           fsr2l	equ	0xFD9
 15198                           status	equ	0xFD8
 15199                           
 15200 ;; *************** function _oled_writeCommand *****************
 15201 ;; Defined at:
 15202 ;;		line 401 in file "../Includes/Drivers/SSD1306oLED.c"
 15203 ;; Parameters:    Size  Location     Type
 15204 ;;  command         1    wreg     unsigned char 
 15205 ;; Auto vars:     Size  Location     Type
 15206 ;;  command         1    1[BANK0 ] unsigned char 
 15207 ;; Return value:  Size  Location     Type
 15208 ;;		None               void
 15209 ;; Registers used:
 15210 ;;		wreg, status,2, cstack
 15211 ;; Tracked objects:
 15212 ;;		On entry : 0/0
 15213 ;;		On exit  : 0/0
 15214 ;;		Unchanged: 0/0
 15215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15216 ;;      Params:         0       0       0       0       0       0       0       0       0
 15217 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15218 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15219 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15220 ;;Total ram usage:        1 bytes
 15221 ;; Hardware stack levels used:    1
 15222 ;; Hardware stack levels required when called:   12
 15223 ;; This function calls:
 15224 ;;		_SPI_Exchange8bit
 15225 ;; This function is called by:
 15226 ;;		_Set_Page_Address
 15227 ;;		_Set_Column_Address
 15228 ;;		_oled_devInit
 15229 ;;		_oled_setDisplay
 15230 ;;		_oled_displayOff
 15231 ;; This function uses a non-reentrant model
 15232 ;;
 15233                           
 15234                           	psect	text58
 15235  0034F4                     __ptext58:
 15236                           	opt stack 0
 15237  0034F4                     _oled_writeCommand:
 15238                           	opt stack 13
 15239                           
 15240                           ;incstack = 0
 15241                           ;oled_writeCommand@command stored from wreg
 15242  0034F4  0100               	movlb	0	; () banked
 15243  0034F6  6FC9               	movwf	oled_writeCommand@command& (0+255),b
 15244                           
 15245                           ;SSD1306oLED.c: 403: LATBbits.LATB5 = 0;
 15246  0034F8  9A8A               	bcf	3978,5,c	;volatile
 15247                           
 15248                           ;SSD1306oLED.c: 404: SPI_Exchange8bit(command);
 15249  0034FA  51C9               	movf	oled_writeCommand@command& (0+255),w,b
 15250  0034FC  EFA2  F01A         	goto	_SPI_Exchange8bit
 15251  003500                     __end_of_oled_writeCommand:
 15252                           	opt stack 0
 15253                           tblptru	equ	0xFF8
 15254                           tblptrh	equ	0xFF7
 15255                           tblptrl	equ	0xFF6
 15256                           tablat	equ	0xFF5
 15257                           prodl	equ	0xFF3
 15258                           intcon	equ	0xFF2
 15259                           postinc0	equ	0xFEE
 15260                           wreg	equ	0xFE8
 15261                           indf1	equ	0xFE7
 15262                           postdec1	equ	0xFE5
 15263                           fsr1h	equ	0xFE2
 15264                           fsr1l	equ	0xFE1
 15265                           indf2	equ	0xFDF
 15266                           fsr2h	equ	0xFDA
 15267                           fsr2l	equ	0xFD9
 15268                           status	equ	0xFD8
 15269                           
 15270 ;; *************** function _SPI_Exchange8bit *****************
 15271 ;; Defined at:
 15272 ;;		line 81 in file "../Includes/MccGenerated/spi.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;  data            1    wreg     unsigned char 
 15275 ;; Auto vars:     Size  Location     Type
 15276 ;;  data            1    0[BANK0 ] unsigned char 
 15277 ;; Return value:  Size  Location     Type
 15278 ;;                  1    wreg      unsigned char 
 15279 ;; Registers used:
 15280 ;;		wreg, status,2
 15281 ;; Tracked objects:
 15282 ;;		On entry : F/0
 15283 ;;		On exit  : 0/0
 15284 ;;		Unchanged: 0/0
 15285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15286 ;;      Params:         0       0       0       0       0       0       0       0       0
 15287 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15288 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15289 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15290 ;;Total ram usage:        1 bytes
 15291 ;; Hardware stack levels used:    1
 15292 ;; Hardware stack levels required when called:   11
 15293 ;; This function calls:
 15294 ;;		Nothing
 15295 ;; This function is called by:
 15296 ;;		_oled_writeCommand
 15297 ;;		_oled_writeData
 15298 ;; This function uses a non-reentrant model
 15299 ;;
 15300                           
 15301                           	psect	text59
 15302  003544                     __ptext59:
 15303                           	opt stack 0
 15304  003544                     _SPI_Exchange8bit:
 15305                           	opt stack 14
 15306                           
 15307                           ;incstack = 0
 15308                           ;SPI_Exchange8bit@data stored from wreg
 15309  003544  6FC8               	movwf	SPI_Exchange8bit@data& (0+255),b
 15310                           
 15311                           ;spi.c: 84: SSP1CON1bits.WCOL = 0;
 15312  003546  9EC6               	bcf	4038,7,c	;volatile
 15313                           
 15314                           ;spi.c: 86: SSPBUF = data;
 15315  003548  C0C8  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 15316  00354C                     l1207:
 15317  00354C  A0C7               	btfss	4039,0,c	;volatile
 15318  00354E  D7FE               	goto	l1207
 15319                           
 15320                           ;spi.c: 90: }
 15321                           ;spi.c: 92: return (SSPBUF);
 15322  003550  50C9               	movf	4041,w,c	;volatile
 15323  003552  0012               	return		;funcret
 15324  003554                     __end_of_SPI_Exchange8bit:
 15325                           	opt stack 0
 15326                           tblptru	equ	0xFF8
 15327                           tblptrh	equ	0xFF7
 15328                           tblptrl	equ	0xFF6
 15329                           tablat	equ	0xFF5
 15330                           prodl	equ	0xFF3
 15331                           intcon	equ	0xFF2
 15332                           postinc0	equ	0xFEE
 15333                           wreg	equ	0xFE8
 15334                           indf1	equ	0xFE7
 15335                           postdec1	equ	0xFE5
 15336                           fsr1h	equ	0xFE2
 15337                           fsr1l	equ	0xFE1
 15338                           indf2	equ	0xFDF
 15339                           fsr2h	equ	0xFDA
 15340                           fsr2l	equ	0xFD9
 15341                           status	equ	0xFD8
 15342                           
 15343 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 15344 ;; Defined at:
 15345 ;;		line 125 in file "../Includes/Board/USBapp.c"
 15346 ;; Parameters:    Size  Location     Type
 15347 ;;		None
 15348 ;; Auto vars:     Size  Location     Type
 15349 ;;		None
 15350 ;; Return value:  Size  Location     Type
 15351 ;;		None               void
 15352 ;; Registers used:
 15353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15354 ;; Tracked objects:
 15355 ;;		On entry : F/0
 15356 ;;		On exit  : F/0
 15357 ;;		Unchanged: 0/0
 15358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15359 ;;      Params:         0       0       0       0       0       0       0       0       0
 15360 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15361 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15362 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15363 ;;Total ram usage:        1 bytes
 15364 ;; Hardware stack levels used:    1
 15365 ;; Hardware stack levels required when called:   13
 15366 ;; This function calls:
 15367 ;;		_CDCTxService
 15368 ;;		_EUSART_Read
 15369 ;;		_EUSART_Write
 15370 ;;		_MOTEapp_setResponseReady
 15371 ;;		_USBapp_getrxByteFlag
 15372 ;;		_getsUSBUSART
 15373 ;;		_putUSBUSART
 15374 ;; This function is called by:
 15375 ;;		_USBapp_Handler
 15376 ;; This function uses a non-reentrant model
 15377 ;;
 15378                           
 15379                           	psect	text60
 15380  004C04                     __ptext60:
 15381                           	opt stack 0
 15382  004C04                     _USBapp_DeviceCdcEmulatorHandler:
 15383                           	opt stack 16
 15384                           
 15385                           ; BSR set to: 0
 15386                           ;USBapp.c: 128: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 15387                           
 15388                           ;incstack = 0
 15389  004C04  0E1F               	movlw	31
 15390  004C06  658A               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 15391  004C08  0C1F               	retlw	31
 15392                           
 15393                           ; BSR set to: 0
 15394  004C0A  B260               	btfsc	3936,1,c	;volatile
 15395  004C0C  0C1F               	retlw	31
 15396                           
 15397                           ; BSR set to: 0
 15398                           ;USBapp.c: 131: if (RS232_Out_Data_Rdy == 0)
 15399  004C0E  501B               	movf	_RS232_Out_Data_Rdy,w,c
 15400  004C10  E10E               	bnz	l834
 15401                           
 15402                           ; BSR set to: 0
 15403                           ;USBapp.c: 132: {
 15404                           ;USBapp.c: 133: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 15405  004C12  0E40               	movlw	low _USB_Buffer
 15406  004C14  6FCF               	movwf	getsUSBUSART@buffer& (0+255),b
 15407  004C16  0E01               	movlw	high _USB_Buffer
 15408  004C18  6FD0               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15409  004C1A  0E40               	movlw	64
 15410  004C1C  6FD1               	movwf	getsUSBUSART@len& (0+255),b
 15411  004C1E  EC7E  F023         	call	_getsUSBUSART	;wreg free
 15412  004C22  6E19               	movwf	_LastRS232Out,c
 15413                           
 15414                           ; BSR set to: 0
 15415                           ;USBapp.c: 134: if(LastRS232Out > 0)
 15416  004C24  5019               	movf	_LastRS232Out,w,c
 15417  004C26  E003               	bz	l834
 15418                           
 15419                           ; BSR set to: 0
 15420                           ;USBapp.c: 135: {
 15421                           ;USBapp.c: 136: RS232_Out_Data_Rdy = 1;
 15422  004C28  0E01               	movlw	1
 15423  004C2A  6E1B               	movwf	_RS232_Out_Data_Rdy,c
 15424                           
 15425                           ; BSR set to: 0
 15426                           ;USBapp.c: 137: RS232cp = 0;
 15427  004C2C  6A1C               	clrf	_RS232cp,c
 15428  004C2E                     l834:
 15429                           
 15430                           ; BSR set to: 0
 15431                           ;USBapp.c: 138: }
 15432                           ;USBapp.c: 139: }
 15433                           ;USBapp.c: 142: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 15434  004C2E  501B               	movf	_RS232_Out_Data_Rdy,w,c
 15435  004C30  E010               	bz	l11888
 15436                           
 15437                           ; BSR set to: 0
 15438  004C32  A2AC               	btfss	4012,1,c	;volatile
 15439  004C34  D00E               	goto	l11888
 15440                           
 15441                           ; BSR set to: 0
 15442                           ;USBapp.c: 143: {
 15443                           ;USBapp.c: 145: EUSART_Write(USB_Buffer[RS232cp]);
 15444  004C36  0E40               	movlw	low _USB_Buffer
 15445  004C38  241C               	addwf	_RS232cp,w,c
 15446  004C3A  6ED9               	movwf	fsr2l,c
 15447  004C3C  6ADA               	clrf	fsr2h,c
 15448  004C3E  0E01               	movlw	high _USB_Buffer
 15449  004C40  22DA               	addwfc	fsr2h,f,c
 15450  004C42  50DF               	movf	indf2,w,c
 15451  004C44  ECCC  F01C         	call	_EUSART_Write
 15452                           
 15453                           ;USBapp.c: 146: ++RS232cp;
 15454  004C48  2A1C               	incf	_RS232cp,f,c
 15455                           
 15456                           ;USBapp.c: 147: if (RS232cp == LastRS232Out)
 15457  004C4A  5019               	movf	_LastRS232Out,w,c
 15458  004C4C  181C               	xorwf	_RS232cp,w,c
 15459  004C4E  E101               	bnz	l11888
 15460                           
 15461                           ;USBapp.c: 148: RS232_Out_Data_Rdy = 0;
 15462  004C50  6A1B               	clrf	_RS232_Out_Data_Rdy,c
 15463  004C52                     l11888:
 15464                           
 15465                           ;USBapp.c: 149: }
 15466                           ;USBapp.c: 152: if ((eusartRxCount))
 15467  004C52  5023               	movf	_eusartRxCount,w,c	;volatile
 15468  004C54  E01C               	bz	l11904
 15469                           
 15470                           ;USBapp.c: 153: {
 15471                           ;USBapp.c: 154: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 15472  004C56  EC53  F01A         	call	_USBapp_getrxByteFlag	;wreg free
 15473  004C5A  0900               	iorlw	0
 15474  004C5C  E018               	bz	l11904
 15475  004C5E  0E3F               	movlw	63
 15476  004C60  601A               	cpfslt	_NextUSBOut,c
 15477  004C62  D015               	goto	l11904
 15478                           
 15479                           ;USBapp.c: 155: {
 15480                           ;USBapp.c: 156: __nop();
 15481  004C64  F000               	nop	
 15482                           
 15483                           ;USBapp.c: 157: USB_Buffer[NextUSBOut] = EUSART_Read();
 15484  004C66  ECB5  F01C         	call	_EUSART_Read	;wreg free
 15485  004C6A  6FD5               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 15486  004C6C  0E40               	movlw	low _USB_Buffer
 15487  004C6E  241A               	addwf	_NextUSBOut,w,c
 15488  004C70  6ED9               	movwf	fsr2l,c
 15489  004C72  6ADA               	clrf	fsr2h,c
 15490  004C74  0E01               	movlw	high _USB_Buffer
 15491  004C76  22DA               	addwfc	fsr2h,f,c
 15492  004C78  C0D5  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 15493                           
 15494                           ; BSR set to: 0
 15495                           ;USBapp.c: 158: ++NextUSBOut;
 15496  004C7C  2A1A               	incf	_NextUSBOut,f,c
 15497                           
 15498                           ; BSR set to: 0
 15499                           ;USBapp.c: 159: USB_Buffer[NextUSBOut] = 0;
 15500  004C7E  0E40               	movlw	low _USB_Buffer
 15501  004C80  241A               	addwf	_NextUSBOut,w,c
 15502  004C82  6ED9               	movwf	fsr2l,c
 15503  004C84  6ADA               	clrf	fsr2h,c
 15504  004C86  0E01               	movlw	high _USB_Buffer
 15505  004C88  22DA               	addwfc	fsr2h,f,c
 15506  004C8A  6ADF               	clrf	indf2,c
 15507                           
 15508                           ; BSR set to: 0
 15509                           ;USBapp.c: 160: rxByteFlag = 0;
 15510  004C8C  6A2A               	clrf	_rxByteFlag,c	;volatile
 15511  004C8E                     l11904:
 15512                           
 15513                           ;USBapp.c: 161: }
 15514                           ;USBapp.c: 162: }
 15515                           ;USBapp.c: 166: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 15516  004C8E  5020               	movf	_cdc_trf_state,w,c
 15517  004C90  E002 EFDB  F02B    	bnz	_CDCTxService
 15518  004C96  501A               	movf	_NextUSBOut,w,c
 15519  004C98  E102 EFDB  F02B    	bz	_CDCTxService
 15520                           
 15521                           ;USBapp.c: 167: {
 15522                           ;USBapp.c: 168: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 15523  004C9E  0E40               	movlw	low _USB_Buffer
 15524  004CA0  0100               	movlb	0	; () banked
 15525  004CA2  6FC8               	movwf	putUSBUSART@data& (0+255),b
 15526  004CA4  0E01               	movlw	high _USB_Buffer
 15527  004CA6  6FC9               	movwf	(putUSBUSART@data+1)& (0+255),b
 15528  004CA8  C01A  F0CA         	movff	_NextUSBOut,putUSBUSART@length
 15529  004CAC  EC05  F01B         	call	_putUSBUSART	;wreg free
 15530                           
 15531                           ; BSR set to: 0
 15532                           ;USBapp.c: 169: MOTEapp_setResponseReady();
 15533  004CB0  EC02  F008         	call	_MOTEapp_setResponseReady	;wreg free
 15534                           
 15535                           ; BSR set to: 0
 15536                           ;USBapp.c: 170: NextUSBOut = 0;
 15537  004CB4  6A1A               	clrf	_NextUSBOut,c
 15538                           
 15539                           ;USBapp.c: 171: }
 15540                           ;USBapp.c: 173: CDCTxService();
 15541  004CB6  EFDB  F02B         	goto	_CDCTxService	;wreg free
 15542  004CBA                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 15543                           	opt stack 0
 15544                           tblptru	equ	0xFF8
 15545                           tblptrh	equ	0xFF7
 15546                           tblptrl	equ	0xFF6
 15547                           tablat	equ	0xFF5
 15548                           prodl	equ	0xFF3
 15549                           intcon	equ	0xFF2
 15550                           postinc0	equ	0xFEE
 15551                           wreg	equ	0xFE8
 15552                           indf1	equ	0xFE7
 15553                           postdec1	equ	0xFE5
 15554                           fsr1h	equ	0xFE2
 15555                           fsr1l	equ	0xFE1
 15556                           indf2	equ	0xFDF
 15557                           fsr2h	equ	0xFDA
 15558                           fsr2l	equ	0xFD9
 15559                           status	equ	0xFD8
 15560                           
 15561 ;; *************** function _putUSBUSART *****************
 15562 ;; Defined at:
 15563 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 15564 ;; Parameters:    Size  Location     Type
 15565 ;;  data            2    0[BANK0 ] PTR unsigned char 
 15566 ;;		 -> USB_Buffer(64), 
 15567 ;;  length          1    2[BANK0 ] unsigned char 
 15568 ;; Auto vars:     Size  Location     Type
 15569 ;;		None
 15570 ;; Return value:  Size  Location     Type
 15571 ;;		None               void
 15572 ;; Registers used:
 15573 ;;		wreg, status,2, status,0
 15574 ;; Tracked objects:
 15575 ;;		On entry : F/0
 15576 ;;		On exit  : F/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15579 ;;      Params:         0       3       0       0       0       0       0       0       0
 15580 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15581 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15582 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15583 ;;Total ram usage:        3 bytes
 15584 ;; Hardware stack levels used:    1
 15585 ;; Hardware stack levels required when called:   11
 15586 ;; This function calls:
 15587 ;;		Nothing
 15588 ;; This function is called by:
 15589 ;;		_USBapp_DeviceCdcEmulatorHandler
 15590 ;; This function uses a non-reentrant model
 15591 ;;
 15592                           
 15593                           	psect	text61
 15594  00360A                     __ptext61:
 15595                           	opt stack 0
 15596  00360A                     _putUSBUSART:
 15597                           	opt stack 17
 15598                           
 15599                           ; BSR set to: 0
 15600                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 15601                           
 15602                           ; BSR set to: 0
 15603                           ;incstack = 0
 15604  00360A  94A3               	bcf	4003,2,c	;volatile
 15605                           
 15606                           ; BSR set to: 0
 15607                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 15608  00360C  5020               	movf	_cdc_trf_state,w,c
 15609  00360E  E109               	bnz	l10592
 15610                           
 15611                           ; BSR set to: 0
 15612                           ;usb_device_cdc.c: 530: {
 15613                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 15614  003610  C0C8  F073         	movff	putUSBUSART@data,_pCDCSrc
 15615  003614  C0C9  F074         	movff	putUSBUSART@data+1,_pCDCSrc+1
 15616                           
 15617                           ; BSR set to: 0
 15618  003618  C0CA  F092         	movff	putUSBUSART@length,_cdc_tx_len
 15619                           
 15620                           ; BSR set to: 0
 15621  00361C  0E01               	movlw	1
 15622  00361E  6F90               	movwf	_cdc_mem_type& (0+255),b
 15623                           
 15624                           ; BSR set to: 0
 15625  003620  6E20               	movwf	_cdc_trf_state,c
 15626  003622                     l10592:
 15627                           
 15628                           ; BSR set to: 0
 15629                           ;usb_device_cdc.c: 532: }
 15630                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 15631  003622  84A3               	bsf	4003,2,c	;volatile
 15632                           
 15633                           ; BSR set to: 0
 15634  003624  0012               	return		;funcret
 15635  003626                     __end_of_putUSBUSART:
 15636                           	opt stack 0
 15637                           tblptru	equ	0xFF8
 15638                           tblptrh	equ	0xFF7
 15639                           tblptrl	equ	0xFF6
 15640                           tablat	equ	0xFF5
 15641                           prodl	equ	0xFF3
 15642                           intcon	equ	0xFF2
 15643                           postinc0	equ	0xFEE
 15644                           wreg	equ	0xFE8
 15645                           indf1	equ	0xFE7
 15646                           postdec1	equ	0xFE5
 15647                           fsr1h	equ	0xFE2
 15648                           fsr1l	equ	0xFE1
 15649                           indf2	equ	0xFDF
 15650                           fsr2h	equ	0xFDA
 15651                           fsr2l	equ	0xFD9
 15652                           status	equ	0xFD8
 15653                           
 15654 ;; *************** function _getsUSBUSART *****************
 15655 ;; Defined at:
 15656 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 15657 ;; Parameters:    Size  Location     Type
 15658 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 15659 ;;		 -> USB_Buffer(64), 
 15660 ;;  len             1    9[BANK0 ] unsigned char 
 15661 ;; Auto vars:     Size  Location     Type
 15662 ;;		None
 15663 ;; Return value:  Size  Location     Type
 15664 ;;                  1    wreg      unsigned char 
 15665 ;; Registers used:
 15666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15667 ;; Tracked objects:
 15668 ;;		On entry : F/0
 15669 ;;		On exit  : F/0
 15670 ;;		Unchanged: 0/0
 15671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15672 ;;      Params:         0       3       0       0       0       0       0       0       0
 15673 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15674 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15675 ;;      Totals:         0       6       0       0       0       0       0       0       0
 15676 ;;Total ram usage:        6 bytes
 15677 ;; Hardware stack levels used:    1
 15678 ;; Hardware stack levels required when called:   12
 15679 ;; This function calls:
 15680 ;;		_USBTransferOnePacket
 15681 ;; This function is called by:
 15682 ;;		_USBapp_DeviceCdcEmulatorHandler
 15683 ;; This function uses a non-reentrant model
 15684 ;;
 15685                           
 15686                           	psect	text62
 15687  0046FC                     __ptext62:
 15688                           	opt stack 0
 15689  0046FC                     _getsUSBUSART:
 15690                           	opt stack 16
 15691                           
 15692                           ; BSR set to: 0
 15693                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 15694                           
 15695                           ; BSR set to: 0
 15696                           ;incstack = 0
 15697  0046FC  6B91               	clrf	_cdc_rx_len& (0+255),b
 15698                           
 15699                           ; BSR set to: 0
 15700                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 15701  0046FE  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 15702  004700  1179               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 15703  004702  E009               	bz	l1890
 15704                           
 15705                           ; BSR set to: 0
 15706  004704  C078  FFD9         	movff	_CDCDataOutHandle,fsr2l
 15707  004708  C079  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 15708  00470C  0E01               	movlw	1
 15709  00470E  AEDF               	btfss	indf2,7,c
 15710  004710  0E00               	movlw	0
 15711  004712  6FD3               	movwf	_getsUSBUSART$5738& (0+255),b
 15712  004714  D001               	goto	L52
 15713  004716                     l1890:
 15714                           
 15715                           ; BSR set to: 0
 15716  004716  6BD3               	clrf	_getsUSBUSART$5738& (0+255),b
 15717  004718                     L52:
 15718  004718  6BD4               	clrf	(_getsUSBUSART$5738+1)& (0+255),b
 15719                           
 15720                           ; BSR set to: 0
 15721  00471A  51D3               	movf	_getsUSBUSART$5738& (0+255),w,b
 15722  00471C  11D4               	iorwf	(_getsUSBUSART$5738+1)& (0+255),w,b
 15723  00471E  E134               	bnz	l10572
 15724                           
 15725                           ; BSR set to: 0
 15726                           ;usb_device_cdc.c: 437: {
 15727                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 15728  004720  EE20 F001          	lfsr	2,1
 15729  004724  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 15730  004726  26D9               	addwf	fsr2l,f,c
 15731  004728  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 15732  00472A  22DA               	addwfc	fsr2h,f,c
 15733  00472C  51D1               	movf	getsUSBUSART@len& (0+255),w,b
 15734  00472E  5CDE               	subwf	postinc2,w,c
 15735  004730  E208               	bc	l10562
 15736                           
 15737                           ; BSR set to: 0
 15738                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 15739  004732  EE20 F001          	lfsr	2,1
 15740  004736  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 15741  004738  26D9               	addwf	fsr2l,f,c
 15742  00473A  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 15743  00473C  22DA               	addwfc	fsr2h,f,c
 15744  00473E  50DF               	movf	indf2,w,c
 15745  004740  6FD1               	movwf	getsUSBUSART@len& (0+255),b
 15746  004742                     l10562:
 15747                           
 15748                           ; BSR set to: 0
 15749                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 15750  004742  6B91               	clrf	_cdc_rx_len& (0+255),b
 15751  004744  D00F               	goto	l10568
 15752  004746                     l10564:
 15753                           
 15754                           ; BSR set to: 0
 15755                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 15756  004746  0E40               	movlw	64
 15757  004748  2591               	addwf	_cdc_rx_len& (0+255),w,b
 15758  00474A  6ED9               	movwf	fsr2l,c
 15759  00474C  6ADA               	clrf	fsr2h,c
 15760  00474E  0E05               	movlw	5
 15761  004750  22DA               	addwfc	fsr2h,f,c
 15762  004752  5191               	movf	_cdc_rx_len& (0+255),w,b
 15763  004754  25CF               	addwf	getsUSBUSART@buffer& (0+255),w,b
 15764  004756  6EE1               	movwf	fsr1l,c
 15765  004758  0E00               	movlw	0
 15766  00475A  21D0               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 15767  00475C  6EE2               	movwf	fsr1h,c
 15768  00475E  CFDF FFE7          	movff	indf2,indf1
 15769                           
 15770                           ; BSR set to: 0
 15771  004762  2B91               	incf	_cdc_rx_len& (0+255),f,b
 15772  004764                     l10568:
 15773                           
 15774                           ; BSR set to: 0
 15775  004764  51D1               	movf	getsUSBUSART@len& (0+255),w,b
 15776  004766  5D91               	subwf	_cdc_rx_len& (0+255),w,b
 15777  004768  E3EE               	bnc	l10564
 15778                           
 15779                           ; BSR set to: 0
 15780                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 15781  00476A  0E00               	movlw	0
 15782  00476C  6FC8               	movwf	USBTransferOnePacket@dir& (0+255),b
 15783  00476E  0E40               	movlw	64
 15784  004770  6FC9               	movwf	USBTransferOnePacket@data& (0+255),b
 15785  004772  0E05               	movlw	5
 15786  004774  6FCA               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 15787  004776  0E40               	movlw	64
 15788  004778  6FCB               	movwf	USBTransferOnePacket@len& (0+255),b
 15789  00477A  0E02               	movlw	2
 15790  00477C  ECAE  F024         	call	_USBTransferOnePacket
 15791  004780  C0C8  F078         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 15792  004784  C0C9  F079         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 15793  004788                     l10572:
 15794                           
 15795                           ; BSR set to: 0
 15796                           ;usb_device_cdc.c: 457: }
 15797                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 15798  004788  5191               	movf	_cdc_rx_len& (0+255),w,b
 15799                           
 15800                           ; BSR set to: 0
 15801  00478A  0012               	return		;funcret
 15802  00478C                     __end_of_getsUSBUSART:
 15803                           	opt stack 0
 15804                           tblptru	equ	0xFF8
 15805                           tblptrh	equ	0xFF7
 15806                           tblptrl	equ	0xFF6
 15807                           tablat	equ	0xFF5
 15808                           prodl	equ	0xFF3
 15809                           intcon	equ	0xFF2
 15810                           postinc0	equ	0xFEE
 15811                           wreg	equ	0xFE8
 15812                           indf1	equ	0xFE7
 15813                           postdec1	equ	0xFE5
 15814                           fsr1h	equ	0xFE2
 15815                           fsr1l	equ	0xFE1
 15816                           indf2	equ	0xFDF
 15817                           postinc2	equ	0xFDE
 15818                           fsr2h	equ	0xFDA
 15819                           fsr2l	equ	0xFD9
 15820                           status	equ	0xFD8
 15821                           
 15822 ;; *************** function _USBapp_getrxByteFlag *****************
 15823 ;; Defined at:
 15824 ;;		line 231 in file "../Includes/Board/USBapp.c"
 15825 ;; Parameters:    Size  Location     Type
 15826 ;;		None
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;		None
 15829 ;; Return value:  Size  Location     Type
 15830 ;;                  1    wreg      unsigned char 
 15831 ;; Registers used:
 15832 ;;		wreg, status,2
 15833 ;; Tracked objects:
 15834 ;;		On entry : 0/0
 15835 ;;		On exit  : 0/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15838 ;;      Params:         0       0       0       0       0       0       0       0       0
 15839 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15840 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15841 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15842 ;;Total ram usage:        0 bytes
 15843 ;; Hardware stack levels used:    1
 15844 ;; Hardware stack levels required when called:   11
 15845 ;; This function calls:
 15846 ;;		Nothing
 15847 ;; This function is called by:
 15848 ;;		_USBapp_DeviceCdcEmulatorHandler
 15849 ;; This function uses a non-reentrant model
 15850 ;;
 15851                           
 15852                           	psect	text63
 15853  0034A6                     __ptext63:
 15854                           	opt stack 0
 15855  0034A6                     _USBapp_getrxByteFlag:
 15856                           	opt stack 17
 15857                           
 15858                           ;USBapp.c: 233: return rxByteFlag;
 15859                           
 15860                           ; BSR set to: 0
 15861                           ;incstack = 0
 15862  0034A6  502A               	movf	_rxByteFlag,w,c	;volatile
 15863  0034A8  0012               	return		;funcret
 15864  0034AA                     __end_of_USBapp_getrxByteFlag:
 15865                           	opt stack 0
 15866                           tblptru	equ	0xFF8
 15867                           tblptrh	equ	0xFF7
 15868                           tblptrl	equ	0xFF6
 15869                           tablat	equ	0xFF5
 15870                           prodl	equ	0xFF3
 15871                           intcon	equ	0xFF2
 15872                           postinc0	equ	0xFEE
 15873                           wreg	equ	0xFE8
 15874                           indf1	equ	0xFE7
 15875                           postdec1	equ	0xFE5
 15876                           fsr1h	equ	0xFE2
 15877                           fsr1l	equ	0xFE1
 15878                           indf2	equ	0xFDF
 15879                           postinc2	equ	0xFDE
 15880                           fsr2h	equ	0xFDA
 15881                           fsr2l	equ	0xFD9
 15882                           status	equ	0xFD8
 15883                           
 15884 ;; *************** function _MOTEapp_setResponseReady *****************
 15885 ;; Defined at:
 15886 ;;		line 1220 in file "../Includes/Board/MOTEapp.c"
 15887 ;; Parameters:    Size  Location     Type
 15888 ;;		None
 15889 ;; Auto vars:     Size  Location     Type
 15890 ;;		None
 15891 ;; Return value:  Size  Location     Type
 15892 ;;		None               void
 15893 ;; Registers used:
 15894 ;;		None
 15895 ;; Tracked objects:
 15896 ;;		On entry : F/0
 15897 ;;		On exit  : F/0
 15898 ;;		Unchanged: F/0
 15899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15900 ;;      Params:         0       0       0       0       0       0       0       0       0
 15901 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15902 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15903 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15904 ;;Total ram usage:        0 bytes
 15905 ;; Hardware stack levels used:    1
 15906 ;; Hardware stack levels required when called:   11
 15907 ;; This function calls:
 15908 ;;		Nothing
 15909 ;; This function is called by:
 15910 ;;		_USBapp_DeviceCdcEmulatorHandler
 15911 ;; This function uses a non-reentrant model
 15912 ;;
 15913                           
 15914                           	psect	text64
 15915  001004                     __ptext64:
 15916                           	opt stack 0
 15917  001004                     _MOTEapp_setResponseReady:
 15918                           	opt stack 17
 15919                           
 15920                           ; BSR set to: 0
 15921                           
 15922                           ;incstack = 0
 15923  001004  0012               	return		;funcret
 15924  001006                     __end_of_MOTEapp_setResponseReady:
 15925                           	opt stack 0
 15926                           tblptru	equ	0xFF8
 15927                           tblptrh	equ	0xFF7
 15928                           tblptrl	equ	0xFF6
 15929                           tablat	equ	0xFF5
 15930                           prodl	equ	0xFF3
 15931                           intcon	equ	0xFF2
 15932                           postinc0	equ	0xFEE
 15933                           wreg	equ	0xFE8
 15934                           indf1	equ	0xFE7
 15935                           postdec1	equ	0xFE5
 15936                           fsr1h	equ	0xFE2
 15937                           fsr1l	equ	0xFE1
 15938                           indf2	equ	0xFDF
 15939                           postinc2	equ	0xFDE
 15940                           fsr2h	equ	0xFDA
 15941                           fsr2l	equ	0xFD9
 15942                           status	equ	0xFD8
 15943                           
 15944 ;; *************** function _EUSART_Write *****************
 15945 ;; Defined at:
 15946 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 15947 ;; Parameters:    Size  Location     Type
 15948 ;;  txData          1    wreg     unsigned char 
 15949 ;; Auto vars:     Size  Location     Type
 15950 ;;  txData          1    0[BANK0 ] unsigned char 
 15951 ;; Return value:  Size  Location     Type
 15952 ;;		None               void
 15953 ;; Registers used:
 15954 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15955 ;; Tracked objects:
 15956 ;;		On entry : 0/0
 15957 ;;		On exit  : 0/0
 15958 ;;		Unchanged: 0/0
 15959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15960 ;;      Params:         0       0       0       0       0       0       0       0       0
 15961 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15962 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15963 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15964 ;;Total ram usage:        1 bytes
 15965 ;; Hardware stack levels used:    1
 15966 ;; Hardware stack levels required when called:   11
 15967 ;; This function calls:
 15968 ;;		Nothing
 15969 ;; This function is called by:
 15970 ;;		_EndLine
 15971 ;;		_sendCommand
 15972 ;;		_sendDataCommand
 15973 ;;		_USBapp_DeviceCdcEmulatorHandler
 15974 ;; This function uses a non-reentrant model
 15975 ;;
 15976                           
 15977                           	psect	text65
 15978  003998                     __ptext65:
 15979                           	opt stack 0
 15980  003998                     _EUSART_Write:
 15981                           	opt stack 14
 15982                           
 15983                           ; BSR set to: 0
 15984                           ;incstack = 0
 15985                           ;EUSART_Write@txData stored from wreg
 15986  003998  0100               	movlb	0	; () banked
 15987  00399A  6FC8               	movwf	EUSART_Write@txData& (0+255),b
 15988  00399C                     l9818:
 15989  00399C  5026               	movf	_eusartTxBufferRemaining,w,c	;volatile
 15990  00399E  E0FE               	bz	l9818
 15991                           
 15992                           ;eusart.c: 143: }
 15993                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 15994  0039A0  B89D               	btfsc	3997,4,c	;volatile
 15995  0039A2  D003               	goto	l1058
 15996                           
 15997                           ;eusart.c: 146: {
 15998                           ;eusart.c: 147: TXREG = txData;
 15999  0039A4  C0C8  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 16000                           
 16001                           ;eusart.c: 148: }
 16002  0039A8  D00F               	goto	l9832
 16003  0039AA                     l1058:
 16004                           
 16005                           ;eusart.c: 149: else
 16006                           ;eusart.c: 150: {
 16007                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 16008  0039AA  989D               	bcf	3997,4,c	;volatile
 16009                           
 16010                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 16011  0039AC  0E00               	movlw	low _eusartTxBuffer
 16012  0039AE  2427               	addwf	_eusartTxHead,w,c
 16013  0039B0  6ED9               	movwf	fsr2l,c
 16014  0039B2  6ADA               	clrf	fsr2h,c
 16015  0039B4  0E02               	movlw	high _eusartTxBuffer
 16016  0039B6  22DA               	addwfc	fsr2h,f,c
 16017  0039B8  C0C8  FFDF         	movff	EUSART_Write@txData,indf2
 16018  0039BC  2A27               	incf	_eusartTxHead,f,c
 16019                           
 16020                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 16021  0039BE  0E3F               	movlw	63
 16022  0039C0  6427               	cpfsgt	_eusartTxHead,c
 16023  0039C2  D001               	goto	l9830
 16024                           
 16025                           ;eusart.c: 154: {
 16026                           ;eusart.c: 155: eusartTxHead = 0;
 16027  0039C4  6A27               	clrf	_eusartTxHead,c
 16028  0039C6                     l9830:
 16029                           
 16030                           ;eusart.c: 156: }
 16031                           ;eusart.c: 157: eusartTxBufferRemaining--;
 16032  0039C6  0626               	decf	_eusartTxBufferRemaining,f,c	;volatile
 16033  0039C8                     l9832:
 16034                           
 16035                           ;eusart.c: 158: }
 16036                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 16037  0039C8  889D               	bsf	3997,4,c	;volatile
 16038  0039CA  0012               	return		;funcret
 16039  0039CC                     __end_of_EUSART_Write:
 16040                           	opt stack 0
 16041                           tblptru	equ	0xFF8
 16042                           tblptrh	equ	0xFF7
 16043                           tblptrl	equ	0xFF6
 16044                           tablat	equ	0xFF5
 16045                           prodl	equ	0xFF3
 16046                           intcon	equ	0xFF2
 16047                           postinc0	equ	0xFEE
 16048                           wreg	equ	0xFE8
 16049                           indf1	equ	0xFE7
 16050                           postdec1	equ	0xFE5
 16051                           fsr1h	equ	0xFE2
 16052                           fsr1l	equ	0xFE1
 16053                           indf2	equ	0xFDF
 16054                           postinc2	equ	0xFDE
 16055                           fsr2h	equ	0xFDA
 16056                           fsr2l	equ	0xFD9
 16057                           status	equ	0xFD8
 16058                           
 16059 ;; *************** function _EUSART_Read *****************
 16060 ;; Defined at:
 16061 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;		None
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;  readValue       1    0[BANK0 ] unsigned char 
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  1    wreg      unsigned char 
 16068 ;; Registers used:
 16069 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/0
 16072 ;;		On exit  : F/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16075 ;;      Params:         0       0       0       0       0       0       0       0       0
 16076 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16078 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16079 ;;Total ram usage:        1 bytes
 16080 ;; Hardware stack levels used:    1
 16081 ;; Hardware stack levels required when called:   11
 16082 ;; This function calls:
 16083 ;;		Nothing
 16084 ;; This function is called by:
 16085 ;;		_MOTEapp_getModemResponse
 16086 ;;		_USBapp_DeviceCdcEmulatorHandler
 16087 ;; This function uses a non-reentrant model
 16088 ;;
 16089                           
 16090                           	psect	text66
 16091  00396A                     __ptext66:
 16092                           	opt stack 0
 16093  00396A                     _EUSART_Read:
 16094                           	opt stack 14
 16095                           
 16096                           ;eusart.c: 121: while(0 == eusartRxCount)
 16097                           
 16098                           ;incstack = 0
 16099  00396A  D001               	goto	l9836
 16100  00396C                     l1049:
 16101                           
 16102                           ;eusart.c: 122: {
 16103                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 16104  00396C  8E89               	bsf	3977,7,c	;volatile
 16105  00396E                     l9836:
 16106  00396E  5023               	movf	_eusartRxCount,w,c	;volatile
 16107  003970  E0FD               	bz	l1049
 16108                           
 16109                           ;eusart.c: 124: }
 16110                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 16111  003972  9A9D               	bcf	3997,5,c	;volatile
 16112                           
 16113                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 16114  003974  0E00               	movlw	low _eusartRxBuffer
 16115  003976  2425               	addwf	_eusartRxTail,w,c
 16116  003978  6ED9               	movwf	fsr2l,c
 16117  00397A  6ADA               	clrf	fsr2h,c
 16118  00397C  0E01               	movlw	high _eusartRxBuffer
 16119  00397E  22DA               	addwfc	fsr2h,f,c
 16120  003980  50DF               	movf	indf2,w,c
 16121  003982  0100               	movlb	0	; () banked
 16122  003984  6FC8               	movwf	EUSART_Read@readValue& (0+255),b
 16123                           
 16124                           ; BSR set to: 0
 16125  003986  2A25               	incf	_eusartRxTail,f,c
 16126                           
 16127                           ; BSR set to: 0
 16128                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 16129  003988  0E3F               	movlw	63
 16130  00398A  6425               	cpfsgt	_eusartRxTail,c
 16131  00398C  D001               	goto	l9846
 16132                           
 16133                           ; BSR set to: 0
 16134                           ;eusart.c: 130: {
 16135                           ;eusart.c: 131: eusartRxTail = 0;
 16136  00398E  6A25               	clrf	_eusartRxTail,c
 16137  003990                     l9846:
 16138                           
 16139                           ; BSR set to: 0
 16140                           ;eusart.c: 132: }
 16141                           ;eusart.c: 133: eusartRxCount--;
 16142  003990  0623               	decf	_eusartRxCount,f,c	;volatile
 16143                           
 16144                           ; BSR set to: 0
 16145                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 16146  003992  8A9D               	bsf	3997,5,c	;volatile
 16147                           
 16148                           ; BSR set to: 0
 16149                           ;eusart.c: 136: return readValue;
 16150  003994  51C8               	movf	EUSART_Read@readValue& (0+255),w,b
 16151                           
 16152                           ; BSR set to: 0
 16153  003996  0012               	return		;funcret
 16154  003998                     __end_of_EUSART_Read:
 16155                           	opt stack 0
 16156                           tblptru	equ	0xFF8
 16157                           tblptrh	equ	0xFF7
 16158                           tblptrl	equ	0xFF6
 16159                           tablat	equ	0xFF5
 16160                           prodl	equ	0xFF3
 16161                           intcon	equ	0xFF2
 16162                           postinc0	equ	0xFEE
 16163                           wreg	equ	0xFE8
 16164                           indf1	equ	0xFE7
 16165                           postdec1	equ	0xFE5
 16166                           fsr1h	equ	0xFE2
 16167                           fsr1l	equ	0xFE1
 16168                           indf2	equ	0xFDF
 16169                           postinc2	equ	0xFDE
 16170                           fsr2h	equ	0xFDA
 16171                           fsr2l	equ	0xFD9
 16172                           status	equ	0xFD8
 16173                           
 16174 ;; *************** function _CDCTxService *****************
 16175 ;; Defined at:
 16176 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 16177 ;; Parameters:    Size  Location     Type
 16178 ;;		None
 16179 ;; Auto vars:     Size  Location     Type
 16180 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
 16181 ;;  i               1    9[BANK0 ] unsigned char 
 16182 ;; Return value:  Size  Location     Type
 16183 ;;		None               void
 16184 ;; Registers used:
 16185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16186 ;; Tracked objects:
 16187 ;;		On entry : 0/0
 16188 ;;		On exit  : F/0
 16189 ;;		Unchanged: 0/0
 16190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16191 ;;      Params:         0       0       0       0       0       0       0       0       0
 16192 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16193 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16194 ;;      Totals:         0       4       0       0       0       0       0       0       0
 16195 ;;Total ram usage:        4 bytes
 16196 ;; Hardware stack levels used:    1
 16197 ;; Hardware stack levels required when called:   12
 16198 ;; This function calls:
 16199 ;;		_USBTransferOnePacket
 16200 ;; This function is called by:
 16201 ;;		_USBapp_DeviceCdcEmulatorHandler
 16202 ;; This function uses a non-reentrant model
 16203 ;;
 16204                           
 16205                           	psect	text67
 16206  0057B6                     __ptext67:
 16207                           	opt stack 0
 16208  0057B6                     _CDCTxService:
 16209                           	opt stack 16
 16210                           
 16211                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 16212                           ;usb_device_cdc.c: 786: uint8_t i;
 16213                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 16214                           
 16215                           ; BSR set to: 0
 16216                           ;incstack = 0
 16217  0057B6  94A3               	bcf	4003,2,c	;volatile
 16218                           
 16219                           ;usb_device_cdc.c: 790: {};
 16220                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 16221  0057B8  0100               	movlb	0	; () banked
 16222  0057BA  5176               	movf	_CDCDataInHandle& (0+255),w,b
 16223  0057BC  1177               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 16224  0057BE  E009               	bz	l1920
 16225                           
 16226                           ; BSR set to: 0
 16227  0057C0  C076  FFD9         	movff	_CDCDataInHandle,fsr2l
 16228  0057C4  C077  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 16229  0057C8  0E01               	movlw	1
 16230  0057CA  AEDF               	btfss	indf2,7,c
 16231  0057CC  0E00               	movlw	0
 16232  0057CE  6FCF               	movwf	_CDCTxService$5786& (0+255),b
 16233  0057D0  D001               	goto	L53
 16234  0057D2                     l1920:
 16235                           
 16236                           ; BSR set to: 0
 16237  0057D2  6BCF               	clrf	_CDCTxService$5786& (0+255),b
 16238  0057D4                     L53:
 16239  0057D4  6BD0               	clrf	(_CDCTxService$5786+1)& (0+255),b
 16240                           
 16241                           ; BSR set to: 0
 16242  0057D6  51CF               	movf	_CDCTxService$5786& (0+255),w,b
 16243  0057D8  11D0               	iorwf	(_CDCTxService$5786+1)& (0+255),w,b
 16244  0057DA  E002               	bz	l10604
 16245                           
 16246                           ; BSR set to: 0
 16247                           ;usb_device_cdc.c: 793: {
 16248                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 16249  0057DC  84A3               	bsf	4003,2,c	;volatile
 16250                           
 16251                           ;usb_device_cdc.c: 795: return;
 16252  0057DE  0012               	return	
 16253  0057E0                     l10604:
 16254                           
 16255                           ; BSR set to: 0
 16256                           ;usb_device_cdc.c: 796: }
 16257                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 16258  0057E0  0E03               	movlw	3
 16259  0057E2  1820               	xorwf	_cdc_trf_state,w,c
 16260  0057E4  E101               	bnz	l10608
 16261                           
 16262                           ; BSR set to: 0
 16263                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 16264  0057E6  6A20               	clrf	_cdc_trf_state,c
 16265  0057E8                     l10608:
 16266                           
 16267                           ; BSR set to: 0
 16268                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 16269  0057E8  5020               	movf	_cdc_trf_state,w,c
 16270  0057EA  E102               	bnz	l10612
 16271                           
 16272                           ; BSR set to: 0
 16273                           ;usb_device_cdc.c: 810: {
 16274                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 16275  0057EC  84A3               	bsf	4003,2,c	;volatile
 16276                           
 16277                           ;usb_device_cdc.c: 812: return;
 16278  0057EE  0012               	return	
 16279  0057F0                     l10612:
 16280                           
 16281                           ; BSR set to: 0
 16282                           ;usb_device_cdc.c: 813: }
 16283                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 16284  0057F0  0E02               	movlw	2
 16285  0057F2  1820               	xorwf	_cdc_trf_state,w,c
 16286  0057F4  E110               	bnz	l10618
 16287                           
 16288                           ; BSR set to: 0
 16289                           ;usb_device_cdc.c: 819: {
 16290                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 16291  0057F6  0E01               	movlw	1
 16292  0057F8  6FC8               	movwf	USBTransferOnePacket@dir& (0+255),b
 16293  0057FA  0E00               	movlw	0
 16294  0057FC  6FC9               	movwf	USBTransferOnePacket@data& (0+255),b
 16295  0057FE  6FCA               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 16296  005800  6FCB               	movwf	USBTransferOnePacket@len& (0+255),b
 16297  005802  0E02               	movlw	2
 16298  005804  ECAE  F024         	call	_USBTransferOnePacket
 16299  005808  C0C8  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 16300  00580C  C0C9  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 16301                           
 16302                           ; BSR set to: 0
 16303                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 16304  005810  0E03               	movlw	3
 16305  005812  6E20               	movwf	_cdc_trf_state,c
 16306                           
 16307                           ;usb_device_cdc.c: 823: }
 16308  005814  D04E               	goto	l10662
 16309  005816                     l10618:
 16310                           
 16311                           ; BSR set to: 0
 16312                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 16313  005816  0420               	decf	_cdc_trf_state,w,c
 16314  005818  E14C               	bnz	l10662
 16315                           
 16316                           ; BSR set to: 0
 16317                           ;usb_device_cdc.c: 825: {
 16318                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 16319  00581A  0E40               	movlw	64
 16320  00581C  6592               	cpfsgt	_cdc_tx_len& (0+255),b
 16321  00581E  D002               	goto	l1929
 16322                           
 16323                           ; BSR set to: 0
 16324                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 16325  005820  6FD2               	movwf	CDCTxService@byte_to_send& (0+255),b
 16326  005822  D002               	goto	l10624
 16327  005824                     l1929:
 16328                           
 16329                           ; BSR set to: 0
 16330                           ;usb_device_cdc.c: 831: else
 16331                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 16332  005824  C092  F0D2         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 16333  005828                     l10624:
 16334                           
 16335                           ; BSR set to: 0
 16336                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 16337  005828  51D2               	movf	CDCTxService@byte_to_send& (0+255),w,b
 16338  00582A  5F92               	subwf	_cdc_tx_len& (0+255),f,b
 16339                           
 16340                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 16341  00582C  0E00               	movlw	0
 16342  00582E  6F70               	movwf	_pCDCDst& (0+255),b
 16343  005830  0E05               	movlw	5
 16344  005832  6F71               	movwf	(_pCDCDst+1)& (0+255),b
 16345                           
 16346                           ; BSR set to: 0
 16347                           ;usb_device_cdc.c: 841: i = byte_to_send;
 16348  005834  C0D2  F0D1         	movff	CDCTxService@byte_to_send,CDCTxService@i
 16349                           
 16350                           ; BSR set to: 0
 16351                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 16352  005838  5190               	movf	_cdc_mem_type& (0+255),w,b
 16353  00583A  E010               	bz	l10640
 16354  00583C  D021               	goto	l10650
 16355  00583E                     l10632:
 16356                           
 16357                           ; BSR set to: 0
 16358                           ;usb_device_cdc.c: 845: {
 16359                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 16360  00583E  C073  FFD9         	movff	_pCDCSrc,fsr2l
 16361  005842  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 16362  005846  C070  FFE1         	movff	_pCDCDst,fsr1l
 16363  00584A  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 16364  00584E  CFDF FFE7          	movff	indf2,indf1
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 16368  005852  4B70               	infsnz	_pCDCDst& (0+255),f,b
 16369  005854  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 16370                           
 16371                           ; BSR set to: 0
 16372                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 16373  005856  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 16374  005858  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 16375                           
 16376                           ; BSR set to: 0
 16377                           ;usb_device_cdc.c: 849: i--;
 16378  00585A  07D1               	decf	CDCTxService@i& (0+255),f,b
 16379  00585C                     l10640:
 16380                           
 16381                           ; BSR set to: 0
 16382  00585C  51D1               	movf	CDCTxService@i& (0+255),w,b
 16383  00585E  E012               	bz	l10652
 16384  005860  D7EE               	goto	l10632
 16385  005862                     l10642:
 16386                           
 16387                           ; BSR set to: 0
 16388                           ;usb_device_cdc.c: 855: {
 16389                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 16390  005862  C073  FFD9         	movff	_pCDCSrc,fsr2l
 16391  005866  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 16392  00586A  C070  FFE1         	movff	_pCDCDst,fsr1l
 16393  00586E  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 16394  005872  CFDF FFE7          	movff	indf2,indf1
 16395                           
 16396                           ; BSR set to: 0
 16397                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 16398  005876  4B70               	infsnz	_pCDCDst& (0+255),f,b
 16399  005878  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 16400                           
 16401                           ; BSR set to: 0
 16402                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 16403  00587A  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 16404  00587C  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 16405                           
 16406                           ; BSR set to: 0
 16407                           ;usb_device_cdc.c: 859: i--;
 16408  00587E  07D1               	decf	CDCTxService@i& (0+255),f,b
 16409  005880                     l10650:
 16410                           
 16411                           ; BSR set to: 0
 16412  005880  51D1               	movf	CDCTxService@i& (0+255),w,b
 16413  005882  E1EF               	bnz	l10642
 16414  005884                     l10652:
 16415                           
 16416                           ; BSR set to: 0
 16417                           ;usb_device_cdc.c: 860: }
 16418                           ;usb_device_cdc.c: 861: }
 16419                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 16420  005884  5192               	movf	_cdc_tx_len& (0+255),w,b
 16421  005886  E106               	bnz	l10660
 16422                           
 16423                           ; BSR set to: 0
 16424                           ;usb_device_cdc.c: 868: {
 16425                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 16426  005888  0E40               	movlw	64
 16427  00588A  19D2               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 16428                           
 16429                           ; BSR set to: 0
 16430                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 16431  00588C  0E02               	movlw	2
 16432  00588E  A4D8               	btfss	status,2,c
 16433                           
 16434                           ; BSR set to: 0
 16435                           ;usb_device_cdc.c: 871: else
 16436                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 16437  005890  0E03               	movlw	3
 16438  005892  6E20               	movwf	_cdc_trf_state,c
 16439  005894                     l10660:
 16440                           
 16441                           ; BSR set to: 0
 16442                           ;usb_device_cdc.c: 873: }
 16443                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 16444  005894  0E01               	movlw	1
 16445  005896  6FC8               	movwf	USBTransferOnePacket@dir& (0+255),b
 16446  005898  0E00               	movlw	0
 16447  00589A  6FC9               	movwf	USBTransferOnePacket@data& (0+255),b
 16448  00589C  0E05               	movlw	5
 16449  00589E  6FCA               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 16450  0058A0  C0D2  F0CB         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 16451  0058A4  0E02               	movlw	2
 16452  0058A6  ECAE  F024         	call	_USBTransferOnePacket
 16453  0058AA  C0C8  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 16454  0058AE  C0C9  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 16455  0058B2                     l10662:
 16456                           
 16457                           ; BSR set to: 0
 16458                           ;usb_device_cdc.c: 876: }
 16459                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 16460  0058B2  84A3               	bsf	4003,2,c	;volatile
 16461                           
 16462                           ; BSR set to: 0
 16463  0058B4  0012               	return		;funcret
 16464  0058B6                     __end_of_CDCTxService:
 16465                           	opt stack 0
 16466                           tblptru	equ	0xFF8
 16467                           tblptrh	equ	0xFF7
 16468                           tblptrl	equ	0xFF6
 16469                           tablat	equ	0xFF5
 16470                           prodl	equ	0xFF3
 16471                           intcon	equ	0xFF2
 16472                           postinc0	equ	0xFEE
 16473                           wreg	equ	0xFE8
 16474                           indf1	equ	0xFE7
 16475                           postdec1	equ	0xFE5
 16476                           fsr1h	equ	0xFE2
 16477                           fsr1l	equ	0xFE1
 16478                           indf2	equ	0xFDF
 16479                           postinc2	equ	0xFDE
 16480                           fsr2h	equ	0xFDA
 16481                           fsr2l	equ	0xFD9
 16482                           status	equ	0xFD8
 16483                           
 16484 ;; *************** function _USBTransferOnePacket *****************
 16485 ;; Defined at:
 16486 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 16487 ;; Parameters:    Size  Location     Type
 16488 ;;  ep              1    wreg     unsigned char 
 16489 ;;  dir             1    0[BANK0 ] unsigned char 
 16490 ;;  data            2    1[BANK0 ] PTR unsigned char 
 16491 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 16492 ;;  len             1    3[BANK0 ] unsigned char 
 16493 ;; Auto vars:     Size  Location     Type
 16494 ;;  ep              1    4[BANK0 ] unsigned char 
 16495 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 16496 ;;		 -> BDT(48), NULL(0), 
 16497 ;; Return value:  Size  Location     Type
 16498 ;;                  2    0[BANK0 ] PTR void 
 16499 ;; Registers used:
 16500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16501 ;; Tracked objects:
 16502 ;;		On entry : F/0
 16503 ;;		On exit  : F/0
 16504 ;;		Unchanged: 0/0
 16505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16506 ;;      Params:         0       4       0       0       0       0       0       0       0
 16507 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16508 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16509 ;;      Totals:         0       7       0       0       0       0       0       0       0
 16510 ;;Total ram usage:        7 bytes
 16511 ;; Hardware stack levels used:    1
 16512 ;; Hardware stack levels required when called:   11
 16513 ;; This function calls:
 16514 ;;		Nothing
 16515 ;; This function is called by:
 16516 ;;		_getsUSBUSART
 16517 ;;		_CDCTxService
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521                           	psect	text68
 16522  00495C                     __ptext68:
 16523                           	opt stack 0
 16524  00495C                     _USBTransferOnePacket:
 16525                           	opt stack 16
 16526                           
 16527                           ; BSR set to: 0
 16528                           ;incstack = 0
 16529                           ;USBTransferOnePacket@ep stored from wreg
 16530  00495C  6FCC               	movwf	USBTransferOnePacket@ep& (0+255),b
 16531                           
 16532                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 16533                           ;usb_device.c: 762: if(dir != 0)
 16534  00495E  0100               	movlb	0	; () banked
 16535  004960  51C8               	movf	USBTransferOnePacket@dir& (0+255),w,b
 16536  004962  E005               	bz	l10102
 16537                           
 16538                           ; BSR set to: 0
 16539                           ;usb_device.c: 763: {
 16540                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 16541  004964  51CC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16542  004966  0D02               	mullw	2
 16543  004968  50F3               	movf	prodl,w,c
 16544  00496A  0F0F               	addlw	low _pBDTEntryIn
 16545  00496C  D004               	goto	L55
 16546  00496E                     l10102:
 16547                           
 16548                           ; BSR set to: 0
 16549                           ;usb_device.c: 767: else
 16550                           ;usb_device.c: 768: {
 16551                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 16552  00496E  51CC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16553  004970  0D02               	mullw	2
 16554  004972  50F3               	movf	prodl,w,c
 16555  004974  0F60               	addlw	low _pBDTEntryOut
 16556  004976                     L55:
 16557  004976  6ED9               	movwf	fsr2l,c
 16558  004978  6ADA               	clrf	fsr2h,c
 16559  00497A  CFDE F0CD          	movff	postinc2,USBTransferOnePacket@handle
 16560  00497E  CFDD F0CE          	movff	postdec2,USBTransferOnePacket@handle+1
 16561                           
 16562                           ; BSR set to: 0
 16563                           ;usb_device.c: 771: }
 16564                           ;usb_device.c: 775: if(handle == 0)
 16565  004982  51CD               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16566  004984  11CE               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16567  004986  E103               	bnz	l10108
 16568                           
 16569                           ; BSR set to: 0
 16570                           ;usb_device.c: 776: {
 16571                           ;usb_device.c: 777: return 0;
 16572  004988  6BC8               	clrf	?_USBTransferOnePacket& (0+255),b
 16573  00498A  6BC9               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
 16574  00498C  0012               	return	
 16575  00498E                     l10108:
 16576                           
 16577                           ; BSR set to: 0
 16578                           ;usb_device.c: 778: }
 16579                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 16580  00498E  EE20 F002          	lfsr	2,2
 16581  004992  51CD               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16582  004994  26D9               	addwf	fsr2l,f,c
 16583  004996  51CE               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16584  004998  22DA               	addwfc	fsr2h,f,c
 16585  00499A  C0C9  FFDE         	movff	USBTransferOnePacket@data,postinc2
 16586  00499E  C0CA  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 16587                           
 16588                           ;usb_device.c: 781: handle->CNT = len;
 16589  0049A2  EE20 F001          	lfsr	2,1
 16590  0049A6  51CD               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16591  0049A8  26D9               	addwf	fsr2l,f,c
 16592  0049AA  51CE               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16593  0049AC  22DA               	addwfc	fsr2h,f,c
 16594  0049AE  C0CB  FFDF         	movff	USBTransferOnePacket@len,indf2
 16595                           
 16596                           ; BSR set to: 0
 16597                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 16598  0049B2  C0CD  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16599  0049B6  C0CE  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16600  0049BA  0E40               	movlw	64
 16601  0049BC  16DF               	andwf	indf2,f,c
 16602                           
 16603                           ; BSR set to: 0
 16604                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 16605  0049BE  C0CD  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16606  0049C2  C0CE  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16607  0049C6  0E00               	movlw	0
 16608  0049C8  86DB               	bsf	plusw2,3,c
 16609                           
 16610                           ; BSR set to: 0
 16611                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 16612  0049CA  C0CD  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16613  0049CE  C0CE  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16614  0049D2  8EDB               	bsf	plusw2,7,c
 16615                           
 16616                           ; BSR set to: 0
 16617                           ;usb_device.c: 787: if(dir != 0)
 16618  0049D4  51C8               	movf	USBTransferOnePacket@dir& (0+255),w,b
 16619  0049D6  E005               	bz	l10120
 16620                           
 16621                           ; BSR set to: 0
 16622                           ;usb_device.c: 788: {
 16623                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 16624  0049D8  51CC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16625  0049DA  0D02               	mullw	2
 16626  0049DC  50F3               	movf	prodl,w,c
 16627  0049DE  0F0F               	addlw	low _pBDTEntryIn
 16628  0049E0  D004               	goto	L56
 16629  0049E2                     l10120:
 16630                           
 16631                           ; BSR set to: 0
 16632                           ;usb_device.c: 792: else
 16633                           ;usb_device.c: 793: {
 16634                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 16635  0049E2  51CC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16636  0049E4  0D02               	mullw	2
 16637  0049E6  50F3               	movf	prodl,w,c
 16638  0049E8  0F60               	addlw	low _pBDTEntryOut
 16639  0049EA                     L56:
 16640  0049EA  6ED9               	movwf	fsr2l,c
 16641  0049EC  6ADA               	clrf	fsr2h,c
 16642  0049EE  0E04               	movlw	4
 16643  0049F0  1ADF               	xorwf	indf2,f,c
 16644                           
 16645                           ; BSR set to: 0
 16646                           ;usb_device.c: 796: }
 16647                           ;usb_device.c: 797: return (void*)handle;
 16648  0049F2  C0CD  F0C8         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 16649  0049F6  C0CE  F0C9         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 16650                           
 16651                           ; BSR set to: 0
 16652  0049FA  0C04               	retlw	4	;funcret
 16653  0049FC                     __end_of_USBTransferOnePacket:
 16654                           	opt stack 0
 16655                           tblptru	equ	0xFF8
 16656                           tblptrh	equ	0xFF7
 16657                           tblptrl	equ	0xFF6
 16658                           tablat	equ	0xFF5
 16659                           prodl	equ	0xFF3
 16660                           intcon	equ	0xFF2
 16661                           postinc0	equ	0xFEE
 16662                           wreg	equ	0xFE8
 16663                           indf1	equ	0xFE7
 16664                           postdec1	equ	0xFE5
 16665                           fsr1h	equ	0xFE2
 16666                           fsr1l	equ	0xFE1
 16667                           indf2	equ	0xFDF
 16668                           postinc2	equ	0xFDE
 16669                           postdec2	equ	0xFDD
 16670                           plusw2	equ	0xFDB
 16671                           fsr2h	equ	0xFDA
 16672                           fsr2l	equ	0xFD9
 16673                           status	equ	0xFD8
 16674                           
 16675 ;; *************** function _USBDeviceInit *****************
 16676 ;; Defined at:
 16677 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 16678 ;; Parameters:    Size  Location     Type
 16679 ;;		None
 16680 ;; Auto vars:     Size  Location     Type
 16681 ;;  i               1    8[BANK0 ] unsigned char 
 16682 ;; Return value:  Size  Location     Type
 16683 ;;		None               void
 16684 ;; Registers used:
 16685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16686 ;; Tracked objects:
 16687 ;;		On entry : F/0
 16688 ;;		On exit  : F/0
 16689 ;;		Unchanged: 0/0
 16690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16691 ;;      Params:         0       0       0       0       0       0       0       0       0
 16692 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16693 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16694 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16695 ;;Total ram usage:        1 bytes
 16696 ;; Hardware stack levels used:    1
 16697 ;; Hardware stack levels required when called:   12
 16698 ;; This function calls:
 16699 ;;		_memset
 16700 ;; This function is called by:
 16701 ;;		_main
 16702 ;; This function uses a non-reentrant model
 16703 ;;
 16704                           
 16705                           	psect	text69
 16706  00508E                     __ptext69:
 16707                           	opt stack 0
 16708  00508E                     _USBDeviceInit:
 16709                           	opt stack 18
 16710                           
 16711                           ; BSR set to: 0
 16712                           ;usb_device.c: 239: uint8_t i;
 16713                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 16714                           
 16715                           ; BSR set to: 0
 16716                           ;incstack = 0
 16717  00508E  94A3               	bcf	4003,2,c	;volatile
 16718                           
 16719                           ;usb_device.c: 244: {UEIR = 0;};
 16720  005090  6A67               	clrf	3943,c	;volatile
 16721                           
 16722                           ;usb_device.c: 247: {UIR = 0;};
 16723  005092  6A65               	clrf	3941,c	;volatile
 16724                           
 16725                           ;usb_device.c: 250: UEP0 = 0;
 16726  005094  6A6A               	clrf	3946,c	;volatile
 16727                           
 16728                           ; BSR set to: 0
 16729                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 16730  005096  0E6B               	movlw	107
 16731  005098  6FC8               	movwf	memset@p1& (0+255),b
 16732  00509A  0E0F               	movlw	15
 16733  00509C  6FC9               	movwf	(memset@p1+1)& (0+255),b
 16734  00509E  6BCB               	clrf	(memset@c+1)& (0+255),b
 16735  0050A0  6BCA               	clrf	memset@c& (0+255),b
 16736  0050A2  6BCD               	clrf	(memset@n+1)& (0+255),b
 16737  0050A4  0E02               	movlw	2
 16738  0050A6  6FCC               	movwf	memset@n& (0+255),b
 16739  0050A8  EC1D  F01C         	call	_memset	;wreg free
 16740                           
 16741                           ; BSR set to: 0
 16742                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16743  0050AC  0E16               	movlw	22
 16744  0050AE  6E62               	movwf	3938,c	;volatile
 16745                           
 16746                           ; BSR set to: 0
 16747  0050B0  0E9F               	movlw	159
 16748  0050B2  6E66               	movwf	3942,c	;volatile
 16749                           
 16750                           ; BSR set to: 0
 16751  0050B4  0E7B               	movlw	123
 16752  0050B6  6E64               	movwf	3940,c	;volatile
 16753                           
 16754                           ; BSR set to: 0
 16755                           ;usb_device.c: 257: ;
 16756                           ;usb_device.c: 260: ;
 16757                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16758  0050B8  6BD0               	clrf	USBDeviceInit@i& (0+255),b
 16759  0050BA                     l12010:
 16760                           
 16761                           ; BSR set to: 0
 16762                           ;usb_device.c: 264: {
 16763                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 16764  0050BA  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16765  0050BC  0D04               	mullw	4
 16766  0050BE  0E00               	movlw	0
 16767  0050C0  24F3               	addwf	prodl,w,c
 16768  0050C2  6ED9               	movwf	fsr2l,c
 16769  0050C4  0E04               	movlw	4
 16770  0050C6  20F4               	addwfc	prodh,w,c
 16771  0050C8  6EDA               	movwf	fsr2h,c
 16772  0050CA  6ADE               	clrf	postinc2,c
 16773  0050CC  6ADE               	clrf	postinc2,c
 16774  0050CE  6ADE               	clrf	postinc2,c
 16775  0050D0  6ADD               	clrf	postdec2,c
 16776                           
 16777                           ; BSR set to: 0
 16778  0050D2  2BD0               	incf	USBDeviceInit@i& (0+255),f,b
 16779                           
 16780                           ; BSR set to: 0
 16781  0050D4  0E0B               	movlw	11
 16782  0050D6  65D0               	cpfsgt	USBDeviceInit@i& (0+255),b
 16783  0050D8  D7F0               	goto	l12010
 16784                           
 16785                           ; BSR set to: 0
 16786                           ;usb_device.c: 266: }
 16787                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 16788  0050DA  8C60               	bsf	3936,6,c	;volatile
 16789                           
 16790                           ;usb_device.c: 272: UADDR = 0x00;
 16791  0050DC  6A63               	clrf	3939,c	;volatile
 16792                           
 16793                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 16794  0050DE  9860               	bcf	3936,4,c	;volatile
 16795                           
 16796                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 16797  0050E0  9C60               	bcf	3936,6,c	;volatile
 16798                           
 16799                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 16800  0050E2  D005               	goto	l12024
 16801  0050E4                     l12016:
 16802                           
 16803                           ; BSR set to: 0
 16804                           ;usb_device.c: 282: {
 16805                           ;usb_device.c: 283: (UIR &= 0xF7);
 16806  0050E4  9665               	bcf	3941,3,c	;volatile
 16807                           
 16808                           ; BSR set to: 0
 16809                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 16810  0050E6  6A0C               	clrf	_inPipes+3,c	;volatile
 16811                           
 16812                           ; BSR set to: 0
 16813                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 16814  0050E8  6A04               	clrf	_outPipes+3,c	;volatile
 16815                           
 16816                           ; BSR set to: 0
 16817                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 16818  0050EA  6A05               	clrf	_outPipes+4,c	;volatile
 16819  0050EC  6A06               	clrf	_outPipes+5,c	;volatile
 16820  0050EE                     l12024:
 16821                           
 16822                           ; BSR set to: 0
 16823  0050EE  B665               	btfsc	3941,3,c	;volatile
 16824  0050F0  D7F9               	goto	l12016
 16825                           
 16826                           ; BSR set to: 0
 16827                           ;usb_device.c: 288: }
 16828                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 16829  0050F2  0E01               	movlw	1
 16830  0050F4  6F8B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16831                           
 16832                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 16833  0050F6  6F8C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16834                           
 16835                           ; BSR set to: 0
 16836                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 16837  0050F8  6B88               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16838                           
 16839                           ; BSR set to: 0
 16840                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 16841  0050FA  6B89               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16842                           
 16843                           ; BSR set to: 0
 16844                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 16845  0050FC  6B87               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 16846                           
 16847                           ; BSR set to: 0
 16848                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 16849  0050FE  6BD0               	clrf	USBDeviceInit@i& (0+255),b
 16850  005100                     l12040:
 16851                           
 16852                           ; BSR set to: 0
 16853                           ;usb_device.c: 302: {
 16854                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 16855  005100  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16856  005102  0D02               	mullw	2
 16857  005104  50F3               	movf	prodl,w,c
 16858  005106  0F0F               	addlw	low _pBDTEntryIn
 16859  005108  6ED9               	movwf	fsr2l,c
 16860  00510A  6ADA               	clrf	fsr2h,c
 16861  00510C  6ADE               	clrf	postinc2,c
 16862  00510E  6ADD               	clrf	postdec2,c
 16863                           
 16864                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 16865  005110  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16866  005112  0D02               	mullw	2
 16867  005114  50F3               	movf	prodl,w,c
 16868  005116  0F60               	addlw	low _pBDTEntryOut
 16869  005118  6ED9               	movwf	fsr2l,c
 16870  00511A  6ADA               	clrf	fsr2h,c
 16871  00511C  6ADE               	clrf	postinc2,c
 16872  00511E  6ADD               	clrf	postdec2,c
 16873                           
 16874                           ; BSR set to: 0
 16875                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 16876  005120  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16877  005122  0F6A               	addlw	low _ep_data_in
 16878  005124  6ED9               	movwf	fsr2l,c
 16879  005126  6ADA               	clrf	fsr2h,c
 16880  005128  6ADF               	clrf	indf2,c
 16881                           
 16882                           ; BSR set to: 0
 16883                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 16884  00512A  51D0               	movf	USBDeviceInit@i& (0+255),w,b
 16885  00512C  0F6D               	addlw	low _ep_data_out
 16886  00512E  6ED9               	movwf	fsr2l,c
 16887  005130  6ADA               	clrf	fsr2h,c
 16888  005132  6ADF               	clrf	indf2,c
 16889                           
 16890                           ; BSR set to: 0
 16891  005134  2BD0               	incf	USBDeviceInit@i& (0+255),f,b
 16892                           
 16893                           ; BSR set to: 0
 16894  005136  0E02               	movlw	2
 16895  005138  65D0               	cpfsgt	USBDeviceInit@i& (0+255),b
 16896  00513A  D7E2               	goto	l12040
 16897                           
 16898                           ; BSR set to: 0
 16899                           ;usb_device.c: 307: }
 16900                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16901  00513C  0E08               	movlw	8
 16902  00513E  6E0F               	movwf	_pBDTEntryIn,c
 16903  005140  0E04               	movlw	4
 16904  005142  6E10               	movwf	_pBDTEntryIn+1,c
 16905                           
 16906                           ; BSR set to: 0
 16907                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 16908  005144  0E16               	movlw	22
 16909  005146  6E6A               	movwf	3946,c	;volatile
 16910                           
 16911                           ; BSR set to: 0
 16912                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16913  005148  0E04               	movlw	4
 16914  00514A  0104               	movlb	4	; () banked
 16915  00514C  6F03               	movwf	3,b	;volatile
 16916  00514E  0E30               	movlw	48
 16917  005150  6F02               	movwf	2,b	;volatile
 16918                           
 16919                           ; BSR set to: 4
 16920                           ;usb_device.c: 315: BDT[0].CNT = 8;
 16921  005152  0E08               	movlw	8
 16922  005154  6F01               	movwf	1,b	;volatile
 16923                           
 16924                           ; BSR set to: 4
 16925                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 16926  005156  0E04               	movlw	4
 16927  005158  6F00               	movwf	0,b	;volatile
 16928                           
 16929                           ; BSR set to: 4
 16930                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 16931  00515A  8F00               	bsf	0,7,b	;volatile
 16932                           
 16933                           ; BSR set to: 4
 16934                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 16935  00515C  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 16936                           
 16937                           ; BSR set to: 4
 16938                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 16939  00515E  0100               	movlb	0	; () banked
 16940  005160  6B8A               	clrf	_USBDeviceState& (0+255),b	;volatile
 16941                           
 16942                           ; BSR set to: 0
 16943  005162  0012               	return		;funcret
 16944  005164                     __end_of_USBDeviceInit:
 16945                           	opt stack 0
 16946                           tblptru	equ	0xFF8
 16947                           tblptrh	equ	0xFF7
 16948                           tblptrl	equ	0xFF6
 16949                           tablat	equ	0xFF5
 16950                           prodh	equ	0xFF4
 16951                           prodl	equ	0xFF3
 16952                           intcon	equ	0xFF2
 16953                           postinc0	equ	0xFEE
 16954                           wreg	equ	0xFE8
 16955                           indf1	equ	0xFE7
 16956                           postdec1	equ	0xFE5
 16957                           fsr1h	equ	0xFE2
 16958                           fsr1l	equ	0xFE1
 16959                           indf2	equ	0xFDF
 16960                           postinc2	equ	0xFDE
 16961                           postdec2	equ	0xFDD
 16962                           plusw2	equ	0xFDB
 16963                           fsr2h	equ	0xFDA
 16964                           fsr2l	equ	0xFD9
 16965                           status	equ	0xFD8
 16966                           
 16967 ;; *************** function _memset *****************
 16968 ;; Defined at:
 16969 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16970 ;; Parameters:    Size  Location     Type
 16971 ;;  p1              2    0[BANK0 ] PTR void 
 16972 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16973 ;;  c               2    2[BANK0 ] int 
 16974 ;;  n               2    4[BANK0 ] unsigned int 
 16975 ;; Auto vars:     Size  Location     Type
 16976 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16977 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16978 ;; Return value:  Size  Location     Type
 16979 ;;                  2    0[BANK0 ] PTR void 
 16980 ;; Registers used:
 16981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16982 ;; Tracked objects:
 16983 ;;		On entry : F/0
 16984 ;;		On exit  : F/0
 16985 ;;		Unchanged: 0/0
 16986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16987 ;;      Params:         0       6       0       0       0       0       0       0       0
 16988 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16989 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16990 ;;      Totals:         0       8       0       0       0       0       0       0       0
 16991 ;;Total ram usage:        8 bytes
 16992 ;; Hardware stack levels used:    1
 16993 ;; Hardware stack levels required when called:   11
 16994 ;; This function calls:
 16995 ;;		Nothing
 16996 ;; This function is called by:
 16997 ;;		_USBDeviceInit
 16998 ;; This function uses a non-reentrant model
 16999 ;;
 17000                           
 17001                           	psect	text70
 17002  00383A                     __ptext70:
 17003                           	opt stack 0
 17004  00383A                     _memset:
 17005                           	opt stack 18
 17006                           
 17007                           ; BSR set to: 0
 17008                           
 17009                           ; BSR set to: 0
 17010                           ;incstack = 0
 17011  00383A  C0C8  F0CE         	movff	memset@p1,memset@p
 17012  00383E  C0C9  F0CF         	movff	memset@p1+1,memset@p+1
 17013  003842  D008               	goto	l11976
 17014  003844                     l11972:
 17015                           
 17016                           ; BSR set to: 0
 17017  003844  C0CE  FFD9         	movff	memset@p,fsr2l
 17018  003848  C0CF  FFDA         	movff	memset@p+1,fsr2h
 17019  00384C  C0CA  FFDF         	movff	memset@c,indf2
 17020                           
 17021                           ; BSR set to: 0
 17022  003850  4BCE               	infsnz	memset@p& (0+255),f,b
 17023  003852  2BCF               	incf	(memset@p+1)& (0+255),f,b
 17024  003854                     l11976:
 17025                           
 17026                           ; BSR set to: 0
 17027  003854  07CC               	decf	memset@n& (0+255),f,b
 17028  003856  A0D8               	btfss	status,0,c
 17029  003858  07CD               	decf	(memset@n+1)& (0+255),f,b
 17030  00385A  29CC               	incf	memset@n& (0+255),w,b
 17031  00385C  E1F3               	bnz	l11972
 17032  00385E  29CD               	incf	(memset@n+1)& (0+255),w,b
 17033  003860  E1F1               	bnz	l11972
 17034                           
 17035                           ; BSR set to: 0
 17036  003862  0012               	return		;funcret
 17037  003864                     __end_of_memset:
 17038                           	opt stack 0
 17039                           tblptru	equ	0xFF8
 17040                           tblptrh	equ	0xFF7
 17041                           tblptrl	equ	0xFF6
 17042                           tablat	equ	0xFF5
 17043                           prodh	equ	0xFF4
 17044                           prodl	equ	0xFF3
 17045                           intcon	equ	0xFF2
 17046                           postinc0	equ	0xFEE
 17047                           wreg	equ	0xFE8
 17048                           indf1	equ	0xFE7
 17049                           postdec1	equ	0xFE5
 17050                           fsr1h	equ	0xFE2
 17051                           fsr1l	equ	0xFE1
 17052                           indf2	equ	0xFDF
 17053                           postinc2	equ	0xFDE
 17054                           postdec2	equ	0xFDD
 17055                           plusw2	equ	0xFDB
 17056                           fsr2h	equ	0xFDA
 17057                           fsr2l	equ	0xFD9
 17058                           status	equ	0xFD8
 17059                           
 17060 ;; *************** function _USBDeviceAttach *****************
 17061 ;; Defined at:
 17062 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 17063 ;; Parameters:    Size  Location     Type
 17064 ;;		None
 17065 ;; Auto vars:     Size  Location     Type
 17066 ;;		None
 17067 ;; Return value:  Size  Location     Type
 17068 ;;		None               void
 17069 ;; Registers used:
 17070 ;;		wreg, status,2
 17071 ;; Tracked objects:
 17072 ;;		On entry : F/0
 17073 ;;		On exit  : F/0
 17074 ;;		Unchanged: 0/0
 17075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17076 ;;      Params:         0       0       0       0       0       0       0       0       0
 17077 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17078 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17079 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17080 ;;Total ram usage:        0 bytes
 17081 ;; Hardware stack levels used:    1
 17082 ;; Hardware stack levels required when called:   11
 17083 ;; This function calls:
 17084 ;;		Nothing
 17085 ;; This function is called by:
 17086 ;;		_main
 17087 ;; This function uses a non-reentrant model
 17088 ;;
 17089                           
 17090                           	psect	text71
 17091  003912                     __ptext71:
 17092                           	opt stack 0
 17093  003912                     _USBDeviceAttach:
 17094                           	opt stack 19
 17095                           
 17096                           ; BSR set to: 0
 17097                           ;usb_device.c: 1050: {
 17098                           ;usb_device.c: 1051: if(1 == 1)
 17099                           
 17100                           ; BSR set to: 0
 17101                           ;incstack = 0
 17102  003912  518A               	movf	_USBDeviceState& (0+255),w,b	;volatile
 17103  003914  A4D8               	btfss	status,2,c
 17104  003916  0012               	return	
 17105                           
 17106                           ; BSR set to: 0
 17107                           ;usb_device.c: 1052: {
 17108                           ;usb_device.c: 1054: UCON = 0;
 17109  003918  6A60               	clrf	3936,c	;volatile
 17110                           
 17111                           ;usb_device.c: 1057: UIE = 0;
 17112  00391A  6A64               	clrf	3940,c	;volatile
 17113                           
 17114                           ; BSR set to: 0
 17115                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 17116  00391C  0E16               	movlw	22
 17117  00391E  6E62               	movwf	3938,c	;volatile
 17118  003920  0E9F               	movlw	159
 17119  003922  6E66               	movwf	3942,c	;volatile
 17120  003924  0E7B               	movlw	123
 17121  003926  6E64               	movwf	3940,c	;volatile
 17122                           
 17123                           ; BSR set to: 0
 17124                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 17125  003928  8ED0               	bsf	4048,7,c	;volatile
 17126                           
 17127                           ; BSR set to: 0
 17128  00392A  84A5               	bsf	4005,2,c	;volatile
 17129                           
 17130                           ; BSR set to: 0
 17131  00392C  84A3               	bsf	4003,2,c	;volatile
 17132                           
 17133                           ; BSR set to: 0
 17134  00392E  8EF2               	bsf	intcon,7,c	;volatile
 17135                           
 17136                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 17137  003930  D001               	goto	l1625
 17138  003932                     l1626:
 17139                           
 17140                           ; BSR set to: 0
 17141  003932  8660               	bsf	3936,3,c	;volatile
 17142  003934                     l1625:
 17143                           
 17144                           ; BSR set to: 0
 17145  003934  A660               	btfss	3936,3,c	;volatile
 17146  003936  D7FD               	goto	l1626
 17147                           
 17148                           ; BSR set to: 0
 17149                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 17150  003938  0E01               	movlw	1
 17151  00393A  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 17152                           
 17153                           ; BSR set to: 0
 17154  00393C  0C01               	retlw	1	;funcret
 17155  00393E                     __end_of_USBDeviceAttach:
 17156                           	opt stack 0
 17157                           tblptru	equ	0xFF8
 17158                           tblptrh	equ	0xFF7
 17159                           tblptrl	equ	0xFF6
 17160                           tablat	equ	0xFF5
 17161                           prodh	equ	0xFF4
 17162                           prodl	equ	0xFF3
 17163                           intcon	equ	0xFF2
 17164                           postinc0	equ	0xFEE
 17165                           wreg	equ	0xFE8
 17166                           indf1	equ	0xFE7
 17167                           postdec1	equ	0xFE5
 17168                           fsr1h	equ	0xFE2
 17169                           fsr1l	equ	0xFE1
 17170                           indf2	equ	0xFDF
 17171                           postinc2	equ	0xFDE
 17172                           postdec2	equ	0xFDD
 17173                           plusw2	equ	0xFDB
 17174                           fsr2h	equ	0xFDA
 17175                           fsr2l	equ	0xFD9
 17176                           status	equ	0xFD8
 17177                           
 17178 ;; *************** function _SYSTEM_Initialize *****************
 17179 ;; Defined at:
 17180 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 17181 ;; Parameters:    Size  Location     Type
 17182 ;;		None
 17183 ;; Auto vars:     Size  Location     Type
 17184 ;;		None
 17185 ;; Return value:  Size  Location     Type
 17186 ;;		None               void
 17187 ;; Registers used:
 17188 ;;		wreg, status,2, status,0, cstack
 17189 ;; Tracked objects:
 17190 ;;		On entry : 0/0
 17191 ;;		On exit  : 0/0
 17192 ;;		Unchanged: 0/0
 17193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17194 ;;      Params:         0       0       0       0       0       0       0       0       0
 17195 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17196 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17197 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17198 ;;Total ram usage:        0 bytes
 17199 ;; Hardware stack levels used:    1
 17200 ;; Hardware stack levels required when called:   13
 17201 ;; This function calls:
 17202 ;;		_ADC_Initialize
 17203 ;;		_CMP1_Initialize
 17204 ;;		_EUSART_Initialize
 17205 ;;		_OSCILLATOR_Initialize
 17206 ;;		_PIN_MANAGER_Initialize
 17207 ;;		_SPI_Initialize
 17208 ;;		_TMR1_Initialize
 17209 ;;		_TMR2_Initialize
 17210 ;; This function is called by:
 17211 ;;		_main
 17212 ;; This function uses a non-reentrant model
 17213 ;;
 17214                           
 17215                           	psect	text72
 17216  00369C                     __ptext72:
 17217                           	opt stack 0
 17218  00369C                     _SYSTEM_Initialize:
 17219                           	opt stack 17
 17220                           
 17221                           ;mcc.c: 95: OSCILLATOR_Initialize();
 17222                           
 17223                           ; BSR set to: 0
 17224                           ;incstack = 0
 17225  00369C  ECEE  F01A         	call	_OSCILLATOR_Initialize	;wreg free
 17226                           
 17227                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 17228  0036A0  ECEE  F01D         	call	_PIN_MANAGER_Initialize	;wreg free
 17229                           
 17230                           ; BSR set to: 15
 17231                           ;mcc.c: 97: SPI_Initialize();
 17232  0036A4  EC8C  F01A         	call	_SPI_Initialize	;wreg free
 17233                           
 17234                           ; BSR set to: 15
 17235                           ;mcc.c: 98: TMR1_Initialize();
 17236  0036A8  EC73  F01C         	call	_TMR1_Initialize	;wreg free
 17237                           
 17238                           ; BSR set to: 0
 17239                           ;mcc.c: 99: TMR2_Initialize();
 17240  0036AC  EC9A  F01A         	call	_TMR2_Initialize	;wreg free
 17241                           
 17242                           ; BSR set to: 0
 17243                           ;mcc.c: 100: EUSART_Initialize();
 17244  0036B0  EC5D  F01C         	call	_EUSART_Initialize	;wreg free
 17245                           
 17246                           ;mcc.c: 101: ADC_Initialize();
 17247  0036B4  ECE3  F01A         	call	_ADC_Initialize	;wreg free
 17248                           
 17249                           ;mcc.c: 102: CMP1_Initialize();
 17250  0036B8  EFAA  F01A         	goto	_CMP1_Initialize	;wreg free
 17251  0036BC                     __end_of_SYSTEM_Initialize:
 17252                           	opt stack 0
 17253                           tblptru	equ	0xFF8
 17254                           tblptrh	equ	0xFF7
 17255                           tblptrl	equ	0xFF6
 17256                           tablat	equ	0xFF5
 17257                           prodh	equ	0xFF4
 17258                           prodl	equ	0xFF3
 17259                           intcon	equ	0xFF2
 17260                           postinc0	equ	0xFEE
 17261                           wreg	equ	0xFE8
 17262                           indf1	equ	0xFE7
 17263                           postdec1	equ	0xFE5
 17264                           fsr1h	equ	0xFE2
 17265                           fsr1l	equ	0xFE1
 17266                           indf2	equ	0xFDF
 17267                           postinc2	equ	0xFDE
 17268                           postdec2	equ	0xFDD
 17269                           plusw2	equ	0xFDB
 17270                           fsr2h	equ	0xFDA
 17271                           fsr2l	equ	0xFD9
 17272                           status	equ	0xFD8
 17273                           
 17274 ;; *************** function _TMR2_Initialize *****************
 17275 ;; Defined at:
 17276 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 17277 ;; Parameters:    Size  Location     Type
 17278 ;;		None
 17279 ;; Auto vars:     Size  Location     Type
 17280 ;;		None
 17281 ;; Return value:  Size  Location     Type
 17282 ;;		None               void
 17283 ;; Registers used:
 17284 ;;		wreg, status,2, cstack
 17285 ;; Tracked objects:
 17286 ;;		On entry : F/0
 17287 ;;		On exit  : F/0
 17288 ;;		Unchanged: F/0
 17289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17290 ;;      Params:         0       0       0       0       0       0       0       0       0
 17291 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17292 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17293 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17294 ;;Total ram usage:        0 bytes
 17295 ;; Hardware stack levels used:    1
 17296 ;; Hardware stack levels required when called:   12
 17297 ;; This function calls:
 17298 ;;		_TMR2_StartTimer
 17299 ;; This function is called by:
 17300 ;;		_SYSTEM_Initialize
 17301 ;; This function uses a non-reentrant model
 17302 ;;
 17303                           
 17304                           	psect	text73
 17305  003534                     __ptext73:
 17306                           	opt stack 0
 17307  003534                     _TMR2_Initialize:
 17308                           	opt stack 17
 17309                           
 17310                           ; BSR set to: 0
 17311                           ;tmr2.c: 62: T2CON = 0x7A;
 17312                           
 17313                           ;incstack = 0
 17314  003534  0E7A               	movlw	122
 17315  003536  6EBA               	movwf	4026,c	;volatile
 17316                           
 17317                           ;tmr2.c: 65: PR2 = 0x9B;
 17318  003538  0E9B               	movlw	155
 17319  00353A  6EBB               	movwf	4027,c	;volatile
 17320                           
 17321                           ; BSR set to: 0
 17322                           ;tmr2.c: 68: TMR2 = 0x00;
 17323  00353C  6ABC               	clrf	4028,c	;volatile
 17324                           
 17325                           ; BSR set to: 0
 17326                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 17327  00353E  929E               	bcf	3998,1,c	;volatile
 17328                           
 17329                           ; BSR set to: 0
 17330                           ;tmr2.c: 74: TMR2_StartTimer();
 17331  003540  EF51  F01A         	goto	_TMR2_StartTimer	;wreg free
 17332  003544                     __end_of_TMR2_Initialize:
 17333                           	opt stack 0
 17334                           tblptru	equ	0xFF8
 17335                           tblptrh	equ	0xFF7
 17336                           tblptrl	equ	0xFF6
 17337                           tablat	equ	0xFF5
 17338                           prodh	equ	0xFF4
 17339                           prodl	equ	0xFF3
 17340                           intcon	equ	0xFF2
 17341                           postinc0	equ	0xFEE
 17342                           wreg	equ	0xFE8
 17343                           indf1	equ	0xFE7
 17344                           postdec1	equ	0xFE5
 17345                           fsr1h	equ	0xFE2
 17346                           fsr1l	equ	0xFE1
 17347                           indf2	equ	0xFDF
 17348                           postinc2	equ	0xFDE
 17349                           postdec2	equ	0xFDD
 17350                           plusw2	equ	0xFDB
 17351                           fsr2h	equ	0xFDA
 17352                           fsr2l	equ	0xFD9
 17353                           status	equ	0xFD8
 17354                           
 17355 ;; *************** function _TMR2_StartTimer *****************
 17356 ;; Defined at:
 17357 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 17358 ;; Parameters:    Size  Location     Type
 17359 ;;		None
 17360 ;; Auto vars:     Size  Location     Type
 17361 ;;		None
 17362 ;; Return value:  Size  Location     Type
 17363 ;;		None               void
 17364 ;; Registers used:
 17365 ;;		None
 17366 ;; Tracked objects:
 17367 ;;		On entry : F/0
 17368 ;;		On exit  : F/0
 17369 ;;		Unchanged: F/0
 17370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17371 ;;      Params:         0       0       0       0       0       0       0       0       0
 17372 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17373 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17374 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17375 ;;Total ram usage:        0 bytes
 17376 ;; Hardware stack levels used:    1
 17377 ;; Hardware stack levels required when called:   11
 17378 ;; This function calls:
 17379 ;;		Nothing
 17380 ;; This function is called by:
 17381 ;;		_TMR2_Initialize
 17382 ;; This function uses a non-reentrant model
 17383 ;;
 17384                           
 17385                           	psect	text74
 17386  0034A2                     __ptext74:
 17387                           	opt stack 0
 17388  0034A2                     _TMR2_StartTimer:
 17389                           	opt stack 17
 17390                           
 17391                           ; BSR set to: 0
 17392                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 17393                           
 17394                           ; BSR set to: 0
 17395                           ;incstack = 0
 17396  0034A2  84BA               	bsf	4026,2,c	;volatile
 17397                           
 17398                           ; BSR set to: 0
 17399  0034A4  0012               	return		;funcret
 17400  0034A6                     __end_of_TMR2_StartTimer:
 17401                           	opt stack 0
 17402                           tblptru	equ	0xFF8
 17403                           tblptrh	equ	0xFF7
 17404                           tblptrl	equ	0xFF6
 17405                           tablat	equ	0xFF5
 17406                           prodh	equ	0xFF4
 17407                           prodl	equ	0xFF3
 17408                           intcon	equ	0xFF2
 17409                           postinc0	equ	0xFEE
 17410                           wreg	equ	0xFE8
 17411                           indf1	equ	0xFE7
 17412                           postdec1	equ	0xFE5
 17413                           fsr1h	equ	0xFE2
 17414                           fsr1l	equ	0xFE1
 17415                           indf2	equ	0xFDF
 17416                           postinc2	equ	0xFDE
 17417                           postdec2	equ	0xFDD
 17418                           plusw2	equ	0xFDB
 17419                           fsr2h	equ	0xFDA
 17420                           fsr2l	equ	0xFD9
 17421                           status	equ	0xFD8
 17422                           
 17423 ;; *************** function _TMR1_Initialize *****************
 17424 ;; Defined at:
 17425 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 17426 ;; Parameters:    Size  Location     Type
 17427 ;;		None
 17428 ;; Auto vars:     Size  Location     Type
 17429 ;;		None
 17430 ;; Return value:  Size  Location     Type
 17431 ;;		None               void
 17432 ;; Registers used:
 17433 ;;		wreg, status,2, status,0, cstack
 17434 ;; Tracked objects:
 17435 ;;		On entry : F/F
 17436 ;;		On exit  : F/0
 17437 ;;		Unchanged: 0/0
 17438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17439 ;;      Params:         0       0       0       0       0       0       0       0       0
 17440 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17441 ;;      Temps:          0       2       0       0       0       0       0       0       0
 17442 ;;      Totals:         0       2       0       0       0       0       0       0       0
 17443 ;;Total ram usage:        2 bytes
 17444 ;; Hardware stack levels used:    1
 17445 ;; Hardware stack levels required when called:   12
 17446 ;; This function calls:
 17447 ;;		_TMR1_StartTimer
 17448 ;; This function is called by:
 17449 ;;		_SYSTEM_Initialize
 17450 ;; This function uses a non-reentrant model
 17451 ;;
 17452                           
 17453                           	psect	text75
 17454  0038E6                     __ptext75:
 17455                           	opt stack 0
 17456  0038E6                     _TMR1_Initialize:
 17457                           	opt stack 17
 17458                           
 17459                           ; BSR set to: 15
 17460                           ;tmr1.c: 68: T1CON = 0x00;
 17461                           
 17462                           ; BSR set to: 0
 17463                           ;incstack = 0
 17464  0038E6  6ACD               	clrf	4045,c	;volatile
 17465                           
 17466                           ;tmr1.c: 71: T1GCON = 0x00;
 17467  0038E8  6ACC               	clrf	4044,c	;volatile
 17468                           
 17469                           ; BSR set to: 15
 17470                           ;tmr1.c: 74: TMR1H = 0xD0;
 17471  0038EA  0ED0               	movlw	208
 17472  0038EC  6ECF               	movwf	4047,c	;volatile
 17473                           
 17474                           ;tmr1.c: 77: TMR1L = 0x20;
 17475  0038EE  0E20               	movlw	32
 17476  0038F0  6ECE               	movwf	4046,c	;volatile
 17477                           
 17478                           ; BSR set to: 15
 17479                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 17480  0038F2  50CE               	movf	4046,w,c	;volatile
 17481  0038F4  CFCF F0C8          	movff	4047,??_TMR1_Initialize	;volatile
 17482  0038F8  0100               	movlb	0	; () banked
 17483  0038FA  6BC9               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 17484  0038FC  C0C8  F0C9         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17485  003900  6BC8               	clrf	??_TMR1_Initialize& (0+255),b
 17486  003902  11C8               	iorwf	??_TMR1_Initialize& (0+255),w,b
 17487  003904  6F80               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17488  003906  51C9               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 17489  003908  6F81               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17490                           
 17491                           ; BSR set to: 0
 17492                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 17493  00390A  909E               	bcf	3998,0,c	;volatile
 17494                           
 17495                           ; BSR set to: 0
 17496                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 17497  00390C  809D               	bsf	3997,0,c	;volatile
 17498                           
 17499                           ; BSR set to: 0
 17500                           ;tmr1.c: 89: TMR1_StartTimer();
 17501  00390E  EF4F  F01A         	goto	_TMR1_StartTimer	;wreg free
 17502  003912                     __end_of_TMR1_Initialize:
 17503                           	opt stack 0
 17504                           tblptru	equ	0xFF8
 17505                           tblptrh	equ	0xFF7
 17506                           tblptrl	equ	0xFF6
 17507                           tablat	equ	0xFF5
 17508                           prodh	equ	0xFF4
 17509                           prodl	equ	0xFF3
 17510                           intcon	equ	0xFF2
 17511                           postinc0	equ	0xFEE
 17512                           wreg	equ	0xFE8
 17513                           indf1	equ	0xFE7
 17514                           postdec1	equ	0xFE5
 17515                           fsr1h	equ	0xFE2
 17516                           fsr1l	equ	0xFE1
 17517                           indf2	equ	0xFDF
 17518                           postinc2	equ	0xFDE
 17519                           postdec2	equ	0xFDD
 17520                           plusw2	equ	0xFDB
 17521                           fsr2h	equ	0xFDA
 17522                           fsr2l	equ	0xFD9
 17523                           status	equ	0xFD8
 17524                           
 17525 ;; *************** function _TMR1_StartTimer *****************
 17526 ;; Defined at:
 17527 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 17528 ;; Parameters:    Size  Location     Type
 17529 ;;		None
 17530 ;; Auto vars:     Size  Location     Type
 17531 ;;		None
 17532 ;; Return value:  Size  Location     Type
 17533 ;;		None               void
 17534 ;; Registers used:
 17535 ;;		None
 17536 ;; Tracked objects:
 17537 ;;		On entry : F/0
 17538 ;;		On exit  : F/0
 17539 ;;		Unchanged: F/0
 17540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17541 ;;      Params:         0       0       0       0       0       0       0       0       0
 17542 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17543 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17544 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17545 ;;Total ram usage:        0 bytes
 17546 ;; Hardware stack levels used:    1
 17547 ;; Hardware stack levels required when called:   11
 17548 ;; This function calls:
 17549 ;;		Nothing
 17550 ;; This function is called by:
 17551 ;;		_TMR1_Initialize
 17552 ;; This function uses a non-reentrant model
 17553 ;;
 17554                           
 17555                           	psect	text76
 17556  00349E                     __ptext76:
 17557                           	opt stack 0
 17558  00349E                     _TMR1_StartTimer:
 17559                           	opt stack 17
 17560                           
 17561                           ; BSR set to: 0
 17562                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 17563                           
 17564                           ; BSR set to: 0
 17565                           ;incstack = 0
 17566  00349E  80CD               	bsf	4045,0,c	;volatile
 17567                           
 17568                           ; BSR set to: 0
 17569  0034A0  0012               	return		;funcret
 17570  0034A2                     __end_of_TMR1_StartTimer:
 17571                           	opt stack 0
 17572                           tblptru	equ	0xFF8
 17573                           tblptrh	equ	0xFF7
 17574                           tblptrl	equ	0xFF6
 17575                           tablat	equ	0xFF5
 17576                           prodh	equ	0xFF4
 17577                           prodl	equ	0xFF3
 17578                           intcon	equ	0xFF2
 17579                           postinc0	equ	0xFEE
 17580                           wreg	equ	0xFE8
 17581                           indf1	equ	0xFE7
 17582                           postdec1	equ	0xFE5
 17583                           fsr1h	equ	0xFE2
 17584                           fsr1l	equ	0xFE1
 17585                           indf2	equ	0xFDF
 17586                           postinc2	equ	0xFDE
 17587                           postdec2	equ	0xFDD
 17588                           plusw2	equ	0xFDB
 17589                           fsr2h	equ	0xFDA
 17590                           fsr2l	equ	0xFD9
 17591                           status	equ	0xFD8
 17592                           
 17593 ;; *************** function _SPI_Initialize *****************
 17594 ;; Defined at:
 17595 ;;		line 64 in file "../Includes/MccGenerated/spi.c"
 17596 ;; Parameters:    Size  Location     Type
 17597 ;;		None
 17598 ;; Auto vars:     Size  Location     Type
 17599 ;;		None
 17600 ;; Return value:  Size  Location     Type
 17601 ;;		None               void
 17602 ;; Registers used:
 17603 ;;		wreg, status,2
 17604 ;; Tracked objects:
 17605 ;;		On entry : F/F
 17606 ;;		On exit  : F/F
 17607 ;;		Unchanged: E/0
 17608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17609 ;;      Params:         0       0       0       0       0       0       0       0       0
 17610 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17611 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17612 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17613 ;;Total ram usage:        0 bytes
 17614 ;; Hardware stack levels used:    1
 17615 ;; Hardware stack levels required when called:   11
 17616 ;; This function calls:
 17617 ;;		Nothing
 17618 ;; This function is called by:
 17619 ;;		_SYSTEM_Initialize
 17620 ;; This function uses a non-reentrant model
 17621 ;;
 17622                           
 17623                           	psect	text77
 17624  003518                     __ptext77:
 17625                           	opt stack 0
 17626  003518                     _SPI_Initialize:
 17627                           	opt stack 18
 17628                           
 17629                           ; BSR set to: 15
 17630                           ;spi.c: 69: SSP1STAT = 0x00;
 17631                           
 17632                           ; BSR set to: 0
 17633                           ;incstack = 0
 17634  003518  6AC7               	clrf	4039,c	;volatile
 17635                           
 17636                           ; BSR set to: 15
 17637                           ;spi.c: 72: SSP1CON1 = 0x21;
 17638  00351A  0E21               	movlw	33
 17639  00351C  6EC6               	movwf	4038,c	;volatile
 17640                           
 17641                           ; BSR set to: 15
 17642                           ;spi.c: 75: SSP1ADD = 0x00;
 17643  00351E  6AC8               	clrf	4040,c	;volatile
 17644                           
 17645                           ; BSR set to: 15
 17646                           ;spi.c: 77: CKP = 1;
 17647  003520  88C6               	bsf	4038,4,c	;volatile
 17648                           
 17649                           ; BSR set to: 15
 17650                           ;spi.c: 78: CKE = 0;
 17651  003522  9CC7               	bcf	4039,6,c	;volatile
 17652                           
 17653                           ; BSR set to: 15
 17654  003524  0012               	return		;funcret
 17655  003526                     __end_of_SPI_Initialize:
 17656                           	opt stack 0
 17657                           tblptru	equ	0xFF8
 17658                           tblptrh	equ	0xFF7
 17659                           tblptrl	equ	0xFF6
 17660                           tablat	equ	0xFF5
 17661                           prodh	equ	0xFF4
 17662                           prodl	equ	0xFF3
 17663                           intcon	equ	0xFF2
 17664                           postinc0	equ	0xFEE
 17665                           wreg	equ	0xFE8
 17666                           indf1	equ	0xFE7
 17667                           postdec1	equ	0xFE5
 17668                           fsr1h	equ	0xFE2
 17669                           fsr1l	equ	0xFE1
 17670                           indf2	equ	0xFDF
 17671                           postinc2	equ	0xFDE
 17672                           postdec2	equ	0xFDD
 17673                           plusw2	equ	0xFDB
 17674                           fsr2h	equ	0xFDA
 17675                           fsr2l	equ	0xFD9
 17676                           status	equ	0xFD8
 17677                           
 17678 ;; *************** function _PIN_MANAGER_Initialize *****************
 17679 ;; Defined at:
 17680 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;		None
 17683 ;; Auto vars:     Size  Location     Type
 17684 ;;		None
 17685 ;; Return value:  Size  Location     Type
 17686 ;;		None               void
 17687 ;; Registers used:
 17688 ;;		None
 17689 ;; Tracked objects:
 17690 ;;		On entry : 0/0
 17691 ;;		On exit  : F/F
 17692 ;;		Unchanged: 0/0
 17693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17694 ;;      Params:         0       0       0       0       0       0       0       0       0
 17695 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17696 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17697 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17698 ;;Total ram usage:        0 bytes
 17699 ;; Hardware stack levels used:    1
 17700 ;; Hardware stack levels required when called:   11
 17701 ;; This function calls:
 17702 ;;		Nothing
 17703 ;; This function is called by:
 17704 ;;		_moteApp_GoToSleep
 17705 ;;		_SYSTEM_Initialize
 17706 ;; This function uses a non-reentrant model
 17707 ;;
 17708                           
 17709                           	psect	text78
 17710  003BDC                     __ptext78:
 17711                           	opt stack 0
 17712  003BDC                     _PIN_MANAGER_Initialize:
 17713                           	opt stack 16
 17714                           
 17715                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 17716                           
 17717                           ; BSR set to: 15
 17718                           ;incstack = 0
 17719  003BDC  8092               	bsf	3986,0,c	;volatile
 17720                           
 17721                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 17722  003BDE  8292               	bsf	3986,1,c	;volatile
 17723                           
 17724                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 17725  003BE0  8492               	bsf	3986,2,c	;volatile
 17726                           
 17727                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 17728  003BE2  8692               	bsf	3986,3,c	;volatile
 17729                           
 17730                           ;pin_manager.c: 59: TRISAbits.TRISA4 = 0;
 17731  003BE4  9892               	bcf	3986,4,c	;volatile
 17732                           
 17733                           ;pin_manager.c: 60: TRISAbits.TRISA5 = 0;
 17734  003BE6  9A92               	bcf	3986,5,c	;volatile
 17735                           
 17736                           ;pin_manager.c: 61: TRISAbits.TRISA6 = 0;
 17737  003BE8  9C92               	bcf	3986,6,c	;volatile
 17738                           
 17739                           ;pin_manager.c: 62: TRISAbits.TRISA7 = 0;
 17740  003BEA  9E92               	bcf	3986,7,c	;volatile
 17741                           
 17742                           ;pin_manager.c: 64: TRISBbits.TRISB0 = 0;
 17743  003BEC  9093               	bcf	3987,0,c	;volatile
 17744                           
 17745                           ;pin_manager.c: 65: TRISBbits.TRISB1 = 0;
 17746  003BEE  9293               	bcf	3987,1,c	;volatile
 17747                           
 17748                           ;pin_manager.c: 66: TRISBbits.TRISB2 = 0;
 17749  003BF0  9493               	bcf	3987,2,c	;volatile
 17750                           
 17751                           ;pin_manager.c: 67: TRISBbits.TRISB3 = 0;
 17752  003BF2  9693               	bcf	3987,3,c	;volatile
 17753                           
 17754                           ;pin_manager.c: 68: TRISBbits.TRISB5 = 0;
 17755  003BF4  9A93               	bcf	3987,5,c	;volatile
 17756                           
 17757                           ;pin_manager.c: 70: TRISCbits.TRISC0 = 1;
 17758  003BF6  8094               	bsf	3988,0,c	;volatile
 17759                           
 17760                           ;pin_manager.c: 71: TRISCbits.TRISC1 = 1;
 17761  003BF8  8294               	bsf	3988,1,c	;volatile
 17762                           
 17763                           ;pin_manager.c: 72: TRISCbits.TRISC2 = 1;
 17764  003BFA  8494               	bsf	3988,2,c	;volatile
 17765                           
 17766                           ;pin_manager.c: 73: TRISCbits.TRISC6 = 0;
 17767  003BFC  9C94               	bcf	3988,6,c	;volatile
 17768                           
 17769                           ;pin_manager.c: 74: TRISCbits.TRISC7 = 1;
 17770  003BFE  8E94               	bsf	3988,7,c	;volatile
 17771                           
 17772                           ;pin_manager.c: 77: LATAbits.LATA4 = 1;
 17773  003C00  8889               	bsf	3977,4,c	;volatile
 17774                           
 17775                           ;pin_manager.c: 78: LATAbits.LATA5 = 0;
 17776  003C02  9A89               	bcf	3977,5,c	;volatile
 17777                           
 17778                           ;pin_manager.c: 79: LATAbits.LATA6 = 0;
 17779  003C04  9C89               	bcf	3977,6,c	;volatile
 17780                           
 17781                           ;pin_manager.c: 80: LATAbits.LATA7 = 0;
 17782  003C06  9E89               	bcf	3977,7,c	;volatile
 17783                           
 17784                           ;pin_manager.c: 82: LATBbits.LATB2 = 0;
 17785  003C08  948A               	bcf	3978,2,c	;volatile
 17786                           
 17787                           ;pin_manager.c: 83: LATBbits.LATB0 = 0;
 17788  003C0A  908A               	bcf	3978,0,c	;volatile
 17789                           
 17790                           ;pin_manager.c: 84: LATBbits.LATB5 = 0;
 17791  003C0C  9A8A               	bcf	3978,5,c	;volatile
 17792                           
 17793                           ;pin_manager.c: 86: LATCbits.LATC2 = 0;
 17794  003C0E  948B               	bcf	3979,2,c	;volatile
 17795                           
 17796                           ;pin_manager.c: 87: LATCbits.LATC6 = 0;
 17797  003C10  9C8B               	bcf	3979,6,c	;volatile
 17798                           
 17799                           ;pin_manager.c: 89: ANSELAbits.ANSA0 = 0;
 17800  003C12  010F               	movlb	15	; () banked
 17801  003C14  915B               	bcf	91,0,b	;volatile
 17802                           
 17803                           ;pin_manager.c: 90: ANSELAbits.ANSA1 = 1;
 17804  003C16  835B               	bsf	91,1,b	;volatile
 17805                           
 17806                           ;pin_manager.c: 91: ANSELAbits.ANSA2 = 1;
 17807  003C18  855B               	bsf	91,2,b	;volatile
 17808                           
 17809                           ;pin_manager.c: 92: ANSELAbits.ANSA3 = 1;
 17810  003C1A  875B               	bsf	91,3,b	;volatile
 17811                           
 17812                           ;pin_manager.c: 93: ANSELCbits.ANSC7 = 0;
 17813  003C1C  9F5D               	bcf	93,7,b	;volatile
 17814                           
 17815                           ;pin_manager.c: 94: ANSELCbits.ANSC6 = 0;
 17816  003C1E  9D5D               	bcf	93,6,b	;volatile
 17817                           
 17818                           ; BSR set to: 15
 17819  003C20  0012               	return		;funcret
 17820  003C22                     __end_of_PIN_MANAGER_Initialize:
 17821                           	opt stack 0
 17822                           tblptru	equ	0xFF8
 17823                           tblptrh	equ	0xFF7
 17824                           tblptrl	equ	0xFF6
 17825                           tablat	equ	0xFF5
 17826                           prodh	equ	0xFF4
 17827                           prodl	equ	0xFF3
 17828                           intcon	equ	0xFF2
 17829                           postinc0	equ	0xFEE
 17830                           wreg	equ	0xFE8
 17831                           indf1	equ	0xFE7
 17832                           postdec1	equ	0xFE5
 17833                           fsr1h	equ	0xFE2
 17834                           fsr1l	equ	0xFE1
 17835                           indf2	equ	0xFDF
 17836                           postinc2	equ	0xFDE
 17837                           postdec2	equ	0xFDD
 17838                           plusw2	equ	0xFDB
 17839                           fsr2h	equ	0xFDA
 17840                           fsr2l	equ	0xFD9
 17841                           status	equ	0xFD8
 17842                           
 17843 ;; *************** function _OSCILLATOR_Initialize *****************
 17844 ;; Defined at:
 17845 ;;		line 105 in file "../Includes/MccGenerated/mcc.c"
 17846 ;; Parameters:    Size  Location     Type
 17847 ;;		None
 17848 ;; Auto vars:     Size  Location     Type
 17849 ;;		None
 17850 ;; Return value:  Size  Location     Type
 17851 ;;		None               void
 17852 ;; Registers used:
 17853 ;;		wreg, status,2
 17854 ;; Tracked objects:
 17855 ;;		On entry : 0/0
 17856 ;;		On exit  : 0/0
 17857 ;;		Unchanged: 0/0
 17858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17859 ;;      Params:         0       0       0       0       0       0       0       0       0
 17860 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17861 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17862 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17863 ;;Total ram usage:        0 bytes
 17864 ;; Hardware stack levels used:    1
 17865 ;; Hardware stack levels required when called:   11
 17866 ;; This function calls:
 17867 ;;		Nothing
 17868 ;; This function is called by:
 17869 ;;		_SYSTEM_Initialize
 17870 ;; This function uses a non-reentrant model
 17871 ;;
 17872                           
 17873                           	psect	text79
 17874  0035DC                     __ptext79:
 17875                           	opt stack 0
 17876  0035DC                     _OSCILLATOR_Initialize:
 17877                           	opt stack 18
 17878                           
 17879                           ;mcc.c: 107: OSCTUNE = 0x80;
 17880                           
 17881                           ; BSR set to: 15
 17882                           ;incstack = 0
 17883  0035DC  0E80               	movlw	128
 17884  0035DE  6E9B               	movwf	3995,c	;volatile
 17885                           
 17886                           ;mcc.c: 108: OSCCON = 0x70;
 17887  0035E0  0E70               	movlw	112
 17888  0035E2  6ED3               	movwf	4051,c	;volatile
 17889                           
 17890                           ;mcc.c: 109: OSCCON2 = 0x10;
 17891  0035E4  0E10               	movlw	16
 17892  0035E6  6ED2               	movwf	4050,c	;volatile
 17893  0035E8                     l1145:
 17894  0035E8  AED2               	btfss	4050,7,c	;volatile
 17895  0035EA  D7FE               	goto	l1145
 17896                           
 17897                           ;mcc.c: 111: ACTCON = 0x90;
 17898  0035EC  0E90               	movlw	144
 17899  0035EE  6EB5               	movwf	4021,c	;volatile
 17900  0035F0  0C90               	retlw	144	;funcret
 17901  0035F2                     __end_of_OSCILLATOR_Initialize:
 17902                           	opt stack 0
 17903                           tblptru	equ	0xFF8
 17904                           tblptrh	equ	0xFF7
 17905                           tblptrl	equ	0xFF6
 17906                           tablat	equ	0xFF5
 17907                           prodh	equ	0xFF4
 17908                           prodl	equ	0xFF3
 17909                           intcon	equ	0xFF2
 17910                           postinc0	equ	0xFEE
 17911                           wreg	equ	0xFE8
 17912                           indf1	equ	0xFE7
 17913                           postdec1	equ	0xFE5
 17914                           fsr1h	equ	0xFE2
 17915                           fsr1l	equ	0xFE1
 17916                           indf2	equ	0xFDF
 17917                           postinc2	equ	0xFDE
 17918                           postdec2	equ	0xFDD
 17919                           plusw2	equ	0xFDB
 17920                           fsr2h	equ	0xFDA
 17921                           fsr2l	equ	0xFD9
 17922                           status	equ	0xFD8
 17923                           
 17924 ;; *************** function _EUSART_Initialize *****************
 17925 ;; Defined at:
 17926 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 17927 ;; Parameters:    Size  Location     Type
 17928 ;;		None
 17929 ;; Auto vars:     Size  Location     Type
 17930 ;;		None
 17931 ;; Return value:  Size  Location     Type
 17932 ;;		None               void
 17933 ;; Registers used:
 17934 ;;		wreg, status,2
 17935 ;; Tracked objects:
 17936 ;;		On entry : 0/F
 17937 ;;		On exit  : 0/0
 17938 ;;		Unchanged: 0/0
 17939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17940 ;;      Params:         0       0       0       0       0       0       0       0       0
 17941 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17942 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17943 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17944 ;;Total ram usage:        0 bytes
 17945 ;; Hardware stack levels used:    1
 17946 ;; Hardware stack levels required when called:   11
 17947 ;; This function calls:
 17948 ;;		Nothing
 17949 ;; This function is called by:
 17950 ;;		_moteApp_GoToSleep
 17951 ;;		_SYSTEM_Initialize
 17952 ;; This function uses a non-reentrant model
 17953 ;;
 17954                           
 17955                           	psect	text80
 17956  0038BA                     __ptext80:
 17957                           	opt stack 0
 17958  0038BA                     _EUSART_Initialize:
 17959                           	opt stack 16
 17960                           
 17961                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 17962                           
 17963                           ;incstack = 0
 17964  0038BA  9A9D               	bcf	3997,5,c	;volatile
 17965                           
 17966                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 17967  0038BC  989D               	bcf	3997,4,c	;volatile
 17968                           
 17969                           ;eusart.c: 85: BAUDCON = 0x48;
 17970  0038BE  0E48               	movlw	72
 17971  0038C0  6EB8               	movwf	4024,c	;volatile
 17972                           
 17973                           ;eusart.c: 88: RCSTA = 0x90;
 17974  0038C2  0E90               	movlw	144
 17975  0038C4  6EAB               	movwf	4011,c	;volatile
 17976                           
 17977                           ;eusart.c: 91: TXSTA = 0x26;
 17978  0038C6  0E26               	movlw	38
 17979  0038C8  6EAC               	movwf	4012,c	;volatile
 17980                           
 17981                           ;eusart.c: 95: SPBRG = 0x71;
 17982  0038CA  0E71               	movlw	113
 17983  0038CC  6EAF               	movwf	4015,c	;volatile
 17984                           
 17985                           ;eusart.c: 100: SPBRGH = 0x02;
 17986  0038CE  0E02               	movlw	2
 17987  0038D0  6EB0               	movwf	4016,c	;volatile
 17988                           
 17989                           ;eusart.c: 103: eusartTxHead = 0;
 17990  0038D2  6A27               	clrf	_eusartTxHead,c
 17991                           
 17992                           ;eusart.c: 104: eusartTxTail = 0;
 17993  0038D4  6A28               	clrf	_eusartTxTail,c
 17994                           
 17995                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 17996  0038D6  0E40               	movlw	64
 17997  0038D8  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 17998                           
 17999                           ;eusart.c: 107: eusartRxHead = 0;
 18000  0038DA  6A24               	clrf	_eusartRxHead,c
 18001                           
 18002                           ;eusart.c: 108: eusartRxTail = 0;
 18003  0038DC  6A25               	clrf	_eusartRxTail,c
 18004                           
 18005                           ;eusart.c: 109: eusartRxCount = 0;
 18006  0038DE  6A23               	clrf	_eusartRxCount,c	;volatile
 18007                           
 18008                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 18009  0038E0  8A9D               	bsf	3997,5,c	;volatile
 18010                           
 18011                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 18012  0038E2  88AB               	bsf	4011,4,c	;volatile
 18013  0038E4  0012               	return		;funcret
 18014  0038E6                     __end_of_EUSART_Initialize:
 18015                           	opt stack 0
 18016                           tblptru	equ	0xFF8
 18017                           tblptrh	equ	0xFF7
 18018                           tblptrl	equ	0xFF6
 18019                           tablat	equ	0xFF5
 18020                           prodh	equ	0xFF4
 18021                           prodl	equ	0xFF3
 18022                           intcon	equ	0xFF2
 18023                           postinc0	equ	0xFEE
 18024                           wreg	equ	0xFE8
 18025                           indf1	equ	0xFE7
 18026                           postdec1	equ	0xFE5
 18027                           fsr1h	equ	0xFE2
 18028                           fsr1l	equ	0xFE1
 18029                           indf2	equ	0xFDF
 18030                           postinc2	equ	0xFDE
 18031                           postdec2	equ	0xFDD
 18032                           plusw2	equ	0xFDB
 18033                           fsr2h	equ	0xFDA
 18034                           fsr2l	equ	0xFD9
 18035                           status	equ	0xFD8
 18036                           
 18037 ;; *************** function _CMP1_Initialize *****************
 18038 ;; Defined at:
 18039 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 18040 ;; Parameters:    Size  Location     Type
 18041 ;;		None
 18042 ;; Auto vars:     Size  Location     Type
 18043 ;;		None
 18044 ;; Return value:  Size  Location     Type
 18045 ;;		None               void
 18046 ;; Registers used:
 18047 ;;		wreg, status,2
 18048 ;; Tracked objects:
 18049 ;;		On entry : 0/0
 18050 ;;		On exit  : 0/0
 18051 ;;		Unchanged: 0/0
 18052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18053 ;;      Params:         0       0       0       0       0       0       0       0       0
 18054 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18055 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18056 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18057 ;;Total ram usage:        0 bytes
 18058 ;; Hardware stack levels used:    1
 18059 ;; Hardware stack levels required when called:   11
 18060 ;; This function calls:
 18061 ;;		Nothing
 18062 ;; This function is called by:
 18063 ;;		_SYSTEM_Initialize
 18064 ;; This function uses a non-reentrant model
 18065 ;;
 18066                           
 18067                           	psect	text81
 18068  003554                     __ptext81:
 18069                           	opt stack 0
 18070  003554                     _CMP1_Initialize:
 18071                           	opt stack 18
 18072                           
 18073                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 18074                           
 18075                           ;incstack = 0
 18076  003554  9CA0               	bcf	4000,6,c	;volatile
 18077                           
 18078                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 18079  003556  0E9C               	movlw	156
 18080  003558  6E98               	movwf	3992,c	;volatile
 18081                           
 18082                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 18083  00355A  8A9A               	bsf	3994,5,c	;volatile
 18084                           
 18085                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 18086  00355C  929A               	bcf	3994,1,c	;volatile
 18087                           
 18088                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 18089  00355E  969A               	bcf	3994,3,c	;volatile
 18090                           
 18091                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 18092  003560  9CA1               	bcf	4001,6,c	;volatile
 18093                           
 18094                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 18095  003562  9CA0               	bcf	4000,6,c	;volatile
 18096  003564  0C9C               	retlw	156	;funcret
 18097  003566                     __end_of_CMP1_Initialize:
 18098                           	opt stack 0
 18099                           tblptru	equ	0xFF8
 18100                           tblptrh	equ	0xFF7
 18101                           tblptrl	equ	0xFF6
 18102                           tablat	equ	0xFF5
 18103                           prodh	equ	0xFF4
 18104                           prodl	equ	0xFF3
 18105                           intcon	equ	0xFF2
 18106                           postinc0	equ	0xFEE
 18107                           wreg	equ	0xFE8
 18108                           indf1	equ	0xFE7
 18109                           postdec1	equ	0xFE5
 18110                           fsr1h	equ	0xFE2
 18111                           fsr1l	equ	0xFE1
 18112                           indf2	equ	0xFDF
 18113                           postinc2	equ	0xFDE
 18114                           postdec2	equ	0xFDD
 18115                           plusw2	equ	0xFDB
 18116                           fsr2h	equ	0xFDA
 18117                           fsr2l	equ	0xFD9
 18118                           status	equ	0xFD8
 18119                           
 18120 ;; *************** function _ADC_Initialize *****************
 18121 ;; Defined at:
 18122 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 18123 ;; Parameters:    Size  Location     Type
 18124 ;;		None
 18125 ;; Auto vars:     Size  Location     Type
 18126 ;;		None
 18127 ;; Return value:  Size  Location     Type
 18128 ;;		None               void
 18129 ;; Registers used:
 18130 ;;		wreg, status,2
 18131 ;; Tracked objects:
 18132 ;;		On entry : 0/0
 18133 ;;		On exit  : 0/0
 18134 ;;		Unchanged: 0/0
 18135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18136 ;;      Params:         0       0       0       0       0       0       0       0       0
 18137 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18138 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18139 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18140 ;;Total ram usage:        0 bytes
 18141 ;; Hardware stack levels used:    1
 18142 ;; Hardware stack levels required when called:   11
 18143 ;; This function calls:
 18144 ;;		Nothing
 18145 ;; This function is called by:
 18146 ;;		_SYSTEM_Initialize
 18147 ;; This function uses a non-reentrant model
 18148 ;;
 18149                           
 18150                           	psect	text82
 18151  0035C6                     __ptext82:
 18152                           	opt stack 0
 18153  0035C6                     _ADC_Initialize:
 18154                           	opt stack 18
 18155                           
 18156                           ;adc.c: 68: VREFCON0 = 0b10100000;
 18157                           
 18158                           ;incstack = 0
 18159  0035C6  0EA0               	movlw	160
 18160  0035C8  6E7D               	movwf	3965,c	;volatile
 18161                           
 18162                           ;adc.c: 70: ADCON0 = 0x01;
 18163  0035CA  0E01               	movlw	1
 18164  0035CC  6EC2               	movwf	4034,c	;volatile
 18165                           
 18166                           ;adc.c: 73: ADCON1 = 0x08;
 18167  0035CE  0E08               	movlw	8
 18168  0035D0  6EC1               	movwf	4033,c	;volatile
 18169                           
 18170                           ;adc.c: 76: ADCON2 = 0b10001110;
 18171  0035D2  0E8E               	movlw	142
 18172  0035D4  6EC0               	movwf	4032,c	;volatile
 18173                           
 18174                           ;adc.c: 79: ADRESL = 0x00;
 18175  0035D6  6AC3               	clrf	4035,c	;volatile
 18176                           
 18177                           ;adc.c: 82: ADRESH = 0x00;
 18178  0035D8  6AC4               	clrf	4036,c	;volatile
 18179  0035DA  0012               	return		;funcret
 18180  0035DC                     __end_of_ADC_Initialize:
 18181                           	opt stack 0
 18182                           tblptru	equ	0xFF8
 18183                           tblptrh	equ	0xFF7
 18184                           tblptrl	equ	0xFF6
 18185                           tablat	equ	0xFF5
 18186                           prodh	equ	0xFF4
 18187                           prodl	equ	0xFF3
 18188                           intcon	equ	0xFF2
 18189                           postinc0	equ	0xFEE
 18190                           wreg	equ	0xFE8
 18191                           indf1	equ	0xFE7
 18192                           postdec1	equ	0xFE5
 18193                           fsr1h	equ	0xFE2
 18194                           fsr1l	equ	0xFE1
 18195                           indf2	equ	0xFDF
 18196                           postinc2	equ	0xFDE
 18197                           postdec2	equ	0xFDD
 18198                           plusw2	equ	0xFDB
 18199                           fsr2h	equ	0xFDA
 18200                           fsr2l	equ	0xFD9
 18201                           status	equ	0xFD8
 18202                           
 18203 ;; *************** function _MOTEapp_handlerState *****************
 18204 ;; Defined at:
 18205 ;;		line 154 in file "../Includes/Board/MOTEapp.c"
 18206 ;; Parameters:    Size  Location     Type
 18207 ;;  state           1    wreg     enum E6449
 18208 ;; Auto vars:     Size  Location     Type
 18209 ;;  state           1    0[BANK0 ] enum E6449
 18210 ;; Return value:  Size  Location     Type
 18211 ;;		None               void
 18212 ;; Registers used:
 18213 ;;		wreg
 18214 ;; Tracked objects:
 18215 ;;		On entry : F/0
 18216 ;;		On exit  : 0/0
 18217 ;;		Unchanged: 0/0
 18218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18219 ;;      Params:         0       0       0       0       0       0       0       0       0
 18220 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18221 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18222 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18223 ;;Total ram usage:        1 bytes
 18224 ;; Hardware stack levels used:    1
 18225 ;; Hardware stack levels required when called:   11
 18226 ;; This function calls:
 18227 ;;		Nothing
 18228 ;; This function is called by:
 18229 ;;		_main
 18230 ;; This function uses a non-reentrant model
 18231 ;;
 18232                           
 18233                           	psect	text83
 18234  0034C0                     __ptext83:
 18235                           	opt stack 0
 18236  0034C0                     _MOTEapp_handlerState:
 18237                           	opt stack 19
 18238                           
 18239                           ;incstack = 0
 18240                           ;MOTEapp_handlerState@state stored from wreg
 18241  0034C0  6FC8               	movwf	MOTEapp_handlerState@state& (0+255),b
 18242                           
 18243                           ;MOTEapp.c: 156: moteState = state;
 18244  0034C2  C0C8  F0F8         	movff	MOTEapp_handlerState@state,_moteState
 18245  0034C6  0012               	return		;funcret
 18246  0034C8                     __end_of_MOTEapp_handlerState:
 18247                           	opt stack 0
 18248                           tblptru	equ	0xFF8
 18249                           tblptrh	equ	0xFF7
 18250                           tblptrl	equ	0xFF6
 18251                           tablat	equ	0xFF5
 18252                           prodh	equ	0xFF4
 18253                           prodl	equ	0xFF3
 18254                           intcon	equ	0xFF2
 18255                           postinc0	equ	0xFEE
 18256                           wreg	equ	0xFE8
 18257                           indf1	equ	0xFE7
 18258                           postdec1	equ	0xFE5
 18259                           fsr1h	equ	0xFE2
 18260                           fsr1l	equ	0xFE1
 18261                           indf2	equ	0xFDF
 18262                           postinc2	equ	0xFDE
 18263                           postdec2	equ	0xFDD
 18264                           plusw2	equ	0xFDB
 18265                           fsr2h	equ	0xFDA
 18266                           fsr2l	equ	0xFD9
 18267                           status	equ	0xFD8
 18268                           
 18269 ;; *************** function _DATAEE_ReadByte *****************
 18270 ;; Defined at:
 18271 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 18272 ;; Parameters:    Size  Location     Type
 18273 ;;  bAdd            1    wreg     unsigned char 
 18274 ;; Auto vars:     Size  Location     Type
 18275 ;;  bAdd            1    0[BANK0 ] unsigned char 
 18276 ;; Return value:  Size  Location     Type
 18277 ;;                  1    wreg      unsigned char 
 18278 ;; Registers used:
 18279 ;;		wreg, status,2
 18280 ;; Tracked objects:
 18281 ;;		On entry : F/0
 18282 ;;		On exit  : 0/0
 18283 ;;		Unchanged: 0/0
 18284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18285 ;;      Params:         0       0       0       0       0       0       0       0       0
 18286 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18287 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18288 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18289 ;;Total ram usage:        1 bytes
 18290 ;; Hardware stack levels used:    1
 18291 ;; Hardware stack levels required when called:   11
 18292 ;; This function calls:
 18293 ;;		Nothing
 18294 ;; This function is called by:
 18295 ;;		_main
 18296 ;; This function uses a non-reentrant model
 18297 ;;
 18298                           
 18299                           	psect	text84
 18300  00358A                     __ptext84:
 18301                           	opt stack 0
 18302  00358A                     _DATAEE_ReadByte:
 18303                           	opt stack 19
 18304                           
 18305                           ;incstack = 0
 18306                           ;DATAEE_ReadByte@bAdd stored from wreg
 18307  00358A  6FC8               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 18308                           
 18309                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 18310  00358C  C0C8  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 18311                           
 18312                           ;memory.c: 191: EECON1bits.CFGS = 0;
 18313  003590  9CA6               	bcf	4006,6,c	;volatile
 18314                           
 18315                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 18316  003592  9EA6               	bcf	4006,7,c	;volatile
 18317                           
 18318                           ;memory.c: 193: EECON1bits.RD = 1;
 18319  003594  80A6               	bsf	4006,0,c	;volatile
 18320                           
 18321                           ;memory.c: 194: __nop();
 18322  003596  F000               	nop	
 18323                           
 18324                           ;memory.c: 195: __nop();
 18325  003598  F000               	nop	
 18326                           
 18327                           ;memory.c: 197: return (EEDATA);
 18328  00359A  50A8               	movf	4008,w,c	;volatile
 18329  00359C  0012               	return		;funcret
 18330  00359E                     __end_of_DATAEE_ReadByte:
 18331                           	opt stack 0
 18332                           tblptru	equ	0xFF8
 18333                           tblptrh	equ	0xFF7
 18334                           tblptrl	equ	0xFF6
 18335                           tablat	equ	0xFF5
 18336                           prodh	equ	0xFF4
 18337                           prodl	equ	0xFF3
 18338                           intcon	equ	0xFF2
 18339                           postinc0	equ	0xFEE
 18340                           wreg	equ	0xFE8
 18341                           indf1	equ	0xFE7
 18342                           postdec1	equ	0xFE5
 18343                           fsr1h	equ	0xFE2
 18344                           fsr1l	equ	0xFE1
 18345                           indf2	equ	0xFDF
 18346                           postinc2	equ	0xFDE
 18347                           postdec2	equ	0xFDD
 18348                           plusw2	equ	0xFDB
 18349                           fsr2h	equ	0xFDA
 18350                           fsr2l	equ	0xFD9
 18351                           status	equ	0xFD8
 18352                           
 18353 ;; *************** function _INTERRUPT_InterruptManager *****************
 18354 ;; Defined at:
 18355 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 18356 ;; Parameters:    Size  Location     Type
 18357 ;;		None
 18358 ;; Auto vars:     Size  Location     Type
 18359 ;;		None
 18360 ;; Return value:  Size  Location     Type
 18361 ;;		None               void
 18362 ;; Registers used:
 18363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18364 ;; Tracked objects:
 18365 ;;		On entry : 0/0
 18366 ;;		On exit  : 0/0
 18367 ;;		Unchanged: 0/0
 18368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18369 ;;      Params:         0       0       0       0       0       0       0       0       0
 18370 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18371 ;;      Temps:         12       0       0       0       0       0       0       0       0
 18372 ;;      Totals:        12       0       0       0       0       0       0       0       0
 18373 ;;Total ram usage:       12 bytes
 18374 ;; Hardware stack levels used:    1
 18375 ;; Hardware stack levels required when called:   10
 18376 ;; This function calls:
 18377 ;;		_CMP1_ISR
 18378 ;;		_EUSART_Receive_ISR
 18379 ;;		_EUSART_Transmit_ISR
 18380 ;;		_TMR1_ISR
 18381 ;;		_TMRapp_Tick
 18382 ;;		_USBDeviceTasks
 18383 ;;		_USBapp_setrxByteFlag
 18384 ;; This function is called by:
 18385 ;;		Interrupt level 2
 18386 ;; This function uses a non-reentrant model
 18387 ;;
 18388                           
 18389                           	psect	intcode
 18390  001008                     __pintcode:
 18391                           	opt stack 0
 18392  001008                     _INTERRUPT_InterruptManager:
 18393                           	opt stack 10
 18394                           
 18395                           ;incstack = 0
 18396  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18397  00100A  CFFA F04F          	movff	pclath,??_INTERRUPT_InterruptManager
 18398  00100E  CFFB F050          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 18399  001012  CFE1 F051          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 18400  001016  CFE2 F052          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 18401  00101A  CFD9 F053          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 18402  00101E  CFDA F054          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 18403  001022  CFF3 F055          	movff	prodl,??_INTERRUPT_InterruptManager+6
 18404  001026  CFF4 F056          	movff	prodh,??_INTERRUPT_InterruptManager+7
 18405  00102A  CFF6 F057          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 18406  00102E  CFF7 F058          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 18407  001032  CFF8 F059          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 18408  001036  CFF5 F05A          	movff	tablat,??_INTERRUPT_InterruptManager+11
 18409                           
 18410                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 18411  00103A  B09D               	btfsc	3997,0,c	;volatile
 18412  00103C  A09E               	btfss	3998,0,c	;volatile
 18413  00103E  D005               	goto	i2l1105
 18414                           
 18415                           ;interrupt_manager.c: 59: {
 18416                           ;interrupt_manager.c: 60: TMR1_ISR();
 18417  001040  EC74  F01A         	call	_TMR1_ISR	;wreg free
 18418                           
 18419                           ;interrupt_manager.c: 62: TMRapp_Tick();
 18420  001044  EC5A  F01A         	call	_TMRapp_Tick	;wreg free
 18421                           
 18422                           ;interrupt_manager.c: 63: }
 18423  001048  D016               	goto	i2l1113
 18424  00104A                     i2l1105:
 18425                           
 18426                           ;interrupt_manager.c: 64: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 18427  00104A  BA9D               	btfsc	3997,5,c	;volatile
 18428  00104C  AA9E               	btfss	3998,5,c	;volatile
 18429  00104E  D005               	goto	i2l1107
 18430                           
 18431                           ;interrupt_manager.c: 65: {
 18432                           ;interrupt_manager.c: 66: USBapp_setrxByteFlag();
 18433  001050  EC5D  F01A         	call	_USBapp_setrxByteFlag	;wreg free
 18434                           
 18435                           ;interrupt_manager.c: 67: EUSART_Receive_ISR();
 18436  001054  ECA4  F01B         	call	_EUSART_Receive_ISR	;wreg free
 18437                           
 18438                           ;interrupt_manager.c: 68: }
 18439  001058  D00E               	goto	i2l1113
 18440  00105A                     i2l1107:
 18441                           
 18442                           ;interrupt_manager.c: 69: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 18443  00105A  B89D               	btfsc	3997,4,c	;volatile
 18444  00105C  A89E               	btfss	3998,4,c	;volatile
 18445  00105E  D003               	goto	i2l1109
 18446                           
 18447                           ;interrupt_manager.c: 70: {
 18448                           ;interrupt_manager.c: 71: EUSART_Transmit_ISR();
 18449  001060  ECB8  F01B         	call	_EUSART_Transmit_ISR	;wreg free
 18450                           
 18451                           ;interrupt_manager.c: 72: }
 18452  001064  D008               	goto	i2l1113
 18453  001066                     i2l1109:
 18454                           
 18455                           ;interrupt_manager.c: 73: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 18456  001066  BCA0               	btfsc	4000,6,c	;volatile
 18457  001068  ACA1               	btfss	4001,6,c	;volatile
 18458  00106A  D003               	goto	i2l9730
 18459                           
 18460                           ;interrupt_manager.c: 74: {
 18461                           ;interrupt_manager.c: 75: CMP1_ISR();
 18462  00106C  EC4D  F01A         	call	_CMP1_ISR	;wreg free
 18463                           
 18464                           ;interrupt_manager.c: 76: }
 18465  001070  D002               	goto	i2l1113
 18466  001072                     i2l9730:
 18467                           
 18468                           ;interrupt_manager.c: 77: else
 18469                           ;interrupt_manager.c: 78: {
 18470                           ;interrupt_manager.c: 80: USBDeviceTasks();
 18471  001072  EC5C  F02B         	call	_USBDeviceTasks	;wreg free
 18472  001076                     i2l1113:
 18473  001076  C05A  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 18474  00107A  C059  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 18475  00107E  C058  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 18476  001082  C057  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 18477  001086  C056  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 18478  00108A  C055  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 18479  00108E  C054  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 18480  001092  C053  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 18481  001096  C052  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 18482  00109A  C051  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 18483  00109E  C050  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 18484  0010A2  C04F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 18485  0010A6  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18486  0010A8  0011               	retfie		f
 18487  0010AA                     __end_of_INTERRUPT_InterruptManager:
 18488                           	opt stack 0
 18489                           pclatu	equ	0xFFB
 18490                           pclath	equ	0xFFA
 18491                           tblptru	equ	0xFF8
 18492                           tblptrh	equ	0xFF7
 18493                           tblptrl	equ	0xFF6
 18494                           tablat	equ	0xFF5
 18495                           prodh	equ	0xFF4
 18496                           prodl	equ	0xFF3
 18497                           intcon	equ	0xFF2
 18498                           postinc0	equ	0xFEE
 18499                           wreg	equ	0xFE8
 18500                           indf1	equ	0xFE7
 18501                           postdec1	equ	0xFE5
 18502                           fsr1h	equ	0xFE2
 18503                           fsr1l	equ	0xFE1
 18504                           indf2	equ	0xFDF
 18505                           postinc2	equ	0xFDE
 18506                           postdec2	equ	0xFDD
 18507                           plusw2	equ	0xFDB
 18508                           fsr2h	equ	0xFDA
 18509                           fsr2l	equ	0xFD9
 18510                           status	equ	0xFD8
 18511                           
 18512 ;; *************** function _USBapp_setrxByteFlag *****************
 18513 ;; Defined at:
 18514 ;;		line 226 in file "../Includes/Board/USBapp.c"
 18515 ;; Parameters:    Size  Location     Type
 18516 ;;		None
 18517 ;; Auto vars:     Size  Location     Type
 18518 ;;		None
 18519 ;; Return value:  Size  Location     Type
 18520 ;;		None               void
 18521 ;; Registers used:
 18522 ;;		wreg, status,2
 18523 ;; Tracked objects:
 18524 ;;		On entry : 0/0
 18525 ;;		On exit  : 0/0
 18526 ;;		Unchanged: 0/0
 18527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18528 ;;      Params:         0       0       0       0       0       0       0       0       0
 18529 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18530 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18531 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18532 ;;Total ram usage:        0 bytes
 18533 ;; Hardware stack levels used:    1
 18534 ;; This function calls:
 18535 ;;		Nothing
 18536 ;; This function is called by:
 18537 ;;		_INTERRUPT_InterruptManager
 18538 ;; This function uses a non-reentrant model
 18539 ;;
 18540                           
 18541                           	psect	text86
 18542  0034BA                     __ptext86:
 18543                           	opt stack 0
 18544  0034BA                     _USBapp_setrxByteFlag:
 18545                           	opt stack 19
 18546                           
 18547                           ;USBapp.c: 228: rxByteFlag = 1;
 18548                           
 18549                           ;incstack = 0
 18550  0034BA  0E01               	movlw	1
 18551  0034BC  6E2A               	movwf	_rxByteFlag,c	;volatile
 18552  0034BE  0C01               	retlw	1	;funcret
 18553  0034C0                     __end_of_USBapp_setrxByteFlag:
 18554                           	opt stack 0
 18555                           pclatu	equ	0xFFB
 18556                           pclath	equ	0xFFA
 18557                           tblptru	equ	0xFF8
 18558                           tblptrh	equ	0xFF7
 18559                           tblptrl	equ	0xFF6
 18560                           tablat	equ	0xFF5
 18561                           prodh	equ	0xFF4
 18562                           prodl	equ	0xFF3
 18563                           intcon	equ	0xFF2
 18564                           postinc0	equ	0xFEE
 18565                           wreg	equ	0xFE8
 18566                           indf1	equ	0xFE7
 18567                           postdec1	equ	0xFE5
 18568                           fsr1h	equ	0xFE2
 18569                           fsr1l	equ	0xFE1
 18570                           indf2	equ	0xFDF
 18571                           postinc2	equ	0xFDE
 18572                           postdec2	equ	0xFDD
 18573                           plusw2	equ	0xFDB
 18574                           fsr2h	equ	0xFDA
 18575                           fsr2l	equ	0xFD9
 18576                           status	equ	0xFD8
 18577                           
 18578 ;; *************** function _USBDeviceTasks *****************
 18579 ;; Defined at:
 18580 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 18581 ;; Parameters:    Size  Location     Type
 18582 ;;		None
 18583 ;; Auto vars:     Size  Location     Type
 18584 ;;  i               1   32[COMRAM] unsigned char 
 18585 ;; Return value:  Size  Location     Type
 18586 ;;		None               void
 18587 ;; Registers used:
 18588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18589 ;; Tracked objects:
 18590 ;;		On entry : 0/0
 18591 ;;		On exit  : 0/0
 18592 ;;		Unchanged: 0/0
 18593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18594 ;;      Params:         0       0       0       0       0       0       0       0       0
 18595 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18597 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18598 ;;Total ram usage:        1 bytes
 18599 ;; Hardware stack levels used:    1
 18600 ;; Hardware stack levels required when called:    9
 18601 ;; This function calls:
 18602 ;;		_USBCtrlEPAllowStatusStage
 18603 ;;		_USBCtrlEPService
 18604 ;;		_USBStallHandler
 18605 ;;		_USBSuspend
 18606 ;;		_USBWakeFromSuspend
 18607 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18608 ;;		i2_USBDeviceInit
 18609 ;; This function is called by:
 18610 ;;		_INTERRUPT_InterruptManager
 18611 ;; This function uses a non-reentrant model
 18612 ;;
 18613                           
 18614                           	psect	text87
 18615  0056B8                     __ptext87:
 18616                           	opt stack 0
 18617  0056B8                     _USBDeviceTasks:
 18618                           	opt stack 10
 18619                           
 18620                           ;usb_device.c: 430: uint8_t i;
 18621                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 18622                           
 18623                           ;incstack = 0
 18624  0056B8  0100               	movlb	0	; () banked
 18625  0056BA  058A               	decf	_USBDeviceState& (0+255),w,b	;volatile
 18626  0056BC  E107               	bnz	i2l9564
 18627                           
 18628                           ; BSR set to: 0
 18629                           ;usb_device.c: 433: {
 18630                           ;usb_device.c: 443: if(!UCONbits.SE0)
 18631  0056BE  BA60               	btfsc	3936,5,c	;volatile
 18632  0056C0  D005               	goto	i2l9564
 18633                           
 18634                           ; BSR set to: 0
 18635                           ;usb_device.c: 444: {
 18636                           ;usb_device.c: 445: {UIR = 0;};
 18637  0056C2  6A65               	clrf	3941,c	;volatile
 18638                           
 18639                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 18640  0056C4  8064               	bsf	3940,0,c	;volatile
 18641                           
 18642                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 18643  0056C6  8864               	bsf	3940,4,c	;volatile
 18644                           
 18645                           ; BSR set to: 0
 18646                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 18647  0056C8  0E02               	movlw	2
 18648  0056CA  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 18649  0056CC                     i2l9564:
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;usb_device.c: 449: }
 18653                           ;usb_device.c: 450: }
 18654                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 18655  0056CC  B465               	btfsc	3941,2,c	;volatile
 18656                           
 18657                           ; BSR set to: 0
 18658  0056CE  A464               	btfss	3940,2,c	;volatile
 18659  0056D0  D003               	goto	i2l9572
 18660                           
 18661                           ; BSR set to: 0
 18662                           ;usb_device.c: 455: {
 18663                           ;usb_device.c: 456: (UIR &= 0xFB);
 18664  0056D2  9465               	bcf	3941,2,c	;volatile
 18665                           
 18666                           ; BSR set to: 0
 18667                           ;usb_device.c: 457: USBWakeFromSuspend();
 18668  0056D4  EC5E  F01B         	call	_USBWakeFromSuspend	;wreg free
 18669  0056D8                     i2l9572:
 18670                           
 18671                           ;usb_device.c: 458: }
 18672                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 18673  0056D8  A260               	btfss	3936,1,c	;volatile
 18674  0056DA  D002               	goto	i2l1576
 18675                           
 18676                           ;usb_device.c: 464: {
 18677                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 18678  0056DC  94A4               	bcf	4004,2,c	;volatile
 18679                           
 18680                           ;usb_device.c: 466: return;
 18681  0056DE  0012               	return	
 18682  0056E0                     i2l1576:
 18683                           
 18684                           ;usb_device.c: 467: }
 18685                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 18686  0056E0  B065               	btfsc	3941,0,c	;volatile
 18687  0056E2  A064               	btfss	3940,0,c	;volatile
 18688  0056E4  D006               	goto	i2l9586
 18689                           
 18690                           ;usb_device.c: 480: {
 18691                           ;usb_device.c: 481: USBDeviceInit();
 18692  0056E6  ECB2  F028         	call	i2_USBDeviceInit	;wreg free
 18693                           
 18694                           ; BSR set to: 0
 18695                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 18696  0056EA  84A3               	bsf	4003,2,c	;volatile
 18697                           
 18698                           ; BSR set to: 0
 18699                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 18700  0056EC  0E04               	movlw	4
 18701  0056EE  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 18702                           
 18703                           ; BSR set to: 0
 18704                           ;usb_device.c: 489: (UIR &= 0xFE);
 18705  0056F0  9065               	bcf	3941,0,c	;volatile
 18706  0056F2                     i2l9586:
 18707                           
 18708                           ;usb_device.c: 490: }
 18709                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 18710  0056F2  B865               	btfsc	3941,4,c	;volatile
 18711  0056F4  A864               	btfss	3940,4,c	;volatile
 18712  0056F6  D003               	goto	i2l9594
 18713                           
 18714                           ;usb_device.c: 496: {
 18715                           ;usb_device.c: 497: USBSuspend();
 18716  0056F8  EC21  F01B         	call	_USBSuspend	;wreg free
 18717                           
 18718                           ;usb_device.c: 498: (UIR &= 0xEF);
 18719  0056FC  9865               	bcf	3941,4,c	;volatile
 18720  0056FE                     i2l9594:
 18721                           
 18722                           ;usb_device.c: 499: }
 18723                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 18724  0056FE  AC65               	btfss	3941,6,c	;volatile
 18725  005700  D014               	goto	i2l9610
 18726                           
 18727                           ;usb_device.c: 502: {
 18728                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 18729  005702  AC64               	btfss	3940,6,c	;volatile
 18730  005704  D00A               	goto	i2l9600
 18731                           
 18732                           ;usb_device.c: 504: {
 18733                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 18734  005706  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18735  005708  0E73               	movlw	115
 18736  00570A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18737  00570C  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18738  00570E  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18739  005710  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18740  005712  0E01               	movlw	1
 18741  005714  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18742  005716  EC11  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18743  00571A                     i2l9600:
 18744                           
 18745                           ;usb_device.c: 506: }
 18746                           ;usb_device.c: 507: (UIR &= 0xBF);
 18747  00571A  9C65               	bcf	3941,6,c	;volatile
 18748                           
 18749                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 18750  00571C  501F               	movf	_USBStatusStageTimeoutCounter,w,c
 18751  00571E  E001               	bz	i2l9606
 18752                           
 18753                           ;usb_device.c: 513: {
 18754                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 18755  005720  061F               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 18756  005722                     i2l9606:
 18757                           
 18758                           ;usb_device.c: 515: }
 18759                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 18760  005722  501F               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 18761  005724  E102               	bnz	i2l9610
 18762                           
 18763                           ;usb_device.c: 522: {
 18764                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 18765  005726  ECB8  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18766  00572A                     i2l9610:
 18767                           
 18768                           ;usb_device.c: 524: }
 18769                           ;usb_device.c: 525: }
 18770                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 18771  00572A  BA65               	btfsc	3941,5,c	;volatile
 18772  00572C  AA64               	btfss	3940,5,c	;volatile
 18773  00572E  D002               	goto	i2l9616
 18774                           
 18775                           ;usb_device.c: 528: {
 18776                           ;usb_device.c: 529: USBStallHandler();
 18777  005730  EC8E  F01D         	call	_USBStallHandler	;wreg free
 18778  005734                     i2l9616:
 18779                           
 18780                           ;usb_device.c: 530: }
 18781                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 18782  005734  B265               	btfsc	3941,1,c	;volatile
 18783  005736  A264               	btfss	3940,1,c	;volatile
 18784  005738  D00B               	goto	i2l9624
 18785                           
 18786                           ;usb_device.c: 533: {
 18787                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 18788  00573A  0E7F               	movlw	127
 18789  00573C  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18790  00573E  683B               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18791  005740  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18792  005742  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18793  005744  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18794  005746  0E01               	movlw	1
 18795  005748  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18796  00574A  EC11  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18797                           
 18798                           ;usb_device.c: 535: {UEIR = 0;};
 18799  00574E  6A67               	clrf	3943,c	;volatile
 18800  005750                     i2l9624:
 18801                           
 18802                           ;usb_device.c: 536: }
 18803                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 18804  005750  0E04               	movlw	4
 18805  005752  0100               	movlb	0	; () banked
 18806  005754  618A               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 18807  005756  D002               	goto	i2l1586
 18808                           
 18809                           ; BSR set to: 0
 18810                           ;usb_device.c: 544: {
 18811                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 18812  005758  94A4               	bcf	4004,2,c	;volatile
 18813                           
 18814                           ;usb_device.c: 546: return;
 18815  00575A  0C04               	retlw	4
 18816  00575C                     i2l1586:
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;usb_device.c: 547: }
 18820                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 18821  00575C  A664               	btfss	3940,3,c	;volatile
 18822  00575E  D029               	goto	i2l1587
 18823                           
 18824                           ; BSR set to: 0
 18825                           ;usb_device.c: 553: {
 18826                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 18827  005760  6A4E               	clrf	USBDeviceTasks@i,c
 18828  005762                     i2l1588:
 18829                           
 18830                           ;usb_device.c: 555: {
 18831                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 18832  005762  A665               	btfss	3941,3,c	;volatile
 18833  005764  D026               	goto	i2l1587
 18834                           
 18835                           ;usb_device.c: 557: {
 18836                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 18837  005766  CF61 F02D          	movff	3937,_USTATcopy	;volatile
 18838                           
 18839                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 18840  00576A  302D               	rrcf	_USTATcopy,w,c	;volatile
 18841  00576C  32E8               	rrcf	wreg,f,c
 18842  00576E  32E8               	rrcf	wreg,f,c
 18843  005770  0B0F               	andlw	15
 18844  005772  6E22               	movwf	_endpoint_number,c	;volatile
 18845                           
 18846                           ;usb_device.c: 562: (UIR &= 0xF7);
 18847  005774  9665               	bcf	3941,3,c	;volatile
 18848                           
 18849                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 18850  005776  B42D               	btfsc	_USTATcopy,2,c	;volatile
 18851  005778  D003               	goto	i2l9644
 18852                           
 18853                           ;usb_device.c: 567: {
 18854                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 18855  00577A  5022               	movf	_endpoint_number,w,c
 18856  00577C  0F6D               	addlw	low _ep_data_out
 18857  00577E  D002               	goto	L57
 18858  005780                     i2l9644:
 18859                           
 18860                           ;usb_device.c: 570: else
 18861                           ;usb_device.c: 571: {
 18862                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 18863  005780  5022               	movf	_endpoint_number,w,c
 18864  005782  0F6A               	addlw	low _ep_data_in
 18865  005784                     L57:
 18866  005784  6ED9               	movwf	fsr2l,c
 18867  005786  6ADA               	clrf	fsr2h,c
 18868  005788  0100               	movlb	0	; () banked
 18869  00578A  70DF               	btg	indf2,0,c
 18870                           
 18871                           ; BSR set to: 0
 18872                           ;usb_device.c: 573: }
 18873                           ;usb_device.c: 577: if(endpoint_number == 0)
 18874  00578C  5022               	movf	_endpoint_number,w,c	;volatile
 18875  00578E  E103               	bnz	i2l9650
 18876                           
 18877                           ; BSR set to: 0
 18878                           ;usb_device.c: 578: {
 18879                           ;usb_device.c: 579: USBCtrlEPService();
 18880  005790  ECA9  F025         	call	_USBCtrlEPService	;wreg free
 18881                           
 18882                           ;usb_device.c: 580: }
 18883  005794  D00A               	goto	i2l9652
 18884  005796                     i2l9650:
 18885                           
 18886                           ; BSR set to: 0
 18887                           ;usb_device.c: 581: else
 18888                           ;usb_device.c: 582: {
 18889                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 18890  005796  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18891  005798  0E72               	movlw	114
 18892  00579A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18893  00579C  0E2D               	movlw	low _USTATcopy
 18894  00579E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18895  0057A0  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18896  0057A2  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18897  0057A4  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18898  0057A6  EC11  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18899  0057AA                     i2l9652:
 18900  0057AA  2A4E               	incf	USBDeviceTasks@i,f,c
 18901  0057AC  0E03               	movlw	3
 18902  0057AE  644E               	cpfsgt	USBDeviceTasks@i,c
 18903  0057B0  D7D8               	goto	i2l1588
 18904  0057B2                     i2l1587:
 18905                           
 18906                           ;usb_device.c: 589: }
 18907                           ;usb_device.c: 590: }
 18908                           ;usb_device.c: 591: }
 18909                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 18910  0057B2  94A4               	bcf	4004,2,c	;volatile
 18911  0057B4  0012               	return		;funcret
 18912  0057B6                     __end_of_USBDeviceTasks:
 18913                           	opt stack 0
 18914                           pclatu	equ	0xFFB
 18915                           pclath	equ	0xFFA
 18916                           tblptru	equ	0xFF8
 18917                           tblptrh	equ	0xFF7
 18918                           tblptrl	equ	0xFF6
 18919                           tablat	equ	0xFF5
 18920                           prodh	equ	0xFF4
 18921                           prodl	equ	0xFF3
 18922                           intcon	equ	0xFF2
 18923                           postinc0	equ	0xFEE
 18924                           wreg	equ	0xFE8
 18925                           indf1	equ	0xFE7
 18926                           postdec1	equ	0xFE5
 18927                           fsr1h	equ	0xFE2
 18928                           fsr1l	equ	0xFE1
 18929                           indf2	equ	0xFDF
 18930                           postinc2	equ	0xFDE
 18931                           postdec2	equ	0xFDD
 18932                           plusw2	equ	0xFDB
 18933                           fsr2h	equ	0xFDA
 18934                           fsr2l	equ	0xFD9
 18935                           status	equ	0xFD8
 18936                           
 18937 ;; *************** function i2_USBDeviceInit *****************
 18938 ;; Defined at:
 18939 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 18940 ;; Parameters:    Size  Location     Type
 18941 ;;		None
 18942 ;; Auto vars:     Size  Location     Type
 18943 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 18944 ;; Return value:  Size  Location     Type
 18945 ;;		None               void
 18946 ;; Registers used:
 18947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18948 ;; Tracked objects:
 18949 ;;		On entry : 0/0
 18950 ;;		On exit  : F/0
 18951 ;;		Unchanged: 0/0
 18952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18953 ;;      Params:         0       0       0       0       0       0       0       0       0
 18954 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18955 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18956 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18957 ;;Total ram usage:        1 bytes
 18958 ;; Hardware stack levels used:    1
 18959 ;; Hardware stack levels required when called:    1
 18960 ;; This function calls:
 18961 ;;		i2_memset
 18962 ;; This function is called by:
 18963 ;;		_USBDeviceTasks
 18964 ;; This function uses a non-reentrant model
 18965 ;;
 18966                           
 18967                           	psect	text88
 18968  005164                     __ptext88:
 18969                           	opt stack 0
 18970  005164                     i2_USBDeviceInit:
 18971                           	opt stack 17
 18972                           
 18973                           ;usb_device.c: 239: uint8_t i;
 18974                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 18975                           
 18976                           ;incstack = 0
 18977  005164  94A3               	bcf	4003,2,c	;volatile
 18978                           
 18979                           ;usb_device.c: 244: {UEIR = 0;};
 18980  005166  6A67               	clrf	3943,c	;volatile
 18981                           
 18982                           ;usb_device.c: 247: {UIR = 0;};
 18983  005168  6A65               	clrf	3941,c	;volatile
 18984                           
 18985                           ;usb_device.c: 250: UEP0 = 0;
 18986  00516A  6A6A               	clrf	3946,c	;volatile
 18987                           
 18988                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 18989  00516C  0E6B               	movlw	107
 18990  00516E  6E2E               	movwf	i2memset@p1,c
 18991  005170  0E0F               	movlw	15
 18992  005172  6E2F               	movwf	i2memset@p1+1,c
 18993  005174  6A31               	clrf	i2memset@c+1,c
 18994  005176  6A30               	clrf	i2memset@c,c
 18995  005178  6A33               	clrf	i2memset@n+1,c
 18996  00517A  0E02               	movlw	2
 18997  00517C  6E32               	movwf	i2memset@n,c
 18998  00517E  EC08  F01C         	call	i2_memset	;wreg free
 18999                           
 19000                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 19001  005182  0E16               	movlw	22
 19002  005184  6E62               	movwf	3938,c	;volatile
 19003  005186  0E9F               	movlw	159
 19004  005188  6E66               	movwf	3942,c	;volatile
 19005  00518A  0E7B               	movlw	123
 19006  00518C  6E64               	movwf	3940,c	;volatile
 19007                           
 19008                           ;usb_device.c: 257: ;
 19009                           ;usb_device.c: 260: ;
 19010                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 19011  00518E  6A36               	clrf	i2USBDeviceInit@i,c
 19012  005190                     i2l9190:
 19013                           
 19014                           ;usb_device.c: 264: {
 19015                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 19016  005190  5036               	movf	i2USBDeviceInit@i,w,c
 19017  005192  0D04               	mullw	4
 19018  005194  0E00               	movlw	0
 19019  005196  24F3               	addwf	prodl,w,c
 19020  005198  6ED9               	movwf	fsr2l,c
 19021  00519A  0E04               	movlw	4
 19022  00519C  20F4               	addwfc	prodh,w,c
 19023  00519E  6EDA               	movwf	fsr2h,c
 19024  0051A0  6ADE               	clrf	postinc2,c
 19025  0051A2  6ADE               	clrf	postinc2,c
 19026  0051A4  6ADE               	clrf	postinc2,c
 19027  0051A6  6ADD               	clrf	postdec2,c
 19028  0051A8  2A36               	incf	i2USBDeviceInit@i,f,c
 19029  0051AA  0E0B               	movlw	11
 19030  0051AC  6436               	cpfsgt	i2USBDeviceInit@i,c
 19031  0051AE  D7F0               	goto	i2l9190
 19032                           
 19033                           ;usb_device.c: 266: }
 19034                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 19035  0051B0  8C60               	bsf	3936,6,c	;volatile
 19036                           
 19037                           ;usb_device.c: 272: UADDR = 0x00;
 19038  0051B2  6A63               	clrf	3939,c	;volatile
 19039                           
 19040                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 19041  0051B4  9860               	bcf	3936,4,c	;volatile
 19042                           
 19043                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 19044  0051B6  9C60               	bcf	3936,6,c	;volatile
 19045                           
 19046                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 19047  0051B8  D005               	goto	i2l9204
 19048  0051BA                     i2l9196:
 19049                           
 19050                           ;usb_device.c: 282: {
 19051                           ;usb_device.c: 283: (UIR &= 0xF7);
 19052  0051BA  9665               	bcf	3941,3,c	;volatile
 19053                           
 19054                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 19055  0051BC  6A0C               	clrf	_inPipes+3,c	;volatile
 19056                           
 19057                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 19058  0051BE  6A04               	clrf	_outPipes+3,c	;volatile
 19059                           
 19060                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 19061  0051C0  6A05               	clrf	_outPipes+4,c	;volatile
 19062  0051C2  6A06               	clrf	_outPipes+5,c	;volatile
 19063  0051C4                     i2l9204:
 19064  0051C4  B665               	btfsc	3941,3,c	;volatile
 19065  0051C6  D7F9               	goto	i2l9196
 19066                           
 19067                           ;usb_device.c: 288: }
 19068                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 19069  0051C8  0E01               	movlw	1
 19070  0051CA  0100               	movlb	0	; () banked
 19071  0051CC  6F8B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19072                           
 19073                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 19074  0051CE  6F8C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19075                           
 19076                           ; BSR set to: 0
 19077                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 19078  0051D0  6B88               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 19082  0051D2  6B89               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19083                           
 19084                           ; BSR set to: 0
 19085                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 19086  0051D4  6B87               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 19087                           
 19088                           ; BSR set to: 0
 19089                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 19090  0051D6  6A36               	clrf	i2USBDeviceInit@i,c
 19091  0051D8                     i2l9220:
 19092                           
 19093                           ;usb_device.c: 302: {
 19094                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 19095  0051D8  5036               	movf	i2USBDeviceInit@i,w,c
 19096  0051DA  0D02               	mullw	2
 19097  0051DC  50F3               	movf	prodl,w,c
 19098  0051DE  0F0F               	addlw	low _pBDTEntryIn
 19099  0051E0  6ED9               	movwf	fsr2l,c
 19100  0051E2  6ADA               	clrf	fsr2h,c
 19101  0051E4  6ADE               	clrf	postinc2,c
 19102  0051E6  6ADD               	clrf	postdec2,c
 19103                           
 19104                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 19105  0051E8  5036               	movf	i2USBDeviceInit@i,w,c
 19106  0051EA  0D02               	mullw	2
 19107  0051EC  50F3               	movf	prodl,w,c
 19108  0051EE  0F60               	addlw	low _pBDTEntryOut
 19109  0051F0  6ED9               	movwf	fsr2l,c
 19110  0051F2  6ADA               	clrf	fsr2h,c
 19111  0051F4  6ADE               	clrf	postinc2,c
 19112  0051F6  6ADD               	clrf	postdec2,c
 19113                           
 19114                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 19115  0051F8  5036               	movf	i2USBDeviceInit@i,w,c
 19116  0051FA  0F6A               	addlw	low _ep_data_in
 19117  0051FC  6ED9               	movwf	fsr2l,c
 19118  0051FE  6ADA               	clrf	fsr2h,c
 19119  005200  6ADF               	clrf	indf2,c
 19120                           
 19121                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 19122  005202  5036               	movf	i2USBDeviceInit@i,w,c
 19123  005204  0F6D               	addlw	low _ep_data_out
 19124  005206  6ED9               	movwf	fsr2l,c
 19125  005208  6ADA               	clrf	fsr2h,c
 19126  00520A  6ADF               	clrf	indf2,c
 19127  00520C  2A36               	incf	i2USBDeviceInit@i,f,c
 19128  00520E  0E02               	movlw	2
 19129  005210  6436               	cpfsgt	i2USBDeviceInit@i,c
 19130  005212  D7E2               	goto	i2l9220
 19131                           
 19132                           ;usb_device.c: 307: }
 19133                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 19134  005214  0E08               	movlw	8
 19135  005216  6E0F               	movwf	_pBDTEntryIn,c
 19136  005218  0E04               	movlw	4
 19137  00521A  6E10               	movwf	_pBDTEntryIn+1,c
 19138                           
 19139                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 19140  00521C  0E16               	movlw	22
 19141  00521E  6E6A               	movwf	3946,c	;volatile
 19142                           
 19143                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 19144  005220  0E04               	movlw	4
 19145  005222  0104               	movlb	4	; () banked
 19146  005224  6F03               	movwf	3,b	;volatile
 19147  005226  0E30               	movlw	48
 19148  005228  6F02               	movwf	2,b	;volatile
 19149                           
 19150                           ; BSR set to: 4
 19151                           ;usb_device.c: 315: BDT[0].CNT = 8;
 19152  00522A  0E08               	movlw	8
 19153  00522C  6F01               	movwf	1,b	;volatile
 19154                           
 19155                           ; BSR set to: 4
 19156                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 19157  00522E  0E04               	movlw	4
 19158  005230  6F00               	movwf	0,b	;volatile
 19159                           
 19160                           ; BSR set to: 4
 19161                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 19162  005232  8F00               	bsf	0,7,b	;volatile
 19163                           
 19164                           ; BSR set to: 4
 19165                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 19166  005234  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 19167                           
 19168                           ; BSR set to: 4
 19169                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 19170  005236  0100               	movlb	0	; () banked
 19171  005238  6B8A               	clrf	_USBDeviceState& (0+255),b	;volatile
 19172                           
 19173                           ; BSR set to: 0
 19174  00523A  0012               	return		;funcret
 19175  00523C                     __end_ofi2_USBDeviceInit:
 19176                           	opt stack 0
 19177                           pclatu	equ	0xFFB
 19178                           pclath	equ	0xFFA
 19179                           tblptru	equ	0xFF8
 19180                           tblptrh	equ	0xFF7
 19181                           tblptrl	equ	0xFF6
 19182                           tablat	equ	0xFF5
 19183                           prodh	equ	0xFF4
 19184                           prodl	equ	0xFF3
 19185                           intcon	equ	0xFF2
 19186                           postinc0	equ	0xFEE
 19187                           wreg	equ	0xFE8
 19188                           indf1	equ	0xFE7
 19189                           postdec1	equ	0xFE5
 19190                           fsr1h	equ	0xFE2
 19191                           fsr1l	equ	0xFE1
 19192                           indf2	equ	0xFDF
 19193                           postinc2	equ	0xFDE
 19194                           postdec2	equ	0xFDD
 19195                           plusw2	equ	0xFDB
 19196                           fsr2h	equ	0xFDA
 19197                           fsr2l	equ	0xFD9
 19198                           status	equ	0xFD8
 19199                           
 19200 ;; *************** function _USBWakeFromSuspend *****************
 19201 ;; Defined at:
 19202 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 19203 ;; Parameters:    Size  Location     Type
 19204 ;;		None
 19205 ;; Auto vars:     Size  Location     Type
 19206 ;;		None
 19207 ;; Return value:  Size  Location     Type
 19208 ;;		None               void
 19209 ;; Registers used:
 19210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19211 ;; Tracked objects:
 19212 ;;		On entry : F/0
 19213 ;;		On exit  : 0/0
 19214 ;;		Unchanged: 0/0
 19215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19216 ;;      Params:         0       0       0       0       0       0       0       0       0
 19217 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19218 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19219 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19220 ;;Total ram usage:        0 bytes
 19221 ;; Hardware stack levels used:    1
 19222 ;; Hardware stack levels required when called:    5
 19223 ;; This function calls:
 19224 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19225 ;; This function is called by:
 19226 ;;		_USBDeviceTasks
 19227 ;; This function uses a non-reentrant model
 19228 ;;
 19229                           
 19230                           	psect	text89
 19231  0036BC                     __ptext89:
 19232                           	opt stack 0
 19233  0036BC                     _USBWakeFromSuspend:
 19234                           	opt stack 13
 19235                           
 19236                           ; BSR set to: 0
 19237                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 19238                           
 19239                           ; BSR set to: 0
 19240                           ;incstack = 0
 19241  0036BC  6B87               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 19245  0036BE  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19246  0036C0  0E74               	movlw	116
 19247  0036C2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19248  0036C4  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19249  0036C6  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19250  0036C8  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19251  0036CA  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19252  0036CC  EC11  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19253                           
 19254                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 19255  0036D0  9260               	bcf	3936,1,c	;volatile
 19256                           
 19257                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 19258  0036D2  9464               	bcf	3940,2,c	;volatile
 19259                           
 19260                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 19261  0036D4  D001               	goto	i2l9114
 19262  0036D6                     i2l9112:
 19263                           
 19264                           ;usb_device.c: 1977: {
 19265                           ;usb_device.c: 1978: (UIR &= 0xFB);
 19266  0036D6  9465               	bcf	3941,2,c	;volatile
 19267  0036D8                     i2l9114:
 19268  0036D8  A465               	btfss	3941,2,c	;volatile
 19269  0036DA  0012               	return		;funcret
 19270  0036DC  D7FC               	goto	i2l9112
 19271  0036DE                     __end_of_USBWakeFromSuspend:
 19272                           	opt stack 0
 19273                           pclatu	equ	0xFFB
 19274                           pclath	equ	0xFFA
 19275                           tblptru	equ	0xFF8
 19276                           tblptrh	equ	0xFF7
 19277                           tblptrl	equ	0xFF6
 19278                           tablat	equ	0xFF5
 19279                           prodh	equ	0xFF4
 19280                           prodl	equ	0xFF3
 19281                           intcon	equ	0xFF2
 19282                           postinc0	equ	0xFEE
 19283                           wreg	equ	0xFE8
 19284                           indf1	equ	0xFE7
 19285                           postdec1	equ	0xFE5
 19286                           fsr1h	equ	0xFE2
 19287                           fsr1l	equ	0xFE1
 19288                           indf2	equ	0xFDF
 19289                           postinc2	equ	0xFDE
 19290                           postdec2	equ	0xFDD
 19291                           plusw2	equ	0xFDB
 19292                           fsr2h	equ	0xFDA
 19293                           fsr2l	equ	0xFD9
 19294                           status	equ	0xFD8
 19295                           
 19296 ;; *************** function _USBSuspend *****************
 19297 ;; Defined at:
 19298 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 19299 ;; Parameters:    Size  Location     Type
 19300 ;;		None
 19301 ;; Auto vars:     Size  Location     Type
 19302 ;;		None
 19303 ;; Return value:  Size  Location     Type
 19304 ;;		None               void
 19305 ;; Registers used:
 19306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19307 ;; Tracked objects:
 19308 ;;		On entry : 0/0
 19309 ;;		On exit  : 0/0
 19310 ;;		Unchanged: 0/0
 19311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19312 ;;      Params:         0       0       0       0       0       0       0       0       0
 19313 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19314 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19315 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19316 ;;Total ram usage:        0 bytes
 19317 ;; Hardware stack levels used:    1
 19318 ;; Hardware stack levels required when called:    5
 19319 ;; This function calls:
 19320 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19321 ;; This function is called by:
 19322 ;;		_USBDeviceTasks
 19323 ;; This function uses a non-reentrant model
 19324 ;;
 19325                           
 19326                           	psect	text90
 19327  003642                     __ptext90:
 19328                           	opt stack 0
 19329  003642                     _USBSuspend:
 19330                           	opt stack 13
 19331                           
 19332                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 19333                           
 19334                           ;incstack = 0
 19335  003642  8464               	bsf	3940,2,c	;volatile
 19336                           
 19337                           ;usb_device.c: 1915: (UIR &= 0xEF);
 19338  003644  9865               	bcf	3941,4,c	;volatile
 19339                           
 19340                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 19341  003646  8260               	bsf	3936,1,c	;volatile
 19342                           
 19343                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 19344  003648  0E01               	movlw	1
 19345  00364A  0100               	movlb	0	; () banked
 19346  00364C  6F87               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 19347                           
 19348                           ; BSR set to: 0
 19349                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 19350  00364E  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19351  003650  0E75               	movlw	117
 19352  003652  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19353  003654  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19354  003656  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19355  003658  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19356  00365A  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19357  00365C  EF11  F01E         	goto	i2l6442	;wreg free
 19358  003660                     __end_of_USBSuspend:
 19359                           	opt stack 0
 19360                           pclatu	equ	0xFFB
 19361                           pclath	equ	0xFFA
 19362                           tblptru	equ	0xFF8
 19363                           tblptrh	equ	0xFF7
 19364                           tblptrl	equ	0xFF6
 19365                           tablat	equ	0xFF5
 19366                           prodh	equ	0xFF4
 19367                           prodl	equ	0xFF3
 19368                           intcon	equ	0xFF2
 19369                           postinc0	equ	0xFEE
 19370                           wreg	equ	0xFE8
 19371                           indf1	equ	0xFE7
 19372                           postdec1	equ	0xFE5
 19373                           fsr1h	equ	0xFE2
 19374                           fsr1l	equ	0xFE1
 19375                           indf2	equ	0xFDF
 19376                           postinc2	equ	0xFDE
 19377                           postdec2	equ	0xFDD
 19378                           plusw2	equ	0xFDB
 19379                           fsr2h	equ	0xFDA
 19380                           fsr2l	equ	0xFD9
 19381                           status	equ	0xFD8
 19382                           
 19383 ;; *************** function _USBStallHandler *****************
 19384 ;; Defined at:
 19385 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 19386 ;; Parameters:    Size  Location     Type
 19387 ;;		None
 19388 ;; Auto vars:     Size  Location     Type
 19389 ;;		None
 19390 ;; Return value:  Size  Location     Type
 19391 ;;		None               void
 19392 ;; Registers used:
 19393 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19394 ;; Tracked objects:
 19395 ;;		On entry : 0/0
 19396 ;;		On exit  : 0/0
 19397 ;;		Unchanged: 0/0
 19398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19399 ;;      Params:         0       0       0       0       0       0       0       0       0
 19400 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19401 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19402 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19403 ;;Total ram usage:        1 bytes
 19404 ;; Hardware stack levels used:    1
 19405 ;; This function calls:
 19406 ;;		Nothing
 19407 ;; This function is called by:
 19408 ;;		_USBDeviceTasks
 19409 ;; This function uses a non-reentrant model
 19410 ;;
 19411                           
 19412                           	psect	text91
 19413  003B1C                     __ptext91:
 19414                           	opt stack 0
 19415  003B1C                     _USBStallHandler:
 19416                           	opt stack 18
 19417                           
 19418                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 19419                           
 19420                           ;incstack = 0
 19421  003B1C  A06A               	btfss	3946,0,c	;volatile
 19422  003B1E  D01B               	goto	i2l1726
 19423                           
 19424                           ;usb_device.c: 1859: {
 19425                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 19426  003B20  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19427  003B24  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19428  003B28  0E80               	movlw	128
 19429  003B2A  18DE               	xorwf	postinc2,w,c
 19430  003B2C  E113               	bnz	i2l9136
 19431  003B2E  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19432  003B32  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19433  003B36  0E84               	movlw	132
 19434  003B38  18DE               	xorwf	postinc2,w,c
 19435  003B3A  E10C               	bnz	i2l9136
 19436                           
 19437                           ;usb_device.c: 1862: {
 19438                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19439  003B3C  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19440  003B40  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19441  003B44  0E0C               	movlw	12
 19442  003B46  6EDF               	movwf	indf2,c
 19443                           
 19444                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19445  003B48  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19446  003B4C  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19447  003B50  0E00               	movlw	0
 19448  003B52  8EDB               	bsf	plusw2,7,c
 19449  003B54                     i2l9136:
 19450                           
 19451                           ;usb_device.c: 1866: }
 19452                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 19453  003B54  906A               	bcf	3946,0,c	;volatile
 19454  003B56                     i2l1726:
 19455                           
 19456                           ;usb_device.c: 1868: }
 19457                           ;usb_device.c: 1870: (UIR &= 0xDF);
 19458  003B56  9A65               	bcf	3941,5,c	;volatile
 19459  003B58  0012               	return		;funcret
 19460  003B5A                     __end_of_USBStallHandler:
 19461                           	opt stack 0
 19462                           pclatu	equ	0xFFB
 19463                           pclath	equ	0xFFA
 19464                           tblptru	equ	0xFF8
 19465                           tblptrh	equ	0xFF7
 19466                           tblptrl	equ	0xFF6
 19467                           tablat	equ	0xFF5
 19468                           prodh	equ	0xFF4
 19469                           prodl	equ	0xFF3
 19470                           intcon	equ	0xFF2
 19471                           postinc0	equ	0xFEE
 19472                           wreg	equ	0xFE8
 19473                           indf1	equ	0xFE7
 19474                           postdec1	equ	0xFE5
 19475                           fsr1h	equ	0xFE2
 19476                           fsr1l	equ	0xFE1
 19477                           indf2	equ	0xFDF
 19478                           postinc2	equ	0xFDE
 19479                           postdec2	equ	0xFDD
 19480                           plusw2	equ	0xFDB
 19481                           fsr2h	equ	0xFDA
 19482                           fsr2l	equ	0xFD9
 19483                           status	equ	0xFD8
 19484                           
 19485 ;; *************** function _USBCtrlEPService *****************
 19486 ;; Defined at:
 19487 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 19488 ;; Parameters:    Size  Location     Type
 19489 ;;		None
 19490 ;; Auto vars:     Size  Location     Type
 19491 ;;  setup_cnt       1   31[COMRAM] unsigned char 
 19492 ;; Return value:  Size  Location     Type
 19493 ;;		None               void
 19494 ;; Registers used:
 19495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19496 ;; Tracked objects:
 19497 ;;		On entry : F/0
 19498 ;;		On exit  : 0/0
 19499 ;;		Unchanged: 0/0
 19500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19501 ;;      Params:         0       0       0       0       0       0       0       0       0
 19502 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19503 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19504 ;;      Totals:         3       0       0       0       0       0       0       0       0
 19505 ;;Total ram usage:        3 bytes
 19506 ;; Hardware stack levels used:    1
 19507 ;; Hardware stack levels required when called:    8
 19508 ;; This function calls:
 19509 ;;		_USBCtrlTrfInHandler
 19510 ;;		_USBCtrlTrfOutHandler
 19511 ;;		_USBCtrlTrfSetupHandler
 19512 ;; This function is called by:
 19513 ;;		_USBDeviceTasks
 19514 ;; This function uses a non-reentrant model
 19515 ;;
 19516                           
 19517                           	psect	text92
 19518  004B52                     __ptext92:
 19519                           	opt stack 0
 19520  004B52                     _USBCtrlEPService:
 19521                           	opt stack 10
 19522                           
 19523                           ; BSR set to: 0
 19524                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 19525                           
 19526                           ;incstack = 0
 19527  004B52  0E2D               	movlw	45
 19528  004B54  6E1F               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 19529                           
 19530                           ; BSR set to: 0
 19531                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 19532  004B56  C02D  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 19533  004B5A  0EFD               	movlw	253
 19534  004B5C  164B               	andwf	??_USBCtrlEPService,f,c
 19535  004B5E  E14B               	bnz	i2l9170
 19536                           
 19537                           ; BSR set to: 0
 19538                           ;usb_device.c: 2013: {
 19539                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 19540  004B60  90D8               	bcf	status,0,c
 19541  004B62  302D               	rrcf	_USTATcopy,w,c	;volatile
 19542  004B64  0B3F               	andlw	63
 19543  004B66  0D04               	mullw	4
 19544  004B68  0E00               	movlw	0
 19545  004B6A  24F3               	addwf	prodl,w,c
 19546  004B6C  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 19547  004B6E  0E04               	movlw	4
 19548  004B70  20F4               	addwfc	prodh,w,c
 19549  004B72  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 19550                           
 19551                           ; BSR set to: 0
 19552                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 19553  004B74  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 19554  004B78  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 19555                           
 19556                           ; BSR set to: 0
 19557                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 19558  004B7C  0E04               	movlw	4
 19559  004B7E  1A17               	xorwf	_pBDTEntryEP0OutNext,f,c
 19560                           
 19561                           ; BSR set to: 0
 19562                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 19563  004B80  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19564  004B84  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19565  004B88  30DF               	rrcf	indf2,w,c
 19566  004B8A  32E8               	rrcf	wreg,f,c
 19567  004B8C  0B0F               	andlw	15
 19568  004B8E  0A0D               	xorlw	13
 19569  004B90  E002 EFA6  F01E    	bnz	_USBCtrlTrfOutHandler
 19570                           
 19571                           ; BSR set to: 0
 19572                           ;usb_device.c: 2025: {
 19573                           ;usb_device.c: 2026: unsigned char setup_cnt;
 19574                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 19575  004B96  6A4D               	clrf	USBCtrlEPService@setup_cnt,c
 19576  004B98                     i2l9156:
 19577                           
 19578                           ; BSR set to: 0
 19579                           ;usb_device.c: 2033: {
 19580                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 19581  004B98  EE20 F002          	lfsr	2,2
 19582  004B9C  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19583  004B9E  26D9               	addwf	fsr2l,f,c
 19584  004BA0  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19585  004BA2  22DA               	addwfc	fsr2h,f,c
 19586  004BA4  CFDE F04B          	movff	postinc2,??_USBCtrlEPService
 19587  004BA8  CFDD F04C          	movff	postdec2,??_USBCtrlEPService+1
 19588  004BAC  C04B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 19589  004BB0  C04C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 19590  004BB4  0E30               	movlw	48
 19591  004BB6  244D               	addwf	USBCtrlEPService@setup_cnt,w,c
 19592  004BB8  6EE1               	movwf	fsr1l,c
 19593  004BBA  6AE2               	clrf	fsr1h,c
 19594  004BBC  0E04               	movlw	4
 19595  004BBE  22E2               	addwfc	fsr1h,f,c
 19596  004BC0  CFDF FFE7          	movff	indf2,indf1
 19597                           
 19598                           ; BSR set to: 0
 19599                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 19600  004BC4  EE20 F002          	lfsr	2,2
 19601  004BC8  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19602  004BCA  26D9               	addwf	fsr2l,f,c
 19603  004BCC  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19604  004BCE  22DA               	addwfc	fsr2h,f,c
 19605  004BD0  2ADE               	incf	postinc2,f,c
 19606  004BD2  0E00               	movlw	0
 19607  004BD4  22DD               	addwfc	postdec2,f,c
 19608                           
 19609                           ; BSR set to: 0
 19610  004BD6  2A4D               	incf	USBCtrlEPService@setup_cnt,f,c
 19611                           
 19612                           ; BSR set to: 0
 19613  004BD8  0E07               	movlw	7
 19614  004BDA  644D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 19615  004BDC  D7DD               	goto	i2l9156
 19616                           
 19617                           ; BSR set to: 0
 19618                           ;usb_device.c: 2036: }
 19619                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19620  004BDE  EE20 F002          	lfsr	2,2
 19621  004BE2  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19622  004BE4  26D9               	addwf	fsr2l,f,c
 19623  004BE6  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19624  004BE8  22DA               	addwfc	fsr2h,f,c
 19625  004BEA  0E30               	movlw	48
 19626  004BEC  6EDE               	movwf	postinc2,c
 19627  004BEE  0E04               	movlw	4
 19628  004BF0  6EDD               	movwf	postdec2,c
 19629                           
 19630                           ; BSR set to: 0
 19631                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 19632  004BF2  EFA5  F01F         	goto	_USBCtrlTrfSetupHandler	;wreg free
 19633  004BF6                     i2l9170:
 19634                           
 19635                           ; BSR set to: 0
 19636                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 19637  004BF6  502D               	movf	_USTATcopy,w,c	;volatile
 19638  004BF8  0BFD               	andlw	253
 19639  004BFA  0A04               	xorlw	4
 19640  004BFC  B4D8               	btfsc	status,2,c
 19641                           
 19642                           ; BSR set to: 0
 19643                           ;usb_device.c: 2049: {
 19644                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 19645  004BFE  EC77  F027         	call	_USBCtrlTrfInHandler	;wreg free
 19646  004C02  0012               	return		;funcret
 19647  004C04                     __end_of_USBCtrlEPService:
 19648                           	opt stack 0
 19649                           pclatu	equ	0xFFB
 19650                           pclath	equ	0xFFA
 19651                           tblptru	equ	0xFF8
 19652                           tblptrh	equ	0xFF7
 19653                           tblptrl	equ	0xFF6
 19654                           tablat	equ	0xFF5
 19655                           prodh	equ	0xFF4
 19656                           prodl	equ	0xFF3
 19657                           intcon	equ	0xFF2
 19658                           postinc0	equ	0xFEE
 19659                           wreg	equ	0xFE8
 19660                           indf1	equ	0xFE7
 19661                           postdec1	equ	0xFE5
 19662                           fsr1h	equ	0xFE2
 19663                           fsr1l	equ	0xFE1
 19664                           indf2	equ	0xFDF
 19665                           postinc2	equ	0xFDE
 19666                           postdec2	equ	0xFDD
 19667                           plusw2	equ	0xFDB
 19668                           fsr2h	equ	0xFDA
 19669                           fsr2l	equ	0xFD9
 19670                           status	equ	0xFD8
 19671                           
 19672 ;; *************** function _USBCtrlTrfSetupHandler *****************
 19673 ;; Defined at:
 19674 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 19675 ;; Parameters:    Size  Location     Type
 19676 ;;		None
 19677 ;; Auto vars:     Size  Location     Type
 19678 ;;		None
 19679 ;; Return value:  Size  Location     Type
 19680 ;;		None               void
 19681 ;; Registers used:
 19682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19683 ;; Tracked objects:
 19684 ;;		On entry : F/0
 19685 ;;		On exit  : 0/0
 19686 ;;		Unchanged: 0/0
 19687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19688 ;;      Params:         0       0       0       0       0       0       0       0       0
 19689 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19690 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19691 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19692 ;;Total ram usage:        0 bytes
 19693 ;; Hardware stack levels used:    1
 19694 ;; Hardware stack levels required when called:    7
 19695 ;; This function calls:
 19696 ;;		_USBCheckStdRequest
 19697 ;;		_USBCtrlEPServiceComplete
 19698 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19699 ;; This function is called by:
 19700 ;;		_USBCtrlEPService
 19701 ;; This function uses a non-reentrant model
 19702 ;;
 19703                           
 19704                           	psect	text93
 19705  003F4A                     __ptext93:
 19706                           	opt stack 0
 19707  003F4A                     _USBCtrlTrfSetupHandler:
 19708                           	opt stack 10
 19709                           
 19710                           ; BSR set to: 0
 19711                           ;usb_device.c: 2102: shortPacketStatus = 0;
 19712                           
 19713                           ;incstack = 0
 19714  003F4A  6A2B               	clrf	_shortPacketStatus,c	;volatile
 19715                           
 19716                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 19717  003F4C  6A1E               	clrf	_USBDeferStatusStagePacket,c	;volatile
 19718                           
 19719                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 19720  003F4E  6B88               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19721                           
 19722                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 19723  003F50  6B89               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19724                           
 19725                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 19726  003F52  6B86               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 19727                           
 19728                           ;usb_device.c: 2107: controlTransferState = 0;
 19729  003F54  6A21               	clrf	_controlTransferState,c	;volatile
 19730                           
 19731                           ; BSR set to: 0
 19732                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 19733  003F56  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19734  003F5A  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19735  003F5E  0E7F               	movlw	127
 19736  003F60  16DF               	andwf	indf2,f,c
 19737                           
 19738                           ; BSR set to: 0
 19739                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19740  003F62  0E04               	movlw	4
 19741  003F64  1A0F               	xorwf	_pBDTEntryIn,f,c
 19742                           
 19743                           ; BSR set to: 0
 19744                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 19745  003F66  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19746  003F6A  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19747  003F6E  0E7F               	movlw	127
 19748  003F70  16DF               	andwf	indf2,f,c
 19749                           
 19750                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19751  003F72  0E04               	movlw	4
 19752  003F74  1A0F               	xorwf	_pBDTEntryIn,f,c
 19753                           
 19754                           ; BSR set to: 0
 19755                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 19756  003F76  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19757  003F7A  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19758  003F7E  0E7F               	movlw	127
 19759  003F80  16DF               	andwf	indf2,f,c
 19760                           
 19761                           ; BSR set to: 0
 19762                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 19763  003F82  6A0C               	clrf	_inPipes+3,c	;volatile
 19764                           
 19765                           ; BSR set to: 0
 19766                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 19767  003F84  6A0D               	clrf	_inPipes+4,c	;volatile
 19768  003F86  6A0E               	clrf	_inPipes+5,c	;volatile
 19769                           
 19770                           ; BSR set to: 0
 19771                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 19772  003F88  6A04               	clrf	_outPipes+3,c	;volatile
 19773                           
 19774                           ; BSR set to: 0
 19775                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 19776  003F8A  6A05               	clrf	_outPipes+4,c	;volatile
 19777  003F8C  6A06               	clrf	_outPipes+5,c	;volatile
 19778                           
 19779                           ; BSR set to: 0
 19780                           ;usb_device.c: 2131: USBCheckStdRequest();
 19781  003F8E  EC5F  F024         	call	_USBCheckStdRequest	;wreg free
 19782                           
 19783                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 19784  003F92  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19785  003F94  0E03               	movlw	3
 19786  003F96  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19787  003F98  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19788  003F9A  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19789  003F9C  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19790  003F9E  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19791  003FA0  EC11  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19792                           
 19793                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 19794  003FA4  EFF9  F029         	goto	_USBCtrlEPServiceComplete	;wreg free
 19795  003FA8                     __end_of_USBCtrlTrfSetupHandler:
 19796                           	opt stack 0
 19797                           pclatu	equ	0xFFB
 19798                           pclath	equ	0xFFA
 19799                           tblptru	equ	0xFF8
 19800                           tblptrh	equ	0xFF7
 19801                           tblptrl	equ	0xFF6
 19802                           tablat	equ	0xFF5
 19803                           prodh	equ	0xFF4
 19804                           prodl	equ	0xFF3
 19805                           intcon	equ	0xFF2
 19806                           postinc0	equ	0xFEE
 19807                           wreg	equ	0xFE8
 19808                           indf1	equ	0xFE7
 19809                           postdec1	equ	0xFE5
 19810                           fsr1h	equ	0xFE2
 19811                           fsr1l	equ	0xFE1
 19812                           indf2	equ	0xFDF
 19813                           postinc2	equ	0xFDE
 19814                           postdec2	equ	0xFDD
 19815                           plusw2	equ	0xFDB
 19816                           fsr2h	equ	0xFDA
 19817                           fsr2l	equ	0xFD9
 19818                           status	equ	0xFD8
 19819                           
 19820 ;; *************** function _USBCtrlEPServiceComplete *****************
 19821 ;; Defined at:
 19822 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 19823 ;; Parameters:    Size  Location     Type
 19824 ;;		None
 19825 ;; Auto vars:     Size  Location     Type
 19826 ;;		None
 19827 ;; Return value:  Size  Location     Type
 19828 ;;		None               void
 19829 ;; Registers used:
 19830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19831 ;; Tracked objects:
 19832 ;;		On entry : 0/0
 19833 ;;		On exit  : 0/0
 19834 ;;		Unchanged: 0/0
 19835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19836 ;;      Params:         0       0       0       0       0       0       0       0       0
 19837 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19838 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19839 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19840 ;;Total ram usage:        0 bytes
 19841 ;; Hardware stack levels used:    1
 19842 ;; Hardware stack levels required when called:    2
 19843 ;; This function calls:
 19844 ;;		_USBCtrlEPAllowDataStage
 19845 ;;		_USBCtrlEPAllowStatusStage
 19846 ;; This function is called by:
 19847 ;;		_USBCtrlTrfSetupHandler
 19848 ;; This function uses a non-reentrant model
 19849 ;;
 19850                           
 19851                           	psect	text94
 19852  0053F2                     __ptext94:
 19853                           	opt stack 0
 19854  0053F2                     _USBCtrlEPServiceComplete:
 19855                           	opt stack 14
 19856                           
 19857                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 19858                           
 19859                           ;incstack = 0
 19860  0053F2  9860               	bcf	3936,4,c	;volatile
 19861                           
 19862                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 19863  0053F4  BE0C               	btfsc	_inPipes+3,7,c	;volatile
 19864  0053F6  D037               	goto	i2l1650
 19865                           
 19866                           ;usb_device.c: 1295: {
 19867                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 19868  0053F8  AE04               	btfss	_outPipes+3,7,c	;volatile
 19869  0053FA  D00A               	goto	i2l7048
 19870                           
 19871                           ;usb_device.c: 1297: {
 19872                           ;usb_device.c: 1298: controlTransferState = 2;
 19873  0053FC  0E02               	movlw	2
 19874  0053FE  6E21               	movwf	_controlTransferState,c	;volatile
 19875                           
 19876                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 19877  005400  0100               	movlb	0	; () banked
 19878  005402  5189               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 19879  005404  E102               	bnz	i2l7044
 19880                           
 19881                           ; BSR set to: 0
 19882                           ;usb_device.c: 1310: {
 19883                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 19884  005406  EC37  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
 19885  00540A                     i2l7044:
 19886                           
 19887                           ; BSR set to: 0
 19888                           ;usb_device.c: 1312: }
 19889                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 19890  00540A  6B8C               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19891                           
 19892                           ; BSR set to: 0
 19893                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 19894  00540C  6B8B               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19895                           
 19896                           ;usb_device.c: 1318: }
 19897  00540E  0012               	return	
 19898  005410                     i2l7048:
 19899                           
 19900                           ;usb_device.c: 1319: else
 19901                           ;usb_device.c: 1320: {
 19902                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 19903  005410  EE20 F001          	lfsr	2,1
 19904  005414  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19905  005416  26D9               	addwf	fsr2l,f,c
 19906  005418  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19907  00541A  22DA               	addwfc	fsr2h,f,c
 19908  00541C  0E08               	movlw	8
 19909  00541E  6EDF               	movwf	indf2,c
 19910                           
 19911                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19912  005420  EE20 F002          	lfsr	2,2
 19913  005424  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19914  005426  26D9               	addwf	fsr2l,f,c
 19915  005428  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19916  00542A  22DA               	addwfc	fsr2h,f,c
 19917  00542C  0E30               	movlw	48
 19918  00542E  6EDE               	movwf	postinc2,c
 19919  005430  0E04               	movlw	4
 19920  005432  6EDD               	movwf	postdec2,c
 19921                           
 19922                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19923  005434  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19924  005438  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19925  00543C  0E0C               	movlw	12
 19926  00543E  6EDF               	movwf	indf2,c
 19927                           
 19928                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19929  005440  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19930  005444  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19931  005448  0E00               	movlw	0
 19932  00544A  8EDB               	bsf	plusw2,7,c
 19933                           
 19934                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 19935  00544C  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19936  005450  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19937  005454  0E04               	movlw	4
 19938  005456  6EDF               	movwf	indf2,c
 19939                           
 19940                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19941  005458  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 19942  00545C  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19943  005460  0E00               	movlw	0
 19944  005462  8EDB               	bsf	plusw2,7,c
 19945  005464  0C00               	retlw	0
 19946  005466                     i2l1650:
 19947                           
 19948                           ;usb_device.c: 1333: else
 19949                           ;usb_device.c: 1334: {
 19950                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 19951  005466  0104               	movlb	4	; () banked
 19952  005468  AF30               	btfss	48,7,b	;volatile
 19953  00546A  D00E               	goto	i2l7068
 19954                           
 19955                           ; BSR set to: 4
 19956                           ;usb_device.c: 1336: {
 19957                           ;usb_device.c: 1337: controlTransferState = 1;
 19958  00546C  0E01               	movlw	1
 19959  00546E  6E21               	movwf	_controlTransferState,c	;volatile
 19960                           
 19961                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 19962  005470  0100               	movlb	0	; () banked
 19963  005472  5188               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 19964  005474  E102               	bnz	i2l7060
 19965                           
 19966                           ; BSR set to: 0
 19967                           ;usb_device.c: 1352: {
 19968                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 19969  005476  EC37  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
 19970  00547A                     i2l7060:
 19971                           
 19972                           ; BSR set to: 0
 19973                           ;usb_device.c: 1354: }
 19974                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 19975  00547A  6B8C               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19976                           
 19977                           ; BSR set to: 0
 19978                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 19979  00547C  6B8B               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 19980                           
 19981                           ; BSR set to: 0
 19982                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 19983  00547E  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 19984  005480  A4D8               	btfss	status,2,c
 19985  005482  0012               	return	
 19986                           
 19987                           ; BSR set to: 0
 19988                           ;usb_device.c: 1379: {
 19989                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 19990  005484  EFB8  F026         	goto	_USBCtrlEPAllowStatusStage	;wreg free
 19991  005488                     i2l7068:
 19992                           
 19993                           ; BSR set to: 4
 19994                           ;usb_device.c: 1383: else
 19995                           ;usb_device.c: 1384: {
 19996                           ;usb_device.c: 1395: controlTransferState = 2;
 19997  005488  0E02               	movlw	2
 19998  00548A  6E21               	movwf	_controlTransferState,c	;volatile
 19999                           
 20000                           ; BSR set to: 4
 20001                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 20002  00548C  EE20 F001          	lfsr	2,1
 20003  005490  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20004  005492  26D9               	addwf	fsr2l,f,c
 20005  005494  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20006  005496  22DA               	addwfc	fsr2h,f,c
 20007  005498  0E08               	movlw	8
 20008  00549A  6EDF               	movwf	indf2,c
 20009                           
 20010                           ; BSR set to: 4
 20011                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20012  00549C  EE20 F002          	lfsr	2,2
 20013  0054A0  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20014  0054A2  26D9               	addwf	fsr2l,f,c
 20015  0054A4  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20016  0054A6  22DA               	addwfc	fsr2h,f,c
 20017  0054A8  0E30               	movlw	48
 20018  0054AA  6EDE               	movwf	postinc2,c
 20019  0054AC  0E04               	movlw	4
 20020  0054AE  6EDD               	movwf	postdec2,c
 20021                           
 20022                           ; BSR set to: 4
 20023                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 20024  0054B0  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20025  0054B4  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20026  0054B8  6EDF               	movwf	indf2,c
 20027                           
 20028                           ; BSR set to: 4
 20029                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20030  0054BA  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20031  0054BE  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20032  0054C2  0E00               	movlw	0
 20033  0054C4  8EDB               	bsf	plusw2,7,c
 20034                           
 20035                           ; BSR set to: 4
 20036                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 20037  0054C6  0100               	movlb	0	; () banked
 20038  0054C8  6B8C               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20039                           
 20040                           ; BSR set to: 0
 20041                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 20042  0054CA  6B8B               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20043                           
 20044                           ; BSR set to: 0
 20045                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 20046  0054CC  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20047  0054CE  E102 EFB8  F026    	bz	_USBCtrlEPAllowStatusStage
 20048  0054D4  0012               	return	
 20049  0054D6                     __end_of_USBCtrlEPServiceComplete:
 20050                           	opt stack 0
 20051                           pclatu	equ	0xFFB
 20052                           pclath	equ	0xFFA
 20053                           tblptru	equ	0xFF8
 20054                           tblptrh	equ	0xFF7
 20055                           tblptrl	equ	0xFF6
 20056                           tablat	equ	0xFF5
 20057                           prodh	equ	0xFF4
 20058                           prodl	equ	0xFF3
 20059                           intcon	equ	0xFF2
 20060                           postinc0	equ	0xFEE
 20061                           wreg	equ	0xFE8
 20062                           indf1	equ	0xFE7
 20063                           postdec1	equ	0xFE5
 20064                           fsr1h	equ	0xFE2
 20065                           fsr1l	equ	0xFE1
 20066                           indf2	equ	0xFDF
 20067                           postinc2	equ	0xFDE
 20068                           postdec2	equ	0xFDD
 20069                           plusw2	equ	0xFDB
 20070                           fsr2h	equ	0xFDA
 20071                           fsr2l	equ	0xFD9
 20072                           status	equ	0xFD8
 20073                           
 20074 ;; *************** function _USBCtrlEPAllowDataStage *****************
 20075 ;; Defined at:
 20076 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 20077 ;; Parameters:    Size  Location     Type
 20078 ;;		None
 20079 ;; Auto vars:     Size  Location     Type
 20080 ;;		None
 20081 ;; Return value:  Size  Location     Type
 20082 ;;		None               void
 20083 ;; Registers used:
 20084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20085 ;; Tracked objects:
 20086 ;;		On entry : F/0
 20087 ;;		On exit  : F/0
 20088 ;;		Unchanged: 0/0
 20089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20090 ;;      Params:         0       0       0       0       0       0       0       0       0
 20091 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20092 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20093 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20094 ;;Total ram usage:        0 bytes
 20095 ;; Hardware stack levels used:    1
 20096 ;; Hardware stack levels required when called:    1
 20097 ;; This function calls:
 20098 ;;		_USBCtrlTrfTxService
 20099 ;; This function is called by:
 20100 ;;		_USBCtrlEPServiceComplete
 20101 ;; This function uses a non-reentrant model
 20102 ;;
 20103                           
 20104                           	psect	text95
 20105  00466E                     __ptext95:
 20106                           	opt stack 0
 20107  00466E                     _USBCtrlEPAllowDataStage:
 20108                           	opt stack 14
 20109                           
 20110                           ; BSR set to: 0
 20111                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 20112                           
 20113                           ;incstack = 0
 20114  00466E  6B88               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20115                           
 20116                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 20117  004670  6B89               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20118                           
 20119                           ; BSR set to: 0
 20120                           ;usb_device.c: 1178: if(controlTransferState == 2)
 20121  004672  0E02               	movlw	2
 20122  004674  1821               	xorwf	_controlTransferState,w,c	;volatile
 20123  004676  E11F               	bnz	i2l6708
 20124                           
 20125                           ; BSR set to: 0
 20126                           ;usb_device.c: 1179: {
 20127                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 20128  004678  EE20 F001          	lfsr	2,1
 20129  00467C  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20130  00467E  26D9               	addwf	fsr2l,f,c
 20131  004680  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20132  004682  22DA               	addwfc	fsr2h,f,c
 20133  004684  0E08               	movlw	8
 20134  004686  6EDF               	movwf	indf2,c
 20135                           
 20136                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 20137  004688  EE20 F002          	lfsr	2,2
 20138  00468C  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20139  00468E  26D9               	addwf	fsr2l,f,c
 20140  004690  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20141  004692  22DA               	addwfc	fsr2h,f,c
 20142  004694  0E38               	movlw	56
 20143  004696  6EDE               	movwf	postinc2,c
 20144  004698  0E04               	movlw	4
 20145  00469A  6EDD               	movwf	postdec2,c
 20146                           
 20147                           ; BSR set to: 0
 20148                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 20149  00469C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20150  0046A0  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20151  0046A4  0E48               	movlw	72
 20152  0046A6  6EDF               	movwf	indf2,c
 20153                           
 20154                           ; BSR set to: 0
 20155                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20156  0046A8  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20157  0046AC  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20158  0046B0  0E00               	movlw	0
 20159  0046B2  8EDB               	bsf	plusw2,7,c
 20160                           
 20161                           ;usb_device.c: 1185: }
 20162  0046B4  0C00               	retlw	0
 20163  0046B6                     i2l6708:
 20164                           
 20165                           ; BSR set to: 0
 20166                           ;usb_device.c: 1186: else
 20167                           ;usb_device.c: 1187: {
 20168                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 20169  0046B6  500D               	movf	_inPipes+4,w,c	;volatile
 20170  0046B8  0104               	movlb	4	; () banked
 20171  0046BA  5D36               	subwf	54,w,b	;volatile
 20172  0046BC  500E               	movf	_inPipes+5,w,c	;volatile
 20173  0046BE  5937               	subwfb	55,w,b	;volatile
 20174  0046C0  E204               	bc	i2l6712
 20175                           
 20176                           ; BSR set to: 4
 20177                           ;usb_device.c: 1191: {
 20178                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 20179  0046C2  C436 F00D          	movff	1078,_inPipes+4	;volatile
 20180  0046C6  C437 F00E          	movff	1079,_inPipes+5	;volatile
 20181  0046CA                     i2l6712:
 20182                           
 20183                           ; BSR set to: 4
 20184                           ;usb_device.c: 1193: }
 20185                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 20186  0046CA  EC16  F027         	call	_USBCtrlTrfTxService	;wreg free
 20187                           
 20188                           ; BSR set to: 0
 20189                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 20190  0046CE  EE20 F002          	lfsr	2,2
 20191  0046D2  500F               	movf	_pBDTEntryIn,w,c
 20192  0046D4  26D9               	addwf	fsr2l,f,c
 20193  0046D6  5010               	movf	_pBDTEntryIn+1,w,c
 20194  0046D8  22DA               	addwfc	fsr2h,f,c
 20195  0046DA  0E38               	movlw	56
 20196  0046DC  6EDE               	movwf	postinc2,c
 20197  0046DE  0E04               	movlw	4
 20198  0046E0  6EDD               	movwf	postdec2,c
 20199                           
 20200                           ; BSR set to: 0
 20201                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20202  0046E2  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20203  0046E6  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20204  0046EA  0E48               	movlw	72
 20205  0046EC  6EDF               	movwf	indf2,c
 20206                           
 20207                           ; BSR set to: 0
 20208                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20209  0046EE  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20210  0046F2  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20211  0046F6  0E00               	movlw	0
 20212  0046F8  8EDB               	bsf	plusw2,7,c
 20213                           
 20214                           ; BSR set to: 0
 20215  0046FA  0C00               	retlw	0	;funcret
 20216  0046FC                     __end_of_USBCtrlEPAllowDataStage:
 20217                           	opt stack 0
 20218                           pclatu	equ	0xFFB
 20219                           pclath	equ	0xFFA
 20220                           tblptru	equ	0xFF8
 20221                           tblptrh	equ	0xFF7
 20222                           tblptrl	equ	0xFF6
 20223                           tablat	equ	0xFF5
 20224                           prodh	equ	0xFF4
 20225                           prodl	equ	0xFF3
 20226                           intcon	equ	0xFF2
 20227                           postinc0	equ	0xFEE
 20228                           wreg	equ	0xFE8
 20229                           indf1	equ	0xFE7
 20230                           postdec1	equ	0xFE5
 20231                           fsr1h	equ	0xFE2
 20232                           fsr1l	equ	0xFE1
 20233                           indf2	equ	0xFDF
 20234                           postinc2	equ	0xFDE
 20235                           postdec2	equ	0xFDD
 20236                           plusw2	equ	0xFDB
 20237                           fsr2h	equ	0xFDA
 20238                           fsr2l	equ	0xFD9
 20239                           status	equ	0xFD8
 20240                           
 20241 ;; *************** function _USBCheckStdRequest *****************
 20242 ;; Defined at:
 20243 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 20244 ;; Parameters:    Size  Location     Type
 20245 ;;		None
 20246 ;; Auto vars:     Size  Location     Type
 20247 ;;		None
 20248 ;; Return value:  Size  Location     Type
 20249 ;;		None               void
 20250 ;; Registers used:
 20251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20252 ;; Tracked objects:
 20253 ;;		On entry : F/0
 20254 ;;		On exit  : 0/0
 20255 ;;		Unchanged: 0/0
 20256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20257 ;;      Params:         0       0       0       0       0       0       0       0       0
 20258 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20259 ;;      Temps:          1       0       0       0       0       0       0       0       0
 20260 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20261 ;;Total ram usage:        1 bytes
 20262 ;; Hardware stack levels used:    1
 20263 ;; Hardware stack levels required when called:    6
 20264 ;; This function calls:
 20265 ;;		_USBStdFeatureReqHandler
 20266 ;;		_USBStdGetDscHandler
 20267 ;;		_USBStdGetStatusHandler
 20268 ;;		_USBStdSetCfgHandler
 20269 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20270 ;; This function is called by:
 20271 ;;		_USBCtrlTrfSetupHandler
 20272 ;; This function uses a non-reentrant model
 20273 ;;
 20274                           
 20275                           	psect	text96
 20276  0048BE                     __ptext96:
 20277                           	opt stack 0
 20278  0048BE                     _USBCheckStdRequest:
 20279                           	opt stack 10
 20280                           
 20281                           ; BSR set to: 0
 20282                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 20283                           
 20284                           ; BSR set to: 0
 20285                           ;incstack = 0
 20286  0048BE  0104               	movlb	4	; () banked
 20287  0048C0  3930               	swapf	48,w,b	;volatile
 20288  0048C2  32E8               	rrcf	wreg,f,c
 20289  0048C4  0B03               	andlw	3
 20290  0048C6  E02A               	bz	i2l7170
 20291  0048C8  0012               	return	
 20292  0048CA                     i2l1777:
 20293                           
 20294                           ; BSR set to: 4
 20295                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 20296  0048CA  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20297                           
 20298                           ; BSR set to: 4
 20299                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 20300  0048CC  0E08               	movlw	8
 20301  0048CE  0100               	movlb	0	; () banked
 20302  0048D0  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 20303                           
 20304                           ;usb_device.c: 2327: break;
 20305  0048D2  0C08               	retlw	8
 20306  0048D4                     i2l7144:
 20307                           
 20308                           ; BSR set to: 4
 20309                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 20310  0048D4  0E2C               	movlw	low _USBActiveConfiguration
 20311  0048D6  6E09               	movwf	_inPipes,c	;volatile
 20312  0048D8  6A0A               	clrf	_inPipes+1,c	;volatile
 20313                           
 20314                           ; BSR set to: 4
 20315                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20316  0048DA  800C               	bsf	_inPipes+3,0,c	;volatile
 20317                           
 20318                           ; BSR set to: 4
 20319                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 20320  0048DC  0E01               	movlw	1
 20321  0048DE  6E0D               	movwf	_inPipes+4,c	;volatile
 20322                           
 20323                           ; BSR set to: 4
 20324                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 20325  0048E0  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20326                           
 20327                           ;usb_device.c: 2339: break;
 20328  0048E2  0C01               	retlw	1
 20329  0048E4                     i2l7156:
 20330                           
 20331                           ; BSR set to: 4
 20332                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 20333  0048E4  5134               	movf	52,w,b	;volatile
 20334  0048E6  0FC6               	addlw	low _USBAlternateInterface
 20335  0048E8  6E4A               	movwf	??_USBCheckStdRequest& (0+255),c
 20336  0048EA  C04A  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
 20337  0048EE  6A0A               	clrf	_inPipes+1,c	;volatile
 20338                           
 20339                           ; BSR set to: 4
 20340                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20341  0048F0  800C               	bsf	_inPipes+3,0,c	;volatile
 20342                           
 20343                           ; BSR set to: 4
 20344                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 20345  0048F2  0E01               	movlw	1
 20346  0048F4  6E0D               	movwf	_inPipes+4,c	;volatile
 20347                           
 20348                           ; BSR set to: 4
 20349                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 20350  0048F6  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20351                           
 20352                           ;usb_device.c: 2352: break;
 20353  0048F8  0C01               	retlw	1
 20354  0048FA                     i2l1786:
 20355                           
 20356                           ; BSR set to: 4
 20357                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 20358  0048FA  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20359                           
 20360                           ; BSR set to: 4
 20361                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 20362  0048FC  5134               	movf	52,w,b	;volatile
 20363  0048FE  0FC6               	addlw	low _USBAlternateInterface
 20364  004900  6ED9               	movwf	fsr2l,c
 20365  004902  6ADA               	clrf	fsr2h,c
 20366  004904  C432 FFDF          	movff	1074,indf2	;volatile
 20367                           
 20368                           ;usb_device.c: 2356: break;
 20369  004908  0012               	return	
 20370  00490A                     i2l7166:
 20371                           
 20372                           ; BSR set to: 4
 20373                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 20374  00490A  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20375  00490C  0E02               	movlw	2
 20376  00490E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20377  004910  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20378  004912  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20379  004914  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20380  004916  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20381  004918  EF11  F01E         	goto	i2l6442	;wreg free
 20382  00491C                     i2l7170:
 20383                           
 20384                           ; BSR set to: 4
 20385  00491C  5131               	movf	49,w,b	;volatile
 20386                           
 20387                           ; Switch size 1, requested type "speed"
 20388                           ; Number of cases is 11, Range of values is 0 to 12
 20389                           ; switch strategies available:
 20390                           ; Name         Instructions Cycles
 20391                           ; simple_byte           34    18 (average)
 20392                           ;	Chosen strategy is simple_byte
 20393  00491E  E102 EFED  F021    	bz	_USBStdGetStatusHandler
 20394  004924  0A01               	xorlw	1	; case 1
 20395  004926  E102 EFDF  F02E    	bz	_USBStdFeatureReqHandler
 20396  00492C  0A02               	xorlw	2	; case 3
 20397  00492E  E102 EFDF  F02E    	bz	_USBStdFeatureReqHandler
 20398  004934  0A06               	xorlw	6	; case 5
 20399  004936  E0C9               	bz	i2l1777
 20400  004938  0A03               	xorlw	3	; case 6
 20401  00493A  E102 EF5B  F02C    	bz	_USBStdGetDscHandler
 20402  004940  0A01               	xorlw	1	; case 7
 20403  004942  E0E3               	bz	i2l7166
 20404  004944  0A0F               	xorlw	15	; case 8
 20405  004946  E0C6               	bz	i2l7144
 20406  004948  0A01               	xorlw	1	; case 9
 20407  00494A  E102 EFFE  F024    	bz	_USBStdSetCfgHandler
 20408  004950  0A03               	xorlw	3	; case 10
 20409  004952  E0C8               	bz	i2l7156
 20410  004954  0A01               	xorlw	1	; case 11
 20411  004956  E0D1               	bz	i2l1786
 20412  004958  0A07               	xorlw	7	; case 12
 20413  00495A  0012               	return	
 20414  00495C                     __end_of_USBCheckStdRequest:
 20415                           	opt stack 0
 20416                           pclatu	equ	0xFFB
 20417                           pclath	equ	0xFFA
 20418                           tblptru	equ	0xFF8
 20419                           tblptrh	equ	0xFF7
 20420                           tblptrl	equ	0xFF6
 20421                           tablat	equ	0xFF5
 20422                           prodh	equ	0xFF4
 20423                           prodl	equ	0xFF3
 20424                           intcon	equ	0xFF2
 20425                           postinc0	equ	0xFEE
 20426                           wreg	equ	0xFE8
 20427                           indf1	equ	0xFE7
 20428                           postdec1	equ	0xFE5
 20429                           fsr1h	equ	0xFE2
 20430                           fsr1l	equ	0xFE1
 20431                           indf2	equ	0xFDF
 20432                           postinc2	equ	0xFDE
 20433                           postdec2	equ	0xFDD
 20434                           plusw2	equ	0xFDB
 20435                           fsr2h	equ	0xFDA
 20436                           fsr2l	equ	0xFD9
 20437                           status	equ	0xFD8
 20438                           
 20439 ;; *************** function _USBStdSetCfgHandler *****************
 20440 ;; Defined at:
 20441 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 20442 ;; Parameters:    Size  Location     Type
 20443 ;;		None
 20444 ;; Auto vars:     Size  Location     Type
 20445 ;;  i               1   21[COMRAM] unsigned char 
 20446 ;; Return value:  Size  Location     Type
 20447 ;;		None               void
 20448 ;; Registers used:
 20449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20450 ;; Tracked objects:
 20451 ;;		On entry : B/4
 20452 ;;		On exit  : F/0
 20453 ;;		Unchanged: 0/0
 20454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20455 ;;      Params:         0       0       0       0       0       0       0       0       0
 20456 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20457 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20458 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20459 ;;Total ram usage:        1 bytes
 20460 ;; Hardware stack levels used:    1
 20461 ;; Hardware stack levels required when called:    5
 20462 ;; This function calls:
 20463 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20464 ;;		i2_memset
 20465 ;; This function is called by:
 20466 ;;		_USBCheckStdRequest
 20467 ;; This function uses a non-reentrant model
 20468 ;;
 20469                           
 20470                           	psect	text97
 20471  0049FC                     __ptext97:
 20472                           	opt stack 0
 20473  0049FC                     _USBStdSetCfgHandler:
 20474                           	opt stack 10
 20475                           
 20476                           ;usb_device.c: 1631: uint8_t i;
 20477                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 20478                           
 20479                           ;incstack = 0
 20480  0049FC  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20481                           
 20482                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 20483  0049FE  0E6B               	movlw	107
 20484  004A00  6E2E               	movwf	i2memset@p1,c
 20485  004A02  0E0F               	movlw	15
 20486  004A04  6E2F               	movwf	i2memset@p1+1,c
 20487  004A06  6A31               	clrf	i2memset@c+1,c
 20488  004A08  6A30               	clrf	i2memset@c,c
 20489  004A0A  6A33               	clrf	i2memset@n+1,c
 20490  004A0C  0E02               	movlw	2
 20491  004A0E  6E32               	movwf	i2memset@n,c
 20492  004A10  EC08  F01C         	call	i2_memset	;wreg free
 20493                           
 20494                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 20495  004A14  6A2E               	clrf	i2memset@p1,c
 20496  004A16  0E04               	movlw	4
 20497  004A18  6E2F               	movwf	i2memset@p1+1,c
 20498  004A1A  6A31               	clrf	i2memset@c+1,c
 20499  004A1C  6A30               	clrf	i2memset@c,c
 20500  004A1E  6A33               	clrf	i2memset@n+1,c
 20501  004A20  0E30               	movlw	48
 20502  004A22  6E32               	movwf	i2memset@n,c
 20503  004A24  EC08  F01C         	call	i2_memset	;wreg free
 20504                           
 20505                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 20506  004A28  8C60               	bsf	3936,6,c	;volatile
 20507                           
 20508                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 20509  004A2A  6A43               	clrf	USBStdSetCfgHandler@i,c
 20510  004A2C                     i2l6732:
 20511                           
 20512                           ;usb_device.c: 1649: {
 20513                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 20514  004A2C  5043               	movf	USBStdSetCfgHandler@i,w,c
 20515  004A2E  0F6A               	addlw	low _ep_data_in
 20516  004A30  6ED9               	movwf	fsr2l,c
 20517  004A32  6ADA               	clrf	fsr2h,c
 20518  004A34  6ADF               	clrf	indf2,c
 20519                           
 20520                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 20521  004A36  5043               	movf	USBStdSetCfgHandler@i,w,c
 20522  004A38  0F6D               	addlw	low _ep_data_out
 20523  004A3A  6ED9               	movwf	fsr2l,c
 20524  004A3C  6ADA               	clrf	fsr2h,c
 20525  004A3E  6ADF               	clrf	indf2,c
 20526  004A40  2A43               	incf	USBStdSetCfgHandler@i,f,c
 20527  004A42  0E02               	movlw	2
 20528  004A44  6443               	cpfsgt	USBStdSetCfgHandler@i,c
 20529  004A46  D7F2               	goto	i2l6732
 20530                           
 20531                           ;usb_device.c: 1652: }
 20532                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 20533  004A48  0EC6               	movlw	low _USBAlternateInterface
 20534  004A4A  6E2E               	movwf	i2memset@p1,c
 20535  004A4C  6A2F               	clrf	i2memset@p1+1,c
 20536  004A4E  6A31               	clrf	i2memset@c+1,c
 20537  004A50  6A30               	clrf	i2memset@c,c
 20538  004A52  6A33               	clrf	i2memset@n+1,c
 20539  004A54  0E02               	movlw	2
 20540  004A56  6E32               	movwf	i2memset@n,c
 20541  004A58  EC08  F01C         	call	i2_memset	;wreg free
 20542                           
 20543                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 20544  004A5C  9C60               	bcf	3936,6,c	;volatile
 20545                           
 20546                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 20547  004A5E  0E08               	movlw	8
 20548  004A60  6E0F               	movwf	_pBDTEntryIn,c
 20549  004A62  0E04               	movlw	4
 20550  004A64  6E10               	movwf	_pBDTEntryIn+1,c
 20551                           
 20552                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 20553  004A66  0E00               	movlw	0
 20554  004A68  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 20555  004A6A  0E04               	movlw	4
 20556  004A6C  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 20557                           
 20558                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 20559  004A6E  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 20560  004A72  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 20561                           
 20562                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 20563  004A76  C432 F02C          	movff	1074,_USBActiveConfiguration	;volatile
 20564                           
 20565                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 20566  004A7A  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 20567  004A7C  E104               	bnz	i2l6754
 20568                           
 20569                           ;usb_device.c: 1671: {
 20570                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 20571  004A7E  0E10               	movlw	16
 20572  004A80  0100               	movlb	0	; () banked
 20573  004A82  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 20574                           
 20575                           ;usb_device.c: 1674: }
 20576  004A84  0C10               	retlw	16
 20577  004A86                     i2l6754:
 20578                           
 20579                           ;usb_device.c: 1675: else
 20580                           ;usb_device.c: 1676: {
 20581                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 20582  004A86  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20583  004A88  0E01               	movlw	1
 20584  004A8A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20585  004A8C  0E2C               	movlw	low _USBActiveConfiguration
 20586  004A8E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20587  004A90  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20588  004A92  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20589  004A94  0E01               	movlw	1
 20590  004A96  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20591  004A98  EC11  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20592                           
 20593                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 20594  004A9C  0E20               	movlw	32
 20595  004A9E  0100               	movlb	0	; () banked
 20596  004AA0  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 20597                           
 20598                           ; BSR set to: 0
 20599  004AA2  0C20               	retlw	32	;funcret
 20600  004AA4                     __end_of_USBStdSetCfgHandler:
 20601                           	opt stack 0
 20602                           pclatu	equ	0xFFB
 20603                           pclath	equ	0xFFA
 20604                           tblptru	equ	0xFF8
 20605                           tblptrh	equ	0xFF7
 20606                           tblptrl	equ	0xFF6
 20607                           tablat	equ	0xFF5
 20608                           prodh	equ	0xFF4
 20609                           prodl	equ	0xFF3
 20610                           intcon	equ	0xFF2
 20611                           postinc0	equ	0xFEE
 20612                           wreg	equ	0xFE8
 20613                           indf1	equ	0xFE7
 20614                           postdec1	equ	0xFE5
 20615                           fsr1h	equ	0xFE2
 20616                           fsr1l	equ	0xFE1
 20617                           indf2	equ	0xFDF
 20618                           postinc2	equ	0xFDE
 20619                           postdec2	equ	0xFDD
 20620                           plusw2	equ	0xFDB
 20621                           fsr2h	equ	0xFDA
 20622                           fsr2l	equ	0xFD9
 20623                           status	equ	0xFD8
 20624                           
 20625 ;; *************** function i2_memset *****************
 20626 ;; Defined at:
 20627 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 20628 ;; Parameters:    Size  Location     Type
 20629 ;;  p1              2    0[COMRAM] PTR void 
 20630 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 20631 ;;  c               2    2[COMRAM] int 
 20632 ;;  n               2    4[COMRAM] unsigned int 
 20633 ;; Auto vars:     Size  Location     Type
 20634 ;;  memset          2    6[COMRAM] PTR unsigned char 
 20635 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 20636 ;; Return value:  Size  Location     Type
 20637 ;;                  2    0[COMRAM] PTR void 
 20638 ;; Registers used:
 20639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20640 ;; Tracked objects:
 20641 ;;		On entry : 0/0
 20642 ;;		On exit  : 0/0
 20643 ;;		Unchanged: 0/0
 20644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20645 ;;      Params:         6       0       0       0       0       0       0       0       0
 20646 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20647 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20648 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20649 ;;Total ram usage:        8 bytes
 20650 ;; Hardware stack levels used:    1
 20651 ;; This function calls:
 20652 ;;		Nothing
 20653 ;; This function is called by:
 20654 ;;		_USBStdSetCfgHandler
 20655 ;;		i2_USBDeviceInit
 20656 ;; This function uses a non-reentrant model
 20657 ;;
 20658                           
 20659                           	psect	text98
 20660  003810                     __ptext98:
 20661                           	opt stack 0
 20662  003810                     i2_memset:
 20663                           	opt stack 17
 20664                           
 20665                           ; BSR set to: 0
 20666                           ;incstack = 0
 20667  003810  C02E  F034         	movff	i2memset@p1,i2memset@p
 20668  003814  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 20669  003818  D008               	goto	i2l6536
 20670  00381A                     i2l6532:
 20671  00381A  C034  FFD9         	movff	i2memset@p,fsr2l
 20672  00381E  C035  FFDA         	movff	i2memset@p+1,fsr2h
 20673  003822  C030  FFDF         	movff	i2memset@c,indf2
 20674  003826  4A34               	infsnz	i2memset@p,f,c
 20675  003828  2A35               	incf	i2memset@p+1,f,c
 20676  00382A                     i2l6536:
 20677  00382A  0632               	decf	i2memset@n,f,c
 20678  00382C  A0D8               	btfss	status,0,c
 20679  00382E  0633               	decf	i2memset@n+1,f,c
 20680  003830  2832               	incf	i2memset@n,w,c
 20681  003832  E1F3               	bnz	i2l6532
 20682  003834  2833               	incf	i2memset@n+1,w,c
 20683  003836  E1F1               	bnz	i2l6532
 20684  003838  0012               	return		;funcret
 20685  00383A                     __end_ofi2_memset:
 20686                           	opt stack 0
 20687                           pclatu	equ	0xFFB
 20688                           pclath	equ	0xFFA
 20689                           tblptru	equ	0xFF8
 20690                           tblptrh	equ	0xFF7
 20691                           tblptrl	equ	0xFF6
 20692                           tablat	equ	0xFF5
 20693                           prodh	equ	0xFF4
 20694                           prodl	equ	0xFF3
 20695                           intcon	equ	0xFF2
 20696                           postinc0	equ	0xFEE
 20697                           wreg	equ	0xFE8
 20698                           indf1	equ	0xFE7
 20699                           postdec1	equ	0xFE5
 20700                           fsr1h	equ	0xFE2
 20701                           fsr1l	equ	0xFE1
 20702                           indf2	equ	0xFDF
 20703                           postinc2	equ	0xFDE
 20704                           postdec2	equ	0xFDD
 20705                           plusw2	equ	0xFDB
 20706                           fsr2h	equ	0xFDA
 20707                           fsr2l	equ	0xFD9
 20708                           status	equ	0xFD8
 20709                           
 20710 ;; *************** function _USBStdGetStatusHandler *****************
 20711 ;; Defined at:
 20712 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 20713 ;; Parameters:    Size  Location     Type
 20714 ;;		None
 20715 ;; Auto vars:     Size  Location     Type
 20716 ;;  p               2    0[COMRAM] PTR struct __BDT
 20717 ;;		 -> BDT(48), NULL(0), 
 20718 ;; Return value:  Size  Location     Type
 20719 ;;		None               void
 20720 ;; Registers used:
 20721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20722 ;; Tracked objects:
 20723 ;;		On entry : B/4
 20724 ;;		On exit  : F/4
 20725 ;;		Unchanged: 0/0
 20726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20727 ;;      Params:         0       0       0       0       0       0       0       0       0
 20728 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20729 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20730 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20731 ;;Total ram usage:        2 bytes
 20732 ;; Hardware stack levels used:    1
 20733 ;; This function calls:
 20734 ;;		Nothing
 20735 ;; This function is called by:
 20736 ;;		_USBCheckStdRequest
 20737 ;; This function uses a non-reentrant model
 20738 ;;
 20739                           
 20740                           	psect	text99
 20741  0043DA                     __ptext99:
 20742                           	opt stack 0
 20743  0043DA                     _USBStdGetStatusHandler:
 20744                           	opt stack 15
 20745                           
 20746                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 20747                           
 20748                           ;incstack = 0
 20749  0043DA  0104               	movlb	4	; () banked
 20750  0043DC  6B38               	clrf	56,b	;volatile
 20751                           
 20752                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 20753  0043DE  6B39               	clrf	57,b	;volatile
 20754                           
 20755                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 20756  0043E0  D02A               	goto	i2l6804
 20757  0043E2                     i2l1713:
 20758                           
 20759                           ; BSR set to: 4
 20760                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 20761  0043E2  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20762                           
 20763                           ; BSR set to: 4
 20764                           ;usb_device.c: 1789: }
 20765                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 20766                           
 20767                           ;usb_device.c: 1786: if(0 == 1)
 20768  0043E4  041D               	decf	_RemoteWakeup,w,c	;volatile
 20769  0043E6  E12E               	bnz	i2l1716
 20770                           
 20771                           ; BSR set to: 4
 20772                           ;usb_device.c: 1792: {
 20773                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 20774  0043E8  8338               	bsf	56,1,b	;volatile
 20775  0043EA  D02C               	goto	i2l1716
 20776  0043EC                     i2l1717:
 20777                           
 20778                           ; BSR set to: 4
 20779                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 20780  0043EC  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20781                           
 20782                           ;usb_device.c: 1798: break;
 20783  0043EE  D02A               	goto	i2l1716
 20784  0043F0                     i2l1718:
 20785                           
 20786                           ; BSR set to: 4
 20787                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 20788  0043F0  8E0C               	bsf	_inPipes+3,7,c	;volatile
 20789                           
 20790                           ;usb_device.c: 1804: {
 20791                           ;usb_device.c: 1805: BDT_ENTRY *p;
 20792                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 20793  0043F2  BF34               	btfsc	52,7,b	;volatile
 20794  0043F4  D006               	goto	i2l6794
 20795                           
 20796                           ; BSR set to: 4
 20797                           ;usb_device.c: 1808: {
 20798                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 20799  0043F6  5134               	movf	52,w,b	;volatile
 20800  0043F8  0B0F               	andlw	15
 20801  0043FA  0D02               	mullw	2
 20802  0043FC  50F3               	movf	prodl,w,c
 20803  0043FE  0F60               	addlw	low _pBDTEntryOut
 20804  004400  D005               	goto	L58
 20805  004402                     i2l6794:
 20806                           
 20807                           ; BSR set to: 4
 20808                           ;usb_device.c: 1811: else
 20809                           ;usb_device.c: 1812: {
 20810                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 20811  004402  5134               	movf	52,w,b	;volatile
 20812  004404  0B0F               	andlw	15
 20813  004406  0D02               	mullw	2
 20814  004408  50F3               	movf	prodl,w,c
 20815  00440A  0F0F               	addlw	low _pBDTEntryIn
 20816  00440C                     L58:
 20817  00440C  6ED9               	movwf	fsr2l,c
 20818  00440E  6ADA               	clrf	fsr2h,c
 20819  004410  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 20820  004414  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 20821                           
 20822                           ; BSR set to: 4
 20823                           ;usb_device.c: 1814: }
 20824                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 20825  004418  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 20826  00441C  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 20827  004420  AEDF               	btfss	indf2,7,c
 20828  004422  D010               	goto	i2l1716
 20829                           
 20830                           ; BSR set to: 4
 20831  004424  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 20832  004428  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 20833  00442C  A4DF               	btfss	indf2,2,c
 20834  00442E  D00A               	goto	i2l1716
 20835                           
 20836                           ; BSR set to: 4
 20837                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 20838  004430  0E01               	movlw	1
 20839  004432  6F38               	movwf	56,b	;volatile
 20840  004434  D007               	goto	i2l1716
 20841  004436                     i2l6804:
 20842                           
 20843                           ; BSR set to: 4
 20844  004436  5130               	movf	48,w,b	;volatile
 20845  004438  0B1F               	andlw	31
 20846                           
 20847                           ; Switch size 1, requested type "speed"
 20848                           ; Number of cases is 3, Range of values is 0 to 2
 20849                           ; switch strategies available:
 20850                           ; Name         Instructions Cycles
 20851                           ; simple_byte           10     6 (average)
 20852                           ;	Chosen strategy is simple_byte
 20853  00443A  E0D3               	bz	i2l1713
 20854  00443C  0A01               	xorlw	1	; case 1
 20855  00443E  E0D6               	bz	i2l1717
 20856  004440  0A03               	xorlw	3	; case 2
 20857  004442  E0D6               	bz	i2l1718
 20858  004444                     i2l1716:
 20859                           
 20860                           ; BSR set to: 4
 20861                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 20862  004444  AE0C               	btfss	_inPipes+3,7,c	;volatile
 20863  004446  0012               	return	
 20864                           
 20865                           ; BSR set to: 4
 20866                           ;usb_device.c: 1823: {
 20867                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 20868  004448  0E38               	movlw	56
 20869  00444A  6E09               	movwf	_inPipes,c	;volatile
 20870  00444C  0E04               	movlw	4
 20871  00444E  6E0A               	movwf	_inPipes+1,c	;volatile
 20872                           
 20873                           ; BSR set to: 4
 20874                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 20875  004450  800C               	bsf	_inPipes+3,0,c	;volatile
 20876                           
 20877                           ; BSR set to: 4
 20878                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 20879  004452  0E02               	movlw	2
 20880  004454  6E0D               	movwf	_inPipes+4,c	;volatile
 20881                           
 20882                           ; BSR set to: 4
 20883  004456  0C02               	retlw	2	;funcret
 20884  004458                     __end_of_USBStdGetStatusHandler:
 20885                           	opt stack 0
 20886                           pclatu	equ	0xFFB
 20887                           pclath	equ	0xFFA
 20888                           tblptru	equ	0xFF8
 20889                           tblptrh	equ	0xFF7
 20890                           tblptrl	equ	0xFF6
 20891                           tablat	equ	0xFF5
 20892                           prodh	equ	0xFF4
 20893                           prodl	equ	0xFF3
 20894                           intcon	equ	0xFF2
 20895                           postinc0	equ	0xFEE
 20896                           wreg	equ	0xFE8
 20897                           indf1	equ	0xFE7
 20898                           postdec1	equ	0xFE5
 20899                           fsr1h	equ	0xFE2
 20900                           fsr1l	equ	0xFE1
 20901                           indf2	equ	0xFDF
 20902                           postinc2	equ	0xFDE
 20903                           postdec2	equ	0xFDD
 20904                           plusw2	equ	0xFDB
 20905                           fsr2h	equ	0xFDA
 20906                           fsr2l	equ	0xFD9
 20907                           status	equ	0xFD8
 20908                           
 20909 ;; *************** function _USBStdGetDscHandler *****************
 20910 ;; Defined at:
 20911 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 20912 ;; Parameters:    Size  Location     Type
 20913 ;;		None
 20914 ;; Auto vars:     Size  Location     Type
 20915 ;;		None
 20916 ;; Return value:  Size  Location     Type
 20917 ;;		None               void
 20918 ;; Registers used:
 20919 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20920 ;; Tracked objects:
 20921 ;;		On entry : B/4
 20922 ;;		On exit  : 0/0
 20923 ;;		Unchanged: 0/0
 20924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20925 ;;      Params:         0       0       0       0       0       0       0       0       0
 20926 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20927 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20928 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20929 ;;Total ram usage:        2 bytes
 20930 ;; Hardware stack levels used:    1
 20931 ;; This function calls:
 20932 ;;		Nothing
 20933 ;; This function is called by:
 20934 ;;		_USBCheckStdRequest
 20935 ;; This function uses a non-reentrant model
 20936 ;;
 20937                           
 20938                           	psect	text100
 20939  0058B6                     __ptext100:
 20940                           	opt stack 0
 20941  0058B6                     _USBStdGetDscHandler:
 20942                           	opt stack 15
 20943                           
 20944                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 20945                           
 20946                           ; BSR set to: 4
 20947                           ;incstack = 0
 20948  0058B6  0E80               	movlw	128
 20949  0058B8  0104               	movlb	4	; () banked
 20950  0058BA  1930               	xorwf	48,w,b	;volatile
 20951  0058BC  A4D8               	btfss	status,2,c
 20952  0058BE  0012               	return	
 20953                           
 20954                           ; BSR set to: 4
 20955                           ;usb_device.c: 1707: {
 20956                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 20957  0058C0  0EC0               	movlw	192
 20958  0058C2  6E0C               	movwf	_inPipes+3,c	;volatile
 20959                           
 20960                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 20961  0058C4  D071               	goto	i2l6782
 20962  0058C6                     i2l6762:
 20963                           
 20964                           ; BSR set to: 4
 20965                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 20966  0058C6  0EF4               	movlw	low _device_dsc
 20967  0058C8  6E09               	movwf	_inPipes,c	;volatile
 20968  0058CA  0E79               	movlw	high _device_dsc
 20969  0058CC  6E0A               	movwf	_inPipes+1,c	;volatile
 20970                           
 20971                           ; BSR set to: 4
 20972                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 20973  0058CE  6A0E               	clrf	_inPipes+5,c	;volatile
 20974  0058D0  0E12               	movlw	18
 20975  0058D2  6E0D               	movwf	_inPipes+4,c	;volatile
 20976                           
 20977                           ;usb_device.c: 1715: break;
 20978  0058D4  0C12               	retlw	18
 20979  0058D6                     i2l6766:
 20980                           
 20981                           ; BSR set to: 4
 20982                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 20983  0058D6  5132               	movf	50,w,b	;volatile
 20984  0058D8  E13D               	bnz	i2l1703
 20985                           
 20986                           ; BSR set to: 4
 20987                           ;usb_device.c: 1721: {
 20988                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 20989  0058DA  5132               	movf	50,w,b	;volatile
 20990  0058DC  0D02               	mullw	2
 20991  0058DE  0E47               	movlw	low _USB_CD_Ptr
 20992  0058E0  24F3               	addwf	prodl,w,c
 20993  0058E2  6EF6               	movwf	tblptrl,c
 20994  0058E4  0E76               	movlw	high _USB_CD_Ptr
 20995  0058E6  20F4               	addwfc	prodh,w,c
 20996  0058E8  6EF7               	movwf	tblptrh,c
 20997  0058EA                     	if	0	;There are less than 3 active tblptr bytes
 20998  0058EA                     	endif
 20999  0058EA  0009               	tblrd		*+
 21000  0058EC  CFF5 F009          	movff	tablat,_inPipes	;volatile
 21001  0058F0  000A               	tblrd		*-
 21002  0058F2  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 21003                           
 21004                           ; BSR set to: 4
 21005                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 21006  0058F6  0E02               	movlw	2
 21007  0058F8  2409               	addwf	_inPipes,w,c	;volatile
 21008  0058FA  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 21009  0058FC  0E00               	movlw	0
 21010  0058FE  200A               	addwfc	_inPipes+1,w,c	;volatile
 21011  005900  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21012  005902  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21013  005906  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21014  00590A  6AF8               	clrf	tblptru,c
 21015  00590C  0E07               	movlw	(high __ramtop+-1)
 21016  00590E  64F7               	cpfsgt	tblptrh,c
 21017  005910  D003               	bra	i2u445_47
 21018  005912  0008               	tblrd		*
 21019  005914  50F5               	movf	tablat,w,c
 21020  005916  D005               	bra	i2u445_40
 21021  005918                     i2u445_47:
 21022  005918  CFF6 FFE1          	movff	tblptrl,fsr1l
 21023  00591C  CFF7 FFE2          	movff	tblptrh,fsr1h
 21024  005920  50E7               	movf	indf1,w,c
 21025  005922                     i2u445_40:
 21026  005922  6E0D               	movwf	_inPipes+4,c	;volatile
 21027                           
 21028                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 21029  005924  0E03               	movlw	3
 21030  005926  2409               	addwf	_inPipes,w,c	;volatile
 21031  005928  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 21032  00592A  0E00               	movlw	0
 21033  00592C  200A               	addwfc	_inPipes+1,w,c	;volatile
 21034  00592E  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 21035  005930  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 21036  005934  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 21037  005938  6AF8               	clrf	tblptru,c
 21038  00593A  0E07               	movlw	(high __ramtop+-1)
 21039  00593C  64F7               	cpfsgt	tblptrh,c
 21040  00593E  D003               	bra	i2u446_47
 21041  005940  0008               	tblrd		*
 21042  005942  50F5               	movf	tablat,w,c
 21043  005944  D005               	bra	i2u446_40
 21044  005946                     i2u446_47:
 21045  005946  CFF6 FFE1          	movff	tblptrl,fsr1l
 21046  00594A  CFF7 FFE2          	movff	tblptrh,fsr1h
 21047  00594E  50E7               	movf	indf1,w,c
 21048  005950                     i2u446_40:
 21049  005950  6E0E               	movwf	_inPipes+5,c	;volatile
 21050                           
 21051                           ;usb_device.c: 1729: }
 21052  005952  0012               	return	
 21053  005954                     i2l1703:
 21054                           
 21055                           ; BSR set to: 4
 21056                           ;usb_device.c: 1730: else
 21057                           ;usb_device.c: 1731: {
 21058                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 21059  005954  6A0C               	clrf	_inPipes+3,c	;volatile
 21060  005956  0012               	return	
 21061  005958                     i2l6774:
 21062                           
 21063                           ; BSR set to: 4
 21064                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 21065  005958  0E03               	movlw	3
 21066  00595A  6132               	cpfslt	50,b	;volatile
 21067  00595C  D021               	goto	i2l1706
 21068                           
 21069                           ; BSR set to: 4
 21070                           ;usb_device.c: 1740: {
 21071                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 21072  00595E  5132               	movf	50,w,b	;volatile
 21073  005960  0D02               	mullw	2
 21074  005962  0E41               	movlw	low _USB_SD_Ptr
 21075  005964  24F3               	addwf	prodl,w,c
 21076  005966  6EF6               	movwf	tblptrl,c
 21077  005968  0E76               	movlw	high _USB_SD_Ptr
 21078  00596A  20F4               	addwfc	prodh,w,c
 21079  00596C  6EF7               	movwf	tblptrh,c
 21080  00596E                     	if	0	;There are less than 3 active tblptr bytes
 21081  00596E                     	endif
 21082  00596E  0009               	tblrd		*+
 21083  005970  CFF5 F009          	movff	tablat,_inPipes	;volatile
 21084  005974  000A               	tblrd		*-
 21085  005976  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 21086                           
 21087                           ; BSR set to: 4
 21088                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 21089  00597A  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 21090  00597E  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 21091  005982  6AF8               	clrf	tblptru,c
 21092  005984  0E07               	movlw	(high __ramtop+-1)
 21093  005986  64F7               	cpfsgt	tblptrh,c
 21094  005988  D003               	bra	i2u448_47
 21095  00598A  0008               	tblrd		*
 21096  00598C  50F5               	movf	tablat,w,c
 21097  00598E  D005               	bra	i2u448_40
 21098  005990                     i2u448_47:
 21099  005990  CFF6 FFE1          	movff	tblptrl,fsr1l
 21100  005994  CFF7 FFE2          	movff	tblptrh,fsr1h
 21101  005998  50E7               	movf	indf1,w,c
 21102  00599A                     i2u448_40:
 21103  00599A  6E0D               	movwf	_inPipes+4,c	;volatile
 21104  00599C  6A0E               	clrf	_inPipes+5,c	;volatile
 21105                           
 21106                           ;usb_device.c: 1745: }
 21107  00599E  0012               	return	
 21108  0059A0                     i2l1706:
 21109                           
 21110                           ; BSR set to: 4
 21111                           ;usb_device.c: 1746: else
 21112                           ;usb_device.c: 1747: {
 21113                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 21114  0059A0  6A0C               	clrf	_inPipes+3,c	;volatile
 21115  0059A2  0012               	return	
 21116  0059A4                     i2l1708:
 21117                           
 21118                           ; BSR set to: 4
 21119                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 21120  0059A4  6A0C               	clrf	_inPipes+3,c	;volatile
 21121                           
 21122                           ;usb_device.c: 1753: break;
 21123  0059A6  0012               	return	
 21124  0059A8                     i2l6782:
 21125                           
 21126                           ; BSR set to: 4
 21127  0059A8  5133               	movf	51,w,b	;volatile
 21128                           
 21129                           ; Switch size 1, requested type "speed"
 21130                           ; Number of cases is 3, Range of values is 1 to 3
 21131                           ; switch strategies available:
 21132                           ; Name         Instructions Cycles
 21133                           ; simple_byte           10     6 (average)
 21134                           ;	Chosen strategy is simple_byte
 21135  0059AA  0A01               	xorlw	1	; case 1
 21136  0059AC  E08C               	bz	i2l6762
 21137  0059AE  0A03               	xorlw	3	; case 2
 21138  0059B0  E092               	bz	i2l6766
 21139  0059B2  0A01               	xorlw	1	; case 3
 21140  0059B4  E0D1               	bz	i2l6774
 21141  0059B6  D7F6               	goto	i2l1708
 21142  0059B8                     __end_of_USBStdGetDscHandler:
 21143                           	opt stack 0
 21144                           pclatu	equ	0xFFB
 21145                           pclath	equ	0xFFA
 21146                           tblptru	equ	0xFF8
 21147                           tblptrh	equ	0xFF7
 21148                           tblptrl	equ	0xFF6
 21149                           tablat	equ	0xFF5
 21150                           prodh	equ	0xFF4
 21151                           prodl	equ	0xFF3
 21152                           intcon	equ	0xFF2
 21153                           postinc0	equ	0xFEE
 21154                           wreg	equ	0xFE8
 21155                           indf1	equ	0xFE7
 21156                           postdec1	equ	0xFE5
 21157                           fsr1h	equ	0xFE2
 21158                           fsr1l	equ	0xFE1
 21159                           indf2	equ	0xFDF
 21160                           postinc2	equ	0xFDE
 21161                           postdec2	equ	0xFDD
 21162                           plusw2	equ	0xFDB
 21163                           fsr2h	equ	0xFDA
 21164                           fsr2l	equ	0xFD9
 21165                           status	equ	0xFD8
 21166                           
 21167 ;; *************** function _USBStdFeatureReqHandler *****************
 21168 ;; Defined at:
 21169 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 21170 ;; Parameters:    Size  Location     Type
 21171 ;;		None
 21172 ;; Auto vars:     Size  Location     Type
 21173 ;;  p               2   26[COMRAM] PTR struct __BDT
 21174 ;;		 -> BDT(48), NULL(0), 
 21175 ;;  pUEP            2   23[COMRAM] PTR unsigned char 
 21176 ;;		 -> UEP0(1), 
 21177 ;;  current_ep_d    1   25[COMRAM] struct .
 21178 ;; Return value:  Size  Location     Type
 21179 ;;		None               void
 21180 ;; Registers used:
 21181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21182 ;; Tracked objects:
 21183 ;;		On entry : B/4
 21184 ;;		On exit  : B/0
 21185 ;;		Unchanged: 0/0
 21186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21187 ;;      Params:         0       0       0       0       0       0       0       0       0
 21188 ;;      Locals:         5       0       0       0       0       0       0       0       0
 21189 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21190 ;;      Totals:         7       0       0       0       0       0       0       0       0
 21191 ;;Total ram usage:        7 bytes
 21192 ;; Hardware stack levels used:    1
 21193 ;; Hardware stack levels required when called:    5
 21194 ;; This function calls:
 21195 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21196 ;; This function is called by:
 21197 ;;		_USBCheckStdRequest
 21198 ;; This function uses a non-reentrant model
 21199 ;;
 21200                           
 21201                           	psect	text101
 21202  005DBE                     __ptext101:
 21203                           	opt stack 0
 21204  005DBE                     _USBStdFeatureReqHandler:
 21205                           	opt stack 10
 21206                           
 21207                           ;usb_device.c: 2387: BDT_ENTRY *p;
 21208                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 21209                           ;usb_device.c: 2390: unsigned char* pUEP;
 21210                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 21211                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 21212                           
 21213                           ;incstack = 0
 21214  005DBE  0104               	movlb	4	; () banked
 21215  005DC0  0532               	decf	50,w,b	;volatile
 21216  005DC2  E10B               	bnz	i2l6822
 21217                           
 21218                           ; BSR set to: 4
 21219  005DC4  5130               	movf	48,w,b	;volatile
 21220  005DC6  0B1F               	andlw	31
 21221  005DC8  E108               	bnz	i2l6822
 21222                           
 21223                           ; BSR set to: 4
 21224                           ;usb_device.c: 2395: {
 21225                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 21226  005DCA  8E0C               	bsf	_inPipes+3,7,c	;volatile
 21227                           
 21228                           ; BSR set to: 4
 21229                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 21230  005DCC  0E03               	movlw	3
 21231  005DCE  1931               	xorwf	49,w,b	;volatile
 21232  005DD0  E103               	bnz	i2l1793
 21233                           
 21234                           ; BSR set to: 4
 21235                           ;usb_device.c: 2398: RemoteWakeup = 1;
 21236  005DD2  0E01               	movlw	1
 21237  005DD4  6E1D               	movwf	_RemoteWakeup,c	;volatile
 21238  005DD6  D001               	goto	i2l6822
 21239  005DD8                     i2l1793:
 21240                           
 21241                           ; BSR set to: 4
 21242                           ;usb_device.c: 2399: else
 21243                           ;usb_device.c: 2400: RemoteWakeup = 0;
 21244  005DD8  6A1D               	clrf	_RemoteWakeup,c	;volatile
 21245  005DDA                     i2l6822:
 21246                           
 21247                           ; BSR set to: 4
 21248                           ;usb_device.c: 2401: }
 21249                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 21250                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 21251                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 21252                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 21253  005DDA  5132               	movf	50,w,b	;volatile
 21254  005DDC  A4D8               	btfss	status,2,c
 21255  005DDE  0012               	return	
 21256                           
 21257                           ; BSR set to: 4
 21258  005DE0  5130               	movf	48,w,b	;volatile
 21259  005DE2  0B1F               	andlw	31
 21260  005DE4  0A02               	xorlw	2
 21261  005DE6  A4D8               	btfss	status,2,c
 21262  005DE8  0012               	return	
 21263                           
 21264                           ; BSR set to: 4
 21265  005DEA  5134               	movf	52,w,b	;volatile
 21266  005DEC  0B0F               	andlw	15
 21267  005DEE  B4D8               	btfsc	status,2,c
 21268  005DF0  0012               	return	
 21269                           
 21270                           ; BSR set to: 4
 21271  005DF2  5134               	movf	52,w,b	;volatile
 21272  005DF4  0B0F               	andlw	15
 21273  005DF6  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21274  005DF8  0E03               	movlw	3
 21275  005DFA  6043               	cpfslt	??_USBStdFeatureReqHandler,c
 21276  005DFC  0C03               	retlw	3
 21277                           
 21278                           ; BSR set to: 4
 21279  005DFE  0E20               	movlw	32
 21280  005E00  0100               	movlb	0	; () banked
 21281  005E02  198A               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 21282  005E04  A4D8               	btfss	status,2,c
 21283  005E06  0012               	return	
 21284                           
 21285                           ; BSR set to: 0
 21286                           ;usb_device.c: 2408: {
 21287                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 21288  005E08  8E0C               	bsf	_inPipes+3,7,c	;volatile
 21289                           
 21290                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 21291  005E0A  0104               	movlb	4	; () banked
 21292  005E0C  BF34               	btfsc	52,7,b	;volatile
 21293  005E0E  D011               	goto	i2l6838
 21294                           
 21295                           ; BSR set to: 4
 21296                           ;usb_device.c: 2415: {
 21297                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 21298  005E10  5134               	movf	52,w,b	;volatile
 21299  005E12  0B0F               	andlw	15
 21300  005E14  0D02               	mullw	2
 21301  005E16  50F3               	movf	prodl,w,c
 21302  005E18  0F60               	addlw	low _pBDTEntryOut
 21303  005E1A  6ED9               	movwf	fsr2l,c
 21304  005E1C  6ADA               	clrf	fsr2h,c
 21305  005E1E  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 21306  005E22  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21307                           
 21308                           ; BSR set to: 4
 21309                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 21310  005E26  5134               	movf	52,w,b	;volatile
 21311  005E28  0B0F               	andlw	15
 21312  005E2A  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21313  005E2C  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21314  005E2E  0F6D               	addlw	low _ep_data_out
 21315  005E30  D010               	goto	L59
 21316  005E32                     i2l6838:
 21317                           
 21318                           ; BSR set to: 4
 21319                           ;usb_device.c: 2419: else
 21320                           ;usb_device.c: 2420: {
 21321                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 21322  005E32  5134               	movf	52,w,b	;volatile
 21323  005E34  0B0F               	andlw	15
 21324  005E36  0D02               	mullw	2
 21325  005E38  50F3               	movf	prodl,w,c
 21326  005E3A  0F0F               	addlw	low _pBDTEntryIn
 21327  005E3C  6ED9               	movwf	fsr2l,c
 21328  005E3E  6ADA               	clrf	fsr2h,c
 21329  005E40  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 21330  005E44  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 21331                           
 21332                           ; BSR set to: 4
 21333                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 21334  005E48  5134               	movf	52,w,b	;volatile
 21335  005E4A  0B0F               	andlw	15
 21336  005E4C  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21337  005E4E  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21338  005E50  0F6A               	addlw	low _ep_data_in
 21339  005E52                     L59:
 21340  005E52  6ED9               	movwf	fsr2l,c
 21341  005E54  6ADA               	clrf	fsr2h,c
 21342  005E56  50DF               	movf	indf2,w,c
 21343  005E58  6E47               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 21344                           
 21345                           ; BSR set to: 4
 21346                           ;usb_device.c: 2423: }
 21347                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 21348  005E5A  B047               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 21349  005E5C  D002               	goto	i2l6846
 21350                           
 21351                           ; BSR set to: 4
 21352                           ;usb_device.c: 2429: {
 21353                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 21354  005E5E  9448               	bcf	USBStdFeatureReqHandler@p,2,c
 21355                           
 21356                           ;usb_device.c: 2431: }
 21357  005E60  D001               	goto	i2l6848
 21358  005E62                     i2l6846:
 21359                           
 21360                           ; BSR set to: 4
 21361                           ;usb_device.c: 2432: else
 21362                           ;usb_device.c: 2433: {
 21363                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 21364  005E62  8448               	bsf	USBStdFeatureReqHandler@p,2,c
 21365  005E64                     i2l6848:
 21366                           
 21367                           ; BSR set to: 4
 21368                           ;usb_device.c: 2435: }
 21369                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 21370  005E64  BF34               	btfsc	52,7,b	;volatile
 21371  005E66  D006               	goto	i2l6852
 21372                           
 21373                           ; BSR set to: 4
 21374                           ;usb_device.c: 2440: {
 21375                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21376  005E68  5134               	movf	52,w,b	;volatile
 21377  005E6A  0B0F               	andlw	15
 21378  005E6C  0D02               	mullw	2
 21379  005E6E  50F3               	movf	prodl,w,c
 21380  005E70  0F60               	addlw	low _pBDTEntryOut
 21381  005E72  D005               	goto	L60
 21382  005E74                     i2l6852:
 21383                           
 21384                           ; BSR set to: 4
 21385                           ;usb_device.c: 2443: else
 21386                           ;usb_device.c: 2444: {
 21387                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 21388  005E74  5134               	movf	52,w,b	;volatile
 21389  005E76  0B0F               	andlw	15
 21390  005E78  0D02               	mullw	2
 21391  005E7A  50F3               	movf	prodl,w,c
 21392  005E7C  0F0F               	addlw	low _pBDTEntryIn
 21393  005E7E                     L60:
 21394  005E7E  6ED9               	movwf	fsr2l,c
 21395  005E80  6ADA               	clrf	fsr2h,c
 21396  005E82  C048  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 21397  005E86  C049  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 21398                           
 21399                           ; BSR set to: 4
 21400                           ;usb_device.c: 2446: }
 21401                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 21402  005E8A  0E03               	movlw	3
 21403  005E8C  1931               	xorwf	49,w,b	;volatile
 21404  005E8E  E123               	bnz	i2l6864
 21405                           
 21406                           ; BSR set to: 4
 21407                           ;usb_device.c: 2450: {
 21408                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 21409  005E90  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21410  005E94  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21411  005E98  AEDF               	btfss	indf2,7,c
 21412  005E9A  D011               	goto	i2l1803
 21413                           
 21414                           ; BSR set to: 4
 21415                           ;usb_device.c: 2452: {
 21416                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 21417  005E9C  BF34               	btfsc	52,7,b	;volatile
 21418  005E9E  D006               	goto	i2l6862
 21419                           
 21420                           ; BSR set to: 4
 21421                           ;usb_device.c: 2456: {
 21422                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 21423  005EA0  5134               	movf	52,w,b	;volatile
 21424  005EA2  0B0F               	andlw	15
 21425  005EA4  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21426  005EA6  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21427  005EA8  0F6D               	addlw	low _ep_data_out
 21428  005EAA  D005               	goto	L61
 21429  005EAC                     i2l6862:
 21430                           
 21431                           ; BSR set to: 4
 21432                           ;usb_device.c: 2459: else
 21433                           ;usb_device.c: 2460: {
 21434                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 21435  005EAC  5134               	movf	52,w,b	;volatile
 21436  005EAE  0B0F               	andlw	15
 21437  005EB0  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21438  005EB2  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21439  005EB4  0F6A               	addlw	low _ep_data_in
 21440  005EB6                     L61:
 21441  005EB6  6ED9               	movwf	fsr2l,c
 21442  005EB8  6ADA               	clrf	fsr2h,c
 21443  005EBA  0100               	movlb	0	; () banked
 21444  005EBC  82DF               	bsf	indf2,1,c
 21445  005EBE                     i2l1803:
 21446                           
 21447                           ;usb_device.c: 2462: }
 21448                           ;usb_device.c: 2463: }
 21449                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 21450  005EBE  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21451  005EC2  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21452  005EC6  0E00               	movlw	0
 21453  005EC8  84DB               	bsf	plusw2,2,c
 21454                           
 21455                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 21456  005ECA  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21457  005ECE  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21458  005ED2  8EDB               	bsf	plusw2,7,c
 21459                           
 21460                           ;usb_device.c: 2468: }
 21461  005ED4  0C00               	retlw	0
 21462  005ED6                     i2l6864:
 21463                           
 21464                           ; BSR set to: 4
 21465                           ;usb_device.c: 2469: else
 21466                           ;usb_device.c: 2470: {
 21467                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 21468  005ED6  0E04               	movlw	4
 21469  005ED8  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 21470                           
 21471                           ; BSR set to: 4
 21472                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 21473  005EDA  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21474  005EDE  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21475  005EE2  AEDF               	btfss	indf2,7,c
 21476  005EE4  D019               	goto	i2l6874
 21477                           
 21478                           ; BSR set to: 4
 21479                           ;usb_device.c: 2476: {
 21480                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 21481  005EE6  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21482  005EEA  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21483  005EEE  0E7F               	movlw	127
 21484  005EF0  16DF               	andwf	indf2,f,c
 21485                           
 21486                           ; BSR set to: 4
 21487                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 21488  005EF2  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21489  005EF6  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21490  005EFA  0E00               	movlw	0
 21491  005EFC  8CDB               	bsf	plusw2,6,c
 21492                           
 21493                           ; BSR set to: 4
 21494                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 21495  005EFE  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21496  005F00  0E05               	movlw	5
 21497  005F02  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21498  005F04  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 21499  005F08  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 21500  005F0C  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21501  005F0E  0E02               	movlw	2
 21502  005F10  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21503  005F12  EC11  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21504                           
 21505                           ;usb_device.c: 2482: }
 21506  005F16  D006               	goto	i2l6876
 21507  005F18                     i2l6874:
 21508                           
 21509                           ; BSR set to: 4
 21510                           ;usb_device.c: 2483: else
 21511                           ;usb_device.c: 2484: {
 21512                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 21513  005F18  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21514  005F1C  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21515  005F20  0E00               	movlw	0
 21516  005F22  8CDB               	bsf	plusw2,6,c
 21517  005F24                     i2l6876:
 21518                           
 21519                           ;usb_device.c: 2487: }
 21520                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 21521  005F24  0E04               	movlw	4
 21522  005F26  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 21523                           
 21524                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 21525  005F28  B247               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 21526  005F2A  D006               	goto	i2l1811
 21527  005F2C  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21528  005F30  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21529  005F34  AEDF               	btfss	indf2,7,c
 21530  005F36  D025               	goto	i2l6890
 21531  005F38                     i2l1811:
 21532                           
 21533                           ;usb_device.c: 2498: {
 21534                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 21535  005F38  0104               	movlb	4	; () banked
 21536  005F3A  BF34               	btfsc	52,7,b	;volatile
 21537  005F3C  D006               	goto	i2l6884
 21538                           
 21539                           ; BSR set to: 4
 21540                           ;usb_device.c: 2500: {
 21541                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 21542  005F3E  5134               	movf	52,w,b	;volatile
 21543  005F40  0B0F               	andlw	15
 21544  005F42  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21545  005F44  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21546  005F46  0F6D               	addlw	low _ep_data_out
 21547  005F48  D005               	goto	L62
 21548  005F4A                     i2l6884:
 21549                           
 21550                           ; BSR set to: 4
 21551                           ;usb_device.c: 2503: else
 21552                           ;usb_device.c: 2504: {
 21553                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 21554  005F4A  5134               	movf	52,w,b	;volatile
 21555  005F4C  0B0F               	andlw	15
 21556  005F4E  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21557  005F50  5043               	movf	??_USBStdFeatureReqHandler,w,c
 21558  005F52  0F6A               	addlw	low _ep_data_in
 21559  005F54                     L62:
 21560  005F54  6ED9               	movwf	fsr2l,c
 21561  005F56  6ADA               	clrf	fsr2h,c
 21562  005F58  0100               	movlb	0	; () banked
 21563  005F5A  92DF               	bcf	indf2,1,c
 21564                           
 21565                           ; BSR set to: 0
 21566                           ;usb_device.c: 2506: }
 21567                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 21568  005F5C  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21569  005F60  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21570  005F64  0E3B               	movlw	59
 21571  005F66  16DF               	andwf	indf2,f,c
 21572                           
 21573                           ; BSR set to: 0
 21574                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 21575  005F68  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21576  005F6A  0E05               	movlw	5
 21577  005F6C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21578  005F6E  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 21579  005F72  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 21580  005F76  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21581  005F78  0E02               	movlw	2
 21582  005F7A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21583  005F7C  EC11  F01E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21584                           
 21585                           ;usb_device.c: 2512: }
 21586  005F80  D006               	goto	i2l6892
 21587  005F82                     i2l6890:
 21588                           
 21589                           ;usb_device.c: 2513: else
 21590                           ;usb_device.c: 2514: {
 21591                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 21592  005F82  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 21593  005F86  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 21594  005F8A  0E3B               	movlw	59
 21595  005F8C  16DF               	andwf	indf2,f,c
 21596  005F8E                     i2l6892:
 21597                           
 21598                           ;usb_device.c: 2517: }
 21599                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 21600  005F8E  0104               	movlb	4	; () banked
 21601  005F90  5134               	movf	52,w,b	;volatile
 21602  005F92  0B0F               	andlw	15
 21603  005F94  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 21604  005F96  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 21605  005F98  0E6A               	movlw	106
 21606  005F9A  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 21607  005F9C  6E45               	movwf	USBStdFeatureReqHandler@pUEP,c
 21608  005F9E  0E0F               	movlw	15
 21609  005FA0  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 21610  005FA2  6E46               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 21611                           
 21612                           ; BSR set to: 4
 21613                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 21614  005FA4  C045  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 21615  005FA8  C046  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 21616  005FAC  0EFE               	movlw	254
 21617  005FAE  16DF               	andwf	indf2,f,c
 21618  005FB0  0CFE               	retlw	254	;funcret
 21619  005FB2                     __end_of_USBStdFeatureReqHandler:
 21620                           	opt stack 0
 21621                           pclatu	equ	0xFFB
 21622                           pclath	equ	0xFFA
 21623                           tblptru	equ	0xFF8
 21624                           tblptrh	equ	0xFF7
 21625                           tblptrl	equ	0xFF6
 21626                           tablat	equ	0xFF5
 21627                           prodh	equ	0xFF4
 21628                           prodl	equ	0xFF3
 21629                           intcon	equ	0xFF2
 21630                           postinc0	equ	0xFEE
 21631                           wreg	equ	0xFE8
 21632                           indf1	equ	0xFE7
 21633                           postdec1	equ	0xFE5
 21634                           fsr1h	equ	0xFE2
 21635                           fsr1l	equ	0xFE1
 21636                           indf2	equ	0xFDF
 21637                           postinc2	equ	0xFDE
 21638                           postdec2	equ	0xFDD
 21639                           plusw2	equ	0xFDB
 21640                           fsr2h	equ	0xFDA
 21641                           fsr2l	equ	0xFD9
 21642                           status	equ	0xFD8
 21643                           
 21644 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 21645 ;; Defined at:
 21646 ;;		line 271 in file "../Includes/Board/USBapp.c"
 21647 ;; Parameters:    Size  Location     Type
 21648 ;;  event           2   13[COMRAM] enum E6555
 21649 ;;  pdata           2   15[COMRAM] PTR void 
 21650 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 21651 ;;  size            2   17[COMRAM] unsigned int 
 21652 ;; Auto vars:     Size  Location     Type
 21653 ;;		None
 21654 ;; Return value:  Size  Location     Type
 21655 ;;                  1    wreg      unsigned char 
 21656 ;; Registers used:
 21657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21658 ;; Tracked objects:
 21659 ;;		On entry : 0/0
 21660 ;;		On exit  : 0/0
 21661 ;;		Unchanged: 0/0
 21662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21663 ;;      Params:         6       0       0       0       0       0       0       0       0
 21664 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21665 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21666 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21667 ;;Total ram usage:        8 bytes
 21668 ;; Hardware stack levels used:    1
 21669 ;; Hardware stack levels required when called:    4
 21670 ;; This function calls:
 21671 ;;		_USBCheckCDCRequest
 21672 ;;		_USBapp_CdcEmulatorInitialize
 21673 ;; This function is called by:
 21674 ;;		_USBDeviceTasks
 21675 ;;		_USBStdSetCfgHandler
 21676 ;;		_USBSuspend
 21677 ;;		_USBWakeFromSuspend
 21678 ;;		_USBCtrlTrfSetupHandler
 21679 ;;		_USBCheckStdRequest
 21680 ;;		_USBStdFeatureReqHandler
 21681 ;; This function uses a non-reentrant model
 21682 ;;
 21683                           
 21684                           	psect	text102
 21685  003C22                     __ptext102:
 21686                           	opt stack 0
 21687  003C22                     _USER_USB_CALLBACK_EVENT_HANDLER:
 21688                           	opt stack 14
 21689  003C22                     i2l6442:
 21690  003C22  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 21691  003C26  C03C  F042         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 21692                           
 21693                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 21694                           ; Switch size 1, requested type "speed"
 21695                           ; Number of cases is 2, Range of values is 0 to 127
 21696                           ; switch strategies available:
 21697                           ; Name         Instructions Cycles
 21698                           ; simple_byte            7     4 (average)
 21699                           ;	Chosen strategy is simple_byte
 21700  003C2A  5042               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 21701  003C2C  E004               	bz	i2l12352
 21702  003C2E  0A7F               	xorlw	127	; case 127
 21703  003C30  A4D8               	btfss	status,2,c
 21704  003C32  0012               	return	
 21705  003C34  D019               	goto	i2l12354
 21706  003C36                     i2l12352:
 21707                           
 21708                           ; Switch size 1, requested type "speed"
 21709                           ; Number of cases is 8, Range of values is 1 to 117
 21710                           ; switch strategies available:
 21711                           ; Name         Instructions Cycles
 21712                           ; simple_byte           25    13 (average)
 21713                           ;	Chosen strategy is simple_byte
 21714  003C36  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 21715  003C38  0A01               	xorlw	1	; case 1
 21716  003C3A  E102 EF1C  F01D    	bz	_USBapp_CdcEmulatorInitialize
 21717  003C40  0A03               	xorlw	3	; case 2
 21718  003C42  B4D8               	btfsc	status,2,c
 21719  003C44  0012               	return	
 21720  003C46  0A01               	xorlw	1	; case 3
 21721  003C48  E102 EFAF  F022    	bz	_USBCheckCDCRequest
 21722  003C4E  0A06               	xorlw	6	; case 5
 21723  003C50  B4D8               	btfsc	status,2,c
 21724  003C52  0012               	return	
 21725  003C54  0A77               	xorlw	119	; case 114
 21726  003C56  B4D8               	btfsc	status,2,c
 21727  003C58  0012               	return	
 21728  003C5A  0A01               	xorlw	1	; case 115
 21729  003C5C  B4D8               	btfsc	status,2,c
 21730  003C5E  0012               	return	
 21731  003C60  0A07               	xorlw	7	; case 116
 21732  003C62  A4D8               	btfss	status,2,c
 21733  003C64  0A01               	xorlw	1	; case 117
 21734  003C66  0012               	return	
 21735  003C68                     i2l12354:
 21736                           
 21737                           ; Switch size 1, requested type "speed"
 21738                           ; Number of cases is 1, Range of values is 255 to 255
 21739                           ; switch strategies available:
 21740                           ; Name         Instructions Cycles
 21741                           ; simple_byte            4     3 (average)
 21742                           ;	Chosen strategy is simple_byte
 21743  003C68  1C41               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 21744  003C6A  0012               	return	
 21745  003C6C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 21746                           	opt stack 0
 21747                           pclatu	equ	0xFFB
 21748                           pclath	equ	0xFFA
 21749                           tblptru	equ	0xFF8
 21750                           tblptrh	equ	0xFF7
 21751                           tblptrl	equ	0xFF6
 21752                           tablat	equ	0xFF5
 21753                           prodh	equ	0xFF4
 21754                           prodl	equ	0xFF3
 21755                           intcon	equ	0xFF2
 21756                           postinc0	equ	0xFEE
 21757                           wreg	equ	0xFE8
 21758                           indf1	equ	0xFE7
 21759                           postdec1	equ	0xFE5
 21760                           fsr1h	equ	0xFE2
 21761                           fsr1l	equ	0xFE1
 21762                           indf2	equ	0xFDF
 21763                           postinc2	equ	0xFDE
 21764                           postdec2	equ	0xFDD
 21765                           plusw2	equ	0xFDB
 21766                           fsr2h	equ	0xFDA
 21767                           fsr2l	equ	0xFD9
 21768                           status	equ	0xFD8
 21769                           
 21770 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 21771 ;; Defined at:
 21772 ;;		line 107 in file "../Includes/Board/USBapp.c"
 21773 ;; Parameters:    Size  Location     Type
 21774 ;;		None
 21775 ;; Auto vars:     Size  Location     Type
 21776 ;;  i               1   12[COMRAM] unsigned char 
 21777 ;; Return value:  Size  Location     Type
 21778 ;;		None               void
 21779 ;; Registers used:
 21780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21781 ;; Tracked objects:
 21782 ;;		On entry : 0/0
 21783 ;;		On exit  : 0/0
 21784 ;;		Unchanged: 0/0
 21785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21786 ;;      Params:         0       0       0       0       0       0       0       0       0
 21787 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21788 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21789 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21790 ;;Total ram usage:        1 bytes
 21791 ;; Hardware stack levels used:    1
 21792 ;; Hardware stack levels required when called:    3
 21793 ;; This function calls:
 21794 ;;		_CDCInitEP
 21795 ;;		i2_EUSART_Initialize
 21796 ;; This function is called by:
 21797 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21798 ;; This function uses a non-reentrant model
 21799 ;;
 21800                           
 21801                           	psect	text103
 21802  003A38                     __ptext103:
 21803                           	opt stack 0
 21804  003A38                     _USBapp_CdcEmulatorInitialize:
 21805                           	opt stack 14
 21806                           
 21807                           ;USBapp.c: 110: CDCInitEP();
 21808                           
 21809                           ;incstack = 0
 21810  003A38  ECCF  F01E         	call	_CDCInitEP	;wreg free
 21811                           
 21812                           ; BSR set to: 0
 21813                           ;USBapp.c: 111: line_coding.bCharFormat = 0;
 21814  003A3C  6BC0               	clrf	(_line_coding+4)& (0+255),b
 21815                           
 21816                           ; BSR set to: 0
 21817                           ;USBapp.c: 112: line_coding.bDataBits = 8;
 21818  003A3E  0E08               	movlw	8
 21819  003A40  6FC2               	movwf	(_line_coding+6)& (0+255),b
 21820                           
 21821                           ; BSR set to: 0
 21822                           ;USBapp.c: 113: line_coding.bParityType = 0;
 21823  003A42  6BC1               	clrf	(_line_coding+5)& (0+255),b
 21824                           
 21825                           ; BSR set to: 0
 21826                           ;USBapp.c: 114: line_coding.dwDTERate = 19200;
 21827  003A44  6BBC               	clrf	_line_coding& (0+255),b
 21828  003A46  0E4B               	movlw	75
 21829  003A48  6FBD               	movwf	(_line_coding+1)& (0+255),b
 21830  003A4A  6BBE               	clrf	(_line_coding+2)& (0+255),b
 21831  003A4C  6BBF               	clrf	(_line_coding+3)& (0+255),b
 21832                           
 21833                           ; BSR set to: 0
 21834                           ;USBapp.c: 115: EUSART_Initialize();
 21835  003A4E  EC47  F01C         	call	i2_EUSART_Initialize	;wreg free
 21836                           
 21837                           ; BSR set to: 0
 21838                           ;USBapp.c: 117: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 21839  003A52  6A3A               	clrf	USBapp_CdcEmulatorInitialize@i,c
 21840  003A54                     i2l6362:
 21841                           
 21842                           ;USBapp.c: 118: {
 21843                           ;USBapp.c: 119: USB_Buffer[i] = 0;
 21844  003A54  0E40               	movlw	low _USB_Buffer
 21845  003A56  243A               	addwf	USBapp_CdcEmulatorInitialize@i,w,c
 21846  003A58  6ED9               	movwf	fsr2l,c
 21847  003A5A  6ADA               	clrf	fsr2h,c
 21848  003A5C  0E01               	movlw	high _USB_Buffer
 21849  003A5E  22DA               	addwfc	fsr2h,f,c
 21850  003A60  6ADF               	clrf	indf2,c
 21851  003A62  2A3A               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 21852  003A64  0E3F               	movlw	63
 21853  003A66  643A               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 21854  003A68  D7F5               	goto	i2l6362
 21855                           
 21856                           ;USBapp.c: 120: }
 21857                           ;USBapp.c: 121: NextUSBOut = 0;
 21858  003A6A  6A1A               	clrf	_NextUSBOut,c
 21859                           
 21860                           ;USBapp.c: 122: LastRS232Out = 0;
 21861  003A6C  6A19               	clrf	_LastRS232Out,c
 21862  003A6E  0012               	return		;funcret
 21863  003A70                     __end_of_USBapp_CdcEmulatorInitialize:
 21864                           	opt stack 0
 21865                           pclatu	equ	0xFFB
 21866                           pclath	equ	0xFFA
 21867                           tblptru	equ	0xFF8
 21868                           tblptrh	equ	0xFF7
 21869                           tblptrl	equ	0xFF6
 21870                           tablat	equ	0xFF5
 21871                           prodh	equ	0xFF4
 21872                           prodl	equ	0xFF3
 21873                           intcon	equ	0xFF2
 21874                           postinc0	equ	0xFEE
 21875                           wreg	equ	0xFE8
 21876                           indf1	equ	0xFE7
 21877                           postdec1	equ	0xFE5
 21878                           fsr1h	equ	0xFE2
 21879                           fsr1l	equ	0xFE1
 21880                           indf2	equ	0xFDF
 21881                           postinc2	equ	0xFDE
 21882                           postdec2	equ	0xFDD
 21883                           plusw2	equ	0xFDB
 21884                           fsr2h	equ	0xFDA
 21885                           fsr2l	equ	0xFD9
 21886                           status	equ	0xFD8
 21887                           
 21888 ;; *************** function _CDCInitEP *****************
 21889 ;; Defined at:
 21890 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 21891 ;; Parameters:    Size  Location     Type
 21892 ;;		None
 21893 ;; Auto vars:     Size  Location     Type
 21894 ;;		None
 21895 ;; Return value:  Size  Location     Type
 21896 ;;		None               void
 21897 ;; Registers used:
 21898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21899 ;; Tracked objects:
 21900 ;;		On entry : 0/0
 21901 ;;		On exit  : F/0
 21902 ;;		Unchanged: 0/0
 21903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21904 ;;      Params:         0       0       0       0       0       0       0       0       0
 21905 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21906 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21907 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21908 ;;Total ram usage:        0 bytes
 21909 ;; Hardware stack levels used:    1
 21910 ;; Hardware stack levels required when called:    2
 21911 ;; This function calls:
 21912 ;;		_USBEnableEndpoint
 21913 ;;		i2_USBTransferOnePacket
 21914 ;; This function is called by:
 21915 ;;		_USBapp_CdcEmulatorInitialize
 21916 ;; This function uses a non-reentrant model
 21917 ;;
 21918                           
 21919                           	psect	text104
 21920  003D9E                     __ptext104:
 21921                           	opt stack 0
 21922  003D9E                     _CDCInitEP:
 21923                           	opt stack 14
 21924                           
 21925                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 21926                           
 21927                           ;incstack = 0
 21928  003D9E  0100               	movlb	0	; () banked
 21929  003DA0  6BBC               	clrf	_line_coding& (0+255),b
 21930  003DA2  0E4B               	movlw	75
 21931  003DA4  6FBD               	movwf	(_line_coding+1)& (0+255),b
 21932  003DA6  6BBE               	clrf	(_line_coding+2)& (0+255),b
 21933  003DA8  6BBF               	clrf	(_line_coding+3)& (0+255),b
 21934                           
 21935                           ; BSR set to: 0
 21936                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 21937  003DAA  6BC0               	clrf	(_line_coding+4)& (0+255),b
 21938                           
 21939                           ; BSR set to: 0
 21940                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 21941  003DAC  6BC1               	clrf	(_line_coding+5)& (0+255),b
 21942                           
 21943                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 21944  003DAE  0E08               	movlw	8
 21945  003DB0  6FC2               	movwf	(_line_coding+6)& (0+255),b
 21946                           
 21947                           ; BSR set to: 0
 21948                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 21949  003DB2  6B91               	clrf	_cdc_rx_len& (0+255),b
 21950                           
 21951                           ; BSR set to: 0
 21952                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 21953  003DB4  0E1A               	movlw	26
 21954  003DB6  6E36               	movwf	USBEnableEndpoint@options,c
 21955  003DB8  0E01               	movlw	1
 21956  003DBA  ECE6  F01C         	call	_USBEnableEndpoint
 21957                           
 21958                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 21959  003DBE  0E1E               	movlw	30
 21960  003DC0  6E36               	movwf	USBEnableEndpoint@options,c
 21961  003DC2  0E02               	movlw	2
 21962  003DC4  ECE6  F01C         	call	_USBEnableEndpoint
 21963                           
 21964                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21965  003DC8  0E00               	movlw	0
 21966  003DCA  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 21967  003DCC  0E40               	movlw	64
 21968  003DCE  6E2F               	movwf	i2USBTransferOnePacket@data,c
 21969  003DD0  0E05               	movlw	5
 21970  003DD2  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 21971  003DD4  0E40               	movlw	64
 21972  003DD6  6E31               	movwf	i2USBTransferOnePacket@len,c
 21973  003DD8  0E02               	movlw	2
 21974  003DDA  EC10  F024         	call	i2_USBTransferOnePacket
 21975  003DDE  C02E  F078         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 21976  003DE2  C02F  F079         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21977                           
 21978                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 21979  003DE6  0100               	movlb	0	; () banked
 21980  003DE8  6B76               	clrf	_CDCDataInHandle& (0+255),b
 21981  003DEA  6B77               	clrf	(_CDCDataInHandle+1)& (0+255),b
 21982                           
 21983                           ; BSR set to: 0
 21984                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 21985  003DEC  6A20               	clrf	_cdc_trf_state,c
 21986                           
 21987                           ; BSR set to: 0
 21988  003DEE  0012               	return		;funcret
 21989  003DF0                     __end_of_CDCInitEP:
 21990                           	opt stack 0
 21991                           pclatu	equ	0xFFB
 21992                           pclath	equ	0xFFA
 21993                           tblptru	equ	0xFF8
 21994                           tblptrh	equ	0xFF7
 21995                           tblptrl	equ	0xFF6
 21996                           tablat	equ	0xFF5
 21997                           prodh	equ	0xFF4
 21998                           prodl	equ	0xFF3
 21999                           intcon	equ	0xFF2
 22000                           postinc0	equ	0xFEE
 22001                           wreg	equ	0xFE8
 22002                           indf1	equ	0xFE7
 22003                           postdec1	equ	0xFE5
 22004                           fsr1h	equ	0xFE2
 22005                           fsr1l	equ	0xFE1
 22006                           indf2	equ	0xFDF
 22007                           postinc2	equ	0xFDE
 22008                           postdec2	equ	0xFDD
 22009                           plusw2	equ	0xFDB
 22010                           fsr2h	equ	0xFDA
 22011                           fsr2l	equ	0xFD9
 22012                           status	equ	0xFD8
 22013                           
 22014 ;; *************** function i2_USBTransferOnePacket *****************
 22015 ;; Defined at:
 22016 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 22017 ;; Parameters:    Size  Location     Type
 22018 ;;  ep              1    wreg     unsigned char 
 22019 ;;  dir             1    0[COMRAM] unsigned char 
 22020 ;;  data            2    1[COMRAM] PTR unsigned char 
 22021 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 22022 ;;  len             1    3[COMRAM] unsigned char 
 22023 ;; Auto vars:     Size  Location     Type
 22024 ;;  ep              1    4[COMRAM] unsigned char 
 22025 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 22026 ;;		 -> BDT(48), NULL(0), 
 22027 ;; Return value:  Size  Location     Type
 22028 ;;                  2    0[COMRAM] PTR void 
 22029 ;; Registers used:
 22030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22031 ;; Tracked objects:
 22032 ;;		On entry : 0/0
 22033 ;;		On exit  : 0/0
 22034 ;;		Unchanged: 0/0
 22035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22036 ;;      Params:         4       0       0       0       0       0       0       0       0
 22037 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22038 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22039 ;;      Totals:         7       0       0       0       0       0       0       0       0
 22040 ;;Total ram usage:        7 bytes
 22041 ;; Hardware stack levels used:    1
 22042 ;; This function calls:
 22043 ;;		Nothing
 22044 ;; This function is called by:
 22045 ;;		_CDCInitEP
 22046 ;; This function uses a non-reentrant model
 22047 ;;
 22048                           
 22049                           	psect	text105
 22050  004820                     __ptext105:
 22051                           	opt stack 0
 22052  004820                     i2_USBTransferOnePacket:
 22053                           	opt stack 15
 22054                           
 22055                           ; BSR set to: 0
 22056                           ;incstack = 0
 22057                           ;i2USBTransferOnePacket@ep stored from wreg
 22058  004820  6E32               	movwf	i2USBTransferOnePacket@ep,c
 22059                           
 22060                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 22061                           ;usb_device.c: 762: if(dir != 0)
 22062  004822  502E               	movf	i2USBTransferOnePacket@dir,w,c
 22063  004824  E005               	bz	i2l6230
 22064                           
 22065                           ;usb_device.c: 763: {
 22066                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 22067  004826  5032               	movf	i2USBTransferOnePacket@ep,w,c
 22068  004828  0D02               	mullw	2
 22069  00482A  50F3               	movf	prodl,w,c
 22070  00482C  0F0F               	addlw	low _pBDTEntryIn
 22071  00482E  D004               	goto	L63
 22072  004830                     i2l6230:
 22073                           
 22074                           ;usb_device.c: 767: else
 22075                           ;usb_device.c: 768: {
 22076                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 22077  004830  5032               	movf	i2USBTransferOnePacket@ep,w,c
 22078  004832  0D02               	mullw	2
 22079  004834  50F3               	movf	prodl,w,c
 22080  004836  0F60               	addlw	low _pBDTEntryOut
 22081  004838                     L63:
 22082  004838  6ED9               	movwf	fsr2l,c
 22083  00483A  6ADA               	clrf	fsr2h,c
 22084  00483C  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 22085  004840  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 22086                           
 22087                           ;usb_device.c: 771: }
 22088                           ;usb_device.c: 775: if(handle == 0)
 22089  004844  5033               	movf	i2USBTransferOnePacket@handle,w,c
 22090  004846  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 22091  004848  E103               	bnz	i2l6236
 22092                           
 22093                           ;usb_device.c: 776: {
 22094                           ;usb_device.c: 777: return 0;
 22095  00484A  6A2E               	clrf	?i2_USBTransferOnePacket,c
 22096  00484C  6A2F               	clrf	?i2_USBTransferOnePacket+1,c
 22097  00484E  0012               	return	
 22098  004850                     i2l6236:
 22099                           
 22100                           ;usb_device.c: 778: }
 22101                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 22102  004850  EE20 F002          	lfsr	2,2
 22103  004854  5033               	movf	i2USBTransferOnePacket@handle,w,c
 22104  004856  26D9               	addwf	fsr2l,f,c
 22105  004858  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 22106  00485A  22DA               	addwfc	fsr2h,f,c
 22107  00485C  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 22108  004860  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 22109                           
 22110                           ;usb_device.c: 781: handle->CNT = len;
 22111  004864  EE20 F001          	lfsr	2,1
 22112  004868  5033               	movf	i2USBTransferOnePacket@handle,w,c
 22113  00486A  26D9               	addwf	fsr2l,f,c
 22114  00486C  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 22115  00486E  22DA               	addwfc	fsr2h,f,c
 22116  004870  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 22117                           
 22118                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 22119  004874  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22120  004878  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22121  00487C  0E40               	movlw	64
 22122  00487E  16DF               	andwf	indf2,f,c
 22123                           
 22124                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 22125  004880  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22126  004884  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22127  004888  0E00               	movlw	0
 22128  00488A  86DB               	bsf	plusw2,3,c
 22129                           
 22130                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 22131  00488C  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 22132  004890  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 22133  004894  8EDB               	bsf	plusw2,7,c
 22134                           
 22135                           ;usb_device.c: 787: if(dir != 0)
 22136  004896  502E               	movf	i2USBTransferOnePacket@dir,w,c
 22137  004898  E005               	bz	i2l6248
 22138                           
 22139                           ;usb_device.c: 788: {
 22140                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 22141  00489A  5032               	movf	i2USBTransferOnePacket@ep,w,c
 22142  00489C  0D02               	mullw	2
 22143  00489E  50F3               	movf	prodl,w,c
 22144  0048A0  0F0F               	addlw	low _pBDTEntryIn
 22145  0048A2  D004               	goto	L64
 22146  0048A4                     i2l6248:
 22147                           
 22148                           ;usb_device.c: 792: else
 22149                           ;usb_device.c: 793: {
 22150                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 22151  0048A4  5032               	movf	i2USBTransferOnePacket@ep,w,c
 22152  0048A6  0D02               	mullw	2
 22153  0048A8  50F3               	movf	prodl,w,c
 22154  0048AA  0F60               	addlw	low _pBDTEntryOut
 22155  0048AC                     L64:
 22156  0048AC  6ED9               	movwf	fsr2l,c
 22157  0048AE  6ADA               	clrf	fsr2h,c
 22158  0048B0  0E04               	movlw	4
 22159  0048B2  1ADF               	xorwf	indf2,f,c
 22160                           
 22161                           ;usb_device.c: 796: }
 22162                           ;usb_device.c: 797: return (void*)handle;
 22163  0048B4  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 22164  0048B8  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 22165  0048BC  0C04               	retlw	4	;funcret
 22166  0048BE                     __end_ofi2_USBTransferOnePacket:
 22167                           	opt stack 0
 22168                           pclatu	equ	0xFFB
 22169                           pclath	equ	0xFFA
 22170                           tblptru	equ	0xFF8
 22171                           tblptrh	equ	0xFF7
 22172                           tblptrl	equ	0xFF6
 22173                           tablat	equ	0xFF5
 22174                           prodh	equ	0xFF4
 22175                           prodl	equ	0xFF3
 22176                           intcon	equ	0xFF2
 22177                           postinc0	equ	0xFEE
 22178                           wreg	equ	0xFE8
 22179                           indf1	equ	0xFE7
 22180                           postdec1	equ	0xFE5
 22181                           fsr1h	equ	0xFE2
 22182                           fsr1l	equ	0xFE1
 22183                           indf2	equ	0xFDF
 22184                           postinc2	equ	0xFDE
 22185                           postdec2	equ	0xFDD
 22186                           plusw2	equ	0xFDB
 22187                           fsr2h	equ	0xFDA
 22188                           fsr2l	equ	0xFD9
 22189                           status	equ	0xFD8
 22190                           
 22191 ;; *************** function _USBEnableEndpoint *****************
 22192 ;; Defined at:
 22193 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 22194 ;; Parameters:    Size  Location     Type
 22195 ;;  ep              1    wreg     unsigned char 
 22196 ;;  options         1    8[COMRAM] unsigned char 
 22197 ;; Auto vars:     Size  Location     Type
 22198 ;;  ep              1   11[COMRAM] unsigned char 
 22199 ;;  p               2    9[COMRAM] PTR unsigned char 
 22200 ;;		 -> UEP0(1), 
 22201 ;; Return value:  Size  Location     Type
 22202 ;;		None               void
 22203 ;; Registers used:
 22204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22205 ;; Tracked objects:
 22206 ;;		On entry : 0/0
 22207 ;;		On exit  : 0/0
 22208 ;;		Unchanged: 0/0
 22209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22210 ;;      Params:         1       0       0       0       0       0       0       0       0
 22211 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22212 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22213 ;;      Totals:         4       0       0       0       0       0       0       0       0
 22214 ;;Total ram usage:        4 bytes
 22215 ;; Hardware stack levels used:    1
 22216 ;; Hardware stack levels required when called:    1
 22217 ;; This function calls:
 22218 ;;		_USBConfigureEndpoint
 22219 ;; This function is called by:
 22220 ;;		_CDCInitEP
 22221 ;; This function uses a non-reentrant model
 22222 ;;
 22223                           
 22224                           	psect	text106
 22225  0039CC                     __ptext106:
 22226                           	opt stack 0
 22227  0039CC                     _USBEnableEndpoint:
 22228                           	opt stack 14
 22229                           
 22230                           ;incstack = 0
 22231                           ;USBEnableEndpoint@ep stored from wreg
 22232  0039CC  6E39               	movwf	USBEnableEndpoint@ep,c
 22233                           
 22234                           ;usb_device.c: 647: unsigned char* p;
 22235                           ;usb_device.c: 651: if(options & 0x04)
 22236  0039CE  A436               	btfss	USBEnableEndpoint@options,2,c
 22237  0039D0  D004               	goto	i2l6218
 22238                           
 22239                           ;usb_device.c: 652: {
 22240                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 22241  0039D2  6A2E               	clrf	USBConfigureEndpoint@direction,c
 22242  0039D4  5039               	movf	USBEnableEndpoint@ep,w,c
 22243  0039D6  ECF3  F022         	call	_USBConfigureEndpoint
 22244  0039DA                     i2l6218:
 22245                           
 22246                           ;usb_device.c: 654: }
 22247                           ;usb_device.c: 655: if(options & 0x02)
 22248  0039DA  A236               	btfss	USBEnableEndpoint@options,1,c
 22249  0039DC  D005               	goto	i2l6222
 22250                           
 22251                           ;usb_device.c: 656: {
 22252                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 22253  0039DE  0E01               	movlw	1
 22254  0039E0  6E2E               	movwf	USBConfigureEndpoint@direction,c
 22255  0039E2  5039               	movf	USBEnableEndpoint@ep,w,c
 22256  0039E4  ECF3  F022         	call	_USBConfigureEndpoint
 22257  0039E8                     i2l6222:
 22258                           
 22259                           ;usb_device.c: 658: }
 22260                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 22261  0039E8  0E6A               	movlw	106
 22262  0039EA  2439               	addwf	USBEnableEndpoint@ep,w,c
 22263  0039EC  6E37               	movwf	USBEnableEndpoint@p,c
 22264  0039EE  6A38               	clrf	USBEnableEndpoint@p+1,c
 22265  0039F0  0E0F               	movlw	15
 22266  0039F2  2238               	addwfc	USBEnableEndpoint@p+1,f,c
 22267                           
 22268                           ;usb_device.c: 664: *p = options;
 22269  0039F4  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 22270  0039F8  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 22271  0039FC  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 22272  003A00  0C0F               	retlw	15	;funcret
 22273  003A02                     __end_of_USBEnableEndpoint:
 22274                           	opt stack 0
 22275                           pclatu	equ	0xFFB
 22276                           pclath	equ	0xFFA
 22277                           tblptru	equ	0xFF8
 22278                           tblptrh	equ	0xFF7
 22279                           tblptrl	equ	0xFF6
 22280                           tablat	equ	0xFF5
 22281                           prodh	equ	0xFF4
 22282                           prodl	equ	0xFF3
 22283                           intcon	equ	0xFF2
 22284                           postinc0	equ	0xFEE
 22285                           wreg	equ	0xFE8
 22286                           indf1	equ	0xFE7
 22287                           postdec1	equ	0xFE5
 22288                           fsr1h	equ	0xFE2
 22289                           fsr1l	equ	0xFE1
 22290                           indf2	equ	0xFDF
 22291                           postinc2	equ	0xFDE
 22292                           postdec2	equ	0xFDD
 22293                           plusw2	equ	0xFDB
 22294                           fsr2h	equ	0xFDA
 22295                           fsr2l	equ	0xFD9
 22296                           status	equ	0xFD8
 22297                           
 22298 ;; *************** function _USBConfigureEndpoint *****************
 22299 ;; Defined at:
 22300 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 22301 ;; Parameters:    Size  Location     Type
 22302 ;;  EPNum           1    wreg     unsigned char 
 22303 ;;  direction       1    0[COMRAM] unsigned char 
 22304 ;; Auto vars:     Size  Location     Type
 22305 ;;  EPNum           1    5[COMRAM] unsigned char 
 22306 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 22307 ;;		 -> BDT(48), 
 22308 ;; Return value:  Size  Location     Type
 22309 ;;		None               void
 22310 ;; Registers used:
 22311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22312 ;; Tracked objects:
 22313 ;;		On entry : 0/0
 22314 ;;		On exit  : 0/0
 22315 ;;		Unchanged: 0/0
 22316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22317 ;;      Params:         1       0       0       0       0       0       0       0       0
 22318 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22319 ;;      Temps:          4       0       0       0       0       0       0       0       0
 22320 ;;      Totals:         8       0       0       0       0       0       0       0       0
 22321 ;;Total ram usage:        8 bytes
 22322 ;; Hardware stack levels used:    1
 22323 ;; This function calls:
 22324 ;;		Nothing
 22325 ;; This function is called by:
 22326 ;;		_USBEnableEndpoint
 22327 ;; This function uses a non-reentrant model
 22328 ;;
 22329                           
 22330                           	psect	text107
 22331  0045E6                     __ptext107:
 22332                           	opt stack 0
 22333  0045E6                     _USBConfigureEndpoint:
 22334                           	opt stack 14
 22335                           
 22336                           ;incstack = 0
 22337                           ;USBConfigureEndpoint@EPNum stored from wreg
 22338  0045E6  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 22339                           
 22340                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 22341                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 22342  0045E8  6A34               	clrf	USBConfigureEndpoint@handle,c
 22343  0045EA  0E04               	movlw	4
 22344  0045EC  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 22345                           
 22346                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 22347  0045EE  502E               	movf	USBConfigureEndpoint@direction,w,c
 22348  0045F0  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 22349  0045F2  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 22350  0045F4  90D8               	bcf	status,0,c
 22351  0045F6  362F               	rlcf	??_USBConfigureEndpoint,f,c
 22352  0045F8  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 22353  0045FA  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 22354  0045FC  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 22355  0045FE  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 22356  004600  90D8               	bcf	status,0,c
 22357  004602  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 22358  004604  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 22359  004606  90D8               	bcf	status,0,c
 22360  004608  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 22361  00460A  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 22362  00460C  502F               	movf	??_USBConfigureEndpoint,w,c
 22363  00460E  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 22364  004610  5030               	movf	??_USBConfigureEndpoint+1,w,c
 22365  004612  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 22366  004614  90D8               	bcf	status,0,c
 22367  004616  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 22368  004618  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 22369  00461A  90D8               	bcf	status,0,c
 22370  00461C  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 22371  00461E  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 22372  004620  5031               	movf	??_USBConfigureEndpoint+2,w,c
 22373  004622  2634               	addwf	USBConfigureEndpoint@handle,f,c
 22374  004624  5032               	movf	??_USBConfigureEndpoint+3,w,c
 22375  004626  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 22376                           
 22377                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 22378  004628  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 22379  00462C  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 22380  004630  9EDF               	bcf	indf2,7,c
 22381                           
 22382                           ;usb_device.c: 1242: if(direction == 0)
 22383  004632  502E               	movf	USBConfigureEndpoint@direction,w,c
 22384  004634  E105               	bnz	i2l6204
 22385                           
 22386                           ;usb_device.c: 1243: {
 22387                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 22388  004636  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 22389  004638  0D02               	mullw	2
 22390  00463A  50F3               	movf	prodl,w,c
 22391  00463C  0F60               	addlw	low _pBDTEntryOut
 22392  00463E  D004               	goto	L65
 22393  004640                     i2l6204:
 22394                           
 22395                           ;usb_device.c: 1246: else
 22396                           ;usb_device.c: 1247: {
 22397                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 22398  004640  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 22399  004642  0D02               	mullw	2
 22400  004644  50F3               	movf	prodl,w,c
 22401  004646  0F0F               	addlw	low _pBDTEntryIn
 22402  004648                     L65:
 22403  004648  6ED9               	movwf	fsr2l,c
 22404  00464A  6ADA               	clrf	fsr2h,c
 22405  00464C  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 22406  004650  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 22407                           
 22408                           ;usb_device.c: 1249: }
 22409                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 22410  004654  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 22411  004658  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 22412  00465C  9CDF               	bcf	indf2,6,c
 22413                           
 22414                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 22415  00465E  EE20 F004          	lfsr	2,4
 22416  004662  5034               	movf	USBConfigureEndpoint@handle,w,c
 22417  004664  26D9               	addwf	fsr2l,f,c
 22418  004666  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 22419  004668  22DA               	addwfc	fsr2h,f,c
 22420  00466A  8CDF               	bsf	indf2,6,c
 22421  00466C  0012               	return		;funcret
 22422  00466E                     __end_of_USBConfigureEndpoint:
 22423                           	opt stack 0
 22424                           pclatu	equ	0xFFB
 22425                           pclath	equ	0xFFA
 22426                           tblptru	equ	0xFF8
 22427                           tblptrh	equ	0xFF7
 22428                           tblptrl	equ	0xFF6
 22429                           tablat	equ	0xFF5
 22430                           prodh	equ	0xFF4
 22431                           prodl	equ	0xFF3
 22432                           intcon	equ	0xFF2
 22433                           postinc0	equ	0xFEE
 22434                           wreg	equ	0xFE8
 22435                           indf1	equ	0xFE7
 22436                           postdec1	equ	0xFE5
 22437                           fsr1h	equ	0xFE2
 22438                           fsr1l	equ	0xFE1
 22439                           indf2	equ	0xFDF
 22440                           postinc2	equ	0xFDE
 22441                           postdec2	equ	0xFDD
 22442                           plusw2	equ	0xFDB
 22443                           fsr2h	equ	0xFDA
 22444                           fsr2l	equ	0xFD9
 22445                           status	equ	0xFD8
 22446                           
 22447 ;; *************** function _USBCheckCDCRequest *****************
 22448 ;; Defined at:
 22449 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 22450 ;; Parameters:    Size  Location     Type
 22451 ;;		None
 22452 ;; Auto vars:     Size  Location     Type
 22453 ;;		None
 22454 ;; Return value:  Size  Location     Type
 22455 ;;		None               void
 22456 ;; Registers used:
 22457 ;;		wreg, status,2, status,0
 22458 ;; Tracked objects:
 22459 ;;		On entry : 0/0
 22460 ;;		On exit  : F/4
 22461 ;;		Unchanged: 0/0
 22462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22463 ;;      Params:         0       0       0       0       0       0       0       0       0
 22464 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22465 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22466 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22467 ;;Total ram usage:        0 bytes
 22468 ;; Hardware stack levels used:    1
 22469 ;; This function calls:
 22470 ;;		Nothing
 22471 ;; This function is called by:
 22472 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22473 ;; This function uses a non-reentrant model
 22474 ;;
 22475                           
 22476                           	psect	text108
 22477  00455E                     __ptext108:
 22478                           	opt stack 0
 22479  00455E                     _USBCheckCDCRequest:
 22480                           	opt stack 17
 22481                           
 22482                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 22483                           
 22484                           ;incstack = 0
 22485  00455E  0104               	movlb	4	; () banked
 22486  004560  5130               	movf	48,w,b	;volatile
 22487  004562  0B1F               	andlw	31
 22488  004564  06E8               	decf	wreg,f,c
 22489  004566  E001               	bz	i2l6372
 22490  004568  0012               	return	
 22491  00456A                     i2l6372:
 22492                           
 22493                           ; BSR set to: 4
 22494                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 22495  00456A  3930               	swapf	48,w,b	;volatile
 22496  00456C  32E8               	rrcf	wreg,f,c
 22497  00456E  0B03               	andlw	3
 22498  004570  06E8               	decf	wreg,f,c
 22499  004572  E001               	bz	i2l6376
 22500  004574  0012               	return	
 22501  004576                     i2l6376:
 22502                           
 22503                           ; BSR set to: 4
 22504                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 22505                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 22506  004576  5134               	movf	52,w,b	;volatile
 22507  004578  E02B               	bz	i2l6410
 22508                           
 22509                           ; BSR set to: 4
 22510  00457A  0534               	decf	52,w,b	;volatile
 22511  00457C  E029               	bz	i2l6410
 22512  00457E  0012               	return	
 22513  004580                     i2l6382:
 22514                           
 22515                           ; BSR set to: 4
 22516                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22517  004580  0ED0               	movlw	low _dummy_encapsulated_cmd_response
 22518  004582  6E09               	movwf	_inPipes,c	;volatile
 22519  004584  0E01               	movlw	high _dummy_encapsulated_cmd_response
 22520  004586  6E0A               	movwf	_inPipes+1,c	;volatile
 22521                           
 22522                           ; BSR set to: 4
 22523                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 22524  004588  6A0E               	clrf	_inPipes+5,c	;volatile
 22525  00458A  0E08               	movlw	8
 22526  00458C  6E0D               	movwf	_inPipes+4,c	;volatile
 22527                           
 22528                           ; BSR set to: 4
 22529                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22530  00458E  800C               	bsf	_inPipes+3,0,c	;volatile
 22531                           
 22532                           ; BSR set to: 4
 22533                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 22534  004590  8E0C               	bsf	_inPipes+3,7,c	;volatile
 22535                           
 22536                           ;usb_device_cdc.c: 212: break;
 22537  004592  0C08               	retlw	8
 22538  004594                     i2l6390:
 22539                           
 22540                           ; BSR set to: 4
 22541                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 22542  004594  0ED0               	movlw	low _dummy_encapsulated_cmd_response
 22543  004596  6E09               	movwf	_inPipes,c	;volatile
 22544  004598  0E01               	movlw	high _dummy_encapsulated_cmd_response
 22545  00459A  6E0A               	movwf	_inPipes+1,c	;volatile
 22546                           
 22547                           ; BSR set to: 4
 22548                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 22549  00459C  8E0C               	bsf	_inPipes+3,7,c	;volatile
 22550                           
 22551                           ;usb_device_cdc.c: 217: break;
 22552  00459E  0012               	return	
 22553  0045A0                     i2l1870:
 22554                           
 22555                           ; BSR set to: 4
 22556                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 22557  0045A0  C436 F005          	movff	1078,_outPipes+4	;volatile
 22558  0045A4  C437 F006          	movff	1079,_outPipes+5	;volatile
 22559                           
 22560                           ; BSR set to: 4
 22561                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 22562  0045A8  0EAA               	movlw	low _cdc_notice
 22563  0045AA  6E01               	movwf	_outPipes,c	;volatile
 22564                           
 22565                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 22566  0045AC  0EF0               	movlw	low _USART_mySetLineCodingHandler
 22567  0045AE  6E07               	movwf	_outPipes+6,c	;volatile
 22568  0045B0  0E3D               	movlw	high _USART_mySetLineCodingHandler
 22569  0045B2  6E08               	movwf	_outPipes+7,c	;volatile
 22570                           
 22571                           ; BSR set to: 4
 22572                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 22573  0045B4  8E04               	bsf	_outPipes+3,7,c	;volatile
 22574                           
 22575                           ;usb_device_cdc.c: 224: break;
 22576  0045B6  0012               	return	
 22577  0045B8                     i2l6398:
 22578                           
 22579                           ; BSR set to: 4
 22580                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 22581  0045B8  0EBC               	movlw	low _line_coding
 22582  0045BA  6E09               	movwf	_inPipes,c	;volatile
 22583  0045BC  6A0A               	clrf	_inPipes+1,c	;volatile
 22584                           
 22585                           ; BSR set to: 4
 22586  0045BE  6A0E               	clrf	_inPipes+5,c	;volatile
 22587  0045C0  0E07               	movlw	7
 22588  0045C2  6E0D               	movwf	_inPipes+4,c	;volatile
 22589                           
 22590                           ; BSR set to: 4
 22591  0045C4  0EC1               	movlw	193
 22592  0045C6  6E0C               	movwf	_inPipes+3,c	;volatile
 22593                           
 22594                           ;usb_device_cdc.c: 231: break;
 22595  0045C8  0CC1               	retlw	193
 22596  0045CA                     i2l6404:
 22597                           
 22598                           ; BSR set to: 4
 22599                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 22600  0045CA  5132               	movf	50,w,b	;volatile
 22601                           
 22602                           ; BSR set to: 4
 22603                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 22604  0045CC  8E0C               	bsf	_inPipes+3,7,c	;volatile
 22605                           
 22606                           ;usb_device_cdc.c: 256: break;
 22607  0045CE  0012               	return	
 22608  0045D0                     i2l6410:
 22609                           
 22610                           ; BSR set to: 4
 22611  0045D0  5131               	movf	49,w,b	;volatile
 22612                           
 22613                           ; Switch size 1, requested type "speed"
 22614                           ; Number of cases is 5, Range of values is 0 to 34
 22615                           ; switch strategies available:
 22616                           ; Name         Instructions Cycles
 22617                           ; simple_byte           16     9 (average)
 22618                           ;	Chosen strategy is simple_byte
 22619  0045D2  E0D6               	bz	i2l6382
 22620  0045D4  0A01               	xorlw	1	; case 1
 22621  0045D6  E0DE               	bz	i2l6390
 22622  0045D8  0A21               	xorlw	33	; case 32
 22623  0045DA  E0E2               	bz	i2l1870
 22624  0045DC  0A01               	xorlw	1	; case 33
 22625  0045DE  E0EC               	bz	i2l6398
 22626  0045E0  0A03               	xorlw	3	; case 34
 22627  0045E2  E0F3               	bz	i2l6404
 22628                           
 22629                           ; BSR set to: 4
 22630  0045E4  0012               	return		;funcret
 22631  0045E6                     __end_of_USBCheckCDCRequest:
 22632                           	opt stack 0
 22633                           pclatu	equ	0xFFB
 22634                           pclath	equ	0xFFA
 22635                           tblptru	equ	0xFF8
 22636                           tblptrh	equ	0xFF7
 22637                           tblptrl	equ	0xFF6
 22638                           tablat	equ	0xFF5
 22639                           prodh	equ	0xFF4
 22640                           prodl	equ	0xFF3
 22641                           intcon	equ	0xFF2
 22642                           postinc0	equ	0xFEE
 22643                           wreg	equ	0xFE8
 22644                           indf1	equ	0xFE7
 22645                           postdec1	equ	0xFE5
 22646                           fsr1h	equ	0xFE2
 22647                           fsr1l	equ	0xFE1
 22648                           indf2	equ	0xFDF
 22649                           postinc2	equ	0xFDE
 22650                           postdec2	equ	0xFDD
 22651                           plusw2	equ	0xFDB
 22652                           fsr2h	equ	0xFDA
 22653                           fsr2l	equ	0xFD9
 22654                           status	equ	0xFD8
 22655                           
 22656 ;; *************** function _USBCtrlTrfOutHandler *****************
 22657 ;; Defined at:
 22658 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 22659 ;; Parameters:    Size  Location     Type
 22660 ;;		None
 22661 ;; Auto vars:     Size  Location     Type
 22662 ;;		None
 22663 ;; Return value:  Size  Location     Type
 22664 ;;		None               void
 22665 ;; Registers used:
 22666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 22667 ;; Tracked objects:
 22668 ;;		On entry : F/0
 22669 ;;		On exit  : F/0
 22670 ;;		Unchanged: 0/0
 22671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22672 ;;      Params:         0       0       0       0       0       0       0       0       0
 22673 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22674 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22675 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22676 ;;Total ram usage:        0 bytes
 22677 ;; Hardware stack levels used:    1
 22678 ;; Hardware stack levels required when called:    3
 22679 ;; This function calls:
 22680 ;;		_USBCtrlTrfRxService
 22681 ;; This function is called by:
 22682 ;;		_USBCtrlEPService
 22683 ;; This function uses a non-reentrant model
 22684 ;;
 22685                           
 22686                           	psect	text109
 22687  003D4C                     __ptext109:
 22688                           	opt stack 0
 22689  003D4C                     _USBCtrlTrfOutHandler:
 22690                           	opt stack 14
 22691                           
 22692                           ; BSR set to: 0
 22693                           ;usb_device.c: 2171: if(controlTransferState == 2)
 22694                           
 22695                           ; BSR set to: 4
 22696                           ;incstack = 0
 22697  003D4C  0E02               	movlw	2
 22698  003D4E  1821               	xorwf	_controlTransferState,w,c	;volatile
 22699  003D50  E102               	bnz	i2l1753
 22700                           
 22701                           ; BSR set to: 0
 22702                           ;usb_device.c: 2172: {
 22703                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 22704  003D52  EF61  F02D         	goto	_USBCtrlTrfRxService	;wreg free
 22705  003D56                     i2l1753:
 22706                           
 22707                           ; BSR set to: 0
 22708                           ;usb_device.c: 2175: else
 22709                           ;usb_device.c: 2176: {
 22710                           ;usb_device.c: 2179: controlTransferState = 0;
 22711  003D56  6A21               	clrf	_controlTransferState,c	;volatile
 22712                           
 22713                           ; BSR set to: 0
 22714                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 22715  003D58  5186               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 22716  003D5A  E11F               	bnz	i2l1755
 22717                           
 22718                           ; BSR set to: 0
 22719                           ;usb_device.c: 2187: {
 22720                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 22721  003D5C  EE20 F001          	lfsr	2,1
 22722  003D60  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22723  003D62  26D9               	addwf	fsr2l,f,c
 22724  003D64  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22725  003D66  22DA               	addwfc	fsr2h,f,c
 22726  003D68  0E08               	movlw	8
 22727  003D6A  6EDF               	movwf	indf2,c
 22728                           
 22729                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22730  003D6C  EE20 F002          	lfsr	2,2
 22731  003D70  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22732  003D72  26D9               	addwf	fsr2l,f,c
 22733  003D74  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22734  003D76  22DA               	addwfc	fsr2h,f,c
 22735  003D78  0E30               	movlw	48
 22736  003D7A  6EDE               	movwf	postinc2,c
 22737  003D7C  0E04               	movlw	4
 22738  003D7E  6EDD               	movwf	postdec2,c
 22739                           
 22740                           ; BSR set to: 0
 22741                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22742  003D80  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22743  003D84  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22744  003D88  0E0C               	movlw	12
 22745  003D8A  6EDF               	movwf	indf2,c
 22746                           
 22747                           ; BSR set to: 0
 22748                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22749  003D8C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22750  003D90  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22751  003D94  0E00               	movlw	0
 22752  003D96  8EDB               	bsf	plusw2,7,c
 22753                           
 22754                           ;usb_device.c: 2192: }
 22755  003D98  0C00               	retlw	0
 22756  003D9A                     i2l1755:
 22757                           
 22758                           ; BSR set to: 0
 22759                           ;usb_device.c: 2193: else
 22760                           ;usb_device.c: 2194: {
 22761                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 22762  003D9A  6B86               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 22763                           
 22764                           ; BSR set to: 0
 22765  003D9C  0012               	return		;funcret
 22766  003D9E                     __end_of_USBCtrlTrfOutHandler:
 22767                           	opt stack 0
 22768                           pclatu	equ	0xFFB
 22769                           pclath	equ	0xFFA
 22770                           tblptru	equ	0xFF8
 22771                           tblptrh	equ	0xFF7
 22772                           tblptrl	equ	0xFF6
 22773                           tablat	equ	0xFF5
 22774                           prodh	equ	0xFF4
 22775                           prodl	equ	0xFF3
 22776                           intcon	equ	0xFF2
 22777                           postinc0	equ	0xFEE
 22778                           wreg	equ	0xFE8
 22779                           indf1	equ	0xFE7
 22780                           postdec1	equ	0xFE5
 22781                           fsr1h	equ	0xFE2
 22782                           fsr1l	equ	0xFE1
 22783                           indf2	equ	0xFDF
 22784                           postinc2	equ	0xFDE
 22785                           postdec2	equ	0xFDD
 22786                           plusw2	equ	0xFDB
 22787                           fsr2h	equ	0xFDA
 22788                           fsr2l	equ	0xFD9
 22789                           status	equ	0xFD8
 22790                           
 22791 ;; *************** function _USBCtrlTrfRxService *****************
 22792 ;; Defined at:
 22793 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 22794 ;; Parameters:    Size  Location     Type
 22795 ;;		None
 22796 ;; Auto vars:     Size  Location     Type
 22797 ;;  byteToRead      1   18[COMRAM] unsigned char 
 22798 ;;  i               1   17[COMRAM] unsigned char 
 22799 ;; Return value:  Size  Location     Type
 22800 ;;		None               void
 22801 ;; Registers used:
 22802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 22803 ;; Tracked objects:
 22804 ;;		On entry : F/0
 22805 ;;		On exit  : F/0
 22806 ;;		Unchanged: 0/0
 22807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22808 ;;      Params:         0       0       0       0       0       0       0       0       0
 22809 ;;      Locals:         2       0       0       0       0       0       0       0       0
 22810 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22811 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22812 ;;Total ram usage:        2 bytes
 22813 ;; Hardware stack levels used:    1
 22814 ;; Hardware stack levels required when called:    2
 22815 ;; This function calls:
 22816 ;;		_USART_mySetLineCodingHandler
 22817 ;;		_USBCtrlEPAllowStatusStage
 22818 ;; This function is called by:
 22819 ;;		_USBCtrlTrfOutHandler
 22820 ;; This function uses a non-reentrant model
 22821 ;;
 22822                           
 22823                           	psect	text110
 22824  005AC2                     __ptext110:
 22825                           	opt stack 0
 22826  005AC2                     _USBCtrlTrfRxService:
 22827                           	opt stack 14
 22828                           
 22829                           ; BSR set to: 0
 22830                           ;usb_device.c: 1520: uint8_t byteToRead;
 22831                           ;usb_device.c: 1521: uint8_t i;
 22832                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 22833                           
 22834                           ; BSR set to: 0
 22835                           ;incstack = 0
 22836  005AC2  EE20 F001          	lfsr	2,1
 22837  005AC6  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 22838  005AC8  26D9               	addwf	fsr2l,f,c
 22839  005ACA  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 22840  005ACC  22DA               	addwfc	fsr2h,f,c
 22841  005ACE  50DF               	movf	indf2,w,c
 22842  005AD0  6E40               	movwf	USBCtrlTrfRxService@byteToRead,c
 22843                           
 22844                           ; BSR set to: 0
 22845                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 22846  005AD2  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22847  005AD4  5C05               	subwf	_outPipes+4,w,c	;volatile
 22848  005AD6  0E00               	movlw	0
 22849  005AD8  5806               	subwfb	_outPipes+5,w,c	;volatile
 22850  005ADA  E202               	bc	i2l7092
 22851                           
 22852                           ; BSR set to: 0
 22853                           ;usb_device.c: 1532: {
 22854                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 22855  005ADC  C005  F040         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 22856  005AE0                     i2l7092:
 22857                           
 22858                           ; BSR set to: 0
 22859                           ;usb_device.c: 1534: }
 22860                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 22861  005AE0  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22862  005AE2  5E05               	subwf	_outPipes+4,f,c	;volatile
 22863  005AE4  0E00               	movlw	0
 22864  005AE6  5A06               	subwfb	_outPipes+5,f,c	;volatile
 22865                           
 22866                           ; BSR set to: 0
 22867                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 22868  005AE8  6A3F               	clrf	USBCtrlTrfRxService@i,c
 22869  005AEA  D00D               	goto	i2l7102
 22870  005AEC                     i2l7096:
 22871                           
 22872                           ; BSR set to: 0
 22873                           ;usb_device.c: 1541: {
 22874                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 22875  005AEC  0E38               	movlw	56
 22876  005AEE  243F               	addwf	USBCtrlTrfRxService@i,w,c
 22877  005AF0  6ED9               	movwf	fsr2l,c
 22878  005AF2  6ADA               	clrf	fsr2h,c
 22879  005AF4  0E04               	movlw	4
 22880  005AF6  22DA               	addwfc	fsr2h,f,c
 22881  005AF8  5001               	movf	_outPipes,w,c	;volatile
 22882  005AFA  6EE1               	movwf	fsr1l,c
 22883  005AFC  6AE2               	clrf	fsr1h,c
 22884  005AFE  CFDF FFE7          	movff	indf2,indf1
 22885                           
 22886                           ; BSR set to: 0
 22887  005B02  2A01               	incf	_outPipes,f,c	;volatile
 22888                           
 22889                           ; BSR set to: 0
 22890  005B04  2A3F               	incf	USBCtrlTrfRxService@i,f,c
 22891  005B06                     i2l7102:
 22892                           
 22893                           ; BSR set to: 0
 22894  005B06  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22895  005B08  5C3F               	subwf	USBCtrlTrfRxService@i,w,c
 22896  005B0A  E3F0               	bnc	i2l7096
 22897                           
 22898                           ; BSR set to: 0
 22899                           ;usb_device.c: 1543: }
 22900                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 22901  005B0C  5005               	movf	_outPipes+4,w,c	;volatile
 22902  005B0E  1006               	iorwf	_outPipes+5,w,c	;volatile
 22903  005B10  E032               	bz	i2l7118
 22904                           
 22905                           ; BSR set to: 0
 22906                           ;usb_device.c: 1548: {
 22907                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 22908  005B12  EE20 F001          	lfsr	2,1
 22909  005B16  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22910  005B18  26D9               	addwf	fsr2l,f,c
 22911  005B1A  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22912  005B1C  22DA               	addwfc	fsr2h,f,c
 22913  005B1E  0E08               	movlw	8
 22914  005B20  6EDF               	movwf	indf2,c
 22915                           
 22916                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 22917  005B22  EE20 F002          	lfsr	2,2
 22918  005B26  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22919  005B28  26D9               	addwf	fsr2l,f,c
 22920  005B2A  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22921  005B2C  22DA               	addwfc	fsr2h,f,c
 22922  005B2E  0E38               	movlw	56
 22923  005B30  6EDE               	movwf	postinc2,c
 22924  005B32  0E04               	movlw	4
 22925  005B34  6EDD               	movwf	postdec2,c
 22926                           
 22927                           ; BSR set to: 0
 22928                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 22929  005B36  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22930  005B3A  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22931  005B3E  BCDF               	btfsc	indf2,6,c
 22932  005B40  D00D               	goto	i2l7114
 22933                           
 22934                           ; BSR set to: 0
 22935                           ;usb_device.c: 1552: {
 22936                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 22937  005B42  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22938  005B46  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22939  005B4A  0E48               	movlw	72
 22940  005B4C  6EDF               	movwf	indf2,c
 22941                           
 22942                           ; BSR set to: 0
 22943                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22944  005B4E  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22945  005B52  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22946  005B56  0E00               	movlw	0
 22947  005B58  8EDB               	bsf	plusw2,7,c
 22948                           
 22949                           ;usb_device.c: 1555: }
 22950  005B5A  0C00               	retlw	0
 22951  005B5C                     i2l7114:
 22952                           
 22953                           ; BSR set to: 0
 22954                           ;usb_device.c: 1556: else
 22955                           ;usb_device.c: 1557: {
 22956                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 22957  005B5C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22958  005B60  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22959  005B64  0E08               	movlw	8
 22960  005B66  6EDF               	movwf	indf2,c
 22961                           
 22962                           ; BSR set to: 0
 22963                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22964  005B68  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22965  005B6C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22966  005B70  0E00               	movlw	0
 22967  005B72  8EDB               	bsf	plusw2,7,c
 22968  005B74  0C00               	retlw	0
 22969  005B76                     i2l7118:
 22970                           
 22971                           ; BSR set to: 0
 22972                           ;usb_device.c: 1562: else
 22973                           ;usb_device.c: 1563: {
 22974                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 22975  005B76  EE20 F001          	lfsr	2,1
 22976  005B7A  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22977  005B7C  26D9               	addwf	fsr2l,f,c
 22978  005B7E  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22979  005B80  22DA               	addwfc	fsr2h,f,c
 22980  005B82  0E08               	movlw	8
 22981  005B84  6EDF               	movwf	indf2,c
 22982                           
 22983                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22984  005B86  EE20 F002          	lfsr	2,2
 22985  005B8A  5017               	movf	_pBDTEntryEP0OutNext,w,c
 22986  005B8C  26D9               	addwf	fsr2l,f,c
 22987  005B8E  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 22988  005B90  22DA               	addwfc	fsr2h,f,c
 22989  005B92  0E30               	movlw	48
 22990  005B94  6EDE               	movwf	postinc2,c
 22991  005B96  0E04               	movlw	4
 22992  005B98  6EDD               	movwf	postdec2,c
 22993                           
 22994                           ; BSR set to: 0
 22995                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 22996  005B9A  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22997  005B9E  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22998  005BA2  6EDF               	movwf	indf2,c
 22999                           
 23000                           ; BSR set to: 0
 23001                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23002  005BA4  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23003  005BA8  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23004  005BAC  0E00               	movlw	0
 23005  005BAE  8EDB               	bsf	plusw2,7,c
 23006                           
 23007                           ; BSR set to: 0
 23008                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 23009  005BB0  5007               	movf	_outPipes+6,w,c	;volatile
 23010  005BB2  1008               	iorwf	_outPipes+7,w,c	;volatile
 23011  005BB4  E00E               	bz	i2l7128
 23012                           
 23013                           ; BSR set to: 0
 23014                           ;usb_device.c: 1581: {
 23015                           ;usb_device.c: 1586: outPipes[0].pFunc();
 23016  005BB6  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 23017  005BBA  D801               	call	i2u500_48
 23018  005BBC  D00A               	goto	i2l7128
 23019  005BBE                     i2u500_48:
 23020  005BBE  0005               	push	
 23021  005BC0  6EFA               	movwf	pclath,c
 23022  005BC2  50DE               	movf	postinc2,w,c
 23023  005BC4  6EFD               	movwf	tosl,c
 23024  005BC6  50DE               	movf	postinc2,w,c
 23025  005BC8  6EFE               	movwf	tosh,c
 23026  005BCA  50F8               	movf	tblptru,w,c
 23027  005BCC  6EFF               	movwf	tosu,c
 23028  005BCE  50FA               	movf	pclath,w,c
 23029  005BD0  0012               	return		;indir
 23030  005BD2                     i2l7128:
 23031                           
 23032                           ; BSR set to: 0
 23033                           ;usb_device.c: 1588: }
 23034                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 23035  005BD2  9E04               	bcf	_outPipes+3,7,c	;volatile
 23036                           
 23037                           ; BSR set to: 0
 23038                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 23039  005BD4  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 23040  005BD6  B4D8               	btfsc	status,2,c
 23041                           
 23042                           ; BSR set to: 0
 23043                           ;usb_device.c: 1604: {
 23044                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 23045  005BD8  ECB8  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23046                           
 23047                           ; BSR set to: 0
 23048  005BDC  0012               	return		;funcret
 23049  005BDE                     __end_of_USBCtrlTrfRxService:
 23050                           	opt stack 0
 23051                           tosu	equ	0xFFF
 23052                           tosh	equ	0xFFE
 23053                           tosl	equ	0xFFD
 23054                           pclatu	equ	0xFFB
 23055                           pclath	equ	0xFFA
 23056                           tblptru	equ	0xFF8
 23057                           tblptrh	equ	0xFF7
 23058                           tblptrl	equ	0xFF6
 23059                           tablat	equ	0xFF5
 23060                           prodh	equ	0xFF4
 23061                           prodl	equ	0xFF3
 23062                           intcon	equ	0xFF2
 23063                           postinc0	equ	0xFEE
 23064                           wreg	equ	0xFE8
 23065                           indf1	equ	0xFE7
 23066                           postdec1	equ	0xFE5
 23067                           fsr1h	equ	0xFE2
 23068                           fsr1l	equ	0xFE1
 23069                           indf2	equ	0xFDF
 23070                           postinc2	equ	0xFDE
 23071                           postdec2	equ	0xFDD
 23072                           plusw2	equ	0xFDB
 23073                           fsr2h	equ	0xFDA
 23074                           fsr2l	equ	0xFD9
 23075                           status	equ	0xFD8
 23076                           
 23077 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 23078 ;; Defined at:
 23079 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 23080 ;; Parameters:    Size  Location     Type
 23081 ;;		None
 23082 ;; Auto vars:     Size  Location     Type
 23083 ;;		None
 23084 ;; Return value:  Size  Location     Type
 23085 ;;		None               void
 23086 ;; Registers used:
 23087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23088 ;; Tracked objects:
 23089 ;;		On entry : 0/0
 23090 ;;		On exit  : F/0
 23091 ;;		Unchanged: 0/0
 23092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23093 ;;      Params:         0       0       0       0       0       0       0       0       0
 23094 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23095 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23096 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23097 ;;Total ram usage:        0 bytes
 23098 ;; Hardware stack levels used:    1
 23099 ;; This function calls:
 23100 ;;		Nothing
 23101 ;; This function is called by:
 23102 ;;		_USBDeviceTasks
 23103 ;;		_USBCtrlEPServiceComplete
 23104 ;;		_USBCtrlTrfRxService
 23105 ;; This function uses a non-reentrant model
 23106 ;;
 23107                           
 23108                           	psect	text111
 23109  004D70                     __ptext111:
 23110                           	opt stack 0
 23111  004D70                     _USBCtrlEPAllowStatusStage:
 23112                           	opt stack 15
 23113                           
 23114                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 23115                           
 23116                           ; BSR set to: 0
 23117                           ;incstack = 0
 23118  004D70  0100               	movlb	0	; () banked
 23119  004D72  518B               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 23120  004D74  A4D8               	btfss	status,2,c
 23121  004D76  0012               	return	
 23122                           
 23123                           ; BSR set to: 0
 23124                           ;usb_device.c: 1112: {
 23125                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 23126  004D78  0E01               	movlw	1
 23127  004D7A  6F8B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 23128                           
 23129                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 23130  004D7C  518C               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 23131  004D7E  A4D8               	btfss	status,2,c
 23132  004D80  0012               	return	
 23133                           
 23134                           ; BSR set to: 0
 23135                           ;usb_device.c: 1115: {
 23136                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 23137  004D82  0E01               	movlw	1
 23138  004D84  6F8C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 23139                           
 23140                           ; BSR set to: 0
 23141                           ;usb_device.c: 1120: if(controlTransferState == 2)
 23142  004D86  0E02               	movlw	2
 23143  004D88  1821               	xorwf	_controlTransferState,w,c	;volatile
 23144  004D8A  E114               	bnz	i2l6680
 23145                           
 23146                           ; BSR set to: 0
 23147                           ;usb_device.c: 1121: {
 23148                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 23149  004D8C  EE20 F001          	lfsr	2,1
 23150  004D90  500F               	movf	_pBDTEntryIn,w,c
 23151  004D92  26D9               	addwf	fsr2l,f,c
 23152  004D94  5010               	movf	_pBDTEntryIn+1,w,c
 23153  004D96  22DA               	addwfc	fsr2h,f,c
 23154  004D98  6ADF               	clrf	indf2,c
 23155                           
 23156                           ; BSR set to: 0
 23157                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23158  004D9A  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23159  004D9E  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23160  004DA2  0E48               	movlw	72
 23161  004DA4  6EDF               	movwf	indf2,c
 23162                           
 23163                           ; BSR set to: 0
 23164                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23165  004DA6  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23166  004DAA  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23167  004DAE  0E00               	movlw	0
 23168  004DB0  8EDB               	bsf	plusw2,7,c
 23169                           
 23170                           ;usb_device.c: 1125: }
 23171  004DB2  0C00               	retlw	0
 23172  004DB4                     i2l6680:
 23173                           
 23174                           ; BSR set to: 0
 23175                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 23176  004DB4  0421               	decf	_controlTransferState,w,c	;volatile
 23177  004DB6  A4D8               	btfss	status,2,c
 23178  004DB8  0012               	return	
 23179                           
 23180                           ; BSR set to: 0
 23181                           ;usb_device.c: 1127: {
 23182                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 23183  004DBA  6B86               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23184                           
 23185                           ; BSR set to: 0
 23186                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 23187  004DBC  EE20 F001          	lfsr	2,1
 23188  004DC0  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 23189  004DC2  26D9               	addwf	fsr2l,f,c
 23190  004DC4  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23191  004DC6  22DA               	addwfc	fsr2h,f,c
 23192  004DC8  0E08               	movlw	8
 23193  004DCA  6EDF               	movwf	indf2,c
 23194                           
 23195                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 23196  004DCC  EE20 F002          	lfsr	2,2
 23197  004DD0  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 23198  004DD2  26D9               	addwf	fsr2l,f,c
 23199  004DD4  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23200  004DD6  22DA               	addwfc	fsr2h,f,c
 23201  004DD8  0E30               	movlw	48
 23202  004DDA  6EDE               	movwf	postinc2,c
 23203  004DDC  0E04               	movlw	4
 23204  004DDE  6EDD               	movwf	postdec2,c
 23205                           
 23206                           ; BSR set to: 0
 23207                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 23208  004DE0  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23209  004DE4  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23210  004DE8  6EDF               	movwf	indf2,c
 23211                           
 23212                           ; BSR set to: 0
 23213                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 23214  004DEA  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23215  004DEE  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23216  004DF2  0E00               	movlw	0
 23217  004DF4  8EDB               	bsf	plusw2,7,c
 23218                           
 23219                           ; BSR set to: 0
 23220                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 23221  004DF6  0E01               	movlw	1
 23222  004DF8  6F86               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23223                           
 23224                           ; BSR set to: 0
 23225                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 23226  004DFA  EE20 F001          	lfsr	2,1
 23227  004DFE  5017               	movf	_pBDTEntryEP0OutNext,w,c
 23228  004E00  26D9               	addwf	fsr2l,f,c
 23229  004E02  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 23230  004E04  22DA               	addwfc	fsr2h,f,c
 23231  004E06  0E08               	movlw	8
 23232  004E08  6EDF               	movwf	indf2,c
 23233                           
 23234                           ; BSR set to: 0
 23235                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23236  004E0A  EE20 F002          	lfsr	2,2
 23237  004E0E  5017               	movf	_pBDTEntryEP0OutNext,w,c
 23238  004E10  26D9               	addwf	fsr2l,f,c
 23239  004E12  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 23240  004E14  22DA               	addwfc	fsr2h,f,c
 23241  004E16  0E30               	movlw	48
 23242  004E18  6EDE               	movwf	postinc2,c
 23243  004E1A  0E04               	movlw	4
 23244  004E1C  6EDD               	movwf	postdec2,c
 23245                           
 23246                           ; BSR set to: 0
 23247                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 23248  004E1E  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23249  004E22  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23250  004E26  0E80               	movlw	128
 23251  004E28  6EDF               	movwf	indf2,c
 23252  004E2A  0C80               	retlw	128
 23253  004E2C                     __end_of_USBCtrlEPAllowStatusStage:
 23254                           	opt stack 0
 23255                           tosu	equ	0xFFF
 23256                           tosh	equ	0xFFE
 23257                           tosl	equ	0xFFD
 23258                           pclatu	equ	0xFFB
 23259                           pclath	equ	0xFFA
 23260                           tblptru	equ	0xFF8
 23261                           tblptrh	equ	0xFF7
 23262                           tblptrl	equ	0xFF6
 23263                           tablat	equ	0xFF5
 23264                           prodh	equ	0xFF4
 23265                           prodl	equ	0xFF3
 23266                           intcon	equ	0xFF2
 23267                           postinc0	equ	0xFEE
 23268                           wreg	equ	0xFE8
 23269                           indf1	equ	0xFE7
 23270                           postdec1	equ	0xFE5
 23271                           fsr1h	equ	0xFE2
 23272                           fsr1l	equ	0xFE1
 23273                           indf2	equ	0xFDF
 23274                           postinc2	equ	0xFDE
 23275                           postdec2	equ	0xFDD
 23276                           plusw2	equ	0xFDB
 23277                           fsr2h	equ	0xFDA
 23278                           fsr2l	equ	0xFD9
 23279                           status	equ	0xFD8
 23280                           
 23281 ;; *************** function _USBCtrlTrfInHandler *****************
 23282 ;; Defined at:
 23283 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 23284 ;; Parameters:    Size  Location     Type
 23285 ;;		None
 23286 ;; Auto vars:     Size  Location     Type
 23287 ;;  lastDTS         1   17[COMRAM] unsigned char 
 23288 ;; Return value:  Size  Location     Type
 23289 ;;		None               void
 23290 ;; Registers used:
 23291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 23292 ;; Tracked objects:
 23293 ;;		On entry : F/0
 23294 ;;		On exit  : F/0
 23295 ;;		Unchanged: 0/0
 23296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23297 ;;      Params:         0       0       0       0       0       0       0       0       0
 23298 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23299 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23300 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23301 ;;Total ram usage:        1 bytes
 23302 ;; Hardware stack levels used:    1
 23303 ;; Hardware stack levels required when called:    2
 23304 ;; This function calls:
 23305 ;;		_USART_mySetLineCodingHandler
 23306 ;;		_USBCtrlTrfTxService
 23307 ;; This function is called by:
 23308 ;;		_USBCtrlEPService
 23309 ;; This function uses a non-reentrant model
 23310 ;;
 23311                           
 23312                           	psect	text112
 23313  004EEE                     __ptext112:
 23314                           	opt stack 0
 23315  004EEE                     _USBCtrlTrfInHandler:
 23316                           	opt stack 15
 23317                           
 23318                           ; BSR set to: 0
 23319                           ;usb_device.c: 2225: uint8_t lastDTS;
 23320                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 23321                           
 23322                           ; BSR set to: 0
 23323                           ;incstack = 0
 23324  004EEE  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23325  004EF2  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23326  004EF6  0E00               	movlw	0
 23327  004EF8  BCDF               	btfsc	indf2,6,c
 23328  004EFA  0E01               	movlw	1
 23329  004EFC  6E3F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 23330                           
 23331                           ; BSR set to: 0
 23332                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 23333  004EFE  0E04               	movlw	4
 23334  004F00  1A0F               	xorwf	_pBDTEntryIn,f,c
 23335                           
 23336                           ; BSR set to: 0
 23337                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 23338  004F02  0E08               	movlw	8
 23339  004F04  198A               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 23340  004F06  E10A               	bnz	i2l7764
 23341                           
 23342                           ; BSR set to: 0
 23343                           ;usb_device.c: 2236: {
 23344                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 23345  004F08  0104               	movlb	4	; () banked
 23346  004F0A  5132               	movf	50,w,b	;volatile
 23347  004F0C  0B7F               	andlw	127
 23348  004F0E  6E63               	movwf	3939,c	;volatile
 23349                           
 23350                           ; BSR set to: 4
 23351                           ;usb_device.c: 2238: if(UADDR != 0u)
 23352  004F10  5063               	movf	3939,w,c
 23353                           
 23354                           ; BSR set to: 4
 23355                           ;usb_device.c: 2239: {
 23356                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 23357  004F12  0E10               	movlw	16
 23358  004F14  B4D8               	btfsc	status,2,c
 23359                           
 23360                           ; BSR set to: 4
 23361                           ;usb_device.c: 2242: else
 23362                           ;usb_device.c: 2243: {
 23363                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 23364  004F16  0E04               	movlw	4
 23365                           
 23366                           ;usb_device.c: 2241: }
 23367  004F18  0100               	movlb	0	; () banked
 23368  004F1A  6F8A               	movwf	_USBDeviceState& (0+255),b	;volatile
 23369  004F1C                     i2l7764:
 23370                           
 23371                           ; BSR set to: 0
 23372                           ;usb_device.c: 2245: }
 23373                           ;usb_device.c: 2246: }
 23374                           ;usb_device.c: 2249: if(controlTransferState == 1)
 23375  004F1C  0421               	decf	_controlTransferState,w,c	;volatile
 23376  004F1E  E138               	bnz	i2l1763
 23377                           
 23378                           ; BSR set to: 0
 23379                           ;usb_device.c: 2250: {
 23380                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 23381  004F20  EE20 F002          	lfsr	2,2
 23382  004F24  500F               	movf	_pBDTEntryIn,w,c
 23383  004F26  26D9               	addwf	fsr2l,f,c
 23384  004F28  5010               	movf	_pBDTEntryIn+1,w,c
 23385  004F2A  22DA               	addwfc	fsr2h,f,c
 23386  004F2C  0E38               	movlw	56
 23387  004F2E  6EDE               	movwf	postinc2,c
 23388  004F30  0E04               	movlw	4
 23389  004F32  6EDD               	movwf	postdec2,c
 23390                           
 23391                           ; BSR set to: 0
 23392                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 23393  004F34  EC16  F027         	call	_USBCtrlTrfTxService	;wreg free
 23394                           
 23395                           ; BSR set to: 0
 23396                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 23397  004F38  0E02               	movlw	2
 23398  004F3A  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 23399  004F3C  E10D               	bnz	i2l7776
 23400                           
 23401                           ; BSR set to: 0
 23402                           ;usb_device.c: 2259: {
 23403                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 23404  004F3E  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23405  004F42  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23406  004F46  0E04               	movlw	4
 23407  004F48  6EDF               	movwf	indf2,c
 23408                           
 23409                           ; BSR set to: 0
 23410                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23411  004F4A  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23412  004F4E  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23413  004F52  0E00               	movlw	0
 23414  004F54  8EDB               	bsf	plusw2,7,c
 23415                           
 23416                           ;usb_device.c: 2264: }
 23417  004F56  0C00               	retlw	0
 23418  004F58                     i2l7776:
 23419                           
 23420                           ; BSR set to: 0
 23421                           ;usb_device.c: 2265: else
 23422                           ;usb_device.c: 2266: {
 23423                           ;usb_device.c: 2267: if(lastDTS == 0)
 23424  004F58  503F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 23425  004F5A  E10D               	bnz	i2l7782
 23426                           
 23427                           ; BSR set to: 0
 23428                           ;usb_device.c: 2268: {
 23429                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23430  004F5C  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23431  004F60  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23432  004F64  0E48               	movlw	72
 23433  004F66  6EDF               	movwf	indf2,c
 23434                           
 23435                           ; BSR set to: 0
 23436                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23437  004F68  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23438  004F6C  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23439  004F70  0E00               	movlw	0
 23440  004F72  8EDB               	bsf	plusw2,7,c
 23441                           
 23442                           ;usb_device.c: 2271: }
 23443  004F74  0C00               	retlw	0
 23444  004F76                     i2l7782:
 23445                           
 23446                           ; BSR set to: 0
 23447                           ;usb_device.c: 2272: else
 23448                           ;usb_device.c: 2273: {
 23449                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 23450  004F76  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23451  004F7A  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23452  004F7E  0E08               	movlw	8
 23453  004F80  6EDF               	movwf	indf2,c
 23454                           
 23455                           ; BSR set to: 0
 23456                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23457  004F82  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23458  004F86  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23459  004F8A  0E00               	movlw	0
 23460  004F8C  8EDB               	bsf	plusw2,7,c
 23461  004F8E  0C00               	retlw	0
 23462  004F90                     i2l1763:
 23463                           
 23464                           ; BSR set to: 0
 23465                           ;usb_device.c: 2279: else
 23466                           ;usb_device.c: 2280: {
 23467                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 23468  004F90  AE04               	btfss	_outPipes+3,7,c	;volatile
 23469  004F92  D012               	goto	i2l7792
 23470                           
 23471                           ; BSR set to: 0
 23472                           ;usb_device.c: 2285: {
 23473                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 23474  004F94  5007               	movf	_outPipes+6,w,c	;volatile
 23475  004F96  1008               	iorwf	_outPipes+7,w,c	;volatile
 23476  004F98  E00E               	bz	i2l7790
 23477                           
 23478                           ; BSR set to: 0
 23479                           ;usb_device.c: 2287: {
 23480                           ;usb_device.c: 2288: outPipes[0].pFunc();
 23481  004F9A  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 23482  004F9E  D801               	call	i2u566_48
 23483  004FA0  D00A               	goto	i2l7790
 23484  004FA2                     i2u566_48:
 23485  004FA2  0005               	push	
 23486  004FA4  6EFA               	movwf	pclath,c
 23487  004FA6  50DE               	movf	postinc2,w,c
 23488  004FA8  6EFD               	movwf	tosl,c
 23489  004FAA  50DE               	movf	postinc2,w,c
 23490  004FAC  6EFE               	movwf	tosh,c
 23491  004FAE  50F8               	movf	tblptru,w,c
 23492  004FB0  6EFF               	movwf	tosu,c
 23493  004FB2  50FA               	movf	pclath,w,c
 23494  004FB4  0012               	return		;indir
 23495  004FB6                     i2l7790:
 23496                           
 23497                           ; BSR set to: 0
 23498                           ;usb_device.c: 2289: }
 23499                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 23500  004FB6  9E04               	bcf	_outPipes+3,7,c	;volatile
 23501  004FB8                     i2l7792:
 23502                           
 23503                           ; BSR set to: 0
 23504                           ;usb_device.c: 2291: }
 23505                           ;usb_device.c: 2293: controlTransferState = 0;
 23506  004FB8  6A21               	clrf	_controlTransferState,c	;volatile
 23507                           
 23508                           ; BSR set to: 0
 23509  004FBA  0012               	return		;funcret
 23510  004FBC                     __end_of_USBCtrlTrfInHandler:
 23511                           	opt stack 0
 23512                           tosu	equ	0xFFF
 23513                           tosh	equ	0xFFE
 23514                           tosl	equ	0xFFD
 23515                           pclatu	equ	0xFFB
 23516                           pclath	equ	0xFFA
 23517                           tblptru	equ	0xFF8
 23518                           tblptrh	equ	0xFF7
 23519                           tblptrl	equ	0xFF6
 23520                           tablat	equ	0xFF5
 23521                           prodh	equ	0xFF4
 23522                           prodl	equ	0xFF3
 23523                           intcon	equ	0xFF2
 23524                           postinc0	equ	0xFEE
 23525                           wreg	equ	0xFE8
 23526                           indf1	equ	0xFE7
 23527                           postdec1	equ	0xFE5
 23528                           fsr1h	equ	0xFE2
 23529                           fsr1l	equ	0xFE1
 23530                           indf2	equ	0xFDF
 23531                           postinc2	equ	0xFDE
 23532                           postdec2	equ	0xFDD
 23533                           plusw2	equ	0xFDB
 23534                           fsr2h	equ	0xFDA
 23535                           fsr2l	equ	0xFD9
 23536                           status	equ	0xFD8
 23537                           
 23538 ;; *************** function _USBCtrlTrfTxService *****************
 23539 ;; Defined at:
 23540 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 23541 ;; Parameters:    Size  Location     Type
 23542 ;;		None
 23543 ;; Auto vars:     Size  Location     Type
 23544 ;;  byteToSend      1    0[COMRAM] unsigned char 
 23545 ;; Return value:  Size  Location     Type
 23546 ;;		None               void
 23547 ;; Registers used:
 23548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 23549 ;; Tracked objects:
 23550 ;;		On entry : B/4
 23551 ;;		On exit  : F/0
 23552 ;;		Unchanged: 0/0
 23553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23554 ;;      Params:         0       0       0       0       0       0       0       0       0
 23555 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23556 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23557 ;;      Totals:         1       0       0       0       0       0       0       0       0
 23558 ;;Total ram usage:        1 bytes
 23559 ;; Hardware stack levels used:    1
 23560 ;; This function calls:
 23561 ;;		Nothing
 23562 ;; This function is called by:
 23563 ;;		_USBCtrlEPAllowDataStage
 23564 ;;		_USBCtrlTrfInHandler
 23565 ;; This function uses a non-reentrant model
 23566 ;;
 23567                           
 23568                           	psect	text113
 23569  004E2C                     __ptext113:
 23570                           	opt stack 0
 23571  004E2C                     _USBCtrlTrfTxService:
 23572                           	opt stack 14
 23573                           
 23574                           ;usb_device.c: 1439: uint8_t byteToSend;
 23575                           ;usb_device.c: 1443: byteToSend = 8;
 23576                           
 23577                           ; BSR set to: 0
 23578                           ;incstack = 0
 23579  004E2C  0E08               	movlw	8
 23580  004E2E  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 23581                           
 23582                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 23583  004E30  500E               	movf	_inPipes+5,w,c	;volatile
 23584  004E32  E10D               	bnz	i2l6478
 23585  004E34  0E08               	movlw	8
 23586  004E36  5C0D               	subwf	_inPipes+4,w,c	;volatile
 23587  004E38  E20A               	bc	i2l6478
 23588                           
 23589                           ;usb_device.c: 1445: {
 23590                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 23591  004E3A  C00D  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 23592                           
 23593                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 23594  004E3E  502B               	movf	_shortPacketStatus,w,c	;volatile
 23595  004E40  E102               	bnz	i2l6474
 23596                           
 23597                           ;usb_device.c: 1454: {
 23598                           ;usb_device.c: 1455: shortPacketStatus = 1;
 23599  004E42  0E01               	movlw	1
 23600  004E44  D003               	goto	L67
 23601  004E46                     i2l6474:
 23602                           
 23603                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 23604  004E46  042B               	decf	_shortPacketStatus,w,c	;volatile
 23605  004E48  E102               	bnz	i2l6478
 23606                           
 23607                           ;usb_device.c: 1458: {
 23608                           ;usb_device.c: 1459: shortPacketStatus = 2;
 23609  004E4A  0E02               	movlw	2
 23610  004E4C                     L67:
 23611  004E4C  6E2B               	movwf	_shortPacketStatus,c	;volatile
 23612  004E4E                     i2l6478:
 23613                           
 23614                           ;usb_device.c: 1460: }
 23615                           ;usb_device.c: 1461: }
 23616                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 23617  004E4E  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23618  004E50  5E0D               	subwf	_inPipes+4,f,c	;volatile
 23619  004E52  0E00               	movlw	0
 23620  004E54  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 23621                           
 23622                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 23623  004E56  EE20 F001          	lfsr	2,1
 23624  004E5A  500F               	movf	_pBDTEntryIn,w,c
 23625  004E5C  26D9               	addwf	fsr2l,f,c
 23626  004E5E  5010               	movf	_pBDTEntryIn+1,w,c
 23627  004E60  22DA               	addwfc	fsr2h,f,c
 23628  004E62  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 23629                           
 23630                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 23631  004E66  0E38               	movlw	56
 23632  004E68  0100               	movlb	0	; () banked
 23633  004E6A  6F7C               	movwf	_pDst& (0+255),b
 23634  004E6C  0E04               	movlw	4
 23635  004E6E  6F7D               	movwf	(_pDst+1)& (0+255),b
 23636                           
 23637                           ; BSR set to: 0
 23638                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 23639  004E70  B00C               	btfsc	_inPipes+3,0,c	;volatile
 23640  004E72  D03A               	goto	i2l6506
 23641  004E74  D01B               	goto	i2l6496
 23642  004E76                     i2l6488:
 23643                           
 23644                           ; BSR set to: 0
 23645                           ;usb_device.c: 1478: {
 23646                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 23647  004E76  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 23648  004E7A  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 23649  004E7E  6AF8               	clrf	tblptru,c
 23650  004E80  C07C  FFD9         	movff	_pDst,fsr2l
 23651  004E84  C07D  FFDA         	movff	_pDst+1,fsr2h
 23652  004E88  0E07               	movlw	(high __ramtop+-1)
 23653  004E8A  64F7               	cpfsgt	tblptrh,c
 23654  004E8C  D003               	bra	i2u420_47
 23655  004E8E  0008               	tblrd		*
 23656  004E90  50F5               	movf	tablat,w,c
 23657  004E92  D005               	bra	i2u420_40
 23658  004E94                     i2u420_47:
 23659  004E94  CFF6 FFE1          	movff	tblptrl,fsr1l
 23660  004E98  CFF7 FFE2          	movff	tblptrh,fsr1h
 23661  004E9C  50E7               	movf	indf1,w,c
 23662  004E9E                     i2u420_40:
 23663  004E9E  6EDF               	movwf	indf2,c
 23664  004EA0  4A09               	infsnz	_inPipes,f,c	;volatile
 23665  004EA2  2A0A               	incf	_inPipes+1,f,c	;volatile
 23666  004EA4  0100               	movlb	0	; () banked
 23667  004EA6  4B7C               	infsnz	_pDst& (0+255),f,b
 23668  004EA8  2B7D               	incf	(_pDst+1)& (0+255),f,b
 23669                           
 23670                           ; BSR set to: 0
 23671                           ;usb_device.c: 1480: byteToSend--;
 23672  004EAA  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 23673  004EAC                     i2l6496:
 23674                           
 23675                           ; BSR set to: 0
 23676  004EAC  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23677  004EAE  E1E3               	bnz	i2l6488
 23678  004EB0  0012               	return	
 23679  004EB2                     i2l6498:
 23680                           
 23681                           ; BSR set to: 0
 23682                           ;usb_device.c: 1486: {
 23683                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 23684  004EB2  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 23685  004EB6  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 23686  004EBA  6AF8               	clrf	tblptru,c
 23687  004EBC  C07C  FFD9         	movff	_pDst,fsr2l
 23688  004EC0  C07D  FFDA         	movff	_pDst+1,fsr2h
 23689  004EC4  0E07               	movlw	(high __ramtop+-1)
 23690  004EC6  64F7               	cpfsgt	tblptrh,c
 23691  004EC8  D003               	bra	i2u422_47
 23692  004ECA  0008               	tblrd		*
 23693  004ECC  50F5               	movf	tablat,w,c
 23694  004ECE  D005               	bra	i2u422_40
 23695  004ED0                     i2u422_47:
 23696  004ED0  CFF6 FFE1          	movff	tblptrl,fsr1l
 23697  004ED4  CFF7 FFE2          	movff	tblptrh,fsr1h
 23698  004ED8  50E7               	movf	indf1,w,c
 23699  004EDA                     i2u422_40:
 23700  004EDA  6EDF               	movwf	indf2,c
 23701  004EDC  4A09               	infsnz	_inPipes,f,c	;volatile
 23702  004EDE  2A0A               	incf	_inPipes+1,f,c	;volatile
 23703  004EE0  0100               	movlb	0	; () banked
 23704  004EE2  4B7C               	infsnz	_pDst& (0+255),f,b
 23705  004EE4  2B7D               	incf	(_pDst+1)& (0+255),f,b
 23706                           
 23707                           ; BSR set to: 0
 23708                           ;usb_device.c: 1488: byteToSend--;
 23709  004EE6  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 23710  004EE8                     i2l6506:
 23711                           
 23712                           ; BSR set to: 0
 23713  004EE8  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23714  004EEA  E1E3               	bnz	i2l6498
 23715                           
 23716                           ; BSR set to: 0
 23717  004EEC  0012               	return		;funcret
 23718  004EEE                     __end_of_USBCtrlTrfTxService:
 23719                           	opt stack 0
 23720                           tosu	equ	0xFFF
 23721                           tosh	equ	0xFFE
 23722                           tosl	equ	0xFFD
 23723                           pclatu	equ	0xFFB
 23724                           pclath	equ	0xFFA
 23725                           tblptru	equ	0xFF8
 23726                           tblptrh	equ	0xFF7
 23727                           tblptrl	equ	0xFF6
 23728                           tablat	equ	0xFF5
 23729                           prodh	equ	0xFF4
 23730                           prodl	equ	0xFF3
 23731                           intcon	equ	0xFF2
 23732                           postinc0	equ	0xFEE
 23733                           wreg	equ	0xFE8
 23734                           indf1	equ	0xFE7
 23735                           postdec1	equ	0xFE5
 23736                           fsr1h	equ	0xFE2
 23737                           fsr1l	equ	0xFE1
 23738                           indf2	equ	0xFDF
 23739                           postinc2	equ	0xFDE
 23740                           postdec2	equ	0xFDD
 23741                           plusw2	equ	0xFDB
 23742                           fsr2h	equ	0xFDA
 23743                           fsr2l	equ	0xFD9
 23744                           status	equ	0xFD8
 23745                           
 23746 ;; *************** function _USART_mySetLineCodingHandler *****************
 23747 ;; Defined at:
 23748 ;;		line 236 in file "../Includes/Board/USBapp.c"
 23749 ;; Parameters:    Size  Location     Type
 23750 ;;		None
 23751 ;; Auto vars:     Size  Location     Type
 23752 ;;  dwBaud          4   13[COMRAM] unsigned long 
 23753 ;; Return value:  Size  Location     Type
 23754 ;;		None               void
 23755 ;; Registers used:
 23756 ;;		wreg, status,2, status,0, cstack
 23757 ;; Tracked objects:
 23758 ;;		On entry : F/0
 23759 ;;		On exit  : F/0
 23760 ;;		Unchanged: F/0
 23761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23762 ;;      Params:         0       0       0       0       0       0       0       0       0
 23763 ;;      Locals:         4       0       0       0       0       0       0       0       0
 23764 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23765 ;;      Totals:         4       0       0       0       0       0       0       0       0
 23766 ;;Total ram usage:        4 bytes
 23767 ;; Hardware stack levels used:    1
 23768 ;; Hardware stack levels required when called:    1
 23769 ;; This function calls:
 23770 ;;		___lldiv
 23771 ;;		i2_EUSART_Initialize
 23772 ;; This function is called by:
 23773 ;;		_USBCheckCDCRequest
 23774 ;;		_USBCtrlTrfRxService
 23775 ;;		_USBCtrlTrfInHandler
 23776 ;; This function uses a non-reentrant model
 23777 ;;
 23778                           
 23779                           	psect	text114
 23780  003DF0                     __ptext114:
 23781                           	opt stack 0
 23782  003DF0                     _USART_mySetLineCodingHandler:
 23783                           	opt stack 14
 23784                           
 23785                           ; BSR set to: 0
 23786                           ;USBapp.c: 239: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 23787                           
 23788                           ; BSR set to: 0
 23789                           ;incstack = 0
 23790  003DF0  C0AA  F0BC         	movff	_cdc_notice,_line_coding
 23791  003DF4  C0AB  F0BD         	movff	_cdc_notice+1,_line_coding+1
 23792  003DF8  C0AC  F0BE         	movff	_cdc_notice+2,_line_coding+2
 23793  003DFC  C0AD  F0BF         	movff	_cdc_notice+3,_line_coding+3
 23794                           
 23795                           ; BSR set to: 0
 23796                           ;USBapp.c: 241: uint32_t dwBaud;
 23797                           ;USBapp.c: 242: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 23798  003E00  6A2E               	clrf	___lldiv@dividend,c
 23799  003E02  0E1B               	movlw	27
 23800  003E04  6E2F               	movwf	___lldiv@dividend+1,c
 23801  003E06  0EB7               	movlw	183
 23802  003E08  6E30               	movwf	___lldiv@dividend+2,c
 23803  003E0A  6A31               	clrf	___lldiv@dividend+3,c
 23804  003E0C  C0BC  F032         	movff	_line_coding,___lldiv@divisor
 23805  003E10  C0BD  F033         	movff	_line_coding+1,___lldiv@divisor+1
 23806  003E14  C0BE  F034         	movff	_line_coding+2,___lldiv@divisor+2
 23807  003E18  C0BF  F035         	movff	_line_coding+3,___lldiv@divisor+3
 23808  003E1C  EC00  F021         	call	___lldiv	;wreg free
 23809  003E20  0EFF               	movlw	255
 23810  003E22  242E               	addwf	?___lldiv,w,c
 23811  003E24  6E3B               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 23812  003E26  0EFF               	movlw	255
 23813  003E28  202F               	addwfc	?___lldiv+1,w,c
 23814  003E2A  6E3C               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 23815  003E2C  0EFF               	movlw	255
 23816  003E2E  2030               	addwfc	?___lldiv+2,w,c
 23817  003E30  6E3D               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 23818  003E32  0EFF               	movlw	255
 23819  003E34  2031               	addwfc	?___lldiv+3,w,c
 23820  003E36  6E3E               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 23821                           
 23822                           ; BSR set to: 0
 23823                           ;USBapp.c: 243: SPBRG = (uint8_t) dwBaud;
 23824  003E38  C03B  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 23825                           
 23826                           ; BSR set to: 0
 23827                           ;USBapp.c: 244: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 23828  003E3C  C03C  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 23829                           
 23830                           ; BSR set to: 0
 23831                           ;USBapp.c: 246: EUSART_Initialize();
 23832  003E40  EF47  F01C         	goto	i2_EUSART_Initialize	;wreg free
 23833  003E44                     __end_of_USART_mySetLineCodingHandler:
 23834                           	opt stack 0
 23835                           tosu	equ	0xFFF
 23836                           tosh	equ	0xFFE
 23837                           tosl	equ	0xFFD
 23838                           pclatu	equ	0xFFB
 23839                           pclath	equ	0xFFA
 23840                           tblptru	equ	0xFF8
 23841                           tblptrh	equ	0xFF7
 23842                           tblptrl	equ	0xFF6
 23843                           tablat	equ	0xFF5
 23844                           prodh	equ	0xFF4
 23845                           prodl	equ	0xFF3
 23846                           intcon	equ	0xFF2
 23847                           postinc0	equ	0xFEE
 23848                           wreg	equ	0xFE8
 23849                           indf1	equ	0xFE7
 23850                           postdec1	equ	0xFE5
 23851                           fsr1h	equ	0xFE2
 23852                           fsr1l	equ	0xFE1
 23853                           indf2	equ	0xFDF
 23854                           postinc2	equ	0xFDE
 23855                           postdec2	equ	0xFDD
 23856                           plusw2	equ	0xFDB
 23857                           fsr2h	equ	0xFDA
 23858                           fsr2l	equ	0xFD9
 23859                           status	equ	0xFD8
 23860                           
 23861 ;; *************** function i2_EUSART_Initialize *****************
 23862 ;; Defined at:
 23863 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 23864 ;; Parameters:    Size  Location     Type
 23865 ;;		None
 23866 ;; Auto vars:     Size  Location     Type
 23867 ;;		None
 23868 ;; Return value:  Size  Location     Type
 23869 ;;		None               void
 23870 ;; Registers used:
 23871 ;;		wreg, status,2
 23872 ;; Tracked objects:
 23873 ;;		On entry : F/0
 23874 ;;		On exit  : F/0
 23875 ;;		Unchanged: F/0
 23876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23877 ;;      Params:         0       0       0       0       0       0       0       0       0
 23878 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23879 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23880 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23881 ;;Total ram usage:        0 bytes
 23882 ;; Hardware stack levels used:    1
 23883 ;; This function calls:
 23884 ;;		Nothing
 23885 ;; This function is called by:
 23886 ;;		_USBapp_CdcEmulatorInitialize
 23887 ;;		_USART_mySetLineCodingHandler
 23888 ;; This function uses a non-reentrant model
 23889 ;;
 23890                           
 23891                           	psect	text115
 23892  00388E                     __ptext115:
 23893                           	opt stack 0
 23894  00388E                     i2_EUSART_Initialize:
 23895                           	opt stack 16
 23896                           
 23897                           ; BSR set to: 0
 23898                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 23899                           
 23900                           ; BSR set to: 0
 23901                           ;incstack = 0
 23902  00388E  9A9D               	bcf	3997,5,c	;volatile
 23903                           
 23904                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 23905  003890  989D               	bcf	3997,4,c	;volatile
 23906                           
 23907                           ; BSR set to: 0
 23908                           ;eusart.c: 85: BAUDCON = 0x48;
 23909  003892  0E48               	movlw	72
 23910  003894  6EB8               	movwf	4024,c	;volatile
 23911                           
 23912                           ;eusart.c: 88: RCSTA = 0x90;
 23913  003896  0E90               	movlw	144
 23914  003898  6EAB               	movwf	4011,c	;volatile
 23915                           
 23916                           ;eusart.c: 91: TXSTA = 0x26;
 23917  00389A  0E26               	movlw	38
 23918  00389C  6EAC               	movwf	4012,c	;volatile
 23919                           
 23920                           ;eusart.c: 95: SPBRG = 0x71;
 23921  00389E  0E71               	movlw	113
 23922  0038A0  6EAF               	movwf	4015,c	;volatile
 23923                           
 23924                           ;eusart.c: 100: SPBRGH = 0x02;
 23925  0038A2  0E02               	movlw	2
 23926  0038A4  6EB0               	movwf	4016,c	;volatile
 23927                           
 23928                           ; BSR set to: 0
 23929                           ;eusart.c: 103: eusartTxHead = 0;
 23930  0038A6  6A27               	clrf	_eusartTxHead,c
 23931                           
 23932                           ; BSR set to: 0
 23933                           ;eusart.c: 104: eusartTxTail = 0;
 23934  0038A8  6A28               	clrf	_eusartTxTail,c
 23935                           
 23936                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 23937  0038AA  0E40               	movlw	64
 23938  0038AC  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 23939                           
 23940                           ; BSR set to: 0
 23941                           ;eusart.c: 107: eusartRxHead = 0;
 23942  0038AE  6A24               	clrf	_eusartRxHead,c
 23943                           
 23944                           ; BSR set to: 0
 23945                           ;eusart.c: 108: eusartRxTail = 0;
 23946  0038B0  6A25               	clrf	_eusartRxTail,c
 23947                           
 23948                           ; BSR set to: 0
 23949                           ;eusart.c: 109: eusartRxCount = 0;
 23950  0038B2  6A23               	clrf	_eusartRxCount,c	;volatile
 23951                           
 23952                           ; BSR set to: 0
 23953                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 23954  0038B4  8A9D               	bsf	3997,5,c	;volatile
 23955                           
 23956                           ; BSR set to: 0
 23957                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 23958  0038B6  88AB               	bsf	4011,4,c	;volatile
 23959                           
 23960                           ; BSR set to: 0
 23961  0038B8  0012               	return		;funcret
 23962  0038BA                     __end_ofi2_EUSART_Initialize:
 23963                           	opt stack 0
 23964                           tosu	equ	0xFFF
 23965                           tosh	equ	0xFFE
 23966                           tosl	equ	0xFFD
 23967                           pclatu	equ	0xFFB
 23968                           pclath	equ	0xFFA
 23969                           tblptru	equ	0xFF8
 23970                           tblptrh	equ	0xFF7
 23971                           tblptrl	equ	0xFF6
 23972                           tablat	equ	0xFF5
 23973                           prodh	equ	0xFF4
 23974                           prodl	equ	0xFF3
 23975                           intcon	equ	0xFF2
 23976                           postinc0	equ	0xFEE
 23977                           wreg	equ	0xFE8
 23978                           indf1	equ	0xFE7
 23979                           postdec1	equ	0xFE5
 23980                           fsr1h	equ	0xFE2
 23981                           fsr1l	equ	0xFE1
 23982                           indf2	equ	0xFDF
 23983                           postinc2	equ	0xFDE
 23984                           postdec2	equ	0xFDD
 23985                           plusw2	equ	0xFDB
 23986                           fsr2h	equ	0xFDA
 23987                           fsr2l	equ	0xFD9
 23988                           status	equ	0xFD8
 23989                           
 23990 ;; *************** function ___lldiv *****************
 23991 ;; Defined at:
 23992 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 23993 ;; Parameters:    Size  Location     Type
 23994 ;;  dividend        4    0[COMRAM] unsigned long 
 23995 ;;  divisor         4    4[COMRAM] unsigned long 
 23996 ;; Auto vars:     Size  Location     Type
 23997 ;;  quotient        4    8[COMRAM] unsigned long 
 23998 ;;  counter         1   12[COMRAM] unsigned char 
 23999 ;; Return value:  Size  Location     Type
 24000 ;;                  4    0[COMRAM] unsigned long 
 24001 ;; Registers used:
 24002 ;;		wreg, status,2, status,0
 24003 ;; Tracked objects:
 24004 ;;		On entry : F/0
 24005 ;;		On exit  : F/0
 24006 ;;		Unchanged: F/0
 24007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24008 ;;      Params:         8       0       0       0       0       0       0       0       0
 24009 ;;      Locals:         5       0       0       0       0       0       0       0       0
 24010 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24011 ;;      Totals:        13       0       0       0       0       0       0       0       0
 24012 ;;Total ram usage:       13 bytes
 24013 ;; Hardware stack levels used:    1
 24014 ;; This function calls:
 24015 ;;		Nothing
 24016 ;; This function is called by:
 24017 ;;		_USART_mySetLineCodingHandler
 24018 ;; This function uses a non-reentrant model
 24019 ;;
 24020                           
 24021                           	psect	text116
 24022  004200                     __ptext116:
 24023                           	opt stack 0
 24024  004200                     ___lldiv:
 24025                           	opt stack 14
 24026                           
 24027                           ; BSR set to: 0
 24028                           
 24029                           ; BSR set to: 0
 24030                           ;incstack = 0
 24031  004200  6A36               	clrf	___lldiv@quotient,c
 24032  004202  6A37               	clrf	___lldiv@quotient+1,c
 24033  004204  6A38               	clrf	___lldiv@quotient+2,c
 24034  004206  6A39               	clrf	___lldiv@quotient+3,c
 24035                           
 24036                           ; BSR set to: 0
 24037  004208  5032               	movf	___lldiv@divisor,w,c
 24038  00420A  1033               	iorwf	___lldiv@divisor+1,w,c
 24039  00420C  1034               	iorwf	___lldiv@divisor+2,w,c
 24040  00420E  1035               	iorwf	___lldiv@divisor+3,w,c
 24041  004210  E029               	bz	i2l2299
 24042                           
 24043                           ; BSR set to: 0
 24044  004212  0E01               	movlw	1
 24045  004214  6E3A               	movwf	___lldiv@counter,c
 24046  004216  D006               	goto	i2l6516
 24047  004218                     i2l6514:
 24048                           
 24049                           ; BSR set to: 0
 24050  004218  90D8               	bcf	status,0,c
 24051  00421A  3632               	rlcf	___lldiv@divisor,f,c
 24052  00421C  3633               	rlcf	___lldiv@divisor+1,f,c
 24053  00421E  3634               	rlcf	___lldiv@divisor+2,f,c
 24054  004220  3635               	rlcf	___lldiv@divisor+3,f,c
 24055  004222  2A3A               	incf	___lldiv@counter,f,c
 24056  004224                     i2l6516:
 24057                           
 24058                           ; BSR set to: 0
 24059  004224  AE35               	btfss	___lldiv@divisor+3,7,c
 24060  004226  D7F8               	goto	i2l6514
 24061  004228                     i2l6518:
 24062                           
 24063                           ; BSR set to: 0
 24064  004228  90D8               	bcf	status,0,c
 24065  00422A  3636               	rlcf	___lldiv@quotient,f,c
 24066  00422C  3637               	rlcf	___lldiv@quotient+1,f,c
 24067  00422E  3638               	rlcf	___lldiv@quotient+2,f,c
 24068  004230  3639               	rlcf	___lldiv@quotient+3,f,c
 24069                           
 24070                           ; BSR set to: 0
 24071  004232  5032               	movf	___lldiv@divisor,w,c
 24072  004234  5C2E               	subwf	___lldiv@dividend,w,c
 24073  004236  5033               	movf	___lldiv@divisor+1,w,c
 24074  004238  582F               	subwfb	___lldiv@dividend+1,w,c
 24075  00423A  5034               	movf	___lldiv@divisor+2,w,c
 24076  00423C  5830               	subwfb	___lldiv@dividend+2,w,c
 24077  00423E  5035               	movf	___lldiv@divisor+3,w,c
 24078  004240  5831               	subwfb	___lldiv@dividend+3,w,c
 24079  004242  E309               	bnc	i2l6526
 24080                           
 24081                           ; BSR set to: 0
 24082  004244  5032               	movf	___lldiv@divisor,w,c
 24083  004246  5E2E               	subwf	___lldiv@dividend,f,c
 24084  004248  5033               	movf	___lldiv@divisor+1,w,c
 24085  00424A  5A2F               	subwfb	___lldiv@dividend+1,f,c
 24086  00424C  5034               	movf	___lldiv@divisor+2,w,c
 24087  00424E  5A30               	subwfb	___lldiv@dividend+2,f,c
 24088  004250  5035               	movf	___lldiv@divisor+3,w,c
 24089  004252  5A31               	subwfb	___lldiv@dividend+3,f,c
 24090                           
 24091                           ; BSR set to: 0
 24092  004254  8036               	bsf	___lldiv@quotient,0,c
 24093  004256                     i2l6526:
 24094                           
 24095                           ; BSR set to: 0
 24096  004256  90D8               	bcf	status,0,c
 24097  004258  3235               	rrcf	___lldiv@divisor+3,f,c
 24098  00425A  3234               	rrcf	___lldiv@divisor+2,f,c
 24099  00425C  3233               	rrcf	___lldiv@divisor+1,f,c
 24100  00425E  3232               	rrcf	___lldiv@divisor,f,c
 24101                           
 24102                           ; BSR set to: 0
 24103  004260  2E3A               	decfsz	___lldiv@counter,f,c
 24104  004262  D7E2               	goto	i2l6518
 24105  004264                     i2l2299:
 24106                           
 24107                           ; BSR set to: 0
 24108  004264  C036  F02E         	movff	___lldiv@quotient,?___lldiv
 24109  004268  C037  F02F         	movff	___lldiv@quotient+1,?___lldiv+1
 24110  00426C  C038  F030         	movff	___lldiv@quotient+2,?___lldiv+2
 24111  004270  C039  F031         	movff	___lldiv@quotient+3,?___lldiv+3
 24112                           
 24113                           ; BSR set to: 0
 24114  004274  0012               	return		;funcret
 24115  004276                     __end_of___lldiv:
 24116                           	opt stack 0
 24117                           tosu	equ	0xFFF
 24118                           tosh	equ	0xFFE
 24119                           tosl	equ	0xFFD
 24120                           pclatu	equ	0xFFB
 24121                           pclath	equ	0xFFA
 24122                           tblptru	equ	0xFF8
 24123                           tblptrh	equ	0xFF7
 24124                           tblptrl	equ	0xFF6
 24125                           tablat	equ	0xFF5
 24126                           prodh	equ	0xFF4
 24127                           prodl	equ	0xFF3
 24128                           intcon	equ	0xFF2
 24129                           postinc0	equ	0xFEE
 24130                           wreg	equ	0xFE8
 24131                           indf1	equ	0xFE7
 24132                           postdec1	equ	0xFE5
 24133                           fsr1h	equ	0xFE2
 24134                           fsr1l	equ	0xFE1
 24135                           indf2	equ	0xFDF
 24136                           postinc2	equ	0xFDE
 24137                           postdec2	equ	0xFDD
 24138                           plusw2	equ	0xFDB
 24139                           fsr2h	equ	0xFDA
 24140                           fsr2l	equ	0xFD9
 24141                           status	equ	0xFD8
 24142                           
 24143 ;; *************** function _TMRapp_Tick *****************
 24144 ;; Defined at:
 24145 ;;		line 10 in file "../Includes/Drivers/TMRapp.c"
 24146 ;; Parameters:    Size  Location     Type
 24147 ;;		None
 24148 ;; Auto vars:     Size  Location     Type
 24149 ;;		None
 24150 ;; Return value:  Size  Location     Type
 24151 ;;		None               void
 24152 ;; Registers used:
 24153 ;;		None
 24154 ;; Tracked objects:
 24155 ;;		On entry : 0/0
 24156 ;;		On exit  : F/0
 24157 ;;		Unchanged: 0/0
 24158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24159 ;;      Params:         0       0       0       0       0       0       0       0       0
 24160 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24161 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24162 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24163 ;;Total ram usage:        0 bytes
 24164 ;; Hardware stack levels used:    1
 24165 ;; This function calls:
 24166 ;;		Nothing
 24167 ;; This function is called by:
 24168 ;;		_INTERRUPT_InterruptManager
 24169 ;; This function uses a non-reentrant model
 24170 ;;
 24171                           
 24172                           	psect	text117
 24173  0034B4                     __ptext117:
 24174                           	opt stack 0
 24175  0034B4                     _TMRapp_Tick:
 24176                           	opt stack 19
 24177                           
 24178                           ;TMRapp.c: 13: appTimer.mSecTick = 1;
 24179                           
 24180                           ; BSR set to: 0
 24181                           ;incstack = 0
 24182  0034B4  0100               	movlb	0	; () banked
 24183  0034B6  818F               	bsf	_appTimer& (0+255),0,b
 24184                           
 24185                           ; BSR set to: 0
 24186  0034B8  0012               	return		;funcret
 24187  0034BA                     __end_of_TMRapp_Tick:
 24188                           	opt stack 0
 24189                           tosu	equ	0xFFF
 24190                           tosh	equ	0xFFE
 24191                           tosl	equ	0xFFD
 24192                           pclatu	equ	0xFFB
 24193                           pclath	equ	0xFFA
 24194                           tblptru	equ	0xFF8
 24195                           tblptrh	equ	0xFF7
 24196                           tblptrl	equ	0xFF6
 24197                           tablat	equ	0xFF5
 24198                           prodh	equ	0xFF4
 24199                           prodl	equ	0xFF3
 24200                           intcon	equ	0xFF2
 24201                           postinc0	equ	0xFEE
 24202                           wreg	equ	0xFE8
 24203                           indf1	equ	0xFE7
 24204                           postdec1	equ	0xFE5
 24205                           fsr1h	equ	0xFE2
 24206                           fsr1l	equ	0xFE1
 24207                           indf2	equ	0xFDF
 24208                           postinc2	equ	0xFDE
 24209                           postdec2	equ	0xFDD
 24210                           plusw2	equ	0xFDB
 24211                           fsr2h	equ	0xFDA
 24212                           fsr2l	equ	0xFD9
 24213                           status	equ	0xFD8
 24214                           
 24215 ;; *************** function _TMR1_ISR *****************
 24216 ;; Defined at:
 24217 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 24218 ;; Parameters:    Size  Location     Type
 24219 ;;		None
 24220 ;; Auto vars:     Size  Location     Type
 24221 ;;		None
 24222 ;; Return value:  Size  Location     Type
 24223 ;;		None               void
 24224 ;; Registers used:
 24225 ;;		None
 24226 ;; Tracked objects:
 24227 ;;		On entry : 0/0
 24228 ;;		On exit  : 0/0
 24229 ;;		Unchanged: 0/0
 24230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24231 ;;      Params:         0       0       0       0       0       0       0       0       0
 24232 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24233 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24234 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24235 ;;Total ram usage:        0 bytes
 24236 ;; Hardware stack levels used:    1
 24237 ;; This function calls:
 24238 ;;		Nothing
 24239 ;; This function is called by:
 24240 ;;		_INTERRUPT_InterruptManager
 24241 ;; This function uses a non-reentrant model
 24242 ;;
 24243                           
 24244                           	psect	text118
 24245  0034E8                     __ptext118:
 24246                           	opt stack 0
 24247  0034E8                     _TMR1_ISR:
 24248                           	opt stack 19
 24249                           
 24250                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 24251                           
 24252                           ; BSR set to: 0
 24253                           ;incstack = 0
 24254  0034E8  909E               	bcf	3998,0,c	;volatile
 24255                           
 24256                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 24257  0034EA  C081  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 24258                           
 24259                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 24260  0034EE  C080  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 24261  0034F2  0012               	return		;funcret
 24262  0034F4                     __end_of_TMR1_ISR:
 24263                           	opt stack 0
 24264                           tosu	equ	0xFFF
 24265                           tosh	equ	0xFFE
 24266                           tosl	equ	0xFFD
 24267                           pclatu	equ	0xFFB
 24268                           pclath	equ	0xFFA
 24269                           tblptru	equ	0xFF8
 24270                           tblptrh	equ	0xFF7
 24271                           tblptrl	equ	0xFF6
 24272                           tablat	equ	0xFF5
 24273                           prodh	equ	0xFF4
 24274                           prodl	equ	0xFF3
 24275                           intcon	equ	0xFF2
 24276                           postinc0	equ	0xFEE
 24277                           wreg	equ	0xFE8
 24278                           indf1	equ	0xFE7
 24279                           postdec1	equ	0xFE5
 24280                           fsr1h	equ	0xFE2
 24281                           fsr1l	equ	0xFE1
 24282                           indf2	equ	0xFDF
 24283                           postinc2	equ	0xFDE
 24284                           postdec2	equ	0xFDD
 24285                           plusw2	equ	0xFDB
 24286                           fsr2h	equ	0xFDA
 24287                           fsr2l	equ	0xFD9
 24288                           status	equ	0xFD8
 24289                           
 24290 ;; *************** function _EUSART_Transmit_ISR *****************
 24291 ;; Defined at:
 24292 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 24293 ;; Parameters:    Size  Location     Type
 24294 ;;		None
 24295 ;; Auto vars:     Size  Location     Type
 24296 ;;		None
 24297 ;; Return value:  Size  Location     Type
 24298 ;;		None               void
 24299 ;; Registers used:
 24300 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24301 ;; Tracked objects:
 24302 ;;		On entry : 0/0
 24303 ;;		On exit  : 0/0
 24304 ;;		Unchanged: 0/0
 24305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24306 ;;      Params:         0       0       0       0       0       0       0       0       0
 24307 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24308 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24309 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24310 ;;Total ram usage:        0 bytes
 24311 ;; Hardware stack levels used:    1
 24312 ;; This function calls:
 24313 ;;		Nothing
 24314 ;; This function is called by:
 24315 ;;		_INTERRUPT_InterruptManager
 24316 ;; This function uses a non-reentrant model
 24317 ;;
 24318                           
 24319                           	psect	text119
 24320  003770                     __ptext119:
 24321                           	opt stack 0
 24322  003770                     _EUSART_Transmit_ISR:
 24323                           	opt stack 19
 24324                           
 24325                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 24326                           
 24327                           ;incstack = 0
 24328  003770  0E40               	movlw	64
 24329  003772  6026               	cpfslt	_eusartTxBufferRemaining,c
 24330  003774  D00F               	goto	i2l1064
 24331                           
 24332                           ;eusart.c: 167: {
 24333                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 24334  003776  0E00               	movlw	low _eusartTxBuffer
 24335  003778  2428               	addwf	_eusartTxTail,w,c
 24336  00377A  6ED9               	movwf	fsr2l,c
 24337  00377C  6ADA               	clrf	fsr2h,c
 24338  00377E  0E02               	movlw	high _eusartTxBuffer
 24339  003780  22DA               	addwfc	fsr2h,f,c
 24340  003782  50DF               	movf	indf2,w,c
 24341  003784  6EAD               	movwf	4013,c	;volatile
 24342  003786  2A28               	incf	_eusartTxTail,f,c
 24343                           
 24344                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 24345  003788  0E3F               	movlw	63
 24346  00378A  6428               	cpfsgt	_eusartTxTail,c
 24347  00378C  D001               	goto	i2l9538
 24348                           
 24349                           ;eusart.c: 170: {
 24350                           ;eusart.c: 171: eusartTxTail = 0;
 24351  00378E  6A28               	clrf	_eusartTxTail,c
 24352  003790                     i2l9538:
 24353                           
 24354                           ;eusart.c: 172: }
 24355                           ;eusart.c: 173: eusartTxBufferRemaining++;
 24356  003790  2A26               	incf	_eusartTxBufferRemaining,f,c	;volatile
 24357                           
 24358                           ;eusart.c: 174: }
 24359  003792  0012               	return	
 24360  003794                     i2l1064:
 24361                           
 24362                           ;eusart.c: 175: else
 24363                           ;eusart.c: 176: {
 24364                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 24365  003794  989D               	bcf	3997,4,c	;volatile
 24366  003796  0012               	return		;funcret
 24367  003798                     __end_of_EUSART_Transmit_ISR:
 24368                           	opt stack 0
 24369                           tosu	equ	0xFFF
 24370                           tosh	equ	0xFFE
 24371                           tosl	equ	0xFFD
 24372                           pclatu	equ	0xFFB
 24373                           pclath	equ	0xFFA
 24374                           tblptru	equ	0xFF8
 24375                           tblptrh	equ	0xFF7
 24376                           tblptrl	equ	0xFF6
 24377                           tablat	equ	0xFF5
 24378                           prodh	equ	0xFF4
 24379                           prodl	equ	0xFF3
 24380                           intcon	equ	0xFF2
 24381                           postinc0	equ	0xFEE
 24382                           wreg	equ	0xFE8
 24383                           indf1	equ	0xFE7
 24384                           postdec1	equ	0xFE5
 24385                           fsr1h	equ	0xFE2
 24386                           fsr1l	equ	0xFE1
 24387                           indf2	equ	0xFDF
 24388                           postinc2	equ	0xFDE
 24389                           postdec2	equ	0xFDD
 24390                           plusw2	equ	0xFDB
 24391                           fsr2h	equ	0xFDA
 24392                           fsr2l	equ	0xFD9
 24393                           status	equ	0xFD8
 24394                           
 24395 ;; *************** function _EUSART_Receive_ISR *****************
 24396 ;; Defined at:
 24397 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 24398 ;; Parameters:    Size  Location     Type
 24399 ;;		None
 24400 ;; Auto vars:     Size  Location     Type
 24401 ;;		None
 24402 ;; Return value:  Size  Location     Type
 24403 ;;		None               void
 24404 ;; Registers used:
 24405 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24406 ;; Tracked objects:
 24407 ;;		On entry : 0/0
 24408 ;;		On exit  : 0/0
 24409 ;;		Unchanged: 0/0
 24410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24411 ;;      Params:         0       0       0       0       0       0       0       0       0
 24412 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24413 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24414 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24415 ;;Total ram usage:        0 bytes
 24416 ;; Hardware stack levels used:    1
 24417 ;; This function calls:
 24418 ;;		Nothing
 24419 ;; This function is called by:
 24420 ;;		_INTERRUPT_InterruptManager
 24421 ;; This function uses a non-reentrant model
 24422 ;;
 24423                           
 24424                           	psect	text120
 24425  003748                     __ptext120:
 24426                           	opt stack 0
 24427  003748                     _EUSART_Receive_ISR:
 24428                           	opt stack 19
 24429                           
 24430                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 24431                           
 24432                           ;incstack = 0
 24433  003748  A2AB               	btfss	4011,1,c	;volatile
 24434  00374A  D003               	goto	i2l9544
 24435                           
 24436                           ;eusart.c: 184: {
 24437                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 24438  00374C  98AB               	bcf	4011,4,c	;volatile
 24439                           
 24440                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 24441  00374E  88AB               	bsf	4011,4,c	;volatile
 24442                           
 24443                           ;eusart.c: 189: }
 24444  003750  0012               	return	
 24445  003752                     i2l9544:
 24446                           
 24447                           ;eusart.c: 190: else
 24448                           ;eusart.c: 191: {
 24449                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 24450  003752  0E00               	movlw	low _eusartRxBuffer
 24451  003754  2424               	addwf	_eusartRxHead,w,c
 24452  003756  6ED9               	movwf	fsr2l,c
 24453  003758  6ADA               	clrf	fsr2h,c
 24454  00375A  0E01               	movlw	high _eusartRxBuffer
 24455  00375C  22DA               	addwfc	fsr2h,f,c
 24456  00375E  CFAE FFDF          	movff	4014,indf2	;volatile
 24457  003762  2A24               	incf	_eusartRxHead,f,c
 24458                           
 24459                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 24460  003764  0E3F               	movlw	63
 24461  003766  6424               	cpfsgt	_eusartRxHead,c
 24462  003768  D001               	goto	i2l9552
 24463                           
 24464                           ;eusart.c: 195: {
 24465                           ;eusart.c: 196: eusartRxHead = 0;
 24466  00376A  6A24               	clrf	_eusartRxHead,c
 24467  00376C                     i2l9552:
 24468                           
 24469                           ;eusart.c: 197: }
 24470                           ;eusart.c: 198: eusartRxCount++;
 24471  00376C  2A23               	incf	_eusartRxCount,f,c	;volatile
 24472  00376E  0012               	return		;funcret
 24473  003770                     __end_of_EUSART_Receive_ISR:
 24474                           	opt stack 0
 24475                           tosu	equ	0xFFF
 24476                           tosh	equ	0xFFE
 24477                           tosl	equ	0xFFD
 24478                           pclatu	equ	0xFFB
 24479                           pclath	equ	0xFFA
 24480                           tblptru	equ	0xFF8
 24481                           tblptrh	equ	0xFF7
 24482                           tblptrl	equ	0xFF6
 24483                           tablat	equ	0xFF5
 24484                           prodh	equ	0xFF4
 24485                           prodl	equ	0xFF3
 24486                           intcon	equ	0xFF2
 24487                           postinc0	equ	0xFEE
 24488                           wreg	equ	0xFE8
 24489                           indf1	equ	0xFE7
 24490                           postdec1	equ	0xFE5
 24491                           fsr1h	equ	0xFE2
 24492                           fsr1l	equ	0xFE1
 24493                           indf2	equ	0xFDF
 24494                           postinc2	equ	0xFDE
 24495                           postdec2	equ	0xFDD
 24496                           plusw2	equ	0xFDB
 24497                           fsr2h	equ	0xFDA
 24498                           fsr2l	equ	0xFD9
 24499                           status	equ	0xFD8
 24500                           
 24501 ;; *************** function _CMP1_ISR *****************
 24502 ;; Defined at:
 24503 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 24504 ;; Parameters:    Size  Location     Type
 24505 ;;		None
 24506 ;; Auto vars:     Size  Location     Type
 24507 ;;		None
 24508 ;; Return value:  Size  Location     Type
 24509 ;;		None               void
 24510 ;; Registers used:
 24511 ;;		None
 24512 ;; Tracked objects:
 24513 ;;		On entry : 0/0
 24514 ;;		On exit  : 0/0
 24515 ;;		Unchanged: 0/0
 24516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24517 ;;      Params:         0       0       0       0       0       0       0       0       0
 24518 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24519 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24520 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24521 ;;Total ram usage:        0 bytes
 24522 ;; Hardware stack levels used:    1
 24523 ;; This function calls:
 24524 ;;		Nothing
 24525 ;; This function is called by:
 24526 ;;		_INTERRUPT_InterruptManager
 24527 ;; This function uses a non-reentrant model
 24528 ;;
 24529                           
 24530                           	psect	text121
 24531  00349A                     __ptext121:
 24532                           	opt stack 0
 24533  00349A                     _CMP1_ISR:
 24534                           	opt stack 19
 24535                           
 24536                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 24537                           
 24538                           ;incstack = 0
 24539  00349A  9CA1               	bcf	4001,6,c	;volatile
 24540  00349C  0012               	return		;funcret
 24541  00349E                     __end_of_CMP1_ISR:
 24542                           	opt stack 0
 24543                           tosu	equ	0xFFF
 24544                           tosh	equ	0xFFE
 24545                           tosl	equ	0xFFD
 24546                           pclatu	equ	0xFFB
 24547                           pclath	equ	0xFFA
 24548                           tblptru	equ	0xFF8
 24549                           tblptrh	equ	0xFF7
 24550                           tblptrl	equ	0xFF6
 24551                           tablat	equ	0xFF5
 24552                           prodh	equ	0xFF4
 24553                           prodl	equ	0xFF3
 24554                           intcon	equ	0xFF2
 24555                           postinc0	equ	0xFEE
 24556                           wreg	equ	0xFE8
 24557                           indf1	equ	0xFE7
 24558                           postdec1	equ	0xFE5
 24559                           fsr1h	equ	0xFE2
 24560                           fsr1l	equ	0xFE1
 24561                           indf2	equ	0xFDF
 24562                           postinc2	equ	0xFDE
 24563                           postdec2	equ	0xFDD
 24564                           plusw2	equ	0xFDB
 24565                           fsr2h	equ	0xFDA
 24566                           fsr2l	equ	0xFD9
 24567                           status	equ	0xFD8
 24568                           tosu	equ	0xFFF
 24569                           tosh	equ	0xFFE
 24570                           tosl	equ	0xFFD
 24571                           pclatu	equ	0xFFB
 24572                           pclath	equ	0xFFA
 24573                           tblptru	equ	0xFF8
 24574                           tblptrh	equ	0xFF7
 24575                           tblptrl	equ	0xFF6
 24576                           tablat	equ	0xFF5
 24577                           prodh	equ	0xFF4
 24578                           prodl	equ	0xFF3
 24579                           intcon	equ	0xFF2
 24580                           postinc0	equ	0xFEE
 24581                           wreg	equ	0xFE8
 24582                           indf1	equ	0xFE7
 24583                           postdec1	equ	0xFE5
 24584                           fsr1h	equ	0xFE2
 24585                           fsr1l	equ	0xFE1
 24586                           indf2	equ	0xFDF
 24587                           postinc2	equ	0xFDE
 24588                           postdec2	equ	0xFDD
 24589                           plusw2	equ	0xFDB
 24590                           fsr2h	equ	0xFDA
 24591                           fsr2l	equ	0xFD9
 24592                           status	equ	0xFD8
 24593                           
 24594                           	psect	text122
 24595  000000                     __ptext122:
 24596                           	opt stack 0
 24597                           tosu	equ	0xFFF
 24598                           tosh	equ	0xFFE
 24599                           tosl	equ	0xFFD
 24600                           pclatu	equ	0xFFB
 24601                           pclath	equ	0xFFA
 24602                           tblptru	equ	0xFF8
 24603                           tblptrh	equ	0xFF7
 24604                           tblptrl	equ	0xFF6
 24605                           tablat	equ	0xFF5
 24606                           prodh	equ	0xFF4
 24607                           prodl	equ	0xFF3
 24608                           intcon	equ	0xFF2
 24609                           postinc0	equ	0xFEE
 24610                           wreg	equ	0xFE8
 24611                           indf1	equ	0xFE7
 24612                           postdec1	equ	0xFE5
 24613                           fsr1h	equ	0xFE2
 24614                           fsr1l	equ	0xFE1
 24615                           indf2	equ	0xFDF
 24616                           postinc2	equ	0xFDE
 24617                           postdec2	equ	0xFDD
 24618                           plusw2	equ	0xFDB
 24619                           fsr2h	equ	0xFDA
 24620                           fsr2l	equ	0xFD9
 24621                           status	equ	0xFD8
 24622                           
 24623                           	psect	rparam
 24624  0000                     tosu	equ	0xFFF
 24625                           tosh	equ	0xFFE
 24626                           tosl	equ	0xFFD
 24627                           pclatu	equ	0xFFB
 24628                           pclath	equ	0xFFA
 24629                           tblptru	equ	0xFF8
 24630                           tblptrh	equ	0xFF7
 24631                           tblptrl	equ	0xFF6
 24632                           tablat	equ	0xFF5
 24633                           prodh	equ	0xFF4
 24634                           prodl	equ	0xFF3
 24635                           intcon	equ	0xFF2
 24636                           postinc0	equ	0xFEE
 24637                           wreg	equ	0xFE8
 24638                           indf1	equ	0xFE7
 24639                           postdec1	equ	0xFE5
 24640                           fsr1h	equ	0xFE2
 24641                           fsr1l	equ	0xFE1
 24642                           indf2	equ	0xFDF
 24643                           postinc2	equ	0xFDE
 24644                           postdec2	equ	0xFDD
 24645                           plusw2	equ	0xFDB
 24646                           fsr2h	equ	0xFDA
 24647                           fsr2l	equ	0xFD9
 24648                           status	equ	0xFD8
 24649                           
 24650                           	psect	temp
 24651  00005B                     btemp:
 24652                           	opt stack 0
 24653  00005B                     	ds	1
 24654  0000                     int$flags	set	btemp
 24655                           tosu	equ	0xFFF
 24656                           tosh	equ	0xFFE
 24657                           tosl	equ	0xFFD
 24658                           pclatu	equ	0xFFB
 24659                           pclath	equ	0xFFA
 24660                           tblptru	equ	0xFF8
 24661                           tblptrh	equ	0xFF7
 24662                           tblptrl	equ	0xFF6
 24663                           tablat	equ	0xFF5
 24664                           prodh	equ	0xFF4
 24665                           prodl	equ	0xFF3
 24666                           intcon	equ	0xFF2
 24667                           postinc0	equ	0xFEE
 24668                           wreg	equ	0xFE8
 24669                           indf1	equ	0xFE7
 24670                           postdec1	equ	0xFE5
 24671                           fsr1h	equ	0xFE2
 24672                           fsr1l	equ	0xFE1
 24673                           indf2	equ	0xFDF
 24674                           postinc2	equ	0xFDE
 24675                           postdec2	equ	0xFDD
 24676                           plusw2	equ	0xFDB
 24677                           fsr2h	equ	0xFDA
 24678                           fsr2l	equ	0xFD9
 24679                           status	equ	0xFD8


Data Sizes:
    Strings     1525
    Constant    969
    Data        5
    BSS         429
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     45     154
    BANK1           256      9     225
    BANK2           256      0      64
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_219(CODE[7]), STR_217(CODE[7]), STR_215(CODE[7]), STR_212(CODE[7]), 
		 -> STR_70(CODE[3]), STR_66(CODE[4]), STR_64(CODE[3]), STR_30(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_211(CODE[3]), STR_68(CODE[14]), STR_60(CODE[11]), STR_56(CODE[7]), 
		 -> STR_53(CODE[9]), STR_52(CODE[11]), STR_50(CODE[14]), STR_47(CODE[14]), 
		 -> STR_46(CODE[3]), STR_43(CODE[7]), STR_40(CODE[9]), STR_33(CODE[14]), 
		 -> STR_32(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5370_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5370_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5370_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5370_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4083$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    S4073$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4073$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4049$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4049$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4049$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4049$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 18
		 -> oled_putUint16@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_260(CODE[12]), STR_259(CODE[8]), 
		 -> STR_258(CODE[9]), STR_241(CODE[16]), STR_240(CODE[16]), STR_239(CODE[16]), 
		 -> STR_238(CODE[15]), STR_237(CODE[15]), STR_236(CODE[16]), STR_235(CODE[17]), 
		 -> STR_234(CODE[16]), STR_233(CODE[17]), STR_232(CODE[17]), STR_231(CODE[2]), 
		 -> STR_230(CODE[7]), STR_229(CODE[10]), STR_228(CODE[17]), STR_227(CODE[16]), 
		 -> STR_226(CODE[15]), STR_225(CODE[15]), STR_224(CODE[17]), STR_223(CODE[16]), 
		 -> STR_222(CODE[17]), STR_221(CODE[17]), STR_220(CODE[16]), STR_218(CODE[18]), 
		 -> STR_216(CODE[17]), STR_214(CODE[17]), STR_213(CODE[17]), responseData(BANK0[8]), 
		 -> responseId(BANK1[16]), responsePortNum(BANK0[3]), STR_210(CODE[12]), STR_209(CODE[13]), 
		 -> STR_208(CODE[12]), STR_205(CODE[18]), STR_204(CODE[13]), STR_203(CODE[17]), 
		 -> STR_202(CODE[16]), STR_201(CODE[17]), STR_200(CODE[17]), STR_199(CODE[2]), 
		 -> STR_198(CODE[2]), STR_197(CODE[2]), STR_196(CODE[2]), STR_195(CODE[2]), 
		 -> STR_194(CODE[2]), STR_193(CODE[16]), STR_192(CODE[17]), STR_191(CODE[17]), 
		 -> STR_190(CODE[2]), STR_189(CODE[2]), STR_188(CODE[2]), STR_187(CODE[15]), 
		 -> STR_186(CODE[15]), STR_185(CODE[15]), STR_184(CODE[15]), STR_183(CODE[2]), 
		 -> STR_182(CODE[2]), STR_181(CODE[2]), STR_180(CODE[2]), STR_179(CODE[15]), 
		 -> STR_178(CODE[15]), STR_177(CODE[15]), STR_176(CODE[15]), STR_175(CODE[2]), 
		 -> STR_174(CODE[2]), STR_173(CODE[2]), STR_172(CODE[2]), STR_171(CODE[15]), 
		 -> STR_170(CODE[15]), STR_169(CODE[15]), STR_168(CODE[15]), STR_167(CODE[2]), 
		 -> STR_166(CODE[2]), STR_165(CODE[2]), STR_164(CODE[2]), STR_163(CODE[15]), 
		 -> STR_162(CODE[15]), STR_161(CODE[15]), STR_160(CODE[15]), STR_159(CODE[2]), 
		 -> STR_158(CODE[2]), STR_157(CODE[2]), STR_156(CODE[2]), STR_155(CODE[2]), 
		 -> STR_154(CODE[15]), STR_153(CODE[15]), STR_152(CODE[15]), STR_151(CODE[15]), 
		 -> STR_150(CODE[2]), STR_149(CODE[2]), STR_148(CODE[2]), STR_147(CODE[2]), 
		 -> STR_146(CODE[2]), STR_145(CODE[15]), STR_144(CODE[15]), STR_143(CODE[15]), 
		 -> STR_142(CODE[15]), STR_141(CODE[2]), STR_140(CODE[2]), STR_139(CODE[2]), 
		 -> STR_138(CODE[2]), STR_137(CODE[2]), STR_136(CODE[15]), STR_135(CODE[15]), 
		 -> STR_134(CODE[15]), STR_133(CODE[15]), STR_132(CODE[2]), STR_131(CODE[2]), 
		 -> STR_130(CODE[2]), STR_129(CODE[2]), STR_128(CODE[2]), STR_127(CODE[15]), 
		 -> STR_126(CODE[15]), STR_125(CODE[15]), STR_124(CODE[15]), STR_123(CODE[2]), 
		 -> STR_122(CODE[2]), STR_121(CODE[2]), STR_120(CODE[2]), STR_119(CODE[2]), 
		 -> STR_118(CODE[15]), STR_117(CODE[15]), STR_116(CODE[15]), STR_115(CODE[15]), 
		 -> STR_114(CODE[2]), STR_113(CODE[2]), STR_112(CODE[2]), STR_111(CODE[2]), 
		 -> STR_110(CODE[2]), STR_109(CODE[15]), STR_108(CODE[15]), STR_107(CODE[15]), 
		 -> STR_106(CODE[15]), STR_105(CODE[2]), STR_104(CODE[2]), STR_103(CODE[2]), 
		 -> STR_102(CODE[2]), STR_101(CODE[2]), STR_100(CODE[15]), STR_99(CODE[15]), 
		 -> STR_98(CODE[15]), STR_97(CODE[15]), STR_96(CODE[2]), STR_95(CODE[16]), 
		 -> STR_94(CODE[17]), STR_93(CODE[17]), STR_92(CODE[16]), STR_91(CODE[16]), 
		 -> STR_90(CODE[16]), STR_89(CODE[2]), STR_88(CODE[7]), STR_87(CODE[7]), 
		 -> STR_86(CODE[16]), STR_85(CODE[16]), STR_84(CODE[17]), STR_83(CODE[17]), 
		 -> STR_82(CODE[16]), STR_81(CODE[16]), STR_80(CODE[16]), STR_78(CODE[2]), 
		 -> STR_76(CODE[2]), STR_75(CODE[16]), STR_74(CODE[13]), STR_73(CODE[12]), 
		 -> STR_72(CODE[17]), STR_62(CODE[8]), STR_61(CODE[8]), STR_58(CODE[7]), 
		 -> STR_57(CODE[10]), STR_55(CODE[11]), STR_54(CODE[11]), STR_49(CODE[9]), 
		 -> STR_48(CODE[11]), STR_42(CODE[11]), STR_41(CODE[10]), STR_37(CODE[5]), 
		 -> STR_36(CODE[12]), STR_35(CODE[8]), STR_34(CODE[9]), STR_28(CODE[17]), 
		 -> STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[9]), 
		 -> STR_23(CODE[10]), STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), 
		 -> STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), 
		 -> STR_9(CODE[9]), STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendDataCommand@appData	PTR unsigned char  size(1) Largest target is 12
		 -> dataBuffer(BANK0[12]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_207(CODE[12]), STR_206(CODE[14]), STR_79(CODE[14]), STR_77(CODE[12]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_257(CODE[26]), STR_256(CODE[26]), STR_255(CODE[26]), STR_254(CODE[26]), 
		 -> STR_253(CODE[1]), STR_252(CODE[9]), STR_251(CODE[13]), STR_250(CODE[13]), 
		 -> STR_249(CODE[13]), STR_248(CODE[13]), STR_247(CODE[13]), STR_246(CODE[13]), 
		 -> STR_245(CODE[13]), STR_244(CODE[13]), STR_243(CODE[16]), STR_242(CODE[15]), 
		 -> STR_71(CODE[11]), STR_69(CODE[11]), STR_67(CODE[11]), STR_65(CODE[11]), 
		 -> STR_63(CODE[12]), STR_59(CODE[14]), STR_51(CODE[14]), STR_45(CODE[10]), 
		 -> STR_44(CODE[13]), STR_39(CODE[13]), STR_38(CODE[14]), STR_31(CODE[13]), 
		 -> STR_29(CODE[12]), STR_22(CODE[20]), STR_21(CODE[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_test_adc
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_moteApp_delayms
    _test_adc->_oled_putUint16
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_oled_putUint16
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _oled_putUint16->_oled_putString
    _moteApp_add8bToDataBuffer->___lbdiv
    _moteApp_add8bToDataBuffer->___lbmod
    _moteApp_add16bToDataBuffer->___lwdiv
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _modemSleep->_moteApp_delayms
    _modemResync->_moteApp_delayms
    _MOTEapp_getModemResponse->_EUSART_Read
    _ADC_TempConversion->___lwdiv
    _moteJoiningProcess->_oled_putString
    _MOTEapp_WriteDataRate->_moteApp_delayms
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _TMRapp_Handler->___lwmod
    _USBapp_Handler->_oled_putString
    _oled_putString->_oled_putChar
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _oled_writeData->_SPI_Exchange8bit
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _oled_writeCommand->_SPI_Exchange8bit
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1112051
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                        _modemResync
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  520025
                    _moteApp_delayms
                         _oled_clear
                           _test_adc
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          3     3      0   72898
                                             18 BANK0      3     3      0
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   68012
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   71596
                    _moteApp_delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   79832
                    _moteApp_delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   1     1      0    8236
                                              5 BANK0      1     1      0
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _test_adc                                             8     8      0  221647
                                             28 BANK0      6     6      0
                  _ADC_GetConversion
                 _ADC_TempConversion
                    _moteApp_delayms
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                         11    11      0  434839
                                             43 BANK0      2     2      0
                                              0 BANK1      9     9      0
                  _ADC_GetConversion
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
           _MOTEapp_getModemResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                    _moteApp_delayms
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  16    13      3  265151
                                             28 BANK0     15    12      3
                  _ADC_GetConversion
                 _ADC_TempConversion
                     _MOTEapp_SetADR
                _MOTEapp_SetDataRate
              _MOTEapp_WriteDataRate
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
                              _unhex
 ---------------------------------------------------------------------------------
 (3) _unhex                                                1     1      0     186
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      7     3      4    1948
                                              1 BANK0      7     3      4
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     158
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   69919
                                             18 BANK0      9     7      2
                            ___lbdiv
                            ___lbmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint16                                      10     6      4   75427
                                             18 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 3     3      0     297
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            2     1      1    2183
                                              4 BANK0      2     1      1
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     856
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     657
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           3     0      3    6743
                                              7 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   18481
                                             15 BANK0      1     1      0
                 _EUSART_FlushBuffer
                  _EUSART_Initialize
             _PIN_MANAGER_Initialize
                        _modemResync
                         _modemSleep
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1552
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0      62
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      93
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _modemSleep                                           0     0      0    8205
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _modemResync                                          3     3      0    8483
                                              5 BANK0      3     3      0
           _MOTEapp_getModemResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (5) _MOTEapp_getModemResponse                             2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   2     2      0    2178
                                              7 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    2113
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   4     3      1   89935
                                             18 BANK0      4     3      1
                   _DATAEE_WriteByte
                     _MOTEapp_SetADR
                _MOTEapp_SetDataRate
              _MOTEapp_WriteDataRate
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     1      6    2200
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               9     5      4    2459
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_WriteDataRate                                0     0      0    8205
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    3393
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _moteApp_delayms                                      5     3      2    4812
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRate                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetADR                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     304
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3768
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3768
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       0     0      0   72570
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   66784
                                             13 BANK0      5     1      4
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1228
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1228
                                             13 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1098
                                              3 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0     124
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4558
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     209
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2146
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         4     4      0    2104
                                              7 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1866
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   30065
                                             33 COMRAM    12    12      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (12) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   30065
                                             32 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   17700
                                             29 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  1     1      0   12636
                                             28 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             7     7      0    4286
                                             21 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (14) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     500
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     500
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     501
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _USART_mySetLineCodingHandler                        4     4      0     386
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (12) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _USBapp_handlerState
   _modemResync
     _MOTEapp_getModemResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_GetConversion
     _ADC_TempConversion
       ___lwdiv
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModemResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___lwmod
     _moteApp_delayms
     _moteJoiningProcess
       _DATAEE_WriteByte
       _MOTEapp_SetADR
       _MOTEapp_SetDataRate
       _MOTEapp_WriteDataRate
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _MOTEapp_SetADR
       _MOTEapp_SetDataRate
       _MOTEapp_WriteDataRate
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _EUSART_Initialize
         _PIN_MANAGER_Initialize
         _modemResync
           _MOTEapp_getModemResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _modemSleep
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_displayOff
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _Set_Page_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _oled_writeData
                   _SPI_Exchange8bit
           _oled_devInit
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setDisplay
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
       _moteApp_add8bToDataBuffer
         ___lbdiv
         ___lbmod
       _moteApp_clearBuffers
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
       _unhex
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_devInit
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setDisplay
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setFont
   _oled_putString
     _oled_putChar
       _Set_Column_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _Set_Page_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _oled_writeData
         _SPI_Exchange8bit
   _test_powerup
     _moteApp_delayms
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_adc
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
     _test_comms
       _moteApp_delayms
       _moteApp_toggleLeds
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_leds
       _moteApp_delayms
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_switch
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      40       9       25.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      9      E1       7       87.9%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      9A       5       96.3%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     215      14        0.0%
DATA                 0      0     215       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -357222284 
Symbol Table                                                                                   Fri Nov 13 11:58:56 2015

                            _SPI_Initialize 3518                                  _USB_SD_Ptr 7641  
               ?_moteApp_add16bToDataBuffer 00CF                                test_adc@Traw 00E6  
                                        l55 5060                           ??_CMP1_Initialize 00C8  
                                _USB_Buffer 0140                         moteRunningProcess@i 00EB  
                             _USBDeviceInit 508E                     EUSART_FlushBuffer@index 00C8  
                    __end_of_oled_writeData 350C                        ??_moteApp_toggleLeds 00CD  
                        __size_of_CDCInitEP 0052                    USBapp_handlerState@state 00C8  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
      USER_USB_CALLBACK_EVENT_HANDLER@event 003B        USER_USB_CALLBACK_EVENT_HANDLER@pdata 003D  
                                       l120 4AF6                                         l301 40C4  
                                       l310 3632                                         l412 6466  
                                       l324 5C3C                 __end_of_USBStdGetDscHandler 59B8  
                                       l351 5FC2                                         l610 75A6  
                                       l338 5CF0                                         l363 602A  
                                       l356 5FC8                                         l560 6F88  
                                       l448 66A4                                         l298 408A  
                                       l812 42EE                                         l709 41F4  
                                       l583 72B8                                         l728 37B4  
                                       l834 4C2E                                         l819 435A  
                                       l596 741A                                         _BDT 000400  
                                       _CKE 007E3E                                         l696 4458  
                                       l699 448A                                         l896 3D2C  
                                       _CKP 007E34                                         _GIE 007F97  
                              __CFG_CPB$OFF 000000                                         _PR2 000FBB  
                              __CFG_CPD$OFF 000000                          _moteJoiningProcess 5FB2  
                                       _UIE 000F64                                         _UIR 000F65  
                             test_adc@count 00E9                             _timer1ReloadVal 0080  
                                _USBSuspend 3642                       ??_MOTEapp_SetDataRate 00C8  
              __end_of_moteApp_clearBuffers 3BDC                        USBStdSetCfgHandler@i 0043  
                           _TMR2_Initialize 3534                                         prod 000FF3  
                                       tosl 000FFD                                         wreg 000FE8  
                            _USBDeviceTasks 56B8                         MOTEapp_SetADR@state 00C8  
                            _USBDeviceState 008A                       moteApp_delayms@length 00C8  
                     ??_USBCtrlTrfRxService 003F                    __size_ofi2_USBDeviceInit 00D8  
                            ??_getsUSBUSART 00D2                                ?_EUSART_Read 002E  
                  USBEnableEndpoint@options 0036                                __CFG_LVP$OFF 000000  
                       ?_moteJoiningProcess 00DA                                        l1207 354C  
                                      l1145 35E8                                        l1049 396C  
                                      l1058 39AA                                        l1351 3ACE  
                                      l1179 3B02                                        l2352 3CAC  
                                      l1625 3934                                        l1626 3932  
                                      l2362 3B8E                  USBConfigureEndpoint@handle 0034  
                                      l1920 57D2                                        l1929 5824  
                                      l1890 4716                                        l9810 4292  
                                      l9830 39C6                                        l9902 3CE0  
                                      l9910 3CFC                                        l9832 39C8  
                                      l9818 399C                                        l9836 396E  
                                      l9846 3990                                        l9862 3684  
                                      l9870 379E                                        STR_1 7D2D  
                                      STR_2 7D1E                                        STR_3 7D0F  
                                      l9882 387C                                        STR_4 7F63  
                                      STR_5 7C86                                        STR_6 7C95  
                                      STR_7 7C3C                                        l9878 3866  
                                      STR_8 7E97                                        STR_9 7F6C  
           __size_of_MOTEapp_TimerBasedTask 000E                                        _PEIE 007F96  
                                      u8130 40F6                                        u8150 4124  
                     ??_USBCtrlTrfTxService 002E                                        u8137 40EC  
                                      u8157 411A                                        _UCFG 000F62  
                                      u8355 3ADE                                        u8356 3AE0  
                                      _UEP0 000F6A                                        _UEP1 000F6B  
                                      _UEIE 000F66                                        _UEIR 000F67  
                                      _UCON 000F60                                        _TMR2 000FBC  
                   __size_of_MOTEapp_SetADR 0008                             _CDCDataInHandle 0076  
    USBStdFeatureReqHandler@current_ep_data 0047                                        _pDst 007C  
                                      _main 4FBC                    ??i2_USBTransferOnePacket 0032  
         __end_of_moteApp_add8bToDataBuffer 4066                                        fsr1h 000FE2  
                                      fsr2h 000FDA                                        indf1 000FE7  
                                      fsr1l 000FE1                                        indf2 000FDF  
                                      fsr2l 000FD9                             _USBDeviceAttach 3912  
                                      btemp 005B                               __CFG_BORV$190 000000  
                                      pclat 000FFA                                        prodh 000FF4  
                                      prodl 000FF3                        _USBapp_setrxByteFlag 34BA  
                                      start 10AA                             ?_oled_putUint16 00DA  
                             __CFG_IESO$OFF 000000                             __end_of_EndLine 3518  
                    __end_of_SPI_Initialize 3526                            __end_of_CMP1_ISR 349E  
                           ?_oled_putString 00D5                  __end_of_USBCheckStdRequest 495C  
                    ??_USBCtrlTrfOutHandler 0041                 __size_of_moteRunningProcess 1174  
                          ?_oled_setDisplay 002E                               __CFG_MCLRE$ON 000000  
                          _modemBufferIndex 0029                                ___param_bank 000010  
                 ??_USBStdFeatureReqHandler 0043                                 _TMRapp_Tick 34B4  
                      ??_moteJoiningProcess 00DB                      moteApp_delayms@counter 00CB  
             ?_USART_mySetLineCodingHandler 002E                      sendDataCommand@appData 00CB  
                         sendCommand@string 00C9                    ??_USBStdGetStatusHandler 002E  
              __end_of_USBapp_getrxByteFlag 34AA                   __size_of_DATAEE_WriteByte 003A  
                            ?_USBDeviceInit 002E                               ?_EUSART_Write 002E  
                      oled_putUint16@number 00DA              __size_of_OSCILLATOR_Initialize 0016  
                           ?_oled_writeData 002E               __end_of_OSCILLATOR_Initialize 35F2  
                                     l10010 40B0                                       l10012 40B6  
                                     l10102 496E                                       l10022 40D6  
                                     l10120 49E2                                       l10200 3B72  
                                     l11000 6340                                       l10008 40A8  
                                     l10018 40CE                                       l10108 498E  
                                     l10204 3B84                                       l10132 3A12  
                                     l10044 3736                                       l10310 4540  
                                     l11014 6396                                       l11006 635C  
                                     l10070 3942                                       l11016 639A  
                                     l10144 3A2C                                       l10136 3A18  
                                     l12010 50BA                                       l10306 4532  
                                     l11050 644A                                       l11034 63FE  
                                     l11026 63D2                                       l10138 3A1C  
                                     l11106 654E                                       l10340 551C  
                                     l10332 54F2                                       l11060 646E  
                                     l11044 6420                                       l10180 3C88  
                                     l10148 3A34                                       l10164 37E0  
                                     l10156 37CA                                       l11220 6804  
                                     l11212 67C6                                       l10350 5562  
                                     l10342 552A                                       l10334 5500  
                                     l10318 4550                                       l11054 6458  
                                     l11038 6412                                       l10430 47A4  
                                     l11310 69F6                                       l11302 69EA  
                                     l11230 6842                                       l11214 67CE  
                                     l11134 65F4                                       l10238 41D0  
                                     l12040 5100                                       l12016 50E4  
                                     l12024 50EE                                       l10352 5570  
                                     l10344 5538                                       l10280 4158  
                                     l11056 645E                                       l11064 647E  
                                     l10176 3C7C                                       l11240 6882  
                                     l11160 6688                                       l10346 5546  
                                     l10338 550E                                       l11066 64C6  
                                     l10178 3C84                                       l10370 3B9C  
                                     l10450 4816                                       l10426 478E  
                                     l11410 6C0C                                       l11330 6A6A  
                                     l11306 69F2                                       l11242 688A  
                                     l11170 66A6                                       l11138 65FE  
                                     l11082 64F8                                       l10612 57F0  
                                     l10604 57E0                                       l12132 433E  
                                     l10196 3B66                                       l10348 5554  
                                     l10356 557E                                       l10284 417C  
                                     l10276 4132                                       l10188 3CA2  
                                     l10380 3BB0                                       l10436 47B4  
                                     l11260 690E                                       l11156 665E  
                                     l11092 651C                                       l11164 6696  
                                     l12204 5CA2                                       l12134 4344  
                                     l12118 42F0                                       l10198 3B6E  
                                     l10358 559E                                       l10286 4184  
                                     l10534 44BC                                       l10390 3BC8  
                                     l10446 47E4                                       l10462 37FE  
                                     l11422 6C26                                       l11414 6C14  
                                     l11334 6A72                                       l11326 6A62  
                                     l11182 66EC                                       l11174 66B0  
                                     l12222 5CF2                                       l12214 5CDA  
                                     l12150 5BF0                                       l10702 4B12  
                                     l12302 5072                                       l12310 5082  
                                     l10632 583E                                       l10640 585C  
                                     l10624 5828                                       l10608 57E8  
                                     l12128 4336                                       l10288 44DA  
                                     l11600 702C                                       l11512 6E0C  
                                     l11264 6928                                       l11272 695E  
                                     l11184 66F4                                       l11096 652A  
                                     l10712 4B36                                       l10642 5862  
                                     l10650 5880                                       l10618 5816  
                                     l10562 4742                                       l12138 434A  
                                     l10538 44C4                                       l11522 6E28  
                                     l11514 6E1E                                       l11450 6CAC  
                                     l11442 6C9C                                       l11418 6C22  
                                     l11362 6AF4                                       l11354 6AE4  
                                     l11338 6A76                                       l11282 6978  
                                     l11274 6966                                       l11194 6734  
                                     l12234 5D3A                                       l12170 5C2C  
                                     l10714 4B40                                       l10660 5894  
                                     l10652 5884                                       l10564 4746  
                                     l10572 4788                                       l11700 721A  
                                     l11620 7084                                       l11268 6944  
                                     l11196 673C                                       l12252 5DA6  
                                     l12164 5C1C                                       l10708 4B2E  
                                     l10662 58B2                                       l11542 6E9A  
                                     l11518 6E24                                       l11470 6D22  
                                     l11446 6CA4                                       l11438 6C94  
                                     l11390 6B94                                       l11382 6B68  
                                     l11366 6AFA                                       l11358 6AEC  
                                     l11550 6EEC                                       l12254 5DB8  
                                     l12190 5C6C                                       l12174 5C40  
                                     l12158 5C04                                       l10568 4764  
                                     l10592 3622                                       l10912 60FE  
                                     l11720 726E                                       l11704 7222  
                                     l11624 708E                                       l11384 6B6E  
                                     l10840 3D08                                       l12248 5D90  
                                     l10906 60EC                                       l11810 74F2  
                                     l11650 710C                                       l11642 70E6  
                                     l11538 6E94                                       l11490 6D98  
                                     l11474 6D2A                                       l11466 6D1A  
                                     l11394 6B9E                                       l11386 6B80  
                                     l11298 69E4                                       l12178 5C4E  
                                     l12282 500A                                       l10932 617E  
                                     l10924 6152                                       l10908 60F0  
                                     l11820 7530                                       l11724 7276  
                                     l11716 7268                                       l11388 6B86  
                                     l11548 6EAE                                       l10852 3D42  
                                     l10942 61B0                                       l10926 6156  
                                     l10870 5FE2                                       l11830 7564  
                                     l11806 74E8                                       l11646 7100  
                                     l11638 70CE                                       l11574 6F5C  
                                     l11566 6F3A                                       l11494 6D9E  
                                     l10854 3D44                                       l10846 3D28  
                                     l10774 4D08                                       l10694 4ACA  
                                     l11904 4C8E                                       l10952 61F6  
                                     l10936 618C                                       l10880 6024  
                                     l10872 5FE6                                       l11744 731A  
                                     l11752 7380                                       l10856 3D48  
                                     l10848 3D30                                       l10696 4AE0  
                                     l12296 5062                                       l10962 623C  
                                     l10882 6030                                       l10866 5FCA  
                                     l11842 7590                                       l11738 72E4  
                                     l11754 738C                                       l11578 6F76  
                                     l11498 6DA2                                       l11748 734E  
                                     l11676 71AE                                       l11668 7188  
                                     l11588 6FE4                                       l10990 62F6  
                                     l10958 621E                                       l11838 757E  
                                     l11782 7436                                       l11758 7396  
                                     l11598 7024                                       l11862 75EC  
                                     l10976 6294                                       l10888 6054  
                                     l11848 75A2                                       l11768 73D6  
                                     l11778 7408                                       l11698 7218  
                                     l11972 3844                                       l11976 3854  
                                     l11888 4C52                                       ?_main 002E  
                           __end_of___lbdiv 3A38                                       _EEADR 000FA9  
                                     STR_10 7E03                                       STR_11 7EA3  
                                     STR_20 7F75                                       STR_12 7E2A  
                                     STR_21 7FFD                                       STR_13 7E10  
                                     STR_30 7FEF                                       STR_14 7E1D  
                                     STR_22 7A72                                       STR_23 7F05  
                                     STR_15 7EE6                                       STR_31 7DF6  
                                     STR_32 7FF2                                       STR_24 7F51  
                                     STR_40 7F3F                                       STR_16 7F23  
                                     STR_17 7F7E                                       STR_41 7EFB  
                                     STR_33 7D66                                       STR_25 7B54  
                                     STR_18 7FA7                                       STR_34 7F5A  
                                     STR_42 7EC5                                       STR_50 7D58  
                                     STR_26 7BA9                                       STR_51 7D4A  
                                     STR_43 7FCC                                       STR_19 7FAF  
                                     STR_35 7F9F                                       STR_27 7BBA  
                                     STR_60 7EBA                                       STR_44 7DF6  
                                     STR_52 7EBA                                       STR_36 7E73  
                                     STR_28 7B10                                       STR_53 7F3F  
                                     STR_37 7F14                                       STR_61 7F8F  
                                     STR_45 7F19                                       STR_29 7E8B  
                                     STR_70 7FF2                                       STR_46 7FF2  
                                     STR_62 7F97                                       STR_54 7EAF  
                                     STR_38 7D4A                                       STR_55 7EC5  
                                     STR_39 7DF6                                       STR_71 7ED0  
                                     STR_47 7D66                                       STR_63 7E7F  
                                     STR_56 7FCC                                       STR_64 7D0C  
                                     STR_48 7EDB                                       STR_80 7BEC  
                                     STR_72 7B65                                       STR_49 7F36  
                                     STR_57 7F0F                                       STR_65 7ED0  
                                     STR_73 7E43                                       STR_81 7BDC  
                                     STR_90 7BEC                                       STR_82 7BFC  
                                     STR_66 7C28                                       STR_58 7FC5  
                                     STR_74 7D81                                       STR_91 7BDC  
                                     STR_59 7D4A                                       STR_67 7ED0  
                                     STR_75 7BFC                                       STR_83 7ACC  
                                     STR_92 7BFC                                       STR_68 7D58  
                                     STR_76 7FF9                                       STR_84 7ABB  
                           __end_of___lbmod 37E8                                       STR_85 7BFC  
                                     STR_69 7ED0                                       STR_77 7E67  
                                     STR_93 7AFF                                       STR_86 7BEC  
                                     STR_78 7FFB                                       STR_94 7B32  
                                     STR_95 7BFC                                       STR_87 7FBE  
                                     STR_79 7D3C                                       STR_96 7FF7  
                                     STR_88 7FB7                                       STR_89 7FF9  
                                     STR_97 7C79                                       STR_98 7C88  
                                     STR_99 7C97           __size_of_USBCtrlEPServiceComplete 00E4  
                           _TMR1_StartTimer 349E                             __end_of___lldiv 4276  
         __size_of_MOTEapp_setResponseReady 0002                                       u10607 5268  
                                     _T1CON 000FCD                                       u10617 527C  
                    __end_of_USBDeviceTasks 57B6                                       u10627 3AFC  
                                     u10637 37A4                                       _T2CON 000FBA  
                                     u10587 5244                                       u10597 5252  
                   __end_of_sendDataCommand 4820                   ?_USBCtrlEPServiceComplete 002E  
                           __end_of___lwdiv 3CB6                             __end_of___lwmod 3B98  
                 ?_MOTEapp_setResponseReady 002E                         oled_putUint8@number 00DC  
                                     _UADDR 000F63                                       _RCREG 000FAE  
                                     _RCSTA 000FAB                                       _TMR1H 000FCF  
                                     _TMR1L 000FCE                                       _SPBRG 000FAF  
  moteApp_add16bToDataBuffer@bufferLocation 00D1     moteApp_add8bToDataBuffer@bufferLocation 00CC  
                                     _USTAT 000F61                                       _TXREG 000FAD  
                                     _TXSTA 000FAC                               __CFG_WRT0$OFF 000000  
        __size_of_USBCtrlEPAllowStatusStage 00BC                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                           moteHandler@i_1340 01DF  
                             __CFG_WRT3$OFF 000000                              __CFG_EBTR0$OFF 000000  
                            __CFG_FCMEN$OFF 000000                              __CFG_EBTR1$OFF 000000  
                            __CFG_EBTR2$OFF 000000                              __CFG_EBTR3$OFF 000000  
           __end_of_USBCtrlEPAllowDataStage 46FC                           oled_putChar@index 00D4  
                          __end_of_TMR1_ISR 34F4                                       _sd000 7A06  
                                     _sd001 798C             service_pushbutton@Release_Timer 009D  
                                     _sd002 79C0                               __CFG_WRTB$OFF 000000  
                    moteRunningProcess@Traw 00E9                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                             _DATAEE_ReadByte 358A  
                            __CFG_EBTRB$OFF 000000                                  i2memset@p1 002E  
                                     _light 007A                                       _unhex 37E8  
                   __end_of_TMR1_Initialize 3912                                _runningState 0098  
                                     pclath 000FFA                                       tablat 000FF5  
               MOTEapp_SetDataRate@dataRate 00C8                                       plusw2 000FDB  
                         __end_of_CDCInitEP 3DF0                  oled_setDisplay@displayType 00CA  
                              ?_modemResync 002E                                       status 000FD8  
                            __CFG_T3CMX$RC0 000000                             _TMR2_StartTimer 34A2  
                           __end_of_strncmp 4198                             ___lbdiv@divisor 00C8  
                            __CFG_ICPRT$OFF 000000                       ?_USBapp_setrxByteFlag 002E  
                          __end_ofi2_memset 383A                             ___lbdiv@counter 00CA  
                              _m10SecTicker 0094                             ?_SPI_Initialize 002E  
                           putUSBUSART@data 00C8          USART_mySetLineCodingHandler@dwBaud 003B  
              __size_of_USBStdSetCfgHandler 00A8                             __initialization 3FA8  
                     TMR2_ReadTimer@readVal 00C8               __size_of_TMRapp_ClearBitFlags 0004  
                              __end_of_main 508E               __size_of_MOTEapp_handlerState 0008  
                    _MOTEapp_TimerBasedTask 3526                              ??_EUSART_Write 00C8  
                   __end_of_TMR2_Initialize 3544                                ?_sendCommand 00C9  
               ?_INTERRUPT_InterruptManager 002E                   __size_of_USBCtrlEPService 00B2  
                                    ??_main 00F5                                ?_moteHandler 002E  
                             __activetblptr 000002                          _modemResonseBuffer 0180  
                           ?_USBDeviceTasks 002E                         i2_EUSART_Initialize 388E  
                     oled_putUint16@numData 00DE                   sendDataCommand@dataLength 00CC  
                               ?_USBSuspend 002E                                  _NextUSBOut 001A  
                            __CFG_SDOMX$RB3 000000                             __CFG_CCP2MX$RC1 000000  
                              _cdc_mem_type 0090                    __end_of_SPI_Exchange8bit 3554  
                   __end_of_USBDeviceAttach 393E                                      _ADCON0 000FC2  
                                    _ADCON1 000FC1                                      _ADCON2 000FC0  
                          _CDCDataOutHandle 0078                           _getsUSBUSART$5738 00D3  
                                    _ACTCON 000FB5                                      STR_100 7CA6  
                                    STR_101 7FF5                                      STR_110 7FF5  
                                    STR_102 7FF5                                      STR_111 7FF5  
                                    STR_103 7FF5                                      STR_120 7FF5  
                                    STR_112 7FF5                                      STR_104 7FF5  
                                    STR_200 7AEE                                      STR_121 7FF5  
                                    STR_113 7FF5                                      STR_105 7FF7  
                                    STR_201 7ADD                                      STR_202 7BFC  
                                    STR_130 7FF5                                      STR_122 7FF5  
                                    STR_106 7C79                                      STR_114 7FF7  
                                    STR_210 7E4F                                      _ADRESH 000FC4  
                                    STR_131 7FF5                                      STR_115 7C88  
                                    STR_107 7C88                                      STR_123 7FF7  
                                    STR_211 7FF2                                      STR_203 7B98  
                                    STR_140 7FF5                                      STR_124 7C97  
                                    STR_116 7C97                                      STR_108 7C97  
                                    STR_132 7FF7                                      STR_212 7FE1  
                                    STR_204 7D74                                      STR_220 7C2C  
                                    STR_221 7AFF                                      STR_133 7CA6  
                                    STR_125 7CA6                                      STR_117 7CA6  
                                    STR_109 7CA6                                      STR_141 7FF7  
                                    STR_213 7B21                                      STR_205 7A86  
                                    STR_230 7E60                                      STR_206 7D3C  
                                    STR_222 7B32                                      STR_142 7CB5  
                                    STR_134 7CB5                                      STR_126 7CB5  
                                    STR_150 7FF7                                      STR_118 7CB5  
                                    STR_214 7AAA                                      _ADRESL 000FC3  
                                    STR_231 7C59                                      STR_223 7BFC  
                                    STR_207 7E67                                      STR_119 7FF5  
                                    STR_151 7CC4                                      STR_143 7CC4  
                                    STR_135 7CC4                                      STR_215 7FE8  
                                    STR_127 7CC4                                      STR_240 7BDC  
                                    STR_232 7AEE                                      STR_128 7FF5  
                                    STR_160 7CD3                                      STR_152 7CD3  
                                    STR_144 7CD3                                      STR_208 7E5B  
                                    STR_136 7CD3                                      STR_216 7B76  
                                    STR_224 7B43                                      STR_233 7ADD  
                                    STR_241 7BFC                                      STR_209 7D81  
                                    STR_137 7FF5                                      STR_129 7FF5  
                                    STR_161 7CE2                                      STR_153 7CE2  
                                    STR_217 7FDA                                      STR_145 7CE2  
                                    STR_225 7C5B                                      STR_170 7C4C  
                                    STR_234 7BFC                                      STR_146 7FF5  
                                    STR_138 7FF5                                      STR_162 7CF1  
                                    STR_250 7DDC                                      STR_242 7D00  
                                    STR_154 7CF1                                      STR_226 7C6A  
                                    STR_218 7A98                                      STR_227 7BFC  
                                    STR_155 7FF5                                      STR_147 7FF5  
                                    STR_139 7FF5                                      STR_171 7C79  
                                    STR_219 7FD3                                      STR_251 7DE9  
                                    STR_163 7C4C                                      STR_243 7C1C  
                                    STR_235 7B87                                      STR_180 7FF5  
                                    STR_172 7FF5                                      STR_164 7FF5  
                                    STR_156 7FF5                                      STR_148 7FF5  
                                    STR_252 7F48                                      STR_260 7E37  
                                    STR_244 7D8E                                      STR_236 7C0C  
                                    STR_228 7BCB                                      STR_237 7C6A  
                                    STR_181 7FF5                                      STR_173 7FF5  
                                    STR_165 7FF5                                      STR_157 7FF5  
                                    STR_149 7FF5                                      STR_229 7EF1  
                                    STR_245 7D9B                                      _EEDATA 000FA8  
                                    STR_238 7C5B                                      STR_190 7FF5  
                                    STR_182 7FF5                                      STR_174 7FF5  
                                    STR_166 7FF5                                      STR_158 7FF5  
                                    STR_246 7DA8                                      STR_254 7A3E  
                                    STR_191 7ACC                                      STR_239 7BEC  
                                    STR_183 7FF7                                      STR_175 7FF7  
                                    STR_167 7FF7                                      STR_159 7FF7  
                                    STR_247 7DB5                                      STR_255 7A58  
                                    STR_184 7C4C                                      STR_192 7ABB  
                                    STR_168 7CE2                                      STR_176 7CF1  
                                    STR_248 7DC2                                      STR_256 7A0A  
                                    STR_177 7C4C                                      STR_193 7BFC  
                                    STR_185 7C79                                      STR_169 7CF1  
                                    STR_249 7DCF                                      STR_257 7A24  
                                    STR_194 7C59                                      STR_178 7C79  
                                    STR_186 7C88                                      STR_258 7F2D  
                                    STR_195 7FF5                                      STR_179 7C88  
                                    STR_187 7C97                                      STR_259 7F87  
                                    STR_196 7FF5                                      STR_188 7FF5  
                                    STR_197 7C59                                      STR_189 7FF5  
                                    STR_198 7C59                                      STR_199 7C59  
                                    _EECON2 000FA7                                      ?_unhex 002E  
         __size_of_MOTEapp_getModemResponse 004A                             getsUSBUSART@len 00D1  
                                    _T1GCON 000FCC                        oled_putUint8@numData 00DD  
                 ?_MOTEapp_getModemResponse 002E                       __size_of_CDCTxService 0100  
                                    i2l1113 1076                                      i2l1105 104A  
                                    i2l1107 105A                                      i2l1109 1066  
                                    i2l1064 3794                                      i2l1703 5954  
                                    i2l1713 43E2                                      i2l1706 59A0  
                                    i2l1650 5466                                      i2l1811 5F38  
                                    i2l1803 5EBE                                      i2l1708 59A4  
                                    i2l1716 4444                                      i2l1717 43EC  
                                    i2l1718 43F0                                      i2l1726 3B56  
                                    i2l1576 56E0                                      i2l1753 3D56  
                                    i2l1586 575C                                      i2l2299 4264  
                                    i2l1763 4F90                                      i2l1755 3D9A  
                                    i2l1587 57B2                                      i2l1588 5762  
                                    i2l1870 45A0                                      i2l1793 5DD8  
                                    i2l1777 48CA                                      i2l1786 48FA  
                                    i2l6204 4640                                      i2l7102 5B06  
                                    i2l6222 39E8                                      i2l6230 4830  
                                    i2l7114 5B5C                                      i2l6410 45D0  
                                    i2l6218 39DA                                      i2l6404 45CA  
                                    i2l6236 4850                                      i2l7060 547A  
                                    i2l7044 540A                                      i2l7118 5B76  
                                    i2l7128 5BD2                                      i2l6248 48A4  
                                    i2l7144 48D4                                      i2l7048 5410  
                                    i2l6514 4218                                      i2l6506 4EE8  
                                    i2l6362 3A54                                      i2l6442 3C22  
                                    i2l7170 491C                                      i2l6516 4224  
                                    i2l7092 5AE0                                      i2l6372 456A  
                                    i2l6532 381A                                      i2l7156 48E4  
                                    i2l7068 5488                                      i2l6526 4256  
                                    i2l6518 4228                                      i2l6390 4594  
                                    i2l6382 4580                                      i2l7166 490A  
                                    i2l7096 5AEC                                      i2l6376 4576  
                                    i2l6536 382A                                      i2l6712 46CA  
                                    i2l9112 36D6                                      i2l6474 4E46  
                                    i2l9114 36D8                                      i2l6804 4436  
                                    i2l6732 4A2C                                      i2l6708 46B6  
                                    i2l9220 51D8                                      i2l9204 51C4  
                                    i2l6478 4E4E                                      i2l6398 45B8  
                                    i2l6822 5DDA                                      i2l6488 4E76  
                                    i2l6496 4EAC                                      i2l6680 4DB4  
                                    i2l9136 3B54                                      i2l6498 4EB2  
                                    i2l6762 58C6                                      i2l6754 4A86  
                                    i2l9170 4BF6                                      i2l6852 5E74  
                                    i2l9156 4B98                                      i2l6862 5EAC  
                                    i2l6846 5E62                                      i2l6838 5E32  
                                    i2l6774 5958                                      i2l6766 58D6  
                                    i2l6782 59A8                                      i2l9190 5190  
                                    i2l6864 5ED6                                      i2l6848 5E64  
                                    i2l9600 571A                                      i2l6890 5F82  
                                    i2l6874 5F18                                      i2l6794 4402  
                                    i2l9610 572A                                      i2l7764 4F1C  
                                    i2l6892 5F8E                                      i2l6884 5F4A  
                                    i2l6876 5F24                                      i2l9196 51BA  
                                    i2l7790 4FB6                                      i2l7782 4F76  
                                    i2l9606 5722                                      i2l9552 376C  
                                    i2l9544 3752                                      i2l7792 4FB8  
                                    i2l7776 4F58                                      i2l9624 5750  
                                    i2l9616 5734                                      i2l9538 3790  
                                    i2l9650 5796                                      i2l9730 1072  
                                    i2l9652 57AA                                      i2l9644 5780  
                                    i2l9572 56D8                                      i2l9564 56CC  
                                    i2l9594 56FE                                      i2l9586 56F2  
                                 ??_EndLine 00C9                                      _OSCCON 000FD3  
                             CDCTxService@i 00D1                                      _SPBRGH 000FB0  
                                    _SSPBUF 000FC9                    i2USBTransferOnePacket@ep 0032  
                         ??i2_USBDeviceInit 0036             __size_ofi2_USBTransferOnePacket 009E  
                      ?i2_EUSART_Initialize 002E                        oled_displayOff@state 00CA  
                             oled_putChar@k 00D3                           _shortPacketStatus 002B  
            moteRunningProcess@changeStates 00F2                              __CFG_XINST$OFF 000000  
                      _moteApp_clearBuffers 3B98                             USBDeviceTasks@i 004E  
                __end_of_Set_Column_Address 367E                 USBStdFeatureReqHandler@pUEP 0045  
                          __end_of_hexToStr 3748                    USBTransferOnePacket@data 00C9  
                USBCtrlTrfInHandler@lastDTS 003F                             ??_USBDeviceInit 00D0  
                 __size_of_Set_Page_Address 0014                     __end_of_TMR1_StartTimer 34A2  
                              ?_putUSBUSART 00C8                                   ??___lbdiv 00C9  
                            __CFG_STVREN$ON 000000                      modemResync@escapeEvent 00CF  
                                 ??___lbmod 00C9                                   ??___lldiv 0036  
                      __end_of_getsUSBUSART 478C                                   ??___lwdiv 00CC  
                                 ??___lwmod 00CC                           _USBEnableEndpoint 39CC  
           __size_of_USBStdGetStatusHandler 007E                         _EUSART_Transmit_ISR 3770  
                                    _memset 383A                                      clear_0 3FAE  
                                    clear_1 3FBA                                      clear_2 3FC6  
                                    clear_3 3FD2                          ?_USBEnableEndpoint 0036  
            ??_USART_mySetLineCodingHandler 003B                     __end_of_DATAEE_ReadByte 359E  
                                    _strcmp 44DA                  __end_of_ADC_TempConversion 3700  
             __size_of_USBTransferOnePacket 00A0                            ?_sendDataCommand 00C9  
                           _moteApp_delayms 3798                 __size_of_service_pushbutton 004C  
                              _CDCTxService 57B6                                __mediumconst 7640  
                          __end_of_test_adc 4D70                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                       ??_USBEnableEndpoint 0037                    ADC_GetConversion@channel 00CC  
                                    unhex@c 00C8                                   ?_CMP1_ISR 002E  
                   __end_of_TMR2_StartTimer 34A6                                 _CtrlTrfData 000438  
            __size_of_MOTEapp_WriteDataRate 00EE                                   ??_strncmp 00CE  
                          ___lbdiv@dividend 00C9                               ?_oled_devInit 002E  
                      ?_EUSART_Transmit_ISR 002E               __end_of_MOTEapp_WriteDataRate 55C4  
                      _controlTransferState 0021                              _MOTEapp_SetADR 34D0  
                      _USBapp_getrxByteFlag 34A6                            ?_TMR1_Initialize 002E  
                      __CFG_LS48MHZ$SYS48X8 000000                        __size_of_EUSART_Read 002E  
                         _SYSTEM_Initialize 369C                __size_of_USBapp_handlerState 0008  
                           ___lbmod@divisor 00C8                                  __accesstop 0060  
                   __end_of__initialization 3FF8                      ??_USBapp_setrxByteFlag 002E  
                           ___lbmod@counter 00CA                             __CFG_PBADEN$OFF 000000  
                              ?_test_switch 002E                       ??i2_EUSART_Initialize 002E  
                           _CMP1_Initialize 3554                          ?_SYSTEM_Initialize 002E  
                        oled_writeData@data 00C9                               ___rparam_used 000001  
                             ?_oled_setFont 00C8                    __size_of_USBStallHandler 003E  
                             ?_oled_putChar 00CB                       ?_moteApp_clearBuffers 002E  
                       __size_of_USBSuspend 001E                 __size_of_EUSART_FlushBuffer 002C  
                            __pcstackCOMRAM 002E                   __end_of_USBEnableEndpoint 3A02  
                          __CFG_nPWRTEN$OFF 000000                               __end_of_sd000 7A0A  
                             __end_of_sd001 79C0                               __end_of_sd002 79F4  
                              __pidataBANK0 34AF                         ??_SYSTEM_Initialize 00CA  
                 oled_putUint16@station_dot 00DC                                   ?_TMR1_ISR 002E  
          __size_of_USBCtrlEPAllowDataStage 008E                            _DATAEE_WriteByte 3AA8  
             __size_of_USBConfigureEndpoint 0088                               __end_of_unhex 3810  
               __end_of_USBCtrlTrfInHandler 4FBC                            ?_TMR2_Initialize 002E  
                          ___lbdiv@quotient 00CB                      i2_USBTransferOnePacket 4820  
                           __CFG_PCLKEN$OFF 000000                              __CFG_nLPBOR$ON 000000  
                         __end_of_OledFont0 7949                           _CDCTxService$5786 00CF  
                                _cdc_notice 00AA                                   ?i2_memset 002E  
                                _cdc_rx_len 0091                                  _cdc_tx_len 0092  
                                ??_CMP1_ISR 002E                             _responsePortNum 00C3  
                  ??_USBCtrlTrfSetupHandler 004B                      __end_of_MOTEapp_SetADR 34D8  
                                _dataBuffer 009E                              ??_oled_devInit 00CA  
                          ?_USBDeviceAttach 002E                   __end_of_SYSTEM_Initialize 36BC  
                     ??_EUSART_Transmit_ISR 002E                      _USBStdGetStatusHandler 43DA  
                                   ??_unhex 00C8                       ?_USBapp_getrxByteFlag 002E  
                      service_pushbutton@bs 00C8                            ??_oled_putUint16 00DE  
                                __pbssBANK0 0060                                  __pbssBANK1 0100  
                                __pbssBANK2 0200                        __end_of_EUSART_Write 39CC  
                   __size_of_TMR2_ReadTimer 0008                            ??_oled_putString 00D9  
                            ??_oled_setFont 00CA                 __size_of_EUSART_Receive_ISR 0028  
                       oled_putString@index 00D9                              ??_oled_putChar 00CD  
               __size_of_USBWakeFromSuspend 0022                                 _pBDTEntryIn 000F  
                    __size_of_oled_clearRow 001E                        __size_of_modemResync 0064  
                  sendDataCommand@byteCount 00CE            __end_of_USBCtrlEPServiceComplete 54D6  
          __end_of_MOTEapp_setResponseReady 1006                      oled_putChar@start_page 00CC  
               __size_of_USBCheckCDCRequest 0088                           __CFG_PLLSEL$PLL3X 000000  
                        __size_of_oled_init 0022                            ??_oled_writeData 00C9  
                      USBCtrlTrfRxService@i 003F                                ?_TMRapp_Tick 002E  
                          ?_TMR1_StartTimer 002E                                  ??_TMR1_ISR 002E  
                  oled_putUint16@start_page 00DD                     __end_of_moteApp_delayms 37C0  
                                   _CM1CON0 000F98          MOTEapp_getModemResponse@bufferByte 00CA  
               __end_of_MOTEapp_SetDataRate 34E0                     __size_of_USBapp_Handler 0076  
                   __size_of_TMRapp_Handler 00DE                moteRunningProcess@dummyRead1 00ED  
              moteRunningProcess@dummyRead2 00EE                                     _BAUDCON 000FB8  
                                   ?_memset 00C8                                  _device_dsc 79F4  
                 Set_Column_Address@address 00CA                    __size_of_oled_displayOff 0012  
                          _USBCtrlEPService 4B52                 __size_of_moteApp_toggleLeds 0068  
                                _ep_data_in 006A                     __size_of_ADC_Initialize 0016  
                                   ?_strcmp 00C8                            ?_DATAEE_ReadByte 002E  
               __end_of_USBCtrlTrfRxService 5BDE                        __size_of_sendCommand 002A  
                        _USBCheckStdRequest 48BE                               _eusartRxCount 0023  
                         _configDescriptor1 7949                                     i2l12352 3C36  
                                   i2l12354 3C68                                     _RS232cp 001C  
                           __CFG_WDTEN$SWON 000000                          __size_of_test_leds 0054  
                                ??i2_memset 0034                          __size_of_test_oled 0078  
               __end_of_USBCtrlTrfTxService 4EEE                        __size_of_moteHandler 01E0  
                       _USBStdSetCfgHandler 49FC                                     _OSCCON2 000FD2  
                                   _OSCTUNE 000F9B                      __size_of_oled_putUint8 005A  
                                   _SSP1ADD 000FC8                             ?_MOTEapp_SetADR 002E  
                   __end_of_CMP1_Initialize 3566                         ?_USBCheckStdRequest 002E  
                          ?_TMR2_StartTimer 002E                __size_of_USBStdGetDscHandler 0102  
                                   _UIEbits 000F64                                   ?_hexToStr 002E  
                                   _UIRbits 000F65                      test_switch@buttonCheck 00DC  
           moteRunningProcess@bufferReadPos 00F1                            ??_SPI_Initialize 00C8  
                                   _EndLine 350C                               _cdc_trf_state 0020  
                      DATAEE_WriteByte@bAdd 00C9                  __end_of_moteRunningProcess 7640  
                    ??_moteApp_clearBuffers 00C8                  ?_moteApp_add8bToDataBuffer 00CC  
                                   _pCDCDst 0070                                     _pCDCSrc 0073  
                     __size_of_getsUSBUSART 0090                                     __Hparam 0000  
                      ?_USBStdSetCfgHandler 002E                                   _CDCInitEP 3D9E  
                   ?_MOTEapp_TimerBasedTask 002E                                     __Lparam 0000  
                  moteRunningProcess@i_1410 00EC                  __size_of_USBEnableEndpoint 0036  
                       moteHandler@s2Button 01DC                            _Set_Page_Address 359E  
                                 ?_test_adc 002E                        ??_USBCheckStdRequest 004A  
              moteRunningProcess@sleepEvent 00E6                           _timerMinTickCount 0082  
             __size_of_USBCtrlTrfOutHandler 0052                 __size_of_moteJoiningProcess 051A  
                                   ___lbdiv 3A02                                     ___lbmod 37C0  
                                   ___lldiv 4200                            ??_USBDeviceTasks 004E  
                                   ___lwdiv 3C6C                           ??_USBStallHandler 002E  
                                   ___lwmod 3B5A                        __size_of_putUSBUSART 001C  
                                   __pcinit 3FA8                          getsUSBUSART@buffer 00CF  
                           __size_of_memset 002A                   __end_of_configDescriptor1 798C  
                                   __ramtop 0800                           hexToStr@character 00C8  
          __end_of_MOTEapp_getModemResponse 3D00                                     __ptext0 4FBC  
                                   __ptext1 3A70                                     __ptext2 4AA4  
                                   __ptext3 4362                                     __ptext4 3E44  
                                   __ptext5 3E98                                     __ptext6 4198  
                                   __ptext7 4CBA                                     __ptext8 5BDE  
                                   __ptext9 3D00                    __size_of_oled_setDisplay 0014  
                                   _inPipes 0009                 _USBDeferOUTDataStagePackets 0089  
                           __size_of_strcmp 0084                   moteRunningProcess@counter 00EF  
                          oled_setFont@font 00C8                                   _T1CONbits 000FCD  
                     _OSCILLATOR_Initialize 35DC                                ??_USBSuspend 0043  
                             _oled_clearRow 367E                                   _T2CONbits 000FBA  
                                _modemSleep 3626             moteApp_add8bToDataBuffer@number 00CD  
                                _oled_clear 35F2                    ??_PIN_MANAGER_Initialize 00C8  
              __end_of_TMRapp_ClearBitFlags 34AE                                _LastRS232Out 0019  
                           i2_USBDeviceInit 5164                            i2USBDeviceInit@i 0036  
                         __end_of_oled_init 3722                           ?_SPI_Exchange8bit 002E  
              __end_of_MOTEapp_handlerState 34C8                      ??_USBapp_getrxByteFlag 00C8  
                        __end_of_USB_CD_Ptr 7649                  __size_of_SYSTEM_Initialize 0020  
           __size_of_USBCtrlTrfSetupHandler 005E                                  ??_hexToStr 00C8  
                                   _strncmp 4130                        end_of_initialization 3FF8  
                              _getsUSBUSART 46FC               sendDataCommand@byteCount_1637 00CF  
                        ??_SPI_Exchange8bit 00C8                        SPI_Exchange8bit@data 00C8  
                        __end_of_USB_SD_Ptr 7647                         _pBDTEntryEP0OutNext 0017  
                                   memset@c 00CA                                     memset@n 00CC  
                                   memset@p 00CE                               __Lmediumconst 7640  
           _dummy_encapsulated_cmd_response 01D0                    ?_USBStdFeatureReqHandler 002E  
            __end_of_MOTEapp_TimerBasedTask 3534                           _EUSART_Initialize 38BA  
                                _rxByteFlag 002A                       ??_USBStdSetCfgHandler 0043  
                           ___lldiv@divisor 0032                        __size_of_test_switch 00AE  
                                ?_CDCInitEP 002E                             ___lldiv@counter 003A  
                         __end_of_test_leds 3E98                           __end_of_test_oled 43DA  
                        ?_EUSART_Initialize 002E                               _oled_putUint8 3EF0  
                        __end_of_USBSuspend 3660              ??_USBapp_CdcEmulatorInitialize 003A  
                   _USBCtrlEPAllowDataStage 466E                                   _RCSTAbits 000FAB  
                                ??_test_adc 00E4                          test_switch@timeout 00DA  
                                   postdec1 000FE5                                     postdec2 000FDD  
                                   postinc0 000FEE                                     postinc2 000FDE  
                      __end_of_oled_devInit 5314                    _USBCtrlEPServiceComplete 53F2  
                   moteApp_toggleLeds@state 00CD                                  _responseId 01C0  
                          ?_moteApp_delayms 00C8                               _randomPortNum 0097  
                  _MOTEapp_setResponseReady 1004                  _USBStatusStageEnabledFlag1 008B  
                _USBStatusStageEnabledFlag2 008C                         _USBapp_handlerState 34C8  
                       ??_EUSART_Initialize 00C8                          USBEnableEndpoint@p 0037  
                                 _PORTAbits 000F80                                   _PORTCbits 000F82  
                   oled_putUint8@start_page 00DB                              ?_oled_clearRow 002E  
                                _test_comms 3E98                        __end_of_oled_setFont 358A  
                        _Set_Column_Address 3660                        __end_of_oled_putChar 42EC  
                          ___lbmod@dividend 00C9                                   _TRISAbits 000F92  
                                 _TRISBbits 000F93                                   _TRISCbits 000F94  
                         ??_oled_displayOff 00CA                       __size_of_EUSART_Write 0034  
                        _BothEP0OutUOWNsSet 0086                               ?_test_powerup 002E  
                          ?_CMP1_Initialize 002E                   USBConfigureEndpoint@EPNum 0033  
                ?_USBCtrlEPAllowStatusStage 002E                    __end_of_DATAEE_WriteByte 3AE2  
                       ?_Set_Column_Address 002E              moteRunningProcess@counter_1556 00F0  
       USER_USB_CALLBACK_EVENT_HANDLER@size 003F                              _TMR2_ReadTimer 34E0  
                                 _USTATcopy 002D                           __size_of_CMP1_ISR 0004  
                      ?_USBapp_handlerState 002E                          _ADC_TempConversion 36DE  
                  oled_putString@start_page 00D8                                 ___lbmod@rem 00CB  
                 __end_of_EUSART_Initialize 38E6                __end_of_USBTransferOnePacket 49FC  
                               _CM2CON1bits 000F9A                                   _TXSTAbits 000FAC  
                           moteHandler@Traw 01DA                              ?_oled_putUint8 00DA  
                         putUSBUSART@length 00CA                         ?_ADC_TempConversion 002E  
                    _USBCtrlTrfSetupHandler 3F4A                        ??_Set_Column_Address 00CA  
                   ?i2_USBTransferOnePacket 002E                       __end_of_USBDeviceInit 5164  
                            _TMRapp_Handler 5314                              _USBapp_Handler 42EC  
                      __size_of_TMRapp_Tick 0006                ??_moteApp_add16bToDataBuffer 00D2  
                              _EUSART_Write 3998                       sendDataCommand@string 00C9  
                   __end_ofi2_USBDeviceInit 523C                           __size_of_TMR1_ISR 000C  
                __end_of_service_pushbutton 3D4C                              _ADC_Initialize 35C6  
               moteApp_clearBuffers@counter 00C8                     moteApp_GoToSleep@status 00D7  
                                 i2memset@c 0030                                   i2memset@n 0032  
                                 i2memset@p 0034                      ?_OSCILLATOR_Initialize 002E  
                            __end_of_memset 3864                           _USBBusIsSuspended 0087  
                  oled_writeCommand@command 00C9                                 ?_modemSleep 002E  
                            __end_of_strcmp 455E                                 ?_oled_clear 002E  
                       start_initialization 3FA8                        ??_ADC_TempConversion 00CF  
                   ?_USBStdGetStatusHandler 002E               USBCtrlTrfRxService@byteToRead 0040  
                            ??_test_powerup 00EA                    _MOTEapp_getModemResponse 3CB6  
           __size_of_PIN_MANAGER_Initialize 0046                           ??_oled_setDisplay 00CA  
                             ??_EUSART_Read 00C8                      __end_of_TMR2_ReadTimer 34E8  
                               _cdc_data_rx 000540                                 _cdc_data_tx 000500  
               __end_ofi2_EUSART_Initialize 38BA                           __size_ofi2_memset 002A  
                                 _OledFont0 7649                __end_of_USBConfigureEndpoint 466E  
           __end_of_USBStdFeatureReqHandler 5FB2                    __size_of_sendDataCommand 0094  
                     ??_USBapp_handlerState 00C8           __end_of_USBCtrlEPAllowStatusStage 4E2C  
                             _periodicState 00F9                    __end_of_USBCtrlEPService 4C04  
                     _MOTEapp_WriteDataRate 54D6        __end_of_USART_mySetLineCodingHandler 3E44  
     __size_of_USART_mySetLineCodingHandler 0054                _USART_mySetLineCodingHandler 3DF0  
                __end_of_EUSART_FlushBuffer 396A                         DATAEE_ReadByte@bAdd 00C8  
             __size_of_USBapp_setrxByteFlag 0006         __size_of_moteApp_add16bToDataBuffer 010A  
                 ??_USBCtrlEPAllowDataStage 002F                                 ??_CDCInitEP 003A  
                            USBDeviceInit@i 00D0                      _pBDTEntryEP0OutCurrent 0015  
                  __size_of_TMR1_Initialize 002C                     USBTransferOnePacket@dir 00C8  
                   USBTransferOnePacket@len 00CB                      __end_of_USBapp_Handler 4362  
                    __end_of_TMRapp_Handler 53F2              __end_ofi2_USBTransferOnePacket 48BE  
                      _TMRapp_ClearBitFlags 34AA                         _USBStdGetDscHandler 58B6  
                      _MOTEapp_handlerState 34C0                      __end_of_ADC_Initialize 35DC  
                               __pdataBANK0 00F5                                    ??_memset 00CE  
                           ??_oled_clearRow 00D5  MOTEapp_getModemResponse@terminatorReceived 00C9  
           MOTEapp_TimerBasedTask@timerTask 00C8                                    ??_strcmp 00CC  
                               ?_test_comms 002E                   oled_putString@station_dot 00D7  
                    _USBActiveConfiguration 002C              __end_of_USBStdGetStatusHandler 4458  
                          ??_MOTEapp_SetADR 00C8                 __end_of_EUSART_Transmit_ISR 3798  
                               __pbssCOMRAM 0001                  service_pushbutton@PB_Timer 0066  
                             __pcstackBANK0 00C8                               __pcstackBANK1 01D8  
              __size_of_USBCtrlTrfInHandler 00CE                    __size_of_TMR2_Initialize 0010  
                  __end_of_Set_Page_Address 35B2                             ?_TMR2_ReadTimer 002E  
                               _activeState 008D                        ?_USBStdGetDscHandler 002E  
                 ADC_TempConversion@tempRaw 00CF                  __end_of_EUSART_Receive_ISR 3770  
            moteRunningProcess@messageReady 00E5                                    ?_EndLine 002E  
                                 _adrStatus 008E                  __end_of_USBWakeFromSuspend 36DE  
                             ??_modemResync 00CD                  __size_of_EUSART_Initialize 002C  
                         __size_of_hexToStr 0026                             _USBStallHandler 3B1C  
                              _pBDTEntryOut 0060                         __end_of_EUSART_Read 3998  
                __end_of_USBCheckCDCRequest 45E6                             ??_oled_putUint8 00DC  
                      oled_putString@string 00D5                    __size_of_USBDeviceAttach 002C  
               ??_moteApp_add8bToDataBuffer 00CD                           _oled_writeCommand 34F4  
                     __size_of_oled_devInit 00D8                     oled_putChar@station_dot 00CB  
                       __size_of_modemSleep 001C                            ___lwdiv@dividend 00C8  
                    _PIN_MANAGER_Initialize 3BDC                         __size_of_oled_clear 0018  
                     ?_TMRapp_ClearBitFlags 002E                        EUSART_Read@readValue 00C8  
                           ?_TMRapp_Handler 002E                             ?_USBapp_Handler 002E  
                                 __pintcode 1008                          ?_oled_writeCommand 002E  
                             __pmediumconst 7640               moteJoiningProcess@switchEvent 00DA  
                     ?_MOTEapp_handlerState 002E                                   __ptext100 58B6  
                                 __ptext101 5DBE                                    ?___lbdiv 00C8  
                                 __ptext110 5AC2                                   __ptext102 3C22  
                                 __ptext111 4D70                                   __ptext103 3A38  
                                 __ptext120 3748                                   __ptext112 4EEE  
                                 __ptext104 3D9E                                   __ptext121 349A  
                                 __ptext113 4E2C                                   __ptext105 4820  
                                 __ptext122 0000                                   __ptext114 3DF0  
                                 __ptext106 39CC                                   __ptext115 388E  
                                 __ptext107 45E6                                   __ptext116 4200  
                                 __ptext108 455E                                   __ptext117 34B4  
                                 __ptext109 3D4C                                   __ptext118 34E8  
                                 __ptext119 3770                                    ?___lbmod 00C8  
                __end_of_moteApp_toggleLeds 4200                                    ?___lldiv 002E  
                                  ?___lwdiv 00C8                                    ?___lwmod 00C8  
                           ?_ADC_Initialize 002E                       __size_of_oled_setFont 0012  
                              _eusartRxHead 0024                               ??_sendCommand 00CB  
                              _eusartTxHead 0027                                _eusartRxTail 0025  
                              _eusartTxTail 0028                           __size_of_test_adc 00B6  
                     __size_of_oled_putChar 0076                          _moteRunningProcess 64CC  
              ??_INTERRUPT_InterruptManager 004F                            ?i2_USBDeviceInit 002E  
                    moteHandler@readMessage 01E0                         ??_oled_writeCommand 00C9  
                             ??_moteHandler 00F3                     _eusartTxBufferRemaining 0026  
                      _USBTransferOnePacket 495C                                moteHandler@i 01DE  
          moteApp_add16bToDataBuffer@number 00CF                    __size_of_TMR1_StartTimer 0004  
                    moteHandler@buttonPress 01DD                __size_of_MOTEapp_SetDataRate 0008  
                       ?_moteRunningProcess 00E4                __end_of_USBCtrlTrfOutHandler 3D9E  
                     ??_USBStdGetDscHandler 002E                                    _CMP1_ISR 349A  
                               _ep_data_out 006D                            ___lwdiv@quotient 00CD  
              __size_of_USBCtrlTrfRxService 011C                                   _secTicker 0099  
             USBConfigureEndpoint@direction 002E                    __size_of_DATAEE_ReadByte 0014  
                                  ?_strncmp 00C8                              __size_of_unhex 0028  
                              _oled_devInit 523C                      ?_MOTEapp_WriteDataRate 002E  
                            _eusartRxBuffer 0100                           _dataRateSelection 00F7  
                          _timerMsTickCount 0084                                   _oled_init 3700  
              __size_of_USBCtrlTrfTxService 00C2                              _eusartTxBuffer 0200  
                                  _LATAbits 000F89                                    _IOCCbits 000F87  
                 __end_of_oled_writeCommand 3500                                    _LATBbits 000F8A  
                                  _LATCbits 000F8B                  ??_USBCtrlEPServiceComplete 002F  
                ??_MOTEapp_setResponseReady 00C8                                    _PIE1bits 000F9D  
                                  _IPR3bits 000FA5                                    _PIE2bits 000FA0  
                                  _PIE3bits 000FA3                         __size_of_test_comms 0058  
                  __size_of_TMR2_StartTimer 0004                                _oled_setFont 3578  
                                 _moteState 00F8                           ??_sendDataCommand 00CD  
                             _operationType 0095                        ??_moteRunningProcess 00E7  
                __end_of_moteJoiningProcess 64CC         __size_of_INTERRUPT_InterruptManager 00A2  
                              _oled_putChar 4276                                    i2u420_40 4E9E  
                                  i2u420_47 4E94                                    i2u500_48 5BBE  
                                  i2u422_40 4EDA                                    i2u422_47 4ED0  
                                  _PIR1bits 000F9E                                    _PIR2bits 000FA1  
             __size_of_moteApp_clearBuffers 0044                                    i2u445_40 5922  
                                  _PIR3bits 000FA4                                    i2u445_47 5918  
                                  i2u446_40 5950                                    i2u446_47 5946  
                                  i2u448_40 599A                                    i2u448_47 5990  
                                  i2u566_48 4FA2                   USBCtrlEPService@setup_cnt 004D  
                 __size_of_SPI_Exchange8bit 0010                         __end_of_modemResync 40CA  
                                  _RCONbits 000FD0                        __end_of_test_powerup 3AA8  
                   __size_of_oled_putUint16 00F4                               ??_putUSBUSART 00CB  
                          __CFG_WDTPS$32768 000000                                    _UEP0bits 000F6A  
                _USBDeferINDataStagePackets 0088                                    _SSP1CON1 000FC6  
        __end_of_moteApp_add16bToDataBuffer 5AC2                  _moteApp_add16bToDataBuffer 59B8  
               __size_of_USBCheckStdRequest 009E                                    _TMR1_ISR 34E8  
                   __size_of_oled_putString 0066                                    _SSP1STAT 000FC7  
                                  _UCONbits 000F60                             _oled_displayOff 3566  
                                 _test_leds 3E44                                    _VREFCON0 000F7D  
            moteRunningProcess@selectButton 00E4                        _USBConfigureEndpoint 45E6  
                                 _test_oled 4362            __size_of_USBStdFeatureReqHandler 01F4  
                         ??_TMR1_Initialize 00C8                                  _ADCON0bits 000FC2  
                   Set_Page_Address@address 00CA                       ?_USBTransferOnePacket 00C8  
                    ADC_TempConversion@temp 00D0                   _moteApp_add8bToDataBuffer 4006  
                   __size_of_oled_writeData 000C                               ?_CDCTxService 002E  
                  moteHandler@gotoNextState 01D9                                _RemoteWakeup 001D  
                       __end_of_sendCommand 388E                                    i2_memset 3810  
                         __CFG_CFGPLLEN$OFF 000000                       DATAEE_WriteByte@bData 00C8  
                        _RS232_Out_Data_Rdy 001B                     __end_of_USBStallHandler 3B5A  
                       __end_of_moteHandler 5DBE                                 _EUSART_Read 396A  
                         _moteApp_GoToSleep 4458                                   copy_data0 3FEC  
               ??_USBCtrlEPAllowStatusStage 002E                 __end_of_USBStdSetCfgHandler 4AA4  
                         ?_DATAEE_WriteByte 00C8               __size_of_USBapp_getrxByteFlag 0004  
                        ?_moteApp_GoToSleep 002E                                  ?_oled_init 002E  
                         ??_TMR2_Initialize 00C8                               ??_test_switch 00DA  
                          __size_of_EndLine 000C                          ??_DATAEE_WriteByte 00C9  
                        __end_of_device_dsc 7A06                                  _EECON1bits 000FA6  
                   ?_USBCtrlTrfSetupHandler 002E               USBapp_CdcEmulatorInitialize@i 003A  
                    ??_TMRapp_ClearBitFlags 00C8                     USBStdGetStatusHandler@p 002E  
                                  __Hrparam 0000                         ??_moteApp_GoToSleep 00D7  
                                  __Lrparam 0000                      USBTransferOnePacket@ep 00CC  
                    ??_MOTEapp_handlerState 00C8                           _ADC_GetConversion 3AE2  
                        __CFG_BOREN$SBORDIS 000000                                    _SetupPkt 000430  
                   __size_of_SPI_Initialize 000E                     ??_OSCILLATOR_Initialize 00C8  
                     ?_USBConfigureEndpoint 002E                          ?_ADC_GetConversion 00C8  
                         ??_USBDeviceAttach 00C8                                  ?_test_leds 002E  
                          __size_of___lbdiv 0036                                  ?_test_oled 002E  
                          __size_of___lbmod 0028                  ??_MOTEapp_getModemResponse 00C9  
            moteJoiningProcess@readDataRate 00DC                                _selectedFont 00F5  
                          __size_of___lldiv 0076            moteApp_clearBuffers@counter_1700 00C9  
          moteApp_clearBuffers@counter_1701 00CA                             _oled_setDisplay 35B2  
                          __size_of___lwdiv 004A                            __size_of___lwmod 003E  
                 MOTEapp_handlerState@state 00C8                                  _ANSELAbits 000F5B  
                       __end_of_putUSBUSART 3626                                 _line_coding 00BC  
                                _ANSELCbits 000F5D                              ??_CDCTxService 00CF  
                              ??_modemSleep 00CD                         ??_ADC_GetConversion 00CA  
                              ??_oled_clear 00D7                    modemResync@escapeCounter 00CD  
                  __size_of_moteApp_delayms 0028                   __end_of_moteApp_GoToSleep 44DA  
                   __size_of_USBDeviceTasks 00FE                             ___lwdiv@divisor 00CA  
                                  _appTimer 008F                             ___lwdiv@counter 00CC  
                                  __ptext10 64CC                                    __ptext11 37E8  
                                  __ptext20 59B8                                    __ptext12 478C  
                                  __ptext21 4458                                    __ptext13 3722  
                                  __ptext30 393E                                    __ptext22 3700  
                                  __ptext14 3EF0                                    __ptext31 34E0  
                                  __ptext23 3578                                    __ptext15 55C4  
                                  __ptext40 350C                                    __ptext32 36DE  
                                  __ptext24 35B2                                    __ptext16 3B98  
                                  __ptext41 3798                                    __ptext33 3C6C  
                                  __ptext25 523C                                    __ptext17 4006  
                                  __ptext50 42EC                                    __ptext42 34D8  
                                  __ptext34 3AE2                                    __ptext26 3566  
                                  __ptext18 37C0                                    __ptext51 40CA  
                                  __ptext43 34D0                                    __ptext35 5FB2  
                                  __ptext27 3626                                    __ptext19 3A02  
                                  __ptext60 4C04                                    __ptext52 35F2  
                                  __ptext44 3AA8                                    __ptext36 4130  
                                  __ptext28 4066                                    __ptext61 360A  
                                  __ptext53 367E                                    __ptext45 5314  
                                  __ptext37 44DA                                    __ptext29 3CB6  
                                  __ptext70 383A                                    __ptext62 46FC  
                                  __ptext54 4276                                    __ptext46 3B5A  
                                  __ptext38 54D6                                    __ptext71 3912  
                                  __ptext63 34A6                                    __ptext55 3500  
                                  __ptext47 34AA                                    __ptext39 3864  
                                  __ptext80 38BA                                    __ptext72 369C  
                                  __ptext64 1004                                    __ptext56 359E  
                                  __ptext48 3526                                    __ptext81 3554  
                                  __ptext73 3534                                    __ptext65 3998  
                                  __ptext57 3660                                    __ptext49 34C8  
                                  __ptext90 3642                                    __ptext82 35C6  
                                  __ptext74 34A2                                    __ptext66 396A  
                                  __ptext58 34F4                                    __ptext91 3B1C  
                                  __ptext83 34C0                                    __ptext75 38E6  
                                  __ptext67 57B6                                    __ptext59 3544  
                                  __ptext92 4B52                                    __ptext84 358A  
                                  __ptext76 349E                                    __ptext68 495C  
                                  __ptext93 3F4A                                    __ptext77 3518  
                                  __ptext69 508E                                    __ptext94 53F2  
                                  __ptext86 34BA                                    __ptext78 3BDC  
                                  __ptext95 466E                                    __ptext87 56B8  
                                  __ptext79 35DC                                    __ptext96 48BE  
                                  __ptext88 5164                                    __ptext97 49FC  
                                  __ptext89 36BC                                    __ptext98 3810  
                                  __ptext99 43DA        __end_of_USBapp_CdcEmulatorInitialize 3A70  
     __size_of_USBapp_CdcEmulatorInitialize 0038                _USBapp_CdcEmulatorInitialize 3A38  
                              _SSP1CON1bits 000FC6                                    _hexToStr 3722  
                        _service_pushbutton 3D00                           ??_TMR1_StartTimer 00C8  
               DATAEE_WriteByte@GIEBitValue 00CA                                 _OSCCON2bits 000FD2  
                          __size_of_strncmp 0068                                 _modemResync 4066  
            __end_of_USBCtrlTrfSetupHandler 3FA8                               __size_of_main 00D2  
                         ?_USBCtrlEPService 002E                  __size_of_oled_writeCommand 000C  
                                strncmp@len 00CC                         ?_service_pushbutton 002E  
                         ??_DATAEE_ReadByte 00C8                   __end_of_ADC_GetConversion 3B1C  
                  __size_of_CMP1_Initialize 0012                     __end_of_oled_displayOff 3578  
                        ??_USBCtrlEPService 004B                         _USBCtrlTrfInHandler 4EEE  
                             ??_TMRapp_Tick 002E                          __end_of_modemSleep 3642  
                          _dataRatePosition 0093                          __end_of_oled_clear 360A  
                       __end_of_test_switch 4B52                                    _outPipes 0001  
                                  _test_adc 4CBA                        _USBCtrlTrfOutHandler 3D4C  
                                  int$flags 005B                                    _usbState 009C  
                 _USBCtrlEPAllowStatusStage 4D70                                   test_adc@L 00E4  
                                 test_adc@T 00E8                 __size_of_Set_Column_Address 001E  
                         ??_TMR2_StartTimer 00C8          __end_of_INTERRUPT_InterruptManager 10AA  
                _INTERRUPT_InterruptManager 1008                                _SSP1STATbits 000FC7  
                               _sendCommand 3864                      ??_USBTransferOnePacket 00CC  
                        oled_clearRow@index 00D6                          _EUSART_FlushBuffer 393E  
                              ??_test_comms 00DA                __end_of_USBapp_setrxByteFlag 34C0  
                               _moteHandler 5BDE                            ??_TMR2_ReadTimer 00C8  
                      ??_service_pushbutton 00C8                   _USBDeferStatusStagePacket 001E  
                  CDCTxService@byte_to_send 00D2                                  _INTCONbits 000FF2  
               __end_of_USBapp_handlerState 34D0                        ?_USBCtrlTrfInHandler 002E  
                       ?_EUSART_FlushBuffer 002E                 __size_of_ADC_TempConversion 0022  
             USBCtrlTrfTxService@byteToSend 002E                                    memset@p1 00C8  
                          ?_USBStallHandler 002E                    USBStdFeatureReqHandler@p 0048  
                         ?_Set_Page_Address 002E                    ??_MOTEapp_TimerBasedTask 00C8  
                              _responseData 00B4               ?_USBapp_CdcEmulatorInitialize 002E  
                                  intlevel2 0000                                 ??_oled_init 00D7  
                        ??_Set_Page_Address 00CA                      __size_of_USBDeviceInit 00D6  
   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3C6C    __size_of_USER_USB_CALLBACK_EVENT_HANDLER 004A  
         ??_USER_USB_CALLBACK_EVENT_HANDLER 0041            ?_USER_USB_CALLBACK_EVENT_HANDLER 003B  
           _USER_USB_CALLBACK_EVENT_HANDLER 3C22              moteJoiningProcess@messageReady 00DD  
                          ___lwmod@dividend 00C8                i2USBTransferOnePacket@handle 0033  
                          ___lldiv@dividend 002E                     ?_PIN_MANAGER_Initialize 002E  
                          ??_USBapp_Handler 00DA                            ??_TMRapp_Handler 00CD  
                     __size_of_test_powerup 0038                        moteHandler@gotoSleep 01D8  
              __size_ofi2_EUSART_Initialize 002C                                   strncmp@s1 00C8  
                                 strncmp@s2 00CA                            ??_ADC_Initialize 00C8  
                        __end_of_test_comms 3EF0                        ??_EUSART_FlushBuffer 00C8  
                   __end_of_oled_setDisplay 35C6                         _MOTEapp_SetDataRate 34D8  
                            _oled_putUint16 55C4                            _SPI_Exchange8bit 3544  
                i2USBTransferOnePacket@data 002F                                 _sleepTicker 009A  
                    ??_USBConfigureEndpoint 002F                       ?_USBCtrlTrfOutHandler 002E  
                            _oled_putString 40CA                                 _putUSBUSART 360A  
                        _EUSART_Receive_ISR 3748                           oled_clearRow@page 00D5  
                      __CFG_CPUDIV$NOCLKDIV 000000                         _USBCtrlTrfRxService 5AC2  
                        _USBWakeFromSuspend 36BC                                 ??_test_leds 00DA  
                             _powerOnStatus 0096                                 ??_test_oled 00DA  
                   _USBStdFeatureReqHandler 5DBE     __end_of_USBapp_DeviceCdcEmulatorHandler 4CBA  
  __size_of_USBapp_DeviceCdcEmulatorHandler 00B6            ?_USBapp_DeviceCdcEmulatorHandler 002E  
         ??_USBapp_DeviceCdcEmulatorHandler 00D5             _USBapp_DeviceCdcEmulatorHandler 4C04  
                        _USBCheckCDCRequest 455E                         _USBCtrlTrfTxService 4E2C  
                       __end_of_TMRapp_Tick 34BA                           _sleepTxOccurances 009B  
                     __end_of_oled_clearRow 369C                                 _temperature 007E  
                       ?_EUSART_Receive_ISR 002E                              _oled_writeData 3500  
                       ?_USBWakeFromSuspend 002E                                    strcmp@s1 00C8  
                                  strcmp@t0 00CE                                    strcmp@s2 00CA  
                                  strcmp@t1 00D0                                    strcmp@t2 00CF  
                          ___lldiv@quotient 0036                             ___lwmod@divisor 00CA  
                     ??_USBCtrlTrfInHandler 003F                       _USBAlternateInterface 00C6  
                           ___lwmod@counter 00CC                        ?_MOTEapp_SetDataRate 002E  
                       ?_USBCheckCDCRequest 002E                  __size_of_moteApp_GoToSleep 0082  
                 i2USBTransferOnePacket@dir 002E                          _moteApp_toggleLeds 4198  
                 i2USBTransferOnePacket@len 0031                     ??_MOTEapp_WriteDataRate 00CD  
                       USBEnableEndpoint@ep 0039                             _endpoint_number 0022  
                                _WDTCONbits 000FD1                                _test_powerup 3A70  
                           _sendDataCommand 478C                        ?_USBCtrlTrfRxService 002E  
                             ?_getsUSBUSART 00CF                    oled_putUint8@station_dot 00DA  
                        __CFG_FOSC$INTOSCIO 000000                          EUSART_Write@txData 00C8  
              __size_of_EUSART_Transmit_ISR 0028              __end_of_PIN_MANAGER_Initialize 3C22  
                  ?_USBCtrlEPAllowDataStage 002E          __size_of_moteApp_add8bToDataBuffer 0060  
                      ?_USBCtrlTrfTxService 002E                           ??_moteApp_delayms 00CA  
                       ?_moteApp_toggleLeds 002E                _USBStatusStageTimeoutCounter 001F  
                               _test_switch 4AA4                        ??_EUSART_Receive_ISR 002E  
                      ??_USBWakeFromSuspend 0043                      __end_of_oled_putUint16 56B8  
                USBTransferOnePacket@handle 00CD                  __size_of_ADC_GetConversion 003A  
                      __end_of_CDCTxService 58B6                             _TMR1_Initialize 38E6  
         moteJoiningProcess@joiningComplete 00DB                            ?_oled_displayOff 002E  
                     __end_of_oled_putUint8 3F4A                      __end_of_oled_putString 4130  
                      ??_USBCheckCDCRequest 002E                                  _USB_CD_Ptr 7647  
