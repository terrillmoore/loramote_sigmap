

Microchip Technology PIC18 PRO Macro Assembler V1.36 build -262312587 
                                                                                               Sat Apr 23 01:50:26 2016

Microchip Technology Omniscient Code Generator v1.36 (PRO mode) build 201601150325
     1                           	processor	18LF25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1
   119                           	psect	text103,global,reloc=2,class=CODE,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,delta=1
   122                           	psect	text106,global,reloc=2,class=CODE,delta=1
   123                           	psect	text107,global,reloc=2,class=CODE,delta=1
   124                           	psect	text108,global,reloc=2,class=CODE,delta=1
   125                           	psect	text109,global,reloc=2,class=CODE,delta=1
   126                           	psect	text110,global,reloc=2,class=CODE,delta=1
   127                           	psect	text111,global,reloc=2,class=CODE,delta=1
   128                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   129                           	psect	text112,global,reloc=2,class=CODE,delta=1
   130                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   131                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   132                           	dabs	1,0x400,48,_BDT
   133                           	dabs	1,0x500,64,_cdc_data_tx
   134                           	dabs	1,0x438,8,_CtrlTrfData
   135                           	dabs	1,0x430,8,_SetupPkt
   136                           	dabs	1,0x540,64,_cdc_data_rx
   137  0000                     
   138                           	psect	idataBANK0
   139  004A21                     __pidataBANK0:
   140                           	opt stack 0
   141                           
   142                           ;initializer for _selectedFont
   143  004A21  2D                 	db	low _OledFont0
   144  004A22  78                 	db	high _OledFont0
   145                           
   146                           ;initializer for _moteState
   147  004A23  01                 	db	1
   148                           
   149                           	psect	mediumconst
   150  007824                     __pmediumconst:
   151                           	opt stack 0
   152  007824  00                 	db	0
   153  007825                     _USB_SD_Ptr:
   154                           	opt stack 0
   155  007825  EA                 	db	low _sd000
   156  007826  7B                 	db	high _sd000
   157  007827  70                 	db	low _sd001
   158  007828  7B                 	db	high _sd001
   159  007829  A4                 	db	low _sd002
   160  00782A  7B                 	db	high _sd002
   161  00782B                     __end_of_USB_SD_Ptr:
   162                           	opt stack 0
   163  00782B                     _USB_CD_Ptr:
   164                           	opt stack 0
   165  00782B  2D                 	db	low _configDescriptor1
   166  00782C  7B                 	db	high _configDescriptor1
   167  00782D                     __end_of_USB_CD_Ptr:
   168                           	opt stack 0
   169  00782D                     _OledFont0:
   170                           	opt stack 0
   171  00782D  00                 	db	0
   172  00782E  00                 	db	0
   173  00782F  00                 	db	0
   174  007830  00                 	db	0
   175  007831  00                 	db	0
   176  007832  00                 	db	0
   177  007833  00                 	db	0
   178  007834  00                 	db	0
   179  007835  00                 	db	0
   180  007836  00                 	db	0
   181  007837  00                 	db	0
   182  007838  5F                 	db	95
   183  007839  00                 	db	0
   184  00783A  00                 	db	0
   185  00783B  00                 	db	0
   186  00783C  00                 	db	0
   187  00783D  00                 	db	0
   188  00783E  00                 	db	0
   189  00783F  03                 	db	3
   190  007840  00                 	db	0
   191  007841  03                 	db	3
   192  007842  00                 	db	0
   193  007843  00                 	db	0
   194  007844  00                 	db	0
   195  007845  64                 	db	100
   196  007846  3C                 	db	60
   197  007847  26                 	db	38
   198  007848  64                 	db	100
   199  007849  3C                 	db	60
   200  00784A  26                 	db	38
   201  00784B  24                 	db	36
   202  00784C  00                 	db	0
   203  00784D  26                 	db	38
   204  00784E  49                 	db	73
   205  00784F  49                 	db	73
   206  007850  7F                 	db	127
   207  007851  49                 	db	73
   208  007852  49                 	db	73
   209  007853  32                 	db	50
   210  007854  00                 	db	0
   211  007855  42                 	db	66
   212  007856  25                 	db	37
   213  007857  12                 	db	18
   214  007858  08                 	db	8
   215  007859  24                 	db	36
   216  00785A  52                 	db	82
   217  00785B  21                 	db	33
   218  00785C  00                 	db	0
   219  00785D  20                 	db	32
   220  00785E  50                 	db	80
   221  00785F  4E                 	db	78
   222  007860  55                 	db	85
   223  007861  22                 	db	34
   224  007862  58                 	db	88
   225  007863  28                 	db	40
   226  007864  00                 	db	0
   227  007865  00                 	db	0
   228  007866  00                 	db	0
   229  007867  00                 	db	0
   230  007868  03                 	db	3
   231  007869  00                 	db	0
   232  00786A  00                 	db	0
   233  00786B  00                 	db	0
   234  00786C  00                 	db	0
   235  00786D  00                 	db	0
   236  00786E  00                 	db	0
   237  00786F  1C                 	db	28
   238  007870  22                 	db	34
   239  007871  41                 	db	65
   240  007872  00                 	db	0
   241  007873  00                 	db	0
   242  007874  00                 	db	0
   243  007875  00                 	db	0
   244  007876  00                 	db	0
   245  007877  00                 	db	0
   246  007878  41                 	db	65
   247  007879  22                 	db	34
   248  00787A  1C                 	db	28
   249  00787B  00                 	db	0
   250  00787C  00                 	db	0
   251  00787D  00                 	db	0
   252  00787E  15                 	db	21
   253  00787F  15                 	db	21
   254  007880  0E                 	db	14
   255  007881  0E                 	db	14
   256  007882  15                 	db	21
   257  007883  15                 	db	21
   258  007884  00                 	db	0
   259  007885  00                 	db	0
   260  007886  08                 	db	8
   261  007887  08                 	db	8
   262  007888  3E                 	db	62
   263  007889  08                 	db	8
   264  00788A  08                 	db	8
   265  00788B  00                 	db	0
   266  00788C  00                 	db	0
   267  00788D  00                 	db	0
   268  00788E  00                 	db	0
   269  00788F  00                 	db	0
   270  007890  50                 	db	80
   271  007891  30                 	db	48
   272  007892  00                 	db	0
   273  007893  00                 	db	0
   274  007894  00                 	db	0
   275  007895  00                 	db	0
   276  007896  08                 	db	8
   277  007897  08                 	db	8
   278  007898  08                 	db	8
   279  007899  08                 	db	8
   280  00789A  08                 	db	8
   281  00789B  00                 	db	0
   282  00789C  00                 	db	0
   283  00789D  00                 	db	0
   284  00789E  00                 	db	0
   285  00789F  00                 	db	0
   286  0078A0  40                 	db	64
   287  0078A1  00                 	db	0
   288  0078A2  00                 	db	0
   289  0078A3  00                 	db	0
   290  0078A4  00                 	db	0
   291  0078A5  40                 	db	64
   292  0078A6  20                 	db	32
   293  0078A7  10                 	db	16
   294  0078A8  08                 	db	8
   295  0078A9  04                 	db	4
   296  0078AA  02                 	db	2
   297  0078AB  01                 	db	1
   298  0078AC  00                 	db	0
   299  0078AD  00                 	db	0
   300  0078AE  3E                 	db	62
   301  0078AF  41                 	db	65
   302  0078B0  41                 	db	65
   303  0078B1  41                 	db	65
   304  0078B2  3E                 	db	62
   305  0078B3  00                 	db	0
   306  0078B4  00                 	db	0
   307  0078B5  00                 	db	0
   308  0078B6  00                 	db	0
   309  0078B7  41                 	db	65
   310  0078B8  7F                 	db	127
   311  0078B9  40                 	db	64
   312  0078BA  00                 	db	0
   313  0078BB  00                 	db	0
   314  0078BC  00                 	db	0
   315  0078BD  00                 	db	0
   316  0078BE  42                 	db	66
   317  0078BF  61                 	db	97
   318  0078C0  51                 	db	81
   319  0078C1  49                 	db	73
   320  0078C2  6E                 	db	110
   321  0078C3  00                 	db	0
   322  0078C4  00                 	db	0
   323  0078C5  00                 	db	0
   324  0078C6  22                 	db	34
   325  0078C7  41                 	db	65
   326  0078C8  49                 	db	73
   327  0078C9  49                 	db	73
   328  0078CA  36                 	db	54
   329  0078CB  00                 	db	0
   330  0078CC  00                 	db	0
   331  0078CD  00                 	db	0
   332  0078CE  18                 	db	24
   333  0078CF  14                 	db	20
   334  0078D0  12                 	db	18
   335  0078D1  7F                 	db	127
   336  0078D2  10                 	db	16
   337  0078D3  00                 	db	0
   338  0078D4  00                 	db	0
   339  0078D5  00                 	db	0
   340  0078D6  27                 	db	39
   341  0078D7  49                 	db	73
   342  0078D8  49                 	db	73
   343  0078D9  49                 	db	73
   344  0078DA  71                 	db	113
   345  0078DB  00                 	db	0
   346  0078DC  00                 	db	0
   347  0078DD  00                 	db	0
   348  0078DE  3C                 	db	60
   349  0078DF  4A                 	db	74
   350  0078E0  49                 	db	73
   351  0078E1  48                 	db	72
   352  0078E2  70                 	db	112
   353  0078E3  00                 	db	0
   354  0078E4  00                 	db	0
   355  0078E5  00                 	db	0
   356  0078E6  43                 	db	67
   357  0078E7  21                 	db	33
   358  0078E8  11                 	db	17
   359  0078E9  0D                 	db	13
   360  0078EA  03                 	db	3
   361  0078EB  00                 	db	0
   362  0078EC  00                 	db	0
   363  0078ED  00                 	db	0
   364  0078EE  36                 	db	54
   365  0078EF  49                 	db	73
   366  0078F0  49                 	db	73
   367  0078F1  49                 	db	73
   368  0078F2  36                 	db	54
   369  0078F3  00                 	db	0
   370  0078F4  00                 	db	0
   371  0078F5  00                 	db	0
   372  0078F6  06                 	db	6
   373  0078F7  09                 	db	9
   374  0078F8  49                 	db	73
   375  0078F9  29                 	db	41
   376  0078FA  1E                 	db	30
   377  0078FB  00                 	db	0
   378  0078FC  00                 	db	0
   379  0078FD  00                 	db	0
   380  0078FE  00                 	db	0
   381  0078FF  00                 	db	0
   382  007900  12                 	db	18
   383  007901  00                 	db	0
   384  007902  00                 	db	0
   385  007903  00                 	db	0
   386  007904  00                 	db	0
   387  007905  00                 	db	0
   388  007906  00                 	db	0
   389  007907  00                 	db	0
   390  007908  52                 	db	82
   391  007909  30                 	db	48
   392  00790A  00                 	db	0
   393  00790B  00                 	db	0
   394  00790C  00                 	db	0
   395  00790D  00                 	db	0
   396  00790E  00                 	db	0
   397  00790F  08                 	db	8
   398  007910  14                 	db	20
   399  007911  14                 	db	20
   400  007912  22                 	db	34
   401  007913  00                 	db	0
   402  007914  00                 	db	0
   403  007915  00                 	db	0
   404  007916  14                 	db	20
   405  007917  14                 	db	20
   406  007918  14                 	db	20
   407  007919  14                 	db	20
   408  00791A  14                 	db	20
   409  00791B  14                 	db	20
   410  00791C  00                 	db	0
   411  00791D  00                 	db	0
   412  00791E  00                 	db	0
   413  00791F  22                 	db	34
   414  007920  14                 	db	20
   415  007921  14                 	db	20
   416  007922  08                 	db	8
   417  007923  00                 	db	0
   418  007924  00                 	db	0
   419  007925  00                 	db	0
   420  007926  02                 	db	2
   421  007927  01                 	db	1
   422  007928  59                 	db	89
   423  007929  05                 	db	5
   424  00792A  02                 	db	2
   425  00792B  00                 	db	0
   426  00792C  00                 	db	0
   427  00792D  3E                 	db	62
   428  00792E  41                 	db	65
   429  00792F  5D                 	db	93
   430  007930  55                 	db	85
   431  007931  4D                 	db	77
   432  007932  51                 	db	81
   433  007933  2E                 	db	46
   434  007934  00                 	db	0
   435  007935  40                 	db	64
   436  007936  7C                 	db	124
   437  007937  4A                 	db	74
   438  007938  09                 	db	9
   439  007939  4A                 	db	74
   440  00793A  7C                 	db	124
   441  00793B  40                 	db	64
   442  00793C  00                 	db	0
   443  00793D  41                 	db	65
   444  00793E  7F                 	db	127
   445  00793F  49                 	db	73
   446  007940  49                 	db	73
   447  007941  49                 	db	73
   448  007942  49                 	db	73
   449  007943  36                 	db	54
   450  007944  00                 	db	0
   451  007945  1C                 	db	28
   452  007946  22                 	db	34
   453  007947  41                 	db	65
   454  007948  41                 	db	65
   455  007949  41                 	db	65
   456  00794A  41                 	db	65
   457  00794B  22                 	db	34
   458  00794C  00                 	db	0
   459  00794D  41                 	db	65
   460  00794E  7F                 	db	127
   461  00794F  41                 	db	65
   462  007950  41                 	db	65
   463  007951  41                 	db	65
   464  007952  22                 	db	34
   465  007953  1C                 	db	28
   466  007954  00                 	db	0
   467  007955  41                 	db	65
   468  007956  7F                 	db	127
   469  007957  49                 	db	73
   470  007958  49                 	db	73
   471  007959  5D                 	db	93
   472  00795A  41                 	db	65
   473  00795B  63                 	db	99
   474  00795C  00                 	db	0
   475  00795D  41                 	db	65
   476  00795E  7F                 	db	127
   477  00795F  49                 	db	73
   478  007960  09                 	db	9
   479  007961  1D                 	db	29
   480  007962  01                 	db	1
   481  007963  03                 	db	3
   482  007964  00                 	db	0
   483  007965  1C                 	db	28
   484  007966  22                 	db	34
   485  007967  41                 	db	65
   486  007968  49                 	db	73
   487  007969  49                 	db	73
   488  00796A  3A                 	db	58
   489  00796B  08                 	db	8
   490  00796C  00                 	db	0
   491  00796D  41                 	db	65
   492  00796E  7F                 	db	127
   493  00796F  08                 	db	8
   494  007970  08                 	db	8
   495  007971  08                 	db	8
   496  007972  7F                 	db	127
   497  007973  41                 	db	65
   498  007974  00                 	db	0
   499  007975  00                 	db	0
   500  007976  41                 	db	65
   501  007977  41                 	db	65
   502  007978  7F                 	db	127
   503  007979  41                 	db	65
   504  00797A  41                 	db	65
   505  00797B  00                 	db	0
   506  00797C  00                 	db	0
   507  00797D  30                 	db	48
   508  00797E  40                 	db	64
   509  00797F  41                 	db	65
   510  007980  41                 	db	65
   511  007981  3F                 	db	63
   512  007982  01                 	db	1
   513  007983  01                 	db	1
   514  007984  00                 	db	0
   515  007985  41                 	db	65
   516  007986  7F                 	db	127
   517  007987  08                 	db	8
   518  007988  0C                 	db	12
   519  007989  12                 	db	18
   520  00798A  61                 	db	97
   521  00798B  41                 	db	65
   522  00798C  00                 	db	0
   523  00798D  41                 	db	65
   524  00798E  7F                 	db	127
   525  00798F  41                 	db	65
   526  007990  40                 	db	64
   527  007991  40                 	db	64
   528  007992  40                 	db	64
   529  007993  60                 	db	96
   530  007994  00                 	db	0
   531  007995  41                 	db	65
   532  007996  7F                 	db	127
   533  007997  42                 	db	66
   534  007998  0C                 	db	12
   535  007999  42                 	db	66
   536  00799A  7F                 	db	127
   537  00799B  41                 	db	65
   538  00799C  00                 	db	0
   539  00799D  41                 	db	65
   540  00799E  7F                 	db	127
   541  00799F  42                 	db	66
   542  0079A0  0C                 	db	12
   543  0079A1  11                 	db	17
   544  0079A2  7F                 	db	127
   545  0079A3  01                 	db	1
   546  0079A4  00                 	db	0
   547  0079A5  1C                 	db	28
   548  0079A6  22                 	db	34
   549  0079A7  41                 	db	65
   550  0079A8  41                 	db	65
   551  0079A9  41                 	db	65
   552  0079AA  22                 	db	34
   553  0079AB  1C                 	db	28
   554  0079AC  00                 	db	0
   555  0079AD  41                 	db	65
   556  0079AE  7F                 	db	127
   557  0079AF  49                 	db	73
   558  0079B0  09                 	db	9
   559  0079B1  09                 	db	9
   560  0079B2  09                 	db	9
   561  0079B3  06                 	db	6
   562  0079B4  00                 	db	0
   563  0079B5  0C                 	db	12
   564  0079B6  12                 	db	18
   565  0079B7  21                 	db	33
   566  0079B8  21                 	db	33
   567  0079B9  61                 	db	97
   568  0079BA  52                 	db	82
   569  0079BB  4C                 	db	76
   570  0079BC  00                 	db	0
   571  0079BD  41                 	db	65
   572  0079BE  7F                 	db	127
   573  0079BF  09                 	db	9
   574  0079C0  09                 	db	9
   575  0079C1  19                 	db	25
   576  0079C2  69                 	db	105
   577  0079C3  46                 	db	70
   578  0079C4  00                 	db	0
   579  0079C5  66                 	db	102
   580  0079C6  49                 	db	73
   581  0079C7  49                 	db	73
   582  0079C8  49                 	db	73
   583  0079C9  49                 	db	73
   584  0079CA  49                 	db	73
   585  0079CB  33                 	db	51
   586  0079CC  00                 	db	0
   587  0079CD  03                 	db	3
   588  0079CE  01                 	db	1
   589  0079CF  41                 	db	65
   590  0079D0  7F                 	db	127
   591  0079D1  41                 	db	65
   592  0079D2  01                 	db	1
   593  0079D3  03                 	db	3
   594  0079D4  00                 	db	0
   595  0079D5  01                 	db	1
   596  0079D6  3F                 	db	63
   597  0079D7  41                 	db	65
   598  0079D8  40                 	db	64
   599  0079D9  41                 	db	65
   600  0079DA  3F                 	db	63
   601  0079DB  01                 	db	1
   602  0079DC  00                 	db	0
   603  0079DD  01                 	db	1
   604  0079DE  0F                 	db	15
   605  0079DF  31                 	db	49
   606  0079E0  40                 	db	64
   607  0079E1  31                 	db	49
   608  0079E2  0F                 	db	15
   609  0079E3  01                 	db	1
   610  0079E4  00                 	db	0
   611  0079E5  01                 	db	1
   612  0079E6  1F                 	db	31
   613  0079E7  61                 	db	97
   614  0079E8  14                 	db	20
   615  0079E9  61                 	db	97
   616  0079EA  1F                 	db	31
   617  0079EB  01                 	db	1
   618  0079EC  00                 	db	0
   619  0079ED  41                 	db	65
   620  0079EE  41                 	db	65
   621  0079EF  36                 	db	54
   622  0079F0  08                 	db	8
   623  0079F1  36                 	db	54
   624  0079F2  41                 	db	65
   625  0079F3  41                 	db	65
   626  0079F4  00                 	db	0
   627  0079F5  01                 	db	1
   628  0079F6  03                 	db	3
   629  0079F7  44                 	db	68
   630  0079F8  78                 	db	120
   631  0079F9  44                 	db	68
   632  0079FA  03                 	db	3
   633  0079FB  01                 	db	1
   634  0079FC  00                 	db	0
   635  0079FD  43                 	db	67
   636  0079FE  61                 	db	97
   637  0079FF  51                 	db	81
   638  007A00  49                 	db	73
   639  007A01  45                 	db	69
   640  007A02  43                 	db	67
   641  007A03  61                 	db	97
   642  007A04  00                 	db	0
   643  007A05  00                 	db	0
   644  007A06  00                 	db	0
   645  007A07  7F                 	db	127
   646  007A08  41                 	db	65
   647  007A09  41                 	db	65
   648  007A0A  00                 	db	0
   649  007A0B  00                 	db	0
   650  007A0C  00                 	db	0
   651  007A0D  01                 	db	1
   652  007A0E  02                 	db	2
   653  007A0F  04                 	db	4
   654  007A10  08                 	db	8
   655  007A11  10                 	db	16
   656  007A12  20                 	db	32
   657  007A13  40                 	db	64
   658  007A14  00                 	db	0
   659  007A15  00                 	db	0
   660  007A16  00                 	db	0
   661  007A17  41                 	db	65
   662  007A18  41                 	db	65
   663  007A19  7F                 	db	127
   664  007A1A  00                 	db	0
   665  007A1B  00                 	db	0
   666  007A1C  00                 	db	0
   667  007A1D  00                 	db	0
   668  007A1E  04                 	db	4
   669  007A1F  02                 	db	2
   670  007A20  01                 	db	1
   671  007A21  01                 	db	1
   672  007A22  02                 	db	2
   673  007A23  04                 	db	4
   674  007A24  00                 	db	0
   675  007A25  00                 	db	0
   676  007A26  40                 	db	64
   677  007A27  40                 	db	64
   678  007A28  40                 	db	64
   679  007A29  40                 	db	64
   680  007A2A  40                 	db	64
   681  007A2B  40                 	db	64
   682  007A2C  00                 	db	0
   683  007A2D  00                 	db	0
   684  007A2E  01                 	db	1
   685  007A2F  02                 	db	2
   686  007A30  00                 	db	0
   687  007A31  00                 	db	0
   688  007A32  00                 	db	0
   689  007A33  00                 	db	0
   690  007A34  00                 	db	0
   691  007A35  00                 	db	0
   692  007A36  34                 	db	52
   693  007A37  4A                 	db	74
   694  007A38  4A                 	db	74
   695  007A39  4A                 	db	74
   696  007A3A  3C                 	db	60
   697  007A3B  40                 	db	64
   698  007A3C  00                 	db	0
   699  007A3D  00                 	db	0
   700  007A3E  41                 	db	65
   701  007A3F  3F                 	db	63
   702  007A40  48                 	db	72
   703  007A41  48                 	db	72
   704  007A42  48                 	db	72
   705  007A43  30                 	db	48
   706  007A44  00                 	db	0
   707  007A45  00                 	db	0
   708  007A46  3C                 	db	60
   709  007A47  42                 	db	66
   710  007A48  42                 	db	66
   711  007A49  42                 	db	66
   712  007A4A  24                 	db	36
   713  007A4B  00                 	db	0
   714  007A4C  00                 	db	0
   715  007A4D  00                 	db	0
   716  007A4E  30                 	db	48
   717  007A4F  48                 	db	72
   718  007A50  48                 	db	72
   719  007A51  49                 	db	73
   720  007A52  3F                 	db	63
   721  007A53  40                 	db	64
   722  007A54  00                 	db	0
   723  007A55  00                 	db	0
   724  007A56  3C                 	db	60
   725  007A57  4A                 	db	74
   726  007A58  4A                 	db	74
   727  007A59  4A                 	db	74
   728  007A5A  2C                 	db	44
   729  007A5B  00                 	db	0
   730  007A5C  00                 	db	0
   731  007A5D  00                 	db	0
   732  007A5E  00                 	db	0
   733  007A5F  48                 	db	72
   734  007A60  7E                 	db	126
   735  007A61  49                 	db	73
   736  007A62  09                 	db	9
   737  007A63  00                 	db	0
   738  007A64  00                 	db	0
   739  007A65  00                 	db	0
   740  007A66  26                 	db	38
   741  007A67  49                 	db	73
   742  007A68  49                 	db	73
   743  007A69  49                 	db	73
   744  007A6A  3F                 	db	63
   745  007A6B  01                 	db	1
   746  007A6C  00                 	db	0
   747  007A6D  41                 	db	65
   748  007A6E  7F                 	db	127
   749  007A6F  48                 	db	72
   750  007A70  04                 	db	4
   751  007A71  44                 	db	68
   752  007A72  78                 	db	120
   753  007A73  40                 	db	64
   754  007A74  00                 	db	0
   755  007A75  00                 	db	0
   756  007A76  00                 	db	0
   757  007A77  44                 	db	68
   758  007A78  7D                 	db	125
   759  007A79  40                 	db	64
   760  007A7A  00                 	db	0
   761  007A7B  00                 	db	0
   762  007A7C  00                 	db	0
   763  007A7D  00                 	db	0
   764  007A7E  00                 	db	0
   765  007A7F  40                 	db	64
   766  007A80  44                 	db	68
   767  007A81  3D                 	db	61
   768  007A82  00                 	db	0
   769  007A83  00                 	db	0
   770  007A84  00                 	db	0
   771  007A85  41                 	db	65
   772  007A86  7F                 	db	127
   773  007A87  10                 	db	16
   774  007A88  18                 	db	24
   775  007A89  24                 	db	36
   776  007A8A  42                 	db	66
   777  007A8B  42                 	db	66
   778  007A8C  00                 	db	0
   779  007A8D  00                 	db	0
   780  007A8E  40                 	db	64
   781  007A8F  41                 	db	65
   782  007A90  7F                 	db	127
   783  007A91  40                 	db	64
   784  007A92  40                 	db	64
   785  007A93  00                 	db	0
   786  007A94  00                 	db	0
   787  007A95  42                 	db	66
   788  007A96  7E                 	db	126
   789  007A97  02                 	db	2
   790  007A98  7C                 	db	124
   791  007A99  02                 	db	2
   792  007A9A  7E                 	db	126
   793  007A9B  40                 	db	64
   794  007A9C  00                 	db	0
   795  007A9D  42                 	db	66
   796  007A9E  7E                 	db	126
   797  007A9F  44                 	db	68
   798  007AA0  02                 	db	2
   799  007AA1  42                 	db	66
   800  007AA2  7C                 	db	124
   801  007AA3  40                 	db	64
   802  007AA4  00                 	db	0
   803  007AA5  00                 	db	0
   804  007AA6  3C                 	db	60
   805  007AA7  42                 	db	66
   806  007AA8  42                 	db	66
   807  007AA9  42                 	db	66
   808  007AAA  3C                 	db	60
   809  007AAB  00                 	db	0
   810  007AAC  00                 	db	0
   811  007AAD  00                 	db	0
   812  007AAE  41                 	db	65
   813  007AAF  7F                 	db	127
   814  007AB0  49                 	db	73
   815  007AB1  09                 	db	9
   816  007AB2  09                 	db	9
   817  007AB3  06                 	db	6
   818  007AB4  00                 	db	0
   819  007AB5  00                 	db	0
   820  007AB6  06                 	db	6
   821  007AB7  09                 	db	9
   822  007AB8  09                 	db	9
   823  007AB9  49                 	db	73
   824  007ABA  7F                 	db	127
   825  007ABB  41                 	db	65
   826  007ABC  00                 	db	0
   827  007ABD  00                 	db	0
   828  007ABE  42                 	db	66
   829  007ABF  7E                 	db	126
   830  007AC0  44                 	db	68
   831  007AC1  02                 	db	2
   832  007AC2  02                 	db	2
   833  007AC3  04                 	db	4
   834  007AC4  00                 	db	0
   835  007AC5  00                 	db	0
   836  007AC6  64                 	db	100
   837  007AC7  4A                 	db	74
   838  007AC8  4A                 	db	74
   839  007AC9  4A                 	db	74
   840  007ACA  36                 	db	54
   841  007ACB  00                 	db	0
   842  007ACC  00                 	db	0
   843  007ACD  00                 	db	0
   844  007ACE  04                 	db	4
   845  007ACF  3F                 	db	63
   846  007AD0  44                 	db	68
   847  007AD1  44                 	db	68
   848  007AD2  20                 	db	32
   849  007AD3  00                 	db	0
   850  007AD4  00                 	db	0
   851  007AD5  00                 	db	0
   852  007AD6  02                 	db	2
   853  007AD7  3E                 	db	62
   854  007AD8  40                 	db	64
   855  007AD9  40                 	db	64
   856  007ADA  22                 	db	34
   857  007ADB  7E                 	db	126
   858  007ADC  40                 	db	64
   859  007ADD  02                 	db	2
   860  007ADE  0E                 	db	14
   861  007ADF  32                 	db	50
   862  007AE0  40                 	db	64
   863  007AE1  32                 	db	50
   864  007AE2  0E                 	db	14
   865  007AE3  02                 	db	2
   866  007AE4  00                 	db	0
   867  007AE5  02                 	db	2
   868  007AE6  1E                 	db	30
   869  007AE7  62                 	db	98
   870  007AE8  18                 	db	24
   871  007AE9  62                 	db	98
   872  007AEA  1E                 	db	30
   873  007AEB  02                 	db	2
   874  007AEC  00                 	db	0
   875  007AED  42                 	db	66
   876  007AEE  62                 	db	98
   877  007AEF  14                 	db	20
   878  007AF0  08                 	db	8
   879  007AF1  14                 	db	20
   880  007AF2  62                 	db	98
   881  007AF3  42                 	db	66
   882  007AF4  00                 	db	0
   883  007AF5  01                 	db	1
   884  007AF6  43                 	db	67
   885  007AF7  45                 	db	69
   886  007AF8  38                 	db	56
   887  007AF9  05                 	db	5
   888  007AFA  03                 	db	3
   889  007AFB  01                 	db	1
   890  007AFC  00                 	db	0
   891  007AFD  00                 	db	0
   892  007AFE  46                 	db	70
   893  007AFF  62                 	db	98
   894  007B00  52                 	db	82
   895  007B01  4A                 	db	74
   896  007B02  46                 	db	70
   897  007B03  62                 	db	98
   898  007B04  00                 	db	0
   899  007B05  00                 	db	0
   900  007B06  00                 	db	0
   901  007B07  08                 	db	8
   902  007B08  36                 	db	54
   903  007B09  41                 	db	65
   904  007B0A  00                 	db	0
   905  007B0B  00                 	db	0
   906  007B0C  00                 	db	0
   907  007B0D  00                 	db	0
   908  007B0E  00                 	db	0
   909  007B0F  00                 	db	0
   910  007B10  7F                 	db	127
   911  007B11  00                 	db	0
   912  007B12  00                 	db	0
   913  007B13  00                 	db	0
   914  007B14  00                 	db	0
   915  007B15  00                 	db	0
   916  007B16  00                 	db	0
   917  007B17  00                 	db	0
   918  007B18  41                 	db	65
   919  007B19  36                 	db	54
   920  007B1A  08                 	db	8
   921  007B1B  00                 	db	0
   922  007B1C  00                 	db	0
   923  007B1D  00                 	db	0
   924  007B1E  18                 	db	24
   925  007B1F  08                 	db	8
   926  007B20  08                 	db	8
   927  007B21  10                 	db	16
   928  007B22  10                 	db	16
   929  007B23  18                 	db	24
   930  007B24  00                 	db	0
   931  007B25  AA                 	db	170
   932  007B26  55                 	db	85
   933  007B27  AA                 	db	170
   934  007B28  55                 	db	85
   935  007B29  AA                 	db	170
   936  007B2A  55                 	db	85
   937  007B2B  AA                 	db	170
   938  007B2C  55                 	db	85
   939  007B2D                     __end_of_OledFont0:
   940                           	opt stack 0
   941  007B2D                     _configDescriptor1:
   942                           	opt stack 0
   943  007B2D  09                 	db	9
   944  007B2E  02                 	db	2
   945  007B2F  43                 	db	67
   946  007B30  00                 	db	0
   947  007B31  02                 	db	2
   948  007B32  01                 	db	1
   949  007B33  00                 	db	0
   950  007B34  C0                 	db	192
   951  007B35  32                 	db	50
   952  007B36  09                 	db	9
   953  007B37  04                 	db	4
   954  007B38  00                 	db	0
   955  007B39  00                 	db	0
   956  007B3A  01                 	db	1
   957  007B3B  02                 	db	2
   958  007B3C  02                 	db	2
   959  007B3D  01                 	db	1
   960  007B3E  00                 	db	0
   961  007B3F  05                 	db	5
   962  007B40  24                 	db	36
   963  007B41  00                 	db	0
   964  007B42  10                 	db	16
   965  007B43  01                 	db	1
   966  007B44  04                 	db	4
   967  007B45  24                 	db	36
   968  007B46  02                 	db	2
   969  007B47  02                 	db	2
   970  007B48  05                 	db	5
   971  007B49  24                 	db	36
   972  007B4A  06                 	db	6
   973  007B4B  00                 	db	0
   974  007B4C  01                 	db	1
   975  007B4D  05                 	db	5
   976  007B4E  24                 	db	36
   977  007B4F  01                 	db	1
   978  007B50  00                 	db	0
   979  007B51  01                 	db	1
   980  007B52  07                 	db	7
   981  007B53  05                 	db	5
   982  007B54  81                 	db	129
   983  007B55  03                 	db	3
   984  007B56  08                 	db	8
   985  007B57  00                 	db	0
   986  007B58  02                 	db	2
   987  007B59  09                 	db	9
   988  007B5A  04                 	db	4
   989  007B5B  01                 	db	1
   990  007B5C  00                 	db	0
   991  007B5D  02                 	db	2
   992  007B5E  0A                 	db	10
   993  007B5F  00                 	db	0
   994  007B60  00                 	db	0
   995  007B61  00                 	db	0
   996  007B62  07                 	db	7
   997  007B63  05                 	db	5
   998  007B64  02                 	db	2
   999  007B65  02                 	db	2
  1000  007B66  40                 	db	64
  1001  007B67  00                 	db	0
  1002  007B68  00                 	db	0
  1003  007B69  07                 	db	7
  1004  007B6A  05                 	db	5
  1005  007B6B  82                 	db	130
  1006  007B6C  02                 	db	2
  1007  007B6D  40                 	db	64
  1008  007B6E  00                 	db	0
  1009  007B6F  00                 	db	0
  1010  007B70                     __end_of_configDescriptor1:
  1011                           	opt stack 0
  1012  007B70                     _sd001:
  1013                           	opt stack 0
  1014  007B70  34                 	db	52
  1015  007B71  03                 	db	3
  1016  007B72  004D               	dw	77
  1017  007B74  0069               	dw	105
  1018  007B76  0063               	dw	99
  1019  007B78  0072               	dw	114
  1020  007B7A  006F               	dw	111
  1021  007B7C  0063               	dw	99
  1022  007B7E  0068               	dw	104
  1023  007B80  0069               	dw	105
  1024  007B82  0070               	dw	112
  1025  007B84  0020               	dw	32
  1026  007B86  0054               	dw	84
  1027  007B88  0065               	dw	101
  1028  007B8A  0063               	dw	99
  1029  007B8C  0068               	dw	104
  1030  007B8E  006E               	dw	110
  1031  007B90  006F               	dw	111
  1032  007B92  006C               	dw	108
  1033  007B94  006F               	dw	111
  1034  007B96  0067               	dw	103
  1035  007B98  0079               	dw	121
  1036  007B9A  0020               	dw	32
  1037  007B9C  0049               	dw	73
  1038  007B9E  006E               	dw	110
  1039  007BA0  0063               	dw	99
  1040  007BA2  002E               	dw	46
  1041  007BA4                     __end_of_sd001:
  1042                           	opt stack 0
  1043  007BA4                     _sd002:
  1044                           	opt stack 0
  1045  007BA4  34                 	db	52
  1046  007BA5  03                 	db	3
  1047  007BA6  0043               	dw	67
  1048  007BA8  0044               	dw	68
  1049  007BAA  0043               	dw	67
  1050  007BAC  0020               	dw	32
  1051  007BAE  0052               	dw	82
  1052  007BB0  0053               	dw	83
  1053  007BB2  002D               	dw	45
  1054  007BB4  0032               	dw	50
  1055  007BB6  0033               	dw	51
  1056  007BB8  0032               	dw	50
  1057  007BBA  0020               	dw	32
  1058  007BBC  0045               	dw	69
  1059  007BBE  006D               	dw	109
  1060  007BC0  0075               	dw	117
  1061  007BC2  006C               	dw	108
  1062  007BC4  0061               	dw	97
  1063  007BC6  0074               	dw	116
  1064  007BC8  0069               	dw	105
  1065  007BCA  006F               	dw	111
  1066  007BCC  006E               	dw	110
  1067  007BCE  0020               	dw	32
  1068  007BD0  0044               	dw	68
  1069  007BD2  0065               	dw	101
  1070  007BD4  006D               	dw	109
  1071  007BD6  006F               	dw	111
  1072  007BD8                     __end_of_sd002:
  1073                           	opt stack 0
  1074  007BD8                     _device_dsc:
  1075                           	opt stack 0
  1076  007BD8  12                 	db	18
  1077  007BD9  01                 	db	1
  1078  007BDA  0200               	dw	512
  1079  007BDC  02                 	db	2
  1080  007BDD  00                 	db	0
  1081  007BDE  00                 	db	0
  1082  007BDF  08                 	db	8
  1083  007BE0  04D8               	dw	1240
  1084  007BE2  000A               	dw	10
  1085  007BE4  0100               	dw	256
  1086  007BE6  01                 	db	1
  1087  007BE7  02                 	db	2
  1088  007BE8  00                 	db	0
  1089  007BE9  01                 	db	1
  1090  007BEA                     __end_of_device_dsc:
  1091                           	opt stack 0
  1092  007BEA                     _sd000:
  1093                           	opt stack 0
  1094  007BEA  04                 	db	4
  1095  007BEB  03                 	db	3
  1096  007BEC  0409               	dw	1033
  1097  007BEE                     __end_of_sd000:
  1098                           	opt stack 0
  1099  0000                     _ANSELAbits	set	3931
  1100  0000                     _ANSELCbits	set	3933
  1101  0000                     _ACTCON	set	4021
  1102  0000                     _ADCON0	set	4034
  1103  0000                     _ADCON0bits	set	4034
  1104  0000                     _ADCON1	set	4033
  1105  0000                     _ADCON2	set	4032
  1106  0000                     _ADRESH	set	4036
  1107  0000                     _ADRESL	set	4035
  1108  0000                     _BAUDCON	set	4024
  1109  0000                     _CM1CON0	set	3992
  1110  0000                     _CM2CON1bits	set	3994
  1111  0000                     _EEADR	set	4009
  1112  0000                     _EECON1bits	set	4006
  1113  0000                     _EECON2	set	4007
  1114  0000                     _EEDATA	set	4008
  1115  0000                     _INTCONbits	set	4082
  1116  0000                     _IOCCbits	set	3975
  1117  0000                     _IPR3bits	set	4005
  1118  0000                     _LATAbits	set	3977
  1119  0000                     _LATBbits	set	3978
  1120  0000                     _LATCbits	set	3979
  1121  0000                     _OSCCON	set	4051
  1122  0000                     _OSCCON2	set	4050
  1123  0000                     _OSCCON2bits	set	4050
  1124  0000                     _OSCTUNE	set	3995
  1125  0000                     _PIE1bits	set	3997
  1126  0000                     _PIE2bits	set	4000
  1127  0000                     _PIE3bits	set	4003
  1128  0000                     _PIR1bits	set	3998
  1129  0000                     _PIR2bits	set	4001
  1130  0000                     _PIR3bits	set	4004
  1131  0000                     _PORTAbits	set	3968
  1132  0000                     _PORTBbits	set	3969
  1133  0000                     _PORTCbits	set	3970
  1134  0000                     _PR2	set	4027
  1135  0000                     _RCONbits	set	4048
  1136  0000                     _RCREG	set	4014
  1137  0000                     _RCSTA	set	4011
  1138  0000                     _RCSTAbits	set	4011
  1139  0000                     _SPBRG	set	4015
  1140  0000                     _SPBRGH	set	4016
  1141  0000                     _SSP1ADD	set	4040
  1142  0000                     _SSP1CON1	set	4038
  1143  0000                     _SSP1CON1bits	set	4038
  1144  0000                     _SSP1STAT	set	4039
  1145  0000                     _SSP1STATbits	set	4039
  1146  0000                     _SSPBUF	set	4041
  1147  0000                     _T1CON	set	4045
  1148  0000                     _T1CONbits	set	4045
  1149  0000                     _T1GCON	set	4044
  1150  0000                     _T2CON	set	4026
  1151  0000                     _T2CONbits	set	4026
  1152  0000                     _TMR1H	set	4047
  1153  0000                     _TMR1L	set	4046
  1154  0000                     _TMR2	set	4028
  1155  0000                     _TRISAbits	set	3986
  1156  0000                     _TRISBbits	set	3987
  1157  0000                     _TRISCbits	set	3988
  1158  0000                     _TXREG	set	4013
  1159  0000                     _TXSTA	set	4012
  1160  0000                     _TXSTAbits	set	4012
  1161  0000                     _UADDR	set	3939
  1162  0000                     _UCFG	set	3938
  1163  0000                     _UCON	set	3936
  1164  0000                     _UCONbits	set	3936
  1165  0000                     _UEIE	set	3942
  1166  0000                     _UEIR	set	3943
  1167  0000                     _UEP0bits	set	3946
  1168  0000                     _UIE	set	3940
  1169  0000                     _UIEbits	set	3940
  1170  0000                     _UIR	set	3941
  1171  0000                     _UIRbits	set	3941
  1172  0000                     _USTAT	set	3937
  1173  0000                     _VREFCON0	set	3965
  1174  0000                     _UEP0	set	3946
  1175  0000                     _UEP1	set	3947
  1176  0000                     _CKE	set	32318
  1177  0000                     _CKP	set	32308
  1178  0000                     _GIE	set	32663
  1179  0000                     _PEIE	set	32662
  1180  007BEE                     STR_96:
  1181  007BEE  73                 	db	115	;'s'
  1182  007BEF  79                 	db	121	;'y'
  1183  007BF0  73                 	db	115	;'s'
  1184  007BF1  20                 	db	32
  1185  007BF2  73                 	db	115	;'s'
  1186  007BF3  65                 	db	101	;'e'
  1187  007BF4  74                 	db	116	;'t'
  1188  007BF5  20                 	db	32
  1189  007BF6  70                 	db	112	;'p'
  1190  007BF7  69                 	db	105	;'i'
  1191  007BF8  6E                 	db	110	;'n'
  1192  007BF9  64                 	db	100	;'d'
  1193  007BFA  69                 	db	105	;'i'
  1194  007BFB  67                 	db	103	;'g'
  1195  007BFC  20                 	db	32
  1196  007BFD  47                 	db	71	;'G'
  1197  007BFE  50                 	db	80	;'P'
  1198  007BFF  49                 	db	73	;'I'
  1199  007C00  4F                 	db	79	;'O'
  1200  007C01  31                 	db	49	;'1'
  1201  007C02  30                 	db	48	;'0'
  1202  007C03  20                 	db	32
  1203  007C04  30                 	db	48	;'0'
  1204  007C05  0D                 	db	13
  1205  007C06  0A                 	db	10
  1206  007C07  00                 	db	0
  1207  007C08  73                 	db	115	;'s'
  1208  007C09  79                 	db	121	;'y'
  1209  007C0A  73                 	db	115	;'s'
  1210  007C0B  20                 	db	32
  1211  007C0C  73                 	db	115	;'s'
  1212  007C0D  65                 	db	101	;'e'
  1213  007C0E  74                 	db	116	;'t'
  1214  007C0F  20                 	db	32
  1215  007C10  70                 	db	112	;'p'
  1216  007C11  69                 	db	105	;'i'
  1217  007C12  6E                 	db	110	;'n'
  1218  007C13  64                 	db	100	;'d'
  1219  007C14  69                 	db	105	;'i'
  1220  007C15  67                 	db	103	;'g'
  1221  007C16  20                 	db	32
  1222  007C17  47                 	db	71	;'G'
  1223  007C18  50                 	db	80	;'P'
  1224  007C19  49                 	db	73	;'I'
  1225  007C1A  4F                 	db	79	;'O'
  1226  007C1B  31                 	db	49	;'1'
  1227  007C1C  31                 	db	49	;'1'
  1228  007C1D  20                 	db	32
  1229  007C1E  30                 	db	48	;'0'
  1230  007C1F  0D                 	db	13
  1231  007C20  0A                 	db	10
  1232  007C21  00                 	db	0
  1233  007C22  73                 	db	115	;'s'
  1234  007C23  79                 	db	121	;'y'
  1235  007C24  73                 	db	115	;'s'
  1236  007C25  20                 	db	32
  1237  007C26  73                 	db	115	;'s'
  1238  007C27  65                 	db	101	;'e'
  1239  007C28  74                 	db	116	;'t'
  1240  007C29  20                 	db	32
  1241  007C2A  70                 	db	112	;'p'
  1242  007C2B  69                 	db	105	;'i'
  1243  007C2C  6E                 	db	110	;'n'
  1244  007C2D  64                 	db	100	;'d'
  1245  007C2E  69                 	db	105	;'i'
  1246  007C2F  67                 	db	103	;'g'
  1247  007C30  20                 	db	32
  1248  007C31  47                 	db	71	;'G'
  1249  007C32  50                 	db	80	;'P'
  1250  007C33  49                 	db	73	;'I'
  1251  007C34  4F                 	db	79	;'O'
  1252  007C35  31                 	db	49	;'1'
  1253  007C36  30                 	db	48	;'0'
  1254  007C37  20                 	db	32
  1255  007C38  31                 	db	49	;'1'
  1256  007C39  0D                 	db	13
  1257  007C3A  0A                 	db	10
  1258  007C3B  00                 	db	0
  1259  007C3C  73                 	db	115	;'s'
  1260  007C3D  79                 	db	121	;'y'
  1261  007C3E  73                 	db	115	;'s'
  1262  007C3F  20                 	db	32
  1263  007C40  73                 	db	115	;'s'
  1264  007C41  65                 	db	101	;'e'
  1265  007C42  74                 	db	116	;'t'
  1266  007C43  20                 	db	32
  1267  007C44  70                 	db	112	;'p'
  1268  007C45  69                 	db	105	;'i'
  1269  007C46  6E                 	db	110	;'n'
  1270  007C47  64                 	db	100	;'d'
  1271  007C48  69                 	db	105	;'i'
  1272  007C49  67                 	db	103	;'g'
  1273  007C4A  20                 	db	32
  1274  007C4B  47                 	db	71	;'G'
  1275  007C4C  50                 	db	80	;'P'
  1276  007C4D  49                 	db	73	;'I'
  1277  007C4E  4F                 	db	79	;'O'
  1278  007C4F  31                 	db	49	;'1'
  1279  007C50  31                 	db	49	;'1'
  1280  007C51  20                 	db	32
  1281  007C52  31                 	db	49	;'1'
  1282  007C53  0D                 	db	13
  1283  007C54  0A                 	db	10
  1284  007C55  00                 	db	0
  1285  007C56                     STR_48:
  1286  007C56  72                 	db	114	;'r'
  1287  007C57  61                 	db	97	;'a'
  1288  007C58  64                 	db	100	;'d'
  1289  007C59  69                 	db	105	;'i'
  1290  007C5A  6F                 	db	111	;'o'
  1291  007C5B  20                 	db	32
  1292  007C5C  73                 	db	115	;'s'
  1293  007C5D  65                 	db	101	;'e'
  1294  007C5E  74                 	db	116	;'t'
  1295  007C5F  20                 	db	32
  1296  007C60  66                 	db	102	;'f'
  1297  007C61  64                 	db	100	;'d'
  1298  007C62  65                 	db	101	;'e'
  1299  007C63  76                 	db	118	;'v'
  1300  007C64  20                 	db	32
  1301  007C65  35                 	db	53	;'5'
  1302  007C66  30                 	db	48	;'0'
  1303  007C67  30                 	db	48	;'0'
  1304  007C68  30                 	db	48	;'0'
  1305  007C69  00                 	db	0
  1306  007C6A                     STR_45:
  1307  007C6A  72                 	db	114	;'r'
  1308  007C6B  61                 	db	97	;'a'
  1309  007C6C  64                 	db	100	;'d'
  1310  007C6D  69                 	db	105	;'i'
  1311  007C6E  6F                 	db	111	;'o'
  1312  007C6F  20                 	db	32
  1313  007C70  73                 	db	115	;'s'
  1314  007C71  65                 	db	101	;'e'
  1315  007C72  74                 	db	116	;'t'
  1316  007C73  20                 	db	32
  1317  007C74  61                 	db	97	;'a'
  1318  007C75  66                 	db	102	;'f'
  1319  007C76  63                 	db	99	;'c'
  1320  007C77  62                 	db	98	;'b'
  1321  007C78  77                 	db	119	;'w'
  1322  007C79  20                 	db	32
  1323  007C7A  31                 	db	49	;'1'
  1324  007C7B  32                 	db	50	;'2'
  1325  007C7C  35                 	db	53	;'5'
  1326  007C7D  00                 	db	0
  1327  007C7E                     STR_22:
  1328  007C7E  73                 	db	115	;'s'
  1329  007C7F  79                 	db	121	;'y'
  1330  007C80  73                 	db	115	;'s'
  1331  007C81  20                 	db	32
  1332  007C82  73                 	db	115	;'s'
  1333  007C83  6C                 	db	108	;'l'
  1334  007C84  65                 	db	101	;'e'
  1335  007C85  65                 	db	101	;'e'
  1336  007C86  70                 	db	112	;'p'
  1337  007C87  20                 	db	32
  1338  007C88  39                 	db	57	;'9'
  1339  007C89  39                 	db	57	;'9'
  1340  007C8A  39                 	db	57	;'9'
  1341  007C8B  39                 	db	57	;'9'
  1342  007C8C  39                 	db	57	;'9'
  1343  007C8D  39                 	db	57	;'9'
  1344  007C8E  39                 	db	57	;'9'
  1345  007C8F  39                 	db	57	;'9'
  1346  007C90  39                 	db	57	;'9'
  1347  007C91  00                 	db	0
  1348  007C92                     STR_36:
  1349  007C92  72                 	db	114	;'r'
  1350  007C93  61                 	db	97	;'a'
  1351  007C94  64                 	db	100	;'d'
  1352  007C95  69                 	db	105	;'i'
  1353  007C96  6F                 	db	111	;'o'
  1354  007C97  20                 	db	32
  1355  007C98  73                 	db	115	;'s'
  1356  007C99  65                 	db	101	;'e'
  1357  007C9A  74                 	db	116	;'t'
  1358  007C9B  20                 	db	32
  1359  007C9C  6D                 	db	109	;'m'
  1360  007C9D  6F                 	db	111	;'o'
  1361  007C9E  64                 	db	100	;'d'
  1362  007C9F  20                 	db	32
  1363  007CA0  6C                 	db	108	;'l'
  1364  007CA1  6F                 	db	111	;'o'
  1365  007CA2  72                 	db	114	;'r'
  1366  007CA3  61                 	db	97	;'a'
  1367  007CA4  00                 	db	0
  1368  007CA5                     STR_63:
  1369  007CA5  72                 	db	114	;'r'
  1370  007CA6  61                 	db	97	;'a'
  1371  007CA7  64                 	db	100	;'d'
  1372  007CA8  69                 	db	105	;'i'
  1373  007CA9  6F                 	db	111	;'o'
  1374  007CAA  20                 	db	32
  1375  007CAB  73                 	db	115	;'s'
  1376  007CAC  65                 	db	101	;'e'
  1377  007CAD  74                 	db	116	;'t'
  1378  007CAE  20                 	db	32
  1379  007CAF  73                 	db	115	;'s'
  1380  007CB0  79                 	db	121	;'y'
  1381  007CB1  6E                 	db	110	;'n'
  1382  007CB2  63                 	db	99	;'c'
  1383  007CB3  20                 	db	32
  1384  007CB4  31                 	db	49	;'1'
  1385  007CB5  32                 	db	50	;'2'
  1386  007CB6  00                 	db	0
  1387  007CB7                     STR_42:
  1388  007CB7  72                 	db	114	;'r'
  1389  007CB8  61                 	db	97	;'a'
  1390  007CB9  64                 	db	100	;'d'
  1391  007CBA  69                 	db	105	;'i'
  1392  007CBB  6F                 	db	111	;'o'
  1393  007CBC  20                 	db	32
  1394  007CBD  73                 	db	115	;'s'
  1395  007CBE  65                 	db	101	;'e'
  1396  007CBF  74                 	db	116	;'t'
  1397  007CC0  20                 	db	32
  1398  007CC1  73                 	db	115	;'s'
  1399  007CC2  66                 	db	102	;'f'
  1400  007CC3  20                 	db	32
  1401  007CC4  73                 	db	115	;'s'
  1402  007CC5  66                 	db	102	;'f'
  1403  007CC6  31                 	db	49	;'1'
  1404  007CC7  32                 	db	50	;'2'
  1405  007CC8  00                 	db	0
  1406  007CC9                     STR_51:
  1407  007CC9  72                 	db	114	;'r'
  1408  007CCA  61                 	db	97	;'a'
  1409  007CCB  64                 	db	100	;'d'
  1410  007CCC  69                 	db	105	;'i'
  1411  007CCD  6F                 	db	111	;'o'
  1412  007CCE  20                 	db	32
  1413  007CCF  73                 	db	115	;'s'
  1414  007CD0  65                 	db	101	;'e'
  1415  007CD1  74                 	db	116	;'t'
  1416  007CD2  20                 	db	32
  1417  007CD3  70                 	db	112	;'p'
  1418  007CD4  72                 	db	114	;'r'
  1419  007CD5  6C                 	db	108	;'l'
  1420  007CD6  65                 	db	101	;'e'
  1421  007CD7  6E                 	db	110	;'n'
  1422  007CD8  20                 	db	32
  1423  007CD9  38                 	db	56	;'8'
  1424  007CDA  00                 	db	0
  1425  007CDB                     STR_28:
  1426  007CDB  20                 	db	32
  1427  007CDC  28                 	db	40
  1428  007CDD  53                 	db	83	;'S'
  1429  007CDE  31                 	db	49	;'1'
  1430  007CDF  29                 	db	41
  1431  007CE0  20                 	db	32
  1432  007CE1  20                 	db	32
  1433  007CE2  20                 	db	32
  1434  007CE3  20                 	db	32
  1435  007CE4  20                 	db	32
  1436  007CE5  20                 	db	32
  1437  007CE6  28                 	db	40
  1438  007CE7  53                 	db	83	;'S'
  1439  007CE8  32                 	db	50	;'2'
  1440  007CE9  29                 	db	41
  1441  007CEA  20                 	db	32
  1442  007CEB  00                 	db	0
  1443  007CEC                     STR_39:
  1444  007CEC  72                 	db	114	;'r'
  1445  007CED  61                 	db	97	;'a'
  1446  007CEE  64                 	db	100	;'d'
  1447  007CEF  69                 	db	105	;'i'
  1448  007CF0  6F                 	db	111	;'o'
  1449  007CF1  20                 	db	32
  1450  007CF2  73                 	db	115	;'s'
  1451  007CF3  65                 	db	101	;'e'
  1452  007CF4  74                 	db	116	;'t'
  1453  007CF5  20                 	db	32
  1454  007CF6  70                 	db	112	;'p'
  1455  007CF7  77                 	db	119	;'w'
  1456  007CF8  72                 	db	114	;'r'
  1457  007CF9  20                 	db	32
  1458  007CFA  32                 	db	50	;'2'
  1459  007CFB  30                 	db	48	;'0'
  1460  007CFC  00                 	db	0
  1461  007CFD                     STR_57:
  1462  007CFD  72                 	db	114	;'r'
  1463  007CFE  61                 	db	97	;'a'
  1464  007CFF  64                 	db	100	;'d'
  1465  007D00  69                 	db	105	;'i'
  1466  007D01  6F                 	db	111	;'o'
  1467  007D02  20                 	db	32
  1468  007D03  73                 	db	115	;'s'
  1469  007D04  65                 	db	101	;'e'
  1470  007D05  74                 	db	116	;'t'
  1471  007D06  20                 	db	32
  1472  007D07  63                 	db	99	;'c'
  1473  007D08  72                 	db	114	;'r'
  1474  007D09  20                 	db	32
  1475  007D0A  34                 	db	52	;'4'
  1476  007D0B  2F                 	db	47
  1477  007D0C  35                 	db	53	;'5'
  1478  007D0D  00                 	db	0
  1479  007D0E                     STR_66:
  1480  007D0E  72                 	db	114	;'r'
  1481  007D0F  61                 	db	97	;'a'
  1482  007D10  64                 	db	100	;'d'
  1483  007D11  69                 	db	105	;'i'
  1484  007D12  6F                 	db	111	;'o'
  1485  007D13  20                 	db	32
  1486  007D14  73                 	db	115	;'s'
  1487  007D15  65                 	db	101	;'e'
  1488  007D16  74                 	db	116	;'t'
  1489  007D17  20                 	db	32
  1490  007D18  62                 	db	98	;'b'
  1491  007D19  77                 	db	119	;'w'
  1492  007D1A  20                 	db	32
  1493  007D1B  31                 	db	49	;'1'
  1494  007D1C  32                 	db	50	;'2'
  1495  007D1D  35                 	db	53	;'5'
  1496  007D1E  00                 	db	0
  1497  007D1F                     STR_25:
  1498  007D1F  52                 	db	82	;'R'
  1499  007D20  65                 	db	101	;'e'
  1500  007D21  52                 	db	82	;'R'
  1501  007D22  75                 	db	117	;'u'
  1502  007D23  6E                 	db	110	;'n'
  1503  007D24  20                 	db	32
  1504  007D25  50                 	db	80	;'P'
  1505  007D26  77                 	db	119	;'w'
  1506  007D27  72                 	db	114	;'r'
  1507  007D28  54                 	db	84	;'T'
  1508  007D29  73                 	db	115	;'s'
  1509  007D2A  74                 	db	116	;'t'
  1510  007D2B  3C                 	db	60	;'<'
  1511  007D2C  53                 	db	83	;'S'
  1512  007D2D  32                 	db	50	;'2'
  1513  007D2E  3E                 	db	62	;'>'
  1514  007D2F  00                 	db	0
  1515  007D30                     STR_76:
  1516  007D30  49                 	db	73	;'I'
  1517  007D31  73                 	db	115	;'s'
  1518  007D32  73                 	db	115	;'s'
  1519  007D33  75                 	db	117	;'u'
  1520  007D34  65                 	db	101	;'e'
  1521  007D35  20                 	db	32
  1522  007D36  50                 	db	80	;'P'
  1523  007D37  65                 	db	101	;'e'
  1524  007D38  72                 	db	114	;'r'
  1525  007D39  6F                 	db	111	;'o'
  1526  007D3A  64                 	db	100	;'d'
  1527  007D3B  69                 	db	105	;'i'
  1528  007D3C  63                 	db	99	;'c'
  1529  007D3D  20                 	db	32
  1530  007D3E  54                 	db	84	;'T'
  1531  007D3F  58                 	db	88	;'X'
  1532  007D40  00                 	db	0
  1533  007D41                     STR_54:
  1534  007D41  72                 	db	114	;'r'
  1535  007D42  61                 	db	97	;'a'
  1536  007D43  64                 	db	100	;'d'
  1537  007D44  69                 	db	105	;'i'
  1538  007D45  6F                 	db	111	;'o'
  1539  007D46  20                 	db	32
  1540  007D47  73                 	db	115	;'s'
  1541  007D48  65                 	db	101	;'e'
  1542  007D49  74                 	db	116	;'t'
  1543  007D4A  20                 	db	32
  1544  007D4B  63                 	db	99	;'c'
  1545  007D4C  72                 	db	114	;'r'
  1546  007D4D  63                 	db	99	;'c'
  1547  007D4E  20                 	db	32
  1548  007D4F  6F                 	db	111	;'o'
  1549  007D50  6E                 	db	110	;'n'
  1550  007D51  00                 	db	0
  1551  007D52                     STR_26:
  1552  007D52  4D                 	db	77	;'M'
  1553  007D53  6F                 	db	111	;'o'
  1554  007D54  62                 	db	98	;'b'
  1555  007D55  69                 	db	105	;'i'
  1556  007D56  6C                 	db	108	;'l'
  1557  007D57  65                 	db	101	;'e'
  1558  007D58  20                 	db	32
  1559  007D59  4D                 	db	77	;'M'
  1560  007D5A  6F                 	db	111	;'o'
  1561  007D5B  74                 	db	116	;'t'
  1562  007D5C  65                 	db	101	;'e'
  1563  007D5D  20                 	db	32
  1564  007D5E  2D                 	db	45
  1565  007D5F  41                 	db	65	;'A'
  1566  007D60  70                 	db	112	;'p'
  1567  007D61  70                 	db	112	;'p'
  1568  007D62  00                 	db	0
  1569  007D63                     STR_27:
  1570  007D63  4E                 	db	78	;'N'
  1571  007D64  61                 	db	97	;'a'
  1572  007D65  76                 	db	118	;'v'
  1573  007D66  69                 	db	105	;'i'
  1574  007D67  67                 	db	103	;'g'
  1575  007D68  61                 	db	97	;'a'
  1576  007D69  74                 	db	116	;'t'
  1577  007D6A  65                 	db	101	;'e'
  1578  007D6B  20                 	db	32
  1579  007D6C  20                 	db	32
  1580  007D6D  53                 	db	83	;'S'
  1581  007D6E  65                 	db	101	;'e'
  1582  007D6F  6C                 	db	108	;'l'
  1583  007D70  65                 	db	101	;'e'
  1584  007D71  63                 	db	99	;'c'
  1585  007D72  74                 	db	116	;'t'
  1586  007D73  00                 	db	0
  1587  007D74                     STR_79:
  1588  007D74  28                 	db	40
  1589  007D75  4E                 	db	78	;'N'
  1590  007D76  41                 	db	65	;'A'
  1591  007D77  56                 	db	86	;'V'
  1592  007D78  29                 	db	41
  1593  007D79  20                 	db	32
  1594  007D7A  20                 	db	32
  1595  007D7B  20                 	db	32
  1596  007D7C  20                 	db	32
  1597  007D7D  28                 	db	40
  1598  007D7E  53                 	db	83	;'S'
  1599  007D7F  45                 	db	69	;'E'
  1600  007D80  4C                 	db	76	;'L'
  1601  007D81  29                 	db	41
  1602  007D82  20                 	db	32
  1603  007D83  00                 	db	0
  1604  007D84                     STR_60:
  1605  007D84  72                 	db	114	;'r'
  1606  007D85  61                 	db	97	;'a'
  1607  007D86  64                 	db	100	;'d'
  1608  007D87  69                 	db	105	;'i'
  1609  007D88  6F                 	db	111	;'o'
  1610  007D89  20                 	db	32
  1611  007D8A  73                 	db	115	;'s'
  1612  007D8B  65                 	db	101	;'e'
  1613  007D8C  74                 	db	116	;'t'
  1614  007D8D  20                 	db	32
  1615  007D8E  77                 	db	119	;'w'
  1616  007D8F  64                 	db	100	;'d'
  1617  007D90  74                 	db	116	;'t'
  1618  007D91  20                 	db	32
  1619  007D92  30                 	db	48	;'0'
  1620  007D93  00                 	db	0
  1621  007D94  6D                 	db	109	;'m'
  1622  007D95  61                 	db	97	;'a'
  1623  007D96  63                 	db	99	;'c'
  1624  007D97  20                 	db	32
  1625  007D98  73                 	db	115	;'s'
  1626  007D99  65                 	db	101	;'e'
  1627  007D9A  74                 	db	116	;'t'
  1628  007D9B  20                 	db	32
  1629  007D9C  61                 	db	97	;'a'
  1630  007D9D  64                 	db	100	;'d'
  1631  007D9E  72                 	db	114	;'r'
  1632  007D9F  20                 	db	32
  1633  007DA0  6F                 	db	111	;'o'
  1634  007DA1  66                 	db	102	;'f'
  1635  007DA2  66                 	db	102	;'f'
  1636  007DA3  00                 	db	0
  1637  007DA4  42                 	db	66	;'B'
  1638  007DA5  75                 	db	117	;'u'
  1639  007DA6  69                 	db	105	;'i'
  1640  007DA7  6C                 	db	108	;'l'
  1641  007DA8  64                 	db	100	;'d'
  1642  007DA9  20                 	db	32
  1643  007DAA  44                 	db	68	;'D'
  1644  007DAB  61                 	db	97	;'a'
  1645  007DAC  74                 	db	116	;'t'
  1646  007DAD  65                 	db	101	;'e'
  1647  007DAE  2F                 	db	47
  1648  007DAF  54                 	db	84	;'T'
  1649  007DB0  69                 	db	105	;'i'
  1650  007DB1  6D                 	db	109	;'m'
  1651  007DB2  65                 	db	101	;'e'
  1652  007DB3  00                 	db	0
  1653  007DB4  6D                 	db	109	;'m'
  1654  007DB5  61                 	db	97	;'a'
  1655  007DB6  63                 	db	99	;'c'
  1656  007DB7  20                 	db	32
  1657  007DB8  73                 	db	115	;'s'
  1658  007DB9  65                 	db	101	;'e'
  1659  007DBA  74                 	db	116	;'t'
  1660  007DBB  20                 	db	32
  1661  007DBC  61                 	db	97	;'a'
  1662  007DBD  64                 	db	100	;'d'
  1663  007DBE  72                 	db	114	;'r'
  1664  007DBF  20                 	db	32
  1665  007DC0  6F                 	db	111	;'o'
  1666  007DC1  6E                 	db	110	;'n'
  1667  007DC2  00                 	db	0
  1668  007DC3                     STR_2:
  1669  007DC3  20                 	db	32
  1670  007DC4  20                 	db	32
  1671  007DC5  43                 	db	67	;'C'
  1672  007DC6  57                 	db	87	;'W'
  1673  007DC7  20                 	db	32
  1674  007DC8  4D                 	db	77	;'M'
  1675  007DC9  4F                 	db	79	;'O'
  1676  007DCA  44                 	db	68	;'D'
  1677  007DCB  45                 	db	69	;'E'
  1678  007DCC  20                 	db	32
  1679  007DCD  20                 	db	32
  1680  007DCE  20                 	db	32
  1681  007DCF  20                 	db	32
  1682  007DD0  20                 	db	32
  1683  007DD1  00                 	db	0
  1684  007DD2                     STR_1:
  1685  007DD2  4D                 	db	77	;'M'
  1686  007DD3  45                 	db	69	;'E'
  1687  007DD4  4E                 	db	78	;'N'
  1688  007DD5  43                 	db	67	;'C'
  1689  007DD6  4F                 	db	79	;'O'
  1690  007DD7  2D                 	db	45
  1691  007DD8  4C                 	db	76	;'L'
  1692  007DD9  4F                 	db	79	;'O'
  1693  007DDA  52                 	db	82	;'R'
  1694  007DDB  45                 	db	69	;'E'
  1695  007DDC  58                 	db	88	;'X'
  1696  007DDD  20                 	db	32
  1697  007DDE  20                 	db	32
  1698  007DDF  20                 	db	32
  1699  007DE0  00                 	db	0
  1700  007DE1                     STR_3:
  1701  007DE1  20                 	db	32
  1702  007DE2  20                 	db	32
  1703  007DE3  20                 	db	32
  1704  007DE4  42                 	db	66	;'B'
  1705  007DE5  75                 	db	117	;'u'
  1706  007DE6  69                 	db	105	;'i'
  1707  007DE7  6C                 	db	108	;'l'
  1708  007DE8  64                 	db	100	;'d'
  1709  007DE9  20                 	db	32
  1710  007DEA  43                 	db	67	;'C'
  1711  007DEB  57                 	db	87	;'W'
  1712  007DEC  2D                 	db	45
  1713  007DED  31                 	db	49	;'1'
  1714  007DEE  20                 	db	32
  1715  007DEF  00                 	db	0
  1716  007DF0                     STR_30:
  1717  007DF0  72                 	db	114	;'r'
  1718  007DF1  61                 	db	97	;'a'
  1719  007DF2  64                 	db	100	;'d'
  1720  007DF3  69                 	db	105	;'i'
  1721  007DF4  6F                 	db	111	;'o'
  1722  007DF5  20                 	db	32
  1723  007DF6  63                 	db	99	;'c'
  1724  007DF7  77                 	db	119	;'w'
  1725  007DF8  20                 	db	32
  1726  007DF9  6F                 	db	111	;'o'
  1727  007DFA  6E                 	db	110	;'n'
  1728  007DFB  0D                 	db	13
  1729  007DFC  0A                 	db	10
  1730  007DFD  00                 	db	0
  1731  007DFE                     STR_78:
  1732  007DFE  4C                 	db	76	;'L'
  1733  007DFF  3A                 	db	58	;':'
  1734  007E00  20                 	db	32
  1735  007E01  20                 	db	32
  1736  007E02  20                 	db	32
  1737  007E03  20                 	db	32
  1738  007E04  20                 	db	32
  1739  007E05  20                 	db	32
  1740  007E06  20                 	db	32
  1741  007E07  54                 	db	84	;'T'
  1742  007E08  3A                 	db	58	;':'
  1743  007E09  20                 	db	32
  1744  007E0A  00                 	db	0
  1745  007E0B                     STR_84:
  1746  007E0B  6D                 	db	109	;'m'
  1747  007E0C  61                 	db	97	;'a'
  1748  007E0D  63                 	db	99	;'c'
  1749  007E0E  20                 	db	32
  1750  007E0F  73                 	db	115	;'s'
  1751  007E10  65                 	db	101	;'e'
  1752  007E11  74                 	db	116	;'t'
  1753  007E12  20                 	db	32
  1754  007E13  64                 	db	100	;'d'
  1755  007E14  72                 	db	114	;'r'
  1756  007E15  20                 	db	32
  1757  007E16  30                 	db	48	;'0'
  1758  007E17  00                 	db	0
  1759  007E18                     STR_85:
  1760  007E18  6D                 	db	109	;'m'
  1761  007E19  61                 	db	97	;'a'
  1762  007E1A  63                 	db	99	;'c'
  1763  007E1B  20                 	db	32
  1764  007E1C  73                 	db	115	;'s'
  1765  007E1D  65                 	db	101	;'e'
  1766  007E1E  74                 	db	116	;'t'
  1767  007E1F  20                 	db	32
  1768  007E20  64                 	db	100	;'d'
  1769  007E21  72                 	db	114	;'r'
  1770  007E22  20                 	db	32
  1771  007E23  31                 	db	49	;'1'
  1772  007E24  00                 	db	0
  1773  007E25  6D                 	db	109	;'m'
  1774  007E26  61                 	db	97	;'a'
  1775  007E27  63                 	db	99	;'c'
  1776  007E28  20                 	db	32
  1777  007E29  73                 	db	115	;'s'
  1778  007E2A  65                 	db	101	;'e'
  1779  007E2B  74                 	db	116	;'t'
  1780  007E2C  20                 	db	32
  1781  007E2D  64                 	db	100	;'d'
  1782  007E2E  72                 	db	114	;'r'
  1783  007E2F  20                 	db	32
  1784  007E30  32                 	db	50	;'2'
  1785  007E31  00                 	db	0
  1786  007E32  6D                 	db	109	;'m'
  1787  007E33  61                 	db	97	;'a'
  1788  007E34  63                 	db	99	;'c'
  1789  007E35  20                 	db	32
  1790  007E36  73                 	db	115	;'s'
  1791  007E37  65                 	db	101	;'e'
  1792  007E38  74                 	db	116	;'t'
  1793  007E39  20                 	db	32
  1794  007E3A  64                 	db	100	;'d'
  1795  007E3B  72                 	db	114	;'r'
  1796  007E3C  20                 	db	32
  1797  007E3D  33                 	db	51	;'3'
  1798  007E3E  00                 	db	0
  1799  007E3F  6D                 	db	109	;'m'
  1800  007E40  61                 	db	97	;'a'
  1801  007E41  63                 	db	99	;'c'
  1802  007E42  20                 	db	32
  1803  007E43  73                 	db	115	;'s'
  1804  007E44  65                 	db	101	;'e'
  1805  007E45  74                 	db	116	;'t'
  1806  007E46  20                 	db	32
  1807  007E47  64                 	db	100	;'d'
  1808  007E48  72                 	db	114	;'r'
  1809  007E49  20                 	db	32
  1810  007E4A  34                 	db	52	;'4'
  1811  007E4B  00                 	db	0
  1812  007E4C  6D                 	db	109	;'m'
  1813  007E4D  61                 	db	97	;'a'
  1814  007E4E  63                 	db	99	;'c'
  1815  007E4F  20                 	db	32
  1816  007E50  73                 	db	115	;'s'
  1817  007E51  65                 	db	101	;'e'
  1818  007E52  74                 	db	116	;'t'
  1819  007E53  20                 	db	32
  1820  007E54  64                 	db	100	;'d'
  1821  007E55  72                 	db	114	;'r'
  1822  007E56  20                 	db	32
  1823  007E57  35                 	db	53	;'5'
  1824  007E58  00                 	db	0
  1825  007E59  6D                 	db	109	;'m'
  1826  007E5A  61                 	db	97	;'a'
  1827  007E5B  63                 	db	99	;'c'
  1828  007E5C  20                 	db	32
  1829  007E5D  73                 	db	115	;'s'
  1830  007E5E  65                 	db	101	;'e'
  1831  007E5F  74                 	db	116	;'t'
  1832  007E60  20                 	db	32
  1833  007E61  64                 	db	100	;'d'
  1834  007E62  72                 	db	114	;'r'
  1835  007E63  20                 	db	32
  1836  007E64  36                 	db	54	;'6'
  1837  007E65  00                 	db	0
  1838  007E66  6D                 	db	109	;'m'
  1839  007E67  61                 	db	97	;'a'
  1840  007E68  63                 	db	99	;'c'
  1841  007E69  20                 	db	32
  1842  007E6A  73                 	db	115	;'s'
  1843  007E6B  65                 	db	101	;'e'
  1844  007E6C  74                 	db	116	;'t'
  1845  007E6D  20                 	db	32
  1846  007E6E  64                 	db	100	;'d'
  1847  007E6F  72                 	db	114	;'r'
  1848  007E70  20                 	db	32
  1849  007E71  37                 	db	55	;'7'
  1850  007E72  00                 	db	0
  1851  007E73  42                 	db	66	;'B'
  1852  007E74  75                 	db	117	;'u'
  1853  007E75  74                 	db	116	;'t'
  1854  007E76  74                 	db	116	;'t'
  1855  007E77  6F                 	db	111	;'o'
  1856  007E78  6E                 	db	110	;'n'
  1857  007E79  20                 	db	32
  1858  007E7A  54                 	db	84	;'T'
  1859  007E7B  65                 	db	101	;'e'
  1860  007E7C  73                 	db	115	;'s'
  1861  007E7D  74                 	db	116	;'t'
  1862  007E7E  3A                 	db	58	;':'
  1863  007E7F  00                 	db	0
  1864  007E80  42                 	db	66	;'B'
  1865  007E81  75                 	db	117	;'u'
  1866  007E82  74                 	db	116	;'t'
  1867  007E83  74                 	db	116	;'t'
  1868  007E84  6F                 	db	111	;'o'
  1869  007E85  6E                 	db	110	;'n'
  1870  007E86  31                 	db	49	;'1'
  1871  007E87  20                 	db	32
  1872  007E88  50                 	db	80	;'P'
  1873  007E89  41                 	db	65	;'A'
  1874  007E8A  53                 	db	83	;'S'
  1875  007E8B  53                 	db	83	;'S'
  1876  007E8C  00                 	db	0
  1877  007E8D  42                 	db	66	;'B'
  1878  007E8E  75                 	db	117	;'u'
  1879  007E8F  74                 	db	116	;'t'
  1880  007E90  74                 	db	116	;'t'
  1881  007E91  6F                 	db	111	;'o'
  1882  007E92  6E                 	db	110	;'n'
  1883  007E93  32                 	db	50	;'2'
  1884  007E94  20                 	db	32
  1885  007E95  50                 	db	80	;'P'
  1886  007E96  41                 	db	65	;'A'
  1887  007E97  53                 	db	83	;'S'
  1888  007E98  53                 	db	83	;'S'
  1889  007E99  00                 	db	0
  1890  007E9A  50                 	db	80	;'P'
  1891  007E9B  72                 	db	114	;'r'
  1892  007E9C  65                 	db	101	;'e'
  1893  007E9D  73                 	db	115	;'s'
  1894  007E9E  73                 	db	115	;'s'
  1895  007E9F  20                 	db	32
  1896  007EA0  42                 	db	66	;'B'
  1897  007EA1  75                 	db	117	;'u'
  1898  007EA2  74                 	db	116	;'t'
  1899  007EA3  74                 	db	116	;'t'
  1900  007EA4  6F                 	db	111	;'o'
  1901  007EA5  6E                 	db	110	;'n'
  1902  007EA6  00                 	db	0
  1903  007EA7                     STR_100:
  1904  007EA7  55                 	db	85	;'U'
  1905  007EA8  53                 	db	83	;'S'
  1906  007EA9  42                 	db	66	;'B'
  1907  007EAA  20                 	db	32
  1908  007EAB  48                 	db	72	;'H'
  1909  007EAC  61                 	db	97	;'a'
  1910  007EAD  6E                 	db	110	;'n'
  1911  007EAE  64                 	db	100	;'d'
  1912  007EAF  6C                 	db	108	;'l'
  1913  007EB0  65                 	db	101	;'e'
  1914  007EB1  72                 	db	114	;'r'
  1915  007EB2  00                 	db	0
  1916  007EB3                     STR_77:
  1917  007EB3  4F                 	db	79	;'O'
  1918  007EB4  6E                 	db	110	;'n'
  1919  007EB5  20                 	db	32
  1920  007EB6  50                 	db	80	;'P'
  1921  007EB7  6F                 	db	111	;'o'
  1922  007EB8  72                 	db	114	;'r'
  1923  007EB9  74                 	db	116	;'t'
  1924  007EBA  20                 	db	32
  1925  007EBB  23                 	db	35
  1926  007EBC  3A                 	db	58	;':'
  1927  007EBD  20                 	db	32
  1928  007EBE  00                 	db	0
  1929  007EBF                     STR_72:
  1930  007EBF  72                 	db	114	;'r'
  1931  007EC0  61                 	db	97	;'a'
  1932  007EC1  64                 	db	100	;'d'
  1933  007EC2  69                 	db	105	;'i'
  1934  007EC3  6F                 	db	111	;'o'
  1935  007EC4  5F                 	db	95	;'_'
  1936  007EC5  74                 	db	116	;'t'
  1937  007EC6  78                 	db	120	;'x'
  1938  007EC7  5F                 	db	95	;'_'
  1939  007EC8  6F                 	db	111	;'o'
  1940  007EC9  6B                 	db	107	;'k'
  1941  007ECA  00                 	db	0
  1942  007ECB                     STR_31:
  1943  007ECB  73                 	db	115	;'s'
  1944  007ECC  79                 	db	121	;'y'
  1945  007ECD  73                 	db	115	;'s'
  1946  007ECE  20                 	db	32
  1947  007ECF  67                 	db	103	;'g'
  1948  007ED0  65                 	db	101	;'e'
  1949  007ED1  74                 	db	116	;'t'
  1950  007ED2  20                 	db	32
  1951  007ED3  76                 	db	118	;'v'
  1952  007ED4  65                 	db	101	;'e'
  1953  007ED5  72                 	db	114	;'r'
  1954  007ED6  00                 	db	0
  1955  007ED7  41                 	db	65	;'A'
  1956  007ED8  70                 	db	112	;'p'
  1957  007ED9  72                 	db	114	;'r'
  1958  007EDA  20                 	db	32
  1959  007EDB  32                 	db	50	;'2'
  1960  007EDC  33                 	db	51	;'3'
  1961  007EDD  20                 	db	32
  1962  007EDE  32                 	db	50	;'2'
  1963  007EDF  30                 	db	48	;'0'
  1964  007EE0  31                 	db	49	;'1'
  1965  007EE1  36                 	db	54	;'6'
  1966  007EE2  00                 	db	0
  1967  007EE3  42                 	db	66	;'B'
  1968  007EE4  75                 	db	117	;'u'
  1969  007EE5  74                 	db	116	;'t'
  1970  007EE6  74                 	db	116	;'t'
  1971  007EE7  6F                 	db	111	;'o'
  1972  007EE8  6E                 	db	110	;'n'
  1973  007EE9  20                 	db	32
  1974  007EEA  46                 	db	70	;'F'
  1975  007EEB  41                 	db	65	;'A'
  1976  007EEC  49                 	db	73	;'I'
  1977  007EED  4C                 	db	76	;'L'
  1978  007EEE  00                 	db	0
  1979  007EEF  43                 	db	67	;'C'
  1980  007EF0  6F                 	db	111	;'o'
  1981  007EF1  6D                 	db	109	;'m'
  1982  007EF2  6D                 	db	109	;'m'
  1983  007EF3  20                 	db	32
  1984  007EF4  54                 	db	84	;'T'
  1985  007EF5  65                 	db	101	;'e'
  1986  007EF6  73                 	db	115	;'s'
  1987  007EF7  74                 	db	116	;'t'
  1988  007EF8  3A                 	db	58	;':'
  1989  007EF9  00                 	db	0
  1990  007EFA                     STR_81:
  1991  007EFA  72                 	db	114	;'r'
  1992  007EFB  61                 	db	97	;'a'
  1993  007EFC  64                 	db	100	;'d'
  1994  007EFD  69                 	db	105	;'i'
  1995  007EFE  6F                 	db	111	;'o'
  1996  007EFF  20                 	db	32
  1997  007F00  74                 	db	116	;'t'
  1998  007F01  78                 	db	120	;'x'
  1999  007F02  20                 	db	32
  2000  007F03  00                 	db	0
  2001  007F04                     STR_23:
  2002  007F04  4D                 	db	77	;'M'
  2003  007F05  4F                 	db	79	;'O'
  2004  007F06  54                 	db	84	;'T'
  2005  007F07  45                 	db	69	;'E'
  2006  007F08  20                 	db	32
  2007  007F09  4D                 	db	77	;'M'
  2008  007F0A  6F                 	db	111	;'o'
  2009  007F0B  64                 	db	100	;'d'
  2010  007F0C  65                 	db	101	;'e'
  2011  007F0D  00                 	db	0
  2012  007F0E                     STR_69:
  2013  007F0E  6D                 	db	109	;'m'
  2014  007F0F  61                 	db	97	;'a'
  2015  007F10  63                 	db	99	;'c'
  2016  007F11  20                 	db	32
  2017  007F12  70                 	db	112	;'p'
  2018  007F13  61                 	db	97	;'a'
  2019  007F14  75                 	db	117	;'u'
  2020  007F15  73                 	db	115	;'s'
  2021  007F16  65                 	db	101	;'e'
  2022  007F17  00                 	db	0
  2023  007F18                     STR_52:
  2024  007F18  73                 	db	115	;'s'
  2025  007F19  65                 	db	101	;'e'
  2026  007F1A  74                 	db	116	;'t'
  2027  007F1B  20                 	db	32
  2028  007F1C  70                 	db	112	;'p'
  2029  007F1D  72                 	db	114	;'r'
  2030  007F1E  6C                 	db	108	;'l'
  2031  007F1F  65                 	db	101	;'e'
  2032  007F20  6E                 	db	110	;'n'
  2033  007F21  00                 	db	0
  2034  007F22                     STR_46:
  2035  007F22  73                 	db	115	;'s'
  2036  007F23  65                 	db	101	;'e'
  2037  007F24  74                 	db	116	;'t'
  2038  007F25  20                 	db	32
  2039  007F26  61                 	db	97	;'a'
  2040  007F27  66                 	db	102	;'f'
  2041  007F28  63                 	db	99	;'c'
  2042  007F29  62                 	db	98	;'b'
  2043  007F2A  77                 	db	119	;'w'
  2044  007F2B  00                 	db	0
  2045  007F2C  4C                 	db	76	;'L'
  2046  007F2D  45                 	db	69	;'E'
  2047  007F2E  44                 	db	68	;'D'
  2048  007F2F  20                 	db	32
  2049  007F30  54                 	db	84	;'T'
  2050  007F31  65                 	db	101	;'e'
  2051  007F32  73                 	db	115	;'s'
  2052  007F33  74                 	db	116	;'t'
  2053  007F34  3A                 	db	58	;':'
  2054  007F35  00                 	db	0
  2055  007F36                     STR_98:
  2056  007F36  43                 	db	67	;'C'
  2057  007F37  44                 	db	68	;'D'
  2058  007F38  43                 	db	67	;'C'
  2059  007F39  20                 	db	32
  2060  007F3A  4D                 	db	77	;'M'
  2061  007F3B  6F                 	db	111	;'o'
  2062  007F3C  64                 	db	100	;'d'
  2063  007F3D  65                 	db	101	;'e'
  2064  007F3E  00                 	db	0
  2065  007F3F                     STR_75:
  2066  007F3F  53                 	db	83	;'S'
  2067  007F40  75                 	db	117	;'u'
  2068  007F41  63                 	db	99	;'c'
  2069  007F42  63                 	db	99	;'c'
  2070  007F43  65                 	db	101	;'e'
  2071  007F44  73                 	db	115	;'s'
  2072  007F45  73                 	db	115	;'s'
  2073  007F46  21                 	db	33
  2074  007F47  00                 	db	0
  2075  007F48                     STR_33:
  2076  007F48  52                 	db	82	;'R'
  2077  007F49  58                 	db	88	;'X'
  2078  007F4A  20                 	db	32
  2079  007F4B  52                 	db	82	;'R'
  2080  007F4C  45                 	db	69	;'E'
  2081  007F4D  53                 	db	83	;'S'
  2082  007F4E  45                 	db	69	;'E'
  2083  007F4F  54                 	db	84	;'T'
  2084  007F50  00                 	db	0
  2085  007F51                     STR_34:
  2086  007F51  54                 	db	84	;'T'
  2087  007F52  58                 	db	88	;'X'
  2088  007F53  20                 	db	32
  2089  007F54  52                 	db	82	;'R'
  2090  007F55  45                 	db	69	;'E'
  2091  007F56  53                 	db	83	;'S'
  2092  007F57  45                 	db	69	;'E'
  2093  007F58  54                 	db	84	;'T'
  2094  007F59  00                 	db	0
  2095  007F5A                     STR_64:
  2096  007F5A  73                 	db	115	;'s'
  2097  007F5B  65                 	db	101	;'e'
  2098  007F5C  74                 	db	116	;'t'
  2099  007F5D  20                 	db	32
  2100  007F5E  73                 	db	115	;'s'
  2101  007F5F  79                 	db	121	;'y'
  2102  007F60  6E                 	db	110	;'n'
  2103  007F61  63                 	db	99	;'c'
  2104  007F62  00                 	db	0
  2105  007F63  6D                 	db	109	;'m'
  2106  007F64  61                 	db	97	;'a'
  2107  007F65  63                 	db	99	;'c'
  2108  007F66  20                 	db	32
  2109  007F67  73                 	db	115	;'s'
  2110  007F68  61                 	db	97	;'a'
  2111  007F69  76                 	db	118	;'v'
  2112  007F6A  65                 	db	101	;'e'
  2113  007F6B  00                 	db	0
  2114  007F6C                     STR_24:
  2115  007F6C  53                 	db	83	;'S'
  2116  007F6D  74                 	db	116	;'t'
  2117  007F6E  61                 	db	97	;'a'
  2118  007F6F  72                 	db	114	;'r'
  2119  007F70  74                 	db	116	;'t'
  2120  007F71  69                 	db	105	;'i'
  2121  007F72  6E                 	db	110	;'n'
  2122  007F73  67                 	db	103	;'g'
  2123  007F74  00                 	db	0
  2124  007F75                     STR_49:
  2125  007F75  73                 	db	115	;'s'
  2126  007F76  65                 	db	101	;'e'
  2127  007F77  74                 	db	116	;'t'
  2128  007F78  20                 	db	32
  2129  007F79  66                 	db	102	;'f'
  2130  007F7A  64                 	db	100	;'d'
  2131  007F7B  65                 	db	101	;'e'
  2132  007F7C  76                 	db	118	;'v'
  2133  007F7D  00                 	db	0
  2134  007F7E  4D                 	db	77	;'M'
  2135  007F7F  6F                 	db	111	;'o'
  2136  007F80  54                 	db	84	;'T'
  2137  007F81  65                 	db	101	;'e'
  2138  007F82  20                 	db	32
  2139  007F83  76                 	db	118	;'v'
  2140  007F84  20                 	db	32
  2141  007F85  2E                 	db	46
  2142  007F86  00                 	db	0
  2143  007F87  30                 	db	48	;'0'
  2144  007F88  31                 	db	49	;'1'
  2145  007F89  3A                 	db	58	;':'
  2146  007F8A  33                 	db	51	;'3'
  2147  007F8B  36                 	db	54	;'6'
  2148  007F8C  3A                 	db	58	;':'
  2149  007F8D  31                 	db	49	;'1'
  2150  007F8E  30                 	db	48	;'0'
  2151  007F8F  00                 	db	0
  2152  007F90  52                 	db	82	;'R'
  2153  007F91  46                 	db	70	;'F'
  2154  007F92  20                 	db	32
  2155  007F93  54                 	db	84	;'T'
  2156  007F94  65                 	db	101	;'e'
  2157  007F95  73                 	db	115	;'s'
  2158  007F96  74                 	db	116	;'t'
  2159  007F97  3A                 	db	58	;':'
  2160  007F98  00                 	db	0
  2161  007F99  41                 	db	65	;'A'
  2162  007F9A  44                 	db	68	;'D'
  2163  007F9B  43                 	db	67	;'C'
  2164  007F9C  20                 	db	32
  2165  007F9D  54                 	db	84	;'T'
  2166  007F9E  65                 	db	101	;'e'
  2167  007F9F  73                 	db	115	;'s'
  2168  007FA0  74                 	db	116	;'t'
  2169  007FA1  00                 	db	0
  2170  007FA2                     STR_99:
  2171  007FA2  43                 	db	67	;'C'
  2172  007FA3  6F                 	db	111	;'o'
  2173  007FA4  6D                 	db	109	;'m'
  2174  007FA5  6D                 	db	109	;'m'
  2175  007FA6  61                 	db	97	;'a'
  2176  007FA7  6E                 	db	110	;'n'
  2177  007FA8  64                 	db	100	;'d'
  2178  007FA9  00                 	db	0
  2179  007FAA                     STR_29:
  2180  007FAA  62                 	db	98	;'b'
  2181  007FAB  65                 	db	101	;'e'
  2182  007FAC  65                 	db	101	;'e'
  2183  007FAD  70                 	db	112	;'p'
  2184  007FAE  20                 	db	32
  2185  007FAF  4F                 	db	79	;'O'
  2186  007FB0  4E                 	db	78	;'N'
  2187  007FB1  00                 	db	0
  2188  007FB2                     STR_55:
  2189  007FB2  73                 	db	115	;'s'
  2190  007FB3  65                 	db	101	;'e'
  2191  007FB4  74                 	db	116	;'t'
  2192  007FB5  20                 	db	32
  2193  007FB6  63                 	db	99	;'c'
  2194  007FB7  72                 	db	114	;'r'
  2195  007FB8  63                 	db	99	;'c'
  2196  007FB9  00                 	db	0
  2197  007FBA                     STR_37:
  2198  007FBA  73                 	db	115	;'s'
  2199  007FBB  65                 	db	101	;'e'
  2200  007FBC  74                 	db	116	;'t'
  2201  007FBD  20                 	db	32
  2202  007FBE  6D                 	db	109	;'m'
  2203  007FBF  6F                 	db	111	;'o'
  2204  007FC0  64                 	db	100	;'d'
  2205  007FC1  00                 	db	0
  2206  007FC2                     STR_40:
  2207  007FC2  73                 	db	115	;'s'
  2208  007FC3  65                 	db	101	;'e'
  2209  007FC4  74                 	db	116	;'t'
  2210  007FC5  20                 	db	32
  2211  007FC6  70                 	db	112	;'p'
  2212  007FC7  77                 	db	119	;'w'
  2213  007FC8  72                 	db	114	;'r'
  2214  007FC9  00                 	db	0
  2215  007FCA                     STR_61:
  2216  007FCA  73                 	db	115	;'s'
  2217  007FCB  65                 	db	101	;'e'
  2218  007FCC  74                 	db	116	;'t'
  2219  007FCD  20                 	db	32
  2220  007FCE  77                 	db	119	;'w'
  2221  007FCF  64                 	db	100	;'d'
  2222  007FD0  74                 	db	116	;'t'
  2223  007FD1  00                 	db	0
  2224  007FD2  54                 	db	84	;'T'
  2225  007FD3  65                 	db	101	;'e'
  2226  007FD4  6D                 	db	109	;'m'
  2227  007FD5  70                 	db	112	;'p'
  2228  007FD6  20                 	db	32
  2229  007FD7  20                 	db	32
  2230  007FD8  3D                 	db	61	;'='
  2231  007FD9  00                 	db	0
  2232  007FDA  4C                 	db	76	;'L'
  2233  007FDB  69                 	db	105	;'i'
  2234  007FDC  67                 	db	103	;'g'
  2235  007FDD  68                 	db	104	;'h'
  2236  007FDE  74                 	db	116	;'t'
  2237  007FDF  20                 	db	32
  2238  007FE0  3D                 	db	61	;'='
  2239  007FE1  00                 	db	0
  2240  007FE2                     STR_43:
  2241  007FE2  73                 	db	115	;'s'
  2242  007FE3  65                 	db	101	;'e'
  2243  007FE4  74                 	db	116	;'t'
  2244  007FE5  20                 	db	32
  2245  007FE6  73                 	db	115	;'s'
  2246  007FE7  66                 	db	102	;'f'
  2247  007FE8  00                 	db	0
  2248  007FE9                     STR_58:
  2249  007FE9  73                 	db	115	;'s'
  2250  007FEA  65                 	db	101	;'e'
  2251  007FEB  74                 	db	116	;'t'
  2252  007FEC  20                 	db	32
  2253  007FED  63                 	db	99	;'c'
  2254  007FEE  72                 	db	114	;'r'
  2255  007FEF  00                 	db	0
  2256  007FF0                     STR_67:
  2257  007FF0  73                 	db	115	;'s'
  2258  007FF1  65                 	db	101	;'e'
  2259  007FF2  74                 	db	116	;'t'
  2260  007FF3  20                 	db	32
  2261  007FF4  62                 	db	98	;'b'
  2262  007FF5  77                 	db	119	;'w'
  2263  007FF6  00                 	db	0
  2264  007FF7                     STR_35:
  2265  007FF7  52                 	db	82	;'R'
  2266  007FF8  4E                 	db	78	;'N'
  2267  007FF9  00                 	db	0
  2268  007FFA                     STR_80:
  2269  007FFA  43                 	db	67	;'C'
  2270  007FFB  00                 	db	0
  2271  007FFC                     STR_21:
  2272  007FFC  7A                 	db	122	;'z'
  2273  007FFD  00                 	db	0
  2274  0000                     
  2275                           ; #config settings
  2276  007FFE  00                 	db	0	; dummy byte at the end
  2277  0000                     
  2278                           	psect	cinit
  2279  0053EA                     __pcinit:
  2280                           	opt stack 0
  2281  0053EA                     start_initialization:
  2282                           	opt stack 0
  2283  0053EA                     __initialization:
  2284                           	opt stack 0
  2285                           
  2286                           ; Clear objects allocated to BANK2 (64 bytes)
  2287  0053EA  EE02  F000         	lfsr	0,__pbssBANK2
  2288  0053EE  0E40               	movlw	64
  2289  0053F0                     clear_0:
  2290  0053F0  6AEE               	clrf	postinc0,c
  2291  0053F2  06E8               	decf	wreg,f,c
  2292  0053F4  E1FD               	bnz	clear_0
  2293                           
  2294                           ; Clear objects allocated to BANK1 (208 bytes)
  2295  0053F6  EE01  F000         	lfsr	0,__pbssBANK1
  2296  0053FA  0ED0               	movlw	208
  2297  0053FC                     clear_1:
  2298  0053FC  6AEE               	clrf	postinc0,c
  2299  0053FE  06E8               	decf	wreg,f,c
  2300  005400  E1FD               	bnz	clear_1
  2301                           
  2302                           ; Clear objects allocated to BANK0 (110 bytes)
  2303  005402  EE00  F060         	lfsr	0,__pbssBANK0
  2304  005406  0E6E               	movlw	110
  2305  005408                     clear_2:
  2306  005408  6AEE               	clrf	postinc0,c
  2307  00540A  06E8               	decf	wreg,f,c
  2308  00540C  E1FD               	bnz	clear_2
  2309                           
  2310                           ; Clear objects allocated to COMRAM (45 bytes)
  2311  00540E  EE00  F001         	lfsr	0,__pbssCOMRAM
  2312  005412  0E2D               	movlw	45
  2313  005414                     clear_3:
  2314  005414  6AEE               	clrf	postinc0,c
  2315  005416  06E8               	decf	wreg,f,c
  2316  005418  E1FD               	bnz	clear_3
  2317                           
  2318                           ; Initialize objects allocated to BANK0 (3 bytes)
  2319                           ; load TBLPTR registers with __pidataBANK0
  2320  00541A  0E21               	movlw	low __pidataBANK0
  2321  00541C  6EF6               	movwf	tblptrl,c
  2322  00541E  0E4A               	movlw	high __pidataBANK0
  2323  005420  6EF7               	movwf	tblptrh,c
  2324  005422  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2325  005424  6EF8               	movwf	tblptru,c
  2326  005426  0009               	tblrd		*+	;fetch initializer
  2327  005428  CFF5 F0F5          	movff	tablat,__pdataBANK0
  2328  00542C  0009               	tblrd		*+	;fetch initializer
  2329  00542E  CFF5 F0F6          	movff	tablat,__pdataBANK0+1
  2330  005432  0009               	tblrd		*+	;fetch initializer
  2331  005434  CFF5 F0F7          	movff	tablat,__pdataBANK0+2
  2332  005438                     end_of_initialization:
  2333                           	opt stack 0
  2334  005438                     __end_of__initialization:
  2335                           	opt stack 0
  2336  005438  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2337  00543A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2338  00543C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2339  00543E  6EF8               	movwf	tblptru,c
  2340  005440  0100               	movlb	0
  2341  005442  EFD8  F02F         	goto	_main	;jump to C main() function
  2342                           tblptru	equ	0xFF8
  2343                           tblptrh	equ	0xFF7
  2344                           tblptrl	equ	0xFF6
  2345                           tablat	equ	0xFF5
  2346                           postinc0	equ	0xFEE
  2347                           wreg	equ	0xFE8
  2348                           
  2349                           	psect	bssCOMRAM
  2350  000001                     __pbssCOMRAM:
  2351                           	opt stack 0
  2352  000001                     _outPipes:
  2353                           	opt stack 0
  2354  000001                     	ds	8
  2355  000009                     _inPipes:
  2356                           	opt stack 0
  2357  000009                     	ds	6
  2358  00000F                     _pBDTEntryIn:
  2359                           	opt stack 0
  2360  00000F                     	ds	6
  2361  000015                     _pBDTEntryEP0OutCurrent:
  2362                           	opt stack 0
  2363  000015                     	ds	2
  2364  000017                     _pBDTEntryEP0OutNext:
  2365                           	opt stack 0
  2366  000017                     	ds	2
  2367  000019                     _LastRS232Out:
  2368                           	opt stack 0
  2369  000019                     	ds	1
  2370  00001A                     _NextUSBOut:
  2371                           	opt stack 0
  2372  00001A                     	ds	1
  2373  00001B                     _RS232_Out_Data_Rdy:
  2374                           	opt stack 0
  2375  00001B                     	ds	1
  2376  00001C                     _RS232cp:
  2377                           	opt stack 0
  2378  00001C                     	ds	1
  2379  00001D                     _RemoteWakeup:
  2380                           	opt stack 0
  2381  00001D                     	ds	1
  2382  00001E                     _USBDeferStatusStagePacket:
  2383                           	opt stack 0
  2384  00001E                     	ds	1
  2385  00001F                     _USBStatusStageTimeoutCounter:
  2386                           	opt stack 0
  2387  00001F                     	ds	1
  2388  000020                     _cdc_trf_state:
  2389                           	opt stack 0
  2390  000020                     	ds	1
  2391  000021                     _controlTransferState:
  2392                           	opt stack 0
  2393  000021                     	ds	1
  2394  000022                     _endpoint_number:
  2395                           	opt stack 0
  2396  000022                     	ds	1
  2397  000023                     _eusartRxCount:
  2398                           	opt stack 0
  2399  000023                     	ds	1
  2400  000024                     _eusartRxHead:
  2401                           	opt stack 0
  2402  000024                     	ds	1
  2403  000025                     _eusartRxTail:
  2404                           	opt stack 0
  2405  000025                     	ds	1
  2406  000026                     _eusartTxBufferRemaining:
  2407                           	opt stack 0
  2408  000026                     	ds	1
  2409  000027                     _eusartTxHead:
  2410                           	opt stack 0
  2411  000027                     	ds	1
  2412  000028                     _eusartTxTail:
  2413                           	opt stack 0
  2414  000028                     	ds	1
  2415  000029                     _modemBufferIndex:
  2416                           	opt stack 0
  2417  000029                     	ds	1
  2418  00002A                     _rxByteFlag:
  2419                           	opt stack 0
  2420  00002A                     	ds	1
  2421  00002B                     _shortPacketStatus:
  2422                           	opt stack 0
  2423  00002B                     	ds	1
  2424  00002C                     _USBActiveConfiguration:
  2425                           	opt stack 0
  2426  00002C                     	ds	1
  2427  00002D                     _USTATcopy:
  2428                           	opt stack 0
  2429  00002D                     	ds	1
  2430                           tblptru	equ	0xFF8
  2431                           tblptrh	equ	0xFF7
  2432                           tblptrl	equ	0xFF6
  2433                           tablat	equ	0xFF5
  2434                           postinc0	equ	0xFEE
  2435                           wreg	equ	0xFE8
  2436                           
  2437                           	psect	bssBANK0
  2438  000060                     __pbssBANK0:
  2439                           	opt stack 0
  2440  000060                     _responseData:
  2441                           	opt stack 0
  2442  000060                     	ds	8
  2443  000068                     _pBDTEntryOut:
  2444                           	opt stack 0
  2445  000068                     	ds	6
  2446  00006E                     service_pushbutton@PB_Timer:
  2447                           	opt stack 0
  2448  00006E                     	ds	4
  2449  000072                     _ep_data_in:
  2450                           	opt stack 0
  2451  000072                     	ds	3
  2452  000075                     _ep_data_out:
  2453                           	opt stack 0
  2454  000075                     	ds	3
  2455  000078                     _pCDCDst:
  2456                           	opt stack 0
  2457  000078                     	ds	3
  2458  00007B                     _pCDCSrc:
  2459                           	opt stack 0
  2460  00007B                     	ds	3
  2461  00007E                     _responsePortNum:
  2462                           	opt stack 0
  2463  00007E                     	ds	3
  2464  000081                     _CDCDataInHandle:
  2465                           	opt stack 0
  2466  000081                     	ds	2
  2467  000083                     _CDCDataOutHandle:
  2468                           	opt stack 0
  2469  000083                     	ds	2
  2470  000085                     _light:
  2471                           	opt stack 0
  2472  000085                     	ds	2
  2473  000087                     _pDst:
  2474                           	opt stack 0
  2475  000087                     	ds	2
  2476  000089                     _temperature:
  2477                           	opt stack 0
  2478  000089                     	ds	2
  2479  00008B                     _timer1ReloadVal:
  2480                           	opt stack 0
  2481  00008B                     	ds	2
  2482  00008D                     _timerMinTickCount:
  2483                           	opt stack 0
  2484  00008D                     	ds	2
  2485  00008F                     _timerMsTickCount:
  2486                           	opt stack 0
  2487  00008F                     	ds	2
  2488  000091                     moteJoiningProcess@mode:
  2489                           	opt stack 0
  2490  000091                     	ds	2
  2491  000093                     _BothEP0OutUOWNsSet:
  2492                           	opt stack 0
  2493  000093                     	ds	1
  2494  000094                     _USBBusIsSuspended:
  2495                           	opt stack 0
  2496  000094                     	ds	1
  2497  000095                     _USBDeferINDataStagePackets:
  2498                           	opt stack 0
  2499  000095                     	ds	1
  2500  000096                     _USBDeferOUTDataStagePackets:
  2501                           	opt stack 0
  2502  000096                     	ds	1
  2503  000097                     _USBDeviceState:
  2504                           	opt stack 0
  2505  000097                     	ds	1
  2506  000098                     _USBStatusStageEnabledFlag1:
  2507                           	opt stack 0
  2508  000098                     	ds	1
  2509  000099                     _USBStatusStageEnabledFlag2:
  2510                           	opt stack 0
  2511  000099                     	ds	1
  2512  00009A                     _activeState:
  2513                           	opt stack 0
  2514  00009A                     	ds	1
  2515  00009B                     _appTimer:
  2516                           	opt stack 0
  2517  00009B                     	ds	1
  2518  00009C                     _cdc_mem_type:
  2519                           	opt stack 0
  2520  00009C                     	ds	1
  2521  00009D                     _cdc_rx_len:
  2522                           	opt stack 0
  2523  00009D                     	ds	1
  2524  00009E                     _cdc_tx_len:
  2525                           	opt stack 0
  2526  00009E                     	ds	1
  2527  00009F                     _m10SecTicker:
  2528                           	opt stack 0
  2529  00009F                     	ds	1
  2530  0000A0                     _operationType:
  2531                           	opt stack 0
  2532  0000A0                     	ds	1
  2533  0000A1                     _randomPortNum:
  2534                           	opt stack 0
  2535  0000A1                     	ds	1
  2536  0000A2                     _runningState:
  2537                           	opt stack 0
  2538  0000A2                     	ds	1
  2539  0000A3                     _secTicker:
  2540                           	opt stack 0
  2541  0000A3                     	ds	1
  2542  0000A4                     _sleepTicker:
  2543                           	opt stack 0
  2544  0000A4                     	ds	1
  2545  0000A5                     _usbState:
  2546                           	opt stack 0
  2547  0000A5                     	ds	1
  2548  0000A6                     service_pushbutton@Release_Timer:
  2549                           	opt stack 0
  2550  0000A6                     	ds	1
  2551  0000A7                     _dataBuffer:
  2552                           	opt stack 0
  2553  0000A7                     	ds	12
  2554  0000B3                     _cdc_notice:
  2555                           	opt stack 0
  2556  0000B3                     	ds	10
  2557  0000BD                     _dummy_encapsulated_cmd_response:
  2558                           	opt stack 0
  2559  0000BD                     	ds	8
  2560  0000C5                     _line_coding:
  2561                           	opt stack 0
  2562  0000C5                     	ds	7
  2563  0000CC                     _USBAlternateInterface:
  2564                           	opt stack 0
  2565  0000CC                     	ds	2
  2566                           tblptru	equ	0xFF8
  2567                           tblptrh	equ	0xFF7
  2568                           tblptrl	equ	0xFF6
  2569                           tablat	equ	0xFF5
  2570                           postinc0	equ	0xFEE
  2571                           wreg	equ	0xFE8
  2572                           
  2573                           	psect	dataBANK0
  2574  0000F5                     __pdataBANK0:
  2575                           	opt stack 0
  2576  0000F5                     _selectedFont:
  2577                           	opt stack 0
  2578  0000F5                     	ds	2
  2579  0000F7                     _moteState:
  2580                           	opt stack 0
  2581  0000F7                     	ds	1
  2582                           tblptru	equ	0xFF8
  2583                           tblptrh	equ	0xFF7
  2584                           tblptrl	equ	0xFF6
  2585                           tablat	equ	0xFF5
  2586                           postinc0	equ	0xFEE
  2587                           wreg	equ	0xFE8
  2588                           
  2589                           	psect	bssBANK1
  2590  000100                     __pbssBANK1:
  2591                           	opt stack 0
  2592  000100                     _eusartRxBuffer:
  2593                           	opt stack 0
  2594  000100                     	ds	64
  2595  000140                     _responseId:
  2596                           	opt stack 0
  2597  000140                     	ds	16
  2598  000150                     _USB_Buffer:
  2599                           	opt stack 0
  2600  000150                     	ds	64
  2601  000190                     _modemResonseBuffer:
  2602                           	opt stack 0
  2603  000190                     	ds	64
  2604                           tblptru	equ	0xFF8
  2605                           tblptrh	equ	0xFF7
  2606                           tblptrl	equ	0xFF6
  2607                           tablat	equ	0xFF5
  2608                           postinc0	equ	0xFEE
  2609                           wreg	equ	0xFE8
  2610                           
  2611                           	psect	bssBANK2
  2612  000200                     __pbssBANK2:
  2613                           	opt stack 0
  2614  000200                     _eusartTxBuffer:
  2615                           	opt stack 0
  2616  000200                     	ds	64
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           postinc0	equ	0xFEE
  2622                           wreg	equ	0xFE8
  2623                           
  2624                           	psect	cstackBANK1
  2625  0001D0                     __pcstackBANK1:
  2626                           	opt stack 0
  2627  0001D0                     moteHandler@gotoSleep:
  2628                           	opt stack 0
  2629                           
  2630                           ; 1 bytes @ 0x0
  2631  0001D0                     	ds	1
  2632  0001D1                     moteHandler@gotoNextState:
  2633                           	opt stack 0
  2634                           
  2635                           ; 1 bytes @ 0x1
  2636  0001D1                     	ds	1
  2637  0001D2                     moteHandler@Traw:
  2638                           	opt stack 0
  2639                           
  2640                           ; 2 bytes @ 0x2
  2641  0001D2                     	ds	2
  2642  0001D4                     moteHandler@s2Button:
  2643                           	opt stack 0
  2644                           
  2645                           ; 1 bytes @ 0x4
  2646  0001D4                     	ds	1
  2647  0001D5                     moteHandler@buttonPress:
  2648                           	opt stack 0
  2649                           
  2650                           ; 1 bytes @ 0x5
  2651  0001D5                     	ds	1
  2652  0001D6                     moteHandler@i:
  2653                           	opt stack 0
  2654                           
  2655                           ; 1 bytes @ 0x6
  2656  0001D6                     	ds	1
  2657  0001D7                     moteHandler@i_1284:
  2658                           	opt stack 0
  2659                           
  2660                           ; 1 bytes @ 0x7
  2661  0001D7                     	ds	1
  2662  0001D8                     moteHandler@readMessage:
  2663                           	opt stack 0
  2664                           
  2665                           ; 1 bytes @ 0x8
  2666  0001D8                     	ds	1
  2667                           tblptru	equ	0xFF8
  2668                           tblptrh	equ	0xFF7
  2669                           tblptrl	equ	0xFF6
  2670                           tablat	equ	0xFF5
  2671                           postinc0	equ	0xFEE
  2672                           wreg	equ	0xFE8
  2673                           
  2674                           	psect	cstackBANK0
  2675  0000CE                     __pcstackBANK0:
  2676                           	opt stack 0
  2677  0000CE                     ??_TMR1_Initialize:
  2678  0000CE                     ?_ADC_GetConversion:
  2679                           	opt stack 0
  2680  0000CE                     ?_strncmp:
  2681                           	opt stack 0
  2682  0000CE                     ?_strcmp:
  2683                           	opt stack 0
  2684  0000CE                     ?_USBTransferOnePacket:
  2685                           	opt stack 0
  2686  0000CE                     ?___lwdiv:
  2687                           	opt stack 0
  2688  0000CE                     ?___lwmod:
  2689                           	opt stack 0
  2690  0000CE                     MOTEapp_handlerState@state:
  2691                           	opt stack 0
  2692  0000CE                     MOTEapp_TimerBasedTask@timerTask:
  2693                           	opt stack 0
  2694  0000CE                     hexToStr@character:
  2695                           	opt stack 0
  2696  0000CE                     moteApp_clearBuffers@counter:
  2697                           	opt stack 0
  2698  0000CE                     USBapp_handlerState@state:
  2699                           	opt stack 0
  2700  0000CE                     service_pushbutton@bs:
  2701                           	opt stack 0
  2702  0000CE                     EUSART_Read@readValue:
  2703                           	opt stack 0
  2704  0000CE                     EUSART_Write@txData:
  2705                           	opt stack 0
  2706  0000CE                     EUSART_FlushBuffer@index:
  2707                           	opt stack 0
  2708  0000CE                     SPI_Exchange8bit@data:
  2709                           	opt stack 0
  2710  0000CE                     DATAEE_WriteByte@bData:
  2711                           	opt stack 0
  2712  0000CE                     DATAEE_ReadByte@bAdd:
  2713                           	opt stack 0
  2714  0000CE                     TMR2_ReadTimer@readVal:
  2715                           	opt stack 0
  2716  0000CE                     USBTransferOnePacket@dir:
  2717                           	opt stack 0
  2718  0000CE                     ___lbdiv@divisor:
  2719                           	opt stack 0
  2720  0000CE                     ___lbmod@divisor:
  2721                           	opt stack 0
  2722  0000CE                     moteApp_delayms@length:
  2723                           	opt stack 0
  2724  0000CE                     oled_setFont@font:
  2725                           	opt stack 0
  2726  0000CE                     putUSBUSART@data:
  2727                           	opt stack 0
  2728  0000CE                     ___lwdiv@dividend:
  2729                           	opt stack 0
  2730  0000CE                     ___lwmod@dividend:
  2731                           	opt stack 0
  2732  0000CE                     memset@p1:
  2733                           	opt stack 0
  2734  0000CE                     strcmp@s1:
  2735                           	opt stack 0
  2736  0000CE                     strncmp@s1:
  2737                           	opt stack 0
  2738                           
  2739                           ; 2 bytes @ 0x0
  2740  0000CE                     	ds	1
  2741  0000CF                     MOTEapp_getModemResponse@terminatorReceived:
  2742                           	opt stack 0
  2743  0000CF                     moteApp_clearBuffers@counter_1498:
  2744                           	opt stack 0
  2745  0000CF                     oled_writeCommand@command:
  2746                           	opt stack 0
  2747  0000CF                     oled_writeData@data:
  2748                           	opt stack 0
  2749  0000CF                     DATAEE_WriteByte@bAdd:
  2750                           	opt stack 0
  2751  0000CF                     ___lbdiv@dividend:
  2752                           	opt stack 0
  2753  0000CF                     ___lbmod@dividend:
  2754                           	opt stack 0
  2755  0000CF                     sendCommand@string:
  2756                           	opt stack 0
  2757  0000CF                     sendDataCommand@string:
  2758                           	opt stack 0
  2759  0000CF                     USBTransferOnePacket@data:
  2760                           	opt stack 0
  2761                           
  2762                           ; 2 bytes @ 0x1
  2763  0000CF                     	ds	1
  2764  0000D0                     ??_moteApp_delayms:
  2765  0000D0                     ??_ADC_GetConversion:
  2766  0000D0                     ??_oled_devInit:
  2767  0000D0                     MOTEapp_getModemResponse@bufferByte:
  2768                           	opt stack 0
  2769  0000D0                     moteApp_clearBuffers@counter_1499:
  2770                           	opt stack 0
  2771  0000D0                     Set_Page_Address@address:
  2772                           	opt stack 0
  2773  0000D0                     Set_Column_Address@address:
  2774                           	opt stack 0
  2775  0000D0                     oled_setDisplay@displayType:
  2776                           	opt stack 0
  2777  0000D0                     oled_displayOff@state:
  2778                           	opt stack 0
  2779  0000D0                     DATAEE_WriteByte@GIEBitValue:
  2780                           	opt stack 0
  2781  0000D0                     putUSBUSART@length:
  2782                           	opt stack 0
  2783  0000D0                     ___lbdiv@counter:
  2784                           	opt stack 0
  2785  0000D0                     ___lbmod@counter:
  2786                           	opt stack 0
  2787  0000D0                     ___lwdiv@divisor:
  2788                           	opt stack 0
  2789  0000D0                     ___lwmod@divisor:
  2790                           	opt stack 0
  2791  0000D0                     memset@c:
  2792                           	opt stack 0
  2793  0000D0                     strcmp@s2:
  2794                           	opt stack 0
  2795  0000D0                     strncmp@s2:
  2796                           	opt stack 0
  2797                           
  2798                           ; 2 bytes @ 0x2
  2799  0000D0                     	ds	1
  2800  0000D1                     sendDataCommand@appData:
  2801                           	opt stack 0
  2802  0000D1                     oled_putChar@station_dot:
  2803                           	opt stack 0
  2804  0000D1                     USBTransferOnePacket@len:
  2805                           	opt stack 0
  2806  0000D1                     ___lbdiv@quotient:
  2807                           	opt stack 0
  2808  0000D1                     ___lbmod@rem:
  2809                           	opt stack 0
  2810  0000D1                     moteApp_delayms@counter:
  2811                           	opt stack 0
  2812                           
  2813                           ; 2 bytes @ 0x3
  2814  0000D1                     	ds	1
  2815  0000D2                     ??_strcmp:
  2816  0000D2                     sendDataCommand@dataLength:
  2817                           	opt stack 0
  2818  0000D2                     moteApp_add8bToDataBuffer@bufferLocation:
  2819                           	opt stack 0
  2820  0000D2                     oled_putChar@start_page:
  2821                           	opt stack 0
  2822  0000D2                     ADC_GetConversion@channel:
  2823                           	opt stack 0
  2824  0000D2                     USBTransferOnePacket@ep:
  2825                           	opt stack 0
  2826  0000D2                     ___lwdiv@counter:
  2827                           	opt stack 0
  2828  0000D2                     ___lwmod@counter:
  2829                           	opt stack 0
  2830  0000D2                     memset@n:
  2831                           	opt stack 0
  2832  0000D2                     strncmp@len:
  2833                           	opt stack 0
  2834                           
  2835                           ; 2 bytes @ 0x4
  2836  0000D2                     	ds	1
  2837  0000D3                     ??_oled_putChar:
  2838  0000D3                     ??_sendDataCommand:
  2839  0000D3                     moteApp_add8bToDataBuffer@number:
  2840                           	opt stack 0
  2841  0000D3                     modemResync@escapeCounter:
  2842                           	opt stack 0
  2843  0000D3                     USBTransferOnePacket@handle:
  2844                           	opt stack 0
  2845  0000D3                     ___lwdiv@quotient:
  2846                           	opt stack 0
  2847                           
  2848                           ; 2 bytes @ 0x5
  2849  0000D3                     	ds	1
  2850  0000D4                     ??_strncmp:
  2851  0000D4                     sendDataCommand@byteCount:
  2852                           	opt stack 0
  2853  0000D4                     strcmp@t0:
  2854                           	opt stack 0
  2855  0000D4                     memset@p:
  2856                           	opt stack 0
  2857                           
  2858                           ; 2 bytes @ 0x6
  2859  0000D4                     	ds	1
  2860  0000D5                     modemResync@escapeEvent:
  2861                           	opt stack 0
  2862  0000D5                     sendDataCommand@byteCount_1431:
  2863                           	opt stack 0
  2864  0000D5                     ADC_TempConversion@tempRaw:
  2865                           	opt stack 0
  2866  0000D5                     strcmp@t2:
  2867                           	opt stack 0
  2868  0000D5                     moteApp_add16bToDataBuffer@number:
  2869                           	opt stack 0
  2870  0000D5                     getsUSBUSART@buffer:
  2871                           	opt stack 0
  2872  0000D5                     _CDCTxService$5553:
  2873                           	opt stack 0
  2874                           
  2875                           ; 2 bytes @ 0x7
  2876  0000D5                     	ds	1
  2877  0000D6                     ADC_TempConversion@temp:
  2878                           	opt stack 0
  2879  0000D6                     USBDeviceInit@i:
  2880                           	opt stack 0
  2881  0000D6                     strcmp@t1:
  2882                           	opt stack 0
  2883                           
  2884                           ; 1 bytes @ 0x8
  2885  0000D6                     	ds	1
  2886  0000D7                     moteApp_add16bToDataBuffer@bufferLocation:
  2887                           	opt stack 0
  2888  0000D7                     getsUSBUSART@len:
  2889                           	opt stack 0
  2890  0000D7                     CDCTxService@i:
  2891                           	opt stack 0
  2892                           
  2893                           ; 1 bytes @ 0x9
  2894  0000D7                     	ds	1
  2895  0000D8                     CDCTxService@byte_to_send:
  2896                           	opt stack 0
  2897                           
  2898                           ; 1 bytes @ 0xA
  2899  0000D8                     	ds	1
  2900  0000D9                     oled_putChar@k:
  2901                           	opt stack 0
  2902  0000D9                     _getsUSBUSART$5505:
  2903                           	opt stack 0
  2904                           
  2905                           ; 2 bytes @ 0xB
  2906  0000D9                     	ds	1
  2907  0000DA                     oled_putChar@index:
  2908                           	opt stack 0
  2909                           
  2910                           ; 1 bytes @ 0xC
  2911  0000DA                     	ds	1
  2912  0000DB                     ??_USBapp_DeviceCdcEmulatorHandler:
  2913  0000DB                     oled_clearRow@page:
  2914                           	opt stack 0
  2915  0000DB                     oled_putString@string:
  2916                           	opt stack 0
  2917                           
  2918                           ; 2 bytes @ 0xD
  2919  0000DB                     	ds	1
  2920  0000DC                     oled_clearRow@index:
  2921                           	opt stack 0
  2922                           
  2923                           ; 1 bytes @ 0xE
  2924  0000DC                     	ds	1
  2925  0000DD                     oled_putString@station_dot:
  2926                           	opt stack 0
  2927                           
  2928                           ; 1 bytes @ 0xF
  2929  0000DD                     	ds	1
  2930  0000DE                     oled_putString@start_page:
  2931                           	opt stack 0
  2932                           
  2933                           ; 1 bytes @ 0x10
  2934  0000DE                     	ds	1
  2935  0000DF                     oled_putString@index:
  2936                           	opt stack 0
  2937                           
  2938                           ; 1 bytes @ 0x11
  2939  0000DF                     	ds	1
  2940  0000E0                     moteJoiningProcess@switchEvent:
  2941                           	opt stack 0
  2942  0000E0                     oled_putUint8@station_dot:
  2943                           	opt stack 0
  2944  0000E0                     oled_putUint16@number:
  2945                           	opt stack 0
  2946                           
  2947                           ; 2 bytes @ 0x12
  2948  0000E0                     	ds	1
  2949  0000E1                     moteJoiningProcess@joiningComplete:
  2950                           	opt stack 0
  2951  0000E1                     oled_putUint8@start_page:
  2952                           	opt stack 0
  2953                           
  2954                           ; 1 bytes @ 0x13
  2955  0000E1                     	ds	1
  2956  0000E2                     moteJoiningProcess@messageReady:
  2957                           	opt stack 0
  2958  0000E2                     oled_putUint8@number:
  2959                           	opt stack 0
  2960  0000E2                     oled_putUint16@station_dot:
  2961                           	opt stack 0
  2962                           
  2963                           ; 1 bytes @ 0x14
  2964  0000E2                     	ds	1
  2965  0000E3                     oled_putUint16@start_page:
  2966                           	opt stack 0
  2967  0000E3                     oled_putUint8@numData:
  2968                           	opt stack 0
  2969                           
  2970                           ; 6 bytes @ 0x15
  2971  0000E3                     	ds	1
  2972  0000E4                     oled_putUint16@numData:
  2973                           	opt stack 0
  2974                           
  2975                           ; 6 bytes @ 0x16
  2976  0000E4                     	ds	6
  2977  0000EA                     moteRunningProcess@selectButton:
  2978                           	opt stack 0
  2979                           
  2980                           ; 1 bytes @ 0x1C
  2981  0000EA                     	ds	1
  2982  0000EB                     moteRunningProcess@messageReady:
  2983                           	opt stack 0
  2984                           
  2985                           ; 1 bytes @ 0x1D
  2986  0000EB                     	ds	1
  2987  0000EC                     moteRunningProcess@sleepEvent:
  2988                           	opt stack 0
  2989                           
  2990                           ; 1 bytes @ 0x1E
  2991  0000EC                     	ds	1
  2992  0000ED                     ??_moteRunningProcess:
  2993                           
  2994                           ; 1 bytes @ 0x1F
  2995  0000ED                     	ds	2
  2996  0000EF                     moteRunningProcess@Traw:
  2997                           	opt stack 0
  2998                           
  2999                           ; 2 bytes @ 0x21
  3000  0000EF                     	ds	2
  3001  0000F1                     moteRunningProcess@i:
  3002                           	opt stack 0
  3003                           
  3004                           ; 1 bytes @ 0x23
  3005  0000F1                     	ds	1
  3006  0000F2                     moteRunningProcess@i_1373:
  3007                           	opt stack 0
  3008                           
  3009                           ; 1 bytes @ 0x24
  3010  0000F2                     	ds	1
  3011  0000F3                     ??_moteHandler:
  3012                           
  3013                           ; 1 bytes @ 0x25
  3014  0000F3                     	ds	2
  3015  0000F5                     tblptru	equ	0xFF8
  3016                           tblptrh	equ	0xFF7
  3017                           tblptrl	equ	0xFF6
  3018                           tablat	equ	0xFF5
  3019                           postinc0	equ	0xFEE
  3020                           wreg	equ	0xFE8
  3021                           
  3022                           ; 1 bytes @ 0x27
  3023                           
  3024                           	psect	cstackCOMRAM
  3025  00002E                     __pcstackCOMRAM:
  3026                           	opt stack 0
  3027  00002E                     ??_USBStdGetDscHandler:
  3028  00002E                     ?i2_USBTransferOnePacket:
  3029                           	opt stack 0
  3030  00002E                     ?___lldiv:
  3031                           	opt stack 0
  3032  00002E                     USBConfigureEndpoint@direction:
  3033                           	opt stack 0
  3034  00002E                     USBCtrlTrfTxService@byteToSend:
  3035                           	opt stack 0
  3036  00002E                     i2USBTransferOnePacket@dir:
  3037                           	opt stack 0
  3038  00002E                     USBStdGetStatusHandler@p:
  3039                           	opt stack 0
  3040  00002E                     i2memset@p1:
  3041                           	opt stack 0
  3042  00002E                     ___lldiv@dividend:
  3043                           	opt stack 0
  3044                           
  3045                           ; 4 bytes @ 0x0
  3046  00002E                     	ds	1
  3047  00002F                     ??_USBConfigureEndpoint:
  3048  00002F                     i2USBTransferOnePacket@data:
  3049                           	opt stack 0
  3050                           
  3051                           ; 2 bytes @ 0x1
  3052  00002F                     	ds	1
  3053  000030                     i2memset@c:
  3054                           	opt stack 0
  3055                           
  3056                           ; 2 bytes @ 0x2
  3057  000030                     	ds	1
  3058  000031                     i2USBTransferOnePacket@len:
  3059                           	opt stack 0
  3060                           
  3061                           ; 1 bytes @ 0x3
  3062  000031                     	ds	1
  3063  000032                     i2USBTransferOnePacket@ep:
  3064                           	opt stack 0
  3065  000032                     i2memset@n:
  3066                           	opt stack 0
  3067  000032                     ___lldiv@divisor:
  3068                           	opt stack 0
  3069                           
  3070                           ; 4 bytes @ 0x4
  3071  000032                     	ds	1
  3072  000033                     USBConfigureEndpoint@EPNum:
  3073                           	opt stack 0
  3074  000033                     i2USBTransferOnePacket@handle:
  3075                           	opt stack 0
  3076                           
  3077                           ; 2 bytes @ 0x5
  3078  000033                     	ds	1
  3079  000034                     USBConfigureEndpoint@handle:
  3080                           	opt stack 0
  3081  000034                     i2memset@p:
  3082                           	opt stack 0
  3083                           
  3084                           ; 2 bytes @ 0x6
  3085  000034                     	ds	2
  3086  000036                     USBEnableEndpoint@options:
  3087                           	opt stack 0
  3088  000036                     i2USBDeviceInit@i:
  3089                           	opt stack 0
  3090  000036                     ___lldiv@quotient:
  3091                           	opt stack 0
  3092                           
  3093                           ; 4 bytes @ 0x8
  3094  000036                     	ds	1
  3095  000037                     USBEnableEndpoint@p:
  3096                           	opt stack 0
  3097                           
  3098                           ; 2 bytes @ 0x9
  3099  000037                     	ds	2
  3100  000039                     USBEnableEndpoint@ep:
  3101                           	opt stack 0
  3102                           
  3103                           ; 1 bytes @ 0xB
  3104  000039                     	ds	1
  3105  00003A                     USBapp_CdcEmulatorInitialize@i:
  3106                           	opt stack 0
  3107  00003A                     ___lldiv@counter:
  3108                           	opt stack 0
  3109                           
  3110                           ; 1 bytes @ 0xC
  3111  00003A                     	ds	1
  3112  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3113                           	opt stack 0
  3114  00003B                     USART_mySetLineCodingHandler@dwBaud:
  3115                           	opt stack 0
  3116                           
  3117                           ; 4 bytes @ 0xD
  3118  00003B                     	ds	2
  3119  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3120                           	opt stack 0
  3121                           
  3122                           ; 2 bytes @ 0xF
  3123  00003D                     	ds	2
  3124  00003F                     USBCtrlTrfRxService@i:
  3125                           	opt stack 0
  3126  00003F                     USBCtrlTrfInHandler@lastDTS:
  3127                           	opt stack 0
  3128  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3129                           	opt stack 0
  3130                           
  3131                           ; 2 bytes @ 0x11
  3132  00003F                     	ds	1
  3133  000040                     USBCtrlTrfRxService@byteToRead:
  3134                           	opt stack 0
  3135                           
  3136                           ; 1 bytes @ 0x12
  3137  000040                     	ds	1
  3138  000041                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3139                           
  3140                           ; 1 bytes @ 0x13
  3141  000041                     	ds	2
  3142  000043                     ??_USBStdFeatureReqHandler:
  3143  000043                     USBStdSetCfgHandler@i:
  3144                           	opt stack 0
  3145                           
  3146                           ; 1 bytes @ 0x15
  3147  000043                     	ds	2
  3148  000045                     USBStdFeatureReqHandler@pUEP:
  3149                           	opt stack 0
  3150                           
  3151                           ; 2 bytes @ 0x17
  3152  000045                     	ds	2
  3153  000047                     USBStdFeatureReqHandler@current_ep_data:
  3154                           	opt stack 0
  3155                           
  3156                           ; 1 bytes @ 0x19
  3157  000047                     	ds	1
  3158  000048                     USBStdFeatureReqHandler@p:
  3159                           	opt stack 0
  3160                           
  3161                           ; 2 bytes @ 0x1A
  3162  000048                     	ds	2
  3163  00004A                     ??_USBCheckStdRequest:
  3164                           
  3165                           ; 1 bytes @ 0x1C
  3166  00004A                     	ds	1
  3167  00004B                     ??_USBCtrlEPService:
  3168  00004B                     
  3169                           ; 1 bytes @ 0x1D
  3170  00004B                     	ds	2
  3171  00004D                     USBCtrlEPService@setup_cnt:
  3172                           	opt stack 0
  3173                           
  3174                           ; 1 bytes @ 0x1F
  3175  00004D                     	ds	1
  3176  00004E                     USBDeviceTasks@i:
  3177                           	opt stack 0
  3178                           
  3179                           ; 1 bytes @ 0x20
  3180  00004E                     	ds	1
  3181  00004F                     ??_INTERRUPT_InterruptManager:
  3182                           
  3183                           ; 1 bytes @ 0x21
  3184  00004F                     	ds	12
  3185                           tblptru	equ	0xFF8
  3186                           tblptrh	equ	0xFF7
  3187                           tblptrl	equ	0xFF6
  3188                           tablat	equ	0xFF5
  3189                           postinc0	equ	0xFEE
  3190                           wreg	equ	0xFE8
  3191                           
  3192 ;;
  3193 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3194 ;;
  3195 ;; *************** function _main *****************
  3196 ;; Defined at:
  3197 ;;		line 55 in file "main.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : F/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels required when called:   21
  3217 ;; This function calls:
  3218 ;;		_DATAEE_ReadByte
  3219 ;;		_MOTEapp_handlerState
  3220 ;;		_SYSTEM_Initialize
  3221 ;;		_USBDeviceAttach
  3222 ;;		_USBDeviceInit
  3223 ;;		_USBapp_Handler
  3224 ;;		_USBapp_handlerState
  3225 ;;		_modemResync
  3226 ;;		_moteApp_delayms
  3227 ;;		_moteHandler
  3228 ;;		_oled_clear
  3229 ;;		_oled_init
  3230 ;;		_oled_putString
  3231 ;; This function is called by:
  3232 ;;		Startup code after reset
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text0
  3237  005FB0                     __ptext0:
  3238                           	opt stack 0
  3239  005FB0                     _main:
  3240                           	opt stack 10
  3241                           
  3242                           ;main.c: 58: SYSTEM_Initialize();
  3243                           
  3244                           ;incstack = 0
  3245  005FB0  EC08  F026         	call	_SYSTEM_Initialize	;wreg free
  3246                           
  3247                           ;main.c: 73: oled_init();
  3248  005FB4  EC3A  F026         	call	_oled_init	;wreg free
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;main.c: 74: USBDeviceInit();
  3252  005FB8  EC5B  F031         	call	_USBDeviceInit	;wreg free
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;main.c: 80: USBDeviceAttach();
  3256  005FBC  EC2F  F027         	call	_USBDeviceAttach	;wreg free
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;main.c: 82: PEIE = 1;
  3260  005FC0  8CF2               	bsf	intcon,6,c	;volatile
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;main.c: 83: GIE = 1;
  3264  005FC2  8EF2               	bsf	intcon,7,c	;volatile
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;main.c: 86: moteApp_delayms(300);
  3268  005FC4  0E01               	movlw	1
  3269  005FC6  6FCF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3270  005FC8  0E2C               	movlw	44
  3271  005FCA  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  3272  005FCC  EC86  F026         	call	_moteApp_delayms	;wreg free
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;main.c: 87: modemResync();
  3276  005FD0  EC82  F02A         	call	_modemResync	;wreg free
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;main.c: 88: moteApp_delayms(300);
  3280  005FD4  0E01               	movlw	1
  3281  005FD6  6FCF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3282  005FD8  0E2C               	movlw	44
  3283  005FDA  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  3284  005FDC  EC86  F026         	call	_moteApp_delayms	;wreg free
  3285                           
  3286                           ;main.c: 92: powerOnStatus = DATAEE_ReadByte(0x00);
  3287  005FE0  0E00               	movlw	0
  3288  005FE2  EC7F  F025         	call	_DATAEE_ReadByte
  3289                           
  3290                           ;main.c: 102: operationType = USB;
  3291  005FE6  0100               	movlb	0	; () banked
  3292  005FE8  6BA0               	clrf	_operationType& (0+255),b
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;main.c: 103: USBapp_handlerState(USB_STARTUP);
  3296  005FEA  0E00               	movlw	0
  3297  005FEC  EC26  F025         	call	_USBapp_handlerState
  3298                           
  3299                           ;main.c: 108: oled_clear();
  3300  005FF0  ECB3  F025         	call	_oled_clear	;wreg free
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;main.c: 109: oled_putString("MENCO-LOREX   ",0,0);
  3304  005FF4  0ED2               	movlw	low STR_1
  3305  005FF6  6FDB               	movwf	oled_putString@string& (0+255),b
  3306  005FF8  0E7D               	movlw	high STR_1
  3307  005FFA  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  3308  005FFC  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  3309  005FFE  6BDE               	clrf	oled_putString@start_page& (0+255),b
  3310  006000  ECB4  F02A         	call	_oled_putString	;wreg free
  3311                           
  3312                           ;main.c: 110: oled_putString("  CW MODE     ",0,1);
  3313  006004  0EC3               	movlw	low STR_2
  3314  006006  0100               	movlb	0	; () banked
  3315  006008  6FDB               	movwf	oled_putString@string& (0+255),b
  3316  00600A  0E7D               	movlw	high STR_2
  3317  00600C  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  3318  00600E  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  3319  006010  0E01               	movlw	1
  3320  006012  6FDE               	movwf	oled_putString@start_page& (0+255),b
  3321  006014  ECB4  F02A         	call	_oled_putString	;wreg free
  3322                           
  3323                           ;main.c: 111: oled_putString("   Build CW-1 ",0,3);
  3324  006018  0EE1               	movlw	low STR_3
  3325  00601A  0100               	movlb	0	; () banked
  3326  00601C  6FDB               	movwf	oled_putString@string& (0+255),b
  3327  00601E  0E7D               	movlw	high STR_3
  3328  006020  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  3329  006022  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  3330  006024  0E03               	movlw	3
  3331  006026  6FDE               	movwf	oled_putString@start_page& (0+255),b
  3332  006028  ECB4  F02A         	call	_oled_putString	;wreg free
  3333                           
  3334                           ;main.c: 112: moteApp_delayms(700);
  3335  00602C  0E02               	movlw	2
  3336  00602E  0100               	movlb	0	; () banked
  3337  006030  6FCF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3338  006032  0EBC               	movlw	188
  3339  006034  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  3340  006036  EC86  F026         	call	_moteApp_delayms	;wreg free
  3341  00603A  D011               	goto	l9571
  3342  00603C                     l50:
  3343  00603C  D7FF               	goto	l50
  3344  00603E                     l9557:
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;main.c: 124: USBapp_Handler();
  3348  00603E  ECC7  F02B         	call	_USBapp_Handler	;wreg free
  3349                           
  3350                           ;main.c: 126: operationType = MOTE;
  3351  006042  0E01               	movlw	1
  3352  006044  0100               	movlb	0	; () banked
  3353  006046  6FA0               	movwf	_operationType& (0+255),b
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;main.c: 127: MOTEapp_handlerState(MOTE_STARTUP);
  3357  006048  EC22  F025         	call	_MOTEapp_handlerState
  3358                           
  3359                           ;main.c: 128: break;
  3360  00604C  D008               	goto	l9571
  3361  00604E                     l9563:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;main.c: 130: if (moteHandler() == MOTE_SWAP)
  3365  00604E  EC52  F037         	call	_moteHandler	;wreg free
  3366  006052  0A04               	xorlw	4
  3367  006054  E104               	bnz	l9571
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;main.c: 131: {
  3371                           ;main.c: 133: operationType = USB;
  3372  006056  6BA0               	clrf	_operationType& (0+255),b
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;main.c: 134: USBapp_handlerState(USB_STARTUP);
  3376  006058  0E00               	movlw	0
  3377  00605A  EC26  F025         	call	_USBapp_handlerState
  3378  00605E                     l9571:
  3379  00605E  0100               	movlb	0	; () banked
  3380  006060  51A0               	movf	_operationType& (0+255),w,b
  3381                           
  3382                           ; Switch size 1, requested type "speed"
  3383                           ; Number of cases is 2, Range of values is 0 to 1
  3384                           ; switch strategies available:
  3385                           ; Name         Instructions Cycles
  3386                           ; simple_byte            7     4 (average)
  3387                           ;	Chosen strategy is simple_byte
  3388  006062  E0ED               	bz	l9557
  3389  006064  0A01               	xorlw	1	; case 1
  3390  006066  E0F3               	bz	l9563
  3391  006068  D7E9               	goto	l50
  3392  00606A                     __end_of_main:
  3393                           	opt stack 0
  3394                           tblptru	equ	0xFF8
  3395                           tblptrh	equ	0xFF7
  3396                           tblptrl	equ	0xFF6
  3397                           tablat	equ	0xFF5
  3398                           intcon	equ	0xFF2
  3399                           postinc0	equ	0xFEE
  3400                           wreg	equ	0xFE8
  3401                           
  3402 ;; *************** function _moteHandler *****************
  3403 ;; Defined at:
  3404 ;;		line 173 in file "../Includes/Board/MOTEapp.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  i               1    7[BANK1 ] unsigned char 
  3409 ;;  i               1    6[BANK1 ] unsigned char 
  3410 ;;  Traw            2    2[BANK1 ] unsigned int 
  3411 ;;  readMessage     1    8[BANK1 ] unsigned char 
  3412 ;;  buttonPress     1    5[BANK1 ] enum E6327
  3413 ;;  s2Button        1    4[BANK1 ] unsigned char 
  3414 ;;  gotoNextStat    1    1[BANK1 ] unsigned char 
  3415 ;;  gotoSleep       1    0[BANK1 ] unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      enum E7241
  3418 ;; Registers used:
  3419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : F/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3425 ;;      Params:         0       0       0       0       0       0       0       0       0
  3426 ;;      Locals:         0       0       9       0       0       0       0       0       0
  3427 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3428 ;;      Totals:         0       2       9       0       0       0       0       0       0
  3429 ;;Total ram usage:       11 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; Hardware stack levels required when called:   20
  3432 ;; This function calls:
  3433 ;;		_ADC_GetConversion
  3434 ;;		_ADC_TempConversion
  3435 ;;		_MOTEapp_TimerBasedTask
  3436 ;;		_MOTEapp_getModemResponse
  3437 ;;		_TMRapp_ClearBitFlags
  3438 ;;		_TMRapp_Handler
  3439 ;;		_moteApp_delayms
  3440 ;;		_moteJoiningProcess
  3441 ;;		_moteRunningProcess
  3442 ;;		_oled_clear
  3443 ;;		_oled_putString
  3444 ;;		_service_pushbutton
  3445 ;; This function is called by:
  3446 ;;		_main
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450                           	psect	text1
  3451  006EA4                     __ptext1:
  3452                           	opt stack 0
  3453  006EA4                     _moteHandler:
  3454                           	opt stack 10
  3455                           
  3456                           ;MOTEapp.c: 175: bool gotoSleep = 0;
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;incstack = 0
  3460  006EA4  0101               	movlb	1	; () banked
  3461  006EA6  6BD0               	clrf	moteHandler@gotoSleep& (0+255),b
  3462                           
  3463                           ;MOTEapp.c: 176: bool gotoNextState = 0;
  3464  006EA8  6BD1               	clrf	moteHandler@gotoNextState& (0+255),b
  3465                           
  3466                           ;MOTEapp.c: 177: bool s2Button = 0;
  3467  006EAA  6BD4               	clrf	moteHandler@s2Button& (0+255),b
  3468                           
  3469                           ; BSR set to: 1
  3470                           ;MOTEapp.c: 185: if (PORTAbits.RA0)
  3471                           
  3472                           ; BSR set to: 1
  3473  006EAC  A080               	btfss	3968,0,c	;volatile
  3474  006EAE  D003               	goto	l9417
  3475                           
  3476                           ; BSR set to: 1
  3477                           ;MOTEapp.c: 186: moteState = MOTE_SWAP;
  3478  006EB0  0E04               	movlw	4
  3479  006EB2  0100               	movlb	0	; () banked
  3480  006EB4  6FF7               	movwf	_moteState& (0+255),b
  3481  006EB6                     l9417:
  3482                           
  3483                           ;MOTEapp.c: 189: if ( appTimer.mSecTick )
  3484  006EB6  0100               	movlb	0	; () banked
  3485  006EB8  A19B               	btfss	_appTimer& (0+255),0,b
  3486  006EBA  D007               	goto	l9425
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;MOTEapp.c: 190: {
  3490                           ;MOTEapp.c: 192: TMRapp_ClearBitFlags();
  3491  006EBC  EC1A  F025         	call	_TMRapp_ClearBitFlags	;wreg free
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;MOTEapp.c: 194: TMRapp_Handler();
  3495  006EC0  EC9E  F032         	call	_TMRapp_Handler	;wreg free
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;MOTEapp.c: 195: MOTEapp_TimerBasedTask(appTimer);
  3499  006EC4  519B               	movf	_appTimer& (0+255),w,b
  3500  006EC6  EC4D  F025         	call	_MOTEapp_TimerBasedTask
  3501  006ECA                     l9425:
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;MOTEapp.c: 196: }
  3505                           ;MOTEapp.c: 199: buttonPress = service_pushbutton();
  3506  006ECA  ECFF  F028         	call	_service_pushbutton	;wreg free
  3507  006ECE  0101               	movlb	1	; () banked
  3508  006ED0  6FD5               	movwf	moteHandler@buttonPress& (0+255),b
  3509                           
  3510                           ;MOTEapp.c: 200: if (buttonPress == ShortPress1)
  3511  006ED2  05D5               	decf	moteHandler@buttonPress& (0+255),w,b
  3512  006ED4  E106               	bnz	l9431
  3513                           
  3514                           ; BSR set to: 1
  3515                           ;MOTEapp.c: 201: {
  3516                           ;MOTEapp.c: 202: secTicker = 0;
  3517  006ED6  0100               	movlb	0	; () banked
  3518  006ED8  6BA3               	clrf	_secTicker& (0+255),b
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;MOTEapp.c: 203: gotoNextState = 1;
  3522  006EDA  0E01               	movlw	1
  3523  006EDC  0101               	movlb	1	; () banked
  3524  006EDE  6FD1               	movwf	moteHandler@gotoNextState& (0+255),b
  3525                           
  3526                           ;MOTEapp.c: 204: }
  3527  006EE0  D008               	goto	l9437
  3528  006EE2                     l9431:
  3529                           
  3530                           ; BSR set to: 1
  3531                           ;MOTEapp.c: 205: else if (buttonPress == ShortPress2)
  3532  006EE2  0E02               	movlw	2
  3533  006EE4  19D5               	xorwf	moteHandler@buttonPress& (0+255),w,b
  3534  006EE6  E105               	bnz	l9437
  3535                           
  3536                           ; BSR set to: 1
  3537                           ;MOTEapp.c: 206: {
  3538                           ;MOTEapp.c: 207: secTicker = 0;
  3539  006EE8  0100               	movlb	0	; () banked
  3540  006EEA  6BA3               	clrf	_secTicker& (0+255),b
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;MOTEapp.c: 208: s2Button = 1;
  3544  006EEC  0E01               	movlw	1
  3545  006EEE  0101               	movlb	1	; () banked
  3546  006EF0  6FD4               	movwf	moteHandler@s2Button& (0+255),b
  3547  006EF2                     l9437:
  3548                           
  3549                           ; BSR set to: 1
  3550                           ;MOTEapp.c: 209: }
  3551                           ;MOTEapp.c: 212: if ( MOTEapp_getModemResponse() )
  3552  006EF2  ECDA  F028         	call	_MOTEapp_getModemResponse	;wreg free
  3553  006EF6  0900               	iorlw	0
  3554  006EF8  E004               	bz	l318
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;MOTEapp.c: 213: readMessage = 1;
  3558  006EFA  0E01               	movlw	1
  3559  006EFC  0101               	movlb	1	; () banked
  3560  006EFE  6FD8               	movwf	moteHandler@readMessage& (0+255),b
  3561  006F00  D002               	goto	l9441
  3562  006F02                     l318:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;MOTEapp.c: 214: else
  3566                           ;MOTEapp.c: 215: readMessage = 0;
  3567  006F02  0101               	movlb	1	; () banked
  3568  006F04  6BD8               	clrf	moteHandler@readMessage& (0+255),b
  3569  006F06                     l9441:
  3570                           
  3571                           ; BSR set to: 1
  3572                           ;MOTEapp.c: 218: if ( (runningState == runningUplink) || (runningState == runningSensorM
      +                          enu) )
  3573  006F06  0E06               	movlw	6
  3574  006F08  0100               	movlb	0	; () banked
  3575  006F0A  19A2               	xorwf	_runningState& (0+255),w,b
  3576  006F0C  E003               	bz	l9445
  3577                           
  3578                           ; BSR set to: 0
  3579  006F0E  0E02               	movlw	2
  3580  006F10  19A2               	xorwf	_runningState& (0+255),w,b
  3581  006F12  E146               	bnz	l9481
  3582  006F14                     l9445:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;MOTEapp.c: 219: {
  3586                           ;MOTEapp.c: 221: if (m10SecTicker >= 5)
  3587  006F14  0E04               	movlw	4
  3588  006F16  659F               	cpfsgt	_m10SecTicker& (0+255),b
  3589  006F18  D043               	goto	l9481
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;MOTEapp.c: 222: {
  3593                           ;MOTEapp.c: 223: uint16_t Traw = 0;
  3594  006F1A  0101               	movlb	1	; () banked
  3595  006F1C  6BD2               	clrf	moteHandler@Traw& (0+255),b
  3596  006F1E  6BD3               	clrf	(moteHandler@Traw+1)& (0+255),b
  3597                           
  3598                           ; BSR set to: 1
  3599                           ;MOTEapp.c: 224: moteApp_delayms(10);
  3600  006F20  0100               	movlb	0	; () banked
  3601  006F22  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  3602  006F24  0E0A               	movlw	10
  3603  006F26  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  3604  006F28  EC86  F026         	call	_moteApp_delayms	;wreg free
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;MOTEapp.c: 225: for(uint8_t i = 32; i>0; i--)
  3608  006F2C  0E20               	movlw	32
  3609  006F2E  0101               	movlb	1	; () banked
  3610  006F30  6FD6               	movwf	moteHandler@i& (0+255),b
  3611  006F32                     l9457:
  3612                           
  3613                           ; BSR set to: 1
  3614                           ;MOTEapp.c: 226: {
  3615                           ;MOTEapp.c: 227: light = (light + ADC_GetConversion(Light_channel)) / 2;
  3616  006F32  0E03               	movlw	3
  3617  006F34  EC13  F028         	call	_ADC_GetConversion
  3618  006F38  5185               	movf	_light& (0+255),w,b
  3619  006F3A  27CE               	addwf	?_ADC_GetConversion& (0+255),f,b
  3620  006F3C  5186               	movf	(_light+1)& (0+255),w,b
  3621  006F3E  23CF               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  3622  006F40  90D8               	bcf	status,0,c
  3623  006F42  31CF               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  3624  006F44  6FF3               	movwf	??_moteHandler& (0+255),b
  3625  006F46  31CE               	rrcf	?_ADC_GetConversion& (0+255),w,b
  3626  006F48  6F85               	movwf	_light& (0+255),b
  3627  006F4A  C0F3  F086         	movff	??_moteHandler,_light+1
  3628                           
  3629                           ; BSR set to: 0
  3630  006F4E  0101               	movlb	1	; () banked
  3631  006F50  07D6               	decf	moteHandler@i& (0+255),f,b
  3632                           
  3633                           ; BSR set to: 1
  3634  006F52  51D6               	movf	moteHandler@i& (0+255),w,b
  3635  006F54  E1EE               	bnz	l9457
  3636                           
  3637                           ; BSR set to: 1
  3638                           ;MOTEapp.c: 228: }
  3639                           ;MOTEapp.c: 229: moteApp_delayms(10);
  3640  006F56  0100               	movlb	0	; () banked
  3641  006F58  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  3642  006F5A  0E0A               	movlw	10
  3643  006F5C  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  3644  006F5E  EC86  F026         	call	_moteApp_delayms	;wreg free
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;MOTEapp.c: 230: for(uint8_t i = 32; i>0; i--)
  3648  006F62  0E20               	movlw	32
  3649  006F64  0101               	movlb	1	; () banked
  3650  006F66  6FD7               	movwf	moteHandler@i_1284& (0+255),b
  3651  006F68                     l9471:
  3652                           
  3653                           ; BSR set to: 1
  3654                           ;MOTEapp.c: 231: {
  3655                           ;MOTEapp.c: 232: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  3656  006F68  0E02               	movlw	2
  3657  006F6A  EC13  F028         	call	_ADC_GetConversion
  3658  006F6E  0101               	movlb	1	; () banked
  3659  006F70  51D2               	movf	moteHandler@Traw& (0+255),w,b
  3660  006F72  0100               	movlb	0	; () banked
  3661  006F74  27CE               	addwf	?_ADC_GetConversion& (0+255),f,b
  3662  006F76  0101               	movlb	1	; () banked
  3663  006F78  51D3               	movf	(moteHandler@Traw+1)& (0+255),w,b
  3664  006F7A  0100               	movlb	0	; () banked
  3665  006F7C  23CF               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  3666  006F7E  90D8               	bcf	status,0,c
  3667  006F80  31CF               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  3668  006F82  6FF3               	movwf	??_moteHandler& (0+255),b
  3669  006F84  31CE               	rrcf	?_ADC_GetConversion& (0+255),w,b
  3670  006F86  0101               	movlb	1	; () banked
  3671  006F88  6FD2               	movwf	moteHandler@Traw& (0+255),b
  3672  006F8A  C0F3  F1D3         	movff	??_moteHandler,moteHandler@Traw+1
  3673                           
  3674                           ; BSR set to: 1
  3675  006F8E  07D7               	decf	moteHandler@i_1284& (0+255),f,b
  3676                           
  3677                           ; BSR set to: 1
  3678  006F90  51D7               	movf	moteHandler@i_1284& (0+255),w,b
  3679  006F92  E1EA               	bnz	l9471
  3680                           
  3681                           ; BSR set to: 1
  3682                           ;MOTEapp.c: 233: }
  3683                           ;MOTEapp.c: 234: temperature = ADC_TempConversion(Traw);
  3684  006F94  51D2               	movf	moteHandler@Traw& (0+255),w,b
  3685  006F96  EC29  F026         	call	_ADC_TempConversion
  3686  006F9A  6F89               	movwf	_temperature& (0+255),b
  3687  006F9C  6B8A               	clrf	(_temperature+1)& (0+255),b
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;MOTEapp.c: 235: m10SecTicker = 0;
  3691  006F9E  6B9F               	clrf	_m10SecTicker& (0+255),b
  3692  006FA0                     l9481:
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;MOTEapp.c: 236: }
  3696                           ;MOTEapp.c: 237: }
  3697                           ;MOTEapp.c: 239: if(secTicker)
  3698  006FA0  51A3               	movf	_secTicker& (0+255),w,b
  3699  006FA2  E064               	bz	l9519
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;MOTEapp.c: 240: {
  3703                           ;MOTEapp.c: 241: if (secTicker >= 10)
  3704  006FA4  0E09               	movlw	9
  3705  006FA6  65A3               	cpfsgt	_secTicker& (0+255),b
  3706  006FA8  D061               	goto	l9519
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;MOTEapp.c: 242: {
  3710                           ;MOTEapp.c: 243: gotoSleep = 1;
  3711  006FAA  0E01               	movlw	1
  3712  006FAC  0101               	movlb	1	; () banked
  3713  006FAE  6FD0               	movwf	moteHandler@gotoSleep& (0+255),b
  3714                           
  3715                           ; BSR set to: 1
  3716                           ;MOTEapp.c: 244: secTicker = 0;
  3717  006FB0  0100               	movlb	0	; () banked
  3718  006FB2  6BA3               	clrf	_secTicker& (0+255),b
  3719  006FB4  D05B               	goto	l9519
  3720  006FB6                     l332:
  3721                           
  3722                           ; BSR set to: 0
  3723  006FB6  D7FF               	goto	l332
  3724  006FB8                     l9489:
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;MOTEapp.c: 254: oled_clear();
  3728  006FB8  ECB3  F025         	call	_oled_clear	;wreg free
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;MOTEapp.c: 255: oled_putString("MOTE Mode",1,0);
  3732  006FBC  0E04               	movlw	low STR_23
  3733  006FBE  6FDB               	movwf	oled_putString@string& (0+255),b
  3734  006FC0  0E7F               	movlw	high STR_23
  3735  006FC2  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  3736  006FC4  0E01               	movlw	1
  3737  006FC6  6FDD               	movwf	oled_putString@station_dot& (0+255),b
  3738  006FC8  6BDE               	clrf	oled_putString@start_page& (0+255),b
  3739  006FCA  ECB4  F02A         	call	_oled_putString	;wreg free
  3740                           
  3741                           ;MOTEapp.c: 256: oled_putString("Starting",2,1);
  3742  006FCE  0E6C               	movlw	low STR_24
  3743  006FD0  0100               	movlb	0	; () banked
  3744  006FD2  6FDB               	movwf	oled_putString@string& (0+255),b
  3745  006FD4  0E7F               	movlw	high STR_24
  3746  006FD6  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  3747  006FD8  0E02               	movlw	2
  3748  006FDA  6FDD               	movwf	oled_putString@station_dot& (0+255),b
  3749  006FDC  0E01               	movlw	1
  3750  006FDE  6FDE               	movwf	oled_putString@start_page& (0+255),b
  3751  006FE0  ECB4  F02A         	call	_oled_putString	;wreg free
  3752                           
  3753                           ;MOTEapp.c: 257: oled_putString("ReRun PwrTst<S2>",0,3);
  3754  006FE4  0E1F               	movlw	low STR_25
  3755  006FE6  0100               	movlb	0	; () banked
  3756  006FE8  6FDB               	movwf	oled_putString@string& (0+255),b
  3757  006FEA  0E7D               	movlw	high STR_25
  3758  006FEC  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  3759  006FEE  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  3760  006FF0  0E03               	movlw	3
  3761  006FF2  6FDE               	movwf	oled_putString@start_page& (0+255),b
  3762  006FF4  ECB4  F02A         	call	_oled_putString	;wreg free
  3763                           
  3764                           ;MOTEapp.c: 258: activeState = moteStartup;
  3765  006FF8  0100               	movlb	0	; () banked
  3766  006FFA  6B9A               	clrf	_activeState& (0+255),b
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;MOTEapp.c: 259: moteState = MOTE_JOINING;
  3770  006FFC  0E02               	movlw	2
  3771  006FFE  D029               	goto	L1
  3772  007000                     l9501:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;MOTEapp.c: 262: if ( moteJoiningProcess(readMessage, s2Button) )
  3776  007000  C1D4  F0E0         	movff	moteHandler@s2Button,moteJoiningProcess@switchEvent
  3777  007004  0101               	movlb	1	; () banked
  3778  007006  51D8               	movf	moteHandler@readMessage& (0+255),w,b
  3779  007008  EC3C  F039         	call	_moteJoiningProcess
  3780  00700C  0900               	iorlw	0
  3781  00700E  E037               	bz	l9521
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;MOTEapp.c: 263: {
  3785                           ;MOTEapp.c: 264: oled_clear();
  3786  007010  ECB3  F025         	call	_oled_clear	;wreg free
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;MOTEapp.c: 265: oled_putString("Mobile Mote -App",0,0);
  3790  007014  0E52               	movlw	low STR_26
  3791  007016  6FDB               	movwf	oled_putString@string& (0+255),b
  3792  007018  0E7D               	movlw	high STR_26
  3793  00701A  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  3794  00701C  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  3795  00701E  6BDE               	clrf	oled_putString@start_page& (0+255),b
  3796  007020  ECB4  F02A         	call	_oled_putString	;wreg free
  3797                           
  3798                           ;MOTEapp.c: 266: oled_putString("Navigate  Select", 0,2);
  3799  007024  0E63               	movlw	low STR_27
  3800  007026  0100               	movlb	0	; () banked
  3801  007028  6FDB               	movwf	oled_putString@string& (0+255),b
  3802  00702A  0E7D               	movlw	high STR_27
  3803  00702C  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  3804  00702E  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  3805  007030  0E02               	movlw	2
  3806  007032  6FDE               	movwf	oled_putString@start_page& (0+255),b
  3807  007034  ECB4  F02A         	call	_oled_putString	;wreg free
  3808                           
  3809                           ;MOTEapp.c: 267: oled_putString(" (S1)      (S2) ", 0,3);
  3810  007038  0EDB               	movlw	low STR_28
  3811  00703A  0100               	movlb	0	; () banked
  3812  00703C  6FDB               	movwf	oled_putString@string& (0+255),b
  3813  00703E  0E7C               	movlw	high STR_28
  3814  007040  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  3815  007042  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  3816  007044  0E03               	movlw	3
  3817  007046  6FDE               	movwf	oled_putString@start_page& (0+255),b
  3818  007048  ECB4  F02A         	call	_oled_putString	;wreg free
  3819                           
  3820                           ;MOTEapp.c: 268: runningState = runningEnter;
  3821  00704C  0100               	movlb	0	; () banked
  3822  00704E  6BA2               	clrf	_runningState& (0+255),b
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;MOTEapp.c: 269: moteState = MOTE_RUNNING;
  3826  007050  0E03               	movlw	3
  3827  007052                     L1:
  3828  007052  6FF7               	movwf	_moteState& (0+255),b
  3829  007054  D014               	goto	l9521
  3830  007056                     l9515:
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;MOTEapp.c: 273: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  3834  007056  C1D4  F0EA         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  3835  00705A  C1D8  F0EB         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  3836  00705E  C1D0  F0EC         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  3837  007062  0101               	movlb	1	; () banked
  3838  007064  51D1               	movf	moteHandler@gotoNextState& (0+255),w,b
  3839  007066  EC8C  F036         	call	_moteRunningProcess
  3840                           
  3841                           ;MOTEapp.c: 274: break;
  3842  00706A  D009               	goto	l9521
  3843  00706C                     l9519:
  3844                           
  3845                           ; BSR set to: 0
  3846  00706C  51F7               	movf	_moteState& (0+255),w,b
  3847                           
  3848                           ; Switch size 1, requested type "speed"
  3849                           ; Number of cases is 4, Range of values is 1 to 4
  3850                           ; switch strategies available:
  3851                           ; Name         Instructions Cycles
  3852                           ; simple_byte           13     7 (average)
  3853                           ;	Chosen strategy is simple_byte
  3854  00706E  0A01               	xorlw	1	; case 1
  3855  007070  E0A3               	bz	l9489
  3856  007072  0A03               	xorlw	3	; case 2
  3857  007074  E0C5               	bz	l9501
  3858  007076  0A01               	xorlw	1	; case 3
  3859  007078  E0EE               	bz	l9515
  3860  00707A  0A07               	xorlw	7	; case 4
  3861  00707C  E19C               	bnz	l332
  3862  00707E                     l9521:
  3863                           
  3864                           ;MOTEapp.c: 279: return moteState;
  3865  00707E  0100               	movlb	0	; () banked
  3866  007080  51F7               	movf	_moteState& (0+255),w,b
  3867                           
  3868                           ; BSR set to: 0
  3869  007082  0012               	return		;funcret
  3870  007084                     __end_of_moteHandler:
  3871                           	opt stack 0
  3872                           tblptru	equ	0xFF8
  3873                           tblptrh	equ	0xFF7
  3874                           tblptrl	equ	0xFF6
  3875                           tablat	equ	0xFF5
  3876                           intcon	equ	0xFF2
  3877                           postinc0	equ	0xFEE
  3878                           wreg	equ	0xFE8
  3879                           status	equ	0xFD8
  3880                           
  3881 ;; *************** function _service_pushbutton *****************
  3882 ;; Defined at:
  3883 ;;		line 14 in file "../Includes/Drivers/buttons.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;		None
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  bs              1    0[BANK0 ] enum E6178
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      enum E6327
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : F/0
  3894 ;;		On exit  : F/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3897 ;;      Params:         0       0       0       0       0       0       0       0       0
  3898 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3900 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3901 ;;Total ram usage:        1 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:   11
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_moteHandler
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text2
  3912  0051FE                     __ptext2:
  3913                           	opt stack 0
  3914  0051FE                     _service_pushbutton:
  3915                           	opt stack 18
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;buttons.c: 20: if ((PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;incstack = 0
  3922  0051FE  A082               	btfss	3970,0,c	;volatile
  3923  005200  D002               	goto	l8783
  3924                           
  3925                           ; BSR set to: 0
  3926  005202  B282               	btfsc	3970,1,c	;volatile
  3927  005204  D014               	goto	l8791
  3928  005206                     l8783:
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;buttons.c: 21: {
  3932                           ;buttons.c: 22: ++PB_Timer;
  3933  005206  2B6E               	incf	service_pushbutton@PB_Timer& (0+255),f,b
  3934  005208  0E00               	movlw	0
  3935  00520A  236F               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
  3936  00520C  2370               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
  3937  00520E  2371               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
  3938                           
  3939                           ;buttons.c: 26: if (PB_Timer == 55)
  3940  005210  0E37               	movlw	55
  3941  005212  196E               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
  3942  005214  116F               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
  3943  005216  1170               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
  3944  005218  1171               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
  3945  00521A  E107               	bnz	l755
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;buttons.c: 27: {
  3949                           ;buttons.c: 28: Release_Timer = 0;
  3950  00521C  6BA6               	clrf	service_pushbutton@Release_Timer& (0+255),b
  3951                           
  3952                           ;buttons.c: 30: if (PORTCbits.RC0 == 0)
  3953  00521E  B082               	btfsc	3970,0,c	;volatile
  3954  005220  D002               	goto	l8789
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;buttons.c: 31: {
  3958                           ;buttons.c: 32: bs = ShortPress1;
  3959  005222  0E01               	movlw	1
  3960  005224  D00F               	goto	L2
  3961  005226                     l8789:
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;buttons.c: 34: else
  3965                           ;buttons.c: 35: {
  3966                           ;buttons.c: 36: bs = ShortPress2;
  3967  005226  0E02               	movlw	2
  3968  005228  D00D               	goto	L2
  3969  00522A                     l755:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;buttons.c: 39: else
  3973                           ;buttons.c: 40: {
  3974                           ;buttons.c: 41: bs = NoButton;
  3975  00522A  6BCE               	clrf	service_pushbutton@bs& (0+255),b
  3976  00522C  D00C               	goto	l8799
  3977  00522E                     l8791:
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;buttons.c: 44: else
  3981                           ;buttons.c: 45: {
  3982                           ;buttons.c: 46: if (Release_Timer == 20)
  3983  00522E  0E14               	movlw	20
  3984  005230  19A6               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
  3985  005232  E106               	bnz	l8795
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;buttons.c: 47: {
  3989                           ;buttons.c: 48: PB_Timer = 0;
  3990  005234  6B6E               	clrf	service_pushbutton@PB_Timer& (0+255),b
  3991  005236  6B6F               	clrf	(service_pushbutton@PB_Timer+1)& (0+255),b
  3992  005238  6B70               	clrf	(service_pushbutton@PB_Timer+2)& (0+255),b
  3993  00523A  6B71               	clrf	(service_pushbutton@PB_Timer+3)& (0+255),b
  3994                           
  3995                           ;buttons.c: 49: Release_Timer = 0;
  3996  00523C  6BA6               	clrf	service_pushbutton@Release_Timer& (0+255),b
  3997                           
  3998                           ;buttons.c: 50: }
  3999  00523E  D001               	goto	l8797
  4000  005240                     l8795:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;buttons.c: 51: else
  4004                           ;buttons.c: 52: {
  4005                           ;buttons.c: 53: Release_Timer++;
  4006  005240  2BA6               	incf	service_pushbutton@Release_Timer& (0+255),f,b
  4007  005242                     l8797:
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;buttons.c: 54: }
  4011                           ;buttons.c: 55: bs = Released;
  4012  005242  0E03               	movlw	3
  4013  005244                     L2:
  4014  005244  6FCE               	movwf	service_pushbutton@bs& (0+255),b
  4015  005246                     l8799:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;buttons.c: 56: }
  4019                           ;buttons.c: 58: return bs;
  4020  005246  51CE               	movf	service_pushbutton@bs& (0+255),w,b
  4021                           
  4022                           ; BSR set to: 0
  4023  005248  0012               	return		;funcret
  4024  00524A                     __end_of_service_pushbutton:
  4025                           	opt stack 0
  4026                           tblptru	equ	0xFF8
  4027                           tblptrh	equ	0xFF7
  4028                           tblptrl	equ	0xFF6
  4029                           tablat	equ	0xFF5
  4030                           intcon	equ	0xFF2
  4031                           postinc0	equ	0xFEE
  4032                           wreg	equ	0xFE8
  4033                           status	equ	0xFD8
  4034                           
  4035 ;; *************** function _moteRunningProcess *****************
  4036 ;; Defined at:
  4037 ;;		line 635 in file "../Includes/Board/MOTEapp.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  changeStates    1    wreg     unsigned char 
  4040 ;;  selectButton    1   28[BANK0 ] unsigned char 
  4041 ;;  messageReady    1   29[BANK0 ] unsigned char 
  4042 ;;  sleepEvent      1   30[BANK0 ] unsigned char 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  changeStates    1    0[COMRAM] unsigned char 
  4045 ;;  i               1   36[BANK0 ] unsigned char 
  4046 ;;  i               1   35[BANK0 ] unsigned char 
  4047 ;;  Traw            2   33[BANK0 ] unsigned int 
  4048 ;;  readByte        1    0        unsigned char 
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  1    wreg      enum E6570
  4051 ;; Registers used:
  4052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4053 ;; Tracked objects:
  4054 ;;		On entry : F/1
  4055 ;;		On exit  : E/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4058 ;;      Params:         0       3       0       0       0       0       0       0       0
  4059 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4060 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4061 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4062 ;;Total ram usage:        9 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:   19
  4065 ;; This function calls:
  4066 ;;		_ADC_GetConversion
  4067 ;;		_ADC_TempConversion
  4068 ;;		_TMR2_ReadTimer
  4069 ;;		_moteApp_GoToSleep
  4070 ;;		_moteApp_add16bToDataBuffer
  4071 ;;		_moteApp_add8bToDataBuffer
  4072 ;;		_moteApp_clearBuffers
  4073 ;;		_moteApp_delayms
  4074 ;;		_oled_clear
  4075 ;;		_oled_putString
  4076 ;;		_oled_putUint16
  4077 ;;		_oled_putUint8
  4078 ;;		_sendDataCommand
  4079 ;; This function is called by:
  4080 ;;		_moteHandler
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text3
  4085  006D18                     __ptext3:
  4086                           	opt stack 0
  4087  006D18                     _moteRunningProcess:
  4088                           	opt stack 10
  4089                           
  4090                           ; BSR set to: 1
  4091                           ;MOTEapp.c: 639: if ((sleepEvent) && (periodicState))
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;incstack = 0
  4095  006D18  0100               	movlb	0	; () banked
  4096  006D1A  51EC               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  4097  006D1C  E101 D0BF          	bz	l9145
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;MOTEapp.c: 640: {
  4101                           ;MOTEapp.c: 641: if (sleepTicker >= 33)
  4102  006D20  0E20               	movlw	32
  4103  006D22  65A4               	cpfsgt	_sleepTicker& (0+255),b
  4104  006D24  D0B9               	goto	l9139
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;MOTEapp.c: 642: {
  4108                           ;MOTEapp.c: 644: uint16_t Traw = 0;
  4109  006D26  6BEF               	clrf	moteRunningProcess@Traw& (0+255),b
  4110  006D28  6BF0               	clrf	(moteRunningProcess@Traw+1)& (0+255),b
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;MOTEapp.c: 645: moteApp_delayms(10);
  4114  006D2A  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4115  006D2C  0E0A               	movlw	10
  4116  006D2E  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  4117  006D30  EC86  F026         	call	_moteApp_delayms	;wreg free
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;MOTEapp.c: 646: for(uint8_t i = 32; i>0; i--)
  4121  006D34  0E20               	movlw	32
  4122  006D36  6FF1               	movwf	moteRunningProcess@i& (0+255),b
  4123  006D38                     l9069:
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;MOTEapp.c: 647: {
  4127                           ;MOTEapp.c: 648: light = (light + ADC_GetConversion(Light_channel)) / 2;
  4128  006D38  0E03               	movlw	3
  4129  006D3A  EC13  F028         	call	_ADC_GetConversion
  4130  006D3E  5185               	movf	_light& (0+255),w,b
  4131  006D40  27CE               	addwf	?_ADC_GetConversion& (0+255),f,b
  4132  006D42  5186               	movf	(_light+1)& (0+255),w,b
  4133  006D44  23CF               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4134  006D46  90D8               	bcf	status,0,c
  4135  006D48  31CF               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4136  006D4A  6FED               	movwf	??_moteRunningProcess& (0+255),b
  4137  006D4C  31CE               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4138  006D4E  6F85               	movwf	_light& (0+255),b
  4139  006D50  C0ED  F086         	movff	??_moteRunningProcess,_light+1
  4140                           
  4141                           ; BSR set to: 0
  4142  006D54  07F1               	decf	moteRunningProcess@i& (0+255),f,b
  4143                           
  4144                           ; BSR set to: 0
  4145  006D56  51F1               	movf	moteRunningProcess@i& (0+255),w,b
  4146  006D58  E1EF               	bnz	l9069
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;MOTEapp.c: 649: }
  4150                           ;MOTEapp.c: 650: moteApp_delayms(10);
  4151  006D5A  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4152  006D5C  0E0A               	movlw	10
  4153  006D5E  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  4154  006D60  EC86  F026         	call	_moteApp_delayms	;wreg free
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;MOTEapp.c: 651: for(uint8_t i = 32; i>0; i--)
  4158  006D64  0E20               	movlw	32
  4159  006D66  6FF2               	movwf	moteRunningProcess@i_1373& (0+255),b
  4160  006D68                     l9083:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;MOTEapp.c: 652: {
  4164                           ;MOTEapp.c: 653: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  4165  006D68  0E02               	movlw	2
  4166  006D6A  EC13  F028         	call	_ADC_GetConversion
  4167  006D6E  51EF               	movf	moteRunningProcess@Traw& (0+255),w,b
  4168  006D70  27CE               	addwf	?_ADC_GetConversion& (0+255),f,b
  4169  006D72  51F0               	movf	(moteRunningProcess@Traw+1)& (0+255),w,b
  4170  006D74  23CF               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4171  006D76  90D8               	bcf	status,0,c
  4172  006D78  31CF               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4173  006D7A  6FED               	movwf	??_moteRunningProcess& (0+255),b
  4174  006D7C  31CE               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4175  006D7E  6FEF               	movwf	moteRunningProcess@Traw& (0+255),b
  4176  006D80  C0ED  F0F0         	movff	??_moteRunningProcess,moteRunningProcess@Traw+1
  4177                           
  4178                           ; BSR set to: 0
  4179  006D84  07F2               	decf	moteRunningProcess@i_1373& (0+255),f,b
  4180                           
  4181                           ; BSR set to: 0
  4182  006D86  51F2               	movf	moteRunningProcess@i_1373& (0+255),w,b
  4183  006D88  E1EF               	bnz	l9083
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;MOTEapp.c: 654: }
  4187                           ;MOTEapp.c: 655: temperature = ADC_TempConversion(Traw);
  4188  006D8A  51EF               	movf	moteRunningProcess@Traw& (0+255),w,b
  4189  006D8C  EC29  F026         	call	_ADC_TempConversion
  4190  006D90  6F89               	movwf	_temperature& (0+255),b
  4191  006D92  6B8A               	clrf	(_temperature+1)& (0+255),b
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;MOTEapp.c: 657: sleepTicker = 0;
  4195  006D94  6BA4               	clrf	_sleepTicker& (0+255),b
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;MOTEapp.c: 658: oled_clear();
  4199  006D96  ECB3  F025         	call	_oled_clear	;wreg free
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;MOTEapp.c: 659: oled_putString("Issue Perodic TX",0,0);
  4203  006D9A  0E30               	movlw	low STR_76
  4204  006D9C  6FDB               	movwf	oled_putString@string& (0+255),b
  4205  006D9E  0E7D               	movlw	high STR_76
  4206  006DA0  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  4207  006DA2  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  4208  006DA4  6BDE               	clrf	oled_putString@start_page& (0+255),b
  4209  006DA6  ECB4  F02A         	call	_oled_putString	;wreg free
  4210                           
  4211                           ;MOTEapp.c: 660: oled_putString("On Port #: ",0,1);
  4212  006DAA  0EB3               	movlw	low STR_77
  4213  006DAC  0100               	movlb	0	; () banked
  4214  006DAE  6FDB               	movwf	oled_putString@string& (0+255),b
  4215  006DB0  0E7E               	movlw	high STR_77
  4216  006DB2  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  4217  006DB4  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  4218  006DB6  0E01               	movlw	1
  4219  006DB8  6FDE               	movwf	oled_putString@start_page& (0+255),b
  4220  006DBA  ECB4  F02A         	call	_oled_putString	;wreg free
  4221                           
  4222                           ;MOTEapp.c: 661: oled_putUint8(randomPortNum,10,1);
  4223  006DBE  0E0A               	movlw	10
  4224  006DC0  0100               	movlb	0	; () banked
  4225  006DC2  6FE0               	movwf	oled_putUint8@station_dot& (0+255),b
  4226  006DC4  0E01               	movlw	1
  4227  006DC6  6FE1               	movwf	oled_putUint8@start_page& (0+255),b
  4228  006DC8  51A1               	movf	_randomPortNum& (0+255),w,b
  4229  006DCA  ECC8  F029         	call	_oled_putUint8
  4230                           
  4231                           ;MOTEapp.c: 662: oled_putString("L:       T: ",0,2);
  4232  006DCE  0EFE               	movlw	low STR_78
  4233  006DD0  0100               	movlb	0	; () banked
  4234  006DD2  6FDB               	movwf	oled_putString@string& (0+255),b
  4235  006DD4  0E7D               	movlw	high STR_78
  4236  006DD6  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  4237  006DD8  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  4238  006DDA  0E02               	movlw	2
  4239  006DDC  6FDE               	movwf	oled_putString@start_page& (0+255),b
  4240  006DDE  ECB4  F02A         	call	_oled_putString	;wreg free
  4241                           
  4242                           ;MOTEapp.c: 663: oled_putUint16(light,3,2);
  4243  006DE2  C085  F0E0         	movff	_light,oled_putUint16@number
  4244  006DE6  C086  F0E1         	movff	_light+1,oled_putUint16@number+1
  4245  006DEA  0E03               	movlw	3
  4246  006DEC  0100               	movlb	0	; () banked
  4247  006DEE  6FE2               	movwf	oled_putUint16@station_dot& (0+255),b
  4248  006DF0  0E02               	movlw	2
  4249  006DF2  6FE3               	movwf	oled_putUint16@start_page& (0+255),b
  4250  006DF4  EC7F  F033         	call	_oled_putUint16	;wreg free
  4251                           
  4252                           ;MOTEapp.c: 664: oled_putUint8(temperature,12,2);
  4253  006DF8  0E0C               	movlw	12
  4254  006DFA  0100               	movlb	0	; () banked
  4255  006DFC  6FE0               	movwf	oled_putUint8@station_dot& (0+255),b
  4256  006DFE  0E02               	movlw	2
  4257  006E00  6FE1               	movwf	oled_putUint8@start_page& (0+255),b
  4258  006E02  5189               	movf	_temperature& (0+255),w,b
  4259  006E04  ECC8  F029         	call	_oled_putUint8
  4260                           
  4261                           ;MOTEapp.c: 665: oled_putString("(NAV)    (SEL) ",0,3);
  4262  006E08  0E74               	movlw	low STR_79
  4263  006E0A  0100               	movlb	0	; () banked
  4264  006E0C  6FDB               	movwf	oled_putString@string& (0+255),b
  4265  006E0E  0E7D               	movlw	high STR_79
  4266  006E10  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  4267  006E12  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  4268  006E14  0E03               	movlw	3
  4269  006E16  6FDE               	movwf	oled_putString@start_page& (0+255),b
  4270  006E18  ECB4  F02A         	call	_oled_putString	;wreg free
  4271                           
  4272                           ;MOTEapp.c: 667: moteApp_clearBuffers();
  4273  006E1C  EC6E  F028         	call	_moteApp_clearBuffers	;wreg free
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;MOTEapp.c: 668: randomPortNum = TMR2_ReadTimer();
  4277  006E20  EC2A  F025         	call	_TMR2_ReadTimer	;wreg free
  4278  006E24  6FA1               	movwf	_randomPortNum& (0+255),b
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;MOTEapp.c: 670: if (!randomPortNum)
  4282  006E26  51A1               	movf	_randomPortNum& (0+255),w,b
  4283  006E28  E103               	bnz	l9117
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;MOTEapp.c: 671: randomPortNum = 5;
  4287  006E2A  0E05               	movlw	5
  4288  006E2C  6FA1               	movwf	_randomPortNum& (0+255),b
  4289  006E2E  D005               	goto	l9121
  4290  006E30                     l9117:
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;MOTEapp.c: 672: else if (randomPortNum > 223)
  4294  006E30  0EDF               	movlw	223
  4295  006E32  65A1               	cpfsgt	_randomPortNum& (0+255),b
  4296  006E34  D002               	goto	l9121
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;MOTEapp.c: 673: randomPortNum = randomPortNum - 50;
  4300  006E36  0ECE               	movlw	206
  4301  006E38  27A1               	addwf	_randomPortNum& (0+255),f,b
  4302  006E3A                     l9121:
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;MOTEapp.c: 675: moteApp_add8bToDataBuffer(randomPortNum, 0);
  4306  006E3A  6BD2               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  4307  006E3C  51A1               	movf	_randomPortNum& (0+255),w,b
  4308  006E3E  EC52  F02A         	call	_moteApp_add8bToDataBuffer
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;MOTEapp.c: 676: dataBuffer[3] = 0x20;
  4312  006E42  0E20               	movlw	32
  4313  006E44  6FAA               	movwf	(_dataBuffer+3)& (0+255),b
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;MOTEapp.c: 677: moteApp_add16bToDataBuffer(light, 4);
  4317  006E46  C085  F0D5         	movff	_light,moteApp_add16bToDataBuffer@number
  4318  006E4A  C086  F0D6         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  4319  006E4E  0E04               	movlw	4
  4320  006E50  6FD7               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  4321  006E52  EC79  F035         	call	_moteApp_add16bToDataBuffer	;wreg free
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;MOTEapp.c: 678: moteApp_add8bToDataBuffer(temperature, 9);
  4325  006E56  0E09               	movlw	9
  4326  006E58  6FD2               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  4327  006E5A  5189               	movf	_temperature& (0+255),w,b
  4328  006E5C  EC52  F02A         	call	_moteApp_add8bToDataBuffer
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;MOTEapp.c: 680: sleepTxOccurances = 0;
  4332  006E60  F000               	nop	
  4333                           
  4334                           ;MOTEapp.c: 681: oled_putString("C",15,1);
  4335  006E62  0EFA               	movlw	low STR_80
  4336  006E64  0100               	movlb	0	; () banked
  4337  006E66  6FDB               	movwf	oled_putString@string& (0+255),b
  4338  006E68  0E7F               	movlw	high STR_80
  4339  006E6A  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  4340  006E6C  0E0F               	movlw	15
  4341  006E6E  6FDD               	movwf	oled_putString@station_dot& (0+255),b
  4342  006E70  0E01               	movlw	1
  4343  006E72  6FDE               	movwf	oled_putString@start_page& (0+255),b
  4344  006E74  ECB4  F02A         	call	_oled_putString	;wreg free
  4345                           
  4346                           ;MOTEapp.c: 682: sendDataCommand("radio tx ", dataBuffer, 12);
  4347  006E78  0EFA               	movlw	low STR_81
  4348  006E7A  0100               	movlb	0	; () banked
  4349  006E7C  6FCF               	movwf	sendDataCommand@string& (0+255),b
  4350  006E7E  0E7E               	movlw	high STR_81
  4351  006E80  6FD0               	movwf	(sendDataCommand@string+1)& (0+255),b
  4352  006E82  0EA7               	movlw	low _dataBuffer
  4353  006E84  6FD1               	movwf	sendDataCommand@appData& (0+255),b
  4354  006E86  0E0C               	movlw	12
  4355  006E88  6FD2               	movwf	sendDataCommand@dataLength& (0+255),b
  4356  006E8A  EC98  F02D         	call	_sendDataCommand	;wreg free
  4357                           
  4358                           ;MOTEapp.c: 683: secTicker = 10 - (10 / 3);
  4359  006E8E  0E07               	movlw	7
  4360  006E90  0100               	movlb	0	; () banked
  4361  006E92  6FA3               	movwf	_secTicker& (0+255),b
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;MOTEapp.c: 684: runningState = runningUplinkTransmit;
  4365  006E94  0E08               	movlw	8
  4366  006E96  D002               	goto	L33
  4367  006E98                     l9139:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;MOTEapp.c: 686: else
  4371                           ;MOTEapp.c: 687: {
  4372                           ;MOTEapp.c: 688: sleepTicker++;
  4373  006E98  2BA4               	incf	_sleepTicker& (0+255),f,b
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;MOTEapp.c: 689: runningState = runningSleep;
  4377  006E9A  0E0E               	movlw	14
  4378  006E9C                     L33:
  4379  006E9C  6FA2               	movwf	_runningState& (0+255),b
  4380  006E9E                     l9145:
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;MOTEapp.c: 691: }
  4384                           ;MOTEapp.c: 692: }
  4385                           ;MOTEapp.c: 694: moteApp_GoToSleep();
  4386  006E9E  EC1B  F02B         	call	_moteApp_GoToSleep	;wreg free
  4387  006EA2                     l469:
  4388  006EA2  D7FF               	goto	l469
  4389  006EA4                     __end_of_moteRunningProcess:
  4390                           	opt stack 0
  4391                           tblptru	equ	0xFF8
  4392                           tblptrh	equ	0xFF7
  4393                           tblptrl	equ	0xFF6
  4394                           tablat	equ	0xFF5
  4395                           intcon	equ	0xFF2
  4396                           postinc0	equ	0xFEE
  4397                           wreg	equ	0xFE8
  4398                           status	equ	0xFD8
  4399                           
  4400 ;; *************** function _sendDataCommand *****************
  4401 ;; Defined at:
  4402 ;;		line 864 in file "../Includes/Board/MOTEapp.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  4405 ;;		 -> STR_81(10), 
  4406 ;;  appData         1    3[BANK0 ] PTR unsigned char 
  4407 ;;		 -> dataBuffer(12), 
  4408 ;;  dataLength      1    4[BANK0 ] unsigned char 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  byteCount       1    7[BANK0 ] unsigned char 
  4411 ;;  byteCount       1    6[BANK0 ] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : F/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4421 ;;      Params:         0       4       0       0       0       0       0       0       0
  4422 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4423 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4424 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4425 ;;Total ram usage:        7 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:   13
  4428 ;; This function calls:
  4429 ;;		_EUSART_Write
  4430 ;;		_EndLine
  4431 ;;		_hexToStr
  4432 ;; This function is called by:
  4433 ;;		_moteRunningProcess
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text4
  4438  005B30                     __ptext4:
  4439                           	opt stack 0
  4440  005B30                     _sendDataCommand:
  4441                           	opt stack 15
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;MOTEapp.c: 867: while (*string)
  4445                           
  4446                           ;incstack = 0
  4447  005B30  D00B               	goto	l8507
  4448  005B32                     l8503:
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;MOTEapp.c: 868: {
  4452                           ;MOTEapp.c: 869: EUSART_Write(*string++);
  4453  005B32  C0CF  FFF6         	movff	sendDataCommand@string,tblptrl
  4454  005B36  C0D0  FFF7         	movff	sendDataCommand@string+1,tblptrh
  4455  005B3A                     	if	0	;tblptru may be non-zero
  4456  005B3A                     	endif
  4457  005B3A                     	if	0	;tblptru may be non-zero
  4458  005B3A                     	endif
  4459  005B3A  0008               	tblrd		*
  4460  005B3C  50F5               	movf	tablat,w,c
  4461  005B3E  EC8A  F027         	call	_EUSART_Write
  4462  005B42  0100               	movlb	0	; () banked
  4463  005B44  4BCF               	infsnz	sendDataCommand@string& (0+255),f,b
  4464  005B46  2BD0               	incf	(sendDataCommand@string+1)& (0+255),f,b
  4465  005B48                     l8507:
  4466                           
  4467                           ; BSR set to: 0
  4468  005B48  C0CF  FFF6         	movff	sendDataCommand@string,tblptrl
  4469  005B4C  C0D0  FFF7         	movff	sendDataCommand@string+1,tblptrh
  4470  005B50                     	if	0	;tblptru may be non-zero
  4471  005B50                     	endif
  4472  005B50                     	if	0	;tblptru may be non-zero
  4473  005B50                     	endif
  4474  005B50  0008               	tblrd		*
  4475  005B52  50F5               	movf	tablat,w,c
  4476  005B54  E1EE               	bnz	l8503
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;MOTEapp.c: 870: }
  4480                           ;MOTEapp.c: 872: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  4481  005B56  6BD4               	clrf	sendDataCommand@byteCount& (0+255),b
  4482  005B58                     l8513:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;MOTEapp.c: 873: {
  4486                           ;MOTEapp.c: 874: EUSART_Write(appData[byteCount]);
  4487  005B58  51D1               	movf	sendDataCommand@appData& (0+255),w,b
  4488  005B5A  25D4               	addwf	sendDataCommand@byteCount& (0+255),w,b
  4489  005B5C  6ED9               	movwf	fsr2l,c
  4490  005B5E  6ADA               	clrf	fsr2h,c
  4491  005B60  50DF               	movf	indf2,w,c
  4492  005B62  EC8A  F027         	call	_EUSART_Write
  4493  005B66  0100               	movlb	0	; () banked
  4494  005B68  2BD4               	incf	sendDataCommand@byteCount& (0+255),f,b
  4495                           
  4496                           ; BSR set to: 0
  4497  005B6A  0E02               	movlw	2
  4498  005B6C  65D4               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  4499  005B6E  D7F4               	goto	l8513
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;MOTEapp.c: 875: }
  4503                           ;MOTEapp.c: 877: EUSART_Write(appData[3]);
  4504  005B70  51D1               	movf	sendDataCommand@appData& (0+255),w,b
  4505  005B72  6ED9               	movwf	fsr2l,c
  4506  005B74  6ADA               	clrf	fsr2h,c
  4507  005B76  0E03               	movlw	3
  4508  005B78  26D9               	addwf	fsr2l,f,c
  4509  005B7A  50DF               	movf	indf2,w,c
  4510  005B7C  EC8A  F027         	call	_EUSART_Write
  4511                           
  4512                           ;MOTEapp.c: 879: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  4513  005B80  0E04               	movlw	4
  4514  005B82  0100               	movlb	0	; () banked
  4515  005B84  6FD5               	movwf	sendDataCommand@byteCount_1431& (0+255),b
  4516  005B86  D019               	goto	l8527
  4517  005B88                     l8523:
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;MOTEapp.c: 880: {
  4521                           ;MOTEapp.c: 881: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  4522  005B88  51D1               	movf	sendDataCommand@appData& (0+255),w,b
  4523  005B8A  25D5               	addwf	sendDataCommand@byteCount_1431& (0+255),w,b
  4524  005B8C  6ED9               	movwf	fsr2l,c
  4525  005B8E  6ADA               	clrf	fsr2h,c
  4526  005B90  50DF               	movf	indf2,w,c
  4527  005B92  6FD3               	movwf	??_sendDataCommand& (0+255),b
  4528  005B94  39D3               	swapf	??_sendDataCommand& (0+255),w,b
  4529  005B96  0B0F               	andlw	15
  4530  005B98  EC4B  F026         	call	_hexToStr
  4531  005B9C  EC8A  F027         	call	_EUSART_Write
  4532                           
  4533                           ;MOTEapp.c: 882: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  4534  005BA0  0100               	movlb	0	; () banked
  4535  005BA2  51D1               	movf	sendDataCommand@appData& (0+255),w,b
  4536  005BA4  25D5               	addwf	sendDataCommand@byteCount_1431& (0+255),w,b
  4537  005BA6  6ED9               	movwf	fsr2l,c
  4538  005BA8  6ADA               	clrf	fsr2h,c
  4539  005BAA  50DF               	movf	indf2,w,c
  4540  005BAC  0B0F               	andlw	15
  4541  005BAE  EC4B  F026         	call	_hexToStr
  4542  005BB2  EC8A  F027         	call	_EUSART_Write
  4543  005BB6  0100               	movlb	0	; () banked
  4544  005BB8  2BD5               	incf	sendDataCommand@byteCount_1431& (0+255),f,b
  4545  005BBA                     l8527:
  4546                           
  4547                           ; BSR set to: 0
  4548  005BBA  51D2               	movf	sendDataCommand@dataLength& (0+255),w,b
  4549  005BBC  5DD5               	subwf	sendDataCommand@byteCount_1431& (0+255),w,b
  4550  005BBE  E3E4               	bnc	l8523
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;MOTEapp.c: 883: }
  4554                           ;MOTEapp.c: 884: EndLine();
  4555  005BC0  EF40  F025         	goto	_EndLine	;wreg free
  4556  005BC4                     __end_of_sendDataCommand:
  4557                           	opt stack 0
  4558                           tblptru	equ	0xFF8
  4559                           tblptrh	equ	0xFF7
  4560                           tblptrl	equ	0xFF6
  4561                           tablat	equ	0xFF5
  4562                           intcon	equ	0xFF2
  4563                           postinc0	equ	0xFEE
  4564                           wreg	equ	0xFE8
  4565                           indf2	equ	0xFDF
  4566                           fsr2h	equ	0xFDA
  4567                           fsr2l	equ	0xFD9
  4568                           status	equ	0xFD8
  4569                           
  4570 ;; *************** function _hexToStr *****************
  4571 ;; Defined at:
  4572 ;;		line 896 in file "../Includes/Board/MOTEapp.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;  character       1    wreg     unsigned char 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  character       1    0[BANK0 ] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      unsigned char 
  4579 ;; Registers used:
  4580 ;;		wreg, status,2, status,0
  4581 ;; Tracked objects:
  4582 ;;		On entry : F/0
  4583 ;;		On exit  : F/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4586 ;;      Params:         0       0       0       0       0       0       0       0       0
  4587 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4588 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4589 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4590 ;;Total ram usage:        1 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:   11
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_sendDataCommand
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text5
  4601  004C96                     __ptext5:
  4602                           	opt stack 0
  4603  004C96                     _hexToStr:
  4604                           	opt stack 16
  4605                           
  4606                           ;incstack = 0
  4607                           ;hexToStr@character stored from wreg
  4608  004C96  6FCE               	movwf	hexToStr@character& (0+255),b
  4609                           
  4610                           ;MOTEapp.c: 899: character = character & 0x0F;
  4611  004C98  0E0F               	movlw	15
  4612  004C9A  0100               	movlb	0	; () banked
  4613  004C9C  17CE               	andwf	hexToStr@character& (0+255),f,b
  4614                           
  4615                           ;MOTEapp.c: 901: if (character < 0x0A)
  4616  004C9E  0E0A               	movlw	10
  4617  004CA0  61CE               	cpfslt	hexToStr@character& (0+255),b
  4618  004CA2  D003               	goto	l8171
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;MOTEapp.c: 902: {
  4622                           ;MOTEapp.c: 903: return character + '0';
  4623  004CA4  51CE               	movf	hexToStr@character& (0+255),w,b
  4624  004CA6  0F30               	addlw	48
  4625  004CA8  0012               	return	
  4626  004CAA                     l8171:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;MOTEapp.c: 905: else if ( (character >= 0x0A) && (character <= 0x0F) )
  4630  004CAA  0E09               	movlw	9
  4631  004CAC  65CE               	cpfsgt	hexToStr@character& (0+255),b
  4632  004CAE  0C00               	retlw	0
  4633                           
  4634                           ; BSR set to: 0
  4635  004CB0  0E10               	movlw	16
  4636  004CB2  61CE               	cpfslt	hexToStr@character& (0+255),b
  4637  004CB4  0C00               	retlw	0
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;MOTEapp.c: 906: {
  4641                           ;MOTEapp.c: 907: return character + '0' + 7;
  4642  004CB6  51CE               	movf	hexToStr@character& (0+255),w,b
  4643  004CB8  0F37               	addlw	55
  4644  004CBA  0012               	return	
  4645  004CBC                     __end_of_hexToStr:
  4646                           	opt stack 0
  4647                           tblptru	equ	0xFF8
  4648                           tblptrh	equ	0xFF7
  4649                           tblptrl	equ	0xFF6
  4650                           tablat	equ	0xFF5
  4651                           intcon	equ	0xFF2
  4652                           postinc0	equ	0xFEE
  4653                           wreg	equ	0xFE8
  4654                           indf2	equ	0xFDF
  4655                           fsr2h	equ	0xFDA
  4656                           fsr2l	equ	0xFD9
  4657                           status	equ	0xFD8
  4658                           
  4659 ;; *************** function _oled_putUint8 *****************
  4660 ;; Defined at:
  4661 ;;		line 226 in file "../Includes/Drivers/SSD1306oLED.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  number          1    wreg     unsigned char 
  4664 ;;  station_dot     1   18[BANK0 ] unsigned char 
  4665 ;;  start_page      1   19[BANK0 ] unsigned char 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  number          1   20[BANK0 ] unsigned char 
  4668 ;;  numData         6   21[BANK0 ] struct .
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      void 
  4671 ;; Registers used:
  4672 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4673 ;; Tracked objects:
  4674 ;;		On entry : F/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4678 ;;      Params:         0       2       0       0       0       0       0       0       0
  4679 ;;      Locals:         0       7       0       0       0       0       0       0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4681 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4682 ;;Total ram usage:        9 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:   16
  4685 ;; This function calls:
  4686 ;;		___lbdiv
  4687 ;;		___lbmod
  4688 ;;		_oled_putString
  4689 ;; This function is called by:
  4690 ;;		_moteRunningProcess
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text6
  4695  005390                     __ptext6:
  4696                           	opt stack 0
  4697  005390                     _oled_putUint8:
  4698                           	opt stack 12
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;incstack = 0
  4702                           ;oled_putUint8@number stored from wreg
  4703  005390  6FE2               	movwf	oled_putUint8@number& (0+255),b
  4704                           
  4705                           ;SSD1306oLED.c: 228: display_data_t numData;
  4706                           ;SSD1306oLED.c: 229: numData.d2 = '0' + (number % 10);
  4707  005392  0E0A               	movlw	10
  4708  005394  0100               	movlb	0	; () banked
  4709  005396  6FCE               	movwf	___lbmod@divisor& (0+255),b
  4710  005398  51E2               	movf	oled_putUint8@number& (0+255),w,b
  4711  00539A  EC9A  F026         	call	___lbmod
  4712  00539E  0F30               	addlw	48
  4713  0053A0  6FE5               	movwf	(oled_putUint8@numData+2)& (0+255),b
  4714                           
  4715                           ;SSD1306oLED.c: 230: number /= 10;
  4716  0053A2  0E0A               	movlw	10
  4717  0053A4  6FCE               	movwf	___lbdiv@divisor& (0+255),b
  4718  0053A6  51E2               	movf	oled_putUint8@number& (0+255),w,b
  4719  0053A8  ECBF  F027         	call	___lbdiv
  4720  0053AC  6FE2               	movwf	oled_putUint8@number& (0+255),b
  4721                           
  4722                           ;SSD1306oLED.c: 231: numData.d1 = '0' + (number % 10);
  4723  0053AE  0E0A               	movlw	10
  4724  0053B0  6FCE               	movwf	___lbmod@divisor& (0+255),b
  4725  0053B2  51E2               	movf	oled_putUint8@number& (0+255),w,b
  4726  0053B4  EC9A  F026         	call	___lbmod
  4727  0053B8  0F30               	addlw	48
  4728  0053BA  6FE4               	movwf	(oled_putUint8@numData+1)& (0+255),b
  4729                           
  4730                           ;SSD1306oLED.c: 232: number /= 10;
  4731  0053BC  0E0A               	movlw	10
  4732  0053BE  6FCE               	movwf	___lbdiv@divisor& (0+255),b
  4733  0053C0  51E2               	movf	oled_putUint8@number& (0+255),w,b
  4734  0053C2  ECBF  F027         	call	___lbdiv
  4735  0053C6  6FE2               	movwf	oled_putUint8@number& (0+255),b
  4736                           
  4737                           ;SSD1306oLED.c: 233: numData.d0 = '0' + (number % 10);
  4738  0053C8  0E0A               	movlw	10
  4739  0053CA  6FCE               	movwf	___lbmod@divisor& (0+255),b
  4740  0053CC  51E2               	movf	oled_putUint8@number& (0+255),w,b
  4741  0053CE  EC9A  F026         	call	___lbmod
  4742  0053D2  0F30               	addlw	48
  4743  0053D4  6FE3               	movwf	oled_putUint8@numData& (0+255),b
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;SSD1306oLED.c: 235: numData.b[3]=0;
  4747  0053D6  6BE6               	clrf	(oled_putUint8@numData+3)& (0+255),b
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;SSD1306oLED.c: 237: oled_putString(numData.b,station_dot,start_page);
  4751  0053D8  0EE3               	movlw	low oled_putUint8@numData
  4752  0053DA  6FDB               	movwf	oled_putString@string& (0+255),b
  4753  0053DC  6BDC               	clrf	(oled_putString@string+1)& (0+255),b
  4754  0053DE  C0E0  F0DD         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  4755  0053E2  C0E1  F0DE         	movff	oled_putUint8@start_page,oled_putString@start_page
  4756  0053E6  EFB4  F02A         	goto	_oled_putString	;wreg free
  4757  0053EA                     __end_of_oled_putUint8:
  4758                           	opt stack 0
  4759                           tblptru	equ	0xFF8
  4760                           tblptrh	equ	0xFF7
  4761                           tblptrl	equ	0xFF6
  4762                           tablat	equ	0xFF5
  4763                           intcon	equ	0xFF2
  4764                           postinc0	equ	0xFEE
  4765                           wreg	equ	0xFE8
  4766                           indf2	equ	0xFDF
  4767                           fsr2h	equ	0xFDA
  4768                           fsr2l	equ	0xFD9
  4769                           status	equ	0xFD8
  4770                           
  4771 ;; *************** function _oled_putUint16 *****************
  4772 ;; Defined at:
  4773 ;;		line 240 in file "../Includes/Drivers/SSD1306oLED.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  number          2   18[BANK0 ] unsigned int 
  4776 ;;  station_dot     1   20[BANK0 ] unsigned char 
  4777 ;;  start_page      1   21[BANK0 ] unsigned char 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  numData         6   22[BANK0 ] struct .
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      void 
  4782 ;; Registers used:
  4783 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4784 ;; Tracked objects:
  4785 ;;		On entry : F/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4789 ;;      Params:         0       4       0       0       0       0       0       0       0
  4790 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4792 ;;      Totals:         0      10       0       0       0       0       0       0       0
  4793 ;;Total ram usage:       10 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:   16
  4796 ;; This function calls:
  4797 ;;		___lwdiv
  4798 ;;		___lwmod
  4799 ;;		_oled_putString
  4800 ;; This function is called by:
  4801 ;;		_moteRunningProcess
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           	psect	text7
  4806  0066FE                     __ptext7:
  4807                           	opt stack 0
  4808  0066FE                     _oled_putUint16:
  4809                           	opt stack 12
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;SSD1306oLED.c: 242: display_data_t numData;
  4813                           ;SSD1306oLED.c: 243: numData.d4 = '0' + (number % 10);
  4814                           
  4815                           ;incstack = 0
  4816  0066FE  C0E0  F0CE         	movff	oled_putUint16@number,___lwmod@dividend
  4817  006702  C0E1  F0CF         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  4818  006706  6BD1               	clrf	(___lwmod@divisor+1)& (0+255),b
  4819  006708  0E0A               	movlw	10
  4820  00670A  6FD0               	movwf	___lwmod@divisor& (0+255),b
  4821  00670C  EC4F  F028         	call	___lwmod	;wreg free
  4822  006710  51CE               	movf	?___lwmod& (0+255),w,b
  4823  006712  0F30               	addlw	48
  4824  006714  6FE8               	movwf	(oled_putUint16@numData+4)& (0+255),b
  4825                           
  4826                           ;SSD1306oLED.c: 244: number /= 10;
  4827  006716  C0E0  F0CE         	movff	oled_putUint16@number,___lwdiv@dividend
  4828  00671A  C0E1  F0CF         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  4829  00671E  6BD1               	clrf	(___lwdiv@divisor+1)& (0+255),b
  4830  006720  0E0A               	movlw	10
  4831  006722  6FD0               	movwf	___lwdiv@divisor& (0+255),b
  4832  006724  ECB5  F028         	call	___lwdiv	;wreg free
  4833  006728  C0CE  F0E0         	movff	?___lwdiv,oled_putUint16@number
  4834  00672C  C0CF  F0E1         	movff	?___lwdiv+1,oled_putUint16@number+1
  4835                           
  4836                           ;SSD1306oLED.c: 245: numData.d3 = '0' + (number % 10);
  4837  006730  C0E0  F0CE         	movff	oled_putUint16@number,___lwmod@dividend
  4838  006734  C0E1  F0CF         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  4839  006738  6BD1               	clrf	(___lwmod@divisor+1)& (0+255),b
  4840  00673A  0E0A               	movlw	10
  4841  00673C  6FD0               	movwf	___lwmod@divisor& (0+255),b
  4842  00673E  EC4F  F028         	call	___lwmod	;wreg free
  4843  006742  51CE               	movf	?___lwmod& (0+255),w,b
  4844  006744  0F30               	addlw	48
  4845  006746  6FE7               	movwf	(oled_putUint16@numData+3)& (0+255),b
  4846                           
  4847                           ;SSD1306oLED.c: 246: number /= 10;
  4848  006748  C0E0  F0CE         	movff	oled_putUint16@number,___lwdiv@dividend
  4849  00674C  C0E1  F0CF         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  4850  006750  6BD1               	clrf	(___lwdiv@divisor+1)& (0+255),b
  4851  006752  0E0A               	movlw	10
  4852  006754  6FD0               	movwf	___lwdiv@divisor& (0+255),b
  4853  006756  ECB5  F028         	call	___lwdiv	;wreg free
  4854  00675A  C0CE  F0E0         	movff	?___lwdiv,oled_putUint16@number
  4855  00675E  C0CF  F0E1         	movff	?___lwdiv+1,oled_putUint16@number+1
  4856                           
  4857                           ;SSD1306oLED.c: 247: numData.d2 = '0' + (number % 10);
  4858  006762  C0E0  F0CE         	movff	oled_putUint16@number,___lwmod@dividend
  4859  006766  C0E1  F0CF         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  4860  00676A  6BD1               	clrf	(___lwmod@divisor+1)& (0+255),b
  4861  00676C  0E0A               	movlw	10
  4862  00676E  6FD0               	movwf	___lwmod@divisor& (0+255),b
  4863  006770  EC4F  F028         	call	___lwmod	;wreg free
  4864  006774  51CE               	movf	?___lwmod& (0+255),w,b
  4865  006776  0F30               	addlw	48
  4866  006778  6FE6               	movwf	(oled_putUint16@numData+2)& (0+255),b
  4867                           
  4868                           ;SSD1306oLED.c: 248: number /= 10;
  4869  00677A  C0E0  F0CE         	movff	oled_putUint16@number,___lwdiv@dividend
  4870  00677E  C0E1  F0CF         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  4871  006782  6BD1               	clrf	(___lwdiv@divisor+1)& (0+255),b
  4872  006784  0E0A               	movlw	10
  4873  006786  6FD0               	movwf	___lwdiv@divisor& (0+255),b
  4874  006788  ECB5  F028         	call	___lwdiv	;wreg free
  4875  00678C  C0CE  F0E0         	movff	?___lwdiv,oled_putUint16@number
  4876  006790  C0CF  F0E1         	movff	?___lwdiv+1,oled_putUint16@number+1
  4877                           
  4878                           ;SSD1306oLED.c: 249: numData.d1 = '0' + (number % 10);
  4879  006794  C0E0  F0CE         	movff	oled_putUint16@number,___lwmod@dividend
  4880  006798  C0E1  F0CF         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  4881  00679C  6BD1               	clrf	(___lwmod@divisor+1)& (0+255),b
  4882  00679E  0E0A               	movlw	10
  4883  0067A0  6FD0               	movwf	___lwmod@divisor& (0+255),b
  4884  0067A2  EC4F  F028         	call	___lwmod	;wreg free
  4885  0067A6  51CE               	movf	?___lwmod& (0+255),w,b
  4886  0067A8  0F30               	addlw	48
  4887  0067AA  6FE5               	movwf	(oled_putUint16@numData+1)& (0+255),b
  4888                           
  4889                           ;SSD1306oLED.c: 250: number /= 10;
  4890  0067AC  C0E0  F0CE         	movff	oled_putUint16@number,___lwdiv@dividend
  4891  0067B0  C0E1  F0CF         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  4892  0067B4  6BD1               	clrf	(___lwdiv@divisor+1)& (0+255),b
  4893  0067B6  0E0A               	movlw	10
  4894  0067B8  6FD0               	movwf	___lwdiv@divisor& (0+255),b
  4895  0067BA  ECB5  F028         	call	___lwdiv	;wreg free
  4896  0067BE  C0CE  F0E0         	movff	?___lwdiv,oled_putUint16@number
  4897  0067C2  C0CF  F0E1         	movff	?___lwdiv+1,oled_putUint16@number+1
  4898                           
  4899                           ;SSD1306oLED.c: 251: numData.d0 = '0' + (number % 10);
  4900  0067C6  C0E0  F0CE         	movff	oled_putUint16@number,___lwmod@dividend
  4901  0067CA  C0E1  F0CF         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  4902  0067CE  6BD1               	clrf	(___lwmod@divisor+1)& (0+255),b
  4903  0067D0  0E0A               	movlw	10
  4904  0067D2  6FD0               	movwf	___lwmod@divisor& (0+255),b
  4905  0067D4  EC4F  F028         	call	___lwmod	;wreg free
  4906  0067D8  51CE               	movf	?___lwmod& (0+255),w,b
  4907  0067DA  0F30               	addlw	48
  4908  0067DC  6FE4               	movwf	oled_putUint16@numData& (0+255),b
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;SSD1306oLED.c: 253: numData.b[5]=0;
  4912  0067DE  6BE9               	clrf	(oled_putUint16@numData+5)& (0+255),b
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;SSD1306oLED.c: 255: oled_putString(numData.b,station_dot,start_page);
  4916  0067E0  0EE4               	movlw	low oled_putUint16@numData
  4917  0067E2  6FDB               	movwf	oled_putString@string& (0+255),b
  4918  0067E4  6BDC               	clrf	(oled_putString@string+1)& (0+255),b
  4919  0067E6  C0E2  F0DD         	movff	oled_putUint16@station_dot,oled_putString@station_dot
  4920  0067EA  C0E3  F0DE         	movff	oled_putUint16@start_page,oled_putString@start_page
  4921  0067EE  EFB4  F02A         	goto	_oled_putString	;wreg free
  4922  0067F2                     __end_of_oled_putUint16:
  4923                           	opt stack 0
  4924                           tblptru	equ	0xFF8
  4925                           tblptrh	equ	0xFF7
  4926                           tblptrl	equ	0xFF6
  4927                           tablat	equ	0xFF5
  4928                           intcon	equ	0xFF2
  4929                           postinc0	equ	0xFEE
  4930                           wreg	equ	0xFE8
  4931                           indf2	equ	0xFDF
  4932                           fsr2h	equ	0xFDA
  4933                           fsr2l	equ	0xFD9
  4934                           status	equ	0xFD8
  4935                           
  4936 ;; *************** function _moteApp_clearBuffers *****************
  4937 ;; Defined at:
  4938 ;;		line 1006 in file "../Includes/Board/MOTEapp.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;		None
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  counter         1    2[BANK0 ] unsigned char 
  4943 ;;  counter         1    1[BANK0 ] unsigned char 
  4944 ;;  counter         1    0[BANK0 ] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : F/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4954 ;;      Params:         0       0       0       0       0       0       0       0       0
  4955 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4957 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4958 ;;Total ram usage:        3 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:   11
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_moteRunningProcess
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text8
  4969  0050DC                     __ptext8:
  4970                           	opt stack 0
  4971  0050DC                     _moteApp_clearBuffers:
  4972                           	opt stack 17
  4973                           
  4974                           ;MOTEapp.c: 1008: for (uint8_t counter = 0; counter < 3; counter++)
  4975                           
  4976                           ;incstack = 0
  4977  0050DC  0100               	movlb	0	; () banked
  4978  0050DE  6BCE               	clrf	moteApp_clearBuffers@counter& (0+255),b
  4979  0050E0                     l8447:
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;MOTEapp.c: 1009: {
  4983                           ;MOTEapp.c: 1010: responsePortNum[counter] = 0;
  4984  0050E0  51CE               	movf	moteApp_clearBuffers@counter& (0+255),w,b
  4985  0050E2  0F7E               	addlw	low _responsePortNum
  4986  0050E4  6ED9               	movwf	fsr2l,c
  4987  0050E6  6ADA               	clrf	fsr2h,c
  4988  0050E8  6ADF               	clrf	indf2,c
  4989                           
  4990                           ; BSR set to: 0
  4991  0050EA  2BCE               	incf	moteApp_clearBuffers@counter& (0+255),f,b
  4992                           
  4993                           ; BSR set to: 0
  4994  0050EC  0E02               	movlw	2
  4995  0050EE  65CE               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
  4996  0050F0  D7F7               	goto	l8447
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;MOTEapp.c: 1011: }
  5000                           ;MOTEapp.c: 1012: for (uint8_t counter = 0; counter < 34; counter++)
  5001  0050F2  6BCF               	clrf	moteApp_clearBuffers@counter_1498& (0+255),b
  5002  0050F4                     l8457:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;MOTEapp.c: 1013: {
  5006                           ;MOTEapp.c: 1014: responseId[counter] = 0;
  5007  0050F4  0E40               	movlw	low _responseId
  5008  0050F6  25CF               	addwf	moteApp_clearBuffers@counter_1498& (0+255),w,b
  5009  0050F8  6ED9               	movwf	fsr2l,c
  5010  0050FA  6ADA               	clrf	fsr2h,c
  5011  0050FC  0E01               	movlw	high _responseId
  5012  0050FE  22DA               	addwfc	fsr2h,f,c
  5013  005100  6ADF               	clrf	indf2,c
  5014                           
  5015                           ; BSR set to: 0
  5016  005102  2BCF               	incf	moteApp_clearBuffers@counter_1498& (0+255),f,b
  5017                           
  5018                           ; BSR set to: 0
  5019  005104  0E21               	movlw	33
  5020  005106  65CF               	cpfsgt	moteApp_clearBuffers@counter_1498& (0+255),b
  5021  005108  D7F5               	goto	l8457
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;MOTEapp.c: 1015: }
  5025                           ;MOTEapp.c: 1016: for (uint8_t counter = 0; counter < 10; counter++)
  5026  00510A  6BD0               	clrf	moteApp_clearBuffers@counter_1499& (0+255),b
  5027  00510C                     l8467:
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;MOTEapp.c: 1017: {
  5031                           ;MOTEapp.c: 1018: responseData[counter] = 0;
  5032  00510C  51D0               	movf	moteApp_clearBuffers@counter_1499& (0+255),w,b
  5033  00510E  0F60               	addlw	low _responseData
  5034  005110  6ED9               	movwf	fsr2l,c
  5035  005112  6ADA               	clrf	fsr2h,c
  5036  005114  6ADF               	clrf	indf2,c
  5037                           
  5038                           ; BSR set to: 0
  5039  005116  2BD0               	incf	moteApp_clearBuffers@counter_1499& (0+255),f,b
  5040                           
  5041                           ; BSR set to: 0
  5042  005118  0E09               	movlw	9
  5043  00511A  65D0               	cpfsgt	moteApp_clearBuffers@counter_1499& (0+255),b
  5044  00511C  D7F7               	goto	l8467
  5045  00511E  0C09               	retlw	9
  5046  005120                     __end_of_moteApp_clearBuffers:
  5047                           	opt stack 0
  5048                           tblptru	equ	0xFF8
  5049                           tblptrh	equ	0xFF7
  5050                           tblptrl	equ	0xFF6
  5051                           tablat	equ	0xFF5
  5052                           intcon	equ	0xFF2
  5053                           postinc0	equ	0xFEE
  5054                           wreg	equ	0xFE8
  5055                           indf2	equ	0xFDF
  5056                           fsr2h	equ	0xFDA
  5057                           fsr2l	equ	0xFD9
  5058                           status	equ	0xFD8
  5059                           
  5060 ;; *************** function _moteApp_add8bToDataBuffer *****************
  5061 ;; Defined at:
  5062 ;;		line 1022 in file "../Includes/Board/MOTEapp.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;  number          1    wreg     unsigned char 
  5065 ;;  bufferLocati    1    4[BANK0 ] unsigned char 
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;  number          1    5[BANK0 ] unsigned char 
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      void 
  5070 ;; Registers used:
  5071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5072 ;; Tracked objects:
  5073 ;;		On entry : F/0
  5074 ;;		On exit  : F/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5077 ;;      Params:         0       1       0       0       0       0       0       0       0
  5078 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5080 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5081 ;;Total ram usage:        2 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:   12
  5084 ;; This function calls:
  5085 ;;		___lbdiv
  5086 ;;		___lbmod
  5087 ;; This function is called by:
  5088 ;;		_moteRunningProcess
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           	psect	text9
  5093  0054A4                     __ptext9:
  5094                           	opt stack 0
  5095  0054A4                     _moteApp_add8bToDataBuffer:
  5096                           	opt stack 16
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;incstack = 0
  5100                           ;moteApp_add8bToDataBuffer@number stored from wreg
  5101  0054A4  6FD3               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5102                           
  5103                           ;MOTEapp.c: 1024: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  5104  0054A6  0100               	movlb	0	; () banked
  5105  0054A8  51D2               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5106  0054AA  0FA9               	addlw	low (_dataBuffer+2)
  5107  0054AC  6ED9               	movwf	fsr2l,c
  5108  0054AE  6ADA               	clrf	fsr2h,c
  5109  0054B0  0E0A               	movlw	10
  5110  0054B2  6FCE               	movwf	___lbmod@divisor& (0+255),b
  5111  0054B4  51D3               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5112  0054B6  EC9A  F026         	call	___lbmod
  5113  0054BA  0F30               	addlw	48
  5114  0054BC  6EDF               	movwf	indf2,c
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;MOTEapp.c: 1025: number /= 10;
  5118  0054BE  0E0A               	movlw	10
  5119  0054C0  6FCE               	movwf	___lbdiv@divisor& (0+255),b
  5120  0054C2  51D3               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5121  0054C4  ECBF  F027         	call	___lbdiv
  5122  0054C8  6FD3               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;MOTEapp.c: 1026: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  5126  0054CA  51D2               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5127  0054CC  0FA8               	addlw	low (_dataBuffer+1)
  5128  0054CE  6ED9               	movwf	fsr2l,c
  5129  0054D0  6ADA               	clrf	fsr2h,c
  5130  0054D2  0E0A               	movlw	10
  5131  0054D4  6FCE               	movwf	___lbmod@divisor& (0+255),b
  5132  0054D6  51D3               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5133  0054D8  EC9A  F026         	call	___lbmod
  5134  0054DC  0F30               	addlw	48
  5135  0054DE  6EDF               	movwf	indf2,c
  5136                           
  5137                           ;MOTEapp.c: 1027: number /= 10;
  5138  0054E0  0E0A               	movlw	10
  5139  0054E2  6FCE               	movwf	___lbdiv@divisor& (0+255),b
  5140  0054E4  51D3               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5141  0054E6  ECBF  F027         	call	___lbdiv
  5142  0054EA  6FD3               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;MOTEapp.c: 1028: dataBuffer[bufferLocation] = '0' + (number % 10);
  5146  0054EC  51D2               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5147  0054EE  0FA7               	addlw	low _dataBuffer
  5148  0054F0  6ED9               	movwf	fsr2l,c
  5149  0054F2  6ADA               	clrf	fsr2h,c
  5150  0054F4  0E0A               	movlw	10
  5151  0054F6  6FCE               	movwf	___lbmod@divisor& (0+255),b
  5152  0054F8  51D3               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5153  0054FA  EC9A  F026         	call	___lbmod
  5154  0054FE  0F30               	addlw	48
  5155  005500  6EDF               	movwf	indf2,c
  5156                           
  5157                           ; BSR set to: 0
  5158  005502  0012               	return		;funcret
  5159  005504                     __end_of_moteApp_add8bToDataBuffer:
  5160                           	opt stack 0
  5161                           tblptru	equ	0xFF8
  5162                           tblptrh	equ	0xFF7
  5163                           tblptrl	equ	0xFF6
  5164                           tablat	equ	0xFF5
  5165                           intcon	equ	0xFF2
  5166                           postinc0	equ	0xFEE
  5167                           wreg	equ	0xFE8
  5168                           indf2	equ	0xFDF
  5169                           fsr2h	equ	0xFDA
  5170                           fsr2l	equ	0xFD9
  5171                           status	equ	0xFD8
  5172                           
  5173 ;; *************** function ___lbmod *****************
  5174 ;; Defined at:
  5175 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbmod.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  dividend        1    wreg     unsigned char 
  5178 ;;  divisor         1    0[BANK0 ] unsigned char 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  dividend        1    1[BANK0 ] unsigned char 
  5181 ;;  rem             1    3[BANK0 ] unsigned char 
  5182 ;;  counter         1    2[BANK0 ] unsigned char 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      unsigned char 
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, status,0
  5187 ;; Tracked objects:
  5188 ;;		On entry : F/0
  5189 ;;		On exit  : F/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5192 ;;      Params:         0       1       0       0       0       0       0       0       0
  5193 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5195 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5196 ;;Total ram usage:        4 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; Hardware stack levels required when called:   11
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_moteApp_add8bToDataBuffer
  5203 ;;		_oled_putUint8
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text10
  5208  004D34                     __ptext10:
  5209                           	opt stack 0
  5210  004D34                     ___lbmod:
  5211                           	opt stack 16
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;incstack = 0
  5215                           ;___lbmod@dividend stored from wreg
  5216  004D34  6FCF               	movwf	___lbmod@dividend& (0+255),b
  5217  004D36  0E08               	movlw	8
  5218  004D38  0100               	movlb	0	; () banked
  5219  004D3A  6FD0               	movwf	___lbmod@counter& (0+255),b
  5220                           
  5221                           ; BSR set to: 0
  5222  004D3C  6BD1               	clrf	___lbmod@rem& (0+255),b
  5223  004D3E                     l8283:
  5224                           
  5225                           ; BSR set to: 0
  5226  004D3E  90D8               	bcf	status,0,c
  5227  004D40  35CF               	rlcf	___lbmod@dividend& (0+255),w,b
  5228  004D42  35D1               	rlcf	___lbmod@rem& (0+255),w,b
  5229  004D44  6FD1               	movwf	___lbmod@rem& (0+255),b
  5230                           
  5231                           ; BSR set to: 0
  5232  004D46  90D8               	bcf	status,0,c
  5233  004D48  37CF               	rlcf	___lbmod@dividend& (0+255),f,b
  5234                           
  5235                           ; BSR set to: 0
  5236  004D4A  51CE               	movf	___lbmod@divisor& (0+255),w,b
  5237  004D4C  5DD1               	subwf	___lbmod@rem& (0+255),w,b
  5238  004D4E  E302               	bnc	l8291
  5239                           
  5240                           ; BSR set to: 0
  5241  004D50  51CE               	movf	___lbmod@divisor& (0+255),w,b
  5242  004D52  5FD1               	subwf	___lbmod@rem& (0+255),f,b
  5243  004D54                     l8291:
  5244                           
  5245                           ; BSR set to: 0
  5246  004D54  2FD0               	decfsz	___lbmod@counter& (0+255),f,b
  5247  004D56  D7F3               	goto	l8283
  5248                           
  5249                           ; BSR set to: 0
  5250  004D58  51D1               	movf	___lbmod@rem& (0+255),w,b
  5251                           
  5252                           ; BSR set to: 0
  5253  004D5A  0012               	return		;funcret
  5254  004D5C                     __end_of___lbmod:
  5255                           	opt stack 0
  5256                           tblptru	equ	0xFF8
  5257                           tblptrh	equ	0xFF7
  5258                           tblptrl	equ	0xFF6
  5259                           tablat	equ	0xFF5
  5260                           intcon	equ	0xFF2
  5261                           postinc0	equ	0xFEE
  5262                           wreg	equ	0xFE8
  5263                           indf2	equ	0xFDF
  5264                           fsr2h	equ	0xFDA
  5265                           fsr2l	equ	0xFD9
  5266                           status	equ	0xFD8
  5267                           
  5268 ;; *************** function ___lbdiv *****************
  5269 ;; Defined at:
  5270 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbdiv.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  dividend        1    wreg     unsigned char 
  5273 ;;  divisor         1    0[BANK0 ] unsigned char 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  dividend        1    1[BANK0 ] unsigned char 
  5276 ;;  quotient        1    3[BANK0 ] unsigned char 
  5277 ;;  counter         1    2[BANK0 ] unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      unsigned char 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0
  5282 ;; Tracked objects:
  5283 ;;		On entry : F/0
  5284 ;;		On exit  : F/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5287 ;;      Params:         0       1       0       0       0       0       0       0       0
  5288 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5290 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5291 ;;Total ram usage:        4 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:   11
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_moteApp_add8bToDataBuffer
  5298 ;;		_oled_putUint8
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text11
  5303  004F7E                     __ptext11:
  5304                           	opt stack 0
  5305  004F7E                     ___lbdiv:
  5306                           	opt stack 16
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;incstack = 0
  5310                           ;___lbdiv@dividend stored from wreg
  5311  004F7E  6FCF               	movwf	___lbdiv@dividend& (0+255),b
  5312  004F80  0100               	movlb	0	; () banked
  5313  004F82  6BD1               	clrf	___lbdiv@quotient& (0+255),b
  5314                           
  5315                           ; BSR set to: 0
  5316  004F84  51CE               	movf	___lbdiv@divisor& (0+255),w,b
  5317  004F86  E014               	bz	l8275
  5318                           
  5319                           ; BSR set to: 0
  5320  004F88  0E01               	movlw	1
  5321  004F8A  6FD0               	movwf	___lbdiv@counter& (0+255),b
  5322  004F8C  D003               	goto	l8263
  5323  004F8E                     l8259:
  5324                           
  5325                           ; BSR set to: 0
  5326  004F8E  90D8               	bcf	status,0,c
  5327  004F90  37CE               	rlcf	___lbdiv@divisor& (0+255),f,b
  5328                           
  5329                           ; BSR set to: 0
  5330  004F92  2BD0               	incf	___lbdiv@counter& (0+255),f,b
  5331  004F94                     l8263:
  5332                           
  5333                           ; BSR set to: 0
  5334  004F94  AFCE               	btfss	___lbdiv@divisor& (0+255),7,b
  5335  004F96  D7FB               	goto	l8259
  5336  004F98                     l8265:
  5337                           
  5338                           ; BSR set to: 0
  5339  004F98  90D8               	bcf	status,0,c
  5340  004F9A  37D1               	rlcf	___lbdiv@quotient& (0+255),f,b
  5341  004F9C  51CE               	movf	___lbdiv@divisor& (0+255),w,b
  5342  004F9E  5DCF               	subwf	___lbdiv@dividend& (0+255),w,b
  5343  004FA0  E303               	bnc	l8271
  5344                           
  5345                           ; BSR set to: 0
  5346  004FA2  51CE               	movf	___lbdiv@divisor& (0+255),w,b
  5347  004FA4  5FCF               	subwf	___lbdiv@dividend& (0+255),f,b
  5348                           
  5349                           ; BSR set to: 0
  5350  004FA6  81D1               	bsf	___lbdiv@quotient& (0+255),0,b
  5351  004FA8                     l8271:
  5352                           
  5353                           ; BSR set to: 0
  5354  004FA8  90D8               	bcf	status,0,c
  5355  004FAA  33CE               	rrcf	___lbdiv@divisor& (0+255),f,b
  5356                           
  5357                           ; BSR set to: 0
  5358  004FAC  2FD0               	decfsz	___lbdiv@counter& (0+255),f,b
  5359  004FAE  D7F4               	goto	l8265
  5360  004FB0                     l8275:
  5361                           
  5362                           ; BSR set to: 0
  5363  004FB0  51D1               	movf	___lbdiv@quotient& (0+255),w,b
  5364                           
  5365                           ; BSR set to: 0
  5366  004FB2  0012               	return		;funcret
  5367  004FB4                     __end_of___lbdiv:
  5368                           	opt stack 0
  5369                           tblptru	equ	0xFF8
  5370                           tblptrh	equ	0xFF7
  5371                           tblptrl	equ	0xFF6
  5372                           tablat	equ	0xFF5
  5373                           intcon	equ	0xFF2
  5374                           postinc0	equ	0xFEE
  5375                           wreg	equ	0xFE8
  5376                           indf2	equ	0xFDF
  5377                           fsr2h	equ	0xFDA
  5378                           fsr2l	equ	0xFD9
  5379                           status	equ	0xFD8
  5380                           
  5381 ;; *************** function _moteApp_add16bToDataBuffer *****************
  5382 ;; Defined at:
  5383 ;;		line 1031 in file "../Includes/Board/MOTEapp.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;  number          2    7[BANK0 ] unsigned int 
  5386 ;;  bufferLocati    1    9[BANK0 ] unsigned char 
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;		None
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      void 
  5391 ;; Registers used:
  5392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5393 ;; Tracked objects:
  5394 ;;		On entry : F/0
  5395 ;;		On exit  : F/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5398 ;;      Params:         0       3       0       0       0       0       0       0       0
  5399 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5401 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5402 ;;Total ram usage:        3 bytes
  5403 ;; Hardware stack levels used:    1
  5404 ;; Hardware stack levels required when called:   12
  5405 ;; This function calls:
  5406 ;;		___lwdiv
  5407 ;;		___lwmod
  5408 ;; This function is called by:
  5409 ;;		_moteRunningProcess
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text12
  5414  006AF2                     __ptext12:
  5415                           	opt stack 0
  5416  006AF2                     _moteApp_add16bToDataBuffer:
  5417                           	opt stack 16
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;MOTEapp.c: 1033: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;incstack = 0
  5424  006AF2  51D7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5425  006AF4  0FAB               	addlw	low (_dataBuffer+4)
  5426  006AF6  6ED9               	movwf	fsr2l,c
  5427  006AF8  6ADA               	clrf	fsr2h,c
  5428  006AFA  C0D5  F0CE         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5429  006AFE  C0D6  F0CF         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5430  006B02  6BD1               	clrf	(___lwmod@divisor+1)& (0+255),b
  5431  006B04  0E0A               	movlw	10
  5432  006B06  6FD0               	movwf	___lwmod@divisor& (0+255),b
  5433  006B08  EC4F  F028         	call	___lwmod	;wreg free
  5434  006B0C  51CE               	movf	?___lwmod& (0+255),w,b
  5435  006B0E  0F30               	addlw	48
  5436  006B10  6EDF               	movwf	indf2,c
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;MOTEapp.c: 1034: number /= 10;
  5440  006B12  C0D5  F0CE         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5441  006B16  C0D6  F0CF         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5442  006B1A  6BD1               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5443  006B1C  0E0A               	movlw	10
  5444  006B1E  6FD0               	movwf	___lwdiv@divisor& (0+255),b
  5445  006B20  ECB5  F028         	call	___lwdiv	;wreg free
  5446  006B24  C0CE  F0D5         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5447  006B28  C0CF  F0D6         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;MOTEapp.c: 1035: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
  5451  006B2C  51D7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5452  006B2E  0FAA               	addlw	low (_dataBuffer+3)
  5453  006B30  6ED9               	movwf	fsr2l,c
  5454  006B32  6ADA               	clrf	fsr2h,c
  5455  006B34  C0D5  F0CE         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5456  006B38  C0D6  F0CF         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5457  006B3C  6BD1               	clrf	(___lwmod@divisor+1)& (0+255),b
  5458  006B3E  0E0A               	movlw	10
  5459  006B40  6FD0               	movwf	___lwmod@divisor& (0+255),b
  5460  006B42  EC4F  F028         	call	___lwmod	;wreg free
  5461  006B46  51CE               	movf	?___lwmod& (0+255),w,b
  5462  006B48  0F30               	addlw	48
  5463  006B4A  6EDF               	movwf	indf2,c
  5464                           
  5465                           ;MOTEapp.c: 1036: number /= 10;
  5466  006B4C  C0D5  F0CE         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5467  006B50  C0D6  F0CF         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5468  006B54  6BD1               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5469  006B56  0E0A               	movlw	10
  5470  006B58  6FD0               	movwf	___lwdiv@divisor& (0+255),b
  5471  006B5A  ECB5  F028         	call	___lwdiv	;wreg free
  5472  006B5E  C0CE  F0D5         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5473  006B62  C0CF  F0D6         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;MOTEapp.c: 1037: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  5477  006B66  51D7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5478  006B68  0FA9               	addlw	low (_dataBuffer+2)
  5479  006B6A  6ED9               	movwf	fsr2l,c
  5480  006B6C  6ADA               	clrf	fsr2h,c
  5481  006B6E  C0D5  F0CE         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5482  006B72  C0D6  F0CF         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5483  006B76  6BD1               	clrf	(___lwmod@divisor+1)& (0+255),b
  5484  006B78  0E0A               	movlw	10
  5485  006B7A  6FD0               	movwf	___lwmod@divisor& (0+255),b
  5486  006B7C  EC4F  F028         	call	___lwmod	;wreg free
  5487  006B80  51CE               	movf	?___lwmod& (0+255),w,b
  5488  006B82  0F30               	addlw	48
  5489  006B84  6EDF               	movwf	indf2,c
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;MOTEapp.c: 1038: number /= 10;
  5493  006B86  C0D5  F0CE         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5494  006B8A  C0D6  F0CF         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5495  006B8E  6BD1               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5496  006B90  0E0A               	movlw	10
  5497  006B92  6FD0               	movwf	___lwdiv@divisor& (0+255),b
  5498  006B94  ECB5  F028         	call	___lwdiv	;wreg free
  5499  006B98  C0CE  F0D5         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5500  006B9C  C0CF  F0D6         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5501                           
  5502                           ;MOTEapp.c: 1039: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  5503  006BA0  51D7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5504  006BA2  0FA8               	addlw	low (_dataBuffer+1)
  5505  006BA4  6ED9               	movwf	fsr2l,c
  5506  006BA6  6ADA               	clrf	fsr2h,c
  5507  006BA8  C0D5  F0CE         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5508  006BAC  C0D6  F0CF         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5509  006BB0  6BD1               	clrf	(___lwmod@divisor+1)& (0+255),b
  5510  006BB2  0E0A               	movlw	10
  5511  006BB4  6FD0               	movwf	___lwmod@divisor& (0+255),b
  5512  006BB6  EC4F  F028         	call	___lwmod	;wreg free
  5513  006BBA  51CE               	movf	?___lwmod& (0+255),w,b
  5514  006BBC  0F30               	addlw	48
  5515  006BBE  6EDF               	movwf	indf2,c
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;MOTEapp.c: 1040: number /= 10;
  5519  006BC0  C0D5  F0CE         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5520  006BC4  C0D6  F0CF         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5521  006BC8  6BD1               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5522  006BCA  0E0A               	movlw	10
  5523  006BCC  6FD0               	movwf	___lwdiv@divisor& (0+255),b
  5524  006BCE  ECB5  F028         	call	___lwdiv	;wreg free
  5525  006BD2  C0CE  F0D5         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5526  006BD6  C0CF  F0D6         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;MOTEapp.c: 1041: dataBuffer[bufferLocation] = '0' + (number % 10);
  5530  006BDA  51D7               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5531  006BDC  0FA7               	addlw	low _dataBuffer
  5532  006BDE  6ED9               	movwf	fsr2l,c
  5533  006BE0  6ADA               	clrf	fsr2h,c
  5534  006BE2  C0D5  F0CE         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5535  006BE6  C0D6  F0CF         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5536  006BEA  6BD1               	clrf	(___lwmod@divisor+1)& (0+255),b
  5537  006BEC  0E0A               	movlw	10
  5538  006BEE  6FD0               	movwf	___lwmod@divisor& (0+255),b
  5539  006BF0  EC4F  F028         	call	___lwmod	;wreg free
  5540  006BF4  51CE               	movf	?___lwmod& (0+255),w,b
  5541  006BF6  0F30               	addlw	48
  5542  006BF8  6EDF               	movwf	indf2,c
  5543                           
  5544                           ; BSR set to: 0
  5545  006BFA  0012               	return		;funcret
  5546  006BFC                     __end_of_moteApp_add16bToDataBuffer:
  5547                           	opt stack 0
  5548                           tblptru	equ	0xFF8
  5549                           tblptrh	equ	0xFF7
  5550                           tblptrl	equ	0xFF6
  5551                           tablat	equ	0xFF5
  5552                           intcon	equ	0xFF2
  5553                           postinc0	equ	0xFEE
  5554                           wreg	equ	0xFE8
  5555                           indf2	equ	0xFDF
  5556                           fsr2h	equ	0xFDA
  5557                           fsr2l	equ	0xFD9
  5558                           status	equ	0xFD8
  5559                           
  5560 ;; *************** function _moteApp_GoToSleep *****************
  5561 ;; Defined at:
  5562 ;;		line 915 in file "../Includes/Board/MOTEapp.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;		None
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  status          1    0        unsigned char 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      unsigned char 
  5569 ;; Registers used:
  5570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5571 ;; Tracked objects:
  5572 ;;		On entry : F/0
  5573 ;;		On exit  : F/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5576 ;;      Params:         0       0       0       0       0       0       0       0       0
  5577 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5579 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5580 ;;Total ram usage:        1 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:   18
  5583 ;; This function calls:
  5584 ;;		_EUSART_FlushBuffer
  5585 ;;		_EUSART_Initialize
  5586 ;;		_PIN_MANAGER_Initialize
  5587 ;;		_modemResync
  5588 ;;		_modemSleep
  5589 ;;		_oled_displayOff
  5590 ;;		_oled_init
  5591 ;; This function is called by:
  5592 ;;		_moteRunningProcess
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text13
  5597  005636                     __ptext13:
  5598                           	opt stack 0
  5599  005636                     _moteApp_GoToSleep:
  5600                           	opt stack 10
  5601  005636                     l555:
  5602                           
  5603                           ; BSR set to: 0
  5604  005636  A282               	btfss	3970,1,c	;volatile
  5605  005638  D7FE               	goto	l555
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;MOTEapp.c: 919: modemSleep();
  5609  00563A  ECCD  F025         	call	_modemSleep	;wreg free
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;MOTEapp.c: 920: oled_displayOff(1);
  5613  00563E  0E01               	movlw	1
  5614  005640  EC6D  F025         	call	_oled_displayOff
  5615                           
  5616                           ;MOTEapp.c: 921: ADCON0bits.ADON = 0;
  5617  005644  90C2               	bcf	4034,0,c	;volatile
  5618                           
  5619                           ;MOTEapp.c: 922: INTCONbits.GIE = 0;
  5620  005646  9EF2               	bcf	intcon,7,c	;volatile
  5621                           
  5622                           ;MOTEapp.c: 923: GIE = 0;
  5623  005648  9EF2               	bcf	intcon,7,c	;volatile
  5624                           
  5625                           ;MOTEapp.c: 924: PEIE = 0;
  5626  00564A  9CF2               	bcf	intcon,6,c	;volatile
  5627                           
  5628                           ;MOTEapp.c: 926: ANSELAbits.ANSA0 = 1;
  5629  00564C  010F               	movlb	15	; () banked
  5630  00564E  815B               	bsf	91,0,b	;volatile
  5631                           
  5632                           ; BSR set to: 15
  5633                           ;MOTEapp.c: 928: PIE2bits.C1IE = 1;
  5634  005650  8CA0               	bsf	4000,6,c	;volatile
  5635                           
  5636                           ; BSR set to: 15
  5637                           ;MOTEapp.c: 929: IOCCbits.IOCC0 = 1;
  5638  005652  8087               	bsf	3975,0,c	;volatile
  5639                           
  5640                           ; BSR set to: 15
  5641                           ;MOTEapp.c: 930: IOCCbits.IOCC1 = 1;
  5642  005654  8287               	bsf	3975,1,c	;volatile
  5643                           
  5644                           ; BSR set to: 15
  5645                           ;MOTEapp.c: 931: IOCCbits.IOCC2 = 1;
  5646  005656  8487               	bsf	3975,2,c	;volatile
  5647                           
  5648                           ; BSR set to: 15
  5649                           ;MOTEapp.c: 932: INTCONbits.IOCIE = 1;
  5650  005658  86F2               	bsf	intcon,3,c	;volatile
  5651                           
  5652                           ; BSR set to: 15
  5653  00565A  5082               	movf	3970,w,c	;volatile
  5654                           
  5655                           ; BSR set to: 15
  5656  00565C  5082               	movf	3970,w,c	;volatile
  5657                           
  5658                           ; BSR set to: 15
  5659  00565E  5082               	movf	3970,w,c	;volatile
  5660                           
  5661                           ; BSR set to: 15
  5662                           ;MOTEapp.c: 940: }
  5663                           ;MOTEapp.c: 941: INTCONbits.IOCIF = 0;
  5664  005660  90F2               	bcf	intcon,0,c	;volatile
  5665                           
  5666                           ; BSR set to: 15
  5667                           ;MOTEapp.c: 942: PIR2bits.C1IF = 0;
  5668  005662  9CA1               	bcf	4001,6,c	;volatile
  5669                           
  5670                           ; BSR set to: 15
  5671                           ;MOTEapp.c: 943: __nop();
  5672  005664  F000               	nop	
  5673  005666  0003               	sleep		;# 
  5674                           
  5675                           ;MOTEapp.c: 945: __nop();
  5676  005668  F000               	nop	
  5677                           
  5678                           ;MOTEapp.c: 948: EUSART_FlushBuffer();
  5679  00566A  EC45  F027         	call	_EUSART_FlushBuffer	;wreg free
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;MOTEapp.c: 950: INTCONbits.IOCIE = 0;
  5683  00566E  96F2               	bcf	intcon,3,c	;volatile
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;MOTEapp.c: 951: IOCCbits.IOCC0 = 0;
  5687  005670  9087               	bcf	3975,0,c	;volatile
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;MOTEapp.c: 952: IOCCbits.IOCC1 = 0;
  5691  005672  9287               	bcf	3975,1,c	;volatile
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;MOTEapp.c: 953: IOCCbits.IOCC2 = 0;
  5695  005674  9487               	bcf	3975,2,c	;volatile
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;MOTEapp.c: 954: PIE2bits.C1IE = 0;
  5699  005676  9CA0               	bcf	4000,6,c	;volatile
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;MOTEapp.c: 955: GIE = 1;
  5703  005678  8EF2               	bsf	intcon,7,c	;volatile
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;MOTEapp.c: 957: PIN_MANAGER_Initialize();
  5707  00567A  EC25  F029         	call	_PIN_MANAGER_Initialize	;wreg free
  5708                           
  5709                           ; BSR set to: 15
  5710                           ;MOTEapp.c: 958: EUSART_Initialize();
  5711  00567E  EC03  F027         	call	_EUSART_Initialize	;wreg free
  5712                           
  5713                           ;MOTEapp.c: 960: if (INTCONbits.IOCIF)
  5714  005682  A0F2               	btfss	intcon,0,c	;volatile
  5715  005684  D002               	goto	l8595
  5716                           
  5717                           ;MOTEapp.c: 961: {
  5718                           ;MOTEapp.c: 962: INTCONbits.IOCIF = 0;
  5719  005686  90F2               	bcf	intcon,0,c	;volatile
  5720                           
  5721                           ;MOTEapp.c: 964: }
  5722  005688  D003               	goto	l8599
  5723  00568A                     l8595:
  5724                           
  5725                           ;MOTEapp.c: 970: else
  5726                           ;MOTEapp.c: 971: {
  5727                           ;MOTEapp.c: 972: secTicker = 10;
  5728  00568A  0E0A               	movlw	10
  5729  00568C  0100               	movlb	0	; () banked
  5730  00568E  6FA3               	movwf	_secTicker& (0+255),b
  5731  005690                     l8599:
  5732                           
  5733                           ;MOTEapp.c: 974: }
  5734                           ;MOTEapp.c: 975: ANSELAbits.ANSA0 = 0;
  5735  005690  010F               	movlb	15	; () banked
  5736  005692  915B               	bcf	91,0,b	;volatile
  5737                           
  5738                           ; BSR set to: 15
  5739                           ;MOTEapp.c: 976: oled_displayOff(0);
  5740  005694  0E00               	movlw	0
  5741  005696  EC6D  F025         	call	_oled_displayOff
  5742                           
  5743                           ;MOTEapp.c: 977: oled_init();
  5744  00569A  EC3A  F026         	call	_oled_init	;wreg free
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;MOTEapp.c: 979: modemResync();
  5748  00569E  EF82  F02A         	goto	_modemResync	;wreg free
  5749  0056A2                     __end_of_moteApp_GoToSleep:
  5750                           	opt stack 0
  5751                           tblptru	equ	0xFF8
  5752                           tblptrh	equ	0xFF7
  5753                           tblptrl	equ	0xFF6
  5754                           tablat	equ	0xFF5
  5755                           intcon	equ	0xFF2
  5756                           postinc0	equ	0xFEE
  5757                           wreg	equ	0xFE8
  5758                           indf2	equ	0xFDF
  5759                           fsr2h	equ	0xFDA
  5760                           fsr2l	equ	0xFD9
  5761                           status	equ	0xFD8
  5762                           
  5763 ;; *************** function _oled_init *****************
  5764 ;; Defined at:
  5765 ;;		line 308 in file "../Includes/Drivers/SSD1306oLED.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;		None
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;		None
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      void 
  5772 ;; Registers used:
  5773 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : F/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5779 ;;      Params:         0       0       0       0       0       0       0       0       0
  5780 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5782 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5783 ;;Total ram usage:        0 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:   17
  5786 ;; This function calls:
  5787 ;;		_oled_clear
  5788 ;;		_oled_devInit
  5789 ;;		_oled_setDisplay
  5790 ;;		_oled_setFont
  5791 ;; This function is called by:
  5792 ;;		_main
  5793 ;;		_moteApp_GoToSleep
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           	psect	text14
  5798  004C74                     __ptext14:
  5799                           	opt stack 0
  5800  004C74                     _oled_init:
  5801                           	opt stack 13
  5802                           
  5803                           ;SSD1306oLED.c: 311: TRISBbits.TRISB2=0;
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;incstack = 0
  5807  004C74  9493               	bcf	3987,2,c	;volatile
  5808                           
  5809                           ;SSD1306oLED.c: 312: TRISBbits.TRISB4=0;
  5810  004C76  9893               	bcf	3987,4,c	;volatile
  5811                           
  5812                           ;SSD1306oLED.c: 313: TRISBbits.TRISB5=0;
  5813  004C78  9A93               	bcf	3987,5,c	;volatile
  5814                           
  5815                           ;SSD1306oLED.c: 315: oled_devInit();
  5816  004C7A  EC32  F032         	call	_oled_devInit	;wreg free
  5817                           
  5818                           ;SSD1306oLED.c: 316: oled_setDisplay(Normal);
  5819  004C7E  0E00               	movlw	0
  5820  004C80  EC93  F025         	call	_oled_setDisplay
  5821                           
  5822                           ;SSD1306oLED.c: 318: oled_setFont(OledFont0);
  5823  004C84  0E2D               	movlw	low _OledFont0
  5824  004C86  0100               	movlb	0	; () banked
  5825  004C88  6FCE               	movwf	oled_setFont@font& (0+255),b
  5826  004C8A  0E78               	movlw	high _OledFont0
  5827  004C8C  6FCF               	movwf	(oled_setFont@font+1)& (0+255),b
  5828  004C8E  EC76  F025         	call	_oled_setFont	;wreg free
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;SSD1306oLED.c: 319: oled_clear();
  5832  004C92  EFB3  F025         	goto	_oled_clear	;wreg free
  5833  004C96                     __end_of_oled_init:
  5834                           	opt stack 0
  5835                           tblptru	equ	0xFF8
  5836                           tblptrh	equ	0xFF7
  5837                           tblptrl	equ	0xFF6
  5838                           tablat	equ	0xFF5
  5839                           intcon	equ	0xFF2
  5840                           postinc0	equ	0xFEE
  5841                           wreg	equ	0xFE8
  5842                           indf2	equ	0xFDF
  5843                           fsr2h	equ	0xFDA
  5844                           fsr2l	equ	0xFD9
  5845                           status	equ	0xFD8
  5846                           
  5847 ;; *************** function _oled_setFont *****************
  5848 ;; Defined at:
  5849 ;;		line 218 in file "../Includes/Drivers/SSD1306oLED.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  font            2    0[BANK0 ] PTR const unsigned char 
  5852 ;;		 -> OledFont0(768), 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;		None
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      void 
  5857 ;; Registers used:
  5858 ;;		wreg, status,2, status,0
  5859 ;; Tracked objects:
  5860 ;;		On entry : F/0
  5861 ;;		On exit  : F/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5864 ;;      Params:         0       2       0       0       0       0       0       0       0
  5865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5867 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5868 ;;Total ram usage:        2 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:   11
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_oled_init
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           	psect	text15
  5879  004AEC                     __ptext15:
  5880                           	opt stack 0
  5881  004AEC                     _oled_setFont:
  5882                           	opt stack 18
  5883                           
  5884                           ; BSR set to: 0
  5885                           ;SSD1306oLED.c: 220: if(font!=0)
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;incstack = 0
  5889  004AEC  51CE               	movf	oled_setFont@font& (0+255),w,b
  5890  004AEE  11CF               	iorwf	(oled_setFont@font+1)& (0+255),w,b
  5891  004AF0  B4D8               	btfsc	status,2,c
  5892  004AF2  0012               	return	
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;SSD1306oLED.c: 221: {
  5896                           ;SSD1306oLED.c: 222: selectedFont=font;
  5897  004AF4  C0CE  F0F5         	movff	oled_setFont@font,_selectedFont
  5898  004AF8  C0CF  F0F6         	movff	oled_setFont@font+1,_selectedFont+1
  5899                           
  5900                           ; BSR set to: 0
  5901  004AFC  0012               	return		;funcret
  5902  004AFE                     __end_of_oled_setFont:
  5903                           	opt stack 0
  5904                           tblptru	equ	0xFF8
  5905                           tblptrh	equ	0xFF7
  5906                           tblptrl	equ	0xFF6
  5907                           tablat	equ	0xFF5
  5908                           intcon	equ	0xFF2
  5909                           postinc0	equ	0xFEE
  5910                           wreg	equ	0xFE8
  5911                           indf2	equ	0xFDF
  5912                           fsr2h	equ	0xFDA
  5913                           fsr2l	equ	0xFD9
  5914                           status	equ	0xFD8
  5915                           
  5916 ;; *************** function _oled_setDisplay *****************
  5917 ;; Defined at:
  5918 ;;		line 383 in file "../Includes/Drivers/SSD1306oLED.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  displayType     1    wreg     enum E6298
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  displayType     1    2[BANK0 ] enum E6298
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      void 
  5925 ;; Registers used:
  5926 ;;		wreg, status,2, status,0, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5932 ;;      Params:         0       0       0       0       0       0       0       0       0
  5933 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5935 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5936 ;;Total ram usage:        1 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:   13
  5939 ;; This function calls:
  5940 ;;		_oled_writeCommand
  5941 ;; This function is called by:
  5942 ;;		_oled_init
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text16
  5947  004B26                     __ptext16:
  5948                           	opt stack 0
  5949  004B26                     _oled_setDisplay:
  5950                           	opt stack 16
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;incstack = 0
  5954                           ;oled_setDisplay@displayType stored from wreg
  5955  004B26  0100               	movlb	0	; () banked
  5956  004B28  6FD0               	movwf	oled_setDisplay@displayType& (0+255),b
  5957                           
  5958                           ;SSD1306oLED.c: 385: displayType = 0xA6 + displayType;
  5959  004B2A  0EA6               	movlw	166
  5960  004B2C  27D0               	addwf	oled_setDisplay@displayType& (0+255),f,b
  5961                           
  5962                           ; BSR set to: 0
  5963                           ;SSD1306oLED.c: 387: LATBbits.LATB4 = 0;
  5964  004B2E  988A               	bcf	3978,4,c	;volatile
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;SSD1306oLED.c: 389: oled_writeCommand(displayType);
  5968  004B30  51D0               	movf	oled_setDisplay@displayType& (0+255),w,b
  5969  004B32  EC34  F025         	call	_oled_writeCommand
  5970                           
  5971                           ;SSD1306oLED.c: 391: LATBbits.LATB4 = 1;
  5972  004B36  888A               	bsf	3978,4,c	;volatile
  5973  004B38  0012               	return		;funcret
  5974  004B3A                     __end_of_oled_setDisplay:
  5975                           	opt stack 0
  5976                           tblptru	equ	0xFF8
  5977                           tblptrh	equ	0xFF7
  5978                           tblptrl	equ	0xFF6
  5979                           tablat	equ	0xFF5
  5980                           intcon	equ	0xFF2
  5981                           postinc0	equ	0xFEE
  5982                           wreg	equ	0xFE8
  5983                           indf2	equ	0xFDF
  5984                           fsr2h	equ	0xFDA
  5985                           fsr2l	equ	0xFD9
  5986                           status	equ	0xFD8
  5987                           
  5988 ;; *************** function _oled_devInit *****************
  5989 ;; Defined at:
  5990 ;;		line 322 in file "../Includes/Drivers/SSD1306oLED.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;		None
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg, status,2, cstack
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6004 ;;      Params:         0       0       0       0       0       0       0       0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6006 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6007 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6008 ;;Total ram usage:        1 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:   13
  6011 ;; This function calls:
  6012 ;;		_oled_writeCommand
  6013 ;; This function is called by:
  6014 ;;		_oled_init
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text17
  6019  006464                     __ptext17:
  6020                           	opt stack 0
  6021  006464                     _oled_devInit:
  6022                           	opt stack 16
  6023                           
  6024                           ;SSD1306oLED.c: 324: LATBbits.LATB4 = 1;
  6025                           
  6026                           ;incstack = 0
  6027  006464  888A               	bsf	3978,4,c	;volatile
  6028                           
  6029                           ;SSD1306oLED.c: 326: LATBbits.LATB5 = 1;
  6030  006466  8A8A               	bsf	3978,5,c	;volatile
  6031                           
  6032                           ;SSD1306oLED.c: 330: LATBbits.LATB2 = 1;
  6033  006468  848A               	bsf	3978,2,c	;volatile
  6034                           
  6035                           ;SSD1306oLED.c: 331: _delay((unsigned long)((20)*(48000000/4000000.0)));
  6036  00646A  0E50               	movlw	80
  6037  00646C                     u7677:
  6038  00646C  2EE8               	decfsz	wreg,f,c
  6039  00646E  D7FE               	goto	u7677
  6040                           
  6041                           ;SSD1306oLED.c: 332: LATBbits.LATB2 = 0;
  6042  006470  948A               	bcf	3978,2,c	;volatile
  6043                           
  6044                           ;SSD1306oLED.c: 333: _delay((unsigned long)((200)*(48000000/4000000.0)));
  6045  006472  0E04               	movlw	4
  6046  006474  0100               	movlb	0	; () banked
  6047  006476  6FD0               	movwf	??_oled_devInit& (0+255),b
  6048  006478  0E1C               	movlw	28
  6049  00647A                     u7687:
  6050  00647A  2EE8               	decfsz	wreg,f,c
  6051  00647C  D7FE               	goto	u7687
  6052  00647E  2FD0               	decfsz	??_oled_devInit& (0+255),f,b
  6053  006480  D7FC               	goto	u7687
  6054  006482  D000               	nop2	
  6055                           
  6056                           ;SSD1306oLED.c: 334: LATBbits.LATB2 = 1;
  6057  006484  848A               	bsf	3978,2,c	;volatile
  6058                           
  6059                           ;SSD1306oLED.c: 336: LATBbits.LATB4 = 0;
  6060  006486  988A               	bcf	3978,4,c	;volatile
  6061                           
  6062                           ;SSD1306oLED.c: 337: _delay((unsigned long)((200)*(48000000/4000000.0)));
  6063  006488  0E04               	movlw	4
  6064  00648A  0100               	movlb	0	; () banked
  6065  00648C  6FD0               	movwf	??_oled_devInit& (0+255),b
  6066  00648E  0E1C               	movlw	28
  6067  006490                     u7697:
  6068  006490  2EE8               	decfsz	wreg,f,c
  6069  006492  D7FE               	goto	u7697
  6070  006494  2FD0               	decfsz	??_oled_devInit& (0+255),f,b
  6071  006496  D7FC               	goto	u7697
  6072  006498  D000               	nop2	
  6073                           
  6074                           ;SSD1306oLED.c: 338: LATBbits.LATB5 = 0;
  6075  00649A  9A8A               	bcf	3978,5,c	;volatile
  6076                           
  6077                           ;SSD1306oLED.c: 339: _delay((unsigned long)((200)*(48000000/4000000.0)));
  6078  00649C  0E04               	movlw	4
  6079  00649E  0100               	movlb	0	; () banked
  6080  0064A0  6FD0               	movwf	??_oled_devInit& (0+255),b
  6081  0064A2  0E1C               	movlw	28
  6082  0064A4                     u7707:
  6083  0064A4  2EE8               	decfsz	wreg,f,c
  6084  0064A6  D7FE               	goto	u7707
  6085  0064A8  2FD0               	decfsz	??_oled_devInit& (0+255),f,b
  6086  0064AA  D7FC               	goto	u7707
  6087  0064AC  D000               	nop2	
  6088                           
  6089                           ;SSD1306oLED.c: 342: oled_writeCommand(0xAE);
  6090  0064AE  0EAE               	movlw	174
  6091  0064B0  EC34  F025         	call	_oled_writeCommand
  6092                           
  6093                           ;SSD1306oLED.c: 344: oled_writeCommand(0xD5);
  6094  0064B4  0ED5               	movlw	213
  6095  0064B6  EC34  F025         	call	_oled_writeCommand
  6096                           
  6097                           ;SSD1306oLED.c: 345: oled_writeCommand(0x80);
  6098  0064BA  0E80               	movlw	128
  6099  0064BC  EC34  F025         	call	_oled_writeCommand
  6100                           
  6101                           ;SSD1306oLED.c: 347: oled_writeCommand(0xA8);
  6102  0064C0  0EA8               	movlw	168
  6103  0064C2  EC34  F025         	call	_oled_writeCommand
  6104                           
  6105                           ;SSD1306oLED.c: 348: oled_writeCommand(0x1F);
  6106  0064C6  0E1F               	movlw	31
  6107  0064C8  EC34  F025         	call	_oled_writeCommand
  6108                           
  6109                           ;SSD1306oLED.c: 350: oled_writeCommand(0xD3);
  6110  0064CC  0ED3               	movlw	211
  6111  0064CE  EC34  F025         	call	_oled_writeCommand
  6112                           
  6113                           ;SSD1306oLED.c: 351: oled_writeCommand(0x00);
  6114  0064D2  0E00               	movlw	0
  6115  0064D4  EC34  F025         	call	_oled_writeCommand
  6116                           
  6117                           ;SSD1306oLED.c: 353: oled_writeCommand(0x8D);
  6118  0064D8  0E8D               	movlw	141
  6119  0064DA  EC34  F025         	call	_oled_writeCommand
  6120                           
  6121                           ;SSD1306oLED.c: 354: oled_writeCommand(0x14);
  6122  0064DE  0E14               	movlw	20
  6123  0064E0  EC34  F025         	call	_oled_writeCommand
  6124                           
  6125                           ;SSD1306oLED.c: 356: oled_writeCommand(0x40);
  6126  0064E4  0E40               	movlw	64
  6127  0064E6  EC34  F025         	call	_oled_writeCommand
  6128                           
  6129                           ;SSD1306oLED.c: 358: oled_writeCommand(0xA6);
  6130  0064EA  0EA6               	movlw	166
  6131  0064EC  EC34  F025         	call	_oled_writeCommand
  6132                           
  6133                           ;SSD1306oLED.c: 360: oled_writeCommand(0xA4);
  6134  0064F0  0EA4               	movlw	164
  6135  0064F2  EC34  F025         	call	_oled_writeCommand
  6136                           
  6137                           ;SSD1306oLED.c: 362: oled_writeCommand(0xA0);
  6138  0064F6  0EA0               	movlw	160
  6139  0064F8  EC34  F025         	call	_oled_writeCommand
  6140                           
  6141                           ;SSD1306oLED.c: 364: oled_writeCommand(0xC0);
  6142  0064FC  0EC0               	movlw	192
  6143  0064FE  EC34  F025         	call	_oled_writeCommand
  6144                           
  6145                           ;SSD1306oLED.c: 366: oled_writeCommand(0xDA);
  6146  006502  0EDA               	movlw	218
  6147  006504  EC34  F025         	call	_oled_writeCommand
  6148                           
  6149                           ;SSD1306oLED.c: 367: oled_writeCommand(0x42);
  6150  006508  0E42               	movlw	66
  6151  00650A  EC34  F025         	call	_oled_writeCommand
  6152                           
  6153                           ;SSD1306oLED.c: 369: oled_writeCommand(0x81);
  6154  00650E  0E81               	movlw	129
  6155  006510  EC34  F025         	call	_oled_writeCommand
  6156                           
  6157                           ;SSD1306oLED.c: 370: oled_writeCommand(0x7F);
  6158  006514  0E7F               	movlw	127
  6159  006516  EC34  F025         	call	_oled_writeCommand
  6160                           
  6161                           ;SSD1306oLED.c: 372: oled_writeCommand(0xD9);
  6162  00651A  0ED9               	movlw	217
  6163  00651C  EC34  F025         	call	_oled_writeCommand
  6164                           
  6165                           ;SSD1306oLED.c: 373: oled_writeCommand(0xF1);
  6166  006520  0EF1               	movlw	241
  6167  006522  EC34  F025         	call	_oled_writeCommand
  6168                           
  6169                           ;SSD1306oLED.c: 375: oled_writeCommand(0xDB);
  6170  006526  0EDB               	movlw	219
  6171  006528  EC34  F025         	call	_oled_writeCommand
  6172                           
  6173                           ;SSD1306oLED.c: 376: oled_writeCommand(0x40);
  6174  00652C  0E40               	movlw	64
  6175  00652E  EC34  F025         	call	_oled_writeCommand
  6176                           
  6177                           ;SSD1306oLED.c: 378: oled_writeCommand(0xAF);
  6178  006532  0EAF               	movlw	175
  6179  006534  EC34  F025         	call	_oled_writeCommand
  6180                           
  6181                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 1;
  6182  006538  888A               	bsf	3978,4,c	;volatile
  6183  00653A  0012               	return		;funcret
  6184  00653C                     __end_of_oled_devInit:
  6185                           	opt stack 0
  6186                           tblptru	equ	0xFF8
  6187                           tblptrh	equ	0xFF7
  6188                           tblptrl	equ	0xFF6
  6189                           tablat	equ	0xFF5
  6190                           intcon	equ	0xFF2
  6191                           postinc0	equ	0xFEE
  6192                           wreg	equ	0xFE8
  6193                           indf2	equ	0xFDF
  6194                           fsr2h	equ	0xFDA
  6195                           fsr2l	equ	0xFD9
  6196                           status	equ	0xFD8
  6197                           
  6198 ;; *************** function _oled_displayOff *****************
  6199 ;; Defined at:
  6200 ;;		line 394 in file "../Includes/Drivers/SSD1306oLED.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;  state           1    wreg     unsigned char 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  state           1    2[BANK0 ] unsigned char 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  1    wreg      void 
  6207 ;; Registers used:
  6208 ;;		wreg, status,2, status,0, cstack
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6214 ;;      Params:         0       0       0       0       0       0       0       0       0
  6215 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6217 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6218 ;;Total ram usage:        1 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; Hardware stack levels required when called:   13
  6221 ;; This function calls:
  6222 ;;		_oled_writeCommand
  6223 ;; This function is called by:
  6224 ;;		_moteApp_GoToSleep
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text18
  6229  004ADA                     __ptext18:
  6230                           	opt stack 0
  6231  004ADA                     _oled_displayOff:
  6232                           	opt stack 14
  6233                           
  6234                           ;incstack = 0
  6235                           ;oled_displayOff@state stored from wreg
  6236  004ADA  0100               	movlb	0	; () banked
  6237  004ADC  6FD0               	movwf	oled_displayOff@state& (0+255),b
  6238                           
  6239                           ;SSD1306oLED.c: 396: LATBbits.LATB4 = 0;
  6240  004ADE  988A               	bcf	3978,4,c	;volatile
  6241                           
  6242                           ;SSD1306oLED.c: 397: oled_writeCommand(0xAF - state);
  6243  004AE0  51D0               	movf	oled_displayOff@state& (0+255),w,b
  6244  004AE2  08AF               	sublw	175
  6245  004AE4  EC34  F025         	call	_oled_writeCommand
  6246                           
  6247                           ;SSD1306oLED.c: 398: LATBbits.LATB4 = 1;
  6248  004AE8  888A               	bsf	3978,4,c	;volatile
  6249  004AEA  0012               	return		;funcret
  6250  004AEC                     __end_of_oled_displayOff:
  6251                           	opt stack 0
  6252                           tblptru	equ	0xFF8
  6253                           tblptrh	equ	0xFF7
  6254                           tblptrl	equ	0xFF6
  6255                           tablat	equ	0xFF5
  6256                           intcon	equ	0xFF2
  6257                           postinc0	equ	0xFEE
  6258                           wreg	equ	0xFE8
  6259                           indf2	equ	0xFDF
  6260                           fsr2h	equ	0xFDA
  6261                           fsr2l	equ	0xFD9
  6262                           status	equ	0xFD8
  6263                           
  6264 ;; *************** function _modemSleep *****************
  6265 ;; Defined at:
  6266 ;;		line 160 in file "../Includes/Board/MOTEapp.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;		None
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1    wreg      void 
  6273 ;; Registers used:
  6274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6275 ;; Tracked objects:
  6276 ;;		On entry : F/0
  6277 ;;		On exit  : F/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6280 ;;      Params:         0       0       0       0       0       0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6283 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6284 ;;Total ram usage:        0 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; Hardware stack levels required when called:   14
  6287 ;; This function calls:
  6288 ;;		_moteApp_delayms
  6289 ;;		_sendCommand
  6290 ;; This function is called by:
  6291 ;;		_moteApp_GoToSleep
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           	psect	text19
  6296  004B9A                     __ptext19:
  6297                           	opt stack 0
  6298  004B9A                     _modemSleep:
  6299                           	opt stack 13
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;MOTEapp.c: 162: sendCommand("sys sleep 999999999");
  6303                           
  6304                           ;incstack = 0
  6305  004B9A  0E7E               	movlw	low STR_22
  6306  004B9C  6FCF               	movwf	sendCommand@string& (0+255),b
  6307  004B9E  0E7C               	movlw	high STR_22
  6308  004BA0  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  6309  004BA2  ECD8  F026         	call	_sendCommand	;wreg free
  6310  004BA6                     l304:
  6311  004BA6  B89D               	btfsc	3997,4,c	;volatile
  6312  004BA8  D7FE               	goto	l304
  6313                           
  6314                           ;MOTEapp.c: 165: moteApp_delayms(20);
  6315  004BAA  0100               	movlb	0	; () banked
  6316  004BAC  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6317  004BAE  0E14               	movlw	20
  6318  004BB0  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  6319  004BB2  EF86  F026         	goto	_moteApp_delayms	;wreg free
  6320  004BB6                     __end_of_modemSleep:
  6321                           	opt stack 0
  6322                           tblptru	equ	0xFF8
  6323                           tblptrh	equ	0xFF7
  6324                           tblptrl	equ	0xFF6
  6325                           tablat	equ	0xFF5
  6326                           intcon	equ	0xFF2
  6327                           postinc0	equ	0xFEE
  6328                           wreg	equ	0xFE8
  6329                           indf2	equ	0xFDF
  6330                           fsr2h	equ	0xFDA
  6331                           fsr2l	equ	0xFD9
  6332                           status	equ	0xFD8
  6333                           
  6334 ;; *************** function _modemResync *****************
  6335 ;; Defined at:
  6336 ;;		line 123 in file "../Includes/Board/MOTEapp.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;		None
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
  6341 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : F/0
  6348 ;;		On exit  : F/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6351 ;;      Params:         0       0       0       0       0       0       0       0       0
  6352 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6354 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6355 ;;Total ram usage:        3 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:   14
  6358 ;; This function calls:
  6359 ;;		_MOTEapp_getModemResponse
  6360 ;;		_moteApp_delayms
  6361 ;;		_sendCommand
  6362 ;; This function is called by:
  6363 ;;		_main
  6364 ;;		_moteApp_GoToSleep
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text20
  6369  005504                     __ptext20:
  6370                           	opt stack 0
  6371  005504                     _modemResync:
  6372                           	opt stack 13
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;MOTEapp.c: 125: bool escapeEvent = 0;
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;incstack = 0
  6379  005504  6BD5               	clrf	modemResync@escapeEvent& (0+255),b
  6380                           
  6381                           ;MOTEapp.c: 126: uint16_t escapeCounter = 0;
  6382  005506  6BD3               	clrf	modemResync@escapeCounter& (0+255),b
  6383  005508  6BD4               	clrf	(modemResync@escapeCounter+1)& (0+255),b
  6384                           
  6385                           ;MOTEapp.c: 134: TXSTAbits.TXEN = 0;
  6386  00550A  9AAC               	bcf	4012,5,c	;volatile
  6387                           
  6388                           ;MOTEapp.c: 135: LATCbits.LATC6 = 0;
  6389  00550C  9C8B               	bcf	3979,6,c	;volatile
  6390                           
  6391                           ; BSR set to: 0
  6392                           ;MOTEapp.c: 136: moteApp_delayms(10);
  6393  00550E  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6394  005510  0E0A               	movlw	10
  6395  005512  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  6396  005514  EC86  F026         	call	_moteApp_delayms	;wreg free
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;MOTEapp.c: 141: TXSTAbits.TXEN = 1;
  6400  005518  8AAC               	bsf	4012,5,c	;volatile
  6401                           
  6402                           ;MOTEapp.c: 142: moteApp_delayms(5);
  6403  00551A  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6404  00551C  0E05               	movlw	5
  6405  00551E  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  6406  005520  EC86  F026         	call	_moteApp_delayms	;wreg free
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;MOTEapp.c: 144: TXREG = 0x55;
  6410  005524  0E55               	movlw	85
  6411  005526  6EAD               	movwf	4013,c	;volatile
  6412  005528                     l292:
  6413                           
  6414                           ; BSR set to: 0
  6415  005528  A2AC               	btfss	4012,1,c	;volatile
  6416  00552A  D7FE               	goto	l292
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;MOTEapp.c: 148: sendCommand("z");
  6420  00552C  0EFC               	movlw	low STR_21
  6421  00552E  6FCF               	movwf	sendCommand@string& (0+255),b
  6422  005530  0E7F               	movlw	high STR_21
  6423  005532  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  6424  005534  ECD8  F026         	call	_sendCommand	;wreg free
  6425                           
  6426                           ;MOTEapp.c: 150: moteApp_delayms(40);
  6427  005538  0100               	movlb	0	; () banked
  6428  00553A  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6429  00553C  0E28               	movlw	40
  6430  00553E  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  6431  005540  EC86  F026         	call	_moteApp_delayms	;wreg free
  6432                           
  6433                           ;MOTEapp.c: 151: while (escapeEvent)
  6434  005544  D00E               	goto	l295
  6435  005546                     l8135:
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;MOTEapp.c: 152: {
  6439                           ;MOTEapp.c: 153: if(MOTEapp_getModemResponse())
  6440  005546  ECDA  F028         	call	_MOTEapp_getModemResponse	;wreg free
  6441  00554A  0900               	iorlw	0
  6442  00554C  E003               	bz	l8139
  6443  00554E                     l8137:
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;MOTEapp.c: 154: escapeEvent = 1;
  6447  00554E  0E01               	movlw	1
  6448  005550  6FD5               	movwf	modemResync@escapeEvent& (0+255),b
  6449  005552  D007               	goto	l295
  6450  005554                     l8139:
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;MOTEapp.c: 155: else if (++escapeCounter > 5000)
  6454  005554  4BD3               	infsnz	modemResync@escapeCounter& (0+255),f,b
  6455  005556  2BD4               	incf	(modemResync@escapeCounter+1)& (0+255),f,b
  6456  005558  0E89               	movlw	137
  6457  00555A  5DD3               	subwf	modemResync@escapeCounter& (0+255),w,b
  6458  00555C  0E13               	movlw	19
  6459  00555E  59D4               	subwfb	(modemResync@escapeCounter+1)& (0+255),w,b
  6460  005560  E2F6               	bc	l8137
  6461  005562                     l295:
  6462                           
  6463                           ; BSR set to: 0
  6464  005562  51D5               	movf	modemResync@escapeEvent& (0+255),w,b
  6465  005564  E1F0               	bnz	l8135
  6466                           
  6467                           ; BSR set to: 0
  6468  005566  0012               	return		;funcret
  6469  005568                     __end_of_modemResync:
  6470                           	opt stack 0
  6471                           tblptru	equ	0xFF8
  6472                           tblptrh	equ	0xFF7
  6473                           tblptrl	equ	0xFF6
  6474                           tablat	equ	0xFF5
  6475                           intcon	equ	0xFF2
  6476                           postinc0	equ	0xFEE
  6477                           wreg	equ	0xFE8
  6478                           indf2	equ	0xFDF
  6479                           fsr2h	equ	0xFDA
  6480                           fsr2l	equ	0xFD9
  6481                           status	equ	0xFD8
  6482                           
  6483 ;; *************** function _MOTEapp_getModemResponse *****************
  6484 ;; Defined at:
  6485 ;;		line 815 in file "../Includes/Board/MOTEapp.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;		None
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;  bufferByte      1    2[BANK0 ] unsigned char 
  6490 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      unsigned char 
  6493 ;; Registers used:
  6494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6495 ;; Tracked objects:
  6496 ;;		On entry : E/1
  6497 ;;		On exit  : F/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6500 ;;      Params:         0       0       0       0       0       0       0       0       0
  6501 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6503 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6504 ;;Total ram usage:        2 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:   12
  6507 ;; This function calls:
  6508 ;;		_EUSART_Read
  6509 ;; This function is called by:
  6510 ;;		_modemResync
  6511 ;;		_moteHandler
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text21
  6516  0051B4                     __ptext21:
  6517                           	opt stack 0
  6518  0051B4                     _MOTEapp_getModemResponse:
  6519                           	opt stack 14
  6520                           
  6521                           ;MOTEapp.c: 817: bool terminatorReceived = 0;
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;incstack = 0
  6525  0051B4  0100               	movlb	0	; () banked
  6526  0051B6  6BCF               	clrf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;MOTEapp.c: 818: if ((eusartRxCount))
  6530  0051B8  5023               	movf	_eusartRxCount,w,c	;volatile
  6531  0051BA  E01F               	bz	l8037
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;MOTEapp.c: 821: bufferByte = EUSART_Read();
  6535                           
  6536                           ; BSR set to: 0
  6537  0051BC  EC5B  F027         	call	_EUSART_Read	;wreg free
  6538  0051C0  6FD0               	movwf	MOTEapp_getModemResponse@bufferByte& (0+255),b
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;MOTEapp.c: 823: if (bufferByte == 0x0D)
  6542  0051C2  0E0D               	movlw	13
  6543  0051C4  19D0               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
  6544  0051C6  E10B               	bnz	l8029
  6545                           
  6546                           ; BSR set to: 0
  6547                           ;MOTEapp.c: 824: {
  6548                           ;MOTEapp.c: 825: modemResonseBuffer[modemBufferIndex] = 0x00;
  6549  0051C8  0E90               	movlw	low _modemResonseBuffer
  6550  0051CA  2429               	addwf	_modemBufferIndex,w,c
  6551  0051CC  6ED9               	movwf	fsr2l,c
  6552  0051CE  6ADA               	clrf	fsr2h,c
  6553  0051D0  0E01               	movlw	high _modemResonseBuffer
  6554  0051D2  22DA               	addwfc	fsr2h,f,c
  6555  0051D4  6ADF               	clrf	indf2,c
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;MOTEapp.c: 826: terminatorReceived = 1;
  6559  0051D6  0E01               	movlw	1
  6560  0051D8  6FCF               	movwf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;MOTEapp.c: 827: modemBufferIndex = 0;
  6564  0051DA  6A29               	clrf	_modemBufferIndex,c
  6565                           
  6566                           ;MOTEapp.c: 828: }
  6567  0051DC  D00E               	goto	l8037
  6568  0051DE                     l8029:
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;MOTEapp.c: 829: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
  6572  0051DE  51D0               	movf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
  6573  0051E0  E00C               	bz	l8037
  6574                           
  6575                           ; BSR set to: 0
  6576  0051E2  0E0A               	movlw	10
  6577  0051E4  19D0               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
  6578  0051E6  E009               	bz	l8037
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;MOTEapp.c: 833: else
  6582                           ;MOTEapp.c: 834: {
  6583                           ;MOTEapp.c: 835: modemResonseBuffer[modemBufferIndex] = bufferByte;
  6584  0051E8  0E90               	movlw	low _modemResonseBuffer
  6585  0051EA  2429               	addwf	_modemBufferIndex,w,c
  6586  0051EC  6ED9               	movwf	fsr2l,c
  6587  0051EE  6ADA               	clrf	fsr2h,c
  6588  0051F0  0E01               	movlw	high _modemResonseBuffer
  6589  0051F2  22DA               	addwfc	fsr2h,f,c
  6590  0051F4  C0D0  FFDF         	movff	MOTEapp_getModemResponse@bufferByte,indf2
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;MOTEapp.c: 837: modemBufferIndex++;
  6594  0051F8  2A29               	incf	_modemBufferIndex,f,c
  6595  0051FA                     l8037:
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;MOTEapp.c: 838: }
  6599                           ;MOTEapp.c: 839: }
  6600                           ;MOTEapp.c: 840: return terminatorReceived;
  6601  0051FA  51CF               	movf	MOTEapp_getModemResponse@terminatorReceived& (0+255),w,b
  6602                           
  6603                           ; BSR set to: 0
  6604  0051FC  0012               	return		;funcret
  6605  0051FE                     __end_of_MOTEapp_getModemResponse:
  6606                           	opt stack 0
  6607                           tblptru	equ	0xFF8
  6608                           tblptrh	equ	0xFF7
  6609                           tblptrl	equ	0xFF6
  6610                           tablat	equ	0xFF5
  6611                           intcon	equ	0xFF2
  6612                           postinc0	equ	0xFEE
  6613                           wreg	equ	0xFE8
  6614                           indf2	equ	0xFDF
  6615                           fsr2h	equ	0xFDA
  6616                           fsr2l	equ	0xFD9
  6617                           status	equ	0xFD8
  6618                           
  6619 ;; *************** function _EUSART_FlushBuffer *****************
  6620 ;; Defined at:
  6621 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;		None
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  index           1    0[BANK0 ] unsigned char 
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      void 
  6628 ;; Registers used:
  6629 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/F
  6632 ;;		On exit  : F/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6635 ;;      Params:         0       0       0       0       0       0       0       0       0
  6636 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6637 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6638 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6639 ;;Total ram usage:        1 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:   11
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		_moteApp_GoToSleep
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text22
  6650  004E8A                     __ptext22:
  6651                           	opt stack 0
  6652  004E8A                     _EUSART_FlushBuffer:
  6653                           	opt stack 16
  6654                           
  6655                           ;eusart.c: 204: uint8_t index;
  6656                           ;eusart.c: 205: for (index=0; index < 64; index++)
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;incstack = 0
  6660  004E8A  0100               	movlb	0	; () banked
  6661  004E8C  6BCE               	clrf	EUSART_FlushBuffer@index& (0+255),b
  6662  004E8E                     l8197:
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;eusart.c: 206: {
  6666                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
  6667  004E8E  0E00               	movlw	low _eusartRxBuffer
  6668  004E90  25CE               	addwf	EUSART_FlushBuffer@index& (0+255),w,b
  6669  004E92  6ED9               	movwf	fsr2l,c
  6670  004E94  6ADA               	clrf	fsr2h,c
  6671  004E96  0E01               	movlw	high _eusartRxBuffer
  6672  004E98  22DA               	addwfc	fsr2h,f,c
  6673  004E9A  6ADF               	clrf	indf2,c
  6674                           
  6675                           ; BSR set to: 0
  6676  004E9C  2BCE               	incf	EUSART_FlushBuffer@index& (0+255),f,b
  6677                           
  6678                           ; BSR set to: 0
  6679  004E9E  0E3F               	movlw	63
  6680  004EA0  65CE               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
  6681  004EA2  D7F5               	goto	l8197
  6682                           
  6683                           ; BSR set to: 0
  6684                           ;eusart.c: 208: }
  6685                           ;eusart.c: 209: eusartRxHead = 0;
  6686  004EA4  6A24               	clrf	_eusartRxHead,c
  6687                           
  6688                           ;eusart.c: 210: eusartRxTail = 0;
  6689  004EA6  6A25               	clrf	_eusartRxTail,c
  6690                           
  6691                           ;eusart.c: 211: eusartRxCount = 0;
  6692  004EA8  6A23               	clrf	_eusartRxCount,c	;volatile
  6693                           
  6694                           ;eusart.c: 213: PIE1bits.TXIE = 0;
  6695  004EAA  989D               	bcf	3997,4,c	;volatile
  6696                           
  6697                           ;eusart.c: 214: eusartTxHead = 0;
  6698  004EAC  6A27               	clrf	_eusartTxHead,c
  6699                           
  6700                           ;eusart.c: 215: eusartTxTail = 0;
  6701  004EAE  6A28               	clrf	_eusartTxTail,c
  6702                           
  6703                           ; BSR set to: 0
  6704                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  6705  004EB0  0E40               	movlw	64
  6706  004EB2  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
  6707                           
  6708                           ; BSR set to: 0
  6709  004EB4  0C40               	retlw	64	;funcret
  6710  004EB6                     __end_of_EUSART_FlushBuffer:
  6711                           	opt stack 0
  6712                           tblptru	equ	0xFF8
  6713                           tblptrh	equ	0xFF7
  6714                           tblptrl	equ	0xFF6
  6715                           tablat	equ	0xFF5
  6716                           intcon	equ	0xFF2
  6717                           postinc0	equ	0xFEE
  6718                           wreg	equ	0xFE8
  6719                           indf2	equ	0xFDF
  6720                           fsr2h	equ	0xFDA
  6721                           fsr2l	equ	0xFD9
  6722                           status	equ	0xFD8
  6723                           
  6724 ;; *************** function _TMR2_ReadTimer *****************
  6725 ;; Defined at:
  6726 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;		None
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;  readVal         1    0[BANK0 ] unsigned char 
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  1    wreg      unsigned char 
  6733 ;; Registers used:
  6734 ;;		wreg, status,2
  6735 ;; Tracked objects:
  6736 ;;		On entry : F/0
  6737 ;;		On exit  : F/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6740 ;;      Params:         0       0       0       0       0       0       0       0       0
  6741 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6743 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6744 ;;Total ram usage:        1 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; Hardware stack levels required when called:   11
  6747 ;; This function calls:
  6748 ;;		Nothing
  6749 ;; This function is called by:
  6750 ;;		_moteRunningProcess
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           	psect	text23
  6755  004A54                     __ptext23:
  6756                           	opt stack 0
  6757  004A54                     _TMR2_ReadTimer:
  6758                           	opt stack 17
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;tmr2.c: 88: uint8_t readVal;
  6762                           ;tmr2.c: 90: readVal = TMR2;
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;incstack = 0
  6766  004A54  CFBC F0CE          	movff	4028,TMR2_ReadTimer@readVal	;volatile
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;tmr2.c: 92: return readVal;
  6770  004A58  51CE               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
  6771                           
  6772                           ; BSR set to: 0
  6773  004A5A  0012               	return		;funcret
  6774  004A5C                     __end_of_TMR2_ReadTimer:
  6775                           	opt stack 0
  6776                           tblptru	equ	0xFF8
  6777                           tblptrh	equ	0xFF7
  6778                           tblptrl	equ	0xFF6
  6779                           tablat	equ	0xFF5
  6780                           intcon	equ	0xFF2
  6781                           postinc0	equ	0xFEE
  6782                           wreg	equ	0xFE8
  6783                           indf2	equ	0xFDF
  6784                           fsr2h	equ	0xFDA
  6785                           fsr2l	equ	0xFD9
  6786                           status	equ	0xFD8
  6787                           
  6788 ;; *************** function _ADC_TempConversion *****************
  6789 ;; Defined at:
  6790 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;  tempRaw         1    wreg     enum E6179
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;  tempRaw         1    7[BANK0 ] enum E6179
  6795 ;;  temp            1    8[BANK0 ] unsigned char 
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  1    wreg      unsigned char 
  6798 ;; Registers used:
  6799 ;;		wreg, status,2, status,0, cstack
  6800 ;; Tracked objects:
  6801 ;;		On entry : E/1
  6802 ;;		On exit  : F/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6805 ;;      Params:         0       0       0       0       0       0       0       0       0
  6806 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6808 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6809 ;;Total ram usage:        2 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; Hardware stack levels required when called:   12
  6812 ;; This function calls:
  6813 ;;		___lwdiv
  6814 ;; This function is called by:
  6815 ;;		_moteHandler
  6816 ;;		_moteRunningProcess
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           	psect	text24
  6821  004C52                     __ptext24:
  6822                           	opt stack 0
  6823  004C52                     _ADC_TempConversion:
  6824                           	opt stack 16
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;incstack = 0
  6828                           ;ADC_TempConversion@tempRaw stored from wreg
  6829  004C52  0100               	movlb	0	; () banked
  6830  004C54  6FD5               	movwf	ADC_TempConversion@tempRaw& (0+255),b
  6831                           
  6832                           ;adc.c: 138: uint8_t temp;
  6833                           ;adc.c: 140: temp = (uint16_t) (tempRaw - 250) / 5;
  6834  004C56  0E06               	movlw	6
  6835  004C58  25D5               	addwf	ADC_TempConversion@tempRaw& (0+255),w,b
  6836  004C5A  6FCE               	movwf	___lwdiv@dividend& (0+255),b
  6837  004C5C  6BCF               	clrf	(___lwdiv@dividend+1)& (0+255),b
  6838  004C5E  0EFF               	movlw	255
  6839  004C60  23CF               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
  6840  004C62  6BD1               	clrf	(___lwdiv@divisor+1)& (0+255),b
  6841  004C64  0E05               	movlw	5
  6842  004C66  6FD0               	movwf	___lwdiv@divisor& (0+255),b
  6843  004C68  ECB5  F028         	call	___lwdiv	;wreg free
  6844  004C6C  51CE               	movf	?___lwdiv& (0+255),w,b
  6845  004C6E  6FD6               	movwf	ADC_TempConversion@temp& (0+255),b
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;adc.c: 141: return temp;
  6849  004C70  51D6               	movf	ADC_TempConversion@temp& (0+255),w,b
  6850                           
  6851                           ; BSR set to: 0
  6852  004C72  0012               	return		;funcret
  6853  004C74                     __end_of_ADC_TempConversion:
  6854                           	opt stack 0
  6855                           tblptru	equ	0xFF8
  6856                           tblptrh	equ	0xFF7
  6857                           tblptrl	equ	0xFF6
  6858                           tablat	equ	0xFF5
  6859                           intcon	equ	0xFF2
  6860                           postinc0	equ	0xFEE
  6861                           wreg	equ	0xFE8
  6862                           indf2	equ	0xFDF
  6863                           fsr2h	equ	0xFDA
  6864                           fsr2l	equ	0xFD9
  6865                           status	equ	0xFD8
  6866                           
  6867 ;; *************** function ___lwdiv *****************
  6868 ;; Defined at:
  6869 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;  dividend        2    0[BANK0 ] unsigned int 
  6872 ;;  divisor         2    2[BANK0 ] unsigned int 
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;  quotient        2    5[BANK0 ] unsigned int 
  6875 ;;  counter         1    4[BANK0 ] unsigned char 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  2    0[BANK0 ] unsigned int 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0
  6880 ;; Tracked objects:
  6881 ;;		On entry : F/0
  6882 ;;		On exit  : F/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6885 ;;      Params:         0       4       0       0       0       0       0       0       0
  6886 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6888 ;;      Totals:         0       7       0       0       0       0       0       0       0
  6889 ;;Total ram usage:        7 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:   11
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_moteApp_add16bToDataBuffer
  6896 ;;		_oled_putUint16
  6897 ;;		_ADC_TempConversion
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           	psect	text25
  6902  00516A                     __ptext25:
  6903                           	opt stack 0
  6904  00516A                     ___lwdiv:
  6905                           	opt stack 16
  6906                           
  6907                           ; BSR set to: 0
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;incstack = 0
  6911  00516A  6BD3               	clrf	___lwdiv@quotient& (0+255),b
  6912  00516C  6BD4               	clrf	(___lwdiv@quotient+1)& (0+255),b
  6913                           
  6914                           ; BSR set to: 0
  6915  00516E  51D0               	movf	___lwdiv@divisor& (0+255),w,b
  6916  005170  11D1               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6917  005172  E01B               	bz	l2211
  6918                           
  6919                           ; BSR set to: 0
  6920  005174  0E01               	movlw	1
  6921  005176  6FD2               	movwf	___lwdiv@counter& (0+255),b
  6922  005178  D004               	goto	l8305
  6923  00517A                     l8303:
  6924                           
  6925                           ; BSR set to: 0
  6926  00517A  90D8               	bcf	status,0,c
  6927  00517C  37D0               	rlcf	___lwdiv@divisor& (0+255),f,b
  6928  00517E  37D1               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6929  005180  2BD2               	incf	___lwdiv@counter& (0+255),f,b
  6930  005182                     l8305:
  6931                           
  6932                           ; BSR set to: 0
  6933  005182  AFD1               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6934  005184  D7FA               	goto	l8303
  6935  005186                     l8307:
  6936                           
  6937                           ; BSR set to: 0
  6938  005186  90D8               	bcf	status,0,c
  6939  005188  37D3               	rlcf	___lwdiv@quotient& (0+255),f,b
  6940  00518A  37D4               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6941                           
  6942                           ; BSR set to: 0
  6943  00518C  51D0               	movf	___lwdiv@divisor& (0+255),w,b
  6944  00518E  5DCE               	subwf	___lwdiv@dividend& (0+255),w,b
  6945  005190  51D1               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6946  005192  59CF               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6947  005194  E305               	bnc	l8315
  6948                           
  6949                           ; BSR set to: 0
  6950  005196  51D0               	movf	___lwdiv@divisor& (0+255),w,b
  6951  005198  5FCE               	subwf	___lwdiv@dividend& (0+255),f,b
  6952  00519A  51D1               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6953  00519C  5BCF               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6954                           
  6955                           ; BSR set to: 0
  6956  00519E  81D3               	bsf	___lwdiv@quotient& (0+255),0,b
  6957  0051A0                     l8315:
  6958                           
  6959                           ; BSR set to: 0
  6960  0051A0  90D8               	bcf	status,0,c
  6961  0051A2  33D1               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6962  0051A4  33D0               	rrcf	___lwdiv@divisor& (0+255),f,b
  6963                           
  6964                           ; BSR set to: 0
  6965  0051A6  2FD2               	decfsz	___lwdiv@counter& (0+255),f,b
  6966  0051A8  D7EE               	goto	l8307
  6967  0051AA                     l2211:
  6968                           
  6969                           ; BSR set to: 0
  6970  0051AA  C0D3  F0CE         	movff	___lwdiv@quotient,?___lwdiv
  6971  0051AE  C0D4  F0CF         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6972                           
  6973                           ; BSR set to: 0
  6974  0051B2  0012               	return		;funcret
  6975  0051B4                     __end_of___lwdiv:
  6976                           	opt stack 0
  6977                           tblptru	equ	0xFF8
  6978                           tblptrh	equ	0xFF7
  6979                           tblptrl	equ	0xFF6
  6980                           tablat	equ	0xFF5
  6981                           intcon	equ	0xFF2
  6982                           postinc0	equ	0xFEE
  6983                           wreg	equ	0xFE8
  6984                           indf2	equ	0xFDF
  6985                           fsr2h	equ	0xFDA
  6986                           fsr2l	equ	0xFD9
  6987                           status	equ	0xFD8
  6988                           
  6989 ;; *************** function _ADC_GetConversion *****************
  6990 ;; Defined at:
  6991 ;;		line 113 in file "../Includes/MccGenerated/adc.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  channel         1    wreg     enum E6179
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;  channel         1    4[BANK0 ] enum E6179
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  2    0[BANK0 ] unsigned int 
  6998 ;; Registers used:
  6999 ;;		wreg, status,2, status,0
  7000 ;; Tracked objects:
  7001 ;;		On entry : E/1
  7002 ;;		On exit  : F/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7005 ;;      Params:         0       2       0       0       0       0       0       0       0
  7006 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7007 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7008 ;;      Totals:         0       5       0       0       0       0       0       0       0
  7009 ;;Total ram usage:        5 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; Hardware stack levels required when called:   11
  7012 ;; This function calls:
  7013 ;;		Nothing
  7014 ;; This function is called by:
  7015 ;;		_moteHandler
  7016 ;;		_moteRunningProcess
  7017 ;; This function uses a non-reentrant model
  7018 ;;
  7019                           
  7020                           	psect	text26
  7021  005026                     __ptext26:
  7022                           	opt stack 0
  7023  005026                     _ADC_GetConversion:
  7024                           	opt stack 17
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;incstack = 0
  7028                           ;ADC_GetConversion@channel stored from wreg
  7029  005026  0100               	movlb	0	; () banked
  7030  005028  6FD2               	movwf	ADC_GetConversion@channel& (0+255),b
  7031                           
  7032                           ;adc.c: 116: ADCON0bits.CHS = channel;
  7033  00502A  C0D2  F0D0         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  7034  00502E  47D0               	rlncf	??_ADC_GetConversion& (0+255),f,b
  7035  005030  47D0               	rlncf	??_ADC_GetConversion& (0+255),f,b
  7036  005032  50C2               	movf	4034,w,c	;volatile
  7037  005034  19D0               	xorwf	??_ADC_GetConversion& (0+255),w,b
  7038  005036  0B83               	andlw	-125
  7039  005038  19D0               	xorwf	??_ADC_GetConversion& (0+255),w,b
  7040  00503A  6EC2               	movwf	4034,c	;volatile
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;adc.c: 119: ADCON0bits.ADON = 1;
  7044  00503C  80C2               	bsf	4034,0,c	;volatile
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;adc.c: 122: _delay((unsigned long)((5)*(48000000/4000000.0)));
  7048  00503E  0E14               	movlw	20
  7049  005040                     u7717:
  7050  005040  2EE8               	decfsz	wreg,f,c
  7051  005042  D7FE               	goto	u7717
  7052                           
  7053                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
  7054  005044  82C2               	bsf	4034,1,c	;volatile
  7055  005046                     l1038:
  7056  005046  B2C2               	btfsc	4034,1,c	;volatile
  7057  005048  D7FE               	goto	l1038
  7058                           
  7059                           ;adc.c: 130: }
  7060                           ;adc.c: 133: return ((ADRESH << 8) + ADRESL);
  7061  00504A  50C4               	movf	4036,w,c	;volatile
  7062  00504C  0100               	movlb	0	; () banked
  7063  00504E  6FD1               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  7064  005050  6BD0               	clrf	??_ADC_GetConversion& (0+255),b
  7065  005052  50C3               	movf	4035,w,c	;volatile
  7066  005054  25D0               	addwf	??_ADC_GetConversion& (0+255),w,b
  7067  005056  6FCE               	movwf	?_ADC_GetConversion& (0+255),b
  7068  005058  0E00               	movlw	0
  7069  00505A  21D1               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  7070  00505C  6FCF               	movwf	(?_ADC_GetConversion+1)& (0+255),b
  7071                           
  7072                           ; BSR set to: 0
  7073  00505E  0012               	return		;funcret
  7074  005060                     __end_of_ADC_GetConversion:
  7075                           	opt stack 0
  7076                           tblptru	equ	0xFF8
  7077                           tblptrh	equ	0xFF7
  7078                           tblptrl	equ	0xFF6
  7079                           tablat	equ	0xFF5
  7080                           intcon	equ	0xFF2
  7081                           postinc0	equ	0xFEE
  7082                           wreg	equ	0xFE8
  7083                           indf2	equ	0xFDF
  7084                           fsr2h	equ	0xFDA
  7085                           fsr2l	equ	0xFD9
  7086                           status	equ	0xFD8
  7087                           
  7088 ;; *************** function _moteJoiningProcess *****************
  7089 ;; Defined at:
  7090 ;;		line 301 in file "../Includes/Board/MOTEapp.c"
  7091 ;; Parameters:    Size  Location     Type
  7092 ;;  messageReady    1    wreg     unsigned char 
  7093 ;;  switchEvent     1   18[BANK0 ] unsigned char 
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;  messageReady    1   20[BANK0 ] unsigned char 
  7096 ;;  buf            50    0        unsigned char [50]
  7097 ;;  joiningCompl    1   19[BANK0 ] unsigned char 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  1    wreg      enum E6542
  7100 ;; Registers used:
  7101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7102 ;; Tracked objects:
  7103 ;;		On entry : F/1
  7104 ;;		On exit  : F/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7107 ;;      Params:         0       1       0       0       0       0       0       0       0
  7108 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7110 ;;      Totals:         0       3       0       0       0       0       0       0       0
  7111 ;;Total ram usage:        3 bytes
  7112 ;; Hardware stack levels used:    1
  7113 ;; Hardware stack levels required when called:   18
  7114 ;; This function calls:
  7115 ;;		_DATAEE_WriteByte
  7116 ;;		_cw_beep
  7117 ;;		_moteApp_delayms
  7118 ;;		_oled_clear
  7119 ;;		_oled_putString
  7120 ;;		_sendCommand
  7121 ;;		_strcmp
  7122 ;;		_strncmp
  7123 ;; This function is called by:
  7124 ;;		_moteHandler
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text27
  7129  007278                     __ptext27:
  7130                           	opt stack 0
  7131  007278                     _moteJoiningProcess:
  7132                           	opt stack 11
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;incstack = 0
  7136                           ;moteJoiningProcess@messageReady stored from wreg
  7137  007278  0100               	movlb	0	; () banked
  7138  00727A  6FE2               	movwf	moteJoiningProcess@messageReady& (0+255),b
  7139                           
  7140                           ;MOTEapp.c: 303: bool joiningComplete = 0;
  7141  00727C  6BE1               	clrf	moteJoiningProcess@joiningComplete& (0+255),b
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;MOTEapp.c: 304: static int mode = 0;
  7145                           ;MOTEapp.c: 305: static unsigned char pkt_cnt = 0;
  7146                           ;MOTEapp.c: 306: static unsigned char float_val = 255;
  7147                           ;MOTEapp.c: 307: static bool pending_confirm = 0;
  7148                           ;MOTEapp.c: 308: char buf[50];
  7149                           ;MOTEapp.c: 309: static int skip_count = 0;
  7150                           ;MOTEapp.c: 312: if (switchEvent)
  7151  00727E  51E0               	movf	moteJoiningProcess@switchEvent& (0+255),w,b
  7152  007280  E101 D298          	bz	l9049
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;MOTEapp.c: 313: {
  7156                           ;MOTEapp.c: 314: activeState = moteComFailure;
  7157  007284  0E11               	movlw	17
  7158  007286  6F9A               	movwf	_activeState& (0+255),b
  7159  007288                     l358:
  7160  007288  A282               	btfss	3970,1,c	;volatile
  7161  00728A  D7FE               	goto	l358
  7162  00728C  D293               	goto	l9049
  7163  00728E                     l363:
  7164  00728E  D7FF               	goto	l363
  7165  007290                     l8809:
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;MOTEapp.c: 330: cw_beep();
  7169  007290  EC72  F027         	call	_cw_beep	;wreg free
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;MOTEapp.c: 331: sendCommand("sys get ver");
  7173  007294  0ECB               	movlw	low STR_31
  7174  007296  6FCF               	movwf	sendCommand@string& (0+255),b
  7175  007298  0E7E               	movlw	high STR_31
  7176  00729A  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  7177  00729C  ECD8  F026         	call	_sendCommand	;wreg free
  7178                           
  7179                           ;MOTEapp.c: 332: oled_clear();
  7180  0072A0  ECB3  F025         	call	_oled_clear	;wreg free
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;MOTEapp.c: 333: oled_putString("get ver",0,0);
  7184  0072A4  0ECF               	movlw	low (STR_31+4)
  7185  0072A6  6FDB               	movwf	oled_putString@string& (0+255),b
  7186  0072A8  0E7E               	movlw	high (STR_31+4)
  7187  0072AA  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7188  0072AC  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7189  0072AE  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7190  0072B0  ECB4  F02A         	call	_oled_putString	;wreg free
  7191                           
  7192                           ;MOTEapp.c: 334: moteApp_delayms(50);
  7193  0072B4  0100               	movlb	0	; () banked
  7194  0072B6  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7195  0072B8  0E32               	movlw	50
  7196  0072BA  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7197  0072BC  EC86  F026         	call	_moteApp_delayms	;wreg free
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;MOTEapp.c: 335: if (PORTBbits.RB0) {
  7201  0072C0  A081               	btfss	3969,0,c	;volatile
  7202  0072C2  D00C               	goto	l8825
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;MOTEapp.c: 336: mode = 2;
  7206  0072C4  6B92               	clrf	(moteJoiningProcess@mode+1)& (0+255),b
  7207  0072C6  0E02               	movlw	2
  7208  0072C8  6F91               	movwf	moteJoiningProcess@mode& (0+255),b
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;MOTEapp.c: 337: oled_putString("RX RESET",0,0);
  7212  0072CA  0E48               	movlw	low STR_33
  7213  0072CC  6FDB               	movwf	oled_putString@string& (0+255),b
  7214  0072CE  0E7F               	movlw	high STR_33
  7215  0072D0  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7216  0072D2  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7217  0072D4  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7218  0072D6  ECB4  F02A         	call	_oled_putString	;wreg free
  7219                           
  7220                           ;MOTEapp.c: 338: } else {
  7221  0072DA  D00B               	goto	l8829
  7222  0072DC                     l8825:
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;MOTEapp.c: 339: mode = 1;
  7226  0072DC  6B92               	clrf	(moteJoiningProcess@mode+1)& (0+255),b
  7227  0072DE  0E01               	movlw	1
  7228  0072E0  6F91               	movwf	moteJoiningProcess@mode& (0+255),b
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;MOTEapp.c: 340: oled_putString("TX RESET",0,0);
  7232  0072E2  0E51               	movlw	low STR_34
  7233  0072E4  6FDB               	movwf	oled_putString@string& (0+255),b
  7234  0072E6  0E7F               	movlw	high STR_34
  7235  0072E8  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7236  0072EA  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7237  0072EC  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7238  0072EE  ECB4  F02A         	call	_oled_putString	;wreg free
  7239  0072F2                     l8829:
  7240                           
  7241                           ;MOTEapp.c: 341: }
  7242                           ;MOTEapp.c: 342: moteApp_delayms(500);
  7243  0072F2  0E01               	movlw	1
  7244  0072F4  0100               	movlb	0	; () banked
  7245  0072F6  6FCF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7246  0072F8  0EF4               	movlw	244
  7247  0072FA  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7248  0072FC  EC86  F026         	call	_moteApp_delayms	;wreg free
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;MOTEapp.c: 343: activeState = moteReset;
  7252  007300  0E01               	movlw	1
  7253  007302  D20D               	goto	L15
  7254  007304                     l8833:
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;MOTEapp.c: 347: if ( messageReady )
  7258  007304  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7259  007306  E101 D28A          	bz	l9051
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;MOTEapp.c: 348: {
  7263                           ;MOTEapp.c: 349: if(strncmp(modemResonseBuffer, "RN", 2) == 0)
  7264  00730A  0E90               	movlw	low _modemResonseBuffer
  7265  00730C  6FCE               	movwf	strncmp@s1& (0+255),b
  7266  00730E  0E01               	movlw	high _modemResonseBuffer
  7267  007310  6FCF               	movwf	(strncmp@s1+1)& (0+255),b
  7268  007312  0EF7               	movlw	low STR_35
  7269  007314  6FD0               	movwf	strncmp@s2& (0+255),b
  7270  007316  0E7F               	movlw	high STR_35
  7271  007318  6FD1               	movwf	(strncmp@s2+1)& (0+255),b
  7272  00731A  6BD3               	clrf	(strncmp@len+1)& (0+255),b
  7273  00731C  0E02               	movlw	2
  7274  00731E  6FD2               	movwf	strncmp@len& (0+255),b
  7275  007320  ECE7  F02A         	call	_strncmp	;wreg free
  7276  007324  51CE               	movf	?_strncmp& (0+255),w,b
  7277  007326  11CF               	iorwf	(?_strncmp+1)& (0+255),w,b
  7278  007328  E118               	bnz	l372
  7279                           
  7280                           ; BSR set to: 0
  7281                           ;MOTEapp.c: 350: {
  7282                           ;MOTEapp.c: 351: sendCommand("radio set mod lora");
  7283  00732A  0E92               	movlw	low STR_36
  7284  00732C  6FCF               	movwf	sendCommand@string& (0+255),b
  7285  00732E  0E7C               	movlw	high STR_36
  7286  007330  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  7287  007332  ECD8  F026         	call	_sendCommand	;wreg free
  7288                           
  7289                           ;MOTEapp.c: 352: oled_clear();
  7290  007336  ECB3  F025         	call	_oled_clear	;wreg free
  7291                           
  7292                           ; BSR set to: 0
  7293                           ;MOTEapp.c: 353: oled_putString("set mod",0,0);
  7294  00733A  0EBA               	movlw	low STR_37
  7295  00733C  6FDB               	movwf	oled_putString@string& (0+255),b
  7296  00733E  0E7F               	movlw	high STR_37
  7297  007340  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7298  007342  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7299  007344  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7300  007346  ECB4  F02A         	call	_oled_putString	;wreg free
  7301                           
  7302                           ;MOTEapp.c: 354: moteApp_delayms(50);
  7303  00734A  0100               	movlb	0	; () banked
  7304  00734C  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7305  00734E  0E32               	movlw	50
  7306  007350  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7307  007352  EC86  F026         	call	_moteApp_delayms	;wreg free
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;MOTEapp.c: 355: activeState = moteSetMod;
  7311  007356  0E02               	movlw	2
  7312  007358  D1E2               	goto	L15
  7313  00735A                     l372:
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;MOTEapp.c: 357: else
  7317                           ;MOTEapp.c: 358: {
  7318                           ;MOTEapp.c: 359: activeState = moteStartup;
  7319  00735A  6B9A               	clrf	_activeState& (0+255),b
  7320  00735C  D260               	goto	l9051
  7321  00735E                     l8847:
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;MOTEapp.c: 364: if ( messageReady )
  7325  00735E  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7326  007360  E101 D25D          	bz	l9051
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;MOTEapp.c: 365: {
  7330                           ;MOTEapp.c: 366: if(strcmp(modemResonseBuffer, "ok") == 0)
  7331  007364  0E90               	movlw	low _modemResonseBuffer
  7332  007366  6FCE               	movwf	strcmp@s1& (0+255),b
  7333  007368  0E01               	movlw	high _modemResonseBuffer
  7334  00736A  6FCF               	movwf	(strcmp@s1+1)& (0+255),b
  7335  00736C  0EC8               	movlw	low (STR_72+9)
  7336  00736E  6FD0               	movwf	strcmp@s2& (0+255),b
  7337  007370  0E7E               	movlw	high (STR_72+9)
  7338  007372  6FD1               	movwf	(strcmp@s2+1)& (0+255),b
  7339  007374  EC83  F02C         	call	_strcmp	;wreg free
  7340  007378  51CE               	movf	?_strcmp& (0+255),w,b
  7341  00737A  11CF               	iorwf	(?_strcmp+1)& (0+255),w,b
  7342  00737C  E1EE               	bnz	l372
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;MOTEapp.c: 367: {
  7346                           ;MOTEapp.c: 368: sendCommand("radio set pwr 20");
  7347  00737E  0EEC               	movlw	low STR_39
  7348  007380  6FCF               	movwf	sendCommand@string& (0+255),b
  7349  007382  0E7C               	movlw	high STR_39
  7350  007384  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  7351  007386  ECD8  F026         	call	_sendCommand	;wreg free
  7352                           
  7353                           ;MOTEapp.c: 369: oled_clear();
  7354  00738A  ECB3  F025         	call	_oled_clear	;wreg free
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;MOTEapp.c: 370: oled_putString("set pwr",0,0);
  7358  00738E  0EC2               	movlw	low STR_40
  7359  007390  6FDB               	movwf	oled_putString@string& (0+255),b
  7360  007392  0E7F               	movlw	high STR_40
  7361  007394  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7362  007396  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7363  007398  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7364  00739A  ECB4  F02A         	call	_oled_putString	;wreg free
  7365                           
  7366                           ;MOTEapp.c: 371: moteApp_delayms(50);
  7367  00739E  0100               	movlb	0	; () banked
  7368  0073A0  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7369  0073A2  0E32               	movlw	50
  7370  0073A4  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7371  0073A6  EC86  F026         	call	_moteApp_delayms	;wreg free
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;MOTEapp.c: 372: activeState = moteSetPwr;
  7375  0073AA  0E03               	movlw	3
  7376  0073AC  D1B8               	goto	L15
  7377  0073AE                     l8861:
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;MOTEapp.c: 381: if ( messageReady )
  7381  0073AE  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7382  0073B0  E101 D235          	bz	l9051
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;MOTEapp.c: 382: {
  7386                           ;MOTEapp.c: 383: if(strcmp(modemResonseBuffer, "ok") == 0)
  7387  0073B4  0E90               	movlw	low _modemResonseBuffer
  7388  0073B6  6FCE               	movwf	strcmp@s1& (0+255),b
  7389  0073B8  0E01               	movlw	high _modemResonseBuffer
  7390  0073BA  6FCF               	movwf	(strcmp@s1+1)& (0+255),b
  7391  0073BC  0EC8               	movlw	low (STR_72+9)
  7392  0073BE  6FD0               	movwf	strcmp@s2& (0+255),b
  7393  0073C0  0E7E               	movlw	high (STR_72+9)
  7394  0073C2  6FD1               	movwf	(strcmp@s2+1)& (0+255),b
  7395  0073C4  EC83  F02C         	call	_strcmp	;wreg free
  7396  0073C8  51CE               	movf	?_strcmp& (0+255),w,b
  7397  0073CA  11CF               	iorwf	(?_strcmp+1)& (0+255),w,b
  7398  0073CC  E1C6               	bnz	l372
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;MOTEapp.c: 384: {
  7402                           ;MOTEapp.c: 386: sendCommand("radio set sf sf12");
  7403  0073CE  0EB7               	movlw	low STR_42
  7404  0073D0  6FCF               	movwf	sendCommand@string& (0+255),b
  7405  0073D2  0E7C               	movlw	high STR_42
  7406  0073D4  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  7407  0073D6  ECD8  F026         	call	_sendCommand	;wreg free
  7408                           
  7409                           ;MOTEapp.c: 387: oled_clear();
  7410  0073DA  ECB3  F025         	call	_oled_clear	;wreg free
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;MOTEapp.c: 388: oled_putString("set sf",0,0);
  7414  0073DE  0EE2               	movlw	low STR_43
  7415  0073E0  6FDB               	movwf	oled_putString@string& (0+255),b
  7416  0073E2  0E7F               	movlw	high STR_43
  7417  0073E4  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7418  0073E6  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7419  0073E8  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7420  0073EA  ECB4  F02A         	call	_oled_putString	;wreg free
  7421                           
  7422                           ;MOTEapp.c: 389: moteApp_delayms(50);
  7423  0073EE  0100               	movlb	0	; () banked
  7424  0073F0  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7425  0073F2  0E32               	movlw	50
  7426  0073F4  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7427  0073F6  EC86  F026         	call	_moteApp_delayms	;wreg free
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;MOTEapp.c: 390: activeState = moteSetSf;
  7431  0073FA  0E04               	movlw	4
  7432  0073FC  D190               	goto	L15
  7433  0073FE                     l8875:
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;MOTEapp.c: 399: if ( messageReady )
  7437  0073FE  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7438  007400  E101 D20D          	bz	l9051
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;MOTEapp.c: 400: {
  7442                           ;MOTEapp.c: 401: if(strcmp(modemResonseBuffer, "ok") == 0)
  7443  007404  0E90               	movlw	low _modemResonseBuffer
  7444  007406  6FCE               	movwf	strcmp@s1& (0+255),b
  7445  007408  0E01               	movlw	high _modemResonseBuffer
  7446  00740A  6FCF               	movwf	(strcmp@s1+1)& (0+255),b
  7447  00740C  0EC8               	movlw	low (STR_72+9)
  7448  00740E  6FD0               	movwf	strcmp@s2& (0+255),b
  7449  007410  0E7E               	movlw	high (STR_72+9)
  7450  007412  6FD1               	movwf	(strcmp@s2+1)& (0+255),b
  7451  007414  EC83  F02C         	call	_strcmp	;wreg free
  7452  007418  51CE               	movf	?_strcmp& (0+255),w,b
  7453  00741A  11CF               	iorwf	(?_strcmp+1)& (0+255),w,b
  7454  00741C  E19E               	bnz	l372
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;MOTEapp.c: 402: {
  7458                           ;MOTEapp.c: 404: sendCommand("radio set afcbw 125");
  7459  00741E  0E6A               	movlw	low STR_45
  7460  007420  6FCF               	movwf	sendCommand@string& (0+255),b
  7461  007422  0E7C               	movlw	high STR_45
  7462  007424  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  7463  007426  ECD8  F026         	call	_sendCommand	;wreg free
  7464                           
  7465                           ;MOTEapp.c: 405: oled_clear();
  7466  00742A  ECB3  F025         	call	_oled_clear	;wreg free
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;MOTEapp.c: 406: oled_putString("set afcbw",0,0);
  7470  00742E  0E22               	movlw	low STR_46
  7471  007430  6FDB               	movwf	oled_putString@string& (0+255),b
  7472  007432  0E7F               	movlw	high STR_46
  7473  007434  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7474  007436  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7475  007438  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7476  00743A  ECB4  F02A         	call	_oled_putString	;wreg free
  7477                           
  7478                           ;MOTEapp.c: 407: moteApp_delayms(50);
  7479  00743E  0100               	movlb	0	; () banked
  7480  007440  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7481  007442  0E32               	movlw	50
  7482  007444  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7483  007446  EC86  F026         	call	_moteApp_delayms	;wreg free
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;MOTEapp.c: 408: activeState = moteSetAfcbw;
  7487  00744A  0E05               	movlw	5
  7488  00744C  D168               	goto	L15
  7489  00744E                     l8889:
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;MOTEapp.c: 417: if ( messageReady )
  7493  00744E  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7494  007450  E101 D1E5          	bz	l9051
  7495                           
  7496                           ; BSR set to: 0
  7497                           ;MOTEapp.c: 418: {
  7498                           ;MOTEapp.c: 419: if(strcmp(modemResonseBuffer, "ok") == 0)
  7499  007454  0E90               	movlw	low _modemResonseBuffer
  7500  007456  6FCE               	movwf	strcmp@s1& (0+255),b
  7501  007458  0E01               	movlw	high _modemResonseBuffer
  7502  00745A  6FCF               	movwf	(strcmp@s1+1)& (0+255),b
  7503  00745C  0EC8               	movlw	low (STR_72+9)
  7504  00745E  6FD0               	movwf	strcmp@s2& (0+255),b
  7505  007460  0E7E               	movlw	high (STR_72+9)
  7506  007462  6FD1               	movwf	(strcmp@s2+1)& (0+255),b
  7507  007464  EC83  F02C         	call	_strcmp	;wreg free
  7508  007468  51CE               	movf	?_strcmp& (0+255),w,b
  7509  00746A  11CF               	iorwf	(?_strcmp+1)& (0+255),w,b
  7510  00746C  E001 D775          	bnz	l372
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;MOTEapp.c: 420: {
  7514                           ;MOTEapp.c: 422: sendCommand("radio set fdev 5000");
  7515  007470  0E56               	movlw	low STR_48
  7516  007472  6FCF               	movwf	sendCommand@string& (0+255),b
  7517  007474  0E7C               	movlw	high STR_48
  7518  007476  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  7519  007478  ECD8  F026         	call	_sendCommand	;wreg free
  7520                           
  7521                           ;MOTEapp.c: 423: oled_clear();
  7522  00747C  ECB3  F025         	call	_oled_clear	;wreg free
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;MOTEapp.c: 424: oled_putString("set fdev",0,0);
  7526  007480  0E75               	movlw	low STR_49
  7527  007482  6FDB               	movwf	oled_putString@string& (0+255),b
  7528  007484  0E7F               	movlw	high STR_49
  7529  007486  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7530  007488  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7531  00748A  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7532  00748C  ECB4  F02A         	call	_oled_putString	;wreg free
  7533                           
  7534                           ;MOTEapp.c: 425: moteApp_delayms(50);
  7535  007490  0100               	movlb	0	; () banked
  7536  007492  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7537  007494  0E32               	movlw	50
  7538  007496  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7539  007498  EC86  F026         	call	_moteApp_delayms	;wreg free
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;MOTEapp.c: 426: activeState = moteSetFdev;
  7543  00749C  0E06               	movlw	6
  7544  00749E  D13F               	goto	L15
  7545  0074A0                     l8903:
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;MOTEapp.c: 435: if ( messageReady )
  7549  0074A0  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7550  0074A2  E101 D1BC          	bz	l9051
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;MOTEapp.c: 436: {
  7554                           ;MOTEapp.c: 437: if(strcmp(modemResonseBuffer, "ok") == 0)
  7555  0074A6  0E90               	movlw	low _modemResonseBuffer
  7556  0074A8  6FCE               	movwf	strcmp@s1& (0+255),b
  7557  0074AA  0E01               	movlw	high _modemResonseBuffer
  7558  0074AC  6FCF               	movwf	(strcmp@s1+1)& (0+255),b
  7559  0074AE  0EC8               	movlw	low (STR_72+9)
  7560  0074B0  6FD0               	movwf	strcmp@s2& (0+255),b
  7561  0074B2  0E7E               	movlw	high (STR_72+9)
  7562  0074B4  6FD1               	movwf	(strcmp@s2+1)& (0+255),b
  7563  0074B6  EC83  F02C         	call	_strcmp	;wreg free
  7564  0074BA  51CE               	movf	?_strcmp& (0+255),w,b
  7565  0074BC  11CF               	iorwf	(?_strcmp+1)& (0+255),w,b
  7566  0074BE  E001 D74C          	bnz	l372
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;MOTEapp.c: 438: {
  7570                           ;MOTEapp.c: 440: sendCommand("radio set prlen 8");
  7571  0074C2  0EC9               	movlw	low STR_51
  7572  0074C4  6FCF               	movwf	sendCommand@string& (0+255),b
  7573  0074C6  0E7C               	movlw	high STR_51
  7574  0074C8  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  7575  0074CA  ECD8  F026         	call	_sendCommand	;wreg free
  7576                           
  7577                           ;MOTEapp.c: 441: oled_clear();
  7578  0074CE  ECB3  F025         	call	_oled_clear	;wreg free
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;MOTEapp.c: 442: oled_putString("set prlen",0,0);
  7582  0074D2  0E18               	movlw	low STR_52
  7583  0074D4  6FDB               	movwf	oled_putString@string& (0+255),b
  7584  0074D6  0E7F               	movlw	high STR_52
  7585  0074D8  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7586  0074DA  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7587  0074DC  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7588  0074DE  ECB4  F02A         	call	_oled_putString	;wreg free
  7589                           
  7590                           ;MOTEapp.c: 443: moteApp_delayms(50);
  7591  0074E2  0100               	movlb	0	; () banked
  7592  0074E4  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7593  0074E6  0E32               	movlw	50
  7594  0074E8  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7595  0074EA  EC86  F026         	call	_moteApp_delayms	;wreg free
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;MOTEapp.c: 444: activeState = moteSetPrlen;
  7599  0074EE  0E07               	movlw	7
  7600  0074F0  D116               	goto	L15
  7601  0074F2                     l8917:
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;MOTEapp.c: 453: if ( messageReady )
  7605  0074F2  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7606  0074F4  E101 D193          	bz	l9051
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;MOTEapp.c: 454: {
  7610                           ;MOTEapp.c: 455: if(strcmp(modemResonseBuffer, "ok") == 0)
  7611  0074F8  0E90               	movlw	low _modemResonseBuffer
  7612  0074FA  6FCE               	movwf	strcmp@s1& (0+255),b
  7613  0074FC  0E01               	movlw	high _modemResonseBuffer
  7614  0074FE  6FCF               	movwf	(strcmp@s1+1)& (0+255),b
  7615  007500  0EC8               	movlw	low (STR_72+9)
  7616  007502  6FD0               	movwf	strcmp@s2& (0+255),b
  7617  007504  0E7E               	movlw	high (STR_72+9)
  7618  007506  6FD1               	movwf	(strcmp@s2+1)& (0+255),b
  7619  007508  EC83  F02C         	call	_strcmp	;wreg free
  7620  00750C  51CE               	movf	?_strcmp& (0+255),w,b
  7621  00750E  11CF               	iorwf	(?_strcmp+1)& (0+255),w,b
  7622  007510  E001 D723          	bnz	l372
  7623                           
  7624                           ; BSR set to: 0
  7625                           ;MOTEapp.c: 456: {
  7626                           ;MOTEapp.c: 458: sendCommand("radio set crc on");
  7627  007514  0E41               	movlw	low STR_54
  7628  007516  6FCF               	movwf	sendCommand@string& (0+255),b
  7629  007518  0E7D               	movlw	high STR_54
  7630  00751A  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  7631  00751C  ECD8  F026         	call	_sendCommand	;wreg free
  7632                           
  7633                           ;MOTEapp.c: 459: oled_clear();
  7634  007520  ECB3  F025         	call	_oled_clear	;wreg free
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;MOTEapp.c: 460: oled_putString("set crc",0,0);
  7638  007524  0EB2               	movlw	low STR_55
  7639  007526  6FDB               	movwf	oled_putString@string& (0+255),b
  7640  007528  0E7F               	movlw	high STR_55
  7641  00752A  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7642  00752C  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7643  00752E  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7644  007530  ECB4  F02A         	call	_oled_putString	;wreg free
  7645                           
  7646                           ;MOTEapp.c: 461: moteApp_delayms(50);
  7647  007534  0100               	movlb	0	; () banked
  7648  007536  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7649  007538  0E32               	movlw	50
  7650  00753A  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7651  00753C  EC86  F026         	call	_moteApp_delayms	;wreg free
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;MOTEapp.c: 462: activeState = moteSetCrc;
  7655  007540  0E08               	movlw	8
  7656  007542  D0ED               	goto	L15
  7657  007544                     l8931:
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;MOTEapp.c: 471: if ( messageReady )
  7661  007544  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7662  007546  E101 D16A          	bz	l9051
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;MOTEapp.c: 472: {
  7666                           ;MOTEapp.c: 473: if(strcmp(modemResonseBuffer, "ok") == 0)
  7667  00754A  0E90               	movlw	low _modemResonseBuffer
  7668  00754C  6FCE               	movwf	strcmp@s1& (0+255),b
  7669  00754E  0E01               	movlw	high _modemResonseBuffer
  7670  007550  6FCF               	movwf	(strcmp@s1+1)& (0+255),b
  7671  007552  0EC8               	movlw	low (STR_72+9)
  7672  007554  6FD0               	movwf	strcmp@s2& (0+255),b
  7673  007556  0E7E               	movlw	high (STR_72+9)
  7674  007558  6FD1               	movwf	(strcmp@s2+1)& (0+255),b
  7675  00755A  EC83  F02C         	call	_strcmp	;wreg free
  7676  00755E  51CE               	movf	?_strcmp& (0+255),w,b
  7677  007560  11CF               	iorwf	(?_strcmp+1)& (0+255),w,b
  7678  007562  E001 D6FA          	bnz	l372
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;MOTEapp.c: 474: {
  7682                           ;MOTEapp.c: 476: sendCommand("radio set cr 4/5");
  7683  007566  0EFD               	movlw	low STR_57
  7684  007568  6FCF               	movwf	sendCommand@string& (0+255),b
  7685  00756A  0E7C               	movlw	high STR_57
  7686  00756C  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  7687  00756E  ECD8  F026         	call	_sendCommand	;wreg free
  7688                           
  7689                           ;MOTEapp.c: 477: oled_clear();
  7690  007572  ECB3  F025         	call	_oled_clear	;wreg free
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;MOTEapp.c: 478: oled_putString("set cr",0,0);
  7694  007576  0EE9               	movlw	low STR_58
  7695  007578  6FDB               	movwf	oled_putString@string& (0+255),b
  7696  00757A  0E7F               	movlw	high STR_58
  7697  00757C  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7698  00757E  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7699  007580  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7700  007582  ECB4  F02A         	call	_oled_putString	;wreg free
  7701                           
  7702                           ;MOTEapp.c: 479: moteApp_delayms(50);
  7703  007586  0100               	movlb	0	; () banked
  7704  007588  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7705  00758A  0E32               	movlw	50
  7706  00758C  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7707  00758E  EC86  F026         	call	_moteApp_delayms	;wreg free
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;MOTEapp.c: 480: activeState = moteSetCr;
  7711  007592  0E09               	movlw	9
  7712  007594  D0C4               	goto	L15
  7713  007596                     l8945:
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;MOTEapp.c: 489: if ( messageReady )
  7717  007596  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7718  007598  E101 D141          	bz	l9051
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;MOTEapp.c: 490: {
  7722                           ;MOTEapp.c: 491: if(strcmp(modemResonseBuffer, "ok") == 0)
  7723  00759C  0E90               	movlw	low _modemResonseBuffer
  7724  00759E  6FCE               	movwf	strcmp@s1& (0+255),b
  7725  0075A0  0E01               	movlw	high _modemResonseBuffer
  7726  0075A2  6FCF               	movwf	(strcmp@s1+1)& (0+255),b
  7727  0075A4  0EC8               	movlw	low (STR_72+9)
  7728  0075A6  6FD0               	movwf	strcmp@s2& (0+255),b
  7729  0075A8  0E7E               	movlw	high (STR_72+9)
  7730  0075AA  6FD1               	movwf	(strcmp@s2+1)& (0+255),b
  7731  0075AC  EC83  F02C         	call	_strcmp	;wreg free
  7732  0075B0  51CE               	movf	?_strcmp& (0+255),w,b
  7733  0075B2  11CF               	iorwf	(?_strcmp+1)& (0+255),w,b
  7734  0075B4  E001 D6D1          	bnz	l372
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;MOTEapp.c: 492: {
  7738                           ;MOTEapp.c: 494: sendCommand("radio set wdt 0");
  7739  0075B8  0E84               	movlw	low STR_60
  7740  0075BA  6FCF               	movwf	sendCommand@string& (0+255),b
  7741  0075BC  0E7D               	movlw	high STR_60
  7742  0075BE  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  7743  0075C0  ECD8  F026         	call	_sendCommand	;wreg free
  7744                           
  7745                           ;MOTEapp.c: 495: oled_clear();
  7746  0075C4  ECB3  F025         	call	_oled_clear	;wreg free
  7747                           
  7748                           ; BSR set to: 0
  7749                           ;MOTEapp.c: 496: oled_putString("set wdt",0,0);
  7750  0075C8  0ECA               	movlw	low STR_61
  7751  0075CA  6FDB               	movwf	oled_putString@string& (0+255),b
  7752  0075CC  0E7F               	movlw	high STR_61
  7753  0075CE  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7754  0075D0  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7755  0075D2  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7756  0075D4  ECB4  F02A         	call	_oled_putString	;wreg free
  7757                           
  7758                           ;MOTEapp.c: 497: moteApp_delayms(50);
  7759  0075D8  0100               	movlb	0	; () banked
  7760  0075DA  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7761  0075DC  0E32               	movlw	50
  7762  0075DE  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7763  0075E0  EC86  F026         	call	_moteApp_delayms	;wreg free
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;MOTEapp.c: 498: activeState = moteSetWdt;
  7767  0075E4  0E0A               	movlw	10
  7768  0075E6  D09B               	goto	L15
  7769  0075E8                     l8959:
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;MOTEapp.c: 507: if ( messageReady )
  7773  0075E8  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7774  0075EA  E101 D118          	bz	l9051
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;MOTEapp.c: 508: {
  7778                           ;MOTEapp.c: 509: if(strcmp(modemResonseBuffer, "ok") == 0)
  7779  0075EE  0E90               	movlw	low _modemResonseBuffer
  7780  0075F0  6FCE               	movwf	strcmp@s1& (0+255),b
  7781  0075F2  0E01               	movlw	high _modemResonseBuffer
  7782  0075F4  6FCF               	movwf	(strcmp@s1+1)& (0+255),b
  7783  0075F6  0EC8               	movlw	low (STR_72+9)
  7784  0075F8  6FD0               	movwf	strcmp@s2& (0+255),b
  7785  0075FA  0E7E               	movlw	high (STR_72+9)
  7786  0075FC  6FD1               	movwf	(strcmp@s2+1)& (0+255),b
  7787  0075FE  EC83  F02C         	call	_strcmp	;wreg free
  7788  007602  51CE               	movf	?_strcmp& (0+255),w,b
  7789  007604  11CF               	iorwf	(?_strcmp+1)& (0+255),w,b
  7790  007606  E001 D6A8          	bnz	l372
  7791                           
  7792                           ; BSR set to: 0
  7793                           ;MOTEapp.c: 510: {
  7794                           ;MOTEapp.c: 512: sendCommand("radio set sync 12");
  7795  00760A  0EA5               	movlw	low STR_63
  7796  00760C  6FCF               	movwf	sendCommand@string& (0+255),b
  7797  00760E  0E7C               	movlw	high STR_63
  7798  007610  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  7799  007612  ECD8  F026         	call	_sendCommand	;wreg free
  7800                           
  7801                           ;MOTEapp.c: 513: oled_clear();
  7802  007616  ECB3  F025         	call	_oled_clear	;wreg free
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;MOTEapp.c: 514: oled_putString("set sync",0,0);
  7806  00761A  0E5A               	movlw	low STR_64
  7807  00761C  6FDB               	movwf	oled_putString@string& (0+255),b
  7808  00761E  0E7F               	movlw	high STR_64
  7809  007620  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7810  007622  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7811  007624  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7812  007626  ECB4  F02A         	call	_oled_putString	;wreg free
  7813                           
  7814                           ;MOTEapp.c: 515: moteApp_delayms(50);
  7815  00762A  0100               	movlb	0	; () banked
  7816  00762C  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7817  00762E  0E32               	movlw	50
  7818  007630  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7819  007632  EC86  F026         	call	_moteApp_delayms	;wreg free
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;MOTEapp.c: 516: activeState = moteSetSync;
  7823  007636  0E0B               	movlw	11
  7824  007638  D072               	goto	L15
  7825  00763A                     l8973:
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;MOTEapp.c: 525: if ( messageReady )
  7829  00763A  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7830  00763C  E101 D0EF          	bz	l9051
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;MOTEapp.c: 526: {
  7834                           ;MOTEapp.c: 527: if(strcmp(modemResonseBuffer, "ok") == 0)
  7835  007640  0E90               	movlw	low _modemResonseBuffer
  7836  007642  6FCE               	movwf	strcmp@s1& (0+255),b
  7837  007644  0E01               	movlw	high _modemResonseBuffer
  7838  007646  6FCF               	movwf	(strcmp@s1+1)& (0+255),b
  7839  007648  0EC8               	movlw	low (STR_72+9)
  7840  00764A  6FD0               	movwf	strcmp@s2& (0+255),b
  7841  00764C  0E7E               	movlw	high (STR_72+9)
  7842  00764E  6FD1               	movwf	(strcmp@s2+1)& (0+255),b
  7843  007650  EC83  F02C         	call	_strcmp	;wreg free
  7844  007654  51CE               	movf	?_strcmp& (0+255),w,b
  7845  007656  11CF               	iorwf	(?_strcmp+1)& (0+255),w,b
  7846  007658  E001 D67F          	bnz	l372
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;MOTEapp.c: 528: {
  7850                           ;MOTEapp.c: 530: sendCommand("radio set bw 125");
  7851  00765C  0E0E               	movlw	low STR_66
  7852  00765E  6FCF               	movwf	sendCommand@string& (0+255),b
  7853  007660  0E7D               	movlw	high STR_66
  7854  007662  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  7855  007664  ECD8  F026         	call	_sendCommand	;wreg free
  7856                           
  7857                           ;MOTEapp.c: 531: oled_clear();
  7858  007668  ECB3  F025         	call	_oled_clear	;wreg free
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;MOTEapp.c: 532: oled_putString("set bw",0,0);
  7862  00766C  0EF0               	movlw	low STR_67
  7863  00766E  6FDB               	movwf	oled_putString@string& (0+255),b
  7864  007670  0E7F               	movlw	high STR_67
  7865  007672  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7866  007674  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7867  007676  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7868  007678  ECB4  F02A         	call	_oled_putString	;wreg free
  7869                           
  7870                           ;MOTEapp.c: 533: moteApp_delayms(50);
  7871  00767C  0100               	movlb	0	; () banked
  7872  00767E  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7873  007680  0E32               	movlw	50
  7874  007682  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7875  007684  EC86  F026         	call	_moteApp_delayms	;wreg free
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;MOTEapp.c: 534: activeState = moteSetBw;
  7879  007688  0E0C               	movlw	12
  7880  00768A  D049               	goto	L15
  7881  00768C                     l8987:
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;MOTEapp.c: 543: if ( messageReady )
  7885  00768C  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7886  00768E  E101 D0C6          	bz	l9051
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;MOTEapp.c: 544: {
  7890                           ;MOTEapp.c: 545: if(strcmp(modemResonseBuffer, "ok") == 0)
  7891  007692  0E90               	movlw	low _modemResonseBuffer
  7892  007694  6FCE               	movwf	strcmp@s1& (0+255),b
  7893  007696  0E01               	movlw	high _modemResonseBuffer
  7894  007698  6FCF               	movwf	(strcmp@s1+1)& (0+255),b
  7895  00769A  0EC8               	movlw	low (STR_72+9)
  7896  00769C  6FD0               	movwf	strcmp@s2& (0+255),b
  7897  00769E  0E7E               	movlw	high (STR_72+9)
  7898  0076A0  6FD1               	movwf	(strcmp@s2+1)& (0+255),b
  7899  0076A2  EC83  F02C         	call	_strcmp	;wreg free
  7900  0076A6  51CE               	movf	?_strcmp& (0+255),w,b
  7901  0076A8  11CF               	iorwf	(?_strcmp+1)& (0+255),w,b
  7902  0076AA  E001 D656          	bnz	l372
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;MOTEapp.c: 546: {
  7906                           ;MOTEapp.c: 547: sendCommand("mac pause");
  7907  0076AE  0E0E               	movlw	low STR_69
  7908  0076B0  6FCF               	movwf	sendCommand@string& (0+255),b
  7909  0076B2  0E7F               	movlw	high STR_69
  7910  0076B4  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  7911  0076B6  ECD8  F026         	call	_sendCommand	;wreg free
  7912                           
  7913                           ;MOTEapp.c: 549: oled_clear();
  7914  0076BA  ECB3  F025         	call	_oled_clear	;wreg free
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;MOTEapp.c: 550: oled_putString("mac pause",0,0);
  7918  0076BE  0E0E               	movlw	low STR_69
  7919  0076C0  6FDB               	movwf	oled_putString@string& (0+255),b
  7920  0076C2  0E7F               	movlw	high STR_69
  7921  0076C4  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  7922  0076C6  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  7923  0076C8  6BDE               	clrf	oled_putString@start_page& (0+255),b
  7924  0076CA  ECB4  F02A         	call	_oled_putString	;wreg free
  7925  0076CE                     l8997:
  7926                           
  7927                           ;MOTEapp.c: 552: moteApp_delayms(50);
  7928  0076CE  0100               	movlb	0	; () banked
  7929  0076D0  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7930  0076D2  0E32               	movlw	50
  7931  0076D4  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7932  0076D6  EC86  F026         	call	_moteApp_delayms	;wreg free
  7933  0076DA                     l8999:
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;MOTEapp.c: 553: activeState = moteMacPause;
  7937  0076DA  0E0D               	movlw	13
  7938  0076DC  D020               	goto	L15
  7939  0076DE                     l9001:
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;MOTEapp.c: 562: if ( messageReady )
  7943  0076DE  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7944  0076E0  E101 D09D          	bz	l9051
  7945  0076E4                     l9003:
  7946                           
  7947                           ; BSR set to: 0
  7948                           ;MOTEapp.c: 566: cw_beep();
  7949  0076E4  EC72  F027         	call	_cw_beep	;wreg free
  7950  0076E8  D7FD               	goto	l9003
  7951  0076EA                     l9007:
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;MOTEapp.c: 572: if ( messageReady )
  7955  0076EA  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7956  0076EC  E101 D097          	bz	l9051
  7957                           
  7958                           ; BSR set to: 0
  7959                           ;MOTEapp.c: 573: {
  7960                           ;MOTEapp.c: 574: if (mode == 1) {
  7961  0076F0  0591               	decf	moteJoiningProcess@mode& (0+255),w,b
  7962  0076F2  1192               	iorwf	(moteJoiningProcess@mode+1)& (0+255),w,b
  7963  0076F4  E1EC               	bnz	l8997
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;MOTEapp.c: 575: if(strcmp(modemResonseBuffer, "ok") == 0)
  7967  0076F6  0E90               	movlw	low _modemResonseBuffer
  7968  0076F8  6FCE               	movwf	strcmp@s1& (0+255),b
  7969  0076FA  0E01               	movlw	high _modemResonseBuffer
  7970  0076FC  6FCF               	movwf	(strcmp@s1+1)& (0+255),b
  7971  0076FE  0EC8               	movlw	low (STR_72+9)
  7972  007700  6FD0               	movwf	strcmp@s2& (0+255),b
  7973  007702  0E7E               	movlw	high (STR_72+9)
  7974  007704  6FD1               	movwf	(strcmp@s2+1)& (0+255),b
  7975  007706  EC83  F02C         	call	_strcmp	;wreg free
  7976  00770A  51CE               	movf	?_strcmp& (0+255),w,b
  7977  00770C  11CF               	iorwf	(?_strcmp+1)& (0+255),w,b
  7978  00770E  E001 D624          	bnz	l372
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;MOTEapp.c: 576: {
  7982                           ;MOTEapp.c: 580: moteApp_delayms(50);
  7983  007712  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7984  007714  0E32               	movlw	50
  7985  007716  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  7986  007718  EC86  F026         	call	_moteApp_delayms	;wreg free
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;MOTEapp.c: 581: activeState = moteTxWait;
  7990  00771C  0E0F               	movlw	15
  7991  00771E                     L15:
  7992  00771E  6F9A               	movwf	_activeState& (0+255),b
  7993                           
  7994                           ;MOTEapp.c: 582: }
  7995  007720  D07E               	goto	l9051
  7996  007722                     l9021:
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;MOTEapp.c: 594: if ( messageReady )
  8000  007722  51E2               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  8001  007724  E07C               	bz	l9051
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;MOTEapp.c: 595: {
  8005                           ;MOTEapp.c: 596: if(strcmp(modemResonseBuffer, "radio_tx_ok") == 0)
  8006  007726  0E90               	movlw	low _modemResonseBuffer
  8007  007728  6FCE               	movwf	strcmp@s1& (0+255),b
  8008  00772A  0E01               	movlw	high _modemResonseBuffer
  8009  00772C  6FCF               	movwf	(strcmp@s1+1)& (0+255),b
  8010  00772E  0EBF               	movlw	low STR_72
  8011  007730  6FD0               	movwf	strcmp@s2& (0+255),b
  8012  007732  0E7E               	movlw	high STR_72
  8013  007734  6FD1               	movwf	(strcmp@s2+1)& (0+255),b
  8014  007736  EC83  F02C         	call	_strcmp	;wreg free
  8015  00773A  51CE               	movf	?_strcmp& (0+255),w,b
  8016  00773C  11CF               	iorwf	(?_strcmp+1)& (0+255),w,b
  8017  00773E  E001 D60C          	bnz	l372
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;MOTEapp.c: 597: {
  8021                           ;MOTEapp.c: 598: sendCommand("mac pause");
  8022  007742  0E0E               	movlw	low STR_69
  8023  007744  6FCF               	movwf	sendCommand@string& (0+255),b
  8024  007746  0E7F               	movlw	high STR_69
  8025  007748  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  8026  00774A  ECD8  F026         	call	_sendCommand	;wreg free
  8027                           
  8028                           ;MOTEapp.c: 599: oled_clear();
  8029  00774E  ECB3  F025         	call	_oled_clear	;wreg free
  8030                           
  8031                           ; BSR set to: 0
  8032                           ;MOTEapp.c: 600: oled_putString("",0,0);
  8033  007752  0E07               	movlw	low (STR_96+25)
  8034  007754  6FDB               	movwf	oled_putString@string& (0+255),b
  8035  007756  0E7C               	movlw	high (STR_96+25)
  8036  007758  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  8037  00775A  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  8038  00775C  6BDE               	clrf	oled_putString@start_page& (0+255),b
  8039  00775E  ECB4  F02A         	call	_oled_putString	;wreg free
  8040                           
  8041                           ;MOTEapp.c: 601: oled_putString("Success!",0,1);
  8042  007762  0E3F               	movlw	low STR_75
  8043  007764  0100               	movlb	0	; () banked
  8044  007766  6FDB               	movwf	oled_putString@string& (0+255),b
  8045  007768  0E7F               	movlw	high STR_75
  8046  00776A  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  8047  00776C  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  8048  00776E  0E01               	movlw	1
  8049  007770  6FDE               	movwf	oled_putString@start_page& (0+255),b
  8050  007772  ECB4  F02A         	call	_oled_putString	;wreg free
  8051                           
  8052                           ;MOTEapp.c: 602: moteApp_delayms(200);
  8053  007776  0100               	movlb	0	; () banked
  8054  007778  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8055  00777A  0EC8               	movlw	200
  8056  00777C  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  8057  00777E  EC86  F026         	call	_moteApp_delayms	;wreg free
  8058  007782  D7AB               	goto	l8999
  8059  007784                     l9037:
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;MOTEapp.c: 613: joiningComplete = 1;
  8063  007784  0E01               	movlw	1
  8064  007786  6FE1               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;MOTEapp.c: 614: moteApp_delayms(50);
  8068  007788  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8069  00778A  0E32               	movlw	50
  8070  00778C  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  8071  00778E  EC86  F026         	call	_moteApp_delayms	;wreg free
  8072                           
  8073                           ;MOTEapp.c: 615: break;
  8074  007792  D045               	goto	l9051
  8075  007794                     l9041:
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;MOTEapp.c: 617: DATAEE_WriteByte(0x00, 0x00);
  8079  007794  0E00               	movlw	0
  8080  007796  6BCE               	clrf	DATAEE_WriteByte@bData& (0+255),b
  8081  007798  ECF6  F027         	call	_DATAEE_WriteByte
  8082  00779C                     l435:
  8083  00779C  B082               	btfsc	3970,0,c	;volatile
  8084  00779E  D002               	goto	l9045
  8085  0077A0  A282               	btfss	3970,1,c	;volatile
  8086  0077A2  D7FC               	goto	l435
  8087  0077A4                     l9045:
  8088                           
  8089                           ;MOTEapp.c: 619: moteApp_delayms(40);
  8090  0077A4  0100               	movlb	0	; () banked
  8091  0077A6  6BCF               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8092  0077A8  0E28               	movlw	40
  8093  0077AA  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  8094  0077AC  EC86  F026         	call	_moteApp_delayms	;wreg free
  8095  0077B0  00FF               	reset		;# 
  8096                           
  8097                           ;MOTEapp.c: 622: break;
  8098  0077B2  D035               	goto	l9051
  8099  0077B4                     l9049:
  8100  0077B4  0100               	movlb	0	; () banked
  8101  0077B6  519A               	movf	_activeState& (0+255),w,b
  8102                           
  8103                           ; Switch size 1, requested type "speed"
  8104                           ; Number of cases is 18, Range of values is 0 to 17
  8105                           ; switch strategies available:
  8106                           ; Name         Instructions Cycles
  8107                           ; simple_byte           55    28 (average)
  8108                           ;	Chosen strategy is simple_byte
  8109  0077B8  E101 D56A          	bz	l8809
  8110  0077BC  0A01               	xorlw	1	; case 1
  8111  0077BE  E101 D5A1          	bz	l8833
  8112  0077C2  0A03               	xorlw	3	; case 2
  8113  0077C4  E101 D5CB          	bz	l8847
  8114  0077C8  0A01               	xorlw	1	; case 3
  8115  0077CA  E101 D5F0          	bz	l8861
  8116  0077CE  0A07               	xorlw	7	; case 4
  8117  0077D0  E101 D615          	bz	l8875
  8118  0077D4  0A01               	xorlw	1	; case 5
  8119  0077D6  E101 D63A          	bz	l8889
  8120  0077DA  0A03               	xorlw	3	; case 6
  8121  0077DC  E101 D660          	bz	l8903
  8122  0077E0  0A01               	xorlw	1	; case 7
  8123  0077E2  E101 D686          	bz	l8917
  8124  0077E6  0A0F               	xorlw	15	; case 8
  8125  0077E8  E101 D6AC          	bz	l8931
  8126  0077EC  0A01               	xorlw	1	; case 9
  8127  0077EE  E101 D6D2          	bz	l8945
  8128  0077F2  0A03               	xorlw	3	; case 10
  8129  0077F4  E101 D6F8          	bz	l8959
  8130  0077F8  0A01               	xorlw	1	; case 11
  8131  0077FA  E101 D71E          	bz	l8973
  8132  0077FE  0A07               	xorlw	7	; case 12
  8133  007800  E101 D744          	bz	l8987
  8134  007804  0A01               	xorlw	1	; case 13
  8135  007806  E101 D76A          	bz	l9001
  8136  00780A  0A03               	xorlw	3	; case 14
  8137  00780C  E101 D76D          	bz	l9007
  8138  007810  0A01               	xorlw	1	; case 15
  8139  007812  E087               	bz	l9021
  8140  007814  0A1F               	xorlw	31	; case 16
  8141  007816  E0B6               	bz	l9037
  8142  007818  0A01               	xorlw	1	; case 17
  8143  00781A  E0BC               	bz	l9041
  8144  00781C  D538               	goto	l363
  8145  00781E                     l9051:
  8146                           
  8147                           ;MOTEapp.c: 624: return joiningComplete;
  8148  00781E  0100               	movlb	0	; () banked
  8149  007820  51E1               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
  8150                           
  8151                           ; BSR set to: 0
  8152  007822  0012               	return		;funcret
  8153  007824                     __end_of_moteJoiningProcess:
  8154                           	opt stack 0
  8155                           tblptru	equ	0xFF8
  8156                           tblptrh	equ	0xFF7
  8157                           tblptrl	equ	0xFF6
  8158                           tablat	equ	0xFF5
  8159                           intcon	equ	0xFF2
  8160                           postinc0	equ	0xFEE
  8161                           wreg	equ	0xFE8
  8162                           indf2	equ	0xFDF
  8163                           fsr2h	equ	0xFDA
  8164                           fsr2l	equ	0xFD9
  8165                           status	equ	0xFD8
  8166                           
  8167 ;; *************** function _strncmp *****************
  8168 ;; Defined at:
  8169 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/strncmp.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  8172 ;;		 -> modemResonseBuffer(64), 
  8173 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  8174 ;;		 -> STR_35(3), 
  8175 ;;  len             2    4[BANK0 ] unsigned int 
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;		None
  8178 ;; Return value:  Size  Location     Type
  8179 ;;                  2    0[BANK0 ] int 
  8180 ;; Registers used:
  8181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8182 ;; Tracked objects:
  8183 ;;		On entry : F/0
  8184 ;;		On exit  : F/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8187 ;;      Params:         0       6       0       0       0       0       0       0       0
  8188 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8189 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8190 ;;      Totals:         0       7       0       0       0       0       0       0       0
  8191 ;;Total ram usage:        7 bytes
  8192 ;; Hardware stack levels used:    1
  8193 ;; Hardware stack levels required when called:   11
  8194 ;; This function calls:
  8195 ;;		Nothing
  8196 ;; This function is called by:
  8197 ;;		_moteJoiningProcess
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           	psect	text28
  8202  0055CE                     __ptext28:
  8203                           	opt stack 0
  8204  0055CE                     _strncmp:
  8205                           	opt stack 17
  8206                           
  8207                           ; BSR set to: 0
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;incstack = 0
  8211  0055CE  D029               	goto	l8385
  8212  0055D0                     l8375:
  8213                           
  8214                           ; BSR set to: 0
  8215  0055D0  C0CE  FFD9         	movff	strncmp@s1,fsr2l
  8216  0055D4  C0CF  FFDA         	movff	strncmp@s1+1,fsr2h
  8217  0055D8  50DF               	movf	indf2,w,c
  8218  0055DA  E00D               	bz	l8379
  8219                           
  8220                           ; BSR set to: 0
  8221  0055DC  C0CE  FFD9         	movff	strncmp@s1,fsr2l
  8222  0055E0  C0CF  FFDA         	movff	strncmp@s1+1,fsr2h
  8223  0055E4  50DF               	movf	indf2,w,c
  8224  0055E6  6FD4               	movwf	??_strncmp& (0+255),b
  8225  0055E8  C0D0  FFF6         	movff	strncmp@s2,tblptrl
  8226  0055EC  C0D1  FFF7         	movff	strncmp@s2+1,tblptrh
  8227  0055F0                     	if	0	;tblptru may be non-zero
  8228  0055F0                     	endif
  8229  0055F0                     	if	0	;tblptru may be non-zero
  8230  0055F0                     	endif
  8231  0055F0  0008               	tblrd		*
  8232  0055F2  18F5               	xorwf	tablat,w,c
  8233  0055F4  E012               	bz	l8383
  8234  0055F6                     l8379:
  8235                           
  8236                           ; BSR set to: 0
  8237  0055F6  C0CE  FFD9         	movff	strncmp@s1,fsr2l
  8238  0055FA  C0CF  FFDA         	movff	strncmp@s1+1,fsr2h
  8239  0055FE  50DF               	movf	indf2,w,c
  8240  005600  6FD4               	movwf	??_strncmp& (0+255),b
  8241  005602  C0D0  FFF6         	movff	strncmp@s2,tblptrl
  8242  005606  C0D1  FFF7         	movff	strncmp@s2+1,tblptrh
  8243  00560A                     	if	0	;tblptru may be non-zero
  8244  00560A                     	endif
  8245  00560A                     	if	0	;tblptru may be non-zero
  8246  00560A                     	endif
  8247  00560A  0008               	tblrd		*
  8248  00560C  50F5               	movf	tablat,w,c
  8249  00560E  5DD4               	subwf	??_strncmp& (0+255),w,b
  8250  005610  6FCE               	movwf	?_strncmp& (0+255),b
  8251  005612  6BCF               	clrf	(?_strncmp+1)& (0+255),b
  8252  005614  A0D8               	btfss	status,0,c
  8253  005616  07CF               	decf	(?_strncmp+1)& (0+255),f,b
  8254  005618  0012               	return	
  8255  00561A                     l8383:
  8256                           
  8257                           ; BSR set to: 0
  8258  00561A  4BCE               	infsnz	strncmp@s1& (0+255),f,b
  8259  00561C  2BCF               	incf	(strncmp@s1+1)& (0+255),f,b
  8260  00561E  4BD0               	infsnz	strncmp@s2& (0+255),f,b
  8261  005620  2BD1               	incf	(strncmp@s2+1)& (0+255),f,b
  8262  005622                     l8385:
  8263                           
  8264                           ; BSR set to: 0
  8265  005622  07D2               	decf	strncmp@len& (0+255),f,b
  8266  005624  A0D8               	btfss	status,0,c
  8267  005626  07D3               	decf	(strncmp@len+1)& (0+255),f,b
  8268  005628  29D2               	incf	strncmp@len& (0+255),w,b
  8269  00562A  E1D2               	bnz	l8375
  8270  00562C  29D3               	incf	(strncmp@len+1)& (0+255),w,b
  8271  00562E  E1D0               	bnz	l8375
  8272                           
  8273                           ; BSR set to: 0
  8274  005630  6BCE               	clrf	?_strncmp& (0+255),b
  8275  005632  6BCF               	clrf	(?_strncmp+1)& (0+255),b
  8276                           
  8277                           ; BSR set to: 0
  8278  005634  0012               	return		;funcret
  8279  005636                     __end_of_strncmp:
  8280                           	opt stack 0
  8281                           tblptru	equ	0xFF8
  8282                           tblptrh	equ	0xFF7
  8283                           tblptrl	equ	0xFF6
  8284                           tablat	equ	0xFF5
  8285                           intcon	equ	0xFF2
  8286                           postinc0	equ	0xFEE
  8287                           wreg	equ	0xFE8
  8288                           indf2	equ	0xFDF
  8289                           fsr2h	equ	0xFDA
  8290                           fsr2l	equ	0xFD9
  8291                           status	equ	0xFD8
  8292                           
  8293 ;; *************** function _strcmp *****************
  8294 ;; Defined at:
  8295 ;;		line 5 in file "/opt/microchip/xc8/v1.36/sources/common/strcmp.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  8298 ;;		 -> modemResonseBuffer(64), 
  8299 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  8300 ;;		 -> STR_72(12), STR_71(3), STR_68(3), STR_65(3), 
  8301 ;;		 -> STR_62(3), STR_59(3), STR_56(3), STR_53(3), 
  8302 ;;		 -> STR_50(3), STR_47(3), STR_44(3), STR_41(3), 
  8303 ;;		 -> STR_38(3), 
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;  t1              1    8[BANK0 ] unsigned char 
  8306 ;;  t2              1    7[BANK0 ] unsigned char 
  8307 ;;  t0              1    6[BANK0 ] unsigned char 
  8308 ;; Return value:  Size  Location     Type
  8309 ;;                  2    0[BANK0 ] int 
  8310 ;; Registers used:
  8311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8312 ;; Tracked objects:
  8313 ;;		On entry : F/0
  8314 ;;		On exit  : F/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8317 ;;      Params:         0       4       0       0       0       0       0       0       0
  8318 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8319 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8320 ;;      Totals:         0       9       0       0       0       0       0       0       0
  8321 ;;Total ram usage:        9 bytes
  8322 ;; Hardware stack levels used:    1
  8323 ;; Hardware stack levels required when called:   11
  8324 ;; This function calls:
  8325 ;;		Nothing
  8326 ;; This function is called by:
  8327 ;;		_moteJoiningProcess
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text29
  8332  005906                     __ptext29:
  8333                           	opt stack 0
  8334  005906                     _strcmp:
  8335                           	opt stack 17
  8336  005906                     l8387:
  8337                           
  8338                           ; BSR set to: 0
  8339  005906  C0CE  FFD9         	movff	strcmp@s1,fsr2l
  8340  00590A  C0CF  FFDA         	movff	strcmp@s1+1,fsr2h
  8341  00590E  50DF               	movf	indf2,w,c
  8342  005910  6FD4               	movwf	strcmp@t0& (0+255),b
  8343                           
  8344                           ; BSR set to: 0
  8345  005912  C0D0  FFF6         	movff	strcmp@s2,tblptrl
  8346  005916  C0D1  FFF7         	movff	strcmp@s2+1,tblptrh
  8347  00591A                     	if	0	;tblptru may be non-zero
  8348  00591A                     	endif
  8349  00591A                     	if	0	;tblptru may be non-zero
  8350  00591A                     	endif
  8351  00591A  0008               	tblrd		*
  8352  00591C  CFF5 F0D6          	movff	tablat,strcmp@t1
  8353                           
  8354                           ; BSR set to: 0
  8355  005920  51D4               	movf	strcmp@t0& (0+255),w,b
  8356  005922  E02C               	bz	l8417
  8357                           
  8358                           ; BSR set to: 0
  8359  005924  0E02               	movlw	2
  8360  005926  27CE               	addwf	strcmp@s1& (0+255),f,b
  8361  005928  0E00               	movlw	0
  8362  00592A  23CF               	addwfc	(strcmp@s1+1)& (0+255),f,b
  8363  00592C  51D6               	movf	strcmp@t1& (0+255),w,b
  8364  00592E  19D4               	xorwf	strcmp@t0& (0+255),w,b
  8365  005930  E125               	bnz	l8417
  8366                           
  8367                           ; BSR set to: 0
  8368  005932  EE2F F0FF          	lfsr	2,-1
  8369  005936  51CE               	movf	strcmp@s1& (0+255),w,b
  8370  005938  26D9               	addwf	fsr2l,f,c
  8371  00593A  51CF               	movf	(strcmp@s1+1)& (0+255),w,b
  8372  00593C  22DA               	addwfc	fsr2h,f,c
  8373  00593E  50DF               	movf	indf2,w,c
  8374  005940  6FD5               	movwf	strcmp@t2& (0+255),b
  8375                           
  8376                           ; BSR set to: 0
  8377  005942  29D0               	incf	strcmp@s2& (0+255),w,b
  8378  005944  6FD2               	movwf	??_strcmp& (0+255),b
  8379  005946  0E00               	movlw	0
  8380  005948  21D1               	addwfc	(strcmp@s2+1)& (0+255),w,b
  8381  00594A  6FD3               	movwf	(??_strcmp+1)& (0+255),b
  8382  00594C  C0D2  FFF6         	movff	??_strcmp,tblptrl
  8383  005950  C0D3  FFF7         	movff	??_strcmp+1,tblptrh
  8384  005954                     	if	0	;tblptru may be non-zero
  8385  005954                     	endif
  8386  005954                     	if	0	;tblptru may be non-zero
  8387  005954                     	endif
  8388  005954  0008               	tblrd		*
  8389  005956  CFF5 F0D6          	movff	tablat,strcmp@t1
  8390                           
  8391                           ; BSR set to: 0
  8392  00595A  51D5               	movf	strcmp@t2& (0+255),w,b
  8393  00595C  E107               	bnz	l8409
  8394  00595E                     l8405:
  8395                           
  8396                           ; BSR set to: 0
  8397  00595E  51D6               	movf	strcmp@t1& (0+255),w,b
  8398  005960  5DD5               	subwf	strcmp@t2& (0+255),w,b
  8399  005962  6FCE               	movwf	?_strcmp& (0+255),b
  8400  005964  6BCF               	clrf	(?_strcmp+1)& (0+255),b
  8401  005966  A0D8               	btfss	status,0,c
  8402  005968  07CF               	decf	(?_strcmp+1)& (0+255),f,b
  8403  00596A  0012               	return	
  8404  00596C                     l8409:
  8405                           
  8406                           ; BSR set to: 0
  8407  00596C  0E02               	movlw	2
  8408  00596E  27D0               	addwf	strcmp@s2& (0+255),f,b
  8409  005970  0E00               	movlw	0
  8410  005972  23D1               	addwfc	(strcmp@s2+1)& (0+255),f,b
  8411  005974  51D5               	movf	strcmp@t2& (0+255),w,b
  8412  005976  19D6               	xorwf	strcmp@t1& (0+255),w,b
  8413  005978  E1F2               	bnz	l8405
  8414  00597A  D7C5               	goto	l8387
  8415  00597C                     l8417:
  8416                           
  8417                           ; BSR set to: 0
  8418  00597C  51D6               	movf	strcmp@t1& (0+255),w,b
  8419  00597E  5DD4               	subwf	strcmp@t0& (0+255),w,b
  8420  005980  6FCE               	movwf	?_strcmp& (0+255),b
  8421  005982  6BCF               	clrf	(?_strcmp+1)& (0+255),b
  8422  005984  A0D8               	btfss	status,0,c
  8423  005986  07CF               	decf	(?_strcmp+1)& (0+255),f,b
  8424                           
  8425                           ; BSR set to: 0
  8426  005988  0012               	return		;funcret
  8427  00598A                     __end_of_strcmp:
  8428                           	opt stack 0
  8429                           tblptru	equ	0xFF8
  8430                           tblptrh	equ	0xFF7
  8431                           tblptrl	equ	0xFF6
  8432                           tablat	equ	0xFF5
  8433                           intcon	equ	0xFF2
  8434                           postinc0	equ	0xFEE
  8435                           wreg	equ	0xFE8
  8436                           indf2	equ	0xFDF
  8437                           fsr2h	equ	0xFDA
  8438                           fsr2l	equ	0xFD9
  8439                           status	equ	0xFD8
  8440                           
  8441 ;; *************** function _cw_beep *****************
  8442 ;; Defined at:
  8443 ;;		line 285 in file "../Includes/Board/MOTEapp.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;		None
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;		None
  8448 ;; Return value:  Size  Location     Type
  8449 ;;                  1    wreg      void 
  8450 ;; Registers used:
  8451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8452 ;; Tracked objects:
  8453 ;;		On entry : 0/0
  8454 ;;		On exit  : F/0
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8457 ;;      Params:         0       0       0       0       0       0       0       0       0
  8458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8460 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8461 ;;Total ram usage:        0 bytes
  8462 ;; Hardware stack levels used:    1
  8463 ;; Hardware stack levels required when called:   17
  8464 ;; This function calls:
  8465 ;;		_moteApp_delayms
  8466 ;;		_oled_clear
  8467 ;;		_oled_putString
  8468 ;;		_sendCommand
  8469 ;; This function is called by:
  8470 ;;		_moteJoiningProcess
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text30
  8475  004EE4                     __ptext30:
  8476                           	opt stack 0
  8477  004EE4                     _cw_beep:
  8478                           	opt stack 11
  8479                           
  8480                           ;MOTEapp.c: 286: oled_clear();
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;incstack = 0
  8484  004EE4  ECB3  F025         	call	_oled_clear	;wreg free
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;MOTEapp.c: 287: oled_putString("beep ON",0,0);
  8488  004EE8  0EAA               	movlw	low STR_29
  8489  004EEA  6FDB               	movwf	oled_putString@string& (0+255),b
  8490  004EEC  0E7F               	movlw	high STR_29
  8491  004EEE  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  8492  004EF0  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  8493  004EF2  6BDE               	clrf	oled_putString@start_page& (0+255),b
  8494  004EF4  ECB4  F02A         	call	_oled_putString	;wreg free
  8495                           
  8496                           ;MOTEapp.c: 288: sendCommand("radio cw on\r\n");
  8497  004EF8  0EF0               	movlw	low STR_30
  8498  004EFA  0100               	movlb	0	; () banked
  8499  004EFC  6FCF               	movwf	sendCommand@string& (0+255),b
  8500  004EFE  0E7D               	movlw	high STR_30
  8501  004F00  6FD0               	movwf	(sendCommand@string+1)& (0+255),b
  8502  004F02  ECD8  F026         	call	_sendCommand	;wreg free
  8503                           
  8504                           ;MOTEapp.c: 289: moteApp_delayms(2000);
  8505  004F06  0E07               	movlw	7
  8506  004F08  0100               	movlb	0	; () banked
  8507  004F0A  6FCF               	movwf	(moteApp_delayms@length+1)& (0+255),b
  8508  004F0C  0ED0               	movlw	208
  8509  004F0E  6FCE               	movwf	moteApp_delayms@length& (0+255),b
  8510  004F10  EF86  F026         	goto	_moteApp_delayms	;wreg free
  8511  004F14                     __end_of_cw_beep:
  8512                           	opt stack 0
  8513                           tblptru	equ	0xFF8
  8514                           tblptrh	equ	0xFF7
  8515                           tblptrl	equ	0xFF6
  8516                           tablat	equ	0xFF5
  8517                           intcon	equ	0xFF2
  8518                           postinc0	equ	0xFEE
  8519                           wreg	equ	0xFE8
  8520                           indf2	equ	0xFDF
  8521                           fsr2h	equ	0xFDA
  8522                           fsr2l	equ	0xFD9
  8523                           status	equ	0xFD8
  8524                           
  8525 ;; *************** function _sendCommand *****************
  8526 ;; Defined at:
  8527 ;;		line 854 in file "../Includes/Board/MOTEapp.c"
  8528 ;; Parameters:    Size  Location     Type
  8529 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  8530 ;;		 -> STR_97(26), STR_96(26), STR_95(26), STR_94(26), 
  8531 ;;		 -> STR_93(1), STR_92(9), STR_91(13), STR_90(13), 
  8532 ;;		 -> STR_89(13), STR_88(13), STR_87(13), STR_86(13), 
  8533 ;;		 -> STR_85(13), STR_84(13), STR_83(16), STR_82(15), 
  8534 ;;		 -> STR_73(10), STR_69(10), STR_66(17), STR_63(18), 
  8535 ;;		 -> STR_60(16), STR_57(17), STR_54(17), STR_51(18), 
  8536 ;;		 -> STR_48(20), STR_45(20), STR_42(18), STR_39(17), 
  8537 ;;		 -> STR_36(19), STR_31(12), STR_30(14), STR_22(20), 
  8538 ;;		 -> STR_21(2), 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  1    wreg      void 
  8543 ;; Registers used:
  8544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8545 ;; Tracked objects:
  8546 ;;		On entry : F/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8550 ;;      Params:         0       2       0       0       0       0       0       0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8553 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8554 ;;Total ram usage:        2 bytes
  8555 ;; Hardware stack levels used:    1
  8556 ;; Hardware stack levels required when called:   13
  8557 ;; This function calls:
  8558 ;;		_EUSART_Write
  8559 ;;		_EndLine
  8560 ;; This function is called by:
  8561 ;;		_modemResync
  8562 ;;		_modemSleep
  8563 ;;		_cw_beep
  8564 ;;		_moteJoiningProcess
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568                           	psect	text31
  8569  004DB0                     __ptext31:
  8570                           	opt stack 0
  8571  004DB0                     _sendCommand:
  8572                           	opt stack 13
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;MOTEapp.c: 857: while (*string)
  8576                           
  8577                           ; BSR set to: 0
  8578                           ;incstack = 0
  8579  004DB0  D00B               	goto	l8009
  8580  004DB2                     l8005:
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;MOTEapp.c: 858: {
  8584                           ;MOTEapp.c: 859: EUSART_Write(*string++);
  8585  004DB2  C0CF  FFF6         	movff	sendCommand@string,tblptrl
  8586  004DB6  C0D0  FFF7         	movff	sendCommand@string+1,tblptrh
  8587  004DBA                     	if	0	;tblptru may be non-zero
  8588  004DBA                     	endif
  8589  004DBA                     	if	0	;tblptru may be non-zero
  8590  004DBA                     	endif
  8591  004DBA  0008               	tblrd		*
  8592  004DBC  50F5               	movf	tablat,w,c
  8593  004DBE  EC8A  F027         	call	_EUSART_Write
  8594  004DC2  0100               	movlb	0	; () banked
  8595  004DC4  4BCF               	infsnz	sendCommand@string& (0+255),f,b
  8596  004DC6  2BD0               	incf	(sendCommand@string+1)& (0+255),f,b
  8597  004DC8                     l8009:
  8598                           
  8599                           ; BSR set to: 0
  8600  004DC8  C0CF  FFF6         	movff	sendCommand@string,tblptrl
  8601  004DCC  C0D0  FFF7         	movff	sendCommand@string+1,tblptrh
  8602  004DD0                     	if	0	;tblptru may be non-zero
  8603  004DD0                     	endif
  8604  004DD0                     	if	0	;tblptru may be non-zero
  8605  004DD0                     	endif
  8606  004DD0  0008               	tblrd		*
  8607  004DD2  50F5               	movf	tablat,w,c
  8608  004DD4  E1EE               	bnz	l8005
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;MOTEapp.c: 860: }
  8612                           ;MOTEapp.c: 861: EndLine();
  8613  004DD6  EF40  F025         	goto	_EndLine	;wreg free
  8614  004DDA                     __end_of_sendCommand:
  8615                           	opt stack 0
  8616                           tblptru	equ	0xFF8
  8617                           tblptrh	equ	0xFF7
  8618                           tblptrl	equ	0xFF6
  8619                           tablat	equ	0xFF5
  8620                           intcon	equ	0xFF2
  8621                           postinc0	equ	0xFEE
  8622                           wreg	equ	0xFE8
  8623                           indf2	equ	0xFDF
  8624                           fsr2h	equ	0xFDA
  8625                           fsr2l	equ	0xFD9
  8626                           status	equ	0xFD8
  8627                           
  8628 ;; *************** function _EndLine *****************
  8629 ;; Defined at:
  8630 ;;		line 848 in file "../Includes/Board/MOTEapp.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;		None
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;		None
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  1    wreg      void 
  8637 ;; Registers used:
  8638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8639 ;; Tracked objects:
  8640 ;;		On entry : F/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8644 ;;      Params:         0       0       0       0       0       0       0       0       0
  8645 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8647 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8648 ;;Total ram usage:        0 bytes
  8649 ;; Hardware stack levels used:    1
  8650 ;; Hardware stack levels required when called:   12
  8651 ;; This function calls:
  8652 ;;		_EUSART_Write
  8653 ;; This function is called by:
  8654 ;;		_sendCommand
  8655 ;;		_sendDataCommand
  8656 ;; This function uses a non-reentrant model
  8657 ;;
  8658                           
  8659                           	psect	text32
  8660  004A80                     __ptext32:
  8661                           	opt stack 0
  8662  004A80                     _EndLine:
  8663                           	opt stack 15
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;MOTEapp.c: 850: EUSART_Write(0x0D);
  8667                           
  8668                           ;incstack = 0
  8669  004A80  0E0D               	movlw	13
  8670  004A82  EC8A  F027         	call	_EUSART_Write
  8671                           
  8672                           ;MOTEapp.c: 851: EUSART_Write(0x0A);
  8673  004A86  0E0A               	movlw	10
  8674  004A88  EF8A  F027         	goto	_EUSART_Write
  8675  004A8C                     __end_of_EndLine:
  8676                           	opt stack 0
  8677                           tblptru	equ	0xFF8
  8678                           tblptrh	equ	0xFF7
  8679                           tblptrl	equ	0xFF6
  8680                           tablat	equ	0xFF5
  8681                           intcon	equ	0xFF2
  8682                           postinc0	equ	0xFEE
  8683                           wreg	equ	0xFE8
  8684                           indf2	equ	0xFDF
  8685                           fsr2h	equ	0xFDA
  8686                           fsr2l	equ	0xFD9
  8687                           status	equ	0xFD8
  8688                           
  8689 ;; *************** function _moteApp_delayms *****************
  8690 ;; Defined at:
  8691 ;;		line 1044 in file "../Includes/Board/MOTEapp.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;  length          2    0[BANK0 ] unsigned int 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;  counter         2    3[BANK0 ] unsigned int 
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		wreg, status,2, status,0
  8700 ;; Tracked objects:
  8701 ;;		On entry : F/0
  8702 ;;		On exit  : F/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8705 ;;      Params:         0       2       0       0       0       0       0       0       0
  8706 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8707 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8708 ;;      Totals:         0       5       0       0       0       0       0       0       0
  8709 ;;Total ram usage:        5 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; Hardware stack levels required when called:   11
  8712 ;; This function calls:
  8713 ;;		Nothing
  8714 ;; This function is called by:
  8715 ;;		_main
  8716 ;;		_modemResync
  8717 ;;		_modemSleep
  8718 ;;		_moteHandler
  8719 ;;		_cw_beep
  8720 ;;		_moteJoiningProcess
  8721 ;;		_moteRunningProcess
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           	psect	text33
  8726  004D0C                     __ptext33:
  8727                           	opt stack 0
  8728  004D0C                     _moteApp_delayms:
  8729                           	opt stack 17
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;MOTEapp.c: 1046: uint16_t counter;
  8733                           ;MOTEapp.c: 1047: for(counter = 0; counter < length; counter++)
  8734                           
  8735                           ;incstack = 0
  8736  004D0C  6BD1               	clrf	moteApp_delayms@counter& (0+255),b
  8737  004D0E  6BD2               	clrf	(moteApp_delayms@counter+1)& (0+255),b
  8738  004D10  D00B               	goto	l587
  8739  004D12                     l7997:
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;MOTEapp.c: 1048: {
  8743                           ;MOTEapp.c: 1049: _delay((unsigned long)((1)*(48000000/4000.0)));
  8744  004D12  0E10               	movlw	16
  8745  004D14  6FD0               	movwf	??_moteApp_delayms& (0+255),b
  8746  004D16  0E94               	movlw	148
  8747  004D18                     u7727:
  8748  004D18  2EE8               	decfsz	wreg,f,c
  8749  004D1A  D7FE               	goto	u7727
  8750  004D1C  2FD0               	decfsz	??_moteApp_delayms& (0+255),f,b
  8751  004D1E  D7FC               	goto	u7727
  8752  004D20  D000               	nop2	
  8753  004D22  0100               	movlb	0	; () banked
  8754  004D24  4BD1               	infsnz	moteApp_delayms@counter& (0+255),f,b
  8755  004D26  2BD2               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
  8756  004D28                     l587:
  8757                           
  8758                           ; BSR set to: 0
  8759  004D28  51CE               	movf	moteApp_delayms@length& (0+255),w,b
  8760  004D2A  5DD1               	subwf	moteApp_delayms@counter& (0+255),w,b
  8761  004D2C  51CF               	movf	(moteApp_delayms@length+1)& (0+255),w,b
  8762  004D2E  59D2               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
  8763  004D30  E3F0               	bnc	l7997
  8764                           
  8765                           ; BSR set to: 0
  8766  004D32  0012               	return		;funcret
  8767  004D34                     __end_of_moteApp_delayms:
  8768                           	opt stack 0
  8769                           tblptru	equ	0xFF8
  8770                           tblptrh	equ	0xFF7
  8771                           tblptrl	equ	0xFF6
  8772                           tablat	equ	0xFF5
  8773                           intcon	equ	0xFF2
  8774                           postinc0	equ	0xFEE
  8775                           wreg	equ	0xFE8
  8776                           indf2	equ	0xFDF
  8777                           fsr2h	equ	0xFDA
  8778                           fsr2l	equ	0xFD9
  8779                           status	equ	0xFD8
  8780                           
  8781 ;; *************** function _DATAEE_WriteByte *****************
  8782 ;; Defined at:
  8783 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;  bAdd            1    wreg     unsigned char 
  8786 ;;  bData           1    0[BANK0 ] unsigned char 
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;  bAdd            1    1[BANK0 ] unsigned char 
  8789 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  1    wreg      void 
  8792 ;; Registers used:
  8793 ;;		wreg, status,2
  8794 ;; Tracked objects:
  8795 ;;		On entry : F/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8799 ;;      Params:         0       1       0       0       0       0       0       0       0
  8800 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8801 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8802 ;;      Totals:         0       3       0       0       0       0       0       0       0
  8803 ;;Total ram usage:        3 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; Hardware stack levels required when called:   11
  8806 ;; This function calls:
  8807 ;;		Nothing
  8808 ;; This function is called by:
  8809 ;;		_moteJoiningProcess
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           	psect	text34
  8814  004FEC                     __ptext34:
  8815                           	opt stack 0
  8816  004FEC                     _DATAEE_WriteByte:
  8817                           	opt stack 17
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;incstack = 0
  8821                           ;DATAEE_WriteByte@bAdd stored from wreg
  8822  004FEC  6FCF               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  8823                           
  8824                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
  8825  004FEE  0E00               	movlw	0
  8826  004FF0  BEF2               	btfsc	intcon,7,c	;volatile
  8827  004FF2  0E01               	movlw	1
  8828  004FF4  0100               	movlb	0	; () banked
  8829  004FF6  6FD0               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
  8833  004FF8  C0CF  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
  8834                           
  8835                           ; BSR set to: 0
  8836                           ;memory.c: 171: EEDATA = bData;
  8837  004FFC  C0CE  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;memory.c: 172: EECON1bits.EEPGD = 0;
  8841  005000  9EA6               	bcf	4006,7,c	;volatile
  8842                           
  8843                           ; BSR set to: 0
  8844                           ;memory.c: 173: EECON1bits.CFGS = 0;
  8845  005002  9CA6               	bcf	4006,6,c	;volatile
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;memory.c: 174: EECON1bits.WREN = 1;
  8849  005004  84A6               	bsf	4006,2,c	;volatile
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;memory.c: 175: INTCONbits.GIE = 0;
  8853  005006  9EF2               	bcf	intcon,7,c	;volatile
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;memory.c: 176: EECON2 = 0x55;
  8857  005008  0E55               	movlw	85
  8858  00500A  6EA7               	movwf	4007,c	;volatile
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;memory.c: 177: EECON2 = 0xAA;
  8862  00500C  0EAA               	movlw	170
  8863  00500E  6EA7               	movwf	4007,c	;volatile
  8864                           
  8865                           ; BSR set to: 0
  8866                           ;memory.c: 178: EECON1bits.WR = 1;
  8867  005010  82A6               	bsf	4006,1,c	;volatile
  8868  005012                     l1210:
  8869  005012  B2A6               	btfsc	4006,1,c	;volatile
  8870  005014  D7FE               	goto	l1210
  8871                           
  8872                           ;memory.c: 182: }
  8873                           ;memory.c: 184: EECON1bits.WREN = 0;
  8874  005016  94A6               	bcf	4006,2,c	;volatile
  8875                           
  8876                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
  8877  005018  0100               	movlb	0	; () banked
  8878  00501A  B1D0               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
  8879  00501C  D002               	bra	u6495
  8880  00501E  9EF2               	bcf	intcon,7,c	;volatile
  8881  005020  D001               	bra	u6496
  8882  005022                     u6495:
  8883  005022  8EF2               	bsf	intcon,7,c	;volatile
  8884  005024                     u6496:
  8885  005024  0012               	return		;funcret
  8886  005026                     __end_of_DATAEE_WriteByte:
  8887                           	opt stack 0
  8888                           tblptru	equ	0xFF8
  8889                           tblptrh	equ	0xFF7
  8890                           tblptrl	equ	0xFF6
  8891                           tablat	equ	0xFF5
  8892                           intcon	equ	0xFF2
  8893                           postinc0	equ	0xFEE
  8894                           wreg	equ	0xFE8
  8895                           indf2	equ	0xFDF
  8896                           fsr2h	equ	0xFDA
  8897                           fsr2l	equ	0xFD9
  8898                           status	equ	0xFD8
  8899                           
  8900 ;; *************** function _TMRapp_Handler *****************
  8901 ;; Defined at:
  8902 ;;		line 22 in file "../Includes/Drivers/TMRapp.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;		None
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;		None
  8907 ;; Return value:  Size  Location     Type
  8908 ;;                  1    wreg      void 
  8909 ;; Registers used:
  8910 ;;		wreg, status,2, status,0, cstack
  8911 ;; Tracked objects:
  8912 ;;		On entry : F/0
  8913 ;;		On exit  : F/0
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8916 ;;      Params:         0       0       0       0       0       0       0       0       0
  8917 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8919 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8920 ;;Total ram usage:        0 bytes
  8921 ;; Hardware stack levels used:    1
  8922 ;; Hardware stack levels required when called:   12
  8923 ;; This function calls:
  8924 ;;		___lwmod
  8925 ;; This function is called by:
  8926 ;;		_moteHandler
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text35
  8931  00653C                     __ptext35:
  8932                           	opt stack 0
  8933  00653C                     _TMRapp_Handler:
  8934                           	opt stack 17
  8935                           
  8936                           ; BSR set to: 0
  8937                           ;TMRapp.c: 25: timerMsTickCount++;
  8938                           
  8939                           ;incstack = 0
  8940  00653C  4B8F               	infsnz	_timerMsTickCount& (0+255),f,b
  8941  00653E  2B90               	incf	(_timerMsTickCount+1)& (0+255),f,b
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;TMRapp.c: 27: if ( (timerMsTickCount % 10) == 0)
  8945  006540  C08F  F0CE         	movff	_timerMsTickCount,___lwmod@dividend
  8946  006544  C090  F0CF         	movff	_timerMsTickCount+1,___lwmod@dividend+1
  8947  006548  6BD1               	clrf	(___lwmod@divisor+1)& (0+255),b
  8948  00654A  0E0A               	movlw	10
  8949  00654C  6FD0               	movwf	___lwmod@divisor& (0+255),b
  8950  00654E  EC4F  F028         	call	___lwmod	;wreg free
  8951  006552  51CE               	movf	?___lwmod& (0+255),w,b
  8952  006554  11CF               	iorwf	(?___lwmod+1)& (0+255),w,b
  8953  006556  A4D8               	btfss	status,2,c
  8954  006558  0012               	return	
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;TMRapp.c: 28: {
  8958                           ;TMRapp.c: 29: appTimer.mSecTenTick = 1;
  8959  00655A  839B               	bsf	_appTimer& (0+255),1,b
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;TMRapp.c: 30: if ( (timerMsTickCount % 100) == 0)
  8963  00655C  C08F  F0CE         	movff	_timerMsTickCount,___lwmod@dividend
  8964  006560  C090  F0CF         	movff	_timerMsTickCount+1,___lwmod@dividend+1
  8965  006564  6BD1               	clrf	(___lwmod@divisor+1)& (0+255),b
  8966  006566  0E64               	movlw	100
  8967  006568  6FD0               	movwf	___lwmod@divisor& (0+255),b
  8968  00656A  EC4F  F028         	call	___lwmod	;wreg free
  8969  00656E  51CE               	movf	?___lwmod& (0+255),w,b
  8970  006570  11CF               	iorwf	(?___lwmod+1)& (0+255),w,b
  8971  006572  A4D8               	btfss	status,2,c
  8972  006574  0012               	return	
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;TMRapp.c: 31: {
  8976                           ;TMRapp.c: 32: appTimer.mSecHundredTick = 1;
  8977  006576  859B               	bsf	_appTimer& (0+255),2,b
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;TMRapp.c: 33: if ( (timerMsTickCount % 1000) == 0)
  8981  006578  C08F  F0CE         	movff	_timerMsTickCount,___lwmod@dividend
  8982  00657C  C090  F0CF         	movff	_timerMsTickCount+1,___lwmod@dividend+1
  8983  006580  0E03               	movlw	3
  8984  006582  6FD1               	movwf	(___lwmod@divisor+1)& (0+255),b
  8985  006584  0EE8               	movlw	232
  8986  006586  6FD0               	movwf	___lwmod@divisor& (0+255),b
  8987  006588  EC4F  F028         	call	___lwmod	;wreg free
  8988  00658C  51CE               	movf	?___lwmod& (0+255),w,b
  8989  00658E  11CF               	iorwf	(?___lwmod+1)& (0+255),w,b
  8990  006590  A4D8               	btfss	status,2,c
  8991  006592  0012               	return	
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;TMRapp.c: 34: {
  8995                           ;TMRapp.c: 35: appTimer.SecTick = 1;
  8996  006594  879B               	bsf	_appTimer& (0+255),3,b
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;TMRapp.c: 36: if ( (timerMsTickCount % 60000) == 0)
  9000  006596  C08F  F0CE         	movff	_timerMsTickCount,___lwmod@dividend
  9001  00659A  C090  F0CF         	movff	_timerMsTickCount+1,___lwmod@dividend+1
  9002  00659E  0EEA               	movlw	234
  9003  0065A0  6FD1               	movwf	(___lwmod@divisor+1)& (0+255),b
  9004  0065A2  0E60               	movlw	96
  9005  0065A4  6FD0               	movwf	___lwmod@divisor& (0+255),b
  9006  0065A6  EC4F  F028         	call	___lwmod	;wreg free
  9007  0065AA  51CE               	movf	?___lwmod& (0+255),w,b
  9008  0065AC  11CF               	iorwf	(?___lwmod+1)& (0+255),w,b
  9009  0065AE  A4D8               	btfss	status,2,c
  9010  0065B0  0012               	return	
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;TMRapp.c: 37: {
  9014                           ;TMRapp.c: 38: timerMinTickCount++;
  9015  0065B2  4B8D               	infsnz	_timerMinTickCount& (0+255),f,b
  9016  0065B4  2B8E               	incf	(_timerMinTickCount+1)& (0+255),f,b
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;TMRapp.c: 39: appTimer.MinTick = 1;
  9020  0065B6  899B               	bsf	_appTimer& (0+255),4,b
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;TMRapp.c: 40: if ( (timerMinTickCount % 60) == 0)
  9024  0065B8  C08D  F0CE         	movff	_timerMinTickCount,___lwmod@dividend
  9025  0065BC  C08E  F0CF         	movff	_timerMinTickCount+1,___lwmod@dividend+1
  9026  0065C0  6BD1               	clrf	(___lwmod@divisor+1)& (0+255),b
  9027  0065C2  0E3C               	movlw	60
  9028  0065C4  6FD0               	movwf	___lwmod@divisor& (0+255),b
  9029  0065C6  EC4F  F028         	call	___lwmod	;wreg free
  9030  0065CA  51CE               	movf	?___lwmod& (0+255),w,b
  9031  0065CC  11CF               	iorwf	(?___lwmod+1)& (0+255),w,b
  9032  0065CE  A4D8               	btfss	status,2,c
  9033  0065D0  0012               	return	
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;TMRapp.c: 41: {
  9037                           ;TMRapp.c: 42: appTimer.HourTick = 1;
  9038  0065D2  8B9B               	bsf	_appTimer& (0+255),5,b
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;TMRapp.c: 43: if ( (timerMinTickCount % 720) == 0)
  9042  0065D4  C08D  F0CE         	movff	_timerMinTickCount,___lwmod@dividend
  9043  0065D8  C08E  F0CF         	movff	_timerMinTickCount+1,___lwmod@dividend+1
  9044  0065DC  0E02               	movlw	2
  9045  0065DE  6FD1               	movwf	(___lwmod@divisor+1)& (0+255),b
  9046  0065E0  0ED0               	movlw	208
  9047  0065E2  6FD0               	movwf	___lwmod@divisor& (0+255),b
  9048  0065E4  EC4F  F028         	call	___lwmod	;wreg free
  9049  0065E8  51CE               	movf	?___lwmod& (0+255),w,b
  9050  0065EA  11CF               	iorwf	(?___lwmod+1)& (0+255),w,b
  9051  0065EC  A4D8               	btfss	status,2,c
  9052  0065EE  0012               	return	
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;TMRapp.c: 44: {
  9056                           ;TMRapp.c: 45: appTimer.HalfDayTick = 1;
  9057  0065F0  8D9B               	bsf	_appTimer& (0+255),6,b
  9058                           
  9059                           ; BSR set to: 0
  9060                           ;TMRapp.c: 46: if ( (timerMinTickCount % 1440) == 0)
  9061  0065F2  C08D  F0CE         	movff	_timerMinTickCount,___lwmod@dividend
  9062  0065F6  C08E  F0CF         	movff	_timerMinTickCount+1,___lwmod@dividend+1
  9063  0065FA  0E05               	movlw	5
  9064  0065FC  6FD1               	movwf	(___lwmod@divisor+1)& (0+255),b
  9065  0065FE  0EA0               	movlw	160
  9066  006600  6FD0               	movwf	___lwmod@divisor& (0+255),b
  9067  006602  EC4F  F028         	call	___lwmod	;wreg free
  9068  006606  51CE               	movf	?___lwmod& (0+255),w,b
  9069  006608  11CF               	iorwf	(?___lwmod+1)& (0+255),w,b
  9070  00660A  A4D8               	btfss	status,2,c
  9071  00660C  0012               	return	
  9072                           
  9073                           ; BSR set to: 0
  9074                           ;TMRapp.c: 47: {
  9075                           ;TMRapp.c: 48: appTimer.DayTick = 1;
  9076  00660E  8F9B               	bsf	_appTimer& (0+255),7,b
  9077                           
  9078                           ;TMRapp.c: 50: timerMsTickCount = 0;
  9079  006610  6B8F               	clrf	_timerMsTickCount& (0+255),b
  9080  006612  6B90               	clrf	(_timerMsTickCount+1)& (0+255),b
  9081                           
  9082                           ;TMRapp.c: 51: timerMinTickCount = 0;
  9083  006614  6B8D               	clrf	_timerMinTickCount& (0+255),b
  9084  006616  6B8E               	clrf	(_timerMinTickCount+1)& (0+255),b
  9085  006618  0012               	return	
  9086  00661A                     __end_of_TMRapp_Handler:
  9087                           	opt stack 0
  9088                           tblptru	equ	0xFF8
  9089                           tblptrh	equ	0xFF7
  9090                           tblptrl	equ	0xFF6
  9091                           tablat	equ	0xFF5
  9092                           intcon	equ	0xFF2
  9093                           postinc0	equ	0xFEE
  9094                           wreg	equ	0xFE8
  9095                           indf2	equ	0xFDF
  9096                           fsr2h	equ	0xFDA
  9097                           fsr2l	equ	0xFD9
  9098                           status	equ	0xFD8
  9099                           
  9100 ;; *************** function ___lwmod *****************
  9101 ;; Defined at:
  9102 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;  dividend        2    0[BANK0 ] unsigned int 
  9105 ;;  divisor         2    2[BANK0 ] unsigned int 
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;  counter         1    4[BANK0 ] unsigned char 
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  2    0[BANK0 ] unsigned int 
  9110 ;; Registers used:
  9111 ;;		wreg, status,2, status,0
  9112 ;; Tracked objects:
  9113 ;;		On entry : F/0
  9114 ;;		On exit  : F/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9117 ;;      Params:         0       4       0       0       0       0       0       0       0
  9118 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9120 ;;      Totals:         0       5       0       0       0       0       0       0       0
  9121 ;;Total ram usage:        5 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; Hardware stack levels required when called:   11
  9124 ;; This function calls:
  9125 ;;		Nothing
  9126 ;; This function is called by:
  9127 ;;		_moteApp_add16bToDataBuffer
  9128 ;;		_TMRapp_Handler
  9129 ;;		_oled_putUint16
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           	psect	text36
  9134  00509E                     __ptext36:
  9135                           	opt stack 0
  9136  00509E                     ___lwmod:
  9137                           	opt stack 16
  9138                           
  9139                           ; BSR set to: 0
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;incstack = 0
  9143  00509E  51D0               	movf	___lwmod@divisor& (0+255),w,b
  9144  0050A0  11D1               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  9145  0050A2  E017               	bz	l2221
  9146                           
  9147                           ; BSR set to: 0
  9148  0050A4  0E01               	movlw	1
  9149  0050A6  6FD2               	movwf	___lwmod@counter& (0+255),b
  9150  0050A8  D004               	goto	l8325
  9151  0050AA                     l8323:
  9152                           
  9153                           ; BSR set to: 0
  9154  0050AA  90D8               	bcf	status,0,c
  9155  0050AC  37D0               	rlcf	___lwmod@divisor& (0+255),f,b
  9156  0050AE  37D1               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  9157  0050B0  2BD2               	incf	___lwmod@counter& (0+255),f,b
  9158  0050B2                     l8325:
  9159                           
  9160                           ; BSR set to: 0
  9161  0050B2  AFD1               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  9162  0050B4  D7FA               	goto	l8323
  9163  0050B6                     l8327:
  9164                           
  9165                           ; BSR set to: 0
  9166  0050B6  51D0               	movf	___lwmod@divisor& (0+255),w,b
  9167  0050B8  5DCE               	subwf	___lwmod@dividend& (0+255),w,b
  9168  0050BA  51D1               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9169  0050BC  59CF               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  9170  0050BE  E304               	bnc	l8331
  9171                           
  9172                           ; BSR set to: 0
  9173  0050C0  51D0               	movf	___lwmod@divisor& (0+255),w,b
  9174  0050C2  5FCE               	subwf	___lwmod@dividend& (0+255),f,b
  9175  0050C4  51D1               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9176  0050C6  5BCF               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  9177  0050C8                     l8331:
  9178                           
  9179                           ; BSR set to: 0
  9180  0050C8  90D8               	bcf	status,0,c
  9181  0050CA  33D1               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  9182  0050CC  33D0               	rrcf	___lwmod@divisor& (0+255),f,b
  9183                           
  9184                           ; BSR set to: 0
  9185  0050CE  2FD2               	decfsz	___lwmod@counter& (0+255),f,b
  9186  0050D0  D7F2               	goto	l8327
  9187  0050D2                     l2221:
  9188                           
  9189                           ; BSR set to: 0
  9190  0050D2  C0CE  F0CE         	movff	___lwmod@dividend,?___lwmod
  9191  0050D6  C0CF  F0CF         	movff	___lwmod@dividend+1,?___lwmod+1
  9192                           
  9193                           ; BSR set to: 0
  9194  0050DA  0012               	return		;funcret
  9195  0050DC                     __end_of___lwmod:
  9196                           	opt stack 0
  9197                           tblptru	equ	0xFF8
  9198                           tblptrh	equ	0xFF7
  9199                           tblptrl	equ	0xFF6
  9200                           tablat	equ	0xFF5
  9201                           intcon	equ	0xFF2
  9202                           postinc0	equ	0xFEE
  9203                           wreg	equ	0xFE8
  9204                           indf2	equ	0xFDF
  9205                           fsr2h	equ	0xFDA
  9206                           fsr2l	equ	0xFD9
  9207                           status	equ	0xFD8
  9208                           
  9209 ;; *************** function _TMRapp_ClearBitFlags *****************
  9210 ;; Defined at:
  9211 ;;		line 16 in file "../Includes/Drivers/TMRapp.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;		None
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;		None
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  1    wreg      void 
  9218 ;; Registers used:
  9219 ;;		None
  9220 ;; Tracked objects:
  9221 ;;		On entry : F/0
  9222 ;;		On exit  : F/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9225 ;;      Params:         0       0       0       0       0       0       0       0       0
  9226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9228 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9229 ;;Total ram usage:        0 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; Hardware stack levels required when called:   11
  9232 ;; This function calls:
  9233 ;;		Nothing
  9234 ;; This function is called by:
  9235 ;;		_moteHandler
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239                           	psect	text37
  9240  004A34                     __ptext37:
  9241                           	opt stack 0
  9242  004A34                     _TMRapp_ClearBitFlags:
  9243                           	opt stack 18
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;TMRapp.c: 19: appTimer.TicksBitMap = 0x00;
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;incstack = 0
  9250  004A34  6B9B               	clrf	_appTimer& (0+255),b
  9251                           
  9252                           ; BSR set to: 0
  9253  004A36  0012               	return		;funcret
  9254  004A38                     __end_of_TMRapp_ClearBitFlags:
  9255                           	opt stack 0
  9256                           tblptru	equ	0xFF8
  9257                           tblptrh	equ	0xFF7
  9258                           tblptrl	equ	0xFF6
  9259                           tablat	equ	0xFF5
  9260                           intcon	equ	0xFF2
  9261                           postinc0	equ	0xFEE
  9262                           wreg	equ	0xFE8
  9263                           indf2	equ	0xFDF
  9264                           fsr2h	equ	0xFDA
  9265                           fsr2l	equ	0xFD9
  9266                           status	equ	0xFD8
  9267                           
  9268 ;; *************** function _MOTEapp_TimerBasedTask *****************
  9269 ;; Defined at:
  9270 ;;		line 776 in file "../Includes/Board/MOTEapp.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;  timerTask       1    wreg     struct .
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;  timerTask       1    0[BANK0 ] struct .
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  1    wreg      void 
  9277 ;; Registers used:
  9278 ;;		wreg, status,2, status,0
  9279 ;; Tracked objects:
  9280 ;;		On entry : F/0
  9281 ;;		On exit  : F/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9284 ;;      Params:         0       0       0       0       0       0       0       0       0
  9285 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9287 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9288 ;;Total ram usage:        1 bytes
  9289 ;; Hardware stack levels used:    1
  9290 ;; Hardware stack levels required when called:   11
  9291 ;; This function calls:
  9292 ;;		Nothing
  9293 ;; This function is called by:
  9294 ;;		_moteHandler
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           	psect	text38
  9299  004A9A                     __ptext38:
  9300                           	opt stack 0
  9301  004A9A                     _MOTEapp_TimerBasedTask:
  9302                           	opt stack 18
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;incstack = 0
  9306                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
  9307  004A9A  6FCE               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
  9308                           
  9309                           ;MOTEapp.c: 781: if (timerTask.mSecTenTick)
  9310  004A9C  0100               	movlb	0	; () banked
  9311  004A9E  B3CE               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;MOTEapp.c: 782: {
  9315                           ;MOTEapp.c: 784: m10SecTicker++;
  9316  004AA0  2B9F               	incf	_m10SecTicker& (0+255),f,b
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;MOTEapp.c: 790: }
  9320                           ;MOTEapp.c: 791: if (timerTask.SecTick)
  9321  004AA2  B7CE               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
  9322                           
  9323                           ; BSR set to: 0
  9324                           ;MOTEapp.c: 792: {
  9325                           ;MOTEapp.c: 794: secTicker++;
  9326  004AA4  2BA3               	incf	_secTicker& (0+255),f,b
  9327  004AA6  0012               	return	
  9328  004AA8                     __end_of_MOTEapp_TimerBasedTask:
  9329                           	opt stack 0
  9330                           tblptru	equ	0xFF8
  9331                           tblptrh	equ	0xFF7
  9332                           tblptrl	equ	0xFF6
  9333                           tablat	equ	0xFF5
  9334                           intcon	equ	0xFF2
  9335                           postinc0	equ	0xFEE
  9336                           wreg	equ	0xFE8
  9337                           indf2	equ	0xFDF
  9338                           fsr2h	equ	0xFDA
  9339                           fsr2l	equ	0xFD9
  9340                           status	equ	0xFD8
  9341                           
  9342 ;; *************** function _USBapp_handlerState *****************
  9343 ;; Defined at:
  9344 ;;		line 63 in file "../Includes/Board/USBapp.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  state           1    wreg     enum E6263
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;  state           1    0[BANK0 ] enum E6263
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  1    wreg      void 
  9351 ;; Registers used:
  9352 ;;		wreg
  9353 ;; Tracked objects:
  9354 ;;		On entry : F/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9358 ;;      Params:         0       0       0       0       0       0       0       0       0
  9359 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9361 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9362 ;;Total ram usage:        1 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; Hardware stack levels required when called:   11
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_main
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           	psect	text39
  9373  004A4C                     __ptext39:
  9374                           	opt stack 0
  9375  004A4C                     _USBapp_handlerState:
  9376                           	opt stack 19
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;incstack = 0
  9380                           ;USBapp_handlerState@state stored from wreg
  9381  004A4C  6FCE               	movwf	USBapp_handlerState@state& (0+255),b
  9382                           
  9383                           ;USBapp.c: 65: usbState = state;
  9384  004A4E  C0CE  F0A5         	movff	USBapp_handlerState@state,_usbState
  9385  004A52  0012               	return		;funcret
  9386  004A54                     __end_of_USBapp_handlerState:
  9387                           	opt stack 0
  9388                           tblptru	equ	0xFF8
  9389                           tblptrh	equ	0xFF7
  9390                           tblptrl	equ	0xFF6
  9391                           tablat	equ	0xFF5
  9392                           intcon	equ	0xFF2
  9393                           postinc0	equ	0xFEE
  9394                           wreg	equ	0xFE8
  9395                           indf2	equ	0xFDF
  9396                           fsr2h	equ	0xFDA
  9397                           fsr2l	equ	0xFD9
  9398                           status	equ	0xFD8
  9399                           
  9400 ;; *************** function _USBapp_Handler *****************
  9401 ;; Defined at:
  9402 ;;		line 68 in file "../Includes/Board/USBapp.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;		None
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;		None
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  1    wreg      void 
  9409 ;; Registers used:
  9410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9416 ;;      Params:         0       0       0       0       0       0       0       0       0
  9417 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9419 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9420 ;;Total ram usage:        0 bytes
  9421 ;; Hardware stack levels used:    1
  9422 ;; Hardware stack levels required when called:   17
  9423 ;; This function calls:
  9424 ;;		_USBapp_DeviceCdcEmulatorHandler
  9425 ;;		_oled_clear
  9426 ;;		_oled_putString
  9427 ;; This function is called by:
  9428 ;;		_main
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           	psect	text40
  9433  00578E                     __ptext40:
  9434                           	opt stack 0
  9435  00578E                     _USBapp_Handler:
  9436                           	opt stack 13
  9437                           
  9438                           ;USBapp.c: 72: {
  9439                           ;USBapp.c: 73: switch(usbState)
  9440                           
  9441                           ;incstack = 0
  9442                           ;USBapp.c: 71: do
  9443  00578E  D02E               	goto	l9405
  9444  005790                     l671:
  9445                           
  9446                           ; BSR set to: 0
  9447  005790  D7FF               	goto	l671
  9448  005792                     l9385:
  9449                           
  9450                           ; BSR set to: 0
  9451                           ;USBapp.c: 80: oled_clear();
  9452  005792  ECB3  F025         	call	_oled_clear	;wreg free
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;USBapp.c: 81: oled_putString("CDC Mode",1,0);
  9456  005796  0E36               	movlw	low STR_98
  9457  005798  6FDB               	movwf	oled_putString@string& (0+255),b
  9458  00579A  0E7F               	movlw	high STR_98
  9459  00579C  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  9460  00579E  0E01               	movlw	1
  9461  0057A0  6FDD               	movwf	oled_putString@station_dot& (0+255),b
  9462  0057A2  6BDE               	clrf	oled_putString@start_page& (0+255),b
  9463  0057A4  ECB4  F02A         	call	_oled_putString	;wreg free
  9464                           
  9465                           ;USBapp.c: 82: oled_putString("Command",2,1);
  9466  0057A8  0EA2               	movlw	low STR_99
  9467  0057AA  0100               	movlb	0	; () banked
  9468  0057AC  6FDB               	movwf	oled_putString@string& (0+255),b
  9469  0057AE  0E7F               	movlw	high STR_99
  9470  0057B0  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  9471  0057B2  0E02               	movlw	2
  9472  0057B4  6FDD               	movwf	oled_putString@station_dot& (0+255),b
  9473  0057B6  0E01               	movlw	1
  9474  0057B8  6FDE               	movwf	oled_putString@start_page& (0+255),b
  9475  0057BA  ECB4  F02A         	call	_oled_putString	;wreg free
  9476                           
  9477                           ;USBapp.c: 83: oled_putString("USB Handler",0,2);
  9478  0057BE  0EA7               	movlw	low STR_100
  9479  0057C0  0100               	movlb	0	; () banked
  9480  0057C2  6FDB               	movwf	oled_putString@string& (0+255),b
  9481  0057C4  0E7E               	movlw	high STR_100
  9482  0057C6  6FDC               	movwf	(oled_putString@string+1)& (0+255),b
  9483  0057C8  6BDD               	clrf	oled_putString@station_dot& (0+255),b
  9484  0057CA  0E02               	movlw	2
  9485  0057CC  6FDE               	movwf	oled_putString@start_page& (0+255),b
  9486  0057CE  ECB4  F02A         	call	_oled_putString	;wreg free
  9487                           
  9488                           ;USBapp.c: 85: usbState = USB_RUNNING;
  9489  0057D2  0E01               	movlw	1
  9490  0057D4  0100               	movlb	0	; () banked
  9491  0057D6  D005               	goto	L16
  9492  0057D8                     l9395:
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;USBapp.c: 89: if( USBDeviceState < CONFIGURED_STATE )
  9496  0057D8  0E20               	movlw	32
  9497  0057DA  6197               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  9498  0057DC  D001               	goto	l9399
  9499  0057DE  D00E               	goto	l678
  9500  0057E0                     l9399:
  9501                           
  9502                           ; BSR set to: 0
  9503                           ;USBapp.c: 93: }
  9504                           ;USBapp.c: 94: usbState = USB_CDC;
  9505  0057E0  0E02               	movlw	2
  9506  0057E2                     L16:
  9507  0057E2  6FA5               	movwf	_usbState& (0+255),b
  9508                           
  9509                           ;USBapp.c: 95: break;
  9510  0057E4  D00B               	goto	l678
  9511  0057E6                     l9401:
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;USBapp.c: 98: USBapp_DeviceCdcEmulatorHandler();
  9515  0057E6  EC7D  F02F         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
  9516                           
  9517                           ;USBapp.c: 101: break;
  9518  0057EA  D008               	goto	l678
  9519  0057EC                     l9405:
  9520  0057EC  0100               	movlb	0	; () banked
  9521  0057EE  51A5               	movf	_usbState& (0+255),w,b
  9522                           
  9523                           ; Switch size 1, requested type "speed"
  9524                           ; Number of cases is 3, Range of values is 0 to 2
  9525                           ; switch strategies available:
  9526                           ; Name         Instructions Cycles
  9527                           ; simple_byte           10     6 (average)
  9528                           ;	Chosen strategy is simple_byte
  9529  0057F0  E0D0               	bz	l9385
  9530  0057F2  0A01               	xorlw	1	; case 1
  9531  0057F4  E0F1               	bz	l9395
  9532  0057F6  0A03               	xorlw	3	; case 2
  9533  0057F8  E0F6               	bz	l9401
  9534  0057FA  D7CA               	goto	l671
  9535  0057FC                     l678:
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;USBapp.c: 103: }while(PORTAbits.RA0);
  9539  0057FC  B080               	btfsc	3968,0,c	;volatile
  9540  0057FE  D7F6               	goto	l9405
  9541                           
  9542                           ; BSR set to: 0
  9543                           ;USBapp.c: 104: __nop();
  9544  005800  F000               	nop	
  9545  005802  0012               	return		;funcret
  9546  005804                     __end_of_USBapp_Handler:
  9547                           	opt stack 0
  9548                           tblptru	equ	0xFF8
  9549                           tblptrh	equ	0xFF7
  9550                           tblptrl	equ	0xFF6
  9551                           tablat	equ	0xFF5
  9552                           intcon	equ	0xFF2
  9553                           postinc0	equ	0xFEE
  9554                           wreg	equ	0xFE8
  9555                           indf2	equ	0xFDF
  9556                           fsr2h	equ	0xFDA
  9557                           fsr2l	equ	0xFD9
  9558                           status	equ	0xFD8
  9559                           
  9560 ;; *************** function _oled_putString *****************
  9561 ;; Defined at:
  9562 ;;		line 273 in file "../Includes/Drivers/SSD1306oLED.c"
  9563 ;; Parameters:    Size  Location     Type
  9564 ;;  string          2   13[BANK0 ] PTR const unsigned char 
  9565 ;;		 -> oled_putUint16@numData(6), oled_putUint8@numData(6), STR_100(12), STR_99(8), 
  9566 ;;		 -> STR_98(9), STR_80(2), STR_79(16), STR_78(13), 
  9567 ;;		 -> STR_77(12), STR_76(17), STR_75(9), STR_74(1), 
  9568 ;;		 -> STR_70(10), STR_67(7), STR_64(9), STR_61(8), 
  9569 ;;		 -> STR_58(7), STR_55(8), STR_52(10), STR_49(9), 
  9570 ;;		 -> STR_46(10), STR_43(7), STR_40(8), STR_37(8), 
  9571 ;;		 -> STR_34(9), STR_33(9), STR_32(8), STR_29(8), 
  9572 ;;		 -> STR_28(17), STR_27(17), STR_26(17), STR_25(17), 
  9573 ;;		 -> STR_24(9), STR_23(10), STR_20(9), STR_19(8), 
  9574 ;;		 -> STR_18(8), STR_17(9), STR_16(10), STR_15(11), 
  9575 ;;		 -> STR_14(13), STR_13(13), STR_12(13), STR_11(12), 
  9576 ;;		 -> STR_10(13), STR_9(9), STR_8(12), STR_7(16), 
  9577 ;;		 -> STR_6(2), STR_5(2), STR_4(9), STR_3(15), 
  9578 ;;		 -> STR_2(15), STR_1(15), 
  9579 ;;  station_dot     1   15[BANK0 ] unsigned char 
  9580 ;;  start_page      1   16[BANK0 ] unsigned char 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  index           1   17[BANK0 ] unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  1    wreg      void 
  9585 ;; Registers used:
  9586 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9587 ;; Tracked objects:
  9588 ;;		On entry : F/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9592 ;;      Params:         0       4       0       0       0       0       0       0       0
  9593 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9594 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9595 ;;      Totals:         0       5       0       0       0       0       0       0       0
  9596 ;;Total ram usage:        5 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:   15
  9599 ;; This function calls:
  9600 ;;		_oled_putChar
  9601 ;; This function is called by:
  9602 ;;		_main
  9603 ;;		_moteHandler
  9604 ;;		_cw_beep
  9605 ;;		_moteJoiningProcess
  9606 ;;		_moteRunningProcess
  9607 ;;		_USBapp_Handler
  9608 ;;		_oled_putUint8
  9609 ;;		_oled_putUint16
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           	psect	text41
  9614  005568                     __ptext41:
  9615                           	opt stack 0
  9616  005568                     _oled_putString:
  9617                           	opt stack 15
  9618                           
  9619                           ; BSR set to: 0
  9620                           ;SSD1306oLED.c: 275: uint8_t index;
  9621                           ;SSD1306oLED.c: 276: for(index = station_dot; index < 16; index++)
  9622                           
  9623                           ;incstack = 0
  9624  005568  C0DD  F0DF         	movff	oled_putString@station_dot,oled_putString@index
  9625  00556C                     l8145:
  9626                           
  9627                           ; BSR set to: 0
  9628  00556C  0E0F               	movlw	15
  9629  00556E  65DF               	cpfsgt	oled_putString@index& (0+255),b
  9630  005570  D001               	goto	l8149
  9631  005572  0C0F               	retlw	15
  9632  005574                     l8149:
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;SSD1306oLED.c: 277: {
  9636                           ;SSD1306oLED.c: 278: if (*string != 0)
  9637  005574  C0DB  FFF6         	movff	oled_putString@string,tblptrl
  9638  005578  C0DC  FFF7         	movff	oled_putString@string+1,tblptrh
  9639  00557C  6AF8               	clrf	tblptru,c
  9640  00557E  0E07               	movlw	(high __ramtop+-1)
  9641  005580  64F7               	cpfsgt	tblptrh,c
  9642  005582  D003               	bra	u6197
  9643  005584  0008               	tblrd		*
  9644  005586  50F5               	movf	tablat,w,c
  9645  005588  D005               	bra	u6190
  9646  00558A                     u6197:
  9647  00558A  CFF6 FFE1          	movff	tblptrl,fsr1l
  9648  00558E  CFF7 FFE2          	movff	tblptrh,fsr1h
  9649  005592  50E7               	movf	indf1,w,c
  9650  005594                     u6190:
  9651  005594  0900               	iorlw	0
  9652  005596  B4D8               	btfsc	status,2,c
  9653  005598  0012               	return	
  9654                           
  9655                           ;SSD1306oLED.c: 279: {
  9656                           ;SSD1306oLED.c: 280: oled_putChar(*string, index, start_page);
  9657  00559A  C0DF  F0D1         	movff	oled_putString@index,oled_putChar@station_dot
  9658  00559E  C0DE  F0D2         	movff	oled_putString@start_page,oled_putChar@start_page
  9659  0055A2  C0DB  FFF6         	movff	oled_putString@string,tblptrl
  9660  0055A6  C0DC  FFF7         	movff	oled_putString@string+1,tblptrh
  9661  0055AA  6AF8               	clrf	tblptru,c
  9662  0055AC  0E07               	movlw	(high __ramtop+-1)
  9663  0055AE  64F7               	cpfsgt	tblptrh,c
  9664  0055B0  D003               	bra	u6217
  9665  0055B2  0008               	tblrd		*
  9666  0055B4  50F5               	movf	tablat,w,c
  9667  0055B6  D005               	bra	u6210
  9668  0055B8                     u6217:
  9669  0055B8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9670  0055BC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9671  0055C0  50E7               	movf	indf1,w,c
  9672  0055C2                     u6210:
  9673  0055C2  EC8C  F02B         	call	_oled_putChar
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;SSD1306oLED.c: 281: *string++;
  9677  0055C6  4BDB               	infsnz	oled_putString@string& (0+255),f,b
  9678  0055C8  2BDC               	incf	(oled_putString@string+1)& (0+255),f,b
  9679                           
  9680                           ; BSR set to: 0
  9681                           
  9682                           ;SSD1306oLED.c: 282: }
  9683  0055CA  2BDF               	incf	oled_putString@index& (0+255),f,b
  9684  0055CC  D7CF               	goto	l8145
  9685  0055CE                     __end_of_oled_putString:
  9686                           	opt stack 0
  9687                           tblptru	equ	0xFF8
  9688                           tblptrh	equ	0xFF7
  9689                           tblptrl	equ	0xFF6
  9690                           tablat	equ	0xFF5
  9691                           intcon	equ	0xFF2
  9692                           postinc0	equ	0xFEE
  9693                           wreg	equ	0xFE8
  9694                           indf1	equ	0xFE7
  9695                           fsr1h	equ	0xFE2
  9696                           fsr1l	equ	0xFE1
  9697                           indf2	equ	0xFDF
  9698                           fsr2h	equ	0xFDA
  9699                           fsr2l	equ	0xFD9
  9700                           status	equ	0xFD8
  9701                           
  9702 ;; *************** function _oled_clear *****************
  9703 ;; Defined at:
  9704 ;;		line 290 in file "../Includes/Drivers/SSD1306oLED.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;		None
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;		None
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      void 
  9711 ;; Registers used:
  9712 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : F/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9718 ;;      Params:         0       0       0       0       0       0       0       0       0
  9719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9721 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9722 ;;Total ram usage:        0 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:   16
  9725 ;; This function calls:
  9726 ;;		_oled_clearRow
  9727 ;; This function is called by:
  9728 ;;		_main
  9729 ;;		_moteHandler
  9730 ;;		_cw_beep
  9731 ;;		_moteJoiningProcess
  9732 ;;		_moteRunningProcess
  9733 ;;		_USBapp_Handler
  9734 ;;		_oled_init
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text42
  9739  004B66                     __ptext42:
  9740                           	opt stack 0
  9741  004B66                     _oled_clear:
  9742                           	opt stack 13
  9743                           
  9744                           ;SSD1306oLED.c: 292: oled_clearRow(0);
  9745                           
  9746                           ;incstack = 0
  9747  004B66  0E00               	movlw	0
  9748  004B68  ECF9  F025         	call	_oled_clearRow
  9749                           
  9750                           ;SSD1306oLED.c: 293: oled_clearRow(1);
  9751  004B6C  0E01               	movlw	1
  9752  004B6E  ECF9  F025         	call	_oled_clearRow
  9753                           
  9754                           ;SSD1306oLED.c: 294: oled_clearRow(2);
  9755  004B72  0E02               	movlw	2
  9756  004B74  ECF9  F025         	call	_oled_clearRow
  9757                           
  9758                           ;SSD1306oLED.c: 295: oled_clearRow(3);
  9759  004B78  0E03               	movlw	3
  9760  004B7A  EFF9  F025         	goto	_oled_clearRow
  9761  004B7E                     __end_of_oled_clear:
  9762                           	opt stack 0
  9763                           tblptru	equ	0xFF8
  9764                           tblptrh	equ	0xFF7
  9765                           tblptrl	equ	0xFF6
  9766                           tablat	equ	0xFF5
  9767                           intcon	equ	0xFF2
  9768                           postinc0	equ	0xFEE
  9769                           wreg	equ	0xFE8
  9770                           indf1	equ	0xFE7
  9771                           fsr1h	equ	0xFE2
  9772                           fsr1l	equ	0xFE1
  9773                           indf2	equ	0xFDF
  9774                           fsr2h	equ	0xFDA
  9775                           fsr2l	equ	0xFD9
  9776                           status	equ	0xFD8
  9777                           
  9778 ;; *************** function _oled_clearRow *****************
  9779 ;; Defined at:
  9780 ;;		line 298 in file "../Includes/Drivers/SSD1306oLED.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;  page            1    wreg     unsigned char 
  9783 ;; Auto vars:     Size  Location     Type
  9784 ;;  page            1   13[BANK0 ] unsigned char 
  9785 ;;  index           1   14[BANK0 ] unsigned char 
  9786 ;; Return value:  Size  Location     Type
  9787 ;;                  1    wreg      void 
  9788 ;; Registers used:
  9789 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : F/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9795 ;;      Params:         0       0       0       0       0       0       0       0       0
  9796 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9797 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9798 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9799 ;;Total ram usage:        2 bytes
  9800 ;; Hardware stack levels used:    1
  9801 ;; Hardware stack levels required when called:   15
  9802 ;; This function calls:
  9803 ;;		_oled_putChar
  9804 ;; This function is called by:
  9805 ;;		_oled_clear
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809                           	psect	text43
  9810  004BF2                     __ptext43:
  9811                           	opt stack 0
  9812  004BF2                     _oled_clearRow:
  9813                           	opt stack 13
  9814                           
  9815                           ; BSR set to: 0
  9816                           ;incstack = 0
  9817                           ;oled_clearRow@page stored from wreg
  9818  004BF2  0100               	movlb	0	; () banked
  9819  004BF4  6FDB               	movwf	oled_clearRow@page& (0+255),b
  9820                           
  9821                           ;SSD1306oLED.c: 300: uint8_t index;
  9822                           ;SSD1306oLED.c: 302: for(index = 0; index < 16; index++)
  9823  004BF6  6BDC               	clrf	oled_clearRow@index& (0+255),b
  9824  004BF8                     l7989:
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;SSD1306oLED.c: 303: {
  9828                           ;SSD1306oLED.c: 304: oled_putChar( ' ', index, page);
  9829  004BF8  C0DC  F0D1         	movff	oled_clearRow@index,oled_putChar@station_dot
  9830  004BFC  C0DB  F0D2         	movff	oled_clearRow@page,oled_putChar@start_page
  9831  004C00  0E20               	movlw	32
  9832  004C02  EC8C  F02B         	call	_oled_putChar
  9833                           
  9834                           ; BSR set to: 0
  9835  004C06  2BDC               	incf	oled_clearRow@index& (0+255),f,b
  9836                           
  9837                           ; BSR set to: 0
  9838  004C08  0E0F               	movlw	15
  9839  004C0A  65DC               	cpfsgt	oled_clearRow@index& (0+255),b
  9840  004C0C  D7F5               	goto	l7989
  9841  004C0E  0C0F               	retlw	15
  9842  004C10                     __end_of_oled_clearRow:
  9843                           	opt stack 0
  9844                           tblptru	equ	0xFF8
  9845                           tblptrh	equ	0xFF7
  9846                           tblptrl	equ	0xFF6
  9847                           tablat	equ	0xFF5
  9848                           intcon	equ	0xFF2
  9849                           postinc0	equ	0xFEE
  9850                           wreg	equ	0xFE8
  9851                           indf1	equ	0xFE7
  9852                           fsr1h	equ	0xFE2
  9853                           fsr1l	equ	0xFE1
  9854                           indf2	equ	0xFDF
  9855                           fsr2h	equ	0xFDA
  9856                           fsr2l	equ	0xFD9
  9857                           status	equ	0xFD8
  9858                           
  9859 ;; *************** function _oled_putChar *****************
  9860 ;; Defined at:
  9861 ;;		line 258 in file "../Includes/Drivers/SSD1306oLED.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  k               1    wreg     unsigned char 
  9864 ;;  station_dot     1    3[BANK0 ] unsigned char 
  9865 ;;  start_page      1    4[BANK0 ] unsigned char 
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;  k               1   11[BANK0 ] unsigned char 
  9868 ;;  index           1   12[BANK0 ] unsigned char 
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1    wreg      void 
  9871 ;; Registers used:
  9872 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9873 ;; Tracked objects:
  9874 ;;		On entry : 0/0
  9875 ;;		On exit  : F/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9878 ;;      Params:         0       2       0       0       0       0       0       0       0
  9879 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9880 ;;      Temps:          0       6       0       0       0       0       0       0       0
  9881 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9882 ;;Total ram usage:       10 bytes
  9883 ;; Hardware stack levels used:    1
  9884 ;; Hardware stack levels required when called:   14
  9885 ;; This function calls:
  9886 ;;		_Set_Column_Address
  9887 ;;		_Set_Page_Address
  9888 ;;		_oled_writeData
  9889 ;; This function is called by:
  9890 ;;		_oled_putString
  9891 ;;		_oled_clearRow
  9892 ;; This function uses a non-reentrant model
  9893 ;;
  9894                           
  9895                           	psect	text44
  9896  005718                     __ptext44:
  9897                           	opt stack 0
  9898  005718                     _oled_putChar:
  9899                           	opt stack 15
  9900                           
  9901                           ; BSR set to: 0
  9902                           ;incstack = 0
  9903                           ;oled_putChar@k stored from wreg
  9904  005718  0100               	movlb	0	; () banked
  9905  00571A  6FD9               	movwf	oled_putChar@k& (0+255),b
  9906                           
  9907                           ;SSD1306oLED.c: 260: uint8_t index;
  9908                           ;SSD1306oLED.c: 262: Set_Page_Address(start_page);
  9909  00571C  51D2               	movf	oled_putChar@start_page& (0+255),w,b
  9910  00571E  EC89  F025         	call	_Set_Page_Address
  9911                           
  9912                           ;SSD1306oLED.c: 263: Set_Column_Address(0x00 + station_dot * 8);
  9913  005722  0100               	movlb	0	; () banked
  9914  005724  51D1               	movf	oled_putChar@station_dot& (0+255),w,b
  9915  005726  0D08               	mullw	8
  9916  005728  50F3               	movf	prodl,w,c
  9917  00572A  ECEA  F025         	call	_Set_Column_Address
  9918                           
  9919                           ;SSD1306oLED.c: 265: LATBbits.LATB4 = 0;
  9920  00572E  988A               	bcf	3978,4,c	;volatile
  9921                           
  9922                           ;SSD1306oLED.c: 266: for(index = 0; index < 8; index++)
  9923  005730  0100               	movlb	0	; () banked
  9924  005732  6BDA               	clrf	oled_putChar@index& (0+255),b
  9925  005734                     l7937:
  9926                           
  9927                           ; BSR set to: 0
  9928                           ;SSD1306oLED.c: 267: {
  9929                           ;SSD1306oLED.c: 268: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
  9930  005734  6BD3               	clrf	??_oled_putChar& (0+255),b
  9931  005736  69D4               	setf	(??_oled_putChar+1)& (0+255),b
  9932  005738  51D9               	movf	oled_putChar@k& (0+255),w,b
  9933  00573A  6FD5               	movwf	(??_oled_putChar+2)& (0+255),b
  9934  00573C  6BD6               	clrf	(??_oled_putChar+3)& (0+255),b
  9935  00573E  90D8               	bcf	status,0,c
  9936  005740  37D5               	rlcf	(??_oled_putChar+2)& (0+255),f,b
  9937  005742  37D6               	rlcf	(??_oled_putChar+3)& (0+255),f,b
  9938  005744  90D8               	bcf	status,0,c
  9939  005746  37D5               	rlcf	(??_oled_putChar+2)& (0+255),f,b
  9940  005748  37D6               	rlcf	(??_oled_putChar+3)& (0+255),f,b
  9941  00574A  90D8               	bcf	status,0,c
  9942  00574C  37D5               	rlcf	(??_oled_putChar+2)& (0+255),f,b
  9943  00574E  37D6               	rlcf	(??_oled_putChar+3)& (0+255),f,b
  9944  005750  C0F5  F0D7         	movff	_selectedFont,??_oled_putChar+4
  9945  005754  C0F6  F0D8         	movff	_selectedFont+1,??_oled_putChar+5
  9946  005758  51D5               	movf	(??_oled_putChar+2)& (0+255),w,b
  9947  00575A  27D7               	addwf	(??_oled_putChar+4)& (0+255),f,b
  9948  00575C  51D6               	movf	(??_oled_putChar+3)& (0+255),w,b
  9949  00575E  23D8               	addwfc	(??_oled_putChar+5)& (0+255),f,b
  9950  005760  51DA               	movf	oled_putChar@index& (0+255),w,b
  9951  005762  27D7               	addwf	(??_oled_putChar+4)& (0+255),f,b
  9952  005764  0E00               	movlw	0
  9953  005766  23D8               	addwfc	(??_oled_putChar+5)& (0+255),f,b
  9954  005768  51D3               	movf	??_oled_putChar& (0+255),w,b
  9955  00576A  27D7               	addwf	(??_oled_putChar+4)& (0+255),f,b
  9956  00576C  51D4               	movf	(??_oled_putChar+1)& (0+255),w,b
  9957  00576E  23D8               	addwfc	(??_oled_putChar+5)& (0+255),f,b
  9958  005770  C0D7  FFF6         	movff	??_oled_putChar+4,tblptrl
  9959  005774  C0D8  FFF7         	movff	??_oled_putChar+5,tblptrh
  9960  005778                     	if	0	;tblptru may be non-zero
  9961  005778                     	endif
  9962  005778                     	if	0	;tblptru may be non-zero
  9963  005778                     	endif
  9964  005778  0008               	tblrd		*
  9965  00577A  50F5               	movf	tablat,w,c
  9966  00577C  EC3A  F025         	call	_oled_writeData
  9967  005780  0100               	movlb	0	; () banked
  9968  005782  2BDA               	incf	oled_putChar@index& (0+255),f,b
  9969                           
  9970                           ; BSR set to: 0
  9971  005784  0E07               	movlw	7
  9972  005786  65DA               	cpfsgt	oled_putChar@index& (0+255),b
  9973  005788  D7D5               	goto	l7937
  9974                           
  9975                           ; BSR set to: 0
  9976                           ;SSD1306oLED.c: 269: }
  9977                           ;SSD1306oLED.c: 270: LATBbits.LATB4 = 1;
  9978  00578A  888A               	bsf	3978,4,c	;volatile
  9979                           
  9980                           ; BSR set to: 0
  9981  00578C  0C07               	retlw	7	;funcret
  9982  00578E                     __end_of_oled_putChar:
  9983                           	opt stack 0
  9984                           tblptru	equ	0xFF8
  9985                           tblptrh	equ	0xFF7
  9986                           tblptrl	equ	0xFF6
  9987                           tablat	equ	0xFF5
  9988                           prodl	equ	0xFF3
  9989                           intcon	equ	0xFF2
  9990                           postinc0	equ	0xFEE
  9991                           wreg	equ	0xFE8
  9992                           indf1	equ	0xFE7
  9993                           fsr1h	equ	0xFE2
  9994                           fsr1l	equ	0xFE1
  9995                           indf2	equ	0xFDF
  9996                           fsr2h	equ	0xFDA
  9997                           fsr2l	equ	0xFD9
  9998                           status	equ	0xFD8
  9999                           
 10000 ;; *************** function _oled_writeData *****************
 10001 ;; Defined at:
 10002 ;;		line 407 in file "../Includes/Drivers/SSD1306oLED.c"
 10003 ;; Parameters:    Size  Location     Type
 10004 ;;  data            1    wreg     unsigned char 
 10005 ;; Auto vars:     Size  Location     Type
 10006 ;;  data            1    1[BANK0 ] unsigned char 
 10007 ;; Return value:  Size  Location     Type
 10008 ;;                  1    wreg      void 
 10009 ;; Registers used:
 10010 ;;		wreg, status,2, cstack
 10011 ;; Tracked objects:
 10012 ;;		On entry : F/0
 10013 ;;		On exit  : 0/0
 10014 ;;		Unchanged: 0/0
 10015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10016 ;;      Params:         0       0       0       0       0       0       0       0       0
 10017 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10018 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10019 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10020 ;;Total ram usage:        1 bytes
 10021 ;; Hardware stack levels used:    1
 10022 ;; Hardware stack levels required when called:   12
 10023 ;; This function calls:
 10024 ;;		_SPI_Exchange8bit
 10025 ;; This function is called by:
 10026 ;;		_oled_putChar
 10027 ;; This function uses a non-reentrant model
 10028 ;;
 10029                           
 10030                           	psect	text45
 10031  004A74                     __ptext45:
 10032                           	opt stack 0
 10033  004A74                     _oled_writeData:
 10034                           	opt stack 16
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;incstack = 0
 10038                           ;oled_writeData@data stored from wreg
 10039  004A74  6FCF               	movwf	oled_writeData@data& (0+255),b
 10040                           
 10041                           ;SSD1306oLED.c: 409: LATBbits.LATB5 = 1;
 10042  004A76  8A8A               	bsf	3978,5,c	;volatile
 10043                           
 10044                           ;SSD1306oLED.c: 410: SPI_Exchange8bit(data);
 10045  004A78  0100               	movlb	0	; () banked
 10046  004A7A  51CF               	movf	oled_writeData@data& (0+255),w,b
 10047  004A7C  EF5C  F025         	goto	_SPI_Exchange8bit
 10048  004A80                     __end_of_oled_writeData:
 10049                           	opt stack 0
 10050                           tblptru	equ	0xFF8
 10051                           tblptrh	equ	0xFF7
 10052                           tblptrl	equ	0xFF6
 10053                           tablat	equ	0xFF5
 10054                           prodl	equ	0xFF3
 10055                           intcon	equ	0xFF2
 10056                           postinc0	equ	0xFEE
 10057                           wreg	equ	0xFE8
 10058                           indf1	equ	0xFE7
 10059                           fsr1h	equ	0xFE2
 10060                           fsr1l	equ	0xFE1
 10061                           indf2	equ	0xFDF
 10062                           fsr2h	equ	0xFDA
 10063                           fsr2l	equ	0xFD9
 10064                           status	equ	0xFD8
 10065                           
 10066 ;; *************** function _Set_Page_Address *****************
 10067 ;; Defined at:
 10068 ;;		line 201 in file "../Includes/Drivers/SSD1306oLED.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;  address         1    wreg     unsigned char 
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;  address         1    2[BANK0 ] unsigned char 
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  1    wreg      void 
 10075 ;; Registers used:
 10076 ;;		wreg, status,2, status,0, cstack
 10077 ;; Tracked objects:
 10078 ;;		On entry : F/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10082 ;;      Params:         0       0       0       0       0       0       0       0       0
 10083 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10084 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10085 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10086 ;;Total ram usage:        1 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; Hardware stack levels required when called:   13
 10089 ;; This function calls:
 10090 ;;		_oled_writeCommand
 10091 ;; This function is called by:
 10092 ;;		_oled_putChar
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096                           	psect	text46
 10097  004B12                     __ptext46:
 10098                           	opt stack 0
 10099  004B12                     _Set_Page_Address:
 10100                           	opt stack 15
 10101                           
 10102                           ;incstack = 0
 10103                           ;Set_Page_Address@address stored from wreg
 10104  004B12  6FD0               	movwf	Set_Page_Address@address& (0+255),b
 10105                           
 10106                           ;SSD1306oLED.c: 203: address = 0xB0 | address;
 10107  004B14  0EB0               	movlw	176
 10108  004B16  0100               	movlb	0	; () banked
 10109  004B18  13D0               	iorwf	Set_Page_Address@address& (0+255),f,b
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;SSD1306oLED.c: 204: LATBbits.LATB4 = 0;
 10113  004B1A  988A               	bcf	3978,4,c	;volatile
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;SSD1306oLED.c: 205: oled_writeCommand(address);
 10117  004B1C  51D0               	movf	Set_Page_Address@address& (0+255),w,b
 10118  004B1E  EC34  F025         	call	_oled_writeCommand
 10119                           
 10120                           ;SSD1306oLED.c: 206: LATBbits.LATB4 = 1;
 10121  004B22  888A               	bsf	3978,4,c	;volatile
 10122  004B24  0012               	return		;funcret
 10123  004B26                     __end_of_Set_Page_Address:
 10124                           	opt stack 0
 10125                           tblptru	equ	0xFF8
 10126                           tblptrh	equ	0xFF7
 10127                           tblptrl	equ	0xFF6
 10128                           tablat	equ	0xFF5
 10129                           prodl	equ	0xFF3
 10130                           intcon	equ	0xFF2
 10131                           postinc0	equ	0xFEE
 10132                           wreg	equ	0xFE8
 10133                           indf1	equ	0xFE7
 10134                           fsr1h	equ	0xFE2
 10135                           fsr1l	equ	0xFE1
 10136                           indf2	equ	0xFDF
 10137                           fsr2h	equ	0xFDA
 10138                           fsr2l	equ	0xFD9
 10139                           status	equ	0xFD8
 10140                           
 10141 ;; *************** function _Set_Column_Address *****************
 10142 ;; Defined at:
 10143 ;;		line 210 in file "../Includes/Drivers/SSD1306oLED.c"
 10144 ;; Parameters:    Size  Location     Type
 10145 ;;  address         1    wreg     unsigned char 
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;  address         1    2[BANK0 ] unsigned char 
 10148 ;; Return value:  Size  Location     Type
 10149 ;;                  1    wreg      void 
 10150 ;; Registers used:
 10151 ;;		wreg, status,2, status,0, cstack
 10152 ;; Tracked objects:
 10153 ;;		On entry : F/0
 10154 ;;		On exit  : 0/0
 10155 ;;		Unchanged: 0/0
 10156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10157 ;;      Params:         0       0       0       0       0       0       0       0       0
 10158 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10159 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10160 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10161 ;;Total ram usage:        1 bytes
 10162 ;; Hardware stack levels used:    1
 10163 ;; Hardware stack levels required when called:   13
 10164 ;; This function calls:
 10165 ;;		_oled_writeCommand
 10166 ;; This function is called by:
 10167 ;;		_oled_putChar
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171                           	psect	text47
 10172  004BD4                     __ptext47:
 10173                           	opt stack 0
 10174  004BD4                     _Set_Column_Address:
 10175                           	opt stack 15
 10176                           
 10177                           ;incstack = 0
 10178                           ;Set_Column_Address@address stored from wreg
 10179  004BD4  6FD0               	movwf	Set_Column_Address@address& (0+255),b
 10180                           
 10181                           ;SSD1306oLED.c: 212: LATBbits.LATB4 = 0;
 10182  004BD6  988A               	bcf	3978,4,c	;volatile
 10183                           
 10184                           ;SSD1306oLED.c: 213: oled_writeCommand(0x10 | (address >> 4) );
 10185  004BD8  0100               	movlb	0	; () banked
 10186  004BDA  39D0               	swapf	Set_Column_Address@address& (0+255),w,b
 10187  004BDC  0B0F               	andlw	15
 10188  004BDE  0910               	iorlw	16
 10189  004BE0  EC34  F025         	call	_oled_writeCommand
 10190                           
 10191                           ;SSD1306oLED.c: 214: oled_writeCommand(0x0F & address);
 10192  004BE4  0100               	movlb	0	; () banked
 10193  004BE6  51D0               	movf	Set_Column_Address@address& (0+255),w,b
 10194  004BE8  0B0F               	andlw	15
 10195  004BEA  EC34  F025         	call	_oled_writeCommand
 10196                           
 10197                           ;SSD1306oLED.c: 215: LATBbits.LATB4 = 1;
 10198  004BEE  888A               	bsf	3978,4,c	;volatile
 10199  004BF0  0012               	return		;funcret
 10200  004BF2                     __end_of_Set_Column_Address:
 10201                           	opt stack 0
 10202                           tblptru	equ	0xFF8
 10203                           tblptrh	equ	0xFF7
 10204                           tblptrl	equ	0xFF6
 10205                           tablat	equ	0xFF5
 10206                           prodl	equ	0xFF3
 10207                           intcon	equ	0xFF2
 10208                           postinc0	equ	0xFEE
 10209                           wreg	equ	0xFE8
 10210                           indf1	equ	0xFE7
 10211                           fsr1h	equ	0xFE2
 10212                           fsr1l	equ	0xFE1
 10213                           indf2	equ	0xFDF
 10214                           fsr2h	equ	0xFDA
 10215                           fsr2l	equ	0xFD9
 10216                           status	equ	0xFD8
 10217                           
 10218 ;; *************** function _oled_writeCommand *****************
 10219 ;; Defined at:
 10220 ;;		line 401 in file "../Includes/Drivers/SSD1306oLED.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;  command         1    wreg     unsigned char 
 10223 ;; Auto vars:     Size  Location     Type
 10224 ;;  command         1    1[BANK0 ] unsigned char 
 10225 ;; Return value:  Size  Location     Type
 10226 ;;                  1    wreg      void 
 10227 ;; Registers used:
 10228 ;;		wreg, status,2, cstack
 10229 ;; Tracked objects:
 10230 ;;		On entry : 0/0
 10231 ;;		On exit  : 0/0
 10232 ;;		Unchanged: 0/0
 10233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10234 ;;      Params:         0       0       0       0       0       0       0       0       0
 10235 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10236 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10237 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10238 ;;Total ram usage:        1 bytes
 10239 ;; Hardware stack levels used:    1
 10240 ;; Hardware stack levels required when called:   12
 10241 ;; This function calls:
 10242 ;;		_SPI_Exchange8bit
 10243 ;; This function is called by:
 10244 ;;		_Set_Page_Address
 10245 ;;		_Set_Column_Address
 10246 ;;		_oled_devInit
 10247 ;;		_oled_setDisplay
 10248 ;;		_oled_displayOff
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text48
 10253  004A68                     __ptext48:
 10254                           	opt stack 0
 10255  004A68                     _oled_writeCommand:
 10256                           	opt stack 15
 10257                           
 10258                           ;incstack = 0
 10259                           ;oled_writeCommand@command stored from wreg
 10260  004A68  0100               	movlb	0	; () banked
 10261  004A6A  6FCF               	movwf	oled_writeCommand@command& (0+255),b
 10262                           
 10263                           ;SSD1306oLED.c: 403: LATBbits.LATB5 = 0;
 10264  004A6C  9A8A               	bcf	3978,5,c	;volatile
 10265                           
 10266                           ;SSD1306oLED.c: 404: SPI_Exchange8bit(command);
 10267  004A6E  51CF               	movf	oled_writeCommand@command& (0+255),w,b
 10268  004A70  EF5C  F025         	goto	_SPI_Exchange8bit
 10269  004A74                     __end_of_oled_writeCommand:
 10270                           	opt stack 0
 10271                           tblptru	equ	0xFF8
 10272                           tblptrh	equ	0xFF7
 10273                           tblptrl	equ	0xFF6
 10274                           tablat	equ	0xFF5
 10275                           prodl	equ	0xFF3
 10276                           intcon	equ	0xFF2
 10277                           postinc0	equ	0xFEE
 10278                           wreg	equ	0xFE8
 10279                           indf1	equ	0xFE7
 10280                           fsr1h	equ	0xFE2
 10281                           fsr1l	equ	0xFE1
 10282                           indf2	equ	0xFDF
 10283                           fsr2h	equ	0xFDA
 10284                           fsr2l	equ	0xFD9
 10285                           status	equ	0xFD8
 10286                           
 10287 ;; *************** function _SPI_Exchange8bit *****************
 10288 ;; Defined at:
 10289 ;;		line 81 in file "../Includes/MccGenerated/spi.c"
 10290 ;; Parameters:    Size  Location     Type
 10291 ;;  data            1    wreg     unsigned char 
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;  data            1    0[BANK0 ] unsigned char 
 10294 ;; Return value:  Size  Location     Type
 10295 ;;                  1    wreg      unsigned char 
 10296 ;; Registers used:
 10297 ;;		wreg, status,2
 10298 ;; Tracked objects:
 10299 ;;		On entry : F/0
 10300 ;;		On exit  : 0/0
 10301 ;;		Unchanged: 0/0
 10302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10303 ;;      Params:         0       0       0       0       0       0       0       0       0
 10304 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10305 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10306 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10307 ;;Total ram usage:        1 bytes
 10308 ;; Hardware stack levels used:    1
 10309 ;; Hardware stack levels required when called:   11
 10310 ;; This function calls:
 10311 ;;		Nothing
 10312 ;; This function is called by:
 10313 ;;		_oled_writeCommand
 10314 ;;		_oled_writeData
 10315 ;; This function uses a non-reentrant model
 10316 ;;
 10317                           
 10318                           	psect	text49
 10319  004AB8                     __ptext49:
 10320                           	opt stack 0
 10321  004AB8                     _SPI_Exchange8bit:
 10322                           	opt stack 16
 10323                           
 10324                           ;incstack = 0
 10325                           ;SPI_Exchange8bit@data stored from wreg
 10326  004AB8  6FCE               	movwf	SPI_Exchange8bit@data& (0+255),b
 10327                           
 10328                           ;spi.c: 84: SSP1CON1bits.WCOL = 0;
 10329  004ABA  9EC6               	bcf	4038,7,c	;volatile
 10330                           
 10331                           ;spi.c: 86: SSPBUF = data;
 10332  004ABC  C0CE  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 10333  004AC0                     l1066:
 10334  004AC0  A0C7               	btfss	4039,0,c	;volatile
 10335  004AC2  D7FE               	goto	l1066
 10336                           
 10337                           ;spi.c: 90: }
 10338                           ;spi.c: 92: return (SSPBUF);
 10339  004AC4  50C9               	movf	4041,w,c	;volatile
 10340  004AC6  0012               	return		;funcret
 10341  004AC8                     __end_of_SPI_Exchange8bit:
 10342                           	opt stack 0
 10343                           tblptru	equ	0xFF8
 10344                           tblptrh	equ	0xFF7
 10345                           tblptrl	equ	0xFF6
 10346                           tablat	equ	0xFF5
 10347                           prodl	equ	0xFF3
 10348                           intcon	equ	0xFF2
 10349                           postinc0	equ	0xFEE
 10350                           wreg	equ	0xFE8
 10351                           indf1	equ	0xFE7
 10352                           fsr1h	equ	0xFE2
 10353                           fsr1l	equ	0xFE1
 10354                           indf2	equ	0xFDF
 10355                           fsr2h	equ	0xFDA
 10356                           fsr2l	equ	0xFD9
 10357                           status	equ	0xFD8
 10358                           
 10359 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 10360 ;; Defined at:
 10361 ;;		line 125 in file "../Includes/Board/USBapp.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;		None
 10364 ;; Auto vars:     Size  Location     Type
 10365 ;;		None
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  1    wreg      void 
 10368 ;; Registers used:
 10369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10370 ;; Tracked objects:
 10371 ;;		On entry : F/0
 10372 ;;		On exit  : F/0
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10375 ;;      Params:         0       0       0       0       0       0       0       0       0
 10376 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10377 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10378 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10379 ;;Total ram usage:        1 bytes
 10380 ;; Hardware stack levels used:    1
 10381 ;; Hardware stack levels required when called:   13
 10382 ;; This function calls:
 10383 ;;		_CDCTxService
 10384 ;;		_EUSART_Read
 10385 ;;		_EUSART_Write
 10386 ;;		_MOTEapp_setResponseReady
 10387 ;;		_USBapp_getrxByteFlag
 10388 ;;		_getsUSBUSART
 10389 ;;		_putUSBUSART
 10390 ;; This function is called by:
 10391 ;;		_USBapp_Handler
 10392 ;; This function uses a non-reentrant model
 10393 ;;
 10394                           
 10395                           	psect	text50
 10396  005EFA                     __ptext50:
 10397                           	opt stack 0
 10398  005EFA                     _USBapp_DeviceCdcEmulatorHandler:
 10399                           	opt stack 16
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;USBapp.c: 128: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 10403                           
 10404                           ;incstack = 0
 10405  005EFA  0E1F               	movlw	31
 10406  005EFC  6597               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 10407  005EFE  0C1F               	retlw	31
 10408                           
 10409                           ; BSR set to: 0
 10410  005F00  B260               	btfsc	3936,1,c	;volatile
 10411  005F02  0C1F               	retlw	31
 10412                           
 10413                           ; BSR set to: 0
 10414                           ;USBapp.c: 131: if (RS232_Out_Data_Rdy == 0)
 10415  005F04  501B               	movf	_RS232_Out_Data_Rdy,w,c
 10416  005F06  E10E               	bnz	l693
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;USBapp.c: 132: {
 10420                           ;USBapp.c: 133: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 10421  005F08  0E50               	movlw	low _USB_Buffer
 10422  005F0A  6FD5               	movwf	getsUSBUSART@buffer& (0+255),b
 10423  005F0C  0E01               	movlw	high _USB_Buffer
 10424  005F0E  6FD6               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 10425  005F10  0E40               	movlw	64
 10426  005F12  6FD7               	movwf	getsUSBUSART@len& (0+255),b
 10427  005F14  EC50  F02D         	call	_getsUSBUSART	;wreg free
 10428  005F18  6E19               	movwf	_LastRS232Out,c
 10429                           
 10430                           ; BSR set to: 0
 10431                           ;USBapp.c: 134: if(LastRS232Out > 0)
 10432  005F1A  5019               	movf	_LastRS232Out,w,c
 10433  005F1C  E003               	bz	l693
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;USBapp.c: 135: {
 10437                           ;USBapp.c: 136: RS232_Out_Data_Rdy = 1;
 10438  005F1E  0E01               	movlw	1
 10439  005F20  6E1B               	movwf	_RS232_Out_Data_Rdy,c
 10440                           
 10441                           ; BSR set to: 0
 10442                           ;USBapp.c: 137: RS232cp = 0;
 10443  005F22  6A1C               	clrf	_RS232cp,c
 10444  005F24                     l693:
 10445                           
 10446                           ; BSR set to: 0
 10447                           ;USBapp.c: 138: }
 10448                           ;USBapp.c: 139: }
 10449                           ;USBapp.c: 142: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 10450  005F24  501B               	movf	_RS232_Out_Data_Rdy,w,c
 10451  005F26  E010               	bz	l9173
 10452                           
 10453                           ; BSR set to: 0
 10454  005F28  A2AC               	btfss	4012,1,c	;volatile
 10455  005F2A  D00E               	goto	l9173
 10456                           
 10457                           ; BSR set to: 0
 10458                           ;USBapp.c: 143: {
 10459                           ;USBapp.c: 145: EUSART_Write(USB_Buffer[RS232cp]);
 10460  005F2C  0E50               	movlw	low _USB_Buffer
 10461  005F2E  241C               	addwf	_RS232cp,w,c
 10462  005F30  6ED9               	movwf	fsr2l,c
 10463  005F32  6ADA               	clrf	fsr2h,c
 10464  005F34  0E01               	movlw	high _USB_Buffer
 10465  005F36  22DA               	addwfc	fsr2h,f,c
 10466  005F38  50DF               	movf	indf2,w,c
 10467  005F3A  EC8A  F027         	call	_EUSART_Write
 10468                           
 10469                           ;USBapp.c: 146: ++RS232cp;
 10470  005F3E  2A1C               	incf	_RS232cp,f,c
 10471                           
 10472                           ;USBapp.c: 147: if (RS232cp == LastRS232Out)
 10473  005F40  5019               	movf	_LastRS232Out,w,c
 10474  005F42  181C               	xorwf	_RS232cp,w,c
 10475  005F44  E101               	bnz	l9173
 10476                           
 10477                           ;USBapp.c: 148: RS232_Out_Data_Rdy = 0;
 10478  005F46  6A1B               	clrf	_RS232_Out_Data_Rdy,c
 10479  005F48                     l9173:
 10480                           
 10481                           ;USBapp.c: 149: }
 10482                           ;USBapp.c: 152: if ((eusartRxCount))
 10483  005F48  5023               	movf	_eusartRxCount,w,c	;volatile
 10484  005F4A  E01C               	bz	l9189
 10485                           
 10486                           ;USBapp.c: 153: {
 10487                           ;USBapp.c: 154: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 10488  005F4C  EC18  F025         	call	_USBapp_getrxByteFlag	;wreg free
 10489  005F50  0900               	iorlw	0
 10490  005F52  E018               	bz	l9189
 10491  005F54  0E3F               	movlw	63
 10492  005F56  601A               	cpfslt	_NextUSBOut,c
 10493  005F58  D015               	goto	l9189
 10494                           
 10495                           ;USBapp.c: 155: {
 10496                           ;USBapp.c: 156: __nop();
 10497  005F5A  F000               	nop	
 10498                           
 10499                           ;USBapp.c: 157: USB_Buffer[NextUSBOut] = EUSART_Read();
 10500  005F5C  EC5B  F027         	call	_EUSART_Read	;wreg free
 10501  005F60  6FDB               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 10502  005F62  0E50               	movlw	low _USB_Buffer
 10503  005F64  241A               	addwf	_NextUSBOut,w,c
 10504  005F66  6ED9               	movwf	fsr2l,c
 10505  005F68  6ADA               	clrf	fsr2h,c
 10506  005F6A  0E01               	movlw	high _USB_Buffer
 10507  005F6C  22DA               	addwfc	fsr2h,f,c
 10508  005F6E  C0DB  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 10509                           
 10510                           ; BSR set to: 0
 10511                           ;USBapp.c: 158: ++NextUSBOut;
 10512  005F72  2A1A               	incf	_NextUSBOut,f,c
 10513                           
 10514                           ; BSR set to: 0
 10515                           ;USBapp.c: 159: USB_Buffer[NextUSBOut] = 0;
 10516  005F74  0E50               	movlw	low _USB_Buffer
 10517  005F76  241A               	addwf	_NextUSBOut,w,c
 10518  005F78  6ED9               	movwf	fsr2l,c
 10519  005F7A  6ADA               	clrf	fsr2h,c
 10520  005F7C  0E01               	movlw	high _USB_Buffer
 10521  005F7E  22DA               	addwfc	fsr2h,f,c
 10522  005F80  6ADF               	clrf	indf2,c
 10523                           
 10524                           ; BSR set to: 0
 10525                           ;USBapp.c: 160: rxByteFlag = 0;
 10526  005F82  6A2A               	clrf	_rxByteFlag,c	;volatile
 10527  005F84                     l9189:
 10528                           
 10529                           ;USBapp.c: 161: }
 10530                           ;USBapp.c: 162: }
 10531                           ;USBapp.c: 166: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 10532  005F84  5020               	movf	_cdc_trf_state,w,c
 10533  005F86  E002 EF78  F034    	bnz	_CDCTxService
 10534  005F8C  501A               	movf	_NextUSBOut,w,c
 10535  005F8E  E102 EF78  F034    	bz	_CDCTxService
 10536                           
 10537                           ;USBapp.c: 167: {
 10538                           ;USBapp.c: 168: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 10539  005F94  0E50               	movlw	low _USB_Buffer
 10540  005F96  0100               	movlb	0	; () banked
 10541  005F98  6FCE               	movwf	putUSBUSART@data& (0+255),b
 10542  005F9A  0E01               	movlw	high _USB_Buffer
 10543  005F9C  6FCF               	movwf	(putUSBUSART@data+1)& (0+255),b
 10544  005F9E  C01A  F0D0         	movff	_NextUSBOut,putUSBUSART@length
 10545  005FA2  ECBF  F025         	call	_putUSBUSART	;wreg free
 10546                           
 10547                           ; BSR set to: 0
 10548                           ;USBapp.c: 169: MOTEapp_setResponseReady();
 10549  005FA6  EC02  F008         	call	_MOTEapp_setResponseReady	;wreg free
 10550                           
 10551                           ; BSR set to: 0
 10552                           ;USBapp.c: 170: NextUSBOut = 0;
 10553  005FAA  6A1A               	clrf	_NextUSBOut,c
 10554                           
 10555                           ;USBapp.c: 171: }
 10556                           ;USBapp.c: 173: CDCTxService();
 10557  005FAC  EF78  F034         	goto	_CDCTxService	;wreg free
 10558  005FB0                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 10559                           	opt stack 0
 10560                           tblptru	equ	0xFF8
 10561                           tblptrh	equ	0xFF7
 10562                           tblptrl	equ	0xFF6
 10563                           tablat	equ	0xFF5
 10564                           prodl	equ	0xFF3
 10565                           intcon	equ	0xFF2
 10566                           postinc0	equ	0xFEE
 10567                           wreg	equ	0xFE8
 10568                           indf1	equ	0xFE7
 10569                           fsr1h	equ	0xFE2
 10570                           fsr1l	equ	0xFE1
 10571                           indf2	equ	0xFDF
 10572                           fsr2h	equ	0xFDA
 10573                           fsr2l	equ	0xFD9
 10574                           status	equ	0xFD8
 10575                           
 10576 ;; *************** function _putUSBUSART *****************
 10577 ;; Defined at:
 10578 ;;		line 503 in file "../Includes/Usb/framework/usb_device_cdc.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;  data            2    0[BANK0 ] PTR unsigned char 
 10581 ;;		 -> USB_Buffer(64), 
 10582 ;;  length          1    2[BANK0 ] unsigned char 
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;		None
 10585 ;; Return value:  Size  Location     Type
 10586 ;;                  1    wreg      void 
 10587 ;; Registers used:
 10588 ;;		wreg, status,2, status,0
 10589 ;; Tracked objects:
 10590 ;;		On entry : F/0
 10591 ;;		On exit  : F/0
 10592 ;;		Unchanged: 0/0
 10593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10594 ;;      Params:         0       3       0       0       0       0       0       0       0
 10595 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10597 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10598 ;;Total ram usage:        3 bytes
 10599 ;; Hardware stack levels used:    1
 10600 ;; Hardware stack levels required when called:   11
 10601 ;; This function calls:
 10602 ;;		Nothing
 10603 ;; This function is called by:
 10604 ;;		_USBapp_DeviceCdcEmulatorHandler
 10605 ;; This function uses a non-reentrant model
 10606 ;;
 10607                           
 10608                           	psect	text51
 10609  004B7E                     __ptext51:
 10610                           	opt stack 0
 10611  004B7E                     _putUSBUSART:
 10612                           	opt stack 17
 10613                           
 10614                           ; BSR set to: 0
 10615                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 10616                           
 10617                           ; BSR set to: 0
 10618                           ;incstack = 0
 10619  004B7E  94A3               	bcf	4003,2,c	;volatile
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 10623  004B80  5020               	movf	_cdc_trf_state,w,c
 10624  004B82  E109               	bnz	l8651
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;usb_device_cdc.c: 530: {
 10628                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 10629  004B84  C0CE  F07B         	movff	putUSBUSART@data,_pCDCSrc
 10630  004B88  C0CF  F07C         	movff	putUSBUSART@data+1,_pCDCSrc+1
 10631                           
 10632                           ; BSR set to: 0
 10633  004B8C  C0D0  F09E         	movff	putUSBUSART@length,_cdc_tx_len
 10634                           
 10635                           ; BSR set to: 0
 10636  004B90  0E01               	movlw	1
 10637  004B92  6F9C               	movwf	_cdc_mem_type& (0+255),b
 10638                           
 10639                           ; BSR set to: 0
 10640  004B94  6E20               	movwf	_cdc_trf_state,c
 10641  004B96                     l8651:
 10642                           
 10643                           ; BSR set to: 0
 10644                           ;usb_device_cdc.c: 532: }
 10645                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 10646  004B96  84A3               	bsf	4003,2,c	;volatile
 10647                           
 10648                           ; BSR set to: 0
 10649  004B98  0012               	return		;funcret
 10650  004B9A                     __end_of_putUSBUSART:
 10651                           	opt stack 0
 10652                           tblptru	equ	0xFF8
 10653                           tblptrh	equ	0xFF7
 10654                           tblptrl	equ	0xFF6
 10655                           tablat	equ	0xFF5
 10656                           prodl	equ	0xFF3
 10657                           intcon	equ	0xFF2
 10658                           postinc0	equ	0xFEE
 10659                           wreg	equ	0xFE8
 10660                           indf1	equ	0xFE7
 10661                           fsr1h	equ	0xFE2
 10662                           fsr1l	equ	0xFE1
 10663                           indf2	equ	0xFDF
 10664                           fsr2h	equ	0xFDA
 10665                           fsr2l	equ	0xFD9
 10666                           status	equ	0xFD8
 10667                           
 10668 ;; *************** function _getsUSBUSART *****************
 10669 ;; Defined at:
 10670 ;;		line 432 in file "../Includes/Usb/framework/usb_device_cdc.c"
 10671 ;; Parameters:    Size  Location     Type
 10672 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 10673 ;;		 -> USB_Buffer(64), 
 10674 ;;  len             1    9[BANK0 ] unsigned char 
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;		None
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  1    wreg      unsigned char 
 10679 ;; Registers used:
 10680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10681 ;; Tracked objects:
 10682 ;;		On entry : F/0
 10683 ;;		On exit  : F/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10686 ;;      Params:         0       3       0       0       0       0       0       0       0
 10687 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10688 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10689 ;;      Totals:         0       6       0       0       0       0       0       0       0
 10690 ;;Total ram usage:        6 bytes
 10691 ;; Hardware stack levels used:    1
 10692 ;; Hardware stack levels required when called:   12
 10693 ;; This function calls:
 10694 ;;		_USBTransferOnePacket
 10695 ;; This function is called by:
 10696 ;;		_USBapp_DeviceCdcEmulatorHandler
 10697 ;; This function uses a non-reentrant model
 10698 ;;
 10699                           
 10700                           	psect	text52
 10701  005AA0                     __ptext52:
 10702                           	opt stack 0
 10703  005AA0                     _getsUSBUSART:
 10704                           	opt stack 16
 10705                           
 10706                           ; BSR set to: 0
 10707                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 10708                           
 10709                           ; BSR set to: 0
 10710                           ;incstack = 0
 10711  005AA0  6B9D               	clrf	_cdc_rx_len& (0+255),b
 10712                           
 10713                           ; BSR set to: 0
 10714                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 10715  005AA2  5183               	movf	_CDCDataOutHandle& (0+255),w,b
 10716  005AA4  1184               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 10717  005AA6  E009               	bz	l1749
 10718                           
 10719                           ; BSR set to: 0
 10720  005AA8  C083  FFD9         	movff	_CDCDataOutHandle,fsr2l
 10721  005AAC  C084  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 10722  005AB0  0E01               	movlw	1
 10723  005AB2  AEDF               	btfss	indf2,7,c
 10724  005AB4  0E00               	movlw	0
 10725  005AB6  6FD9               	movwf	_getsUSBUSART$5505& (0+255),b
 10726  005AB8  D001               	goto	L17
 10727  005ABA                     l1749:
 10728                           
 10729                           ; BSR set to: 0
 10730  005ABA  6BD9               	clrf	_getsUSBUSART$5505& (0+255),b
 10731  005ABC                     L17:
 10732  005ABC  6BDA               	clrf	(_getsUSBUSART$5505+1)& (0+255),b
 10733                           
 10734                           ; BSR set to: 0
 10735  005ABE  51D9               	movf	_getsUSBUSART$5505& (0+255),w,b
 10736  005AC0  11DA               	iorwf	(_getsUSBUSART$5505+1)& (0+255),w,b
 10737  005AC2  E134               	bnz	l8631
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;usb_device_cdc.c: 437: {
 10741                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 10742  005AC4  EE20 F001          	lfsr	2,1
 10743  005AC8  5183               	movf	_CDCDataOutHandle& (0+255),w,b
 10744  005ACA  26D9               	addwf	fsr2l,f,c
 10745  005ACC  5184               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10746  005ACE  22DA               	addwfc	fsr2h,f,c
 10747  005AD0  51D7               	movf	getsUSBUSART@len& (0+255),w,b
 10748  005AD2  5CDE               	subwf	postinc2,w,c
 10749  005AD4  E208               	bc	l8621
 10750                           
 10751                           ; BSR set to: 0
 10752                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 10753  005AD6  EE20 F001          	lfsr	2,1
 10754  005ADA  5183               	movf	_CDCDataOutHandle& (0+255),w,b
 10755  005ADC  26D9               	addwf	fsr2l,f,c
 10756  005ADE  5184               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10757  005AE0  22DA               	addwfc	fsr2h,f,c
 10758  005AE2  50DF               	movf	indf2,w,c
 10759  005AE4  6FD7               	movwf	getsUSBUSART@len& (0+255),b
 10760  005AE6                     l8621:
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 10764  005AE6  6B9D               	clrf	_cdc_rx_len& (0+255),b
 10765  005AE8  D00F               	goto	l8627
 10766  005AEA                     l8623:
 10767                           
 10768                           ; BSR set to: 0
 10769                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 10770  005AEA  0E40               	movlw	64
 10771  005AEC  259D               	addwf	_cdc_rx_len& (0+255),w,b
 10772  005AEE  6ED9               	movwf	fsr2l,c
 10773  005AF0  6ADA               	clrf	fsr2h,c
 10774  005AF2  0E05               	movlw	5
 10775  005AF4  22DA               	addwfc	fsr2h,f,c
 10776  005AF6  519D               	movf	_cdc_rx_len& (0+255),w,b
 10777  005AF8  25D5               	addwf	getsUSBUSART@buffer& (0+255),w,b
 10778  005AFA  6EE1               	movwf	fsr1l,c
 10779  005AFC  0E00               	movlw	0
 10780  005AFE  21D6               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 10781  005B00  6EE2               	movwf	fsr1h,c
 10782  005B02  CFDF FFE7          	movff	indf2,indf1
 10783                           
 10784                           ; BSR set to: 0
 10785  005B06  2B9D               	incf	_cdc_rx_len& (0+255),f,b
 10786  005B08                     l8627:
 10787                           
 10788                           ; BSR set to: 0
 10789  005B08  51D7               	movf	getsUSBUSART@len& (0+255),w,b
 10790  005B0A  5D9D               	subwf	_cdc_rx_len& (0+255),w,b
 10791  005B0C  E3EE               	bnc	l8623
 10792                           
 10793                           ; BSR set to: 0
 10794                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 10795  005B0E  0E00               	movlw	0
 10796  005B10  6FCE               	movwf	USBTransferOnePacket@dir& (0+255),b
 10797  005B12  0E40               	movlw	64
 10798  005B14  6FCF               	movwf	USBTransferOnePacket@data& (0+255),b
 10799  005B16  0E05               	movlw	5
 10800  005B18  6FD0               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10801  005B1A  0E40               	movlw	64
 10802  005B1C  6FD1               	movwf	USBTransferOnePacket@len& (0+255),b
 10803  005B1E  0E02               	movlw	2
 10804  005B20  EC80  F02E         	call	_USBTransferOnePacket
 10805  005B24  C0CE  F083         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 10806  005B28  C0CF  F084         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 10807  005B2C                     l8631:
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;usb_device_cdc.c: 457: }
 10811                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 10812  005B2C  519D               	movf	_cdc_rx_len& (0+255),w,b
 10813                           
 10814                           ; BSR set to: 0
 10815  005B2E  0012               	return		;funcret
 10816  005B30                     __end_of_getsUSBUSART:
 10817                           	opt stack 0
 10818                           tblptru	equ	0xFF8
 10819                           tblptrh	equ	0xFF7
 10820                           tblptrl	equ	0xFF6
 10821                           tablat	equ	0xFF5
 10822                           prodl	equ	0xFF3
 10823                           intcon	equ	0xFF2
 10824                           postinc0	equ	0xFEE
 10825                           wreg	equ	0xFE8
 10826                           indf1	equ	0xFE7
 10827                           fsr1h	equ	0xFE2
 10828                           fsr1l	equ	0xFE1
 10829                           indf2	equ	0xFDF
 10830                           postinc2	equ	0xFDE
 10831                           fsr2h	equ	0xFDA
 10832                           fsr2l	equ	0xFD9
 10833                           status	equ	0xFD8
 10834                           
 10835 ;; *************** function _USBapp_getrxByteFlag *****************
 10836 ;; Defined at:
 10837 ;;		line 231 in file "../Includes/Board/USBapp.c"
 10838 ;; Parameters:    Size  Location     Type
 10839 ;;		None
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;		None
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      unsigned char 
 10844 ;; Registers used:
 10845 ;;		wreg, status,2
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10851 ;;      Params:         0       0       0       0       0       0       0       0       0
 10852 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10853 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10854 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10855 ;;Total ram usage:        0 bytes
 10856 ;; Hardware stack levels used:    1
 10857 ;; Hardware stack levels required when called:   11
 10858 ;; This function calls:
 10859 ;;		Nothing
 10860 ;; This function is called by:
 10861 ;;		_USBapp_DeviceCdcEmulatorHandler
 10862 ;; This function uses a non-reentrant model
 10863 ;;
 10864                           
 10865                           	psect	text53
 10866  004A30                     __ptext53:
 10867                           	opt stack 0
 10868  004A30                     _USBapp_getrxByteFlag:
 10869                           	opt stack 17
 10870                           
 10871                           ;USBapp.c: 233: return rxByteFlag;
 10872                           
 10873                           ; BSR set to: 0
 10874                           ;incstack = 0
 10875  004A30  502A               	movf	_rxByteFlag,w,c	;volatile
 10876  004A32  0012               	return		;funcret
 10877  004A34                     __end_of_USBapp_getrxByteFlag:
 10878                           	opt stack 0
 10879                           tblptru	equ	0xFF8
 10880                           tblptrh	equ	0xFF7
 10881                           tblptrl	equ	0xFF6
 10882                           tablat	equ	0xFF5
 10883                           prodl	equ	0xFF3
 10884                           intcon	equ	0xFF2
 10885                           postinc0	equ	0xFEE
 10886                           wreg	equ	0xFE8
 10887                           indf1	equ	0xFE7
 10888                           fsr1h	equ	0xFE2
 10889                           fsr1l	equ	0xFE1
 10890                           indf2	equ	0xFDF
 10891                           postinc2	equ	0xFDE
 10892                           fsr2h	equ	0xFDA
 10893                           fsr2l	equ	0xFD9
 10894                           status	equ	0xFD8
 10895                           
 10896 ;; *************** function _MOTEapp_setResponseReady *****************
 10897 ;; Defined at:
 10898 ;;		line 843 in file "../Includes/Board/MOTEapp.c"
 10899 ;; Parameters:    Size  Location     Type
 10900 ;;		None
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;		None
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  1    wreg      void 
 10905 ;; Registers used:
 10906 ;;		None
 10907 ;; Tracked objects:
 10908 ;;		On entry : F/0
 10909 ;;		On exit  : F/0
 10910 ;;		Unchanged: F/0
 10911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10912 ;;      Params:         0       0       0       0       0       0       0       0       0
 10913 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10914 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10915 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10916 ;;Total ram usage:        0 bytes
 10917 ;; Hardware stack levels used:    1
 10918 ;; Hardware stack levels required when called:   11
 10919 ;; This function calls:
 10920 ;;		Nothing
 10921 ;; This function is called by:
 10922 ;;		_USBapp_DeviceCdcEmulatorHandler
 10923 ;; This function uses a non-reentrant model
 10924 ;;
 10925                           
 10926                           	psect	text54
 10927  001004                     __ptext54:
 10928                           	opt stack 0
 10929  001004                     _MOTEapp_setResponseReady:
 10930                           	opt stack 17
 10931                           
 10932                           ; BSR set to: 0
 10933                           
 10934                           ;incstack = 0
 10935  001004  0012               	return		;funcret
 10936  001006                     __end_of_MOTEapp_setResponseReady:
 10937                           	opt stack 0
 10938                           tblptru	equ	0xFF8
 10939                           tblptrh	equ	0xFF7
 10940                           tblptrl	equ	0xFF6
 10941                           tablat	equ	0xFF5
 10942                           prodl	equ	0xFF3
 10943                           intcon	equ	0xFF2
 10944                           postinc0	equ	0xFEE
 10945                           wreg	equ	0xFE8
 10946                           indf1	equ	0xFE7
 10947                           fsr1h	equ	0xFE2
 10948                           fsr1l	equ	0xFE1
 10949                           indf2	equ	0xFDF
 10950                           postinc2	equ	0xFDE
 10951                           fsr2h	equ	0xFDA
 10952                           fsr2l	equ	0xFD9
 10953                           status	equ	0xFD8
 10954                           
 10955 ;; *************** function _EUSART_Write *****************
 10956 ;; Defined at:
 10957 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 10958 ;; Parameters:    Size  Location     Type
 10959 ;;  txData          1    wreg     unsigned char 
 10960 ;; Auto vars:     Size  Location     Type
 10961 ;;  txData          1    0[BANK0 ] unsigned char 
 10962 ;; Return value:  Size  Location     Type
 10963 ;;                  1    wreg      void 
 10964 ;; Registers used:
 10965 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10966 ;; Tracked objects:
 10967 ;;		On entry : 0/0
 10968 ;;		On exit  : 0/0
 10969 ;;		Unchanged: 0/0
 10970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10971 ;;      Params:         0       0       0       0       0       0       0       0       0
 10972 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10973 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10974 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10975 ;;Total ram usage:        1 bytes
 10976 ;; Hardware stack levels used:    1
 10977 ;; Hardware stack levels required when called:   11
 10978 ;; This function calls:
 10979 ;;		Nothing
 10980 ;; This function is called by:
 10981 ;;		_EndLine
 10982 ;;		_sendCommand
 10983 ;;		_sendDataCommand
 10984 ;;		_USBapp_DeviceCdcEmulatorHandler
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988                           	psect	text55
 10989  004F14                     __ptext55:
 10990                           	opt stack 0
 10991  004F14                     _EUSART_Write:
 10992                           	opt stack 15
 10993                           
 10994                           ; BSR set to: 0
 10995                           ;incstack = 0
 10996                           ;EUSART_Write@txData stored from wreg
 10997  004F14  0100               	movlb	0	; () banked
 10998  004F16  6FCE               	movwf	EUSART_Write@txData& (0+255),b
 10999  004F18                     l7945:
 11000  004F18  5026               	movf	_eusartTxBufferRemaining,w,c	;volatile
 11001  004F1A  E0FE               	bz	l7945
 11002                           
 11003                           ;eusart.c: 143: }
 11004                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 11005  004F1C  B89D               	btfsc	3997,4,c	;volatile
 11006  004F1E  D003               	goto	l917
 11007                           
 11008                           ;eusart.c: 146: {
 11009                           ;eusart.c: 147: TXREG = txData;
 11010  004F20  C0CE  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 11011                           
 11012                           ;eusart.c: 148: }
 11013  004F24  D00F               	goto	l7959
 11014  004F26                     l917:
 11015                           
 11016                           ;eusart.c: 149: else
 11017                           ;eusart.c: 150: {
 11018                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 11019  004F26  989D               	bcf	3997,4,c	;volatile
 11020                           
 11021                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 11022  004F28  0E00               	movlw	low _eusartTxBuffer
 11023  004F2A  2427               	addwf	_eusartTxHead,w,c
 11024  004F2C  6ED9               	movwf	fsr2l,c
 11025  004F2E  6ADA               	clrf	fsr2h,c
 11026  004F30  0E02               	movlw	high _eusartTxBuffer
 11027  004F32  22DA               	addwfc	fsr2h,f,c
 11028  004F34  C0CE  FFDF         	movff	EUSART_Write@txData,indf2
 11029  004F38  2A27               	incf	_eusartTxHead,f,c
 11030                           
 11031                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 11032  004F3A  0E3F               	movlw	63
 11033  004F3C  6427               	cpfsgt	_eusartTxHead,c
 11034  004F3E  D001               	goto	l7957
 11035                           
 11036                           ;eusart.c: 154: {
 11037                           ;eusart.c: 155: eusartTxHead = 0;
 11038  004F40  6A27               	clrf	_eusartTxHead,c
 11039  004F42                     l7957:
 11040                           
 11041                           ;eusart.c: 156: }
 11042                           ;eusart.c: 157: eusartTxBufferRemaining--;
 11043  004F42  0626               	decf	_eusartTxBufferRemaining,f,c	;volatile
 11044  004F44                     l7959:
 11045                           
 11046                           ;eusart.c: 158: }
 11047                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 11048  004F44  889D               	bsf	3997,4,c	;volatile
 11049  004F46  0012               	return		;funcret
 11050  004F48                     __end_of_EUSART_Write:
 11051                           	opt stack 0
 11052                           tblptru	equ	0xFF8
 11053                           tblptrh	equ	0xFF7
 11054                           tblptrl	equ	0xFF6
 11055                           tablat	equ	0xFF5
 11056                           prodl	equ	0xFF3
 11057                           intcon	equ	0xFF2
 11058                           postinc0	equ	0xFEE
 11059                           wreg	equ	0xFE8
 11060                           indf1	equ	0xFE7
 11061                           fsr1h	equ	0xFE2
 11062                           fsr1l	equ	0xFE1
 11063                           indf2	equ	0xFDF
 11064                           postinc2	equ	0xFDE
 11065                           fsr2h	equ	0xFDA
 11066                           fsr2l	equ	0xFD9
 11067                           status	equ	0xFD8
 11068                           
 11069 ;; *************** function _EUSART_Read *****************
 11070 ;; Defined at:
 11071 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 11072 ;; Parameters:    Size  Location     Type
 11073 ;;		None
 11074 ;; Auto vars:     Size  Location     Type
 11075 ;;  readValue       1    0[BANK0 ] unsigned char 
 11076 ;; Return value:  Size  Location     Type
 11077 ;;                  1    wreg      unsigned char 
 11078 ;; Registers used:
 11079 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11080 ;; Tracked objects:
 11081 ;;		On entry : 0/0
 11082 ;;		On exit  : F/0
 11083 ;;		Unchanged: 0/0
 11084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11085 ;;      Params:         0       0       0       0       0       0       0       0       0
 11086 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11087 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11088 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11089 ;;Total ram usage:        1 bytes
 11090 ;; Hardware stack levels used:    1
 11091 ;; Hardware stack levels required when called:   11
 11092 ;; This function calls:
 11093 ;;		Nothing
 11094 ;; This function is called by:
 11095 ;;		_MOTEapp_getModemResponse
 11096 ;;		_USBapp_DeviceCdcEmulatorHandler
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100                           	psect	text56
 11101  004EB6                     __ptext56:
 11102                           	opt stack 0
 11103  004EB6                     _EUSART_Read:
 11104                           	opt stack 14
 11105                           
 11106                           ;eusart.c: 121: while(0 == eusartRxCount)
 11107                           
 11108                           ;incstack = 0
 11109  004EB6  D001               	goto	l7963
 11110  004EB8                     l908:
 11111                           
 11112                           ;eusart.c: 122: {
 11113                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 11114  004EB8  8E89               	bsf	3977,7,c	;volatile
 11115  004EBA                     l7963:
 11116  004EBA  5023               	movf	_eusartRxCount,w,c	;volatile
 11117  004EBC  E0FD               	bz	l908
 11118                           
 11119                           ;eusart.c: 124: }
 11120                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 11121  004EBE  9A9D               	bcf	3997,5,c	;volatile
 11122                           
 11123                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 11124  004EC0  0E00               	movlw	low _eusartRxBuffer
 11125  004EC2  2425               	addwf	_eusartRxTail,w,c
 11126  004EC4  6ED9               	movwf	fsr2l,c
 11127  004EC6  6ADA               	clrf	fsr2h,c
 11128  004EC8  0E01               	movlw	high _eusartRxBuffer
 11129  004ECA  22DA               	addwfc	fsr2h,f,c
 11130  004ECC  50DF               	movf	indf2,w,c
 11131  004ECE  0100               	movlb	0	; () banked
 11132  004ED0  6FCE               	movwf	EUSART_Read@readValue& (0+255),b
 11133                           
 11134                           ; BSR set to: 0
 11135  004ED2  2A25               	incf	_eusartRxTail,f,c
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 11139  004ED4  0E3F               	movlw	63
 11140  004ED6  6425               	cpfsgt	_eusartRxTail,c
 11141  004ED8  D001               	goto	l7973
 11142                           
 11143                           ; BSR set to: 0
 11144                           ;eusart.c: 130: {
 11145                           ;eusart.c: 131: eusartRxTail = 0;
 11146  004EDA  6A25               	clrf	_eusartRxTail,c
 11147  004EDC                     l7973:
 11148                           
 11149                           ; BSR set to: 0
 11150                           ;eusart.c: 132: }
 11151                           ;eusart.c: 133: eusartRxCount--;
 11152  004EDC  0623               	decf	_eusartRxCount,f,c	;volatile
 11153                           
 11154                           ; BSR set to: 0
 11155                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 11156  004EDE  8A9D               	bsf	3997,5,c	;volatile
 11157                           
 11158                           ; BSR set to: 0
 11159                           ;eusart.c: 136: return readValue;
 11160  004EE0  51CE               	movf	EUSART_Read@readValue& (0+255),w,b
 11161                           
 11162                           ; BSR set to: 0
 11163  004EE2  0012               	return		;funcret
 11164  004EE4                     __end_of_EUSART_Read:
 11165                           	opt stack 0
 11166                           tblptru	equ	0xFF8
 11167                           tblptrh	equ	0xFF7
 11168                           tblptrl	equ	0xFF6
 11169                           tablat	equ	0xFF5
 11170                           prodl	equ	0xFF3
 11171                           intcon	equ	0xFF2
 11172                           postinc0	equ	0xFEE
 11173                           wreg	equ	0xFE8
 11174                           indf1	equ	0xFE7
 11175                           fsr1h	equ	0xFE2
 11176                           fsr1l	equ	0xFE1
 11177                           indf2	equ	0xFDF
 11178                           postinc2	equ	0xFDE
 11179                           fsr2h	equ	0xFDA
 11180                           fsr2l	equ	0xFD9
 11181                           status	equ	0xFD8
 11182                           
 11183 ;; *************** function _CDCTxService *****************
 11184 ;; Defined at:
 11185 ;;		line 783 in file "../Includes/Usb/framework/usb_device_cdc.c"
 11186 ;; Parameters:    Size  Location     Type
 11187 ;;		None
 11188 ;; Auto vars:     Size  Location     Type
 11189 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
 11190 ;;  i               1    9[BANK0 ] unsigned char 
 11191 ;; Return value:  Size  Location     Type
 11192 ;;                  1    wreg      void 
 11193 ;; Registers used:
 11194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11195 ;; Tracked objects:
 11196 ;;		On entry : 0/0
 11197 ;;		On exit  : F/0
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11200 ;;      Params:         0       0       0       0       0       0       0       0       0
 11201 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11202 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11203 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11204 ;;Total ram usage:        4 bytes
 11205 ;; Hardware stack levels used:    1
 11206 ;; Hardware stack levels required when called:   12
 11207 ;; This function calls:
 11208 ;;		_USBTransferOnePacket
 11209 ;; This function is called by:
 11210 ;;		_USBapp_DeviceCdcEmulatorHandler
 11211 ;; This function uses a non-reentrant model
 11212 ;;
 11213                           
 11214                           	psect	text57
 11215  0068F0                     __ptext57:
 11216                           	opt stack 0
 11217  0068F0                     _CDCTxService:
 11218                           	opt stack 16
 11219                           
 11220                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 11221                           ;usb_device_cdc.c: 786: uint8_t i;
 11222                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;incstack = 0
 11226  0068F0  94A3               	bcf	4003,2,c	;volatile
 11227                           
 11228                           ;usb_device_cdc.c: 790: {};
 11229                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 11230  0068F2  0100               	movlb	0	; () banked
 11231  0068F4  5181               	movf	_CDCDataInHandle& (0+255),w,b
 11232  0068F6  1182               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 11233  0068F8  E009               	bz	l1779
 11234                           
 11235                           ; BSR set to: 0
 11236  0068FA  C081  FFD9         	movff	_CDCDataInHandle,fsr2l
 11237  0068FE  C082  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 11238  006902  0E01               	movlw	1
 11239  006904  AEDF               	btfss	indf2,7,c
 11240  006906  0E00               	movlw	0
 11241  006908  6FD5               	movwf	_CDCTxService$5553& (0+255),b
 11242  00690A  D001               	goto	L18
 11243  00690C                     l1779:
 11244                           
 11245                           ; BSR set to: 0
 11246  00690C  6BD5               	clrf	_CDCTxService$5553& (0+255),b
 11247  00690E                     L18:
 11248  00690E  6BD6               	clrf	(_CDCTxService$5553+1)& (0+255),b
 11249                           
 11250                           ; BSR set to: 0
 11251  006910  51D5               	movf	_CDCTxService$5553& (0+255),w,b
 11252  006912  11D6               	iorwf	(_CDCTxService$5553+1)& (0+255),w,b
 11253  006914  E002               	bz	l8663
 11254                           
 11255                           ; BSR set to: 0
 11256                           ;usb_device_cdc.c: 793: {
 11257                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 11258  006916  84A3               	bsf	4003,2,c	;volatile
 11259                           
 11260                           ;usb_device_cdc.c: 795: return;
 11261  006918  0012               	return	
 11262  00691A                     l8663:
 11263                           
 11264                           ; BSR set to: 0
 11265                           ;usb_device_cdc.c: 796: }
 11266                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 11267  00691A  0E03               	movlw	3
 11268  00691C  1820               	xorwf	_cdc_trf_state,w,c
 11269  00691E  E101               	bnz	l8667
 11270                           
 11271                           ; BSR set to: 0
 11272                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 11273  006920  6A20               	clrf	_cdc_trf_state,c
 11274  006922                     l8667:
 11275                           
 11276                           ; BSR set to: 0
 11277                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 11278  006922  5020               	movf	_cdc_trf_state,w,c
 11279  006924  E102               	bnz	l8671
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;usb_device_cdc.c: 810: {
 11283                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 11284  006926  84A3               	bsf	4003,2,c	;volatile
 11285                           
 11286                           ;usb_device_cdc.c: 812: return;
 11287  006928  0012               	return	
 11288  00692A                     l8671:
 11289                           
 11290                           ; BSR set to: 0
 11291                           ;usb_device_cdc.c: 813: }
 11292                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 11293  00692A  0E02               	movlw	2
 11294  00692C  1820               	xorwf	_cdc_trf_state,w,c
 11295  00692E  E110               	bnz	l8677
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;usb_device_cdc.c: 819: {
 11299                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 11300  006930  0E01               	movlw	1
 11301  006932  6FCE               	movwf	USBTransferOnePacket@dir& (0+255),b
 11302  006934  0E00               	movlw	0
 11303  006936  6FCF               	movwf	USBTransferOnePacket@data& (0+255),b
 11304  006938  6FD0               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11305  00693A  6FD1               	movwf	USBTransferOnePacket@len& (0+255),b
 11306  00693C  0E02               	movlw	2
 11307  00693E  EC80  F02E         	call	_USBTransferOnePacket
 11308  006942  C0CE  F081         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11309  006946  C0CF  F082         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11310                           
 11311                           ; BSR set to: 0
 11312                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 11313  00694A  0E03               	movlw	3
 11314  00694C  6E20               	movwf	_cdc_trf_state,c
 11315                           
 11316                           ;usb_device_cdc.c: 823: }
 11317  00694E  D04E               	goto	l8721
 11318  006950                     l8677:
 11319                           
 11320                           ; BSR set to: 0
 11321                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 11322  006950  0420               	decf	_cdc_trf_state,w,c
 11323  006952  E14C               	bnz	l8721
 11324                           
 11325                           ; BSR set to: 0
 11326                           ;usb_device_cdc.c: 825: {
 11327                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 11328  006954  0E40               	movlw	64
 11329  006956  659E               	cpfsgt	_cdc_tx_len& (0+255),b
 11330  006958  D002               	goto	l1788
 11331                           
 11332                           ; BSR set to: 0
 11333                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 11334  00695A  6FD8               	movwf	CDCTxService@byte_to_send& (0+255),b
 11335  00695C  D002               	goto	l8683
 11336  00695E                     l1788:
 11337                           
 11338                           ; BSR set to: 0
 11339                           ;usb_device_cdc.c: 831: else
 11340                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 11341  00695E  C09E  F0D8         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 11342  006962                     l8683:
 11343                           
 11344                           ; BSR set to: 0
 11345                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 11346  006962  51D8               	movf	CDCTxService@byte_to_send& (0+255),w,b
 11347  006964  5F9E               	subwf	_cdc_tx_len& (0+255),f,b
 11348                           
 11349                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 11350  006966  0E00               	movlw	0
 11351  006968  6F78               	movwf	_pCDCDst& (0+255),b
 11352  00696A  0E05               	movlw	5
 11353  00696C  6F79               	movwf	(_pCDCDst+1)& (0+255),b
 11354                           
 11355                           ; BSR set to: 0
 11356                           ;usb_device_cdc.c: 841: i = byte_to_send;
 11357  00696E  C0D8  F0D7         	movff	CDCTxService@byte_to_send,CDCTxService@i
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 11361  006972  519C               	movf	_cdc_mem_type& (0+255),w,b
 11362  006974  E010               	bz	l8699
 11363  006976  D021               	goto	l8709
 11364  006978                     l8691:
 11365                           
 11366                           ; BSR set to: 0
 11367                           ;usb_device_cdc.c: 845: {
 11368                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 11369  006978  C07B  FFD9         	movff	_pCDCSrc,fsr2l
 11370  00697C  C07C  FFDA         	movff	_pCDCSrc+1,fsr2h
 11371  006980  C078  FFE1         	movff	_pCDCDst,fsr1l
 11372  006984  C079  FFE2         	movff	_pCDCDst+1,fsr1h
 11373  006988  CFDF FFE7          	movff	indf2,indf1
 11374                           
 11375                           ; BSR set to: 0
 11376                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 11377  00698C  4B78               	infsnz	_pCDCDst& (0+255),f,b
 11378  00698E  2B79               	incf	(_pCDCDst+1)& (0+255),f,b
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 11382  006990  4B7B               	infsnz	_pCDCSrc& (0+255),f,b
 11383  006992  2B7C               	incf	(_pCDCSrc+1)& (0+255),f,b
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;usb_device_cdc.c: 849: i--;
 11387  006994  07D7               	decf	CDCTxService@i& (0+255),f,b
 11388  006996                     l8699:
 11389                           
 11390                           ; BSR set to: 0
 11391  006996  51D7               	movf	CDCTxService@i& (0+255),w,b
 11392  006998  E012               	bz	l8711
 11393  00699A  D7EE               	goto	l8691
 11394  00699C                     l8701:
 11395                           
 11396                           ; BSR set to: 0
 11397                           ;usb_device_cdc.c: 855: {
 11398                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 11399  00699C  C07B  FFD9         	movff	_pCDCSrc,fsr2l
 11400  0069A0  C07C  FFDA         	movff	_pCDCSrc+1,fsr2h
 11401  0069A4  C078  FFE1         	movff	_pCDCDst,fsr1l
 11402  0069A8  C079  FFE2         	movff	_pCDCDst+1,fsr1h
 11403  0069AC  CFDF FFE7          	movff	indf2,indf1
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 11407  0069B0  4B78               	infsnz	_pCDCDst& (0+255),f,b
 11408  0069B2  2B79               	incf	(_pCDCDst+1)& (0+255),f,b
 11409                           
 11410                           ; BSR set to: 0
 11411                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 11412  0069B4  4B7B               	infsnz	_pCDCSrc& (0+255),f,b
 11413  0069B6  2B7C               	incf	(_pCDCSrc+1)& (0+255),f,b
 11414                           
 11415                           ; BSR set to: 0
 11416                           ;usb_device_cdc.c: 859: i--;
 11417  0069B8  07D7               	decf	CDCTxService@i& (0+255),f,b
 11418  0069BA                     l8709:
 11419                           
 11420                           ; BSR set to: 0
 11421  0069BA  51D7               	movf	CDCTxService@i& (0+255),w,b
 11422  0069BC  E1EF               	bnz	l8701
 11423  0069BE                     l8711:
 11424                           
 11425                           ; BSR set to: 0
 11426                           ;usb_device_cdc.c: 860: }
 11427                           ;usb_device_cdc.c: 861: }
 11428                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 11429  0069BE  519E               	movf	_cdc_tx_len& (0+255),w,b
 11430  0069C0  E106               	bnz	l8719
 11431                           
 11432                           ; BSR set to: 0
 11433                           ;usb_device_cdc.c: 868: {
 11434                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 11435  0069C2  0E40               	movlw	64
 11436  0069C4  19D8               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 11437                           
 11438                           ; BSR set to: 0
 11439                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 11440  0069C6  0E02               	movlw	2
 11441  0069C8  A4D8               	btfss	status,2,c
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;usb_device_cdc.c: 871: else
 11445                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 11446  0069CA  0E03               	movlw	3
 11447  0069CC  6E20               	movwf	_cdc_trf_state,c
 11448  0069CE                     l8719:
 11449                           
 11450                           ; BSR set to: 0
 11451                           ;usb_device_cdc.c: 873: }
 11452                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 11453  0069CE  0E01               	movlw	1
 11454  0069D0  6FCE               	movwf	USBTransferOnePacket@dir& (0+255),b
 11455  0069D2  0E00               	movlw	0
 11456  0069D4  6FCF               	movwf	USBTransferOnePacket@data& (0+255),b
 11457  0069D6  0E05               	movlw	5
 11458  0069D8  6FD0               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11459  0069DA  C0D8  F0D1         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 11460  0069DE  0E02               	movlw	2
 11461  0069E0  EC80  F02E         	call	_USBTransferOnePacket
 11462  0069E4  C0CE  F081         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11463  0069E8  C0CF  F082         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11464  0069EC                     l8721:
 11465                           
 11466                           ; BSR set to: 0
 11467                           ;usb_device_cdc.c: 876: }
 11468                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 11469  0069EC  84A3               	bsf	4003,2,c	;volatile
 11470                           
 11471                           ; BSR set to: 0
 11472  0069EE  0012               	return		;funcret
 11473  0069F0                     __end_of_CDCTxService:
 11474                           	opt stack 0
 11475                           tblptru	equ	0xFF8
 11476                           tblptrh	equ	0xFF7
 11477                           tblptrl	equ	0xFF6
 11478                           tablat	equ	0xFF5
 11479                           prodl	equ	0xFF3
 11480                           intcon	equ	0xFF2
 11481                           postinc0	equ	0xFEE
 11482                           wreg	equ	0xFE8
 11483                           indf1	equ	0xFE7
 11484                           fsr1h	equ	0xFE2
 11485                           fsr1l	equ	0xFE1
 11486                           indf2	equ	0xFDF
 11487                           postinc2	equ	0xFDE
 11488                           fsr2h	equ	0xFDA
 11489                           fsr2l	equ	0xFD9
 11490                           status	equ	0xFD8
 11491                           
 11492 ;; *************** function _USBTransferOnePacket *****************
 11493 ;; Defined at:
 11494 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 11495 ;; Parameters:    Size  Location     Type
 11496 ;;  ep              1    wreg     unsigned char 
 11497 ;;  dir             1    0[BANK0 ] unsigned char 
 11498 ;;  data            2    1[BANK0 ] PTR unsigned char 
 11499 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 11500 ;;  len             1    3[BANK0 ] unsigned char 
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;  ep              1    4[BANK0 ] unsigned char 
 11503 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 11504 ;;		 -> BDT(48), NULL(0), 
 11505 ;; Return value:  Size  Location     Type
 11506 ;;                  2    0[BANK0 ] PTR void 
 11507 ;; Registers used:
 11508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11509 ;; Tracked objects:
 11510 ;;		On entry : F/0
 11511 ;;		On exit  : F/0
 11512 ;;		Unchanged: 0/0
 11513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11514 ;;      Params:         0       4       0       0       0       0       0       0       0
 11515 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11516 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11517 ;;      Totals:         0       7       0       0       0       0       0       0       0
 11518 ;;Total ram usage:        7 bytes
 11519 ;; Hardware stack levels used:    1
 11520 ;; Hardware stack levels required when called:   11
 11521 ;; This function calls:
 11522 ;;		Nothing
 11523 ;; This function is called by:
 11524 ;;		_getsUSBUSART
 11525 ;;		_CDCTxService
 11526 ;; This function uses a non-reentrant model
 11527 ;;
 11528                           
 11529                           	psect	text58
 11530  005D00                     __ptext58:
 11531                           	opt stack 0
 11532  005D00                     _USBTransferOnePacket:
 11533                           	opt stack 16
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;incstack = 0
 11537                           ;USBTransferOnePacket@ep stored from wreg
 11538  005D00  6FD2               	movwf	USBTransferOnePacket@ep& (0+255),b
 11539                           
 11540                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 11541                           ;usb_device.c: 762: if(dir != 0)
 11542  005D02  0100               	movlb	0	; () banked
 11543  005D04  51CE               	movf	USBTransferOnePacket@dir& (0+255),w,b
 11544  005D06  E005               	bz	l8229
 11545                           
 11546                           ; BSR set to: 0
 11547                           ;usb_device.c: 763: {
 11548                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 11549  005D08  51D2               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11550  005D0A  0D02               	mullw	2
 11551  005D0C  50F3               	movf	prodl,w,c
 11552  005D0E  0F0F               	addlw	low _pBDTEntryIn
 11553  005D10  D004               	goto	L20
 11554  005D12                     l8229:
 11555                           
 11556                           ; BSR set to: 0
 11557                           ;usb_device.c: 767: else
 11558                           ;usb_device.c: 768: {
 11559                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 11560  005D12  51D2               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11561  005D14  0D02               	mullw	2
 11562  005D16  50F3               	movf	prodl,w,c
 11563  005D18  0F68               	addlw	low _pBDTEntryOut
 11564  005D1A                     L20:
 11565  005D1A  6ED9               	movwf	fsr2l,c
 11566  005D1C  6ADA               	clrf	fsr2h,c
 11567  005D1E  CFDE F0D3          	movff	postinc2,USBTransferOnePacket@handle
 11568  005D22  CFDD F0D4          	movff	postdec2,USBTransferOnePacket@handle+1
 11569                           
 11570                           ; BSR set to: 0
 11571                           ;usb_device.c: 771: }
 11572                           ;usb_device.c: 775: if(handle == 0)
 11573  005D26  51D3               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11574  005D28  11D4               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11575  005D2A  E103               	bnz	l8235
 11576                           
 11577                           ; BSR set to: 0
 11578                           ;usb_device.c: 776: {
 11579                           ;usb_device.c: 777: return 0;
 11580  005D2C  6BCE               	clrf	?_USBTransferOnePacket& (0+255),b
 11581  005D2E  6BCF               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
 11582  005D30  0012               	return	
 11583  005D32                     l8235:
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;usb_device.c: 778: }
 11587                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 11588  005D32  EE20 F002          	lfsr	2,2
 11589  005D36  51D3               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11590  005D38  26D9               	addwf	fsr2l,f,c
 11591  005D3A  51D4               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11592  005D3C  22DA               	addwfc	fsr2h,f,c
 11593  005D3E  C0CF  FFDE         	movff	USBTransferOnePacket@data,postinc2
 11594  005D42  C0D0  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 11595                           
 11596                           ;usb_device.c: 781: handle->CNT = len;
 11597  005D46  EE20 F001          	lfsr	2,1
 11598  005D4A  51D3               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11599  005D4C  26D9               	addwf	fsr2l,f,c
 11600  005D4E  51D4               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11601  005D50  22DA               	addwfc	fsr2h,f,c
 11602  005D52  C0D1  FFDF         	movff	USBTransferOnePacket@len,indf2
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 11606  005D56  C0D3  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11607  005D5A  C0D4  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11608  005D5E  0E40               	movlw	64
 11609  005D60  16DF               	andwf	indf2,f,c
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 11613  005D62  C0D3  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11614  005D66  C0D4  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11615  005D6A  0E00               	movlw	0
 11616  005D6C  86DB               	bsf	plusw2,3,c
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 11620  005D6E  C0D3  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11621  005D72  C0D4  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11622  005D76  8EDB               	bsf	plusw2,7,c
 11623                           
 11624                           ; BSR set to: 0
 11625                           ;usb_device.c: 787: if(dir != 0)
 11626  005D78  51CE               	movf	USBTransferOnePacket@dir& (0+255),w,b
 11627  005D7A  E005               	bz	l8247
 11628                           
 11629                           ; BSR set to: 0
 11630                           ;usb_device.c: 788: {
 11631                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 11632  005D7C  51D2               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11633  005D7E  0D02               	mullw	2
 11634  005D80  50F3               	movf	prodl,w,c
 11635  005D82  0F0F               	addlw	low _pBDTEntryIn
 11636  005D84  D004               	goto	L21
 11637  005D86                     l8247:
 11638                           
 11639                           ; BSR set to: 0
 11640                           ;usb_device.c: 792: else
 11641                           ;usb_device.c: 793: {
 11642                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 11643  005D86  51D2               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11644  005D88  0D02               	mullw	2
 11645  005D8A  50F3               	movf	prodl,w,c
 11646  005D8C  0F68               	addlw	low _pBDTEntryOut
 11647  005D8E                     L21:
 11648  005D8E  6ED9               	movwf	fsr2l,c
 11649  005D90  6ADA               	clrf	fsr2h,c
 11650  005D92  0E04               	movlw	4
 11651  005D94  1ADF               	xorwf	indf2,f,c
 11652                           
 11653                           ; BSR set to: 0
 11654                           ;usb_device.c: 796: }
 11655                           ;usb_device.c: 797: return (void*)handle;
 11656  005D96  C0D3  F0CE         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 11657  005D9A  C0D4  F0CF         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 11658                           
 11659                           ; BSR set to: 0
 11660  005D9E  0C04               	retlw	4	;funcret
 11661  005DA0                     __end_of_USBTransferOnePacket:
 11662                           	opt stack 0
 11663                           tblptru	equ	0xFF8
 11664                           tblptrh	equ	0xFF7
 11665                           tblptrl	equ	0xFF6
 11666                           tablat	equ	0xFF5
 11667                           prodl	equ	0xFF3
 11668                           intcon	equ	0xFF2
 11669                           postinc0	equ	0xFEE
 11670                           wreg	equ	0xFE8
 11671                           indf1	equ	0xFE7
 11672                           fsr1h	equ	0xFE2
 11673                           fsr1l	equ	0xFE1
 11674                           indf2	equ	0xFDF
 11675                           postinc2	equ	0xFDE
 11676                           postdec2	equ	0xFDD
 11677                           plusw2	equ	0xFDB
 11678                           fsr2h	equ	0xFDA
 11679                           fsr2l	equ	0xFD9
 11680                           status	equ	0xFD8
 11681                           
 11682 ;; *************** function _USBDeviceInit *****************
 11683 ;; Defined at:
 11684 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;		None
 11687 ;; Auto vars:     Size  Location     Type
 11688 ;;  i               1    8[BANK0 ] unsigned char 
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  1    wreg      void 
 11691 ;; Registers used:
 11692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11693 ;; Tracked objects:
 11694 ;;		On entry : F/0
 11695 ;;		On exit  : F/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11698 ;;      Params:         0       0       0       0       0       0       0       0       0
 11699 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11700 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11701 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11702 ;;Total ram usage:        1 bytes
 11703 ;; Hardware stack levels used:    1
 11704 ;; Hardware stack levels required when called:   12
 11705 ;; This function calls:
 11706 ;;		_memset
 11707 ;; This function is called by:
 11708 ;;		_main
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           	psect	text59
 11713  0062B6                     __ptext59:
 11714                           	opt stack 0
 11715  0062B6                     _USBDeviceInit:
 11716                           	opt stack 18
 11717                           
 11718                           ; BSR set to: 0
 11719                           ;usb_device.c: 239: uint8_t i;
 11720                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 11721                           
 11722                           ; BSR set to: 0
 11723                           ;incstack = 0
 11724  0062B6  94A3               	bcf	4003,2,c	;volatile
 11725                           
 11726                           ;usb_device.c: 244: {UEIR = 0;};
 11727  0062B8  6A67               	clrf	3943,c	;volatile
 11728                           
 11729                           ;usb_device.c: 247: {UIR = 0;};
 11730  0062BA  6A65               	clrf	3941,c	;volatile
 11731                           
 11732                           ;usb_device.c: 250: UEP0 = 0;
 11733  0062BC  6A6A               	clrf	3946,c	;volatile
 11734                           
 11735                           ; BSR set to: 0
 11736                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 11737  0062BE  0E6B               	movlw	107
 11738  0062C0  6FCE               	movwf	memset@p1& (0+255),b
 11739  0062C2  0E0F               	movlw	15
 11740  0062C4  6FCF               	movwf	(memset@p1+1)& (0+255),b
 11741  0062C6  6BD1               	clrf	(memset@c+1)& (0+255),b
 11742  0062C8  6BD0               	clrf	memset@c& (0+255),b
 11743  0062CA  6BD3               	clrf	(memset@n+1)& (0+255),b
 11744  0062CC  0E02               	movlw	2
 11745  0062CE  6FD2               	movwf	memset@n& (0+255),b
 11746  0062D0  ECC3  F026         	call	_memset	;wreg free
 11747                           
 11748                           ; BSR set to: 0
 11749                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11750  0062D4  0E16               	movlw	22
 11751  0062D6  6E62               	movwf	3938,c	;volatile
 11752                           
 11753                           ; BSR set to: 0
 11754  0062D8  0E9F               	movlw	159
 11755  0062DA  6E66               	movwf	3942,c	;volatile
 11756                           
 11757                           ; BSR set to: 0
 11758  0062DC  0E7B               	movlw	123
 11759  0062DE  6E64               	movwf	3940,c	;volatile
 11760                           
 11761                           ; BSR set to: 0
 11762                           ;usb_device.c: 257: ;
 11763                           ;usb_device.c: 260: ;
 11764                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 11765  0062E0  6BD6               	clrf	USBDeviceInit@i& (0+255),b
 11766  0062E2                     l9295:
 11767                           
 11768                           ; BSR set to: 0
 11769                           ;usb_device.c: 264: {
 11770                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 11771  0062E2  51D6               	movf	USBDeviceInit@i& (0+255),w,b
 11772  0062E4  0D04               	mullw	4
 11773  0062E6  0E00               	movlw	0
 11774  0062E8  24F3               	addwf	prodl,w,c
 11775  0062EA  6ED9               	movwf	fsr2l,c
 11776  0062EC  0E04               	movlw	4
 11777  0062EE  20F4               	addwfc	prodh,w,c
 11778  0062F0  6EDA               	movwf	fsr2h,c
 11779  0062F2  6ADE               	clrf	postinc2,c
 11780  0062F4  6ADE               	clrf	postinc2,c
 11781  0062F6  6ADE               	clrf	postinc2,c
 11782  0062F8  6ADD               	clrf	postdec2,c
 11783                           
 11784                           ; BSR set to: 0
 11785  0062FA  2BD6               	incf	USBDeviceInit@i& (0+255),f,b
 11786                           
 11787                           ; BSR set to: 0
 11788  0062FC  0E0B               	movlw	11
 11789  0062FE  65D6               	cpfsgt	USBDeviceInit@i& (0+255),b
 11790  006300  D7F0               	goto	l9295
 11791                           
 11792                           ; BSR set to: 0
 11793                           ;usb_device.c: 266: }
 11794                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 11795  006302  8C60               	bsf	3936,6,c	;volatile
 11796                           
 11797                           ;usb_device.c: 272: UADDR = 0x00;
 11798  006304  6A63               	clrf	3939,c	;volatile
 11799                           
 11800                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 11801  006306  9860               	bcf	3936,4,c	;volatile
 11802                           
 11803                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 11804  006308  9C60               	bcf	3936,6,c	;volatile
 11805                           
 11806                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 11807  00630A  D005               	goto	l9309
 11808  00630C                     l9301:
 11809                           
 11810                           ; BSR set to: 0
 11811                           ;usb_device.c: 282: {
 11812                           ;usb_device.c: 283: (UIR &= 0xF7);
 11813  00630C  9665               	bcf	3941,3,c	;volatile
 11814                           
 11815                           ; BSR set to: 0
 11816                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 11817  00630E  6A0C               	clrf	_inPipes+3,c	;volatile
 11818                           
 11819                           ; BSR set to: 0
 11820                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 11821  006310  6A04               	clrf	_outPipes+3,c	;volatile
 11822                           
 11823                           ; BSR set to: 0
 11824                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 11825  006312  6A05               	clrf	_outPipes+4,c	;volatile
 11826  006314  6A06               	clrf	_outPipes+5,c	;volatile
 11827  006316                     l9309:
 11828                           
 11829                           ; BSR set to: 0
 11830  006316  B665               	btfsc	3941,3,c	;volatile
 11831  006318  D7F9               	goto	l9301
 11832                           
 11833                           ; BSR set to: 0
 11834                           ;usb_device.c: 288: }
 11835                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 11836  00631A  0E01               	movlw	1
 11837  00631C  6F98               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 11838                           
 11839                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 11840  00631E  6F99               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 11841                           
 11842                           ; BSR set to: 0
 11843                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 11844  006320  6B95               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 11848  006322  6B96               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 11849                           
 11850                           ; BSR set to: 0
 11851                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 11852  006324  6B94               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 11856  006326  6BD6               	clrf	USBDeviceInit@i& (0+255),b
 11857  006328                     l9325:
 11858                           
 11859                           ; BSR set to: 0
 11860                           ;usb_device.c: 302: {
 11861                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 11862  006328  51D6               	movf	USBDeviceInit@i& (0+255),w,b
 11863  00632A  0D02               	mullw	2
 11864  00632C  50F3               	movf	prodl,w,c
 11865  00632E  0F0F               	addlw	low _pBDTEntryIn
 11866  006330  6ED9               	movwf	fsr2l,c
 11867  006332  6ADA               	clrf	fsr2h,c
 11868  006334  6ADE               	clrf	postinc2,c
 11869  006336  6ADD               	clrf	postdec2,c
 11870                           
 11871                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 11872  006338  51D6               	movf	USBDeviceInit@i& (0+255),w,b
 11873  00633A  0D02               	mullw	2
 11874  00633C  50F3               	movf	prodl,w,c
 11875  00633E  0F68               	addlw	low _pBDTEntryOut
 11876  006340  6ED9               	movwf	fsr2l,c
 11877  006342  6ADA               	clrf	fsr2h,c
 11878  006344  6ADE               	clrf	postinc2,c
 11879  006346  6ADD               	clrf	postdec2,c
 11880                           
 11881                           ; BSR set to: 0
 11882                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 11883  006348  51D6               	movf	USBDeviceInit@i& (0+255),w,b
 11884  00634A  0F72               	addlw	low _ep_data_in
 11885  00634C  6ED9               	movwf	fsr2l,c
 11886  00634E  6ADA               	clrf	fsr2h,c
 11887  006350  6ADF               	clrf	indf2,c
 11888                           
 11889                           ; BSR set to: 0
 11890                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 11891  006352  51D6               	movf	USBDeviceInit@i& (0+255),w,b
 11892  006354  0F75               	addlw	low _ep_data_out
 11893  006356  6ED9               	movwf	fsr2l,c
 11894  006358  6ADA               	clrf	fsr2h,c
 11895  00635A  6ADF               	clrf	indf2,c
 11896                           
 11897                           ; BSR set to: 0
 11898  00635C  2BD6               	incf	USBDeviceInit@i& (0+255),f,b
 11899                           
 11900                           ; BSR set to: 0
 11901  00635E  0E02               	movlw	2
 11902  006360  65D6               	cpfsgt	USBDeviceInit@i& (0+255),b
 11903  006362  D7E2               	goto	l9325
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;usb_device.c: 307: }
 11907                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11908  006364  0E08               	movlw	8
 11909  006366  6E0F               	movwf	_pBDTEntryIn,c
 11910  006368  0E04               	movlw	4
 11911  00636A  6E10               	movwf	_pBDTEntryIn+1,c
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 11915  00636C  0E16               	movlw	22
 11916  00636E  6E6A               	movwf	3946,c	;volatile
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 11920  006370  0E04               	movlw	4
 11921  006372  0104               	movlb	4	; () banked
 11922  006374  6F03               	movwf	3,b	;volatile
 11923  006376  0E30               	movlw	48
 11924  006378  6F02               	movwf	2,b	;volatile
 11925                           
 11926                           ; BSR set to: 4
 11927                           ;usb_device.c: 315: BDT[0].CNT = 8;
 11928  00637A  0E08               	movlw	8
 11929  00637C  6F01               	movwf	1,b	;volatile
 11930                           
 11931                           ; BSR set to: 4
 11932                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 11933  00637E  0E04               	movlw	4
 11934  006380  6F00               	movwf	0,b	;volatile
 11935                           
 11936                           ; BSR set to: 4
 11937                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 11938  006382  8F00               	bsf	0,7,b	;volatile
 11939                           
 11940                           ; BSR set to: 4
 11941                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 11942  006384  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 11943                           
 11944                           ; BSR set to: 4
 11945                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 11946  006386  0100               	movlb	0	; () banked
 11947  006388  6B97               	clrf	_USBDeviceState& (0+255),b	;volatile
 11948                           
 11949                           ; BSR set to: 0
 11950  00638A  0012               	return		;funcret
 11951  00638C                     __end_of_USBDeviceInit:
 11952                           	opt stack 0
 11953                           tblptru	equ	0xFF8
 11954                           tblptrh	equ	0xFF7
 11955                           tblptrl	equ	0xFF6
 11956                           tablat	equ	0xFF5
 11957                           prodh	equ	0xFF4
 11958                           prodl	equ	0xFF3
 11959                           intcon	equ	0xFF2
 11960                           postinc0	equ	0xFEE
 11961                           wreg	equ	0xFE8
 11962                           indf1	equ	0xFE7
 11963                           fsr1h	equ	0xFE2
 11964                           fsr1l	equ	0xFE1
 11965                           indf2	equ	0xFDF
 11966                           postinc2	equ	0xFDE
 11967                           postdec2	equ	0xFDD
 11968                           plusw2	equ	0xFDB
 11969                           fsr2h	equ	0xFDA
 11970                           fsr2l	equ	0xFD9
 11971                           status	equ	0xFD8
 11972                           
 11973 ;; *************** function _memset *****************
 11974 ;; Defined at:
 11975 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 11976 ;; Parameters:    Size  Location     Type
 11977 ;;  p1              2    0[BANK0 ] PTR void 
 11978 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 11979 ;;  c               2    2[BANK0 ] int 
 11980 ;;  n               2    4[BANK0 ] unsigned int 
 11981 ;; Auto vars:     Size  Location     Type
 11982 ;;  p               2    6[BANK0 ] PTR unsigned char 
 11983 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 11984 ;; Return value:  Size  Location     Type
 11985 ;;                  2    0[BANK0 ] PTR void 
 11986 ;; Registers used:
 11987 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11988 ;; Tracked objects:
 11989 ;;		On entry : F/0
 11990 ;;		On exit  : F/0
 11991 ;;		Unchanged: 0/0
 11992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11993 ;;      Params:         0       6       0       0       0       0       0       0       0
 11994 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11995 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11996 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11997 ;;Total ram usage:        8 bytes
 11998 ;; Hardware stack levels used:    1
 11999 ;; Hardware stack levels required when called:   11
 12000 ;; This function calls:
 12001 ;;		Nothing
 12002 ;; This function is called by:
 12003 ;;		_USBDeviceInit
 12004 ;; This function uses a non-reentrant model
 12005 ;;
 12006                           
 12007                           	psect	text60
 12008  004D86                     __ptext60:
 12009                           	opt stack 0
 12010  004D86                     _memset:
 12011                           	opt stack 18
 12012                           
 12013                           ; BSR set to: 0
 12014                           
 12015                           ; BSR set to: 0
 12016                           ;incstack = 0
 12017  004D86  C0CE  F0D4         	movff	memset@p1,memset@p
 12018  004D8A  C0CF  F0D5         	movff	memset@p1+1,memset@p+1
 12019  004D8E  D008               	goto	l9261
 12020  004D90                     l9257:
 12021                           
 12022                           ; BSR set to: 0
 12023  004D90  C0D4  FFD9         	movff	memset@p,fsr2l
 12024  004D94  C0D5  FFDA         	movff	memset@p+1,fsr2h
 12025  004D98  C0D0  FFDF         	movff	memset@c,indf2
 12026                           
 12027                           ; BSR set to: 0
 12028  004D9C  4BD4               	infsnz	memset@p& (0+255),f,b
 12029  004D9E  2BD5               	incf	(memset@p+1)& (0+255),f,b
 12030  004DA0                     l9261:
 12031                           
 12032                           ; BSR set to: 0
 12033  004DA0  07D2               	decf	memset@n& (0+255),f,b
 12034  004DA2  A0D8               	btfss	status,0,c
 12035  004DA4  07D3               	decf	(memset@n+1)& (0+255),f,b
 12036  004DA6  29D2               	incf	memset@n& (0+255),w,b
 12037  004DA8  E1F3               	bnz	l9257
 12038  004DAA  29D3               	incf	(memset@n+1)& (0+255),w,b
 12039  004DAC  E1F1               	bnz	l9257
 12040                           
 12041                           ; BSR set to: 0
 12042  004DAE  0012               	return		;funcret
 12043  004DB0                     __end_of_memset:
 12044                           	opt stack 0
 12045                           tblptru	equ	0xFF8
 12046                           tblptrh	equ	0xFF7
 12047                           tblptrl	equ	0xFF6
 12048                           tablat	equ	0xFF5
 12049                           prodh	equ	0xFF4
 12050                           prodl	equ	0xFF3
 12051                           intcon	equ	0xFF2
 12052                           postinc0	equ	0xFEE
 12053                           wreg	equ	0xFE8
 12054                           indf1	equ	0xFE7
 12055                           fsr1h	equ	0xFE2
 12056                           fsr1l	equ	0xFE1
 12057                           indf2	equ	0xFDF
 12058                           postinc2	equ	0xFDE
 12059                           postdec2	equ	0xFDD
 12060                           plusw2	equ	0xFDB
 12061                           fsr2h	equ	0xFDA
 12062                           fsr2l	equ	0xFD9
 12063                           status	equ	0xFD8
 12064                           
 12065 ;; *************** function _USBDeviceAttach *****************
 12066 ;; Defined at:
 12067 ;;		line 1046 in file "../Includes/Usb/framework/usb_device.c"
 12068 ;; Parameters:    Size  Location     Type
 12069 ;;		None
 12070 ;; Auto vars:     Size  Location     Type
 12071 ;;		None
 12072 ;; Return value:  Size  Location     Type
 12073 ;;                  1    wreg      void 
 12074 ;; Registers used:
 12075 ;;		wreg, status,2
 12076 ;; Tracked objects:
 12077 ;;		On entry : F/0
 12078 ;;		On exit  : F/0
 12079 ;;		Unchanged: 0/0
 12080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12081 ;;      Params:         0       0       0       0       0       0       0       0       0
 12082 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12083 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12084 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12085 ;;Total ram usage:        0 bytes
 12086 ;; Hardware stack levels used:    1
 12087 ;; Hardware stack levels required when called:   11
 12088 ;; This function calls:
 12089 ;;		Nothing
 12090 ;; This function is called by:
 12091 ;;		_main
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095                           	psect	text61
 12096  004E5E                     __ptext61:
 12097                           	opt stack 0
 12098  004E5E                     _USBDeviceAttach:
 12099                           	opt stack 19
 12100                           
 12101                           ; BSR set to: 0
 12102                           ;usb_device.c: 1050: {
 12103                           ;usb_device.c: 1051: if(1 == 1)
 12104                           
 12105                           ; BSR set to: 0
 12106                           ;incstack = 0
 12107  004E5E  5197               	movf	_USBDeviceState& (0+255),w,b	;volatile
 12108  004E60  A4D8               	btfss	status,2,c
 12109  004E62  0012               	return	
 12110                           
 12111                           ; BSR set to: 0
 12112                           ;usb_device.c: 1052: {
 12113                           ;usb_device.c: 1054: UCON = 0;
 12114  004E64  6A60               	clrf	3936,c	;volatile
 12115                           
 12116                           ;usb_device.c: 1057: UIE = 0;
 12117  004E66  6A64               	clrf	3940,c	;volatile
 12118                           
 12119                           ; BSR set to: 0
 12120                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 12121  004E68  0E16               	movlw	22
 12122  004E6A  6E62               	movwf	3938,c	;volatile
 12123  004E6C  0E9F               	movlw	159
 12124  004E6E  6E66               	movwf	3942,c	;volatile
 12125  004E70  0E7B               	movlw	123
 12126  004E72  6E64               	movwf	3940,c	;volatile
 12127                           
 12128                           ; BSR set to: 0
 12129                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 12130  004E74  8ED0               	bsf	4048,7,c	;volatile
 12131                           
 12132                           ; BSR set to: 0
 12133  004E76  84A5               	bsf	4005,2,c	;volatile
 12134                           
 12135                           ; BSR set to: 0
 12136  004E78  84A3               	bsf	4003,2,c	;volatile
 12137                           
 12138                           ; BSR set to: 0
 12139  004E7A  8EF2               	bsf	intcon,7,c	;volatile
 12140                           
 12141                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 12142  004E7C  D001               	goto	l1484
 12143  004E7E                     l1485:
 12144                           
 12145                           ; BSR set to: 0
 12146  004E7E  8660               	bsf	3936,3,c	;volatile
 12147  004E80                     l1484:
 12148                           
 12149                           ; BSR set to: 0
 12150  004E80  A660               	btfss	3936,3,c	;volatile
 12151  004E82  D7FD               	goto	l1485
 12152                           
 12153                           ; BSR set to: 0
 12154                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 12155  004E84  0E01               	movlw	1
 12156  004E86  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 12157                           
 12158                           ; BSR set to: 0
 12159  004E88  0C01               	retlw	1	;funcret
 12160  004E8A                     __end_of_USBDeviceAttach:
 12161                           	opt stack 0
 12162                           tblptru	equ	0xFF8
 12163                           tblptrh	equ	0xFF7
 12164                           tblptrl	equ	0xFF6
 12165                           tablat	equ	0xFF5
 12166                           prodh	equ	0xFF4
 12167                           prodl	equ	0xFF3
 12168                           intcon	equ	0xFF2
 12169                           postinc0	equ	0xFEE
 12170                           wreg	equ	0xFE8
 12171                           indf1	equ	0xFE7
 12172                           fsr1h	equ	0xFE2
 12173                           fsr1l	equ	0xFE1
 12174                           indf2	equ	0xFDF
 12175                           postinc2	equ	0xFDE
 12176                           postdec2	equ	0xFDD
 12177                           plusw2	equ	0xFDB
 12178                           fsr2h	equ	0xFDA
 12179                           fsr2l	equ	0xFD9
 12180                           status	equ	0xFD8
 12181                           
 12182 ;; *************** function _SYSTEM_Initialize *****************
 12183 ;; Defined at:
 12184 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 12185 ;; Parameters:    Size  Location     Type
 12186 ;;		None
 12187 ;; Auto vars:     Size  Location     Type
 12188 ;;		None
 12189 ;; Return value:  Size  Location     Type
 12190 ;;                  1    wreg      void 
 12191 ;; Registers used:
 12192 ;;		wreg, status,2, status,0, cstack
 12193 ;; Tracked objects:
 12194 ;;		On entry : 0/0
 12195 ;;		On exit  : 0/0
 12196 ;;		Unchanged: 0/0
 12197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12198 ;;      Params:         0       0       0       0       0       0       0       0       0
 12199 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12200 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12201 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12202 ;;Total ram usage:        0 bytes
 12203 ;; Hardware stack levels used:    1
 12204 ;; Hardware stack levels required when called:   13
 12205 ;; This function calls:
 12206 ;;		_ADC_Initialize
 12207 ;;		_CMP1_Initialize
 12208 ;;		_EUSART_Initialize
 12209 ;;		_OSCILLATOR_Initialize
 12210 ;;		_PIN_MANAGER_Initialize
 12211 ;;		_SPI_Initialize
 12212 ;;		_TMR1_Initialize
 12213 ;;		_TMR2_Initialize
 12214 ;; This function is called by:
 12215 ;;		_main
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           	psect	text62
 12220  004C10                     __ptext62:
 12221                           	opt stack 0
 12222  004C10                     _SYSTEM_Initialize:
 12223                           	opt stack 17
 12224                           
 12225                           ;mcc.c: 95: OSCILLATOR_Initialize();
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;incstack = 0
 12229  004C10  ECA8  F025         	call	_OSCILLATOR_Initialize	;wreg free
 12230                           
 12231                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 12232  004C14  EC25  F029         	call	_PIN_MANAGER_Initialize	;wreg free
 12233                           
 12234                           ; BSR set to: 15
 12235                           ;mcc.c: 97: SPI_Initialize();
 12236  004C18  EC46  F025         	call	_SPI_Initialize	;wreg free
 12237                           
 12238                           ; BSR set to: 15
 12239                           ;mcc.c: 98: TMR1_Initialize();
 12240  004C1C  EC19  F027         	call	_TMR1_Initialize	;wreg free
 12241                           
 12242                           ; BSR set to: 0
 12243                           ;mcc.c: 99: TMR2_Initialize();
 12244  004C20  EC54  F025         	call	_TMR2_Initialize	;wreg free
 12245                           
 12246                           ; BSR set to: 0
 12247                           ;mcc.c: 100: EUSART_Initialize();
 12248  004C24  EC03  F027         	call	_EUSART_Initialize	;wreg free
 12249                           
 12250                           ;mcc.c: 101: ADC_Initialize();
 12251  004C28  EC9D  F025         	call	_ADC_Initialize	;wreg free
 12252                           
 12253                           ;mcc.c: 102: CMP1_Initialize();
 12254  004C2C  EF64  F025         	goto	_CMP1_Initialize	;wreg free
 12255  004C30                     __end_of_SYSTEM_Initialize:
 12256                           	opt stack 0
 12257                           tblptru	equ	0xFF8
 12258                           tblptrh	equ	0xFF7
 12259                           tblptrl	equ	0xFF6
 12260                           tablat	equ	0xFF5
 12261                           prodh	equ	0xFF4
 12262                           prodl	equ	0xFF3
 12263                           intcon	equ	0xFF2
 12264                           postinc0	equ	0xFEE
 12265                           wreg	equ	0xFE8
 12266                           indf1	equ	0xFE7
 12267                           fsr1h	equ	0xFE2
 12268                           fsr1l	equ	0xFE1
 12269                           indf2	equ	0xFDF
 12270                           postinc2	equ	0xFDE
 12271                           postdec2	equ	0xFDD
 12272                           plusw2	equ	0xFDB
 12273                           fsr2h	equ	0xFDA
 12274                           fsr2l	equ	0xFD9
 12275                           status	equ	0xFD8
 12276                           
 12277 ;; *************** function _TMR2_Initialize *****************
 12278 ;; Defined at:
 12279 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 12280 ;; Parameters:    Size  Location     Type
 12281 ;;		None
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;		None
 12284 ;; Return value:  Size  Location     Type
 12285 ;;                  1    wreg      void 
 12286 ;; Registers used:
 12287 ;;		wreg, status,2, cstack
 12288 ;; Tracked objects:
 12289 ;;		On entry : F/0
 12290 ;;		On exit  : F/0
 12291 ;;		Unchanged: F/0
 12292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12293 ;;      Params:         0       0       0       0       0       0       0       0       0
 12294 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12295 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12296 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12297 ;;Total ram usage:        0 bytes
 12298 ;; Hardware stack levels used:    1
 12299 ;; Hardware stack levels required when called:   12
 12300 ;; This function calls:
 12301 ;;		_TMR2_StartTimer
 12302 ;; This function is called by:
 12303 ;;		_SYSTEM_Initialize
 12304 ;; This function uses a non-reentrant model
 12305 ;;
 12306                           
 12307                           	psect	text63
 12308  004AA8                     __ptext63:
 12309                           	opt stack 0
 12310  004AA8                     _TMR2_Initialize:
 12311                           	opt stack 17
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;tmr2.c: 62: T2CON = 0x7A;
 12315                           
 12316                           ;incstack = 0
 12317  004AA8  0E7A               	movlw	122
 12318  004AAA  6EBA               	movwf	4026,c	;volatile
 12319                           
 12320                           ;tmr2.c: 65: PR2 = 0x9B;
 12321  004AAC  0E9B               	movlw	155
 12322  004AAE  6EBB               	movwf	4027,c	;volatile
 12323                           
 12324                           ; BSR set to: 0
 12325                           ;tmr2.c: 68: TMR2 = 0x00;
 12326  004AB0  6ABC               	clrf	4028,c	;volatile
 12327                           
 12328                           ; BSR set to: 0
 12329                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 12330  004AB2  929E               	bcf	3998,1,c	;volatile
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;tmr2.c: 74: TMR2_StartTimer();
 12334  004AB4  EF16  F025         	goto	_TMR2_StartTimer	;wreg free
 12335  004AB8                     __end_of_TMR2_Initialize:
 12336                           	opt stack 0
 12337                           tblptru	equ	0xFF8
 12338                           tblptrh	equ	0xFF7
 12339                           tblptrl	equ	0xFF6
 12340                           tablat	equ	0xFF5
 12341                           prodh	equ	0xFF4
 12342                           prodl	equ	0xFF3
 12343                           intcon	equ	0xFF2
 12344                           postinc0	equ	0xFEE
 12345                           wreg	equ	0xFE8
 12346                           indf1	equ	0xFE7
 12347                           fsr1h	equ	0xFE2
 12348                           fsr1l	equ	0xFE1
 12349                           indf2	equ	0xFDF
 12350                           postinc2	equ	0xFDE
 12351                           postdec2	equ	0xFDD
 12352                           plusw2	equ	0xFDB
 12353                           fsr2h	equ	0xFDA
 12354                           fsr2l	equ	0xFD9
 12355                           status	equ	0xFD8
 12356                           
 12357 ;; *************** function _TMR2_StartTimer *****************
 12358 ;; Defined at:
 12359 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;		None
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;		None
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1    wreg      void 
 12366 ;; Registers used:
 12367 ;;		None
 12368 ;; Tracked objects:
 12369 ;;		On entry : F/0
 12370 ;;		On exit  : F/0
 12371 ;;		Unchanged: F/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12373 ;;      Params:         0       0       0       0       0       0       0       0       0
 12374 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12375 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12376 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12377 ;;Total ram usage:        0 bytes
 12378 ;; Hardware stack levels used:    1
 12379 ;; Hardware stack levels required when called:   11
 12380 ;; This function calls:
 12381 ;;		Nothing
 12382 ;; This function is called by:
 12383 ;;		_TMR2_Initialize
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text64
 12388  004A2C                     __ptext64:
 12389                           	opt stack 0
 12390  004A2C                     _TMR2_StartTimer:
 12391                           	opt stack 17
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 12395                           
 12396                           ; BSR set to: 0
 12397                           ;incstack = 0
 12398  004A2C  84BA               	bsf	4026,2,c	;volatile
 12399                           
 12400                           ; BSR set to: 0
 12401  004A2E  0012               	return		;funcret
 12402  004A30                     __end_of_TMR2_StartTimer:
 12403                           	opt stack 0
 12404                           tblptru	equ	0xFF8
 12405                           tblptrh	equ	0xFF7
 12406                           tblptrl	equ	0xFF6
 12407                           tablat	equ	0xFF5
 12408                           prodh	equ	0xFF4
 12409                           prodl	equ	0xFF3
 12410                           intcon	equ	0xFF2
 12411                           postinc0	equ	0xFEE
 12412                           wreg	equ	0xFE8
 12413                           indf1	equ	0xFE7
 12414                           fsr1h	equ	0xFE2
 12415                           fsr1l	equ	0xFE1
 12416                           indf2	equ	0xFDF
 12417                           postinc2	equ	0xFDE
 12418                           postdec2	equ	0xFDD
 12419                           plusw2	equ	0xFDB
 12420                           fsr2h	equ	0xFDA
 12421                           fsr2l	equ	0xFD9
 12422                           status	equ	0xFD8
 12423                           
 12424 ;; *************** function _TMR1_Initialize *****************
 12425 ;; Defined at:
 12426 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 12427 ;; Parameters:    Size  Location     Type
 12428 ;;		None
 12429 ;; Auto vars:     Size  Location     Type
 12430 ;;		None
 12431 ;; Return value:  Size  Location     Type
 12432 ;;                  1    wreg      void 
 12433 ;; Registers used:
 12434 ;;		wreg, status,2, status,0, cstack
 12435 ;; Tracked objects:
 12436 ;;		On entry : F/F
 12437 ;;		On exit  : F/0
 12438 ;;		Unchanged: 0/0
 12439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12440 ;;      Params:         0       0       0       0       0       0       0       0       0
 12441 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12442 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12443 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12444 ;;Total ram usage:        2 bytes
 12445 ;; Hardware stack levels used:    1
 12446 ;; Hardware stack levels required when called:   12
 12447 ;; This function calls:
 12448 ;;		_TMR1_StartTimer
 12449 ;; This function is called by:
 12450 ;;		_SYSTEM_Initialize
 12451 ;; This function uses a non-reentrant model
 12452 ;;
 12453                           
 12454                           	psect	text65
 12455  004E32                     __ptext65:
 12456                           	opt stack 0
 12457  004E32                     _TMR1_Initialize:
 12458                           	opt stack 17
 12459                           
 12460                           ; BSR set to: 15
 12461                           ;tmr1.c: 68: T1CON = 0x00;
 12462                           
 12463                           ; BSR set to: 0
 12464                           ;incstack = 0
 12465  004E32  6ACD               	clrf	4045,c	;volatile
 12466                           
 12467                           ;tmr1.c: 71: T1GCON = 0x00;
 12468  004E34  6ACC               	clrf	4044,c	;volatile
 12469                           
 12470                           ; BSR set to: 15
 12471                           ;tmr1.c: 74: TMR1H = 0xD0;
 12472  004E36  0ED0               	movlw	208
 12473  004E38  6ECF               	movwf	4047,c	;volatile
 12474                           
 12475                           ;tmr1.c: 77: TMR1L = 0x20;
 12476  004E3A  0E20               	movlw	32
 12477  004E3C  6ECE               	movwf	4046,c	;volatile
 12478                           
 12479                           ; BSR set to: 15
 12480                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 12481  004E3E  50CE               	movf	4046,w,c	;volatile
 12482  004E40  CFCF F0CE          	movff	4047,??_TMR1_Initialize	;volatile
 12483  004E44  0100               	movlb	0	; () banked
 12484  004E46  6BCF               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 12485  004E48  C0CE  F0CF         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 12486  004E4C  6BCE               	clrf	??_TMR1_Initialize& (0+255),b
 12487  004E4E  11CE               	iorwf	??_TMR1_Initialize& (0+255),w,b
 12488  004E50  6F8B               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 12489  004E52  51CF               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 12490  004E54  6F8C               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 12491                           
 12492                           ; BSR set to: 0
 12493                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 12494  004E56  909E               	bcf	3998,0,c	;volatile
 12495                           
 12496                           ; BSR set to: 0
 12497                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 12498  004E58  809D               	bsf	3997,0,c	;volatile
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;tmr1.c: 89: TMR1_StartTimer();
 12502  004E5A  EF14  F025         	goto	_TMR1_StartTimer	;wreg free
 12503  004E5E                     __end_of_TMR1_Initialize:
 12504                           	opt stack 0
 12505                           tblptru	equ	0xFF8
 12506                           tblptrh	equ	0xFF7
 12507                           tblptrl	equ	0xFF6
 12508                           tablat	equ	0xFF5
 12509                           prodh	equ	0xFF4
 12510                           prodl	equ	0xFF3
 12511                           intcon	equ	0xFF2
 12512                           postinc0	equ	0xFEE
 12513                           wreg	equ	0xFE8
 12514                           indf1	equ	0xFE7
 12515                           fsr1h	equ	0xFE2
 12516                           fsr1l	equ	0xFE1
 12517                           indf2	equ	0xFDF
 12518                           postinc2	equ	0xFDE
 12519                           postdec2	equ	0xFDD
 12520                           plusw2	equ	0xFDB
 12521                           fsr2h	equ	0xFDA
 12522                           fsr2l	equ	0xFD9
 12523                           status	equ	0xFD8
 12524                           
 12525 ;; *************** function _TMR1_StartTimer *****************
 12526 ;; Defined at:
 12527 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 12528 ;; Parameters:    Size  Location     Type
 12529 ;;		None
 12530 ;; Auto vars:     Size  Location     Type
 12531 ;;		None
 12532 ;; Return value:  Size  Location     Type
 12533 ;;                  1    wreg      void 
 12534 ;; Registers used:
 12535 ;;		None
 12536 ;; Tracked objects:
 12537 ;;		On entry : F/0
 12538 ;;		On exit  : F/0
 12539 ;;		Unchanged: F/0
 12540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12541 ;;      Params:         0       0       0       0       0       0       0       0       0
 12542 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12543 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12544 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12545 ;;Total ram usage:        0 bytes
 12546 ;; Hardware stack levels used:    1
 12547 ;; Hardware stack levels required when called:   11
 12548 ;; This function calls:
 12549 ;;		Nothing
 12550 ;; This function is called by:
 12551 ;;		_TMR1_Initialize
 12552 ;; This function uses a non-reentrant model
 12553 ;;
 12554                           
 12555                           	psect	text66
 12556  004A28                     __ptext66:
 12557                           	opt stack 0
 12558  004A28                     _TMR1_StartTimer:
 12559                           	opt stack 17
 12560                           
 12561                           ; BSR set to: 0
 12562                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;incstack = 0
 12566  004A28  80CD               	bsf	4045,0,c	;volatile
 12567                           
 12568                           ; BSR set to: 0
 12569  004A2A  0012               	return		;funcret
 12570  004A2C                     __end_of_TMR1_StartTimer:
 12571                           	opt stack 0
 12572                           tblptru	equ	0xFF8
 12573                           tblptrh	equ	0xFF7
 12574                           tblptrl	equ	0xFF6
 12575                           tablat	equ	0xFF5
 12576                           prodh	equ	0xFF4
 12577                           prodl	equ	0xFF3
 12578                           intcon	equ	0xFF2
 12579                           postinc0	equ	0xFEE
 12580                           wreg	equ	0xFE8
 12581                           indf1	equ	0xFE7
 12582                           fsr1h	equ	0xFE2
 12583                           fsr1l	equ	0xFE1
 12584                           indf2	equ	0xFDF
 12585                           postinc2	equ	0xFDE
 12586                           postdec2	equ	0xFDD
 12587                           plusw2	equ	0xFDB
 12588                           fsr2h	equ	0xFDA
 12589                           fsr2l	equ	0xFD9
 12590                           status	equ	0xFD8
 12591                           
 12592 ;; *************** function _SPI_Initialize *****************
 12593 ;; Defined at:
 12594 ;;		line 64 in file "../Includes/MccGenerated/spi.c"
 12595 ;; Parameters:    Size  Location     Type
 12596 ;;		None
 12597 ;; Auto vars:     Size  Location     Type
 12598 ;;		None
 12599 ;; Return value:  Size  Location     Type
 12600 ;;                  1    wreg      void 
 12601 ;; Registers used:
 12602 ;;		wreg, status,2
 12603 ;; Tracked objects:
 12604 ;;		On entry : F/F
 12605 ;;		On exit  : F/F
 12606 ;;		Unchanged: E/0
 12607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12608 ;;      Params:         0       0       0       0       0       0       0       0       0
 12609 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12610 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12611 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12612 ;;Total ram usage:        0 bytes
 12613 ;; Hardware stack levels used:    1
 12614 ;; Hardware stack levels required when called:   11
 12615 ;; This function calls:
 12616 ;;		Nothing
 12617 ;; This function is called by:
 12618 ;;		_SYSTEM_Initialize
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622                           	psect	text67
 12623  004A8C                     __ptext67:
 12624                           	opt stack 0
 12625  004A8C                     _SPI_Initialize:
 12626                           	opt stack 18
 12627                           
 12628                           ; BSR set to: 15
 12629                           ;spi.c: 69: SSP1STAT = 0x00;
 12630                           
 12631                           ; BSR set to: 0
 12632                           ;incstack = 0
 12633  004A8C  6AC7               	clrf	4039,c	;volatile
 12634                           
 12635                           ; BSR set to: 15
 12636                           ;spi.c: 72: SSP1CON1 = 0x21;
 12637  004A8E  0E21               	movlw	33
 12638  004A90  6EC6               	movwf	4038,c	;volatile
 12639                           
 12640                           ; BSR set to: 15
 12641                           ;spi.c: 75: SSP1ADD = 0x00;
 12642  004A92  6AC8               	clrf	4040,c	;volatile
 12643                           
 12644                           ; BSR set to: 15
 12645                           ;spi.c: 77: CKP = 1;
 12646  004A94  88C6               	bsf	4038,4,c	;volatile
 12647                           
 12648                           ; BSR set to: 15
 12649                           ;spi.c: 78: CKE = 0;
 12650  004A96  9CC7               	bcf	4039,6,c	;volatile
 12651                           
 12652                           ; BSR set to: 15
 12653  004A98  0012               	return		;funcret
 12654  004A9A                     __end_of_SPI_Initialize:
 12655                           	opt stack 0
 12656                           tblptru	equ	0xFF8
 12657                           tblptrh	equ	0xFF7
 12658                           tblptrl	equ	0xFF6
 12659                           tablat	equ	0xFF5
 12660                           prodh	equ	0xFF4
 12661                           prodl	equ	0xFF3
 12662                           intcon	equ	0xFF2
 12663                           postinc0	equ	0xFEE
 12664                           wreg	equ	0xFE8
 12665                           indf1	equ	0xFE7
 12666                           fsr1h	equ	0xFE2
 12667                           fsr1l	equ	0xFE1
 12668                           indf2	equ	0xFDF
 12669                           postinc2	equ	0xFDE
 12670                           postdec2	equ	0xFDD
 12671                           plusw2	equ	0xFDB
 12672                           fsr2h	equ	0xFDA
 12673                           fsr2l	equ	0xFD9
 12674                           status	equ	0xFD8
 12675                           
 12676 ;; *************** function _PIN_MANAGER_Initialize *****************
 12677 ;; Defined at:
 12678 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 12679 ;; Parameters:    Size  Location     Type
 12680 ;;		None
 12681 ;; Auto vars:     Size  Location     Type
 12682 ;;		None
 12683 ;; Return value:  Size  Location     Type
 12684 ;;                  1    wreg      void 
 12685 ;; Registers used:
 12686 ;;		None
 12687 ;; Tracked objects:
 12688 ;;		On entry : 0/0
 12689 ;;		On exit  : F/F
 12690 ;;		Unchanged: 0/0
 12691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12692 ;;      Params:         0       0       0       0       0       0       0       0       0
 12693 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12694 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12695 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12696 ;;Total ram usage:        0 bytes
 12697 ;; Hardware stack levels used:    1
 12698 ;; Hardware stack levels required when called:   11
 12699 ;; This function calls:
 12700 ;;		Nothing
 12701 ;; This function is called by:
 12702 ;;		_moteApp_GoToSleep
 12703 ;;		_SYSTEM_Initialize
 12704 ;; This function uses a non-reentrant model
 12705 ;;
 12706                           
 12707                           	psect	text68
 12708  00524A                     __ptext68:
 12709                           	opt stack 0
 12710  00524A                     _PIN_MANAGER_Initialize:
 12711                           	opt stack 16
 12712                           
 12713                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 12714                           
 12715                           ; BSR set to: 15
 12716                           ;incstack = 0
 12717  00524A  8092               	bsf	3986,0,c	;volatile
 12718                           
 12719                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 12720  00524C  8292               	bsf	3986,1,c	;volatile
 12721                           
 12722                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 12723  00524E  8492               	bsf	3986,2,c	;volatile
 12724                           
 12725                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 12726  005250  8692               	bsf	3986,3,c	;volatile
 12727                           
 12728                           ;pin_manager.c: 59: TRISAbits.TRISA4 = 0;
 12729  005252  9892               	bcf	3986,4,c	;volatile
 12730                           
 12731                           ;pin_manager.c: 60: TRISAbits.TRISA5 = 0;
 12732  005254  9A92               	bcf	3986,5,c	;volatile
 12733                           
 12734                           ;pin_manager.c: 61: TRISAbits.TRISA6 = 0;
 12735  005256  9C92               	bcf	3986,6,c	;volatile
 12736                           
 12737                           ;pin_manager.c: 62: TRISAbits.TRISA7 = 0;
 12738  005258  9E92               	bcf	3986,7,c	;volatile
 12739                           
 12740                           ;pin_manager.c: 64: TRISBbits.TRISB0 = 0;
 12741  00525A  9093               	bcf	3987,0,c	;volatile
 12742                           
 12743                           ;pin_manager.c: 65: TRISBbits.TRISB1 = 0;
 12744  00525C  9293               	bcf	3987,1,c	;volatile
 12745                           
 12746                           ;pin_manager.c: 66: TRISBbits.TRISB2 = 0;
 12747  00525E  9493               	bcf	3987,2,c	;volatile
 12748                           
 12749                           ;pin_manager.c: 67: TRISBbits.TRISB3 = 0;
 12750  005260  9693               	bcf	3987,3,c	;volatile
 12751                           
 12752                           ;pin_manager.c: 68: TRISBbits.TRISB5 = 0;
 12753  005262  9A93               	bcf	3987,5,c	;volatile
 12754                           
 12755                           ;pin_manager.c: 70: TRISCbits.TRISC0 = 1;
 12756  005264  8094               	bsf	3988,0,c	;volatile
 12757                           
 12758                           ;pin_manager.c: 71: TRISCbits.TRISC1 = 1;
 12759  005266  8294               	bsf	3988,1,c	;volatile
 12760                           
 12761                           ;pin_manager.c: 72: TRISCbits.TRISC2 = 1;
 12762  005268  8494               	bsf	3988,2,c	;volatile
 12763                           
 12764                           ;pin_manager.c: 73: TRISCbits.TRISC6 = 0;
 12765  00526A  9C94               	bcf	3988,6,c	;volatile
 12766                           
 12767                           ;pin_manager.c: 74: TRISCbits.TRISC7 = 1;
 12768  00526C  8E94               	bsf	3988,7,c	;volatile
 12769                           
 12770                           ;pin_manager.c: 75: TRISBbits.TRISB6 = 0;
 12771  00526E  9C93               	bcf	3987,6,c	;volatile
 12772                           
 12773                           ;pin_manager.c: 76: TRISBbits.TRISB7 = 1;
 12774  005270  8E93               	bsf	3987,7,c	;volatile
 12775                           
 12776                           ;pin_manager.c: 79: LATAbits.LATA4 = 1;
 12777  005272  8889               	bsf	3977,4,c	;volatile
 12778                           
 12779                           ;pin_manager.c: 80: LATAbits.LATA5 = 0;
 12780  005274  9A89               	bcf	3977,5,c	;volatile
 12781                           
 12782                           ;pin_manager.c: 81: LATAbits.LATA6 = 0;
 12783  005276  9C89               	bcf	3977,6,c	;volatile
 12784                           
 12785                           ;pin_manager.c: 82: LATAbits.LATA7 = 0;
 12786  005278  9E89               	bcf	3977,7,c	;volatile
 12787                           
 12788                           ;pin_manager.c: 84: LATBbits.LATB2 = 0;
 12789  00527A  948A               	bcf	3978,2,c	;volatile
 12790                           
 12791                           ;pin_manager.c: 85: LATBbits.LATB0 = 0;
 12792  00527C  908A               	bcf	3978,0,c	;volatile
 12793                           
 12794                           ;pin_manager.c: 86: LATBbits.LATB5 = 0;
 12795  00527E  9A8A               	bcf	3978,5,c	;volatile
 12796                           
 12797                           ;pin_manager.c: 87: LATBbits.LATB6 = 0;
 12798  005280  9C8A               	bcf	3978,6,c	;volatile
 12799                           
 12800                           ;pin_manager.c: 88: LATBbits.LATB7 = 0;
 12801  005282  9E8A               	bcf	3978,7,c	;volatile
 12802                           
 12803                           ;pin_manager.c: 90: LATCbits.LATC2 = 0;
 12804  005284  948B               	bcf	3979,2,c	;volatile
 12805                           
 12806                           ;pin_manager.c: 91: LATCbits.LATC6 = 0;
 12807  005286  9C8B               	bcf	3979,6,c	;volatile
 12808                           
 12809                           ;pin_manager.c: 93: ANSELAbits.ANSA0 = 0;
 12810  005288  010F               	movlb	15	; () banked
 12811  00528A  915B               	bcf	91,0,b	;volatile
 12812                           
 12813                           ;pin_manager.c: 94: ANSELAbits.ANSA1 = 1;
 12814  00528C  835B               	bsf	91,1,b	;volatile
 12815                           
 12816                           ;pin_manager.c: 95: ANSELAbits.ANSA2 = 1;
 12817  00528E  855B               	bsf	91,2,b	;volatile
 12818                           
 12819                           ;pin_manager.c: 96: ANSELAbits.ANSA3 = 1;
 12820  005290  875B               	bsf	91,3,b	;volatile
 12821                           
 12822                           ;pin_manager.c: 97: ANSELCbits.ANSC7 = 0;
 12823  005292  9F5D               	bcf	93,7,b	;volatile
 12824                           
 12825                           ;pin_manager.c: 98: ANSELCbits.ANSC6 = 0;
 12826  005294  9D5D               	bcf	93,6,b	;volatile
 12827                           
 12828                           ; BSR set to: 15
 12829  005296  0012               	return		;funcret
 12830  005298                     __end_of_PIN_MANAGER_Initialize:
 12831                           	opt stack 0
 12832                           tblptru	equ	0xFF8
 12833                           tblptrh	equ	0xFF7
 12834                           tblptrl	equ	0xFF6
 12835                           tablat	equ	0xFF5
 12836                           prodh	equ	0xFF4
 12837                           prodl	equ	0xFF3
 12838                           intcon	equ	0xFF2
 12839                           postinc0	equ	0xFEE
 12840                           wreg	equ	0xFE8
 12841                           indf1	equ	0xFE7
 12842                           fsr1h	equ	0xFE2
 12843                           fsr1l	equ	0xFE1
 12844                           indf2	equ	0xFDF
 12845                           postinc2	equ	0xFDE
 12846                           postdec2	equ	0xFDD
 12847                           plusw2	equ	0xFDB
 12848                           fsr2h	equ	0xFDA
 12849                           fsr2l	equ	0xFD9
 12850                           status	equ	0xFD8
 12851                           
 12852 ;; *************** function _OSCILLATOR_Initialize *****************
 12853 ;; Defined at:
 12854 ;;		line 105 in file "../Includes/MccGenerated/mcc.c"
 12855 ;; Parameters:    Size  Location     Type
 12856 ;;		None
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;		None
 12859 ;; Return value:  Size  Location     Type
 12860 ;;                  1    wreg      void 
 12861 ;; Registers used:
 12862 ;;		wreg, status,2
 12863 ;; Tracked objects:
 12864 ;;		On entry : 0/0
 12865 ;;		On exit  : 0/0
 12866 ;;		Unchanged: 0/0
 12867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12868 ;;      Params:         0       0       0       0       0       0       0       0       0
 12869 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12870 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12871 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12872 ;;Total ram usage:        0 bytes
 12873 ;; Hardware stack levels used:    1
 12874 ;; Hardware stack levels required when called:   11
 12875 ;; This function calls:
 12876 ;;		Nothing
 12877 ;; This function is called by:
 12878 ;;		_SYSTEM_Initialize
 12879 ;; This function uses a non-reentrant model
 12880 ;;
 12881                           
 12882                           	psect	text69
 12883  004B50                     __ptext69:
 12884                           	opt stack 0
 12885  004B50                     _OSCILLATOR_Initialize:
 12886                           	opt stack 18
 12887                           
 12888                           ;mcc.c: 107: OSCTUNE = 0x80;
 12889                           
 12890                           ; BSR set to: 15
 12891                           ;incstack = 0
 12892  004B50  0E80               	movlw	128
 12893  004B52  6E9B               	movwf	3995,c	;volatile
 12894                           
 12895                           ;mcc.c: 108: OSCCON = 0x70;
 12896  004B54  0E70               	movlw	112
 12897  004B56  6ED3               	movwf	4051,c	;volatile
 12898                           
 12899                           ;mcc.c: 109: OSCCON2 = 0x10;
 12900  004B58  0E10               	movlw	16
 12901  004B5A  6ED2               	movwf	4050,c	;volatile
 12902  004B5C                     l1004:
 12903  004B5C  AED2               	btfss	4050,7,c	;volatile
 12904  004B5E  D7FE               	goto	l1004
 12905                           
 12906                           ;mcc.c: 111: ACTCON = 0x90;
 12907  004B60  0E90               	movlw	144
 12908  004B62  6EB5               	movwf	4021,c	;volatile
 12909  004B64  0C90               	retlw	144	;funcret
 12910  004B66                     __end_of_OSCILLATOR_Initialize:
 12911                           	opt stack 0
 12912                           tblptru	equ	0xFF8
 12913                           tblptrh	equ	0xFF7
 12914                           tblptrl	equ	0xFF6
 12915                           tablat	equ	0xFF5
 12916                           prodh	equ	0xFF4
 12917                           prodl	equ	0xFF3
 12918                           intcon	equ	0xFF2
 12919                           postinc0	equ	0xFEE
 12920                           wreg	equ	0xFE8
 12921                           indf1	equ	0xFE7
 12922                           fsr1h	equ	0xFE2
 12923                           fsr1l	equ	0xFE1
 12924                           indf2	equ	0xFDF
 12925                           postinc2	equ	0xFDE
 12926                           postdec2	equ	0xFDD
 12927                           plusw2	equ	0xFDB
 12928                           fsr2h	equ	0xFDA
 12929                           fsr2l	equ	0xFD9
 12930                           status	equ	0xFD8
 12931                           
 12932 ;; *************** function _EUSART_Initialize *****************
 12933 ;; Defined at:
 12934 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 12935 ;; Parameters:    Size  Location     Type
 12936 ;;		None
 12937 ;; Auto vars:     Size  Location     Type
 12938 ;;		None
 12939 ;; Return value:  Size  Location     Type
 12940 ;;                  1    wreg      void 
 12941 ;; Registers used:
 12942 ;;		wreg, status,2
 12943 ;; Tracked objects:
 12944 ;;		On entry : 0/F
 12945 ;;		On exit  : 0/0
 12946 ;;		Unchanged: 0/0
 12947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12948 ;;      Params:         0       0       0       0       0       0       0       0       0
 12949 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12950 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12951 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12952 ;;Total ram usage:        0 bytes
 12953 ;; Hardware stack levels used:    1
 12954 ;; Hardware stack levels required when called:   11
 12955 ;; This function calls:
 12956 ;;		Nothing
 12957 ;; This function is called by:
 12958 ;;		_moteApp_GoToSleep
 12959 ;;		_SYSTEM_Initialize
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963                           	psect	text70
 12964  004E06                     __ptext70:
 12965                           	opt stack 0
 12966  004E06                     _EUSART_Initialize:
 12967                           	opt stack 16
 12968                           
 12969                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 12970                           
 12971                           ;incstack = 0
 12972  004E06  9A9D               	bcf	3997,5,c	;volatile
 12973                           
 12974                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 12975  004E08  989D               	bcf	3997,4,c	;volatile
 12976                           
 12977                           ;eusart.c: 85: BAUDCON = 0x48;
 12978  004E0A  0E48               	movlw	72
 12979  004E0C  6EB8               	movwf	4024,c	;volatile
 12980                           
 12981                           ;eusart.c: 88: RCSTA = 0x90;
 12982  004E0E  0E90               	movlw	144
 12983  004E10  6EAB               	movwf	4011,c	;volatile
 12984                           
 12985                           ;eusart.c: 91: TXSTA = 0x26;
 12986  004E12  0E26               	movlw	38
 12987  004E14  6EAC               	movwf	4012,c	;volatile
 12988                           
 12989                           ;eusart.c: 95: SPBRG = 0x71;
 12990  004E16  0E71               	movlw	113
 12991  004E18  6EAF               	movwf	4015,c	;volatile
 12992                           
 12993                           ;eusart.c: 100: SPBRGH = 0x02;
 12994  004E1A  0E02               	movlw	2
 12995  004E1C  6EB0               	movwf	4016,c	;volatile
 12996                           
 12997                           ;eusart.c: 103: eusartTxHead = 0;
 12998  004E1E  6A27               	clrf	_eusartTxHead,c
 12999                           
 13000                           ;eusart.c: 104: eusartTxTail = 0;
 13001  004E20  6A28               	clrf	_eusartTxTail,c
 13002                           
 13003                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 13004  004E22  0E40               	movlw	64
 13005  004E24  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 13006                           
 13007                           ;eusart.c: 107: eusartRxHead = 0;
 13008  004E26  6A24               	clrf	_eusartRxHead,c
 13009                           
 13010                           ;eusart.c: 108: eusartRxTail = 0;
 13011  004E28  6A25               	clrf	_eusartRxTail,c
 13012                           
 13013                           ;eusart.c: 109: eusartRxCount = 0;
 13014  004E2A  6A23               	clrf	_eusartRxCount,c	;volatile
 13015                           
 13016                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 13017  004E2C  8A9D               	bsf	3997,5,c	;volatile
 13018                           
 13019                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 13020  004E2E  88AB               	bsf	4011,4,c	;volatile
 13021  004E30  0012               	return		;funcret
 13022  004E32                     __end_of_EUSART_Initialize:
 13023                           	opt stack 0
 13024                           tblptru	equ	0xFF8
 13025                           tblptrh	equ	0xFF7
 13026                           tblptrl	equ	0xFF6
 13027                           tablat	equ	0xFF5
 13028                           prodh	equ	0xFF4
 13029                           prodl	equ	0xFF3
 13030                           intcon	equ	0xFF2
 13031                           postinc0	equ	0xFEE
 13032                           wreg	equ	0xFE8
 13033                           indf1	equ	0xFE7
 13034                           fsr1h	equ	0xFE2
 13035                           fsr1l	equ	0xFE1
 13036                           indf2	equ	0xFDF
 13037                           postinc2	equ	0xFDE
 13038                           postdec2	equ	0xFDD
 13039                           plusw2	equ	0xFDB
 13040                           fsr2h	equ	0xFDA
 13041                           fsr2l	equ	0xFD9
 13042                           status	equ	0xFD8
 13043                           
 13044 ;; *************** function _CMP1_Initialize *****************
 13045 ;; Defined at:
 13046 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 13047 ;; Parameters:    Size  Location     Type
 13048 ;;		None
 13049 ;; Auto vars:     Size  Location     Type
 13050 ;;		None
 13051 ;; Return value:  Size  Location     Type
 13052 ;;                  1    wreg      void 
 13053 ;; Registers used:
 13054 ;;		wreg, status,2
 13055 ;; Tracked objects:
 13056 ;;		On entry : 0/0
 13057 ;;		On exit  : 0/0
 13058 ;;		Unchanged: 0/0
 13059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13060 ;;      Params:         0       0       0       0       0       0       0       0       0
 13061 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13062 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13063 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13064 ;;Total ram usage:        0 bytes
 13065 ;; Hardware stack levels used:    1
 13066 ;; Hardware stack levels required when called:   11
 13067 ;; This function calls:
 13068 ;;		Nothing
 13069 ;; This function is called by:
 13070 ;;		_SYSTEM_Initialize
 13071 ;; This function uses a non-reentrant model
 13072 ;;
 13073                           
 13074                           	psect	text71
 13075  004AC8                     __ptext71:
 13076                           	opt stack 0
 13077  004AC8                     _CMP1_Initialize:
 13078                           	opt stack 18
 13079                           
 13080                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 13081                           
 13082                           ;incstack = 0
 13083  004AC8  9CA0               	bcf	4000,6,c	;volatile
 13084                           
 13085                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 13086  004ACA  0E9C               	movlw	156
 13087  004ACC  6E98               	movwf	3992,c	;volatile
 13088                           
 13089                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 13090  004ACE  8A9A               	bsf	3994,5,c	;volatile
 13091                           
 13092                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 13093  004AD0  929A               	bcf	3994,1,c	;volatile
 13094                           
 13095                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 13096  004AD2  969A               	bcf	3994,3,c	;volatile
 13097                           
 13098                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 13099  004AD4  9CA1               	bcf	4001,6,c	;volatile
 13100                           
 13101                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 13102  004AD6  9CA0               	bcf	4000,6,c	;volatile
 13103  004AD8  0C9C               	retlw	156	;funcret
 13104  004ADA                     __end_of_CMP1_Initialize:
 13105                           	opt stack 0
 13106                           tblptru	equ	0xFF8
 13107                           tblptrh	equ	0xFF7
 13108                           tblptrl	equ	0xFF6
 13109                           tablat	equ	0xFF5
 13110                           prodh	equ	0xFF4
 13111                           prodl	equ	0xFF3
 13112                           intcon	equ	0xFF2
 13113                           postinc0	equ	0xFEE
 13114                           wreg	equ	0xFE8
 13115                           indf1	equ	0xFE7
 13116                           fsr1h	equ	0xFE2
 13117                           fsr1l	equ	0xFE1
 13118                           indf2	equ	0xFDF
 13119                           postinc2	equ	0xFDE
 13120                           postdec2	equ	0xFDD
 13121                           plusw2	equ	0xFDB
 13122                           fsr2h	equ	0xFDA
 13123                           fsr2l	equ	0xFD9
 13124                           status	equ	0xFD8
 13125                           
 13126 ;; *************** function _ADC_Initialize *****************
 13127 ;; Defined at:
 13128 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 13129 ;; Parameters:    Size  Location     Type
 13130 ;;		None
 13131 ;; Auto vars:     Size  Location     Type
 13132 ;;		None
 13133 ;; Return value:  Size  Location     Type
 13134 ;;                  1    wreg      void 
 13135 ;; Registers used:
 13136 ;;		wreg, status,2
 13137 ;; Tracked objects:
 13138 ;;		On entry : 0/0
 13139 ;;		On exit  : 0/0
 13140 ;;		Unchanged: 0/0
 13141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13142 ;;      Params:         0       0       0       0       0       0       0       0       0
 13143 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13144 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13145 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13146 ;;Total ram usage:        0 bytes
 13147 ;; Hardware stack levels used:    1
 13148 ;; Hardware stack levels required when called:   11
 13149 ;; This function calls:
 13150 ;;		Nothing
 13151 ;; This function is called by:
 13152 ;;		_SYSTEM_Initialize
 13153 ;; This function uses a non-reentrant model
 13154 ;;
 13155                           
 13156                           	psect	text72
 13157  004B3A                     __ptext72:
 13158                           	opt stack 0
 13159  004B3A                     _ADC_Initialize:
 13160                           	opt stack 18
 13161                           
 13162                           ;adc.c: 68: VREFCON0 = 0b10100000;
 13163                           
 13164                           ;incstack = 0
 13165  004B3A  0EA0               	movlw	160
 13166  004B3C  6E7D               	movwf	3965,c	;volatile
 13167                           
 13168                           ;adc.c: 70: ADCON0 = 0x01;
 13169  004B3E  0E01               	movlw	1
 13170  004B40  6EC2               	movwf	4034,c	;volatile
 13171                           
 13172                           ;adc.c: 73: ADCON1 = 0x08;
 13173  004B42  0E08               	movlw	8
 13174  004B44  6EC1               	movwf	4033,c	;volatile
 13175                           
 13176                           ;adc.c: 76: ADCON2 = 0b10001110;
 13177  004B46  0E8E               	movlw	142
 13178  004B48  6EC0               	movwf	4032,c	;volatile
 13179                           
 13180                           ;adc.c: 79: ADRESL = 0x00;
 13181  004B4A  6AC3               	clrf	4035,c	;volatile
 13182                           
 13183                           ;adc.c: 82: ADRESH = 0x00;
 13184  004B4C  6AC4               	clrf	4036,c	;volatile
 13185  004B4E  0012               	return		;funcret
 13186  004B50                     __end_of_ADC_Initialize:
 13187                           	opt stack 0
 13188                           tblptru	equ	0xFF8
 13189                           tblptrh	equ	0xFF7
 13190                           tblptrl	equ	0xFF6
 13191                           tablat	equ	0xFF5
 13192                           prodh	equ	0xFF4
 13193                           prodl	equ	0xFF3
 13194                           intcon	equ	0xFF2
 13195                           postinc0	equ	0xFEE
 13196                           wreg	equ	0xFE8
 13197                           indf1	equ	0xFE7
 13198                           fsr1h	equ	0xFE2
 13199                           fsr1l	equ	0xFE1
 13200                           indf2	equ	0xFDF
 13201                           postinc2	equ	0xFDE
 13202                           postdec2	equ	0xFDD
 13203                           plusw2	equ	0xFDB
 13204                           fsr2h	equ	0xFDA
 13205                           fsr2l	equ	0xFD9
 13206                           status	equ	0xFD8
 13207                           
 13208 ;; *************** function _MOTEapp_handlerState *****************
 13209 ;; Defined at:
 13210 ;;		line 168 in file "../Includes/Board/MOTEapp.c"
 13211 ;; Parameters:    Size  Location     Type
 13212 ;;  state           1    wreg     enum E6355
 13213 ;; Auto vars:     Size  Location     Type
 13214 ;;  state           1    0[BANK0 ] enum E6355
 13215 ;; Return value:  Size  Location     Type
 13216 ;;                  1    wreg      void 
 13217 ;; Registers used:
 13218 ;;		wreg
 13219 ;; Tracked objects:
 13220 ;;		On entry : F/0
 13221 ;;		On exit  : 0/0
 13222 ;;		Unchanged: 0/0
 13223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13224 ;;      Params:         0       0       0       0       0       0       0       0       0
 13225 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13226 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13227 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13228 ;;Total ram usage:        1 bytes
 13229 ;; Hardware stack levels used:    1
 13230 ;; Hardware stack levels required when called:   11
 13231 ;; This function calls:
 13232 ;;		Nothing
 13233 ;; This function is called by:
 13234 ;;		_main
 13235 ;; This function uses a non-reentrant model
 13236 ;;
 13237                           
 13238                           	psect	text73
 13239  004A44                     __ptext73:
 13240                           	opt stack 0
 13241  004A44                     _MOTEapp_handlerState:
 13242                           	opt stack 19
 13243                           
 13244                           ;incstack = 0
 13245                           ;MOTEapp_handlerState@state stored from wreg
 13246  004A44  6FCE               	movwf	MOTEapp_handlerState@state& (0+255),b
 13247                           
 13248                           ;MOTEapp.c: 170: moteState = state;
 13249  004A46  C0CE  F0F7         	movff	MOTEapp_handlerState@state,_moteState
 13250  004A4A  0012               	return		;funcret
 13251  004A4C                     __end_of_MOTEapp_handlerState:
 13252                           	opt stack 0
 13253                           tblptru	equ	0xFF8
 13254                           tblptrh	equ	0xFF7
 13255                           tblptrl	equ	0xFF6
 13256                           tablat	equ	0xFF5
 13257                           prodh	equ	0xFF4
 13258                           prodl	equ	0xFF3
 13259                           intcon	equ	0xFF2
 13260                           postinc0	equ	0xFEE
 13261                           wreg	equ	0xFE8
 13262                           indf1	equ	0xFE7
 13263                           fsr1h	equ	0xFE2
 13264                           fsr1l	equ	0xFE1
 13265                           indf2	equ	0xFDF
 13266                           postinc2	equ	0xFDE
 13267                           postdec2	equ	0xFDD
 13268                           plusw2	equ	0xFDB
 13269                           fsr2h	equ	0xFDA
 13270                           fsr2l	equ	0xFD9
 13271                           status	equ	0xFD8
 13272                           
 13273 ;; *************** function _DATAEE_ReadByte *****************
 13274 ;; Defined at:
 13275 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 13276 ;; Parameters:    Size  Location     Type
 13277 ;;  bAdd            1    wreg     unsigned char 
 13278 ;; Auto vars:     Size  Location     Type
 13279 ;;  bAdd            1    0[BANK0 ] unsigned char 
 13280 ;; Return value:  Size  Location     Type
 13281 ;;                  1    wreg      unsigned char 
 13282 ;; Registers used:
 13283 ;;		wreg, status,2
 13284 ;; Tracked objects:
 13285 ;;		On entry : F/0
 13286 ;;		On exit  : 0/0
 13287 ;;		Unchanged: 0/0
 13288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13289 ;;      Params:         0       0       0       0       0       0       0       0       0
 13290 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13291 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13292 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13293 ;;Total ram usage:        1 bytes
 13294 ;; Hardware stack levels used:    1
 13295 ;; Hardware stack levels required when called:   11
 13296 ;; This function calls:
 13297 ;;		Nothing
 13298 ;; This function is called by:
 13299 ;;		_main
 13300 ;; This function uses a non-reentrant model
 13301 ;;
 13302                           
 13303                           	psect	text74
 13304  004AFE                     __ptext74:
 13305                           	opt stack 0
 13306  004AFE                     _DATAEE_ReadByte:
 13307                           	opt stack 19
 13308                           
 13309                           ;incstack = 0
 13310                           ;DATAEE_ReadByte@bAdd stored from wreg
 13311  004AFE  6FCE               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 13312                           
 13313                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 13314  004B00  C0CE  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 13315                           
 13316                           ;memory.c: 191: EECON1bits.CFGS = 0;
 13317  004B04  9CA6               	bcf	4006,6,c	;volatile
 13318                           
 13319                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 13320  004B06  9EA6               	bcf	4006,7,c	;volatile
 13321                           
 13322                           ;memory.c: 193: EECON1bits.RD = 1;
 13323  004B08  80A6               	bsf	4006,0,c	;volatile
 13324                           
 13325                           ;memory.c: 194: __nop();
 13326  004B0A  F000               	nop	
 13327                           
 13328                           ;memory.c: 195: __nop();
 13329  004B0C  F000               	nop	
 13330                           
 13331                           ;memory.c: 197: return (EEDATA);
 13332  004B0E  50A8               	movf	4008,w,c	;volatile
 13333  004B10  0012               	return		;funcret
 13334  004B12                     __end_of_DATAEE_ReadByte:
 13335                           	opt stack 0
 13336                           tblptru	equ	0xFF8
 13337                           tblptrh	equ	0xFF7
 13338                           tblptrl	equ	0xFF6
 13339                           tablat	equ	0xFF5
 13340                           prodh	equ	0xFF4
 13341                           prodl	equ	0xFF3
 13342                           intcon	equ	0xFF2
 13343                           postinc0	equ	0xFEE
 13344                           wreg	equ	0xFE8
 13345                           indf1	equ	0xFE7
 13346                           fsr1h	equ	0xFE2
 13347                           fsr1l	equ	0xFE1
 13348                           indf2	equ	0xFDF
 13349                           postinc2	equ	0xFDE
 13350                           postdec2	equ	0xFDD
 13351                           plusw2	equ	0xFDB
 13352                           fsr2h	equ	0xFDA
 13353                           fsr2l	equ	0xFD9
 13354                           status	equ	0xFD8
 13355                           
 13356 ;; *************** function _INTERRUPT_InterruptManager *****************
 13357 ;; Defined at:
 13358 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 13359 ;; Parameters:    Size  Location     Type
 13360 ;;		None
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;		None
 13363 ;; Return value:  Size  Location     Type
 13364 ;;                  1    wreg      void 
 13365 ;; Registers used:
 13366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13367 ;; Tracked objects:
 13368 ;;		On entry : 0/0
 13369 ;;		On exit  : 0/0
 13370 ;;		Unchanged: 0/0
 13371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13372 ;;      Params:         0       0       0       0       0       0       0       0       0
 13373 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13374 ;;      Temps:         12       0       0       0       0       0       0       0       0
 13375 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13376 ;;Total ram usage:       12 bytes
 13377 ;; Hardware stack levels used:    1
 13378 ;; Hardware stack levels required when called:   10
 13379 ;; This function calls:
 13380 ;;		_CMP1_ISR
 13381 ;;		_EUSART_Receive_ISR
 13382 ;;		_EUSART_Transmit_ISR
 13383 ;;		_TMR1_ISR
 13384 ;;		_TMRapp_Tick
 13385 ;;		_USBDeviceTasks
 13386 ;;		_USBapp_setrxByteFlag
 13387 ;; This function is called by:
 13388 ;;		Interrupt level 2
 13389 ;; This function uses a non-reentrant model
 13390 ;;
 13391                           
 13392                           	psect	intcode
 13393  001008                     __pintcode:
 13394                           	opt stack 0
 13395  001008                     _INTERRUPT_InterruptManager:
 13396                           	opt stack 10
 13397                           
 13398                           ;incstack = 0
 13399  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13400  00100A  CFFA F04F          	movff	pclath,??_INTERRUPT_InterruptManager
 13401  00100E  CFFB F050          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13402  001012  CFE1 F051          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 13403  001016  CFE2 F052          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 13404  00101A  CFD9 F053          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 13405  00101E  CFDA F054          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 13406  001022  CFF3 F055          	movff	prodl,??_INTERRUPT_InterruptManager+6
 13407  001026  CFF4 F056          	movff	prodh,??_INTERRUPT_InterruptManager+7
 13408  00102A  CFF6 F057          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 13409  00102E  CFF7 F058          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 13410  001032  CFF8 F059          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 13411  001036  CFF5 F05A          	movff	tablat,??_INTERRUPT_InterruptManager+11
 13412                           
 13413                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 13414  00103A  B09D               	btfsc	3997,0,c	;volatile
 13415  00103C  A09E               	btfss	3998,0,c	;volatile
 13416  00103E  D005               	goto	i2l964
 13417                           
 13418                           ;interrupt_manager.c: 59: {
 13419                           ;interrupt_manager.c: 60: TMR1_ISR();
 13420  001040  EC2E  F025         	call	_TMR1_ISR	;wreg free
 13421                           
 13422                           ;interrupt_manager.c: 62: TMRapp_Tick();
 13423  001044  EC1C  F025         	call	_TMRapp_Tick	;wreg free
 13424                           
 13425                           ;interrupt_manager.c: 63: }
 13426  001048  D016               	goto	i2l972
 13427  00104A                     i2l964:
 13428                           
 13429                           ;interrupt_manager.c: 64: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 13430  00104A  BA9D               	btfsc	3997,5,c	;volatile
 13431  00104C  AA9E               	btfss	3998,5,c	;volatile
 13432  00104E  D005               	goto	i2l966
 13433                           
 13434                           ;interrupt_manager.c: 65: {
 13435                           ;interrupt_manager.c: 66: USBapp_setrxByteFlag();
 13436  001050  EC1F  F025         	call	_USBapp_setrxByteFlag	;wreg free
 13437                           
 13438                           ;interrupt_manager.c: 67: EUSART_Receive_ISR();
 13439  001054  EC5E  F026         	call	_EUSART_Receive_ISR	;wreg free
 13440                           
 13441                           ;interrupt_manager.c: 68: }
 13442  001058  D00E               	goto	i2l972
 13443  00105A                     i2l966:
 13444                           
 13445                           ;interrupt_manager.c: 69: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 13446  00105A  B89D               	btfsc	3997,4,c	;volatile
 13447  00105C  A89E               	btfss	3998,4,c	;volatile
 13448  00105E  D003               	goto	i2l968
 13449                           
 13450                           ;interrupt_manager.c: 70: {
 13451                           ;interrupt_manager.c: 71: EUSART_Transmit_ISR();
 13452  001060  EC72  F026         	call	_EUSART_Transmit_ISR	;wreg free
 13453                           
 13454                           ;interrupt_manager.c: 72: }
 13455  001064  D008               	goto	i2l972
 13456  001066                     i2l968:
 13457                           
 13458                           ;interrupt_manager.c: 73: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 13459  001066  BCA0               	btfsc	4000,6,c	;volatile
 13460  001068  ACA1               	btfss	4001,6,c	;volatile
 13461  00106A  D003               	goto	i2l7857
 13462                           
 13463                           ;interrupt_manager.c: 74: {
 13464                           ;interrupt_manager.c: 75: CMP1_ISR();
 13465  00106C  EC12  F025         	call	_CMP1_ISR	;wreg free
 13466                           
 13467                           ;interrupt_manager.c: 76: }
 13468  001070  D002               	goto	i2l972
 13469  001072                     i2l7857:
 13470                           
 13471                           ;interrupt_manager.c: 77: else
 13472                           ;interrupt_manager.c: 78: {
 13473                           ;interrupt_manager.c: 80: USBDeviceTasks();
 13474  001072  ECF9  F033         	call	_USBDeviceTasks	;wreg free
 13475  001076                     i2l972:
 13476  001076  C05A  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 13477  00107A  C059  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 13478  00107E  C058  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 13479  001082  C057  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 13480  001086  C056  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 13481  00108A  C055  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 13482  00108E  C054  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 13483  001092  C053  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 13484  001096  C052  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 13485  00109A  C051  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 13486  00109E  C050  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13487  0010A2  C04F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13488  0010A6  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13489  0010A8  0011               	retfie		f
 13490  0010AA                     __end_of_INTERRUPT_InterruptManager:
 13491                           	opt stack 0
 13492                           pclatu	equ	0xFFB
 13493                           pclath	equ	0xFFA
 13494                           tblptru	equ	0xFF8
 13495                           tblptrh	equ	0xFF7
 13496                           tblptrl	equ	0xFF6
 13497                           tablat	equ	0xFF5
 13498                           prodh	equ	0xFF4
 13499                           prodl	equ	0xFF3
 13500                           intcon	equ	0xFF2
 13501                           postinc0	equ	0xFEE
 13502                           wreg	equ	0xFE8
 13503                           indf1	equ	0xFE7
 13504                           fsr1h	equ	0xFE2
 13505                           fsr1l	equ	0xFE1
 13506                           indf2	equ	0xFDF
 13507                           postinc2	equ	0xFDE
 13508                           postdec2	equ	0xFDD
 13509                           plusw2	equ	0xFDB
 13510                           fsr2h	equ	0xFDA
 13511                           fsr2l	equ	0xFD9
 13512                           status	equ	0xFD8
 13513                           
 13514 ;; *************** function _USBapp_setrxByteFlag *****************
 13515 ;; Defined at:
 13516 ;;		line 226 in file "../Includes/Board/USBapp.c"
 13517 ;; Parameters:    Size  Location     Type
 13518 ;;		None
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;		None
 13521 ;; Return value:  Size  Location     Type
 13522 ;;                  1    wreg      void 
 13523 ;; Registers used:
 13524 ;;		wreg, status,2
 13525 ;; Tracked objects:
 13526 ;;		On entry : 0/0
 13527 ;;		On exit  : 0/0
 13528 ;;		Unchanged: 0/0
 13529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13530 ;;      Params:         0       0       0       0       0       0       0       0       0
 13531 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13532 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13533 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13534 ;;Total ram usage:        0 bytes
 13535 ;; Hardware stack levels used:    1
 13536 ;; This function calls:
 13537 ;;		Nothing
 13538 ;; This function is called by:
 13539 ;;		_INTERRUPT_InterruptManager
 13540 ;; This function uses a non-reentrant model
 13541 ;;
 13542                           
 13543                           	psect	text76
 13544  004A3E                     __ptext76:
 13545                           	opt stack 0
 13546  004A3E                     _USBapp_setrxByteFlag:
 13547                           	opt stack 19
 13548                           
 13549                           ;USBapp.c: 228: rxByteFlag = 1;
 13550                           
 13551                           ;incstack = 0
 13552  004A3E  0E01               	movlw	1
 13553  004A40  6E2A               	movwf	_rxByteFlag,c	;volatile
 13554  004A42  0C01               	retlw	1	;funcret
 13555  004A44                     __end_of_USBapp_setrxByteFlag:
 13556                           	opt stack 0
 13557                           pclatu	equ	0xFFB
 13558                           pclath	equ	0xFFA
 13559                           tblptru	equ	0xFF8
 13560                           tblptrh	equ	0xFF7
 13561                           tblptrl	equ	0xFF6
 13562                           tablat	equ	0xFF5
 13563                           prodh	equ	0xFF4
 13564                           prodl	equ	0xFF3
 13565                           intcon	equ	0xFF2
 13566                           postinc0	equ	0xFEE
 13567                           wreg	equ	0xFE8
 13568                           indf1	equ	0xFE7
 13569                           fsr1h	equ	0xFE2
 13570                           fsr1l	equ	0xFE1
 13571                           indf2	equ	0xFDF
 13572                           postinc2	equ	0xFDE
 13573                           postdec2	equ	0xFDD
 13574                           plusw2	equ	0xFDB
 13575                           fsr2h	equ	0xFDA
 13576                           fsr2l	equ	0xFD9
 13577                           status	equ	0xFD8
 13578                           
 13579 ;; *************** function _USBDeviceTasks *****************
 13580 ;; Defined at:
 13581 ;;		line 428 in file "../Includes/Usb/framework/usb_device.c"
 13582 ;; Parameters:    Size  Location     Type
 13583 ;;		None
 13584 ;; Auto vars:     Size  Location     Type
 13585 ;;  i               1   32[COMRAM] unsigned char 
 13586 ;; Return value:  Size  Location     Type
 13587 ;;                  1    wreg      void 
 13588 ;; Registers used:
 13589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13590 ;; Tracked objects:
 13591 ;;		On entry : 0/0
 13592 ;;		On exit  : 0/0
 13593 ;;		Unchanged: 0/0
 13594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13595 ;;      Params:         0       0       0       0       0       0       0       0       0
 13596 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13597 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13598 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13599 ;;Total ram usage:        1 bytes
 13600 ;; Hardware stack levels used:    1
 13601 ;; Hardware stack levels required when called:    9
 13602 ;; This function calls:
 13603 ;;		_USBCtrlEPAllowStatusStage
 13604 ;;		_USBCtrlEPService
 13605 ;;		_USBStallHandler
 13606 ;;		_USBSuspend
 13607 ;;		_USBWakeFromSuspend
 13608 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13609 ;;		i2_USBDeviceInit
 13610 ;; This function is called by:
 13611 ;;		_INTERRUPT_InterruptManager
 13612 ;; This function uses a non-reentrant model
 13613 ;;
 13614                           
 13615                           	psect	text77
 13616  0067F2                     __ptext77:
 13617                           	opt stack 0
 13618  0067F2                     _USBDeviceTasks:
 13619                           	opt stack 10
 13620                           
 13621                           ;usb_device.c: 430: uint8_t i;
 13622                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 13623                           
 13624                           ;incstack = 0
 13625  0067F2  0100               	movlb	0	; () banked
 13626  0067F4  0597               	decf	_USBDeviceState& (0+255),w,b	;volatile
 13627  0067F6  E107               	bnz	i2l7697
 13628                           
 13629                           ; BSR set to: 0
 13630                           ;usb_device.c: 433: {
 13631                           ;usb_device.c: 443: if(!UCONbits.SE0)
 13632  0067F8  BA60               	btfsc	3936,5,c	;volatile
 13633  0067FA  D005               	goto	i2l7697
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;usb_device.c: 444: {
 13637                           ;usb_device.c: 445: {UIR = 0;};
 13638  0067FC  6A65               	clrf	3941,c	;volatile
 13639                           
 13640                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 13641  0067FE  8064               	bsf	3940,0,c	;volatile
 13642                           
 13643                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 13644  006800  8864               	bsf	3940,4,c	;volatile
 13645                           
 13646                           ; BSR set to: 0
 13647                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 13648  006802  0E02               	movlw	2
 13649  006804  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 13650  006806                     i2l7697:
 13651                           
 13652                           ; BSR set to: 0
 13653                           ;usb_device.c: 449: }
 13654                           ;usb_device.c: 450: }
 13655                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 13656  006806  B465               	btfsc	3941,2,c	;volatile
 13657                           
 13658                           ; BSR set to: 0
 13659  006808  A464               	btfss	3940,2,c	;volatile
 13660  00680A  D003               	goto	i2l7705
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;usb_device.c: 455: {
 13664                           ;usb_device.c: 456: (UIR &= 0xFB);
 13665  00680C  9465               	bcf	3941,2,c	;volatile
 13666                           
 13667                           ; BSR set to: 0
 13668                           ;usb_device.c: 457: USBWakeFromSuspend();
 13669  00680E  EC18  F026         	call	_USBWakeFromSuspend	;wreg free
 13670  006812                     i2l7705:
 13671                           
 13672                           ;usb_device.c: 458: }
 13673                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 13674  006812  A260               	btfss	3936,1,c	;volatile
 13675  006814  D002               	goto	i2l1435
 13676                           
 13677                           ;usb_device.c: 464: {
 13678                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 13679  006816  94A4               	bcf	4004,2,c	;volatile
 13680                           
 13681                           ;usb_device.c: 466: return;
 13682  006818  0012               	return	
 13683  00681A                     i2l1435:
 13684                           
 13685                           ;usb_device.c: 467: }
 13686                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 13687  00681A  B065               	btfsc	3941,0,c	;volatile
 13688  00681C  A064               	btfss	3940,0,c	;volatile
 13689  00681E  D006               	goto	i2l7719
 13690                           
 13691                           ;usb_device.c: 480: {
 13692                           ;usb_device.c: 481: USBDeviceInit();
 13693  006820  ECC6  F031         	call	i2_USBDeviceInit	;wreg free
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 13697  006824  84A3               	bsf	4003,2,c	;volatile
 13698                           
 13699                           ; BSR set to: 0
 13700                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 13701  006826  0E04               	movlw	4
 13702  006828  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 13703                           
 13704                           ; BSR set to: 0
 13705                           ;usb_device.c: 489: (UIR &= 0xFE);
 13706  00682A  9065               	bcf	3941,0,c	;volatile
 13707  00682C                     i2l7719:
 13708                           
 13709                           ;usb_device.c: 490: }
 13710                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 13711  00682C  B865               	btfsc	3941,4,c	;volatile
 13712  00682E  A864               	btfss	3940,4,c	;volatile
 13713  006830  D003               	goto	i2l7727
 13714                           
 13715                           ;usb_device.c: 496: {
 13716                           ;usb_device.c: 497: USBSuspend();
 13717  006832  ECDB  F025         	call	_USBSuspend	;wreg free
 13718                           
 13719                           ;usb_device.c: 498: (UIR &= 0xEF);
 13720  006836  9865               	bcf	3941,4,c	;volatile
 13721  006838                     i2l7727:
 13722                           
 13723                           ;usb_device.c: 499: }
 13724                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 13725  006838  AC65               	btfss	3941,6,c	;volatile
 13726  00683A  D014               	goto	i2l7743
 13727                           
 13728                           ;usb_device.c: 502: {
 13729                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 13730  00683C  AC64               	btfss	3940,6,c	;volatile
 13731  00683E  D00A               	goto	i2l7733
 13732                           
 13733                           ;usb_device.c: 504: {
 13734                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 13735  006840  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13736  006842  0E73               	movlw	115
 13737  006844  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13738  006846  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13739  006848  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13740  00684A  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13741  00684C  0E01               	movlw	1
 13742  00684E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13743  006850  EC90  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13744  006854                     i2l7733:
 13745                           
 13746                           ;usb_device.c: 506: }
 13747                           ;usb_device.c: 507: (UIR &= 0xBF);
 13748  006854  9C65               	bcf	3941,6,c	;volatile
 13749                           
 13750                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 13751  006856  501F               	movf	_USBStatusStageTimeoutCounter,w,c
 13752  006858  E001               	bz	i2l7739
 13753                           
 13754                           ;usb_device.c: 513: {
 13755                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 13756  00685A  061F               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 13757  00685C                     i2l7739:
 13758                           
 13759                           ;usb_device.c: 515: }
 13760                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 13761  00685C  501F               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 13762  00685E  E102               	bnz	i2l7743
 13763                           
 13764                           ;usb_device.c: 522: {
 13765                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 13766  006860  EC35  F030         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13767  006864                     i2l7743:
 13768                           
 13769                           ;usb_device.c: 524: }
 13770                           ;usb_device.c: 525: }
 13771                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 13772  006864  BA65               	btfsc	3941,5,c	;volatile
 13773  006866  AA64               	btfss	3940,5,c	;volatile
 13774  006868  D002               	goto	i2l7749
 13775                           
 13776                           ;usb_device.c: 528: {
 13777                           ;usb_device.c: 529: USBStallHandler();
 13778  00686A  EC30  F028         	call	_USBStallHandler	;wreg free
 13779  00686E                     i2l7749:
 13780                           
 13781                           ;usb_device.c: 530: }
 13782                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 13783  00686E  B265               	btfsc	3941,1,c	;volatile
 13784  006870  A264               	btfss	3940,1,c	;volatile
 13785  006872  D00B               	goto	i2l7757
 13786                           
 13787                           ;usb_device.c: 533: {
 13788                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 13789  006874  0E7F               	movlw	127
 13790  006876  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13791  006878  683B               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13792  00687A  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13793  00687C  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13794  00687E  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13795  006880  0E01               	movlw	1
 13796  006882  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13797  006884  EC90  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13798                           
 13799                           ;usb_device.c: 535: {UEIR = 0;};
 13800  006888  6A67               	clrf	3943,c	;volatile
 13801  00688A                     i2l7757:
 13802                           
 13803                           ;usb_device.c: 536: }
 13804                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 13805  00688A  0E04               	movlw	4
 13806  00688C  0100               	movlb	0	; () banked
 13807  00688E  6197               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 13808  006890  D002               	goto	i2l1445
 13809                           
 13810                           ; BSR set to: 0
 13811                           ;usb_device.c: 544: {
 13812                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 13813  006892  94A4               	bcf	4004,2,c	;volatile
 13814                           
 13815                           ;usb_device.c: 546: return;
 13816  006894  0C04               	retlw	4
 13817  006896                     i2l1445:
 13818                           
 13819                           ; BSR set to: 0
 13820                           ;usb_device.c: 547: }
 13821                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 13822  006896  A664               	btfss	3940,3,c	;volatile
 13823  006898  D029               	goto	i2l1446
 13824                           
 13825                           ; BSR set to: 0
 13826                           ;usb_device.c: 553: {
 13827                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 13828  00689A  6A4E               	clrf	USBDeviceTasks@i,c
 13829  00689C                     i2l1447:
 13830                           
 13831                           ;usb_device.c: 555: {
 13832                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 13833  00689C  A665               	btfss	3941,3,c	;volatile
 13834  00689E  D026               	goto	i2l1446
 13835                           
 13836                           ;usb_device.c: 557: {
 13837                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 13838  0068A0  CF61 F02D          	movff	3937,_USTATcopy	;volatile
 13839                           
 13840                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 13841  0068A4  302D               	rrcf	_USTATcopy,w,c	;volatile
 13842  0068A6  32E8               	rrcf	wreg,f,c
 13843  0068A8  32E8               	rrcf	wreg,f,c
 13844  0068AA  0B0F               	andlw	15
 13845  0068AC  6E22               	movwf	_endpoint_number,c	;volatile
 13846                           
 13847                           ;usb_device.c: 562: (UIR &= 0xF7);
 13848  0068AE  9665               	bcf	3941,3,c	;volatile
 13849                           
 13850                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 13851  0068B0  B42D               	btfsc	_USTATcopy,2,c	;volatile
 13852  0068B2  D003               	goto	i2l7777
 13853                           
 13854                           ;usb_device.c: 567: {
 13855                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 13856  0068B4  5022               	movf	_endpoint_number,w,c
 13857  0068B6  0F75               	addlw	low _ep_data_out
 13858  0068B8  D002               	goto	L22
 13859  0068BA                     i2l7777:
 13860                           
 13861                           ;usb_device.c: 570: else
 13862                           ;usb_device.c: 571: {
 13863                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 13864  0068BA  5022               	movf	_endpoint_number,w,c
 13865  0068BC  0F72               	addlw	low _ep_data_in
 13866  0068BE                     L22:
 13867  0068BE  6ED9               	movwf	fsr2l,c
 13868  0068C0  6ADA               	clrf	fsr2h,c
 13869  0068C2  0100               	movlb	0	; () banked
 13870  0068C4  70DF               	btg	indf2,0,c
 13871                           
 13872                           ; BSR set to: 0
 13873                           ;usb_device.c: 573: }
 13874                           ;usb_device.c: 577: if(endpoint_number == 0)
 13875  0068C6  5022               	movf	_endpoint_number,w,c	;volatile
 13876  0068C8  E103               	bnz	i2l7783
 13877                           
 13878                           ; BSR set to: 0
 13879                           ;usb_device.c: 578: {
 13880                           ;usb_device.c: 579: USBCtrlEPService();
 13881  0068CA  EC24  F02F         	call	_USBCtrlEPService	;wreg free
 13882                           
 13883                           ;usb_device.c: 580: }
 13884  0068CE  D00A               	goto	i2l7785
 13885  0068D0                     i2l7783:
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;usb_device.c: 581: else
 13889                           ;usb_device.c: 582: {
 13890                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 13891  0068D0  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13892  0068D2  0E72               	movlw	114
 13893  0068D4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13894  0068D6  0E2D               	movlw	low _USTATcopy
 13895  0068D8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13896  0068DA  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13897  0068DC  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13898  0068DE  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13899  0068E0  EC90  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13900  0068E4                     i2l7785:
 13901  0068E4  2A4E               	incf	USBDeviceTasks@i,f,c
 13902  0068E6  0E03               	movlw	3
 13903  0068E8  644E               	cpfsgt	USBDeviceTasks@i,c
 13904  0068EA  D7D8               	goto	i2l1447
 13905  0068EC                     i2l1446:
 13906                           
 13907                           ;usb_device.c: 589: }
 13908                           ;usb_device.c: 590: }
 13909                           ;usb_device.c: 591: }
 13910                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 13911  0068EC  94A4               	bcf	4004,2,c	;volatile
 13912  0068EE  0012               	return		;funcret
 13913  0068F0                     __end_of_USBDeviceTasks:
 13914                           	opt stack 0
 13915                           pclatu	equ	0xFFB
 13916                           pclath	equ	0xFFA
 13917                           tblptru	equ	0xFF8
 13918                           tblptrh	equ	0xFF7
 13919                           tblptrl	equ	0xFF6
 13920                           tablat	equ	0xFF5
 13921                           prodh	equ	0xFF4
 13922                           prodl	equ	0xFF3
 13923                           intcon	equ	0xFF2
 13924                           postinc0	equ	0xFEE
 13925                           wreg	equ	0xFE8
 13926                           indf1	equ	0xFE7
 13927                           fsr1h	equ	0xFE2
 13928                           fsr1l	equ	0xFE1
 13929                           indf2	equ	0xFDF
 13930                           postinc2	equ	0xFDE
 13931                           postdec2	equ	0xFDD
 13932                           plusw2	equ	0xFDB
 13933                           fsr2h	equ	0xFDA
 13934                           fsr2l	equ	0xFD9
 13935                           status	equ	0xFD8
 13936                           
 13937 ;; *************** function i2_USBDeviceInit *****************
 13938 ;; Defined at:
 13939 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 13940 ;; Parameters:    Size  Location     Type
 13941 ;;		None
 13942 ;; Auto vars:     Size  Location     Type
 13943 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 13944 ;; Return value:  Size  Location     Type
 13945 ;;                  1    wreg      void 
 13946 ;; Registers used:
 13947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13948 ;; Tracked objects:
 13949 ;;		On entry : 0/0
 13950 ;;		On exit  : F/0
 13951 ;;		Unchanged: 0/0
 13952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13953 ;;      Params:         0       0       0       0       0       0       0       0       0
 13954 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13955 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13956 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13957 ;;Total ram usage:        1 bytes
 13958 ;; Hardware stack levels used:    1
 13959 ;; Hardware stack levels required when called:    1
 13960 ;; This function calls:
 13961 ;;		i2_memset
 13962 ;; This function is called by:
 13963 ;;		_USBDeviceTasks
 13964 ;; This function uses a non-reentrant model
 13965 ;;
 13966                           
 13967                           	psect	text78
 13968  00638C                     __ptext78:
 13969                           	opt stack 0
 13970  00638C                     i2_USBDeviceInit:
 13971                           	opt stack 17
 13972                           
 13973                           ;usb_device.c: 239: uint8_t i;
 13974                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 13975                           
 13976                           ;incstack = 0
 13977  00638C  94A3               	bcf	4003,2,c	;volatile
 13978                           
 13979                           ;usb_device.c: 244: {UEIR = 0;};
 13980  00638E  6A67               	clrf	3943,c	;volatile
 13981                           
 13982                           ;usb_device.c: 247: {UIR = 0;};
 13983  006390  6A65               	clrf	3941,c	;volatile
 13984                           
 13985                           ;usb_device.c: 250: UEP0 = 0;
 13986  006392  6A6A               	clrf	3946,c	;volatile
 13987                           
 13988                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 13989  006394  0E6B               	movlw	107
 13990  006396  6E2E               	movwf	i2memset@p1,c
 13991  006398  0E0F               	movlw	15
 13992  00639A  6E2F               	movwf	i2memset@p1+1,c
 13993  00639C  6A31               	clrf	i2memset@c+1,c
 13994  00639E  6A30               	clrf	i2memset@c,c
 13995  0063A0  6A33               	clrf	i2memset@n+1,c
 13996  0063A2  0E02               	movlw	2
 13997  0063A4  6E32               	movwf	i2memset@n,c
 13998  0063A6  ECAE  F026         	call	i2_memset	;wreg free
 13999                           
 14000                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14001  0063AA  0E16               	movlw	22
 14002  0063AC  6E62               	movwf	3938,c	;volatile
 14003  0063AE  0E9F               	movlw	159
 14004  0063B0  6E66               	movwf	3942,c	;volatile
 14005  0063B2  0E7B               	movlw	123
 14006  0063B4  6E64               	movwf	3940,c	;volatile
 14007                           
 14008                           ;usb_device.c: 257: ;
 14009                           ;usb_device.c: 260: ;
 14010                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14011  0063B6  6A36               	clrf	i2USBDeviceInit@i,c
 14012  0063B8                     i2l7341:
 14013                           
 14014                           ;usb_device.c: 264: {
 14015                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 14016  0063B8  5036               	movf	i2USBDeviceInit@i,w,c
 14017  0063BA  0D04               	mullw	4
 14018  0063BC  0E00               	movlw	0
 14019  0063BE  24F3               	addwf	prodl,w,c
 14020  0063C0  6ED9               	movwf	fsr2l,c
 14021  0063C2  0E04               	movlw	4
 14022  0063C4  20F4               	addwfc	prodh,w,c
 14023  0063C6  6EDA               	movwf	fsr2h,c
 14024  0063C8  6ADE               	clrf	postinc2,c
 14025  0063CA  6ADE               	clrf	postinc2,c
 14026  0063CC  6ADE               	clrf	postinc2,c
 14027  0063CE  6ADD               	clrf	postdec2,c
 14028  0063D0  2A36               	incf	i2USBDeviceInit@i,f,c
 14029  0063D2  0E0B               	movlw	11
 14030  0063D4  6436               	cpfsgt	i2USBDeviceInit@i,c
 14031  0063D6  D7F0               	goto	i2l7341
 14032                           
 14033                           ;usb_device.c: 266: }
 14034                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 14035  0063D8  8C60               	bsf	3936,6,c	;volatile
 14036                           
 14037                           ;usb_device.c: 272: UADDR = 0x00;
 14038  0063DA  6A63               	clrf	3939,c	;volatile
 14039                           
 14040                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 14041  0063DC  9860               	bcf	3936,4,c	;volatile
 14042                           
 14043                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 14044  0063DE  9C60               	bcf	3936,6,c	;volatile
 14045                           
 14046                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 14047  0063E0  D005               	goto	i2l7355
 14048  0063E2                     i2l7347:
 14049                           
 14050                           ;usb_device.c: 282: {
 14051                           ;usb_device.c: 283: (UIR &= 0xF7);
 14052  0063E2  9665               	bcf	3941,3,c	;volatile
 14053                           
 14054                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 14055  0063E4  6A0C               	clrf	_inPipes+3,c	;volatile
 14056                           
 14057                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 14058  0063E6  6A04               	clrf	_outPipes+3,c	;volatile
 14059                           
 14060                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 14061  0063E8  6A05               	clrf	_outPipes+4,c	;volatile
 14062  0063EA  6A06               	clrf	_outPipes+5,c	;volatile
 14063  0063EC                     i2l7355:
 14064  0063EC  B665               	btfsc	3941,3,c	;volatile
 14065  0063EE  D7F9               	goto	i2l7347
 14066                           
 14067                           ;usb_device.c: 288: }
 14068                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 14069  0063F0  0E01               	movlw	1
 14070  0063F2  0100               	movlb	0	; () banked
 14071  0063F4  6F98               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14072                           
 14073                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 14074  0063F6  6F99               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 14075                           
 14076                           ; BSR set to: 0
 14077                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 14078  0063F8  6B95               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 14082  0063FA  6B96               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 14083                           
 14084                           ; BSR set to: 0
 14085                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 14086  0063FC  6B94               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 14087                           
 14088                           ; BSR set to: 0
 14089                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 14090  0063FE  6A36               	clrf	i2USBDeviceInit@i,c
 14091  006400                     i2l7371:
 14092                           
 14093                           ;usb_device.c: 302: {
 14094                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 14095  006400  5036               	movf	i2USBDeviceInit@i,w,c
 14096  006402  0D02               	mullw	2
 14097  006404  50F3               	movf	prodl,w,c
 14098  006406  0F0F               	addlw	low _pBDTEntryIn
 14099  006408  6ED9               	movwf	fsr2l,c
 14100  00640A  6ADA               	clrf	fsr2h,c
 14101  00640C  6ADE               	clrf	postinc2,c
 14102  00640E  6ADD               	clrf	postdec2,c
 14103                           
 14104                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 14105  006410  5036               	movf	i2USBDeviceInit@i,w,c
 14106  006412  0D02               	mullw	2
 14107  006414  50F3               	movf	prodl,w,c
 14108  006416  0F68               	addlw	low _pBDTEntryOut
 14109  006418  6ED9               	movwf	fsr2l,c
 14110  00641A  6ADA               	clrf	fsr2h,c
 14111  00641C  6ADE               	clrf	postinc2,c
 14112  00641E  6ADD               	clrf	postdec2,c
 14113                           
 14114                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 14115  006420  5036               	movf	i2USBDeviceInit@i,w,c
 14116  006422  0F72               	addlw	low _ep_data_in
 14117  006424  6ED9               	movwf	fsr2l,c
 14118  006426  6ADA               	clrf	fsr2h,c
 14119  006428  6ADF               	clrf	indf2,c
 14120                           
 14121                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 14122  00642A  5036               	movf	i2USBDeviceInit@i,w,c
 14123  00642C  0F75               	addlw	low _ep_data_out
 14124  00642E  6ED9               	movwf	fsr2l,c
 14125  006430  6ADA               	clrf	fsr2h,c
 14126  006432  6ADF               	clrf	indf2,c
 14127  006434  2A36               	incf	i2USBDeviceInit@i,f,c
 14128  006436  0E02               	movlw	2
 14129  006438  6436               	cpfsgt	i2USBDeviceInit@i,c
 14130  00643A  D7E2               	goto	i2l7371
 14131                           
 14132                           ;usb_device.c: 307: }
 14133                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14134  00643C  0E08               	movlw	8
 14135  00643E  6E0F               	movwf	_pBDTEntryIn,c
 14136  006440  0E04               	movlw	4
 14137  006442  6E10               	movwf	_pBDTEntryIn+1,c
 14138                           
 14139                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 14140  006444  0E16               	movlw	22
 14141  006446  6E6A               	movwf	3946,c	;volatile
 14142                           
 14143                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 14144  006448  0E04               	movlw	4
 14145  00644A  0104               	movlb	4	; () banked
 14146  00644C  6F03               	movwf	3,b	;volatile
 14147  00644E  0E30               	movlw	48
 14148  006450  6F02               	movwf	2,b	;volatile
 14149                           
 14150                           ; BSR set to: 4
 14151                           ;usb_device.c: 315: BDT[0].CNT = 8;
 14152  006452  0E08               	movlw	8
 14153  006454  6F01               	movwf	1,b	;volatile
 14154                           
 14155                           ; BSR set to: 4
 14156                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 14157  006456  0E04               	movlw	4
 14158  006458  6F00               	movwf	0,b	;volatile
 14159                           
 14160                           ; BSR set to: 4
 14161                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 14162  00645A  8F00               	bsf	0,7,b	;volatile
 14163                           
 14164                           ; BSR set to: 4
 14165                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 14166  00645C  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 14167                           
 14168                           ; BSR set to: 4
 14169                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 14170  00645E  0100               	movlb	0	; () banked
 14171  006460  6B97               	clrf	_USBDeviceState& (0+255),b	;volatile
 14172                           
 14173                           ; BSR set to: 0
 14174  006462  0012               	return		;funcret
 14175  006464                     __end_ofi2_USBDeviceInit:
 14176                           	opt stack 0
 14177                           pclatu	equ	0xFFB
 14178                           pclath	equ	0xFFA
 14179                           tblptru	equ	0xFF8
 14180                           tblptrh	equ	0xFF7
 14181                           tblptrl	equ	0xFF6
 14182                           tablat	equ	0xFF5
 14183                           prodh	equ	0xFF4
 14184                           prodl	equ	0xFF3
 14185                           intcon	equ	0xFF2
 14186                           postinc0	equ	0xFEE
 14187                           wreg	equ	0xFE8
 14188                           indf1	equ	0xFE7
 14189                           fsr1h	equ	0xFE2
 14190                           fsr1l	equ	0xFE1
 14191                           indf2	equ	0xFDF
 14192                           postinc2	equ	0xFDE
 14193                           postdec2	equ	0xFDD
 14194                           plusw2	equ	0xFDB
 14195                           fsr2h	equ	0xFDA
 14196                           fsr2l	equ	0xFD9
 14197                           status	equ	0xFD8
 14198                           
 14199 ;; *************** function _USBWakeFromSuspend *****************
 14200 ;; Defined at:
 14201 ;;		line 1944 in file "../Includes/Usb/framework/usb_device.c"
 14202 ;; Parameters:    Size  Location     Type
 14203 ;;		None
 14204 ;; Auto vars:     Size  Location     Type
 14205 ;;		None
 14206 ;; Return value:  Size  Location     Type
 14207 ;;                  1    wreg      void 
 14208 ;; Registers used:
 14209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14210 ;; Tracked objects:
 14211 ;;		On entry : F/0
 14212 ;;		On exit  : 0/0
 14213 ;;		Unchanged: 0/0
 14214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14215 ;;      Params:         0       0       0       0       0       0       0       0       0
 14216 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14217 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14218 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14219 ;;Total ram usage:        0 bytes
 14220 ;; Hardware stack levels used:    1
 14221 ;; Hardware stack levels required when called:    5
 14222 ;; This function calls:
 14223 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14224 ;; This function is called by:
 14225 ;;		_USBDeviceTasks
 14226 ;; This function uses a non-reentrant model
 14227 ;;
 14228                           
 14229                           	psect	text79
 14230  004C30                     __ptext79:
 14231                           	opt stack 0
 14232  004C30                     _USBWakeFromSuspend:
 14233                           	opt stack 13
 14234                           
 14235                           ; BSR set to: 0
 14236                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 14237                           
 14238                           ; BSR set to: 0
 14239                           ;incstack = 0
 14240  004C30  6B94               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 14241                           
 14242                           ; BSR set to: 0
 14243                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 14244  004C32  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14245  004C34  0E74               	movlw	116
 14246  004C36  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14247  004C38  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14248  004C3A  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14249  004C3C  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14250  004C3E  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14251  004C40  EC90  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14252                           
 14253                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 14254  004C44  9260               	bcf	3936,1,c	;volatile
 14255                           
 14256                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 14257  004C46  9464               	bcf	3940,2,c	;volatile
 14258                           
 14259                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 14260  004C48  D001               	goto	i2l7265
 14261  004C4A                     i2l7263:
 14262                           
 14263                           ;usb_device.c: 1977: {
 14264                           ;usb_device.c: 1978: (UIR &= 0xFB);
 14265  004C4A  9465               	bcf	3941,2,c	;volatile
 14266  004C4C                     i2l7265:
 14267  004C4C  A465               	btfss	3941,2,c	;volatile
 14268  004C4E  0012               	return		;funcret
 14269  004C50  D7FC               	goto	i2l7263
 14270  004C52                     __end_of_USBWakeFromSuspend:
 14271                           	opt stack 0
 14272                           pclatu	equ	0xFFB
 14273                           pclath	equ	0xFFA
 14274                           tblptru	equ	0xFF8
 14275                           tblptrh	equ	0xFF7
 14276                           tblptrl	equ	0xFF6
 14277                           tablat	equ	0xFF5
 14278                           prodh	equ	0xFF4
 14279                           prodl	equ	0xFF3
 14280                           intcon	equ	0xFF2
 14281                           postinc0	equ	0xFEE
 14282                           wreg	equ	0xFE8
 14283                           indf1	equ	0xFE7
 14284                           fsr1h	equ	0xFE2
 14285                           fsr1l	equ	0xFE1
 14286                           indf2	equ	0xFDF
 14287                           postinc2	equ	0xFDE
 14288                           postdec2	equ	0xFDD
 14289                           plusw2	equ	0xFDB
 14290                           fsr2h	equ	0xFDA
 14291                           fsr2l	equ	0xFD9
 14292                           status	equ	0xFD8
 14293                           
 14294 ;; *************** function _USBSuspend *****************
 14295 ;; Defined at:
 14296 ;;		line 1889 in file "../Includes/Usb/framework/usb_device.c"
 14297 ;; Parameters:    Size  Location     Type
 14298 ;;		None
 14299 ;; Auto vars:     Size  Location     Type
 14300 ;;		None
 14301 ;; Return value:  Size  Location     Type
 14302 ;;                  1    wreg      void 
 14303 ;; Registers used:
 14304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14305 ;; Tracked objects:
 14306 ;;		On entry : 0/0
 14307 ;;		On exit  : 0/0
 14308 ;;		Unchanged: 0/0
 14309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14310 ;;      Params:         0       0       0       0       0       0       0       0       0
 14311 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14312 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14313 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14314 ;;Total ram usage:        0 bytes
 14315 ;; Hardware stack levels used:    1
 14316 ;; Hardware stack levels required when called:    5
 14317 ;; This function calls:
 14318 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14319 ;; This function is called by:
 14320 ;;		_USBDeviceTasks
 14321 ;; This function uses a non-reentrant model
 14322 ;;
 14323                           
 14324                           	psect	text80
 14325  004BB6                     __ptext80:
 14326                           	opt stack 0
 14327  004BB6                     _USBSuspend:
 14328                           	opt stack 13
 14329                           
 14330                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 14331                           
 14332                           ;incstack = 0
 14333  004BB6  8464               	bsf	3940,2,c	;volatile
 14334                           
 14335                           ;usb_device.c: 1915: (UIR &= 0xEF);
 14336  004BB8  9865               	bcf	3941,4,c	;volatile
 14337                           
 14338                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 14339  004BBA  8260               	bsf	3936,1,c	;volatile
 14340                           
 14341                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 14342  004BBC  0E01               	movlw	1
 14343  004BBE  0100               	movlb	0	; () banked
 14344  004BC0  6F94               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 14345                           
 14346                           ; BSR set to: 0
 14347                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 14348  004BC2  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14349  004BC4  0E75               	movlw	117
 14350  004BC6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14351  004BC8  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14352  004BCA  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14353  004BCC  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14354  004BCE  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14355  004BD0  EF90  F028         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14356  004BD4                     __end_of_USBSuspend:
 14357                           	opt stack 0
 14358                           pclatu	equ	0xFFB
 14359                           pclath	equ	0xFFA
 14360                           tblptru	equ	0xFF8
 14361                           tblptrh	equ	0xFF7
 14362                           tblptrl	equ	0xFF6
 14363                           tablat	equ	0xFF5
 14364                           prodh	equ	0xFF4
 14365                           prodl	equ	0xFF3
 14366                           intcon	equ	0xFF2
 14367                           postinc0	equ	0xFEE
 14368                           wreg	equ	0xFE8
 14369                           indf1	equ	0xFE7
 14370                           fsr1h	equ	0xFE2
 14371                           fsr1l	equ	0xFE1
 14372                           indf2	equ	0xFDF
 14373                           postinc2	equ	0xFDE
 14374                           postdec2	equ	0xFDD
 14375                           plusw2	equ	0xFDB
 14376                           fsr2h	equ	0xFDA
 14377                           fsr2l	equ	0xFD9
 14378                           status	equ	0xFD8
 14379                           
 14380 ;; *************** function _USBStallHandler *****************
 14381 ;; Defined at:
 14382 ;;		line 1846 in file "../Includes/Usb/framework/usb_device.c"
 14383 ;; Parameters:    Size  Location     Type
 14384 ;;		None
 14385 ;; Auto vars:     Size  Location     Type
 14386 ;;		None
 14387 ;; Return value:  Size  Location     Type
 14388 ;;                  1    wreg      void 
 14389 ;; Registers used:
 14390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14391 ;; Tracked objects:
 14392 ;;		On entry : 0/0
 14393 ;;		On exit  : 0/0
 14394 ;;		Unchanged: 0/0
 14395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14396 ;;      Params:         0       0       0       0       0       0       0       0       0
 14397 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14398 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14399 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14400 ;;Total ram usage:        1 bytes
 14401 ;; Hardware stack levels used:    1
 14402 ;; This function calls:
 14403 ;;		Nothing
 14404 ;; This function is called by:
 14405 ;;		_USBDeviceTasks
 14406 ;; This function uses a non-reentrant model
 14407 ;;
 14408                           
 14409                           	psect	text81
 14410  005060                     __ptext81:
 14411                           	opt stack 0
 14412  005060                     _USBStallHandler:
 14413                           	opt stack 18
 14414                           
 14415                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 14416                           
 14417                           ;incstack = 0
 14418  005060  A06A               	btfss	3946,0,c	;volatile
 14419  005062  D01B               	goto	i2l1585
 14420                           
 14421                           ;usb_device.c: 1859: {
 14422                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 14423  005064  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14424  005068  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14425  00506C  0E80               	movlw	128
 14426  00506E  18DE               	xorwf	postinc2,w,c
 14427  005070  E113               	bnz	i2l7287
 14428  005072  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 14429  005076  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14430  00507A  0E84               	movlw	132
 14431  00507C  18DE               	xorwf	postinc2,w,c
 14432  00507E  E10C               	bnz	i2l7287
 14433                           
 14434                           ;usb_device.c: 1862: {
 14435                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14436  005080  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14437  005084  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14438  005088  0E0C               	movlw	12
 14439  00508A  6EDF               	movwf	indf2,c
 14440                           
 14441                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 14442  00508C  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14443  005090  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14444  005094  0E00               	movlw	0
 14445  005096  8EDB               	bsf	plusw2,7,c
 14446  005098                     i2l7287:
 14447                           
 14448                           ;usb_device.c: 1866: }
 14449                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 14450  005098  906A               	bcf	3946,0,c	;volatile
 14451  00509A                     i2l1585:
 14452                           
 14453                           ;usb_device.c: 1868: }
 14454                           ;usb_device.c: 1870: (UIR &= 0xDF);
 14455  00509A  9A65               	bcf	3941,5,c	;volatile
 14456  00509C  0012               	return		;funcret
 14457  00509E                     __end_of_USBStallHandler:
 14458                           	opt stack 0
 14459                           pclatu	equ	0xFFB
 14460                           pclath	equ	0xFFA
 14461                           tblptru	equ	0xFF8
 14462                           tblptrh	equ	0xFF7
 14463                           tblptrl	equ	0xFF6
 14464                           tablat	equ	0xFF5
 14465                           prodh	equ	0xFF4
 14466                           prodl	equ	0xFF3
 14467                           intcon	equ	0xFF2
 14468                           postinc0	equ	0xFEE
 14469                           wreg	equ	0xFE8
 14470                           indf1	equ	0xFE7
 14471                           fsr1h	equ	0xFE2
 14472                           fsr1l	equ	0xFE1
 14473                           indf2	equ	0xFDF
 14474                           postinc2	equ	0xFDE
 14475                           postdec2	equ	0xFDD
 14476                           plusw2	equ	0xFDB
 14477                           fsr2h	equ	0xFDA
 14478                           fsr2l	equ	0xFD9
 14479                           status	equ	0xFD8
 14480                           
 14481 ;; *************** function _USBCtrlEPService *****************
 14482 ;; Defined at:
 14483 ;;		line 2004 in file "../Includes/Usb/framework/usb_device.c"
 14484 ;; Parameters:    Size  Location     Type
 14485 ;;		None
 14486 ;; Auto vars:     Size  Location     Type
 14487 ;;  setup_cnt       1   31[COMRAM] unsigned char 
 14488 ;; Return value:  Size  Location     Type
 14489 ;;                  1    wreg      void 
 14490 ;; Registers used:
 14491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14492 ;; Tracked objects:
 14493 ;;		On entry : F/0
 14494 ;;		On exit  : 0/0
 14495 ;;		Unchanged: 0/0
 14496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14497 ;;      Params:         0       0       0       0       0       0       0       0       0
 14498 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14499 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14500 ;;      Totals:         3       0       0       0       0       0       0       0       0
 14501 ;;Total ram usage:        3 bytes
 14502 ;; Hardware stack levels used:    1
 14503 ;; Hardware stack levels required when called:    8
 14504 ;; This function calls:
 14505 ;;		_USBCtrlTrfInHandler
 14506 ;;		_USBCtrlTrfOutHandler
 14507 ;;		_USBCtrlTrfSetupHandler
 14508 ;; This function is called by:
 14509 ;;		_USBDeviceTasks
 14510 ;; This function uses a non-reentrant model
 14511 ;;
 14512                           
 14513                           	psect	text82
 14514  005E48                     __ptext82:
 14515                           	opt stack 0
 14516  005E48                     _USBCtrlEPService:
 14517                           	opt stack 10
 14518                           
 14519                           ; BSR set to: 0
 14520                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 14521                           
 14522                           ;incstack = 0
 14523  005E48  0E2D               	movlw	45
 14524  005E4A  6E1F               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 14525                           
 14526                           ; BSR set to: 0
 14527                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 14528  005E4C  C02D  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 14529  005E50  0EFD               	movlw	253
 14530  005E52  164B               	andwf	??_USBCtrlEPService,f,c
 14531  005E54  E14B               	bnz	i2l7321
 14532                           
 14533                           ; BSR set to: 0
 14534                           ;usb_device.c: 2013: {
 14535                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 14536  005E56  90D8               	bcf	status,0,c
 14537  005E58  302D               	rrcf	_USTATcopy,w,c	;volatile
 14538  005E5A  0B3F               	andlw	63
 14539  005E5C  0D04               	mullw	4
 14540  005E5E  0E00               	movlw	0
 14541  005E60  24F3               	addwf	prodl,w,c
 14542  005E62  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 14543  005E64  0E04               	movlw	4
 14544  005E66  20F4               	addwfc	prodh,w,c
 14545  005E68  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 14546                           
 14547                           ; BSR set to: 0
 14548                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 14549  005E6A  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 14550  005E6E  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 14551                           
 14552                           ; BSR set to: 0
 14553                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 14554  005E72  0E04               	movlw	4
 14555  005E74  1A17               	xorwf	_pBDTEntryEP0OutNext,f,c
 14556                           
 14557                           ; BSR set to: 0
 14558                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 14559  005E76  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14560  005E7A  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14561  005E7E  30DF               	rrcf	indf2,w,c
 14562  005E80  32E8               	rrcf	wreg,f,c
 14563  005E82  0B0F               	andlw	15
 14564  005E84  0A0D               	xorlw	13
 14565  005E86  E002 EF4C  F029    	bnz	_USBCtrlTrfOutHandler
 14566                           
 14567                           ; BSR set to: 0
 14568                           ;usb_device.c: 2025: {
 14569                           ;usb_device.c: 2026: unsigned char setup_cnt;
 14570                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 14571  005E8C  6A4D               	clrf	USBCtrlEPService@setup_cnt,c
 14572  005E8E                     i2l7307:
 14573                           
 14574                           ; BSR set to: 0
 14575                           ;usb_device.c: 2033: {
 14576                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 14577  005E8E  EE20 F002          	lfsr	2,2
 14578  005E92  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 14579  005E94  26D9               	addwf	fsr2l,f,c
 14580  005E96  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14581  005E98  22DA               	addwfc	fsr2h,f,c
 14582  005E9A  CFDE F04B          	movff	postinc2,??_USBCtrlEPService
 14583  005E9E  CFDD F04C          	movff	postdec2,??_USBCtrlEPService+1
 14584  005EA2  C04B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 14585  005EA6  C04C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 14586  005EAA  0E30               	movlw	48
 14587  005EAC  244D               	addwf	USBCtrlEPService@setup_cnt,w,c
 14588  005EAE  6EE1               	movwf	fsr1l,c
 14589  005EB0  6AE2               	clrf	fsr1h,c
 14590  005EB2  0E04               	movlw	4
 14591  005EB4  22E2               	addwfc	fsr1h,f,c
 14592  005EB6  CFDF FFE7          	movff	indf2,indf1
 14593                           
 14594                           ; BSR set to: 0
 14595                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 14596  005EBA  EE20 F002          	lfsr	2,2
 14597  005EBE  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 14598  005EC0  26D9               	addwf	fsr2l,f,c
 14599  005EC2  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14600  005EC4  22DA               	addwfc	fsr2h,f,c
 14601  005EC6  2ADE               	incf	postinc2,f,c
 14602  005EC8  0E00               	movlw	0
 14603  005ECA  22DD               	addwfc	postdec2,f,c
 14604                           
 14605                           ; BSR set to: 0
 14606  005ECC  2A4D               	incf	USBCtrlEPService@setup_cnt,f,c
 14607                           
 14608                           ; BSR set to: 0
 14609  005ECE  0E07               	movlw	7
 14610  005ED0  644D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 14611  005ED2  D7DD               	goto	i2l7307
 14612                           
 14613                           ; BSR set to: 0
 14614                           ;usb_device.c: 2036: }
 14615                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 14616  005ED4  EE20 F002          	lfsr	2,2
 14617  005ED8  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 14618  005EDA  26D9               	addwf	fsr2l,f,c
 14619  005EDC  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14620  005EDE  22DA               	addwfc	fsr2h,f,c
 14621  005EE0  0E30               	movlw	48
 14622  005EE2  6EDE               	movwf	postinc2,c
 14623  005EE4  0E04               	movlw	4
 14624  005EE6  6EDD               	movwf	postdec2,c
 14625                           
 14626                           ; BSR set to: 0
 14627                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 14628  005EE8  EF23  F02A         	goto	_USBCtrlTrfSetupHandler	;wreg free
 14629  005EEC                     i2l7321:
 14630                           
 14631                           ; BSR set to: 0
 14632                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 14633  005EEC  502D               	movf	_USTATcopy,w,c	;volatile
 14634  005EEE  0BFD               	andlw	253
 14635  005EF0  0A04               	xorlw	4
 14636  005EF2  B4D8               	btfsc	status,2,c
 14637                           
 14638                           ; BSR set to: 0
 14639                           ;usb_device.c: 2049: {
 14640                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 14641  005EF4  ECF4  F030         	call	_USBCtrlTrfInHandler	;wreg free
 14642  005EF8  0012               	return		;funcret
 14643  005EFA                     __end_of_USBCtrlEPService:
 14644                           	opt stack 0
 14645                           pclatu	equ	0xFFB
 14646                           pclath	equ	0xFFA
 14647                           tblptru	equ	0xFF8
 14648                           tblptrh	equ	0xFF7
 14649                           tblptrl	equ	0xFF6
 14650                           tablat	equ	0xFF5
 14651                           prodh	equ	0xFF4
 14652                           prodl	equ	0xFF3
 14653                           intcon	equ	0xFF2
 14654                           postinc0	equ	0xFEE
 14655                           wreg	equ	0xFE8
 14656                           indf1	equ	0xFE7
 14657                           fsr1h	equ	0xFE2
 14658                           fsr1l	equ	0xFE1
 14659                           indf2	equ	0xFDF
 14660                           postinc2	equ	0xFDE
 14661                           postdec2	equ	0xFDD
 14662                           plusw2	equ	0xFDB
 14663                           fsr2h	equ	0xFDA
 14664                           fsr2l	equ	0xFD9
 14665                           status	equ	0xFD8
 14666                           
 14667 ;; *************** function _USBCtrlTrfSetupHandler *****************
 14668 ;; Defined at:
 14669 ;;		line 2097 in file "../Includes/Usb/framework/usb_device.c"
 14670 ;; Parameters:    Size  Location     Type
 14671 ;;		None
 14672 ;; Auto vars:     Size  Location     Type
 14673 ;;		None
 14674 ;; Return value:  Size  Location     Type
 14675 ;;                  1    wreg      void 
 14676 ;; Registers used:
 14677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14678 ;; Tracked objects:
 14679 ;;		On entry : F/0
 14680 ;;		On exit  : 0/0
 14681 ;;		Unchanged: 0/0
 14682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14683 ;;      Params:         0       0       0       0       0       0       0       0       0
 14684 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14685 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14686 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14687 ;;Total ram usage:        0 bytes
 14688 ;; Hardware stack levels used:    1
 14689 ;; Hardware stack levels required when called:    7
 14690 ;; This function calls:
 14691 ;;		_USBCheckStdRequest
 14692 ;;		_USBCtrlEPServiceComplete
 14693 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14694 ;; This function is called by:
 14695 ;;		_USBCtrlEPService
 14696 ;; This function uses a non-reentrant model
 14697 ;;
 14698                           
 14699                           	psect	text83
 14700  005446                     __ptext83:
 14701                           	opt stack 0
 14702  005446                     _USBCtrlTrfSetupHandler:
 14703                           	opt stack 10
 14704                           
 14705                           ; BSR set to: 0
 14706                           ;usb_device.c: 2102: shortPacketStatus = 0;
 14707                           
 14708                           ;incstack = 0
 14709  005446  6A2B               	clrf	_shortPacketStatus,c	;volatile
 14710                           
 14711                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 14712  005448  6A1E               	clrf	_USBDeferStatusStagePacket,c	;volatile
 14713                           
 14714                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 14715  00544A  6B95               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 14716                           
 14717                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 14718  00544C  6B96               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 14719                           
 14720                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 14721  00544E  6B93               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 14722                           
 14723                           ;usb_device.c: 2107: controlTransferState = 0;
 14724  005450  6A21               	clrf	_controlTransferState,c	;volatile
 14725                           
 14726                           ; BSR set to: 0
 14727                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 14728  005452  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 14729  005456  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14730  00545A  0E7F               	movlw	127
 14731  00545C  16DF               	andwf	indf2,f,c
 14732                           
 14733                           ; BSR set to: 0
 14734                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 14735  00545E  0E04               	movlw	4
 14736  005460  1A0F               	xorwf	_pBDTEntryIn,f,c
 14737                           
 14738                           ; BSR set to: 0
 14739                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 14740  005462  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 14741  005466  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14742  00546A  0E7F               	movlw	127
 14743  00546C  16DF               	andwf	indf2,f,c
 14744                           
 14745                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 14746  00546E  0E04               	movlw	4
 14747  005470  1A0F               	xorwf	_pBDTEntryIn,f,c
 14748                           
 14749                           ; BSR set to: 0
 14750                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 14751  005472  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14752  005476  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14753  00547A  0E7F               	movlw	127
 14754  00547C  16DF               	andwf	indf2,f,c
 14755                           
 14756                           ; BSR set to: 0
 14757                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 14758  00547E  6A0C               	clrf	_inPipes+3,c	;volatile
 14759                           
 14760                           ; BSR set to: 0
 14761                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 14762  005480  6A0D               	clrf	_inPipes+4,c	;volatile
 14763  005482  6A0E               	clrf	_inPipes+5,c	;volatile
 14764                           
 14765                           ; BSR set to: 0
 14766                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 14767  005484  6A04               	clrf	_outPipes+3,c	;volatile
 14768                           
 14769                           ; BSR set to: 0
 14770                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 14771  005486  6A05               	clrf	_outPipes+4,c	;volatile
 14772  005488  6A06               	clrf	_outPipes+5,c	;volatile
 14773                           
 14774                           ; BSR set to: 0
 14775                           ;usb_device.c: 2131: USBCheckStdRequest();
 14776  00548A  EC31  F02E         	call	_USBCheckStdRequest	;wreg free
 14777                           
 14778                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 14779  00548E  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14780  005490  0E03               	movlw	3
 14781  005492  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14782  005494  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14783  005496  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14784  005498  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14785  00549A  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14786  00549C  EC90  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14787                           
 14788                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 14789  0054A0  EF0D  F033         	goto	_USBCtrlEPServiceComplete	;wreg free
 14790  0054A4                     __end_of_USBCtrlTrfSetupHandler:
 14791                           	opt stack 0
 14792                           pclatu	equ	0xFFB
 14793                           pclath	equ	0xFFA
 14794                           tblptru	equ	0xFF8
 14795                           tblptrh	equ	0xFF7
 14796                           tblptrl	equ	0xFF6
 14797                           tablat	equ	0xFF5
 14798                           prodh	equ	0xFF4
 14799                           prodl	equ	0xFF3
 14800                           intcon	equ	0xFF2
 14801                           postinc0	equ	0xFEE
 14802                           wreg	equ	0xFE8
 14803                           indf1	equ	0xFE7
 14804                           fsr1h	equ	0xFE2
 14805                           fsr1l	equ	0xFE1
 14806                           indf2	equ	0xFDF
 14807                           postinc2	equ	0xFDE
 14808                           postdec2	equ	0xFDD
 14809                           plusw2	equ	0xFDB
 14810                           fsr2h	equ	0xFDA
 14811                           fsr2l	equ	0xFD9
 14812                           status	equ	0xFD8
 14813                           
 14814 ;; *************** function _USBCtrlEPServiceComplete *****************
 14815 ;; Defined at:
 14816 ;;		line 1282 in file "../Includes/Usb/framework/usb_device.c"
 14817 ;; Parameters:    Size  Location     Type
 14818 ;;		None
 14819 ;; Auto vars:     Size  Location     Type
 14820 ;;		None
 14821 ;; Return value:  Size  Location     Type
 14822 ;;                  1    wreg      void 
 14823 ;; Registers used:
 14824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14825 ;; Tracked objects:
 14826 ;;		On entry : 0/0
 14827 ;;		On exit  : 0/0
 14828 ;;		Unchanged: 0/0
 14829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14830 ;;      Params:         0       0       0       0       0       0       0       0       0
 14831 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14832 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14833 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14834 ;;Total ram usage:        0 bytes
 14835 ;; Hardware stack levels used:    1
 14836 ;; Hardware stack levels required when called:    2
 14837 ;; This function calls:
 14838 ;;		_USBCtrlEPAllowDataStage
 14839 ;;		_USBCtrlEPAllowStatusStage
 14840 ;; This function is called by:
 14841 ;;		_USBCtrlTrfSetupHandler
 14842 ;; This function uses a non-reentrant model
 14843 ;;
 14844                           
 14845                           	psect	text84
 14846  00661A                     __ptext84:
 14847                           	opt stack 0
 14848  00661A                     _USBCtrlEPServiceComplete:
 14849                           	opt stack 14
 14850                           
 14851                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 14852                           
 14853                           ;incstack = 0
 14854  00661A  9860               	bcf	3936,4,c	;volatile
 14855                           
 14856                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 14857  00661C  BE0C               	btfsc	_inPipes+3,7,c	;volatile
 14858  00661E  D037               	goto	i2l1509
 14859                           
 14860                           ;usb_device.c: 1295: {
 14861                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 14862  006620  AE04               	btfss	_outPipes+3,7,c	;volatile
 14863  006622  D00A               	goto	i2l6041
 14864                           
 14865                           ;usb_device.c: 1297: {
 14866                           ;usb_device.c: 1298: controlTransferState = 2;
 14867  006624  0E02               	movlw	2
 14868  006626  6E21               	movwf	_controlTransferState,c	;volatile
 14869                           
 14870                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 14871  006628  0100               	movlb	0	; () banked
 14872  00662A  5196               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 14873  00662C  E102               	bnz	i2l6037
 14874                           
 14875                           ; BSR set to: 0
 14876                           ;usb_device.c: 1310: {
 14877                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 14878  00662E  EC09  F02D         	call	_USBCtrlEPAllowDataStage	;wreg free
 14879  006632                     i2l6037:
 14880                           
 14881                           ; BSR set to: 0
 14882                           ;usb_device.c: 1312: }
 14883                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 14884  006632  6B99               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 14885                           
 14886                           ; BSR set to: 0
 14887                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 14888  006634  6B98               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14889                           
 14890                           ;usb_device.c: 1318: }
 14891  006636  0012               	return	
 14892  006638                     i2l6041:
 14893                           
 14894                           ;usb_device.c: 1319: else
 14895                           ;usb_device.c: 1320: {
 14896                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 14897  006638  EE20 F001          	lfsr	2,1
 14898  00663C  5017               	movf	_pBDTEntryEP0OutNext,w,c
 14899  00663E  26D9               	addwf	fsr2l,f,c
 14900  006640  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 14901  006642  22DA               	addwfc	fsr2h,f,c
 14902  006644  0E08               	movlw	8
 14903  006646  6EDF               	movwf	indf2,c
 14904                           
 14905                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14906  006648  EE20 F002          	lfsr	2,2
 14907  00664C  5017               	movf	_pBDTEntryEP0OutNext,w,c
 14908  00664E  26D9               	addwf	fsr2l,f,c
 14909  006650  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 14910  006652  22DA               	addwfc	fsr2h,f,c
 14911  006654  0E30               	movlw	48
 14912  006656  6EDE               	movwf	postinc2,c
 14913  006658  0E04               	movlw	4
 14914  00665A  6EDD               	movwf	postdec2,c
 14915                           
 14916                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14917  00665C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14918  006660  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14919  006664  0E0C               	movlw	12
 14920  006666  6EDF               	movwf	indf2,c
 14921                           
 14922                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14923  006668  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14924  00666C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14925  006670  0E00               	movlw	0
 14926  006672  8EDB               	bsf	plusw2,7,c
 14927                           
 14928                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 14929  006674  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 14930  006678  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14931  00667C  0E04               	movlw	4
 14932  00667E  6EDF               	movwf	indf2,c
 14933                           
 14934                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14935  006680  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 14936  006684  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14937  006688  0E00               	movlw	0
 14938  00668A  8EDB               	bsf	plusw2,7,c
 14939  00668C  0C00               	retlw	0
 14940  00668E                     i2l1509:
 14941                           
 14942                           ;usb_device.c: 1333: else
 14943                           ;usb_device.c: 1334: {
 14944                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 14945  00668E  0104               	movlb	4	; () banked
 14946  006690  AF30               	btfss	48,7,b	;volatile
 14947  006692  D00E               	goto	i2l6061
 14948                           
 14949                           ; BSR set to: 4
 14950                           ;usb_device.c: 1336: {
 14951                           ;usb_device.c: 1337: controlTransferState = 1;
 14952  006694  0E01               	movlw	1
 14953  006696  6E21               	movwf	_controlTransferState,c	;volatile
 14954                           
 14955                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 14956  006698  0100               	movlb	0	; () banked
 14957  00669A  5195               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 14958  00669C  E102               	bnz	i2l6053
 14959                           
 14960                           ; BSR set to: 0
 14961                           ;usb_device.c: 1352: {
 14962                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 14963  00669E  EC09  F02D         	call	_USBCtrlEPAllowDataStage	;wreg free
 14964  0066A2                     i2l6053:
 14965                           
 14966                           ; BSR set to: 0
 14967                           ;usb_device.c: 1354: }
 14968                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 14969  0066A2  6B99               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 14970                           
 14971                           ; BSR set to: 0
 14972                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 14973  0066A4  6B98               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14974                           
 14975                           ; BSR set to: 0
 14976                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 14977  0066A6  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 14978  0066A8  A4D8               	btfss	status,2,c
 14979  0066AA  0012               	return	
 14980                           
 14981                           ; BSR set to: 0
 14982                           ;usb_device.c: 1379: {
 14983                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 14984  0066AC  EF35  F030         	goto	_USBCtrlEPAllowStatusStage	;wreg free
 14985  0066B0                     i2l6061:
 14986                           
 14987                           ; BSR set to: 4
 14988                           ;usb_device.c: 1383: else
 14989                           ;usb_device.c: 1384: {
 14990                           ;usb_device.c: 1395: controlTransferState = 2;
 14991  0066B0  0E02               	movlw	2
 14992  0066B2  6E21               	movwf	_controlTransferState,c	;volatile
 14993                           
 14994                           ; BSR set to: 4
 14995                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 14996  0066B4  EE20 F001          	lfsr	2,1
 14997  0066B8  5017               	movf	_pBDTEntryEP0OutNext,w,c
 14998  0066BA  26D9               	addwf	fsr2l,f,c
 14999  0066BC  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 15000  0066BE  22DA               	addwfc	fsr2h,f,c
 15001  0066C0  0E08               	movlw	8
 15002  0066C2  6EDF               	movwf	indf2,c
 15003                           
 15004                           ; BSR set to: 4
 15005                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15006  0066C4  EE20 F002          	lfsr	2,2
 15007  0066C8  5017               	movf	_pBDTEntryEP0OutNext,w,c
 15008  0066CA  26D9               	addwf	fsr2l,f,c
 15009  0066CC  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 15010  0066CE  22DA               	addwfc	fsr2h,f,c
 15011  0066D0  0E30               	movlw	48
 15012  0066D2  6EDE               	movwf	postinc2,c
 15013  0066D4  0E04               	movlw	4
 15014  0066D6  6EDD               	movwf	postdec2,c
 15015                           
 15016                           ; BSR set to: 4
 15017                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 15018  0066D8  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15019  0066DC  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15020  0066E0  6EDF               	movwf	indf2,c
 15021                           
 15022                           ; BSR set to: 4
 15023                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15024  0066E2  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15025  0066E6  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15026  0066EA  0E00               	movlw	0
 15027  0066EC  8EDB               	bsf	plusw2,7,c
 15028                           
 15029                           ; BSR set to: 4
 15030                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 15031  0066EE  0100               	movlb	0	; () banked
 15032  0066F0  6B99               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 15033                           
 15034                           ; BSR set to: 0
 15035                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 15036  0066F2  6B98               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 15037                           
 15038                           ; BSR set to: 0
 15039                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 15040  0066F4  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15041  0066F6  E102 EF35  F030    	bz	_USBCtrlEPAllowStatusStage
 15042  0066FC  0012               	return	
 15043  0066FE                     __end_of_USBCtrlEPServiceComplete:
 15044                           	opt stack 0
 15045                           pclatu	equ	0xFFB
 15046                           pclath	equ	0xFFA
 15047                           tblptru	equ	0xFF8
 15048                           tblptrh	equ	0xFF7
 15049                           tblptrl	equ	0xFF6
 15050                           tablat	equ	0xFF5
 15051                           prodh	equ	0xFF4
 15052                           prodl	equ	0xFF3
 15053                           intcon	equ	0xFF2
 15054                           postinc0	equ	0xFEE
 15055                           wreg	equ	0xFE8
 15056                           indf1	equ	0xFE7
 15057                           fsr1h	equ	0xFE2
 15058                           fsr1l	equ	0xFE1
 15059                           indf2	equ	0xFDF
 15060                           postinc2	equ	0xFDE
 15061                           postdec2	equ	0xFDD
 15062                           plusw2	equ	0xFDB
 15063                           fsr2h	equ	0xFDA
 15064                           fsr2l	equ	0xFD9
 15065                           status	equ	0xFD8
 15066                           
 15067 ;; *************** function _USBCtrlEPAllowDataStage *****************
 15068 ;; Defined at:
 15069 ;;		line 1173 in file "../Includes/Usb/framework/usb_device.c"
 15070 ;; Parameters:    Size  Location     Type
 15071 ;;		None
 15072 ;; Auto vars:     Size  Location     Type
 15073 ;;		None
 15074 ;; Return value:  Size  Location     Type
 15075 ;;                  1    wreg      void 
 15076 ;; Registers used:
 15077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15078 ;; Tracked objects:
 15079 ;;		On entry : F/0
 15080 ;;		On exit  : F/0
 15081 ;;		Unchanged: 0/0
 15082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15083 ;;      Params:         0       0       0       0       0       0       0       0       0
 15084 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15085 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15086 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15087 ;;Total ram usage:        0 bytes
 15088 ;; Hardware stack levels used:    1
 15089 ;; Hardware stack levels required when called:    1
 15090 ;; This function calls:
 15091 ;;		_USBCtrlTrfTxService
 15092 ;; This function is called by:
 15093 ;;		_USBCtrlEPServiceComplete
 15094 ;; This function uses a non-reentrant model
 15095 ;;
 15096                           
 15097                           	psect	text85
 15098  005A12                     __ptext85:
 15099                           	opt stack 0
 15100  005A12                     _USBCtrlEPAllowDataStage:
 15101                           	opt stack 14
 15102                           
 15103                           ; BSR set to: 0
 15104                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 15105                           
 15106                           ;incstack = 0
 15107  005A12  6B95               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 15108                           
 15109                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 15110  005A14  6B96               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 15111                           
 15112                           ; BSR set to: 0
 15113                           ;usb_device.c: 1178: if(controlTransferState == 2)
 15114  005A16  0E02               	movlw	2
 15115  005A18  1821               	xorwf	_controlTransferState,w,c	;volatile
 15116  005A1A  E11F               	bnz	i2l5701
 15117                           
 15118                           ; BSR set to: 0
 15119                           ;usb_device.c: 1179: {
 15120                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 15121  005A1C  EE20 F001          	lfsr	2,1
 15122  005A20  5017               	movf	_pBDTEntryEP0OutNext,w,c
 15123  005A22  26D9               	addwf	fsr2l,f,c
 15124  005A24  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 15125  005A26  22DA               	addwfc	fsr2h,f,c
 15126  005A28  0E08               	movlw	8
 15127  005A2A  6EDF               	movwf	indf2,c
 15128                           
 15129                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 15130  005A2C  EE20 F002          	lfsr	2,2
 15131  005A30  5017               	movf	_pBDTEntryEP0OutNext,w,c
 15132  005A32  26D9               	addwf	fsr2l,f,c
 15133  005A34  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 15134  005A36  22DA               	addwfc	fsr2h,f,c
 15135  005A38  0E38               	movlw	56
 15136  005A3A  6EDE               	movwf	postinc2,c
 15137  005A3C  0E04               	movlw	4
 15138  005A3E  6EDD               	movwf	postdec2,c
 15139                           
 15140                           ; BSR set to: 0
 15141                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 15142  005A40  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15143  005A44  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15144  005A48  0E48               	movlw	72
 15145  005A4A  6EDF               	movwf	indf2,c
 15146                           
 15147                           ; BSR set to: 0
 15148                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15149  005A4C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15150  005A50  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15151  005A54  0E00               	movlw	0
 15152  005A56  8EDB               	bsf	plusw2,7,c
 15153                           
 15154                           ;usb_device.c: 1185: }
 15155  005A58  0C00               	retlw	0
 15156  005A5A                     i2l5701:
 15157                           
 15158                           ; BSR set to: 0
 15159                           ;usb_device.c: 1186: else
 15160                           ;usb_device.c: 1187: {
 15161                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 15162  005A5A  500D               	movf	_inPipes+4,w,c	;volatile
 15163  005A5C  0104               	movlb	4	; () banked
 15164  005A5E  5D36               	subwf	54,w,b	;volatile
 15165  005A60  500E               	movf	_inPipes+5,w,c	;volatile
 15166  005A62  5937               	subwfb	55,w,b	;volatile
 15167  005A64  E204               	bc	i2l5705
 15168                           
 15169                           ; BSR set to: 4
 15170                           ;usb_device.c: 1191: {
 15171                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 15172  005A66  C436 F00D          	movff	1078,_inPipes+4	;volatile
 15173  005A6A  C437 F00E          	movff	1079,_inPipes+5	;volatile
 15174  005A6E                     i2l5705:
 15175                           
 15176                           ; BSR set to: 4
 15177                           ;usb_device.c: 1193: }
 15178                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 15179  005A6E  EC93  F030         	call	_USBCtrlTrfTxService	;wreg free
 15180                           
 15181                           ; BSR set to: 0
 15182                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 15183  005A72  EE20 F002          	lfsr	2,2
 15184  005A76  500F               	movf	_pBDTEntryIn,w,c
 15185  005A78  26D9               	addwf	fsr2l,f,c
 15186  005A7A  5010               	movf	_pBDTEntryIn+1,w,c
 15187  005A7C  22DA               	addwfc	fsr2h,f,c
 15188  005A7E  0E38               	movlw	56
 15189  005A80  6EDE               	movwf	postinc2,c
 15190  005A82  0E04               	movlw	4
 15191  005A84  6EDD               	movwf	postdec2,c
 15192                           
 15193                           ; BSR set to: 0
 15194                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 15195  005A86  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 15196  005A8A  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15197  005A8E  0E48               	movlw	72
 15198  005A90  6EDF               	movwf	indf2,c
 15199                           
 15200                           ; BSR set to: 0
 15201                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15202  005A92  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 15203  005A96  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15204  005A9A  0E00               	movlw	0
 15205  005A9C  8EDB               	bsf	plusw2,7,c
 15206                           
 15207                           ; BSR set to: 0
 15208  005A9E  0C00               	retlw	0	;funcret
 15209  005AA0                     __end_of_USBCtrlEPAllowDataStage:
 15210                           	opt stack 0
 15211                           pclatu	equ	0xFFB
 15212                           pclath	equ	0xFFA
 15213                           tblptru	equ	0xFF8
 15214                           tblptrh	equ	0xFF7
 15215                           tblptrl	equ	0xFF6
 15216                           tablat	equ	0xFF5
 15217                           prodh	equ	0xFF4
 15218                           prodl	equ	0xFF3
 15219                           intcon	equ	0xFF2
 15220                           postinc0	equ	0xFEE
 15221                           wreg	equ	0xFE8
 15222                           indf1	equ	0xFE7
 15223                           fsr1h	equ	0xFE2
 15224                           fsr1l	equ	0xFE1
 15225                           indf2	equ	0xFDF
 15226                           postinc2	equ	0xFDE
 15227                           postdec2	equ	0xFDD
 15228                           plusw2	equ	0xFDB
 15229                           fsr2h	equ	0xFDA
 15230                           fsr2l	equ	0xFD9
 15231                           status	equ	0xFD8
 15232                           
 15233 ;; *************** function _USBCheckStdRequest *****************
 15234 ;; Defined at:
 15235 ;;		line 2317 in file "../Includes/Usb/framework/usb_device.c"
 15236 ;; Parameters:    Size  Location     Type
 15237 ;;		None
 15238 ;; Auto vars:     Size  Location     Type
 15239 ;;		None
 15240 ;; Return value:  Size  Location     Type
 15241 ;;                  1    wreg      void 
 15242 ;; Registers used:
 15243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15244 ;; Tracked objects:
 15245 ;;		On entry : F/0
 15246 ;;		On exit  : 0/0
 15247 ;;		Unchanged: 0/0
 15248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15249 ;;      Params:         0       0       0       0       0       0       0       0       0
 15250 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15251 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15252 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15253 ;;Total ram usage:        1 bytes
 15254 ;; Hardware stack levels used:    1
 15255 ;; Hardware stack levels required when called:    6
 15256 ;; This function calls:
 15257 ;;		_USBStdFeatureReqHandler
 15258 ;;		_USBStdGetDscHandler
 15259 ;;		_USBStdGetStatusHandler
 15260 ;;		_USBStdSetCfgHandler
 15261 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15262 ;; This function is called by:
 15263 ;;		_USBCtrlTrfSetupHandler
 15264 ;; This function uses a non-reentrant model
 15265 ;;
 15266                           
 15267                           	psect	text86
 15268  005C62                     __ptext86:
 15269                           	opt stack 0
 15270  005C62                     _USBCheckStdRequest:
 15271                           	opt stack 10
 15272                           
 15273                           ; BSR set to: 0
 15274                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 15275                           
 15276                           ; BSR set to: 0
 15277                           ;incstack = 0
 15278  005C62  0104               	movlb	4	; () banked
 15279  005C64  3930               	swapf	48,w,b	;volatile
 15280  005C66  32E8               	rrcf	wreg,f,c
 15281  005C68  0B03               	andlw	3
 15282  005C6A  E02A               	bz	i2l6163
 15283  005C6C  0012               	return	
 15284  005C6E                     i2l1636:
 15285                           
 15286                           ; BSR set to: 4
 15287                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 15288  005C6E  8E0C               	bsf	_inPipes+3,7,c	;volatile
 15289                           
 15290                           ; BSR set to: 4
 15291                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 15292  005C70  0E08               	movlw	8
 15293  005C72  0100               	movlb	0	; () banked
 15294  005C74  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 15295                           
 15296                           ;usb_device.c: 2327: break;
 15297  005C76  0C08               	retlw	8
 15298  005C78                     i2l6137:
 15299                           
 15300                           ; BSR set to: 4
 15301                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 15302  005C78  0E2C               	movlw	low _USBActiveConfiguration
 15303  005C7A  6E09               	movwf	_inPipes,c	;volatile
 15304  005C7C  6A0A               	clrf	_inPipes+1,c	;volatile
 15305                           
 15306                           ; BSR set to: 4
 15307                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15308  005C7E  800C               	bsf	_inPipes+3,0,c	;volatile
 15309                           
 15310                           ; BSR set to: 4
 15311                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 15312  005C80  0E01               	movlw	1
 15313  005C82  6E0D               	movwf	_inPipes+4,c	;volatile
 15314                           
 15315                           ; BSR set to: 4
 15316                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 15317  005C84  8E0C               	bsf	_inPipes+3,7,c	;volatile
 15318                           
 15319                           ;usb_device.c: 2339: break;
 15320  005C86  0C01               	retlw	1
 15321  005C88                     i2l6149:
 15322                           
 15323                           ; BSR set to: 4
 15324                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 15325  005C88  5134               	movf	52,w,b	;volatile
 15326  005C8A  0FCC               	addlw	low _USBAlternateInterface
 15327  005C8C  6E4A               	movwf	??_USBCheckStdRequest& (0+255),c
 15328  005C8E  C04A  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
 15329  005C92  6A0A               	clrf	_inPipes+1,c	;volatile
 15330                           
 15331                           ; BSR set to: 4
 15332                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15333  005C94  800C               	bsf	_inPipes+3,0,c	;volatile
 15334                           
 15335                           ; BSR set to: 4
 15336                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 15337  005C96  0E01               	movlw	1
 15338  005C98  6E0D               	movwf	_inPipes+4,c	;volatile
 15339                           
 15340                           ; BSR set to: 4
 15341                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 15342  005C9A  8E0C               	bsf	_inPipes+3,7,c	;volatile
 15343                           
 15344                           ;usb_device.c: 2352: break;
 15345  005C9C  0C01               	retlw	1
 15346  005C9E                     i2l1645:
 15347                           
 15348                           ; BSR set to: 4
 15349                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 15350  005C9E  8E0C               	bsf	_inPipes+3,7,c	;volatile
 15351                           
 15352                           ; BSR set to: 4
 15353                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 15354  005CA0  5134               	movf	52,w,b	;volatile
 15355  005CA2  0FCC               	addlw	low _USBAlternateInterface
 15356  005CA4  6ED9               	movwf	fsr2l,c
 15357  005CA6  6ADA               	clrf	fsr2h,c
 15358  005CA8  C432 FFDF          	movff	1074,indf2	;volatile
 15359                           
 15360                           ;usb_device.c: 2356: break;
 15361  005CAC  0012               	return	
 15362  005CAE                     i2l6159:
 15363                           
 15364                           ; BSR set to: 4
 15365                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 15366  005CAE  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15367  005CB0  0E02               	movlw	2
 15368  005CB2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15369  005CB4  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15370  005CB6  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15371  005CB8  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15372  005CBA  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15373  005CBC  EF90  F028         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15374  005CC0                     i2l6163:
 15375                           
 15376                           ; BSR set to: 4
 15377  005CC0  5131               	movf	49,w,b	;volatile
 15378                           
 15379                           ; Switch size 1, requested type "speed"
 15380                           ; Number of cases is 11, Range of values is 0 to 12
 15381                           ; switch strategies available:
 15382                           ; Name         Instructions Cycles
 15383                           ; simple_byte           34    18 (average)
 15384                           ;	Chosen strategy is simple_byte
 15385  005CC2  E102 EF02  F02C    	bz	_USBStdGetStatusHandler
 15386  005CC8  0A01               	xorlw	1	; case 1
 15387  005CCA  E102 EF42  F038    	bz	_USBStdFeatureReqHandler
 15388  005CD0  0A02               	xorlw	2	; case 3
 15389  005CD2  E102 EF42  F038    	bz	_USBStdFeatureReqHandler
 15390  005CD8  0A06               	xorlw	6	; case 5
 15391  005CDA  E0C9               	bz	i2l1636
 15392  005CDC  0A03               	xorlw	3	; case 6
 15393  005CDE  E102 EFF8  F034    	bz	_USBStdGetDscHandler
 15394  005CE4  0A01               	xorlw	1	; case 7
 15395  005CE6  E0E3               	bz	i2l6159
 15396  005CE8  0A0F               	xorlw	15	; case 8
 15397  005CEA  E0C6               	bz	i2l6137
 15398  005CEC  0A01               	xorlw	1	; case 9
 15399  005CEE  E102 EFD0  F02E    	bz	_USBStdSetCfgHandler
 15400  005CF4  0A03               	xorlw	3	; case 10
 15401  005CF6  E0C8               	bz	i2l6149
 15402  005CF8  0A01               	xorlw	1	; case 11
 15403  005CFA  E0D1               	bz	i2l1645
 15404  005CFC  0A07               	xorlw	7	; case 12
 15405  005CFE  0012               	return	
 15406  005D00                     __end_of_USBCheckStdRequest:
 15407                           	opt stack 0
 15408                           pclatu	equ	0xFFB
 15409                           pclath	equ	0xFFA
 15410                           tblptru	equ	0xFF8
 15411                           tblptrh	equ	0xFF7
 15412                           tblptrl	equ	0xFF6
 15413                           tablat	equ	0xFF5
 15414                           prodh	equ	0xFF4
 15415                           prodl	equ	0xFF3
 15416                           intcon	equ	0xFF2
 15417                           postinc0	equ	0xFEE
 15418                           wreg	equ	0xFE8
 15419                           indf1	equ	0xFE7
 15420                           fsr1h	equ	0xFE2
 15421                           fsr1l	equ	0xFE1
 15422                           indf2	equ	0xFDF
 15423                           postinc2	equ	0xFDE
 15424                           postdec2	equ	0xFDD
 15425                           plusw2	equ	0xFDB
 15426                           fsr2h	equ	0xFDA
 15427                           fsr2l	equ	0xFD9
 15428                           status	equ	0xFD8
 15429                           
 15430 ;; *************** function _USBStdSetCfgHandler *****************
 15431 ;; Defined at:
 15432 ;;		line 1629 in file "../Includes/Usb/framework/usb_device.c"
 15433 ;; Parameters:    Size  Location     Type
 15434 ;;		None
 15435 ;; Auto vars:     Size  Location     Type
 15436 ;;  i               1   21[COMRAM] unsigned char 
 15437 ;; Return value:  Size  Location     Type
 15438 ;;                  1    wreg      void 
 15439 ;; Registers used:
 15440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15441 ;; Tracked objects:
 15442 ;;		On entry : B/4
 15443 ;;		On exit  : F/0
 15444 ;;		Unchanged: 0/0
 15445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15446 ;;      Params:         0       0       0       0       0       0       0       0       0
 15447 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15448 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15449 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15450 ;;Total ram usage:        1 bytes
 15451 ;; Hardware stack levels used:    1
 15452 ;; Hardware stack levels required when called:    5
 15453 ;; This function calls:
 15454 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15455 ;;		i2_memset
 15456 ;; This function is called by:
 15457 ;;		_USBCheckStdRequest
 15458 ;; This function uses a non-reentrant model
 15459 ;;
 15460                           
 15461                           	psect	text87
 15462  005DA0                     __ptext87:
 15463                           	opt stack 0
 15464  005DA0                     _USBStdSetCfgHandler:
 15465                           	opt stack 10
 15466                           
 15467                           ;usb_device.c: 1631: uint8_t i;
 15468                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 15469                           
 15470                           ;incstack = 0
 15471  005DA0  8E0C               	bsf	_inPipes+3,7,c	;volatile
 15472                           
 15473                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 15474  005DA2  0E6B               	movlw	107
 15475  005DA4  6E2E               	movwf	i2memset@p1,c
 15476  005DA6  0E0F               	movlw	15
 15477  005DA8  6E2F               	movwf	i2memset@p1+1,c
 15478  005DAA  6A31               	clrf	i2memset@c+1,c
 15479  005DAC  6A30               	clrf	i2memset@c,c
 15480  005DAE  6A33               	clrf	i2memset@n+1,c
 15481  005DB0  0E02               	movlw	2
 15482  005DB2  6E32               	movwf	i2memset@n,c
 15483  005DB4  ECAE  F026         	call	i2_memset	;wreg free
 15484                           
 15485                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 15486  005DB8  6A2E               	clrf	i2memset@p1,c
 15487  005DBA  0E04               	movlw	4
 15488  005DBC  6E2F               	movwf	i2memset@p1+1,c
 15489  005DBE  6A31               	clrf	i2memset@c+1,c
 15490  005DC0  6A30               	clrf	i2memset@c,c
 15491  005DC2  6A33               	clrf	i2memset@n+1,c
 15492  005DC4  0E30               	movlw	48
 15493  005DC6  6E32               	movwf	i2memset@n,c
 15494  005DC8  ECAE  F026         	call	i2_memset	;wreg free
 15495                           
 15496                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 15497  005DCC  8C60               	bsf	3936,6,c	;volatile
 15498                           
 15499                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 15500  005DCE  6A43               	clrf	USBStdSetCfgHandler@i,c
 15501  005DD0                     i2l5725:
 15502                           
 15503                           ;usb_device.c: 1649: {
 15504                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 15505  005DD0  5043               	movf	USBStdSetCfgHandler@i,w,c
 15506  005DD2  0F72               	addlw	low _ep_data_in
 15507  005DD4  6ED9               	movwf	fsr2l,c
 15508  005DD6  6ADA               	clrf	fsr2h,c
 15509  005DD8  6ADF               	clrf	indf2,c
 15510                           
 15511                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 15512  005DDA  5043               	movf	USBStdSetCfgHandler@i,w,c
 15513  005DDC  0F75               	addlw	low _ep_data_out
 15514  005DDE  6ED9               	movwf	fsr2l,c
 15515  005DE0  6ADA               	clrf	fsr2h,c
 15516  005DE2  6ADF               	clrf	indf2,c
 15517  005DE4  2A43               	incf	USBStdSetCfgHandler@i,f,c
 15518  005DE6  0E02               	movlw	2
 15519  005DE8  6443               	cpfsgt	USBStdSetCfgHandler@i,c
 15520  005DEA  D7F2               	goto	i2l5725
 15521                           
 15522                           ;usb_device.c: 1652: }
 15523                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 15524  005DEC  0ECC               	movlw	low _USBAlternateInterface
 15525  005DEE  6E2E               	movwf	i2memset@p1,c
 15526  005DF0  6A2F               	clrf	i2memset@p1+1,c
 15527  005DF2  6A31               	clrf	i2memset@c+1,c
 15528  005DF4  6A30               	clrf	i2memset@c,c
 15529  005DF6  6A33               	clrf	i2memset@n+1,c
 15530  005DF8  0E02               	movlw	2
 15531  005DFA  6E32               	movwf	i2memset@n,c
 15532  005DFC  ECAE  F026         	call	i2_memset	;wreg free
 15533                           
 15534                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 15535  005E00  9C60               	bcf	3936,6,c	;volatile
 15536                           
 15537                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15538  005E02  0E08               	movlw	8
 15539  005E04  6E0F               	movwf	_pBDTEntryIn,c
 15540  005E06  0E04               	movlw	4
 15541  005E08  6E10               	movwf	_pBDTEntryIn+1,c
 15542                           
 15543                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 15544  005E0A  0E00               	movlw	0
 15545  005E0C  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 15546  005E0E  0E04               	movlw	4
 15547  005E10  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15548                           
 15549                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15550  005E12  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15551  005E16  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15552                           
 15553                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 15554  005E1A  C432 F02C          	movff	1074,_USBActiveConfiguration	;volatile
 15555                           
 15556                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 15557  005E1E  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 15558  005E20  E104               	bnz	i2l5747
 15559                           
 15560                           ;usb_device.c: 1671: {
 15561                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 15562  005E22  0E10               	movlw	16
 15563  005E24  0100               	movlb	0	; () banked
 15564  005E26  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 15565                           
 15566                           ;usb_device.c: 1674: }
 15567  005E28  0C10               	retlw	16
 15568  005E2A                     i2l5747:
 15569                           
 15570                           ;usb_device.c: 1675: else
 15571                           ;usb_device.c: 1676: {
 15572                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 15573  005E2A  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15574  005E2C  0E01               	movlw	1
 15575  005E2E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15576  005E30  0E2C               	movlw	low _USBActiveConfiguration
 15577  005E32  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15578  005E34  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15579  005E36  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15580  005E38  0E01               	movlw	1
 15581  005E3A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15582  005E3C  EC90  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15583                           
 15584                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 15585  005E40  0E20               	movlw	32
 15586  005E42  0100               	movlb	0	; () banked
 15587  005E44  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 15588                           
 15589                           ; BSR set to: 0
 15590  005E46  0C20               	retlw	32	;funcret
 15591  005E48                     __end_of_USBStdSetCfgHandler:
 15592                           	opt stack 0
 15593                           pclatu	equ	0xFFB
 15594                           pclath	equ	0xFFA
 15595                           tblptru	equ	0xFF8
 15596                           tblptrh	equ	0xFF7
 15597                           tblptrl	equ	0xFF6
 15598                           tablat	equ	0xFF5
 15599                           prodh	equ	0xFF4
 15600                           prodl	equ	0xFF3
 15601                           intcon	equ	0xFF2
 15602                           postinc0	equ	0xFEE
 15603                           wreg	equ	0xFE8
 15604                           indf1	equ	0xFE7
 15605                           fsr1h	equ	0xFE2
 15606                           fsr1l	equ	0xFE1
 15607                           indf2	equ	0xFDF
 15608                           postinc2	equ	0xFDE
 15609                           postdec2	equ	0xFDD
 15610                           plusw2	equ	0xFDB
 15611                           fsr2h	equ	0xFDA
 15612                           fsr2l	equ	0xFD9
 15613                           status	equ	0xFD8
 15614                           
 15615 ;; *************** function i2_memset *****************
 15616 ;; Defined at:
 15617 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 15618 ;; Parameters:    Size  Location     Type
 15619 ;;  p1              2    0[COMRAM] PTR void 
 15620 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15621 ;;  c               2    2[COMRAM] int 
 15622 ;;  n               2    4[COMRAM] unsigned int 
 15623 ;; Auto vars:     Size  Location     Type
 15624 ;;  memset          2    6[COMRAM] PTR unsigned char 
 15625 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15626 ;; Return value:  Size  Location     Type
 15627 ;;                  2    0[COMRAM] PTR void 
 15628 ;; Registers used:
 15629 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15630 ;; Tracked objects:
 15631 ;;		On entry : 0/0
 15632 ;;		On exit  : 0/0
 15633 ;;		Unchanged: 0/0
 15634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15635 ;;      Params:         6       0       0       0       0       0       0       0       0
 15636 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15637 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15638 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15639 ;;Total ram usage:        8 bytes
 15640 ;; Hardware stack levels used:    1
 15641 ;; This function calls:
 15642 ;;		Nothing
 15643 ;; This function is called by:
 15644 ;;		_USBStdSetCfgHandler
 15645 ;;		i2_USBDeviceInit
 15646 ;; This function uses a non-reentrant model
 15647 ;;
 15648                           
 15649                           	psect	text88
 15650  004D5C                     __ptext88:
 15651                           	opt stack 0
 15652  004D5C                     i2_memset:
 15653                           	opt stack 17
 15654                           
 15655                           ; BSR set to: 0
 15656                           ;incstack = 0
 15657  004D5C  C02E  F034         	movff	i2memset@p1,i2memset@p
 15658  004D60  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 15659  004D64  D008               	goto	i2l5529
 15660  004D66                     i2l5525:
 15661  004D66  C034  FFD9         	movff	i2memset@p,fsr2l
 15662  004D6A  C035  FFDA         	movff	i2memset@p+1,fsr2h
 15663  004D6E  C030  FFDF         	movff	i2memset@c,indf2
 15664  004D72  4A34               	infsnz	i2memset@p,f,c
 15665  004D74  2A35               	incf	i2memset@p+1,f,c
 15666  004D76                     i2l5529:
 15667  004D76  0632               	decf	i2memset@n,f,c
 15668  004D78  A0D8               	btfss	status,0,c
 15669  004D7A  0633               	decf	i2memset@n+1,f,c
 15670  004D7C  2832               	incf	i2memset@n,w,c
 15671  004D7E  E1F3               	bnz	i2l5525
 15672  004D80  2833               	incf	i2memset@n+1,w,c
 15673  004D82  E1F1               	bnz	i2l5525
 15674  004D84  0012               	return		;funcret
 15675  004D86                     __end_ofi2_memset:
 15676                           	opt stack 0
 15677                           pclatu	equ	0xFFB
 15678                           pclath	equ	0xFFA
 15679                           tblptru	equ	0xFF8
 15680                           tblptrh	equ	0xFF7
 15681                           tblptrl	equ	0xFF6
 15682                           tablat	equ	0xFF5
 15683                           prodh	equ	0xFF4
 15684                           prodl	equ	0xFF3
 15685                           intcon	equ	0xFF2
 15686                           postinc0	equ	0xFEE
 15687                           wreg	equ	0xFE8
 15688                           indf1	equ	0xFE7
 15689                           fsr1h	equ	0xFE2
 15690                           fsr1l	equ	0xFE1
 15691                           indf2	equ	0xFDF
 15692                           postinc2	equ	0xFDE
 15693                           postdec2	equ	0xFDD
 15694                           plusw2	equ	0xFDB
 15695                           fsr2h	equ	0xFDA
 15696                           fsr2l	equ	0xFD9
 15697                           status	equ	0xFD8
 15698                           
 15699 ;; *************** function _USBStdGetStatusHandler *****************
 15700 ;; Defined at:
 15701 ;;		line 1773 in file "../Includes/Usb/framework/usb_device.c"
 15702 ;; Parameters:    Size  Location     Type
 15703 ;;		None
 15704 ;; Auto vars:     Size  Location     Type
 15705 ;;  p               2    0[COMRAM] PTR struct __BDT
 15706 ;;		 -> BDT(48), NULL(0), 
 15707 ;; Return value:  Size  Location     Type
 15708 ;;                  1    wreg      void 
 15709 ;; Registers used:
 15710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15711 ;; Tracked objects:
 15712 ;;		On entry : B/4
 15713 ;;		On exit  : F/4
 15714 ;;		Unchanged: 0/0
 15715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15716 ;;      Params:         0       0       0       0       0       0       0       0       0
 15717 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15718 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15719 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15720 ;;Total ram usage:        2 bytes
 15721 ;; Hardware stack levels used:    1
 15722 ;; This function calls:
 15723 ;;		Nothing
 15724 ;; This function is called by:
 15725 ;;		_USBCheckStdRequest
 15726 ;; This function uses a non-reentrant model
 15727 ;;
 15728                           
 15729                           	psect	text89
 15730  005804                     __ptext89:
 15731                           	opt stack 0
 15732  005804                     _USBStdGetStatusHandler:
 15733                           	opt stack 15
 15734                           
 15735                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 15736                           
 15737                           ;incstack = 0
 15738  005804  0104               	movlb	4	; () banked
 15739  005806  6B38               	clrf	56,b	;volatile
 15740                           
 15741                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 15742  005808  6B39               	clrf	57,b	;volatile
 15743                           
 15744                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 15745  00580A  D02A               	goto	i2l5797
 15746  00580C                     i2l1572:
 15747                           
 15748                           ; BSR set to: 4
 15749                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 15750  00580C  8E0C               	bsf	_inPipes+3,7,c	;volatile
 15751                           
 15752                           ; BSR set to: 4
 15753                           ;usb_device.c: 1789: }
 15754                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 15755                           
 15756                           ;usb_device.c: 1786: if(0 == 1)
 15757  00580E  041D               	decf	_RemoteWakeup,w,c	;volatile
 15758  005810  E12E               	bnz	i2l1575
 15759                           
 15760                           ; BSR set to: 4
 15761                           ;usb_device.c: 1792: {
 15762                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 15763  005812  8338               	bsf	56,1,b	;volatile
 15764  005814  D02C               	goto	i2l1575
 15765  005816                     i2l1576:
 15766                           
 15767                           ; BSR set to: 4
 15768                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 15769  005816  8E0C               	bsf	_inPipes+3,7,c	;volatile
 15770                           
 15771                           ;usb_device.c: 1798: break;
 15772  005818  D02A               	goto	i2l1575
 15773  00581A                     i2l1577:
 15774                           
 15775                           ; BSR set to: 4
 15776                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 15777  00581A  8E0C               	bsf	_inPipes+3,7,c	;volatile
 15778                           
 15779                           ;usb_device.c: 1804: {
 15780                           ;usb_device.c: 1805: BDT_ENTRY *p;
 15781                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 15782  00581C  BF34               	btfsc	52,7,b	;volatile
 15783  00581E  D006               	goto	i2l5787
 15784                           
 15785                           ; BSR set to: 4
 15786                           ;usb_device.c: 1808: {
 15787                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 15788  005820  5134               	movf	52,w,b	;volatile
 15789  005822  0B0F               	andlw	15
 15790  005824  0D02               	mullw	2
 15791  005826  50F3               	movf	prodl,w,c
 15792  005828  0F68               	addlw	low _pBDTEntryOut
 15793  00582A  D005               	goto	L23
 15794  00582C                     i2l5787:
 15795                           
 15796                           ; BSR set to: 4
 15797                           ;usb_device.c: 1811: else
 15798                           ;usb_device.c: 1812: {
 15799                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 15800  00582C  5134               	movf	52,w,b	;volatile
 15801  00582E  0B0F               	andlw	15
 15802  005830  0D02               	mullw	2
 15803  005832  50F3               	movf	prodl,w,c
 15804  005834  0F0F               	addlw	low _pBDTEntryIn
 15805  005836                     L23:
 15806  005836  6ED9               	movwf	fsr2l,c
 15807  005838  6ADA               	clrf	fsr2h,c
 15808  00583A  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 15809  00583E  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 15810                           
 15811                           ; BSR set to: 4
 15812                           ;usb_device.c: 1814: }
 15813                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 15814  005842  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15815  005846  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15816  00584A  AEDF               	btfss	indf2,7,c
 15817  00584C  D010               	goto	i2l1575
 15818                           
 15819                           ; BSR set to: 4
 15820  00584E  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15821  005852  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15822  005856  A4DF               	btfss	indf2,2,c
 15823  005858  D00A               	goto	i2l1575
 15824                           
 15825                           ; BSR set to: 4
 15826                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 15827  00585A  0E01               	movlw	1
 15828  00585C  6F38               	movwf	56,b	;volatile
 15829  00585E  D007               	goto	i2l1575
 15830  005860                     i2l5797:
 15831                           
 15832                           ; BSR set to: 4
 15833  005860  5130               	movf	48,w,b	;volatile
 15834  005862  0B1F               	andlw	31
 15835                           
 15836                           ; Switch size 1, requested type "speed"
 15837                           ; Number of cases is 3, Range of values is 0 to 2
 15838                           ; switch strategies available:
 15839                           ; Name         Instructions Cycles
 15840                           ; simple_byte           10     6 (average)
 15841                           ;	Chosen strategy is simple_byte
 15842  005864  E0D3               	bz	i2l1572
 15843  005866  0A01               	xorlw	1	; case 1
 15844  005868  E0D6               	bz	i2l1576
 15845  00586A  0A03               	xorlw	3	; case 2
 15846  00586C  E0D6               	bz	i2l1577
 15847  00586E                     i2l1575:
 15848                           
 15849                           ; BSR set to: 4
 15850                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 15851  00586E  AE0C               	btfss	_inPipes+3,7,c	;volatile
 15852  005870  0012               	return	
 15853                           
 15854                           ; BSR set to: 4
 15855                           ;usb_device.c: 1823: {
 15856                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 15857  005872  0E38               	movlw	56
 15858  005874  6E09               	movwf	_inPipes,c	;volatile
 15859  005876  0E04               	movlw	4
 15860  005878  6E0A               	movwf	_inPipes+1,c	;volatile
 15861                           
 15862                           ; BSR set to: 4
 15863                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15864  00587A  800C               	bsf	_inPipes+3,0,c	;volatile
 15865                           
 15866                           ; BSR set to: 4
 15867                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 15868  00587C  0E02               	movlw	2
 15869  00587E  6E0D               	movwf	_inPipes+4,c	;volatile
 15870                           
 15871                           ; BSR set to: 4
 15872  005880  0C02               	retlw	2	;funcret
 15873  005882                     __end_of_USBStdGetStatusHandler:
 15874                           	opt stack 0
 15875                           pclatu	equ	0xFFB
 15876                           pclath	equ	0xFFA
 15877                           tblptru	equ	0xFF8
 15878                           tblptrh	equ	0xFF7
 15879                           tblptrl	equ	0xFF6
 15880                           tablat	equ	0xFF5
 15881                           prodh	equ	0xFF4
 15882                           prodl	equ	0xFF3
 15883                           intcon	equ	0xFF2
 15884                           postinc0	equ	0xFEE
 15885                           wreg	equ	0xFE8
 15886                           indf1	equ	0xFE7
 15887                           fsr1h	equ	0xFE2
 15888                           fsr1l	equ	0xFE1
 15889                           indf2	equ	0xFDF
 15890                           postinc2	equ	0xFDE
 15891                           postdec2	equ	0xFDD
 15892                           plusw2	equ	0xFDB
 15893                           fsr2h	equ	0xFDA
 15894                           fsr2l	equ	0xFD9
 15895                           status	equ	0xFD8
 15896                           
 15897 ;; *************** function _USBStdGetDscHandler *****************
 15898 ;; Defined at:
 15899 ;;		line 1704 in file "../Includes/Usb/framework/usb_device.c"
 15900 ;; Parameters:    Size  Location     Type
 15901 ;;		None
 15902 ;; Auto vars:     Size  Location     Type
 15903 ;;		None
 15904 ;; Return value:  Size  Location     Type
 15905 ;;                  1    wreg      void 
 15906 ;; Registers used:
 15907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 15908 ;; Tracked objects:
 15909 ;;		On entry : B/4
 15910 ;;		On exit  : 0/0
 15911 ;;		Unchanged: 0/0
 15912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15913 ;;      Params:         0       0       0       0       0       0       0       0       0
 15914 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15915 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15916 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15917 ;;Total ram usage:        2 bytes
 15918 ;; Hardware stack levels used:    1
 15919 ;; This function calls:
 15920 ;;		Nothing
 15921 ;; This function is called by:
 15922 ;;		_USBCheckStdRequest
 15923 ;; This function uses a non-reentrant model
 15924 ;;
 15925                           
 15926                           	psect	text90
 15927  0069F0                     __ptext90:
 15928                           	opt stack 0
 15929  0069F0                     _USBStdGetDscHandler:
 15930                           	opt stack 15
 15931                           
 15932                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 15933                           
 15934                           ; BSR set to: 4
 15935                           ;incstack = 0
 15936  0069F0  0E80               	movlw	128
 15937  0069F2  0104               	movlb	4	; () banked
 15938  0069F4  1930               	xorwf	48,w,b	;volatile
 15939  0069F6  A4D8               	btfss	status,2,c
 15940  0069F8  0012               	return	
 15941                           
 15942                           ; BSR set to: 4
 15943                           ;usb_device.c: 1707: {
 15944                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 15945  0069FA  0EC0               	movlw	192
 15946  0069FC  6E0C               	movwf	_inPipes+3,c	;volatile
 15947                           
 15948                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 15949  0069FE  D071               	goto	i2l5775
 15950  006A00                     i2l5755:
 15951                           
 15952                           ; BSR set to: 4
 15953                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 15954  006A00  0ED8               	movlw	low _device_dsc
 15955  006A02  6E09               	movwf	_inPipes,c	;volatile
 15956  006A04  0E7B               	movlw	high _device_dsc
 15957  006A06  6E0A               	movwf	_inPipes+1,c	;volatile
 15958                           
 15959                           ; BSR set to: 4
 15960                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 15961  006A08  6A0E               	clrf	_inPipes+5,c	;volatile
 15962  006A0A  0E12               	movlw	18
 15963  006A0C  6E0D               	movwf	_inPipes+4,c	;volatile
 15964                           
 15965                           ;usb_device.c: 1715: break;
 15966  006A0E  0C12               	retlw	18
 15967  006A10                     i2l5759:
 15968                           
 15969                           ; BSR set to: 4
 15970                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 15971  006A10  5132               	movf	50,w,b	;volatile
 15972  006A12  E13D               	bnz	i2l1562
 15973                           
 15974                           ; BSR set to: 4
 15975                           ;usb_device.c: 1721: {
 15976                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 15977  006A14  5132               	movf	50,w,b	;volatile
 15978  006A16  0D02               	mullw	2
 15979  006A18  0E2B               	movlw	low _USB_CD_Ptr
 15980  006A1A  24F3               	addwf	prodl,w,c
 15981  006A1C  6EF6               	movwf	tblptrl,c
 15982  006A1E  0E78               	movlw	high _USB_CD_Ptr
 15983  006A20  20F4               	addwfc	prodh,w,c
 15984  006A22  6EF7               	movwf	tblptrh,c
 15985  006A24                     	if	0	;There are less than 3 active tblptr bytes
 15986  006A24                     	endif
 15987  006A24  0009               	tblrd		*+
 15988  006A26  CFF5 F009          	movff	tablat,_inPipes	;volatile
 15989  006A2A  000A               	tblrd		*-
 15990  006A2C  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 15991                           
 15992                           ; BSR set to: 4
 15993                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 15994  006A30  0E02               	movlw	2
 15995  006A32  2409               	addwf	_inPipes,w,c	;volatile
 15996  006A34  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 15997  006A36  0E00               	movlw	0
 15998  006A38  200A               	addwfc	_inPipes+1,w,c	;volatile
 15999  006A3A  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 16000  006A3C  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 16001  006A40  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 16002  006A44  6AF8               	clrf	tblptru,c
 16003  006A46  0E07               	movlw	(high __ramtop+-1)
 16004  006A48  64F7               	cpfsgt	tblptrh,c
 16005  006A4A  D003               	bra	i2u348_47
 16006  006A4C  0008               	tblrd		*
 16007  006A4E  50F5               	movf	tablat,w,c
 16008  006A50  D005               	bra	i2u348_40
 16009  006A52                     i2u348_47:
 16010  006A52  CFF6 FFE1          	movff	tblptrl,fsr1l
 16011  006A56  CFF7 FFE2          	movff	tblptrh,fsr1h
 16012  006A5A  50E7               	movf	indf1,w,c
 16013  006A5C                     i2u348_40:
 16014  006A5C  6E0D               	movwf	_inPipes+4,c	;volatile
 16015                           
 16016                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 16017  006A5E  0E03               	movlw	3
 16018  006A60  2409               	addwf	_inPipes,w,c	;volatile
 16019  006A62  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 16020  006A64  0E00               	movlw	0
 16021  006A66  200A               	addwfc	_inPipes+1,w,c	;volatile
 16022  006A68  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 16023  006A6A  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 16024  006A6E  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 16025  006A72  6AF8               	clrf	tblptru,c
 16026  006A74  0E07               	movlw	(high __ramtop+-1)
 16027  006A76  64F7               	cpfsgt	tblptrh,c
 16028  006A78  D003               	bra	i2u349_47
 16029  006A7A  0008               	tblrd		*
 16030  006A7C  50F5               	movf	tablat,w,c
 16031  006A7E  D005               	bra	i2u349_40
 16032  006A80                     i2u349_47:
 16033  006A80  CFF6 FFE1          	movff	tblptrl,fsr1l
 16034  006A84  CFF7 FFE2          	movff	tblptrh,fsr1h
 16035  006A88  50E7               	movf	indf1,w,c
 16036  006A8A                     i2u349_40:
 16037  006A8A  6E0E               	movwf	_inPipes+5,c	;volatile
 16038                           
 16039                           ;usb_device.c: 1729: }
 16040  006A8C  0012               	return	
 16041  006A8E                     i2l1562:
 16042                           
 16043                           ; BSR set to: 4
 16044                           ;usb_device.c: 1730: else
 16045                           ;usb_device.c: 1731: {
 16046                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 16047  006A8E  6A0C               	clrf	_inPipes+3,c	;volatile
 16048  006A90  0012               	return	
 16049  006A92                     i2l5767:
 16050                           
 16051                           ; BSR set to: 4
 16052                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 16053  006A92  0E03               	movlw	3
 16054  006A94  6132               	cpfslt	50,b	;volatile
 16055  006A96  D021               	goto	i2l1565
 16056                           
 16057                           ; BSR set to: 4
 16058                           ;usb_device.c: 1740: {
 16059                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 16060  006A98  5132               	movf	50,w,b	;volatile
 16061  006A9A  0D02               	mullw	2
 16062  006A9C  0E25               	movlw	low _USB_SD_Ptr
 16063  006A9E  24F3               	addwf	prodl,w,c
 16064  006AA0  6EF6               	movwf	tblptrl,c
 16065  006AA2  0E78               	movlw	high _USB_SD_Ptr
 16066  006AA4  20F4               	addwfc	prodh,w,c
 16067  006AA6  6EF7               	movwf	tblptrh,c
 16068  006AA8                     	if	0	;There are less than 3 active tblptr bytes
 16069  006AA8                     	endif
 16070  006AA8  0009               	tblrd		*+
 16071  006AAA  CFF5 F009          	movff	tablat,_inPipes	;volatile
 16072  006AAE  000A               	tblrd		*-
 16073  006AB0  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 16074                           
 16075                           ; BSR set to: 4
 16076                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 16077  006AB4  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 16078  006AB8  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 16079  006ABC  6AF8               	clrf	tblptru,c
 16080  006ABE  0E07               	movlw	(high __ramtop+-1)
 16081  006AC0  64F7               	cpfsgt	tblptrh,c
 16082  006AC2  D003               	bra	i2u351_47
 16083  006AC4  0008               	tblrd		*
 16084  006AC6  50F5               	movf	tablat,w,c
 16085  006AC8  D005               	bra	i2u351_40
 16086  006ACA                     i2u351_47:
 16087  006ACA  CFF6 FFE1          	movff	tblptrl,fsr1l
 16088  006ACE  CFF7 FFE2          	movff	tblptrh,fsr1h
 16089  006AD2  50E7               	movf	indf1,w,c
 16090  006AD4                     i2u351_40:
 16091  006AD4  6E0D               	movwf	_inPipes+4,c	;volatile
 16092  006AD6  6A0E               	clrf	_inPipes+5,c	;volatile
 16093                           
 16094                           ;usb_device.c: 1745: }
 16095  006AD8  0012               	return	
 16096  006ADA                     i2l1565:
 16097                           
 16098                           ; BSR set to: 4
 16099                           ;usb_device.c: 1746: else
 16100                           ;usb_device.c: 1747: {
 16101                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 16102  006ADA  6A0C               	clrf	_inPipes+3,c	;volatile
 16103  006ADC  0012               	return	
 16104  006ADE                     i2l1567:
 16105                           
 16106                           ; BSR set to: 4
 16107                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 16108  006ADE  6A0C               	clrf	_inPipes+3,c	;volatile
 16109                           
 16110                           ;usb_device.c: 1753: break;
 16111  006AE0  0012               	return	
 16112  006AE2                     i2l5775:
 16113                           
 16114                           ; BSR set to: 4
 16115  006AE2  5133               	movf	51,w,b	;volatile
 16116                           
 16117                           ; Switch size 1, requested type "speed"
 16118                           ; Number of cases is 3, Range of values is 1 to 3
 16119                           ; switch strategies available:
 16120                           ; Name         Instructions Cycles
 16121                           ; simple_byte           10     6 (average)
 16122                           ;	Chosen strategy is simple_byte
 16123  006AE4  0A01               	xorlw	1	; case 1
 16124  006AE6  E08C               	bz	i2l5755
 16125  006AE8  0A03               	xorlw	3	; case 2
 16126  006AEA  E092               	bz	i2l5759
 16127  006AEC  0A01               	xorlw	1	; case 3
 16128  006AEE  E0D1               	bz	i2l5767
 16129  006AF0  D7F6               	goto	i2l1567
 16130  006AF2                     __end_of_USBStdGetDscHandler:
 16131                           	opt stack 0
 16132                           pclatu	equ	0xFFB
 16133                           pclath	equ	0xFFA
 16134                           tblptru	equ	0xFF8
 16135                           tblptrh	equ	0xFF7
 16136                           tblptrl	equ	0xFF6
 16137                           tablat	equ	0xFF5
 16138                           prodh	equ	0xFF4
 16139                           prodl	equ	0xFF3
 16140                           intcon	equ	0xFF2
 16141                           postinc0	equ	0xFEE
 16142                           wreg	equ	0xFE8
 16143                           indf1	equ	0xFE7
 16144                           fsr1h	equ	0xFE2
 16145                           fsr1l	equ	0xFE1
 16146                           indf2	equ	0xFDF
 16147                           postinc2	equ	0xFDE
 16148                           postdec2	equ	0xFDD
 16149                           plusw2	equ	0xFDB
 16150                           fsr2h	equ	0xFDA
 16151                           fsr2l	equ	0xFD9
 16152                           status	equ	0xFD8
 16153                           
 16154 ;; *************** function _USBStdFeatureReqHandler *****************
 16155 ;; Defined at:
 16156 ;;		line 2385 in file "../Includes/Usb/framework/usb_device.c"
 16157 ;; Parameters:    Size  Location     Type
 16158 ;;		None
 16159 ;; Auto vars:     Size  Location     Type
 16160 ;;  p               2   26[COMRAM] PTR struct __BDT
 16161 ;;		 -> BDT(48), NULL(0), 
 16162 ;;  pUEP            2   23[COMRAM] PTR unsigned char 
 16163 ;;		 -> UEP0(1), 
 16164 ;;  current_ep_d    1   25[COMRAM] struct .
 16165 ;; Return value:  Size  Location     Type
 16166 ;;                  1    wreg      void 
 16167 ;; Registers used:
 16168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16169 ;; Tracked objects:
 16170 ;;		On entry : B/4
 16171 ;;		On exit  : B/0
 16172 ;;		Unchanged: 0/0
 16173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16174 ;;      Params:         0       0       0       0       0       0       0       0       0
 16175 ;;      Locals:         5       0       0       0       0       0       0       0       0
 16176 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16177 ;;      Totals:         7       0       0       0       0       0       0       0       0
 16178 ;;Total ram usage:        7 bytes
 16179 ;; Hardware stack levels used:    1
 16180 ;; Hardware stack levels required when called:    5
 16181 ;; This function calls:
 16182 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16183 ;; This function is called by:
 16184 ;;		_USBCheckStdRequest
 16185 ;; This function uses a non-reentrant model
 16186 ;;
 16187                           
 16188                           	psect	text91
 16189  007084                     __ptext91:
 16190                           	opt stack 0
 16191  007084                     _USBStdFeatureReqHandler:
 16192                           	opt stack 10
 16193                           
 16194                           ;usb_device.c: 2387: BDT_ENTRY *p;
 16195                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 16196                           ;usb_device.c: 2390: unsigned char* pUEP;
 16197                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 16198                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 16199                           
 16200                           ;incstack = 0
 16201  007084  0104               	movlb	4	; () banked
 16202  007086  0532               	decf	50,w,b	;volatile
 16203  007088  E10B               	bnz	i2l5815
 16204                           
 16205                           ; BSR set to: 4
 16206  00708A  5130               	movf	48,w,b	;volatile
 16207  00708C  0B1F               	andlw	31
 16208  00708E  E108               	bnz	i2l5815
 16209                           
 16210                           ; BSR set to: 4
 16211                           ;usb_device.c: 2395: {
 16212                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 16213  007090  8E0C               	bsf	_inPipes+3,7,c	;volatile
 16214                           
 16215                           ; BSR set to: 4
 16216                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 16217  007092  0E03               	movlw	3
 16218  007094  1931               	xorwf	49,w,b	;volatile
 16219  007096  E103               	bnz	i2l1652
 16220                           
 16221                           ; BSR set to: 4
 16222                           ;usb_device.c: 2398: RemoteWakeup = 1;
 16223  007098  0E01               	movlw	1
 16224  00709A  6E1D               	movwf	_RemoteWakeup,c	;volatile
 16225  00709C  D001               	goto	i2l5815
 16226  00709E                     i2l1652:
 16227                           
 16228                           ; BSR set to: 4
 16229                           ;usb_device.c: 2399: else
 16230                           ;usb_device.c: 2400: RemoteWakeup = 0;
 16231  00709E  6A1D               	clrf	_RemoteWakeup,c	;volatile
 16232  0070A0                     i2l5815:
 16233                           
 16234                           ; BSR set to: 4
 16235                           ;usb_device.c: 2401: }
 16236                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 16237                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 16238                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 16239                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 16240  0070A0  5132               	movf	50,w,b	;volatile
 16241  0070A2  A4D8               	btfss	status,2,c
 16242  0070A4  0012               	return	
 16243                           
 16244                           ; BSR set to: 4
 16245  0070A6  5130               	movf	48,w,b	;volatile
 16246  0070A8  0B1F               	andlw	31
 16247  0070AA  0A02               	xorlw	2
 16248  0070AC  A4D8               	btfss	status,2,c
 16249  0070AE  0012               	return	
 16250                           
 16251                           ; BSR set to: 4
 16252  0070B0  5134               	movf	52,w,b	;volatile
 16253  0070B2  0B0F               	andlw	15
 16254  0070B4  B4D8               	btfsc	status,2,c
 16255  0070B6  0012               	return	
 16256                           
 16257                           ; BSR set to: 4
 16258  0070B8  5134               	movf	52,w,b	;volatile
 16259  0070BA  0B0F               	andlw	15
 16260  0070BC  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16261  0070BE  0E03               	movlw	3
 16262  0070C0  6043               	cpfslt	??_USBStdFeatureReqHandler,c
 16263  0070C2  0C03               	retlw	3
 16264                           
 16265                           ; BSR set to: 4
 16266  0070C4  0E20               	movlw	32
 16267  0070C6  0100               	movlb	0	; () banked
 16268  0070C8  1997               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 16269  0070CA  A4D8               	btfss	status,2,c
 16270  0070CC  0012               	return	
 16271                           
 16272                           ; BSR set to: 0
 16273                           ;usb_device.c: 2408: {
 16274                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 16275  0070CE  8E0C               	bsf	_inPipes+3,7,c	;volatile
 16276                           
 16277                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 16278  0070D0  0104               	movlb	4	; () banked
 16279  0070D2  BF34               	btfsc	52,7,b	;volatile
 16280  0070D4  D011               	goto	i2l5831
 16281                           
 16282                           ; BSR set to: 4
 16283                           ;usb_device.c: 2415: {
 16284                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 16285  0070D6  5134               	movf	52,w,b	;volatile
 16286  0070D8  0B0F               	andlw	15
 16287  0070DA  0D02               	mullw	2
 16288  0070DC  50F3               	movf	prodl,w,c
 16289  0070DE  0F68               	addlw	low _pBDTEntryOut
 16290  0070E0  6ED9               	movwf	fsr2l,c
 16291  0070E2  6ADA               	clrf	fsr2h,c
 16292  0070E4  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 16293  0070E8  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 16294                           
 16295                           ; BSR set to: 4
 16296                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 16297  0070EC  5134               	movf	52,w,b	;volatile
 16298  0070EE  0B0F               	andlw	15
 16299  0070F0  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16300  0070F2  5043               	movf	??_USBStdFeatureReqHandler,w,c
 16301  0070F4  0F75               	addlw	low _ep_data_out
 16302  0070F6  D010               	goto	L24
 16303  0070F8                     i2l5831:
 16304                           
 16305                           ; BSR set to: 4
 16306                           ;usb_device.c: 2419: else
 16307                           ;usb_device.c: 2420: {
 16308                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 16309  0070F8  5134               	movf	52,w,b	;volatile
 16310  0070FA  0B0F               	andlw	15
 16311  0070FC  0D02               	mullw	2
 16312  0070FE  50F3               	movf	prodl,w,c
 16313  007100  0F0F               	addlw	low _pBDTEntryIn
 16314  007102  6ED9               	movwf	fsr2l,c
 16315  007104  6ADA               	clrf	fsr2h,c
 16316  007106  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 16317  00710A  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 16318                           
 16319                           ; BSR set to: 4
 16320                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 16321  00710E  5134               	movf	52,w,b	;volatile
 16322  007110  0B0F               	andlw	15
 16323  007112  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16324  007114  5043               	movf	??_USBStdFeatureReqHandler,w,c
 16325  007116  0F72               	addlw	low _ep_data_in
 16326  007118                     L24:
 16327  007118  6ED9               	movwf	fsr2l,c
 16328  00711A  6ADA               	clrf	fsr2h,c
 16329  00711C  50DF               	movf	indf2,w,c
 16330  00711E  6E47               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 16331                           
 16332                           ; BSR set to: 4
 16333                           ;usb_device.c: 2423: }
 16334                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 16335  007120  B047               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 16336  007122  D002               	goto	i2l5839
 16337                           
 16338                           ; BSR set to: 4
 16339                           ;usb_device.c: 2429: {
 16340                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 16341  007124  9448               	bcf	USBStdFeatureReqHandler@p,2,c
 16342                           
 16343                           ;usb_device.c: 2431: }
 16344  007126  D001               	goto	i2l5841
 16345  007128                     i2l5839:
 16346                           
 16347                           ; BSR set to: 4
 16348                           ;usb_device.c: 2432: else
 16349                           ;usb_device.c: 2433: {
 16350                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 16351  007128  8448               	bsf	USBStdFeatureReqHandler@p,2,c
 16352  00712A                     i2l5841:
 16353                           
 16354                           ; BSR set to: 4
 16355                           ;usb_device.c: 2435: }
 16356                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 16357  00712A  BF34               	btfsc	52,7,b	;volatile
 16358  00712C  D006               	goto	i2l5845
 16359                           
 16360                           ; BSR set to: 4
 16361                           ;usb_device.c: 2440: {
 16362                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 16363  00712E  5134               	movf	52,w,b	;volatile
 16364  007130  0B0F               	andlw	15
 16365  007132  0D02               	mullw	2
 16366  007134  50F3               	movf	prodl,w,c
 16367  007136  0F68               	addlw	low _pBDTEntryOut
 16368  007138  D005               	goto	L25
 16369  00713A                     i2l5845:
 16370                           
 16371                           ; BSR set to: 4
 16372                           ;usb_device.c: 2443: else
 16373                           ;usb_device.c: 2444: {
 16374                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 16375  00713A  5134               	movf	52,w,b	;volatile
 16376  00713C  0B0F               	andlw	15
 16377  00713E  0D02               	mullw	2
 16378  007140  50F3               	movf	prodl,w,c
 16379  007142  0F0F               	addlw	low _pBDTEntryIn
 16380  007144                     L25:
 16381  007144  6ED9               	movwf	fsr2l,c
 16382  007146  6ADA               	clrf	fsr2h,c
 16383  007148  C048  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 16384  00714C  C049  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 16385                           
 16386                           ; BSR set to: 4
 16387                           ;usb_device.c: 2446: }
 16388                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 16389  007150  0E03               	movlw	3
 16390  007152  1931               	xorwf	49,w,b	;volatile
 16391  007154  E123               	bnz	i2l5857
 16392                           
 16393                           ; BSR set to: 4
 16394                           ;usb_device.c: 2450: {
 16395                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 16396  007156  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16397  00715A  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16398  00715E  AEDF               	btfss	indf2,7,c
 16399  007160  D011               	goto	i2l1662
 16400                           
 16401                           ; BSR set to: 4
 16402                           ;usb_device.c: 2452: {
 16403                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 16404  007162  BF34               	btfsc	52,7,b	;volatile
 16405  007164  D006               	goto	i2l5855
 16406                           
 16407                           ; BSR set to: 4
 16408                           ;usb_device.c: 2456: {
 16409                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 16410  007166  5134               	movf	52,w,b	;volatile
 16411  007168  0B0F               	andlw	15
 16412  00716A  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16413  00716C  5043               	movf	??_USBStdFeatureReqHandler,w,c
 16414  00716E  0F75               	addlw	low _ep_data_out
 16415  007170  D005               	goto	L26
 16416  007172                     i2l5855:
 16417                           
 16418                           ; BSR set to: 4
 16419                           ;usb_device.c: 2459: else
 16420                           ;usb_device.c: 2460: {
 16421                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 16422  007172  5134               	movf	52,w,b	;volatile
 16423  007174  0B0F               	andlw	15
 16424  007176  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16425  007178  5043               	movf	??_USBStdFeatureReqHandler,w,c
 16426  00717A  0F72               	addlw	low _ep_data_in
 16427  00717C                     L26:
 16428  00717C  6ED9               	movwf	fsr2l,c
 16429  00717E  6ADA               	clrf	fsr2h,c
 16430  007180  0100               	movlb	0	; () banked
 16431  007182  82DF               	bsf	indf2,1,c
 16432  007184                     i2l1662:
 16433                           
 16434                           ;usb_device.c: 2462: }
 16435                           ;usb_device.c: 2463: }
 16436                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 16437  007184  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16438  007188  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16439  00718C  0E00               	movlw	0
 16440  00718E  84DB               	bsf	plusw2,2,c
 16441                           
 16442                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 16443  007190  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16444  007194  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16445  007198  8EDB               	bsf	plusw2,7,c
 16446                           
 16447                           ;usb_device.c: 2468: }
 16448  00719A  0C00               	retlw	0
 16449  00719C                     i2l5857:
 16450                           
 16451                           ; BSR set to: 4
 16452                           ;usb_device.c: 2469: else
 16453                           ;usb_device.c: 2470: {
 16454                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 16455  00719C  0E04               	movlw	4
 16456  00719E  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 16457                           
 16458                           ; BSR set to: 4
 16459                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 16460  0071A0  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16461  0071A4  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16462  0071A8  AEDF               	btfss	indf2,7,c
 16463  0071AA  D019               	goto	i2l5867
 16464                           
 16465                           ; BSR set to: 4
 16466                           ;usb_device.c: 2476: {
 16467                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 16468  0071AC  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16469  0071B0  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16470  0071B4  0E7F               	movlw	127
 16471  0071B6  16DF               	andwf	indf2,f,c
 16472                           
 16473                           ; BSR set to: 4
 16474                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 16475  0071B8  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16476  0071BC  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16477  0071C0  0E00               	movlw	0
 16478  0071C2  8CDB               	bsf	plusw2,6,c
 16479                           
 16480                           ; BSR set to: 4
 16481                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 16482  0071C4  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16483  0071C6  0E05               	movlw	5
 16484  0071C8  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16485  0071CA  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 16486  0071CE  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 16487  0071D2  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16488  0071D4  0E02               	movlw	2
 16489  0071D6  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16490  0071D8  EC90  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16491                           
 16492                           ;usb_device.c: 2482: }
 16493  0071DC  D006               	goto	i2l5869
 16494  0071DE                     i2l5867:
 16495                           
 16496                           ; BSR set to: 4
 16497                           ;usb_device.c: 2483: else
 16498                           ;usb_device.c: 2484: {
 16499                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 16500  0071DE  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16501  0071E2  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16502  0071E6  0E00               	movlw	0
 16503  0071E8  8CDB               	bsf	plusw2,6,c
 16504  0071EA                     i2l5869:
 16505                           
 16506                           ;usb_device.c: 2487: }
 16507                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 16508  0071EA  0E04               	movlw	4
 16509  0071EC  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 16510                           
 16511                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 16512  0071EE  B247               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 16513  0071F0  D006               	goto	i2l1670
 16514  0071F2  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16515  0071F6  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16516  0071FA  AEDF               	btfss	indf2,7,c
 16517  0071FC  D025               	goto	i2l5883
 16518  0071FE                     i2l1670:
 16519                           
 16520                           ;usb_device.c: 2498: {
 16521                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 16522  0071FE  0104               	movlb	4	; () banked
 16523  007200  BF34               	btfsc	52,7,b	;volatile
 16524  007202  D006               	goto	i2l5877
 16525                           
 16526                           ; BSR set to: 4
 16527                           ;usb_device.c: 2500: {
 16528                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 16529  007204  5134               	movf	52,w,b	;volatile
 16530  007206  0B0F               	andlw	15
 16531  007208  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16532  00720A  5043               	movf	??_USBStdFeatureReqHandler,w,c
 16533  00720C  0F75               	addlw	low _ep_data_out
 16534  00720E  D005               	goto	L27
 16535  007210                     i2l5877:
 16536                           
 16537                           ; BSR set to: 4
 16538                           ;usb_device.c: 2503: else
 16539                           ;usb_device.c: 2504: {
 16540                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 16541  007210  5134               	movf	52,w,b	;volatile
 16542  007212  0B0F               	andlw	15
 16543  007214  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16544  007216  5043               	movf	??_USBStdFeatureReqHandler,w,c
 16545  007218  0F72               	addlw	low _ep_data_in
 16546  00721A                     L27:
 16547  00721A  6ED9               	movwf	fsr2l,c
 16548  00721C  6ADA               	clrf	fsr2h,c
 16549  00721E  0100               	movlb	0	; () banked
 16550  007220  92DF               	bcf	indf2,1,c
 16551                           
 16552                           ; BSR set to: 0
 16553                           ;usb_device.c: 2506: }
 16554                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 16555  007222  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16556  007226  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16557  00722A  0E3B               	movlw	59
 16558  00722C  16DF               	andwf	indf2,f,c
 16559                           
 16560                           ; BSR set to: 0
 16561                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 16562  00722E  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16563  007230  0E05               	movlw	5
 16564  007232  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16565  007234  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 16566  007238  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 16567  00723C  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16568  00723E  0E02               	movlw	2
 16569  007240  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16570  007242  EC90  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16571                           
 16572                           ;usb_device.c: 2512: }
 16573  007246  D006               	goto	i2l5885
 16574  007248                     i2l5883:
 16575                           
 16576                           ;usb_device.c: 2513: else
 16577                           ;usb_device.c: 2514: {
 16578                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 16579  007248  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16580  00724C  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16581  007250  0E3B               	movlw	59
 16582  007252  16DF               	andwf	indf2,f,c
 16583  007254                     i2l5885:
 16584                           
 16585                           ;usb_device.c: 2517: }
 16586                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 16587  007254  0104               	movlb	4	; () banked
 16588  007256  5134               	movf	52,w,b	;volatile
 16589  007258  0B0F               	andlw	15
 16590  00725A  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16591  00725C  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 16592  00725E  0E6A               	movlw	106
 16593  007260  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 16594  007262  6E45               	movwf	USBStdFeatureReqHandler@pUEP,c
 16595  007264  0E0F               	movlw	15
 16596  007266  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 16597  007268  6E46               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 16598                           
 16599                           ; BSR set to: 4
 16600                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 16601  00726A  C045  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 16602  00726E  C046  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 16603  007272  0EFE               	movlw	254
 16604  007274  16DF               	andwf	indf2,f,c
 16605  007276  0CFE               	retlw	254	;funcret
 16606  007278                     __end_of_USBStdFeatureReqHandler:
 16607                           	opt stack 0
 16608                           pclatu	equ	0xFFB
 16609                           pclath	equ	0xFFA
 16610                           tblptru	equ	0xFF8
 16611                           tblptrh	equ	0xFF7
 16612                           tblptrl	equ	0xFF6
 16613                           tablat	equ	0xFF5
 16614                           prodh	equ	0xFF4
 16615                           prodl	equ	0xFF3
 16616                           intcon	equ	0xFF2
 16617                           postinc0	equ	0xFEE
 16618                           wreg	equ	0xFE8
 16619                           indf1	equ	0xFE7
 16620                           fsr1h	equ	0xFE2
 16621                           fsr1l	equ	0xFE1
 16622                           indf2	equ	0xFDF
 16623                           postinc2	equ	0xFDE
 16624                           postdec2	equ	0xFDD
 16625                           plusw2	equ	0xFDB
 16626                           fsr2h	equ	0xFDA
 16627                           fsr2l	equ	0xFD9
 16628                           status	equ	0xFD8
 16629                           
 16630 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 16631 ;; Defined at:
 16632 ;;		line 271 in file "../Includes/Board/USBapp.c"
 16633 ;; Parameters:    Size  Location     Type
 16634 ;;  event           2   13[COMRAM] enum E6400
 16635 ;;  pdata           2   15[COMRAM] PTR void 
 16636 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 16637 ;;  size            2   17[COMRAM] unsigned int 
 16638 ;; Auto vars:     Size  Location     Type
 16639 ;;		None
 16640 ;; Return value:  Size  Location     Type
 16641 ;;                  1    wreg      unsigned char 
 16642 ;; Registers used:
 16643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16644 ;; Tracked objects:
 16645 ;;		On entry : 0/0
 16646 ;;		On exit  : 0/0
 16647 ;;		Unchanged: 0/0
 16648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16649 ;;      Params:         6       0       0       0       0       0       0       0       0
 16650 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16651 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16652 ;;      Totals:         8       0       0       0       0       0       0       0       0
 16653 ;;Total ram usage:        8 bytes
 16654 ;; Hardware stack levels used:    1
 16655 ;; Hardware stack levels required when called:    4
 16656 ;; This function calls:
 16657 ;;		_USBCheckCDCRequest
 16658 ;;		_USBapp_CdcEmulatorInitialize
 16659 ;; This function is called by:
 16660 ;;		_USBDeviceTasks
 16661 ;;		_USBStdSetCfgHandler
 16662 ;;		_USBSuspend
 16663 ;;		_USBWakeFromSuspend
 16664 ;;		_USBCtrlTrfSetupHandler
 16665 ;;		_USBCheckStdRequest
 16666 ;;		_USBStdFeatureReqHandler
 16667 ;; This function uses a non-reentrant model
 16668 ;;
 16669                           
 16670                           	psect	text92
 16671  005120                     __ptext92:
 16672                           	opt stack 0
 16673  005120                     _USER_USB_CALLBACK_EVENT_HANDLER:
 16674                           	opt stack 14
 16675                           
 16676                           ;USBapp.c: 307: break;
 16677                           
 16678                           ;USBapp.c: 306: USBCheckCDCRequest();
 16679                           
 16680                           ;USBapp.c: 298: break;
 16681                           
 16682                           ;USBapp.c: 297: USBapp_CdcEmulatorInitialize();
 16683                           
 16684                           ;USBapp.c: 273: switch( (int) event )
 16685                           
 16686                           ;incstack = 0
 16687  005120  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 16688  005124  C03C  F042         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 16689                           
 16690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 16691                           ; Switch size 1, requested type "speed"
 16692                           ; Number of cases is 2, Range of values is 0 to 127
 16693                           ; switch strategies available:
 16694                           ; Name         Instructions Cycles
 16695                           ; simple_byte            7     4 (average)
 16696                           ;	Chosen strategy is simple_byte
 16697  005128  5042               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 16698  00512A  E004               	bz	i2l9613
 16699  00512C  0A7F               	xorlw	127	; case 127
 16700  00512E  A4D8               	btfss	status,2,c
 16701  005130  0012               	return	
 16702  005132  D019               	goto	i2l9615
 16703  005134                     i2l9613:
 16704                           
 16705                           ; Switch size 1, requested type "speed"
 16706                           ; Number of cases is 8, Range of values is 1 to 117
 16707                           ; switch strategies available:
 16708                           ; Name         Instructions Cycles
 16709                           ; simple_byte           25    13 (average)
 16710                           ;	Chosen strategy is simple_byte
 16711  005134  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16712  005136  0A01               	xorlw	1	; case 1
 16713  005138  E102 EFDA  F027    	bz	_USBapp_CdcEmulatorInitialize
 16714  00513E  0A03               	xorlw	3	; case 2
 16715  005140  B4D8               	btfsc	status,2,c
 16716  005142  0012               	return	
 16717  005144  0A01               	xorlw	1	; case 3
 16718  005146  E102 EF41  F02C    	bz	_USBCheckCDCRequest
 16719  00514C  0A06               	xorlw	6	; case 5
 16720  00514E  B4D8               	btfsc	status,2,c
 16721  005150  0012               	return	
 16722  005152  0A77               	xorlw	119	; case 114
 16723  005154  B4D8               	btfsc	status,2,c
 16724  005156  0012               	return	
 16725  005158  0A01               	xorlw	1	; case 115
 16726  00515A  B4D8               	btfsc	status,2,c
 16727  00515C  0012               	return	
 16728  00515E  0A07               	xorlw	7	; case 116
 16729  005160  A4D8               	btfss	status,2,c
 16730  005162  0A01               	xorlw	1	; case 117
 16731  005164  0012               	return	
 16732  005166                     i2l9615:
 16733                           
 16734                           ; Switch size 1, requested type "speed"
 16735                           ; Number of cases is 1, Range of values is 255 to 255
 16736                           ; switch strategies available:
 16737                           ; Name         Instructions Cycles
 16738                           ; simple_byte            4     3 (average)
 16739                           ;	Chosen strategy is simple_byte
 16740  005166  1C41               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16741  005168  0012               	return	
 16742  00516A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 16743                           	opt stack 0
 16744                           pclatu	equ	0xFFB
 16745                           pclath	equ	0xFFA
 16746                           tblptru	equ	0xFF8
 16747                           tblptrh	equ	0xFF7
 16748                           tblptrl	equ	0xFF6
 16749                           tablat	equ	0xFF5
 16750                           prodh	equ	0xFF4
 16751                           prodl	equ	0xFF3
 16752                           intcon	equ	0xFF2
 16753                           postinc0	equ	0xFEE
 16754                           wreg	equ	0xFE8
 16755                           indf1	equ	0xFE7
 16756                           fsr1h	equ	0xFE2
 16757                           fsr1l	equ	0xFE1
 16758                           indf2	equ	0xFDF
 16759                           postinc2	equ	0xFDE
 16760                           postdec2	equ	0xFDD
 16761                           plusw2	equ	0xFDB
 16762                           fsr2h	equ	0xFDA
 16763                           fsr2l	equ	0xFD9
 16764                           status	equ	0xFD8
 16765                           
 16766 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 16767 ;; Defined at:
 16768 ;;		line 107 in file "../Includes/Board/USBapp.c"
 16769 ;; Parameters:    Size  Location     Type
 16770 ;;		None
 16771 ;; Auto vars:     Size  Location     Type
 16772 ;;  i               1   12[COMRAM] unsigned char 
 16773 ;; Return value:  Size  Location     Type
 16774 ;;                  1    wreg      void 
 16775 ;; Registers used:
 16776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16777 ;; Tracked objects:
 16778 ;;		On entry : 0/0
 16779 ;;		On exit  : 0/0
 16780 ;;		Unchanged: 0/0
 16781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16782 ;;      Params:         0       0       0       0       0       0       0       0       0
 16783 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16784 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16785 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16786 ;;Total ram usage:        1 bytes
 16787 ;; Hardware stack levels used:    1
 16788 ;; Hardware stack levels required when called:    3
 16789 ;; This function calls:
 16790 ;;		_CDCInitEP
 16791 ;;		i2_EUSART_Initialize
 16792 ;; This function is called by:
 16793 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16794 ;; This function uses a non-reentrant model
 16795 ;;
 16796                           
 16797                           	psect	text93
 16798  004FB4                     __ptext93:
 16799                           	opt stack 0
 16800  004FB4                     _USBapp_CdcEmulatorInitialize:
 16801                           	opt stack 14
 16802                           
 16803                           ;USBapp.c: 110: CDCInitEP();
 16804                           
 16805                           ;incstack = 0
 16806  004FB4  EC75  F029         	call	_CDCInitEP	;wreg free
 16807                           
 16808                           ; BSR set to: 0
 16809                           ;USBapp.c: 111: line_coding.bCharFormat = 0;
 16810  004FB8  6BC9               	clrf	(_line_coding+4)& (0+255),b
 16811                           
 16812                           ; BSR set to: 0
 16813                           ;USBapp.c: 112: line_coding.bDataBits = 8;
 16814  004FBA  0E08               	movlw	8
 16815  004FBC  6FCB               	movwf	(_line_coding+6)& (0+255),b
 16816                           
 16817                           ; BSR set to: 0
 16818                           ;USBapp.c: 113: line_coding.bParityType = 0;
 16819  004FBE  6BCA               	clrf	(_line_coding+5)& (0+255),b
 16820                           
 16821                           ; BSR set to: 0
 16822                           ;USBapp.c: 114: line_coding.dwDTERate = 19200;
 16823  004FC0  6BC5               	clrf	_line_coding& (0+255),b
 16824  004FC2  0E4B               	movlw	75
 16825  004FC4  6FC6               	movwf	(_line_coding+1)& (0+255),b
 16826  004FC6  6BC7               	clrf	(_line_coding+2)& (0+255),b
 16827  004FC8  6BC8               	clrf	(_line_coding+3)& (0+255),b
 16828                           
 16829                           ; BSR set to: 0
 16830                           ;USBapp.c: 115: EUSART_Initialize();
 16831  004FCA  ECED  F026         	call	i2_EUSART_Initialize	;wreg free
 16832                           
 16833                           ; BSR set to: 0
 16834                           ;USBapp.c: 117: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 16835  004FCE  6A3A               	clrf	USBapp_CdcEmulatorInitialize@i,c
 16836  004FD0                     i2l5355:
 16837                           
 16838                           ;USBapp.c: 118: {
 16839                           ;USBapp.c: 119: USB_Buffer[i] = 0;
 16840  004FD0  0E50               	movlw	low _USB_Buffer
 16841  004FD2  243A               	addwf	USBapp_CdcEmulatorInitialize@i,w,c
 16842  004FD4  6ED9               	movwf	fsr2l,c
 16843  004FD6  6ADA               	clrf	fsr2h,c
 16844  004FD8  0E01               	movlw	high _USB_Buffer
 16845  004FDA  22DA               	addwfc	fsr2h,f,c
 16846  004FDC  6ADF               	clrf	indf2,c
 16847  004FDE  2A3A               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 16848  004FE0  0E3F               	movlw	63
 16849  004FE2  643A               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 16850  004FE4  D7F5               	goto	i2l5355
 16851                           
 16852                           ;USBapp.c: 120: }
 16853                           ;USBapp.c: 121: NextUSBOut = 0;
 16854  004FE6  6A1A               	clrf	_NextUSBOut,c
 16855                           
 16856                           ;USBapp.c: 122: LastRS232Out = 0;
 16857  004FE8  6A19               	clrf	_LastRS232Out,c
 16858  004FEA  0012               	return		;funcret
 16859  004FEC                     __end_of_USBapp_CdcEmulatorInitialize:
 16860                           	opt stack 0
 16861                           pclatu	equ	0xFFB
 16862                           pclath	equ	0xFFA
 16863                           tblptru	equ	0xFF8
 16864                           tblptrh	equ	0xFF7
 16865                           tblptrl	equ	0xFF6
 16866                           tablat	equ	0xFF5
 16867                           prodh	equ	0xFF4
 16868                           prodl	equ	0xFF3
 16869                           intcon	equ	0xFF2
 16870                           postinc0	equ	0xFEE
 16871                           wreg	equ	0xFE8
 16872                           indf1	equ	0xFE7
 16873                           fsr1h	equ	0xFE2
 16874                           fsr1l	equ	0xFE1
 16875                           indf2	equ	0xFDF
 16876                           postinc2	equ	0xFDE
 16877                           postdec2	equ	0xFDD
 16878                           plusw2	equ	0xFDB
 16879                           fsr2h	equ	0xFDA
 16880                           fsr2l	equ	0xFD9
 16881                           status	equ	0xFD8
 16882                           
 16883 ;; *************** function _CDCInitEP *****************
 16884 ;; Defined at:
 16885 ;;		line 296 in file "../Includes/Usb/framework/usb_device_cdc.c"
 16886 ;; Parameters:    Size  Location     Type
 16887 ;;		None
 16888 ;; Auto vars:     Size  Location     Type
 16889 ;;		None
 16890 ;; Return value:  Size  Location     Type
 16891 ;;                  1    wreg      void 
 16892 ;; Registers used:
 16893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16894 ;; Tracked objects:
 16895 ;;		On entry : 0/0
 16896 ;;		On exit  : F/0
 16897 ;;		Unchanged: 0/0
 16898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16899 ;;      Params:         0       0       0       0       0       0       0       0       0
 16900 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16901 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16902 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16903 ;;Total ram usage:        0 bytes
 16904 ;; Hardware stack levels used:    1
 16905 ;; Hardware stack levels required when called:    2
 16906 ;; This function calls:
 16907 ;;		_USBEnableEndpoint
 16908 ;;		i2_USBTransferOnePacket
 16909 ;; This function is called by:
 16910 ;;		_USBapp_CdcEmulatorInitialize
 16911 ;; This function uses a non-reentrant model
 16912 ;;
 16913                           
 16914                           	psect	text94
 16915  0052EA                     __ptext94:
 16916                           	opt stack 0
 16917  0052EA                     _CDCInitEP:
 16918                           	opt stack 14
 16919                           
 16920                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 16921                           
 16922                           ;incstack = 0
 16923  0052EA  0100               	movlb	0	; () banked
 16924  0052EC  6BC5               	clrf	_line_coding& (0+255),b
 16925  0052EE  0E4B               	movlw	75
 16926  0052F0  6FC6               	movwf	(_line_coding+1)& (0+255),b
 16927  0052F2  6BC7               	clrf	(_line_coding+2)& (0+255),b
 16928  0052F4  6BC8               	clrf	(_line_coding+3)& (0+255),b
 16929                           
 16930                           ; BSR set to: 0
 16931                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 16932  0052F6  6BC9               	clrf	(_line_coding+4)& (0+255),b
 16933                           
 16934                           ; BSR set to: 0
 16935                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 16936  0052F8  6BCA               	clrf	(_line_coding+5)& (0+255),b
 16937                           
 16938                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 16939  0052FA  0E08               	movlw	8
 16940  0052FC  6FCB               	movwf	(_line_coding+6)& (0+255),b
 16941                           
 16942                           ; BSR set to: 0
 16943                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 16944  0052FE  6B9D               	clrf	_cdc_rx_len& (0+255),b
 16945                           
 16946                           ; BSR set to: 0
 16947                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 16948  005300  0E1A               	movlw	26
 16949  005302  6E36               	movwf	USBEnableEndpoint@options,c
 16950  005304  0E01               	movlw	1
 16951  005306  ECA4  F027         	call	_USBEnableEndpoint
 16952                           
 16953                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 16954  00530A  0E1E               	movlw	30
 16955  00530C  6E36               	movwf	USBEnableEndpoint@options,c
 16956  00530E  0E02               	movlw	2
 16957  005310  ECA4  F027         	call	_USBEnableEndpoint
 16958                           
 16959                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 16960  005314  0E00               	movlw	0
 16961  005316  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 16962  005318  0E40               	movlw	64
 16963  00531A  6E2F               	movwf	i2USBTransferOnePacket@data,c
 16964  00531C  0E05               	movlw	5
 16965  00531E  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 16966  005320  0E40               	movlw	64
 16967  005322  6E31               	movwf	i2USBTransferOnePacket@len,c
 16968  005324  0E02               	movlw	2
 16969  005326  ECE2  F02D         	call	i2_USBTransferOnePacket
 16970  00532A  C02E  F083         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 16971  00532E  C02F  F084         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 16972                           
 16973                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 16974  005332  0100               	movlb	0	; () banked
 16975  005334  6B81               	clrf	_CDCDataInHandle& (0+255),b
 16976  005336  6B82               	clrf	(_CDCDataInHandle+1)& (0+255),b
 16977                           
 16978                           ; BSR set to: 0
 16979                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 16980  005338  6A20               	clrf	_cdc_trf_state,c
 16981                           
 16982                           ; BSR set to: 0
 16983  00533A  0012               	return		;funcret
 16984  00533C                     __end_of_CDCInitEP:
 16985                           	opt stack 0
 16986                           pclatu	equ	0xFFB
 16987                           pclath	equ	0xFFA
 16988                           tblptru	equ	0xFF8
 16989                           tblptrh	equ	0xFF7
 16990                           tblptrl	equ	0xFF6
 16991                           tablat	equ	0xFF5
 16992                           prodh	equ	0xFF4
 16993                           prodl	equ	0xFF3
 16994                           intcon	equ	0xFF2
 16995                           postinc0	equ	0xFEE
 16996                           wreg	equ	0xFE8
 16997                           indf1	equ	0xFE7
 16998                           fsr1h	equ	0xFE2
 16999                           fsr1l	equ	0xFE1
 17000                           indf2	equ	0xFDF
 17001                           postinc2	equ	0xFDE
 17002                           postdec2	equ	0xFDD
 17003                           plusw2	equ	0xFDB
 17004                           fsr2h	equ	0xFDA
 17005                           fsr2l	equ	0xFD9
 17006                           status	equ	0xFD8
 17007                           
 17008 ;; *************** function i2_USBTransferOnePacket *****************
 17009 ;; Defined at:
 17010 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 17011 ;; Parameters:    Size  Location     Type
 17012 ;;  ep              1    wreg     unsigned char 
 17013 ;;  dir             1    0[COMRAM] unsigned char 
 17014 ;;  data            2    1[COMRAM] PTR unsigned char 
 17015 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17016 ;;  len             1    3[COMRAM] unsigned char 
 17017 ;; Auto vars:     Size  Location     Type
 17018 ;;  ep              1    4[COMRAM] unsigned char 
 17019 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 17020 ;;		 -> BDT(48), NULL(0), 
 17021 ;; Return value:  Size  Location     Type
 17022 ;;                  2    0[COMRAM] PTR void 
 17023 ;; Registers used:
 17024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17025 ;; Tracked objects:
 17026 ;;		On entry : 0/0
 17027 ;;		On exit  : 0/0
 17028 ;;		Unchanged: 0/0
 17029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17030 ;;      Params:         4       0       0       0       0       0       0       0       0
 17031 ;;      Locals:         3       0       0       0       0       0       0       0       0
 17032 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17033 ;;      Totals:         7       0       0       0       0       0       0       0       0
 17034 ;;Total ram usage:        7 bytes
 17035 ;; Hardware stack levels used:    1
 17036 ;; This function calls:
 17037 ;;		Nothing
 17038 ;; This function is called by:
 17039 ;;		_CDCInitEP
 17040 ;; This function uses a non-reentrant model
 17041 ;;
 17042                           
 17043                           	psect	text95
 17044  005BC4                     __ptext95:
 17045                           	opt stack 0
 17046  005BC4                     i2_USBTransferOnePacket:
 17047                           	opt stack 15
 17048                           
 17049                           ; BSR set to: 0
 17050                           ;incstack = 0
 17051                           ;i2USBTransferOnePacket@ep stored from wreg
 17052  005BC4  6E32               	movwf	i2USBTransferOnePacket@ep,c
 17053                           
 17054                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 17055                           ;usb_device.c: 762: if(dir != 0)
 17056  005BC6  502E               	movf	i2USBTransferOnePacket@dir,w,c
 17057  005BC8  E005               	bz	i2l5223
 17058                           
 17059                           ;usb_device.c: 763: {
 17060                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 17061  005BCA  5032               	movf	i2USBTransferOnePacket@ep,w,c
 17062  005BCC  0D02               	mullw	2
 17063  005BCE  50F3               	movf	prodl,w,c
 17064  005BD0  0F0F               	addlw	low _pBDTEntryIn
 17065  005BD2  D004               	goto	L28
 17066  005BD4                     i2l5223:
 17067                           
 17068                           ;usb_device.c: 767: else
 17069                           ;usb_device.c: 768: {
 17070                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 17071  005BD4  5032               	movf	i2USBTransferOnePacket@ep,w,c
 17072  005BD6  0D02               	mullw	2
 17073  005BD8  50F3               	movf	prodl,w,c
 17074  005BDA  0F68               	addlw	low _pBDTEntryOut
 17075  005BDC                     L28:
 17076  005BDC  6ED9               	movwf	fsr2l,c
 17077  005BDE  6ADA               	clrf	fsr2h,c
 17078  005BE0  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 17079  005BE4  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 17080                           
 17081                           ;usb_device.c: 771: }
 17082                           ;usb_device.c: 775: if(handle == 0)
 17083  005BE8  5033               	movf	i2USBTransferOnePacket@handle,w,c
 17084  005BEA  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 17085  005BEC  E103               	bnz	i2l5229
 17086                           
 17087                           ;usb_device.c: 776: {
 17088                           ;usb_device.c: 777: return 0;
 17089  005BEE  6A2E               	clrf	?i2_USBTransferOnePacket,c
 17090  005BF0  6A2F               	clrf	?i2_USBTransferOnePacket+1,c
 17091  005BF2  0012               	return	
 17092  005BF4                     i2l5229:
 17093                           
 17094                           ;usb_device.c: 778: }
 17095                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 17096  005BF4  EE20 F002          	lfsr	2,2
 17097  005BF8  5033               	movf	i2USBTransferOnePacket@handle,w,c
 17098  005BFA  26D9               	addwf	fsr2l,f,c
 17099  005BFC  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 17100  005BFE  22DA               	addwfc	fsr2h,f,c
 17101  005C00  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 17102  005C04  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 17103                           
 17104                           ;usb_device.c: 781: handle->CNT = len;
 17105  005C08  EE20 F001          	lfsr	2,1
 17106  005C0C  5033               	movf	i2USBTransferOnePacket@handle,w,c
 17107  005C0E  26D9               	addwf	fsr2l,f,c
 17108  005C10  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 17109  005C12  22DA               	addwfc	fsr2h,f,c
 17110  005C14  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 17111                           
 17112                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 17113  005C18  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17114  005C1C  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17115  005C20  0E40               	movlw	64
 17116  005C22  16DF               	andwf	indf2,f,c
 17117                           
 17118                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 17119  005C24  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17120  005C28  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17121  005C2C  0E00               	movlw	0
 17122  005C2E  86DB               	bsf	plusw2,3,c
 17123                           
 17124                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 17125  005C30  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17126  005C34  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17127  005C38  8EDB               	bsf	plusw2,7,c
 17128                           
 17129                           ;usb_device.c: 787: if(dir != 0)
 17130  005C3A  502E               	movf	i2USBTransferOnePacket@dir,w,c
 17131  005C3C  E005               	bz	i2l5241
 17132                           
 17133                           ;usb_device.c: 788: {
 17134                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 17135  005C3E  5032               	movf	i2USBTransferOnePacket@ep,w,c
 17136  005C40  0D02               	mullw	2
 17137  005C42  50F3               	movf	prodl,w,c
 17138  005C44  0F0F               	addlw	low _pBDTEntryIn
 17139  005C46  D004               	goto	L29
 17140  005C48                     i2l5241:
 17141                           
 17142                           ;usb_device.c: 792: else
 17143                           ;usb_device.c: 793: {
 17144                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 17145  005C48  5032               	movf	i2USBTransferOnePacket@ep,w,c
 17146  005C4A  0D02               	mullw	2
 17147  005C4C  50F3               	movf	prodl,w,c
 17148  005C4E  0F68               	addlw	low _pBDTEntryOut
 17149  005C50                     L29:
 17150  005C50  6ED9               	movwf	fsr2l,c
 17151  005C52  6ADA               	clrf	fsr2h,c
 17152  005C54  0E04               	movlw	4
 17153  005C56  1ADF               	xorwf	indf2,f,c
 17154                           
 17155                           ;usb_device.c: 796: }
 17156                           ;usb_device.c: 797: return (void*)handle;
 17157  005C58  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 17158  005C5C  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 17159  005C60  0C04               	retlw	4	;funcret
 17160  005C62                     __end_ofi2_USBTransferOnePacket:
 17161                           	opt stack 0
 17162                           pclatu	equ	0xFFB
 17163                           pclath	equ	0xFFA
 17164                           tblptru	equ	0xFF8
 17165                           tblptrh	equ	0xFF7
 17166                           tblptrl	equ	0xFF6
 17167                           tablat	equ	0xFF5
 17168                           prodh	equ	0xFF4
 17169                           prodl	equ	0xFF3
 17170                           intcon	equ	0xFF2
 17171                           postinc0	equ	0xFEE
 17172                           wreg	equ	0xFE8
 17173                           indf1	equ	0xFE7
 17174                           fsr1h	equ	0xFE2
 17175                           fsr1l	equ	0xFE1
 17176                           indf2	equ	0xFDF
 17177                           postinc2	equ	0xFDE
 17178                           postdec2	equ	0xFDD
 17179                           plusw2	equ	0xFDB
 17180                           fsr2h	equ	0xFDA
 17181                           fsr2l	equ	0xFD9
 17182                           status	equ	0xFD8
 17183                           
 17184 ;; *************** function _USBEnableEndpoint *****************
 17185 ;; Defined at:
 17186 ;;		line 645 in file "../Includes/Usb/framework/usb_device.c"
 17187 ;; Parameters:    Size  Location     Type
 17188 ;;  ep              1    wreg     unsigned char 
 17189 ;;  options         1    8[COMRAM] unsigned char 
 17190 ;; Auto vars:     Size  Location     Type
 17191 ;;  ep              1   11[COMRAM] unsigned char 
 17192 ;;  p               2    9[COMRAM] PTR unsigned char 
 17193 ;;		 -> UEP0(1), 
 17194 ;; Return value:  Size  Location     Type
 17195 ;;                  1    wreg      void 
 17196 ;; Registers used:
 17197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17198 ;; Tracked objects:
 17199 ;;		On entry : 0/0
 17200 ;;		On exit  : 0/0
 17201 ;;		Unchanged: 0/0
 17202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17203 ;;      Params:         1       0       0       0       0       0       0       0       0
 17204 ;;      Locals:         3       0       0       0       0       0       0       0       0
 17205 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17206 ;;      Totals:         4       0       0       0       0       0       0       0       0
 17207 ;;Total ram usage:        4 bytes
 17208 ;; Hardware stack levels used:    1
 17209 ;; Hardware stack levels required when called:    1
 17210 ;; This function calls:
 17211 ;;		_USBConfigureEndpoint
 17212 ;; This function is called by:
 17213 ;;		_CDCInitEP
 17214 ;; This function uses a non-reentrant model
 17215 ;;
 17216                           
 17217                           	psect	text96
 17218  004F48                     __ptext96:
 17219                           	opt stack 0
 17220  004F48                     _USBEnableEndpoint:
 17221                           	opt stack 14
 17222                           
 17223                           ;incstack = 0
 17224                           ;USBEnableEndpoint@ep stored from wreg
 17225  004F48  6E39               	movwf	USBEnableEndpoint@ep,c
 17226                           
 17227                           ;usb_device.c: 647: unsigned char* p;
 17228                           ;usb_device.c: 651: if(options & 0x04)
 17229  004F4A  A436               	btfss	USBEnableEndpoint@options,2,c
 17230  004F4C  D004               	goto	i2l5211
 17231                           
 17232                           ;usb_device.c: 652: {
 17233                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 17234  004F4E  6A2E               	clrf	USBConfigureEndpoint@direction,c
 17235  004F50  5039               	movf	USBEnableEndpoint@ep,w,c
 17236  004F52  ECC5  F02C         	call	_USBConfigureEndpoint
 17237  004F56                     i2l5211:
 17238                           
 17239                           ;usb_device.c: 654: }
 17240                           ;usb_device.c: 655: if(options & 0x02)
 17241  004F56  A236               	btfss	USBEnableEndpoint@options,1,c
 17242  004F58  D005               	goto	i2l5215
 17243                           
 17244                           ;usb_device.c: 656: {
 17245                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 17246  004F5A  0E01               	movlw	1
 17247  004F5C  6E2E               	movwf	USBConfigureEndpoint@direction,c
 17248  004F5E  5039               	movf	USBEnableEndpoint@ep,w,c
 17249  004F60  ECC5  F02C         	call	_USBConfigureEndpoint
 17250  004F64                     i2l5215:
 17251                           
 17252                           ;usb_device.c: 658: }
 17253                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 17254  004F64  0E6A               	movlw	106
 17255  004F66  2439               	addwf	USBEnableEndpoint@ep,w,c
 17256  004F68  6E37               	movwf	USBEnableEndpoint@p,c
 17257  004F6A  6A38               	clrf	USBEnableEndpoint@p+1,c
 17258  004F6C  0E0F               	movlw	15
 17259  004F6E  2238               	addwfc	USBEnableEndpoint@p+1,f,c
 17260                           
 17261                           ;usb_device.c: 664: *p = options;
 17262  004F70  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 17263  004F74  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 17264  004F78  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 17265  004F7C  0C0F               	retlw	15	;funcret
 17266  004F7E                     __end_of_USBEnableEndpoint:
 17267                           	opt stack 0
 17268                           pclatu	equ	0xFFB
 17269                           pclath	equ	0xFFA
 17270                           tblptru	equ	0xFF8
 17271                           tblptrh	equ	0xFF7
 17272                           tblptrl	equ	0xFF6
 17273                           tablat	equ	0xFF5
 17274                           prodh	equ	0xFF4
 17275                           prodl	equ	0xFF3
 17276                           intcon	equ	0xFF2
 17277                           postinc0	equ	0xFEE
 17278                           wreg	equ	0xFE8
 17279                           indf1	equ	0xFE7
 17280                           fsr1h	equ	0xFE2
 17281                           fsr1l	equ	0xFE1
 17282                           indf2	equ	0xFDF
 17283                           postinc2	equ	0xFDE
 17284                           postdec2	equ	0xFDD
 17285                           plusw2	equ	0xFDB
 17286                           fsr2h	equ	0xFDA
 17287                           fsr2l	equ	0xFD9
 17288                           status	equ	0xFD8
 17289                           
 17290 ;; *************** function _USBConfigureEndpoint *****************
 17291 ;; Defined at:
 17292 ;;		line 1228 in file "../Includes/Usb/framework/usb_device.c"
 17293 ;; Parameters:    Size  Location     Type
 17294 ;;  EPNum           1    wreg     unsigned char 
 17295 ;;  direction       1    0[COMRAM] unsigned char 
 17296 ;; Auto vars:     Size  Location     Type
 17297 ;;  EPNum           1    5[COMRAM] unsigned char 
 17298 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 17299 ;;		 -> BDT(48), 
 17300 ;; Return value:  Size  Location     Type
 17301 ;;                  1    wreg      void 
 17302 ;; Registers used:
 17303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17304 ;; Tracked objects:
 17305 ;;		On entry : 0/0
 17306 ;;		On exit  : 0/0
 17307 ;;		Unchanged: 0/0
 17308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17309 ;;      Params:         1       0       0       0       0       0       0       0       0
 17310 ;;      Locals:         3       0       0       0       0       0       0       0       0
 17311 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17312 ;;      Totals:         8       0       0       0       0       0       0       0       0
 17313 ;;Total ram usage:        8 bytes
 17314 ;; Hardware stack levels used:    1
 17315 ;; This function calls:
 17316 ;;		Nothing
 17317 ;; This function is called by:
 17318 ;;		_USBEnableEndpoint
 17319 ;; This function uses a non-reentrant model
 17320 ;;
 17321                           
 17322                           	psect	text97
 17323  00598A                     __ptext97:
 17324                           	opt stack 0
 17325  00598A                     _USBConfigureEndpoint:
 17326                           	opt stack 14
 17327                           
 17328                           ;incstack = 0
 17329                           ;USBConfigureEndpoint@EPNum stored from wreg
 17330  00598A  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 17331                           
 17332                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 17333                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 17334  00598C  6A34               	clrf	USBConfigureEndpoint@handle,c
 17335  00598E  0E04               	movlw	4
 17336  005990  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 17337                           
 17338                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 17339  005992  502E               	movf	USBConfigureEndpoint@direction,w,c
 17340  005994  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 17341  005996  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 17342  005998  90D8               	bcf	status,0,c
 17343  00599A  362F               	rlcf	??_USBConfigureEndpoint,f,c
 17344  00599C  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 17345  00599E  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 17346  0059A0  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 17347  0059A2  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 17348  0059A4  90D8               	bcf	status,0,c
 17349  0059A6  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 17350  0059A8  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 17351  0059AA  90D8               	bcf	status,0,c
 17352  0059AC  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 17353  0059AE  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 17354  0059B0  502F               	movf	??_USBConfigureEndpoint,w,c
 17355  0059B2  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 17356  0059B4  5030               	movf	??_USBConfigureEndpoint+1,w,c
 17357  0059B6  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 17358  0059B8  90D8               	bcf	status,0,c
 17359  0059BA  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 17360  0059BC  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 17361  0059BE  90D8               	bcf	status,0,c
 17362  0059C0  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 17363  0059C2  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 17364  0059C4  5031               	movf	??_USBConfigureEndpoint+2,w,c
 17365  0059C6  2634               	addwf	USBConfigureEndpoint@handle,f,c
 17366  0059C8  5032               	movf	??_USBConfigureEndpoint+3,w,c
 17367  0059CA  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 17368                           
 17369                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 17370  0059CC  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17371  0059D0  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17372  0059D4  9EDF               	bcf	indf2,7,c
 17373                           
 17374                           ;usb_device.c: 1242: if(direction == 0)
 17375  0059D6  502E               	movf	USBConfigureEndpoint@direction,w,c
 17376  0059D8  E105               	bnz	i2l5197
 17377                           
 17378                           ;usb_device.c: 1243: {
 17379                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 17380  0059DA  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 17381  0059DC  0D02               	mullw	2
 17382  0059DE  50F3               	movf	prodl,w,c
 17383  0059E0  0F68               	addlw	low _pBDTEntryOut
 17384  0059E2  D004               	goto	L30
 17385  0059E4                     i2l5197:
 17386                           
 17387                           ;usb_device.c: 1246: else
 17388                           ;usb_device.c: 1247: {
 17389                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 17390  0059E4  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 17391  0059E6  0D02               	mullw	2
 17392  0059E8  50F3               	movf	prodl,w,c
 17393  0059EA  0F0F               	addlw	low _pBDTEntryIn
 17394  0059EC                     L30:
 17395  0059EC  6ED9               	movwf	fsr2l,c
 17396  0059EE  6ADA               	clrf	fsr2h,c
 17397  0059F0  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 17398  0059F4  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 17399                           
 17400                           ;usb_device.c: 1249: }
 17401                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 17402  0059F8  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17403  0059FC  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17404  005A00  9CDF               	bcf	indf2,6,c
 17405                           
 17406                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 17407  005A02  EE20 F004          	lfsr	2,4
 17408  005A06  5034               	movf	USBConfigureEndpoint@handle,w,c
 17409  005A08  26D9               	addwf	fsr2l,f,c
 17410  005A0A  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 17411  005A0C  22DA               	addwfc	fsr2h,f,c
 17412  005A0E  8CDF               	bsf	indf2,6,c
 17413  005A10  0012               	return		;funcret
 17414  005A12                     __end_of_USBConfigureEndpoint:
 17415                           	opt stack 0
 17416                           pclatu	equ	0xFFB
 17417                           pclath	equ	0xFFA
 17418                           tblptru	equ	0xFF8
 17419                           tblptrh	equ	0xFF7
 17420                           tblptrl	equ	0xFF6
 17421                           tablat	equ	0xFF5
 17422                           prodh	equ	0xFF4
 17423                           prodl	equ	0xFF3
 17424                           intcon	equ	0xFF2
 17425                           postinc0	equ	0xFEE
 17426                           wreg	equ	0xFE8
 17427                           indf1	equ	0xFE7
 17428                           fsr1h	equ	0xFE2
 17429                           fsr1l	equ	0xFE1
 17430                           indf2	equ	0xFDF
 17431                           postinc2	equ	0xFDE
 17432                           postdec2	equ	0xFDD
 17433                           plusw2	equ	0xFDB
 17434                           fsr2h	equ	0xFDA
 17435                           fsr2l	equ	0xFD9
 17436                           status	equ	0xFD8
 17437                           
 17438 ;; *************** function _USBCheckCDCRequest *****************
 17439 ;; Defined at:
 17440 ;;		line 184 in file "../Includes/Usb/framework/usb_device_cdc.c"
 17441 ;; Parameters:    Size  Location     Type
 17442 ;;		None
 17443 ;; Auto vars:     Size  Location     Type
 17444 ;;		None
 17445 ;; Return value:  Size  Location     Type
 17446 ;;                  1    wreg      void 
 17447 ;; Registers used:
 17448 ;;		wreg, status,2, status,0
 17449 ;; Tracked objects:
 17450 ;;		On entry : 0/0
 17451 ;;		On exit  : F/4
 17452 ;;		Unchanged: 0/0
 17453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17454 ;;      Params:         0       0       0       0       0       0       0       0       0
 17455 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17456 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17457 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17458 ;;Total ram usage:        0 bytes
 17459 ;; Hardware stack levels used:    1
 17460 ;; This function calls:
 17461 ;;		Nothing
 17462 ;; This function is called by:
 17463 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17464 ;; This function uses a non-reentrant model
 17465 ;;
 17466                           
 17467                           	psect	text98
 17468  005882                     __ptext98:
 17469                           	opt stack 0
 17470  005882                     _USBCheckCDCRequest:
 17471                           	opt stack 17
 17472                           
 17473                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 17474                           
 17475                           ;incstack = 0
 17476  005882  0104               	movlb	4	; () banked
 17477  005884  5130               	movf	48,w,b	;volatile
 17478  005886  0B1F               	andlw	31
 17479  005888  06E8               	decf	wreg,f,c
 17480  00588A  E001               	bz	i2l5365
 17481  00588C  0012               	return	
 17482  00588E                     i2l5365:
 17483                           
 17484                           ; BSR set to: 4
 17485                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 17486  00588E  3930               	swapf	48,w,b	;volatile
 17487  005890  32E8               	rrcf	wreg,f,c
 17488  005892  0B03               	andlw	3
 17489  005894  06E8               	decf	wreg,f,c
 17490  005896  E001               	bz	i2l5369
 17491  005898  0012               	return	
 17492  00589A                     i2l5369:
 17493                           
 17494                           ; BSR set to: 4
 17495                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 17496                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 17497  00589A  5134               	movf	52,w,b	;volatile
 17498  00589C  E029               	bz	i2l5403
 17499                           
 17500                           ; BSR set to: 4
 17501  00589E  0534               	decf	52,w,b	;volatile
 17502  0058A0  E027               	bz	i2l5403
 17503  0058A2  0012               	return	
 17504  0058A4                     i2l5375:
 17505                           
 17506                           ; BSR set to: 4
 17507                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 17508  0058A4  0EBD               	movlw	low _dummy_encapsulated_cmd_response
 17509  0058A6  6E09               	movwf	_inPipes,c	;volatile
 17510  0058A8  6A0A               	clrf	_inPipes+1,c	;volatile
 17511                           
 17512                           ; BSR set to: 4
 17513                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 17514  0058AA  6A0E               	clrf	_inPipes+5,c	;volatile
 17515  0058AC  0E08               	movlw	8
 17516  0058AE  6E0D               	movwf	_inPipes+4,c	;volatile
 17517                           
 17518                           ; BSR set to: 4
 17519                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17520  0058B0  800C               	bsf	_inPipes+3,0,c	;volatile
 17521                           
 17522                           ; BSR set to: 4
 17523                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 17524  0058B2  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17525                           
 17526                           ;usb_device_cdc.c: 212: break;
 17527  0058B4  0C08               	retlw	8
 17528  0058B6                     i2l5383:
 17529                           
 17530                           ; BSR set to: 4
 17531                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 17532  0058B6  0EBD               	movlw	low _dummy_encapsulated_cmd_response
 17533  0058B8  6E09               	movwf	_inPipes,c	;volatile
 17534  0058BA  6A0A               	clrf	_inPipes+1,c	;volatile
 17535                           
 17536                           ; BSR set to: 4
 17537                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 17538  0058BC  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17539                           
 17540                           ;usb_device_cdc.c: 217: break;
 17541  0058BE  0012               	return	
 17542  0058C0                     i2l1729:
 17543                           
 17544                           ; BSR set to: 4
 17545                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 17546  0058C0  C436 F005          	movff	1078,_outPipes+4	;volatile
 17547  0058C4  C437 F006          	movff	1079,_outPipes+5	;volatile
 17548                           
 17549                           ; BSR set to: 4
 17550                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 17551  0058C8  0EB3               	movlw	low _cdc_notice
 17552  0058CA  6E01               	movwf	_outPipes,c	;volatile
 17553                           
 17554                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 17555  0058CC  0E3C               	movlw	low _USART_mySetLineCodingHandler
 17556  0058CE  6E07               	movwf	_outPipes+6,c	;volatile
 17557  0058D0  0E53               	movlw	high _USART_mySetLineCodingHandler
 17558  0058D2  6E08               	movwf	_outPipes+7,c	;volatile
 17559                           
 17560                           ; BSR set to: 4
 17561                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 17562  0058D4  8E04               	bsf	_outPipes+3,7,c	;volatile
 17563                           
 17564                           ;usb_device_cdc.c: 224: break;
 17565  0058D6  0012               	return	
 17566  0058D8                     i2l5391:
 17567                           
 17568                           ; BSR set to: 4
 17569                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 17570  0058D8  0EC5               	movlw	low _line_coding
 17571  0058DA  6E09               	movwf	_inPipes,c	;volatile
 17572  0058DC  6A0A               	clrf	_inPipes+1,c	;volatile
 17573                           
 17574                           ; BSR set to: 4
 17575  0058DE  6A0E               	clrf	_inPipes+5,c	;volatile
 17576  0058E0  0E07               	movlw	7
 17577  0058E2  6E0D               	movwf	_inPipes+4,c	;volatile
 17578                           
 17579                           ; BSR set to: 4
 17580  0058E4  0EC1               	movlw	193
 17581  0058E6  6E0C               	movwf	_inPipes+3,c	;volatile
 17582                           
 17583                           ;usb_device_cdc.c: 231: break;
 17584  0058E8  0CC1               	retlw	193
 17585  0058EA                     i2l5397:
 17586                           
 17587                           ; BSR set to: 4
 17588                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 17589  0058EA  5132               	movf	50,w,b	;volatile
 17590                           
 17591                           ; BSR set to: 4
 17592                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 17593  0058EC  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17594                           
 17595                           ;usb_device_cdc.c: 256: break;
 17596  0058EE  0012               	return	
 17597  0058F0                     i2l5403:
 17598                           
 17599                           ; BSR set to: 4
 17600  0058F0  5131               	movf	49,w,b	;volatile
 17601                           
 17602                           ; Switch size 1, requested type "speed"
 17603                           ; Number of cases is 5, Range of values is 0 to 34
 17604                           ; switch strategies available:
 17605                           ; Name         Instructions Cycles
 17606                           ; simple_byte           16     9 (average)
 17607                           ;	Chosen strategy is simple_byte
 17608  0058F2  E0D8               	bz	i2l5375
 17609  0058F4  0A01               	xorlw	1	; case 1
 17610  0058F6  E0DF               	bz	i2l5383
 17611  0058F8  0A21               	xorlw	33	; case 32
 17612  0058FA  E0E2               	bz	i2l1729
 17613  0058FC  0A01               	xorlw	1	; case 33
 17614  0058FE  E0EC               	bz	i2l5391
 17615  005900  0A03               	xorlw	3	; case 34
 17616  005902  E0F3               	bz	i2l5397
 17617                           
 17618                           ; BSR set to: 4
 17619  005904  0012               	return		;funcret
 17620  005906                     __end_of_USBCheckCDCRequest:
 17621                           	opt stack 0
 17622                           pclatu	equ	0xFFB
 17623                           pclath	equ	0xFFA
 17624                           tblptru	equ	0xFF8
 17625                           tblptrh	equ	0xFF7
 17626                           tblptrl	equ	0xFF6
 17627                           tablat	equ	0xFF5
 17628                           prodh	equ	0xFF4
 17629                           prodl	equ	0xFF3
 17630                           intcon	equ	0xFF2
 17631                           postinc0	equ	0xFEE
 17632                           wreg	equ	0xFE8
 17633                           indf1	equ	0xFE7
 17634                           fsr1h	equ	0xFE2
 17635                           fsr1l	equ	0xFE1
 17636                           indf2	equ	0xFDF
 17637                           postinc2	equ	0xFDE
 17638                           postdec2	equ	0xFDD
 17639                           plusw2	equ	0xFDB
 17640                           fsr2h	equ	0xFDA
 17641                           fsr2l	equ	0xFD9
 17642                           status	equ	0xFD8
 17643                           
 17644 ;; *************** function _USBCtrlTrfOutHandler *****************
 17645 ;; Defined at:
 17646 ;;		line 2169 in file "../Includes/Usb/framework/usb_device.c"
 17647 ;; Parameters:    Size  Location     Type
 17648 ;;		None
 17649 ;; Auto vars:     Size  Location     Type
 17650 ;;		None
 17651 ;; Return value:  Size  Location     Type
 17652 ;;                  1    wreg      void 
 17653 ;; Registers used:
 17654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 17655 ;; Tracked objects:
 17656 ;;		On entry : F/0
 17657 ;;		On exit  : F/0
 17658 ;;		Unchanged: 0/0
 17659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17660 ;;      Params:         0       0       0       0       0       0       0       0       0
 17661 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17662 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17663 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17664 ;;Total ram usage:        0 bytes
 17665 ;; Hardware stack levels used:    1
 17666 ;; Hardware stack levels required when called:    3
 17667 ;; This function calls:
 17668 ;;		_USBCtrlTrfRxService
 17669 ;; This function is called by:
 17670 ;;		_USBCtrlEPService
 17671 ;; This function uses a non-reentrant model
 17672 ;;
 17673                           
 17674                           	psect	text99
 17675  005298                     __ptext99:
 17676                           	opt stack 0
 17677  005298                     _USBCtrlTrfOutHandler:
 17678                           	opt stack 14
 17679                           
 17680                           ; BSR set to: 0
 17681                           ;usb_device.c: 2171: if(controlTransferState == 2)
 17682                           
 17683                           ; BSR set to: 4
 17684                           ;incstack = 0
 17685  005298  0E02               	movlw	2
 17686  00529A  1821               	xorwf	_controlTransferState,w,c	;volatile
 17687  00529C  E102               	bnz	i2l1612
 17688                           
 17689                           ; BSR set to: 0
 17690                           ;usb_device.c: 2172: {
 17691                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 17692  00529E  EFFE  F035         	goto	_USBCtrlTrfRxService	;wreg free
 17693  0052A2                     i2l1612:
 17694                           
 17695                           ; BSR set to: 0
 17696                           ;usb_device.c: 2175: else
 17697                           ;usb_device.c: 2176: {
 17698                           ;usb_device.c: 2179: controlTransferState = 0;
 17699  0052A2  6A21               	clrf	_controlTransferState,c	;volatile
 17700                           
 17701                           ; BSR set to: 0
 17702                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 17703  0052A4  5193               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 17704  0052A6  E11F               	bnz	i2l1614
 17705                           
 17706                           ; BSR set to: 0
 17707                           ;usb_device.c: 2187: {
 17708                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 17709  0052A8  EE20 F001          	lfsr	2,1
 17710  0052AC  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17711  0052AE  26D9               	addwf	fsr2l,f,c
 17712  0052B0  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17713  0052B2  22DA               	addwfc	fsr2h,f,c
 17714  0052B4  0E08               	movlw	8
 17715  0052B6  6EDF               	movwf	indf2,c
 17716                           
 17717                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17718  0052B8  EE20 F002          	lfsr	2,2
 17719  0052BC  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17720  0052BE  26D9               	addwf	fsr2l,f,c
 17721  0052C0  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17722  0052C2  22DA               	addwfc	fsr2h,f,c
 17723  0052C4  0E30               	movlw	48
 17724  0052C6  6EDE               	movwf	postinc2,c
 17725  0052C8  0E04               	movlw	4
 17726  0052CA  6EDD               	movwf	postdec2,c
 17727                           
 17728                           ; BSR set to: 0
 17729                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17730  0052CC  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17731  0052D0  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17732  0052D4  0E0C               	movlw	12
 17733  0052D6  6EDF               	movwf	indf2,c
 17734                           
 17735                           ; BSR set to: 0
 17736                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17737  0052D8  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17738  0052DC  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17739  0052E0  0E00               	movlw	0
 17740  0052E2  8EDB               	bsf	plusw2,7,c
 17741                           
 17742                           ;usb_device.c: 2192: }
 17743  0052E4  0C00               	retlw	0
 17744  0052E6                     i2l1614:
 17745                           
 17746                           ; BSR set to: 0
 17747                           ;usb_device.c: 2193: else
 17748                           ;usb_device.c: 2194: {
 17749                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 17750  0052E6  6B93               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 17751                           
 17752                           ; BSR set to: 0
 17753  0052E8  0012               	return		;funcret
 17754  0052EA                     __end_of_USBCtrlTrfOutHandler:
 17755                           	opt stack 0
 17756                           pclatu	equ	0xFFB
 17757                           pclath	equ	0xFFA
 17758                           tblptru	equ	0xFF8
 17759                           tblptrh	equ	0xFF7
 17760                           tblptrl	equ	0xFF6
 17761                           tablat	equ	0xFF5
 17762                           prodh	equ	0xFF4
 17763                           prodl	equ	0xFF3
 17764                           intcon	equ	0xFF2
 17765                           postinc0	equ	0xFEE
 17766                           wreg	equ	0xFE8
 17767                           indf1	equ	0xFE7
 17768                           fsr1h	equ	0xFE2
 17769                           fsr1l	equ	0xFE1
 17770                           indf2	equ	0xFDF
 17771                           postinc2	equ	0xFDE
 17772                           postdec2	equ	0xFDD
 17773                           plusw2	equ	0xFDB
 17774                           fsr2h	equ	0xFDA
 17775                           fsr2l	equ	0xFD9
 17776                           status	equ	0xFD8
 17777                           
 17778 ;; *************** function _USBCtrlTrfRxService *****************
 17779 ;; Defined at:
 17780 ;;		line 1518 in file "../Includes/Usb/framework/usb_device.c"
 17781 ;; Parameters:    Size  Location     Type
 17782 ;;		None
 17783 ;; Auto vars:     Size  Location     Type
 17784 ;;  byteToRead      1   18[COMRAM] unsigned char 
 17785 ;;  i               1   17[COMRAM] unsigned char 
 17786 ;; Return value:  Size  Location     Type
 17787 ;;                  1    wreg      void 
 17788 ;; Registers used:
 17789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 17790 ;; Tracked objects:
 17791 ;;		On entry : F/0
 17792 ;;		On exit  : F/0
 17793 ;;		Unchanged: 0/0
 17794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17795 ;;      Params:         0       0       0       0       0       0       0       0       0
 17796 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17797 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17798 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17799 ;;Total ram usage:        2 bytes
 17800 ;; Hardware stack levels used:    1
 17801 ;; Hardware stack levels required when called:    2
 17802 ;; This function calls:
 17803 ;;		_USART_mySetLineCodingHandler
 17804 ;;		_USBCtrlEPAllowStatusStage
 17805 ;; This function is called by:
 17806 ;;		_USBCtrlTrfOutHandler
 17807 ;; This function uses a non-reentrant model
 17808 ;;
 17809                           
 17810                           	psect	text100
 17811  006BFC                     __ptext100:
 17812                           	opt stack 0
 17813  006BFC                     _USBCtrlTrfRxService:
 17814                           	opt stack 14
 17815                           
 17816                           ; BSR set to: 0
 17817                           ;usb_device.c: 1520: uint8_t byteToRead;
 17818                           ;usb_device.c: 1521: uint8_t i;
 17819                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 17820                           
 17821                           ; BSR set to: 0
 17822                           ;incstack = 0
 17823  006BFC  EE20 F001          	lfsr	2,1
 17824  006C00  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 17825  006C02  26D9               	addwf	fsr2l,f,c
 17826  006C04  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 17827  006C06  22DA               	addwfc	fsr2h,f,c
 17828  006C08  50DF               	movf	indf2,w,c
 17829  006C0A  6E40               	movwf	USBCtrlTrfRxService@byteToRead,c
 17830                           
 17831                           ; BSR set to: 0
 17832                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 17833  006C0C  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17834  006C0E  5C05               	subwf	_outPipes+4,w,c	;volatile
 17835  006C10  0E00               	movlw	0
 17836  006C12  5806               	subwfb	_outPipes+5,w,c	;volatile
 17837  006C14  E202               	bc	i2l6085
 17838                           
 17839                           ; BSR set to: 0
 17840                           ;usb_device.c: 1532: {
 17841                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 17842  006C16  C005  F040         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 17843  006C1A                     i2l6085:
 17844                           
 17845                           ; BSR set to: 0
 17846                           ;usb_device.c: 1534: }
 17847                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 17848  006C1A  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17849  006C1C  5E05               	subwf	_outPipes+4,f,c	;volatile
 17850  006C1E  0E00               	movlw	0
 17851  006C20  5A06               	subwfb	_outPipes+5,f,c	;volatile
 17852                           
 17853                           ; BSR set to: 0
 17854                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 17855  006C22  6A3F               	clrf	USBCtrlTrfRxService@i,c
 17856  006C24  D00D               	goto	i2l6095
 17857  006C26                     i2l6089:
 17858                           
 17859                           ; BSR set to: 0
 17860                           ;usb_device.c: 1541: {
 17861                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 17862  006C26  0E38               	movlw	56
 17863  006C28  243F               	addwf	USBCtrlTrfRxService@i,w,c
 17864  006C2A  6ED9               	movwf	fsr2l,c
 17865  006C2C  6ADA               	clrf	fsr2h,c
 17866  006C2E  0E04               	movlw	4
 17867  006C30  22DA               	addwfc	fsr2h,f,c
 17868  006C32  5001               	movf	_outPipes,w,c	;volatile
 17869  006C34  6EE1               	movwf	fsr1l,c
 17870  006C36  6AE2               	clrf	fsr1h,c
 17871  006C38  CFDF FFE7          	movff	indf2,indf1
 17872                           
 17873                           ; BSR set to: 0
 17874  006C3C  2A01               	incf	_outPipes,f,c	;volatile
 17875                           
 17876                           ; BSR set to: 0
 17877  006C3E  2A3F               	incf	USBCtrlTrfRxService@i,f,c
 17878  006C40                     i2l6095:
 17879                           
 17880                           ; BSR set to: 0
 17881  006C40  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17882  006C42  5C3F               	subwf	USBCtrlTrfRxService@i,w,c
 17883  006C44  E3F0               	bnc	i2l6089
 17884                           
 17885                           ; BSR set to: 0
 17886                           ;usb_device.c: 1543: }
 17887                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 17888  006C46  5005               	movf	_outPipes+4,w,c	;volatile
 17889  006C48  1006               	iorwf	_outPipes+5,w,c	;volatile
 17890  006C4A  E032               	bz	i2l6111
 17891                           
 17892                           ; BSR set to: 0
 17893                           ;usb_device.c: 1548: {
 17894                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 17895  006C4C  EE20 F001          	lfsr	2,1
 17896  006C50  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17897  006C52  26D9               	addwf	fsr2l,f,c
 17898  006C54  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17899  006C56  22DA               	addwfc	fsr2h,f,c
 17900  006C58  0E08               	movlw	8
 17901  006C5A  6EDF               	movwf	indf2,c
 17902                           
 17903                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 17904  006C5C  EE20 F002          	lfsr	2,2
 17905  006C60  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17906  006C62  26D9               	addwf	fsr2l,f,c
 17907  006C64  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17908  006C66  22DA               	addwfc	fsr2h,f,c
 17909  006C68  0E38               	movlw	56
 17910  006C6A  6EDE               	movwf	postinc2,c
 17911  006C6C  0E04               	movlw	4
 17912  006C6E  6EDD               	movwf	postdec2,c
 17913                           
 17914                           ; BSR set to: 0
 17915                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 17916  006C70  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17917  006C74  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17918  006C78  BCDF               	btfsc	indf2,6,c
 17919  006C7A  D00D               	goto	i2l6107
 17920                           
 17921                           ; BSR set to: 0
 17922                           ;usb_device.c: 1552: {
 17923                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 17924  006C7C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17925  006C80  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17926  006C84  0E48               	movlw	72
 17927  006C86  6EDF               	movwf	indf2,c
 17928                           
 17929                           ; BSR set to: 0
 17930                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17931  006C88  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17932  006C8C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17933  006C90  0E00               	movlw	0
 17934  006C92  8EDB               	bsf	plusw2,7,c
 17935                           
 17936                           ;usb_device.c: 1555: }
 17937  006C94  0C00               	retlw	0
 17938  006C96                     i2l6107:
 17939                           
 17940                           ; BSR set to: 0
 17941                           ;usb_device.c: 1556: else
 17942                           ;usb_device.c: 1557: {
 17943                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 17944  006C96  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17945  006C9A  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17946  006C9E  0E08               	movlw	8
 17947  006CA0  6EDF               	movwf	indf2,c
 17948                           
 17949                           ; BSR set to: 0
 17950                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17951  006CA2  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17952  006CA6  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17953  006CAA  0E00               	movlw	0
 17954  006CAC  8EDB               	bsf	plusw2,7,c
 17955  006CAE  0C00               	retlw	0
 17956  006CB0                     i2l6111:
 17957                           
 17958                           ; BSR set to: 0
 17959                           ;usb_device.c: 1562: else
 17960                           ;usb_device.c: 1563: {
 17961                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 17962  006CB0  EE20 F001          	lfsr	2,1
 17963  006CB4  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17964  006CB6  26D9               	addwf	fsr2l,f,c
 17965  006CB8  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17966  006CBA  22DA               	addwfc	fsr2h,f,c
 17967  006CBC  0E08               	movlw	8
 17968  006CBE  6EDF               	movwf	indf2,c
 17969                           
 17970                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17971  006CC0  EE20 F002          	lfsr	2,2
 17972  006CC4  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17973  006CC6  26D9               	addwf	fsr2l,f,c
 17974  006CC8  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17975  006CCA  22DA               	addwfc	fsr2h,f,c
 17976  006CCC  0E30               	movlw	48
 17977  006CCE  6EDE               	movwf	postinc2,c
 17978  006CD0  0E04               	movlw	4
 17979  006CD2  6EDD               	movwf	postdec2,c
 17980                           
 17981                           ; BSR set to: 0
 17982                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17983  006CD4  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17984  006CD8  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17985  006CDC  6EDF               	movwf	indf2,c
 17986                           
 17987                           ; BSR set to: 0
 17988                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17989  006CDE  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17990  006CE2  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17991  006CE6  0E00               	movlw	0
 17992  006CE8  8EDB               	bsf	plusw2,7,c
 17993                           
 17994                           ; BSR set to: 0
 17995                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 17996  006CEA  5007               	movf	_outPipes+6,w,c	;volatile
 17997  006CEC  1008               	iorwf	_outPipes+7,w,c	;volatile
 17998  006CEE  E00E               	bz	i2l6121
 17999                           
 18000                           ; BSR set to: 0
 18001                           ;usb_device.c: 1581: {
 18002                           ;usb_device.c: 1586: outPipes[0].pFunc();
 18003  006CF0  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 18004  006CF4  D801               	call	i2u403_48
 18005  006CF6  D00A               	goto	i2l6121
 18006  006CF8                     i2u403_48:
 18007  006CF8  0005               	push	
 18008  006CFA  6EFA               	movwf	pclath,c
 18009  006CFC  50DE               	movf	postinc2,w,c
 18010  006CFE  6EFD               	movwf	tosl,c
 18011  006D00  50DE               	movf	postinc2,w,c
 18012  006D02  6EFE               	movwf	tosh,c
 18013  006D04  50F8               	movf	tblptru,w,c
 18014  006D06  6EFF               	movwf	tosu,c
 18015  006D08  50FA               	movf	pclath,w,c
 18016  006D0A  0012               	return		;indir
 18017  006D0C                     i2l6121:
 18018                           
 18019                           ; BSR set to: 0
 18020                           ;usb_device.c: 1588: }
 18021                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 18022  006D0C  9E04               	bcf	_outPipes+3,7,c	;volatile
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 18026  006D0E  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 18027  006D10  B4D8               	btfsc	status,2,c
 18028                           
 18029                           ; BSR set to: 0
 18030                           ;usb_device.c: 1604: {
 18031                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 18032  006D12  EC35  F030         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18033                           
 18034                           ; BSR set to: 0
 18035  006D16  0012               	return		;funcret
 18036  006D18                     __end_of_USBCtrlTrfRxService:
 18037                           	opt stack 0
 18038                           tosu	equ	0xFFF
 18039                           tosh	equ	0xFFE
 18040                           tosl	equ	0xFFD
 18041                           pclatu	equ	0xFFB
 18042                           pclath	equ	0xFFA
 18043                           tblptru	equ	0xFF8
 18044                           tblptrh	equ	0xFF7
 18045                           tblptrl	equ	0xFF6
 18046                           tablat	equ	0xFF5
 18047                           prodh	equ	0xFF4
 18048                           prodl	equ	0xFF3
 18049                           intcon	equ	0xFF2
 18050                           postinc0	equ	0xFEE
 18051                           wreg	equ	0xFE8
 18052                           indf1	equ	0xFE7
 18053                           fsr1h	equ	0xFE2
 18054                           fsr1l	equ	0xFE1
 18055                           indf2	equ	0xFDF
 18056                           postinc2	equ	0xFDE
 18057                           postdec2	equ	0xFDD
 18058                           plusw2	equ	0xFDB
 18059                           fsr2h	equ	0xFDA
 18060                           fsr2l	equ	0xFD9
 18061                           status	equ	0xFD8
 18062                           
 18063 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 18064 ;; Defined at:
 18065 ;;		line 1104 in file "../Includes/Usb/framework/usb_device.c"
 18066 ;; Parameters:    Size  Location     Type
 18067 ;;		None
 18068 ;; Auto vars:     Size  Location     Type
 18069 ;;		None
 18070 ;; Return value:  Size  Location     Type
 18071 ;;                  1    wreg      void 
 18072 ;; Registers used:
 18073 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18074 ;; Tracked objects:
 18075 ;;		On entry : 0/0
 18076 ;;		On exit  : F/0
 18077 ;;		Unchanged: 0/0
 18078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18079 ;;      Params:         0       0       0       0       0       0       0       0       0
 18080 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18081 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18082 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18083 ;;Total ram usage:        0 bytes
 18084 ;; Hardware stack levels used:    1
 18085 ;; This function calls:
 18086 ;;		Nothing
 18087 ;; This function is called by:
 18088 ;;		_USBDeviceTasks
 18089 ;;		_USBCtrlEPServiceComplete
 18090 ;;		_USBCtrlTrfRxService
 18091 ;; This function uses a non-reentrant model
 18092 ;;
 18093                           
 18094                           	psect	text101
 18095  00606A                     __ptext101:
 18096                           	opt stack 0
 18097  00606A                     _USBCtrlEPAllowStatusStage:
 18098                           	opt stack 15
 18099                           
 18100                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 18101                           
 18102                           ; BSR set to: 0
 18103                           ;incstack = 0
 18104  00606A  0100               	movlb	0	; () banked
 18105  00606C  5198               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 18106  00606E  A4D8               	btfss	status,2,c
 18107  006070  0012               	return	
 18108                           
 18109                           ; BSR set to: 0
 18110                           ;usb_device.c: 1112: {
 18111                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 18112  006072  0E01               	movlw	1
 18113  006074  6F98               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18114                           
 18115                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 18116  006076  5199               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 18117  006078  A4D8               	btfss	status,2,c
 18118  00607A  0012               	return	
 18119                           
 18120                           ; BSR set to: 0
 18121                           ;usb_device.c: 1115: {
 18122                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 18123  00607C  0E01               	movlw	1
 18124  00607E  6F99               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18125                           
 18126                           ; BSR set to: 0
 18127                           ;usb_device.c: 1120: if(controlTransferState == 2)
 18128  006080  0E02               	movlw	2
 18129  006082  1821               	xorwf	_controlTransferState,w,c	;volatile
 18130  006084  E114               	bnz	i2l5673
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;usb_device.c: 1121: {
 18134                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 18135  006086  EE20 F001          	lfsr	2,1
 18136  00608A  500F               	movf	_pBDTEntryIn,w,c
 18137  00608C  26D9               	addwf	fsr2l,f,c
 18138  00608E  5010               	movf	_pBDTEntryIn+1,w,c
 18139  006090  22DA               	addwfc	fsr2h,f,c
 18140  006092  6ADF               	clrf	indf2,c
 18141                           
 18142                           ; BSR set to: 0
 18143                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18144  006094  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18145  006098  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18146  00609C  0E48               	movlw	72
 18147  00609E  6EDF               	movwf	indf2,c
 18148                           
 18149                           ; BSR set to: 0
 18150                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18151  0060A0  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18152  0060A4  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18153  0060A8  0E00               	movlw	0
 18154  0060AA  8EDB               	bsf	plusw2,7,c
 18155                           
 18156                           ;usb_device.c: 1125: }
 18157  0060AC  0C00               	retlw	0
 18158  0060AE                     i2l5673:
 18159                           
 18160                           ; BSR set to: 0
 18161                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 18162  0060AE  0421               	decf	_controlTransferState,w,c	;volatile
 18163  0060B0  A4D8               	btfss	status,2,c
 18164  0060B2  0012               	return	
 18165                           
 18166                           ; BSR set to: 0
 18167                           ;usb_device.c: 1127: {
 18168                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 18169  0060B4  6B93               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 18170                           
 18171                           ; BSR set to: 0
 18172                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 18173  0060B6  EE20 F001          	lfsr	2,1
 18174  0060BA  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 18175  0060BC  26D9               	addwf	fsr2l,f,c
 18176  0060BE  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18177  0060C0  22DA               	addwfc	fsr2h,f,c
 18178  0060C2  0E08               	movlw	8
 18179  0060C4  6EDF               	movwf	indf2,c
 18180                           
 18181                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 18182  0060C6  EE20 F002          	lfsr	2,2
 18183  0060CA  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 18184  0060CC  26D9               	addwf	fsr2l,f,c
 18185  0060CE  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18186  0060D0  22DA               	addwfc	fsr2h,f,c
 18187  0060D2  0E30               	movlw	48
 18188  0060D4  6EDE               	movwf	postinc2,c
 18189  0060D6  0E04               	movlw	4
 18190  0060D8  6EDD               	movwf	postdec2,c
 18191                           
 18192                           ; BSR set to: 0
 18193                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 18194  0060DA  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18195  0060DE  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18196  0060E2  6EDF               	movwf	indf2,c
 18197                           
 18198                           ; BSR set to: 0
 18199                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 18200  0060E4  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18201  0060E8  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18202  0060EC  0E00               	movlw	0
 18203  0060EE  8EDB               	bsf	plusw2,7,c
 18204                           
 18205                           ; BSR set to: 0
 18206                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 18207  0060F0  0E01               	movlw	1
 18208  0060F2  6F93               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 18209                           
 18210                           ; BSR set to: 0
 18211                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 18212  0060F4  EE20 F001          	lfsr	2,1
 18213  0060F8  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18214  0060FA  26D9               	addwf	fsr2l,f,c
 18215  0060FC  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18216  0060FE  22DA               	addwfc	fsr2h,f,c
 18217  006100  0E08               	movlw	8
 18218  006102  6EDF               	movwf	indf2,c
 18219                           
 18220                           ; BSR set to: 0
 18221                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18222  006104  EE20 F002          	lfsr	2,2
 18223  006108  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18224  00610A  26D9               	addwf	fsr2l,f,c
 18225  00610C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18226  00610E  22DA               	addwfc	fsr2h,f,c
 18227  006110  0E30               	movlw	48
 18228  006112  6EDE               	movwf	postinc2,c
 18229  006114  0E04               	movlw	4
 18230  006116  6EDD               	movwf	postdec2,c
 18231                           
 18232                           ; BSR set to: 0
 18233                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 18234  006118  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18235  00611C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18236  006120  0E80               	movlw	128
 18237  006122  6EDF               	movwf	indf2,c
 18238  006124  0C80               	retlw	128
 18239  006126                     __end_of_USBCtrlEPAllowStatusStage:
 18240                           	opt stack 0
 18241                           tosu	equ	0xFFF
 18242                           tosh	equ	0xFFE
 18243                           tosl	equ	0xFFD
 18244                           pclatu	equ	0xFFB
 18245                           pclath	equ	0xFFA
 18246                           tblptru	equ	0xFF8
 18247                           tblptrh	equ	0xFF7
 18248                           tblptrl	equ	0xFF6
 18249                           tablat	equ	0xFF5
 18250                           prodh	equ	0xFF4
 18251                           prodl	equ	0xFF3
 18252                           intcon	equ	0xFF2
 18253                           postinc0	equ	0xFEE
 18254                           wreg	equ	0xFE8
 18255                           indf1	equ	0xFE7
 18256                           fsr1h	equ	0xFE2
 18257                           fsr1l	equ	0xFE1
 18258                           indf2	equ	0xFDF
 18259                           postinc2	equ	0xFDE
 18260                           postdec2	equ	0xFDD
 18261                           plusw2	equ	0xFDB
 18262                           fsr2h	equ	0xFDA
 18263                           fsr2l	equ	0xFD9
 18264                           status	equ	0xFD8
 18265                           
 18266 ;; *************** function _USBCtrlTrfInHandler *****************
 18267 ;; Defined at:
 18268 ;;		line 2223 in file "../Includes/Usb/framework/usb_device.c"
 18269 ;; Parameters:    Size  Location     Type
 18270 ;;		None
 18271 ;; Auto vars:     Size  Location     Type
 18272 ;;  lastDTS         1   17[COMRAM] unsigned char 
 18273 ;; Return value:  Size  Location     Type
 18274 ;;                  1    wreg      void 
 18275 ;; Registers used:
 18276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 18277 ;; Tracked objects:
 18278 ;;		On entry : F/0
 18279 ;;		On exit  : F/0
 18280 ;;		Unchanged: 0/0
 18281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18282 ;;      Params:         0       0       0       0       0       0       0       0       0
 18283 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18284 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18285 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18286 ;;Total ram usage:        1 bytes
 18287 ;; Hardware stack levels used:    1
 18288 ;; Hardware stack levels required when called:    2
 18289 ;; This function calls:
 18290 ;;		_USART_mySetLineCodingHandler
 18291 ;;		_USBCtrlTrfTxService
 18292 ;; This function is called by:
 18293 ;;		_USBCtrlEPService
 18294 ;; This function uses a non-reentrant model
 18295 ;;
 18296                           
 18297                           	psect	text102
 18298  0061E8                     __ptext102:
 18299                           	opt stack 0
 18300  0061E8                     _USBCtrlTrfInHandler:
 18301                           	opt stack 15
 18302                           
 18303                           ; BSR set to: 0
 18304                           ;usb_device.c: 2225: uint8_t lastDTS;
 18305                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 18306                           
 18307                           ; BSR set to: 0
 18308                           ;incstack = 0
 18309  0061E8  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18310  0061EC  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18311  0061F0  0E00               	movlw	0
 18312  0061F2  BCDF               	btfsc	indf2,6,c
 18313  0061F4  0E01               	movlw	1
 18314  0061F6  6E3F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 18315                           
 18316                           ; BSR set to: 0
 18317                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 18318  0061F8  0E04               	movlw	4
 18319  0061FA  1A0F               	xorwf	_pBDTEntryIn,f,c
 18320                           
 18321                           ; BSR set to: 0
 18322                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 18323  0061FC  0E08               	movlw	8
 18324  0061FE  1997               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 18325  006200  E10A               	bnz	i2l6689
 18326                           
 18327                           ; BSR set to: 0
 18328                           ;usb_device.c: 2236: {
 18329                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 18330  006202  0104               	movlb	4	; () banked
 18331  006204  5132               	movf	50,w,b	;volatile
 18332  006206  0B7F               	andlw	127
 18333  006208  6E63               	movwf	3939,c	;volatile
 18334                           
 18335                           ; BSR set to: 4
 18336                           ;usb_device.c: 2238: if(UADDR != 0u)
 18337  00620A  5063               	movf	3939,w,c
 18338                           
 18339                           ; BSR set to: 4
 18340                           ;usb_device.c: 2239: {
 18341                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 18342  00620C  0E10               	movlw	16
 18343  00620E  B4D8               	btfsc	status,2,c
 18344                           
 18345                           ; BSR set to: 4
 18346                           ;usb_device.c: 2242: else
 18347                           ;usb_device.c: 2243: {
 18348                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 18349  006210  0E04               	movlw	4
 18350                           
 18351                           ;usb_device.c: 2241: }
 18352  006212  0100               	movlb	0	; () banked
 18353  006214  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 18354  006216                     i2l6689:
 18355                           
 18356                           ; BSR set to: 0
 18357                           ;usb_device.c: 2245: }
 18358                           ;usb_device.c: 2246: }
 18359                           ;usb_device.c: 2249: if(controlTransferState == 1)
 18360  006216  0421               	decf	_controlTransferState,w,c	;volatile
 18361  006218  E138               	bnz	i2l1622
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;usb_device.c: 2250: {
 18365                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 18366  00621A  EE20 F002          	lfsr	2,2
 18367  00621E  500F               	movf	_pBDTEntryIn,w,c
 18368  006220  26D9               	addwf	fsr2l,f,c
 18369  006222  5010               	movf	_pBDTEntryIn+1,w,c
 18370  006224  22DA               	addwfc	fsr2h,f,c
 18371  006226  0E38               	movlw	56
 18372  006228  6EDE               	movwf	postinc2,c
 18373  00622A  0E04               	movlw	4
 18374  00622C  6EDD               	movwf	postdec2,c
 18375                           
 18376                           ; BSR set to: 0
 18377                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 18378  00622E  EC93  F030         	call	_USBCtrlTrfTxService	;wreg free
 18379                           
 18380                           ; BSR set to: 0
 18381                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 18382  006232  0E02               	movlw	2
 18383  006234  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 18384  006236  E10D               	bnz	i2l6701
 18385                           
 18386                           ; BSR set to: 0
 18387                           ;usb_device.c: 2259: {
 18388                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 18389  006238  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18390  00623C  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18391  006240  0E04               	movlw	4
 18392  006242  6EDF               	movwf	indf2,c
 18393                           
 18394                           ; BSR set to: 0
 18395                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18396  006244  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18397  006248  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18398  00624C  0E00               	movlw	0
 18399  00624E  8EDB               	bsf	plusw2,7,c
 18400                           
 18401                           ;usb_device.c: 2264: }
 18402  006250  0C00               	retlw	0
 18403  006252                     i2l6701:
 18404                           
 18405                           ; BSR set to: 0
 18406                           ;usb_device.c: 2265: else
 18407                           ;usb_device.c: 2266: {
 18408                           ;usb_device.c: 2267: if(lastDTS == 0)
 18409  006252  503F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 18410  006254  E10D               	bnz	i2l6707
 18411                           
 18412                           ; BSR set to: 0
 18413                           ;usb_device.c: 2268: {
 18414                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18415  006256  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18416  00625A  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18417  00625E  0E48               	movlw	72
 18418  006260  6EDF               	movwf	indf2,c
 18419                           
 18420                           ; BSR set to: 0
 18421                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18422  006262  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18423  006266  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18424  00626A  0E00               	movlw	0
 18425  00626C  8EDB               	bsf	plusw2,7,c
 18426                           
 18427                           ;usb_device.c: 2271: }
 18428  00626E  0C00               	retlw	0
 18429  006270                     i2l6707:
 18430                           
 18431                           ; BSR set to: 0
 18432                           ;usb_device.c: 2272: else
 18433                           ;usb_device.c: 2273: {
 18434                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 18435  006270  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18436  006274  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18437  006278  0E08               	movlw	8
 18438  00627A  6EDF               	movwf	indf2,c
 18439                           
 18440                           ; BSR set to: 0
 18441                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18442  00627C  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18443  006280  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18444  006284  0E00               	movlw	0
 18445  006286  8EDB               	bsf	plusw2,7,c
 18446  006288  0C00               	retlw	0
 18447  00628A                     i2l1622:
 18448                           
 18449                           ; BSR set to: 0
 18450                           ;usb_device.c: 2279: else
 18451                           ;usb_device.c: 2280: {
 18452                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 18453  00628A  AE04               	btfss	_outPipes+3,7,c	;volatile
 18454  00628C  D012               	goto	i2l6717
 18455                           
 18456                           ; BSR set to: 0
 18457                           ;usb_device.c: 2285: {
 18458                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 18459  00628E  5007               	movf	_outPipes+6,w,c	;volatile
 18460  006290  1008               	iorwf	_outPipes+7,w,c	;volatile
 18461  006292  E00E               	bz	i2l6715
 18462                           
 18463                           ; BSR set to: 0
 18464                           ;usb_device.c: 2287: {
 18465                           ;usb_device.c: 2288: outPipes[0].pFunc();
 18466  006294  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 18467  006298  D801               	call	i2u462_48
 18468  00629A  D00A               	goto	i2l6715
 18469  00629C                     i2u462_48:
 18470  00629C  0005               	push	
 18471  00629E  6EFA               	movwf	pclath,c
 18472  0062A0  50DE               	movf	postinc2,w,c
 18473  0062A2  6EFD               	movwf	tosl,c
 18474  0062A4  50DE               	movf	postinc2,w,c
 18475  0062A6  6EFE               	movwf	tosh,c
 18476  0062A8  50F8               	movf	tblptru,w,c
 18477  0062AA  6EFF               	movwf	tosu,c
 18478  0062AC  50FA               	movf	pclath,w,c
 18479  0062AE  0012               	return		;indir
 18480  0062B0                     i2l6715:
 18481                           
 18482                           ; BSR set to: 0
 18483                           ;usb_device.c: 2289: }
 18484                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 18485  0062B0  9E04               	bcf	_outPipes+3,7,c	;volatile
 18486  0062B2                     i2l6717:
 18487                           
 18488                           ; BSR set to: 0
 18489                           ;usb_device.c: 2291: }
 18490                           ;usb_device.c: 2293: controlTransferState = 0;
 18491  0062B2  6A21               	clrf	_controlTransferState,c	;volatile
 18492                           
 18493                           ; BSR set to: 0
 18494  0062B4  0012               	return		;funcret
 18495  0062B6                     __end_of_USBCtrlTrfInHandler:
 18496                           	opt stack 0
 18497                           tosu	equ	0xFFF
 18498                           tosh	equ	0xFFE
 18499                           tosl	equ	0xFFD
 18500                           pclatu	equ	0xFFB
 18501                           pclath	equ	0xFFA
 18502                           tblptru	equ	0xFF8
 18503                           tblptrh	equ	0xFF7
 18504                           tblptrl	equ	0xFF6
 18505                           tablat	equ	0xFF5
 18506                           prodh	equ	0xFF4
 18507                           prodl	equ	0xFF3
 18508                           intcon	equ	0xFF2
 18509                           postinc0	equ	0xFEE
 18510                           wreg	equ	0xFE8
 18511                           indf1	equ	0xFE7
 18512                           fsr1h	equ	0xFE2
 18513                           fsr1l	equ	0xFE1
 18514                           indf2	equ	0xFDF
 18515                           postinc2	equ	0xFDE
 18516                           postdec2	equ	0xFDD
 18517                           plusw2	equ	0xFDB
 18518                           fsr2h	equ	0xFDA
 18519                           fsr2l	equ	0xFD9
 18520                           status	equ	0xFD8
 18521                           
 18522 ;; *************** function _USBCtrlTrfTxService *****************
 18523 ;; Defined at:
 18524 ;;		line 1437 in file "../Includes/Usb/framework/usb_device.c"
 18525 ;; Parameters:    Size  Location     Type
 18526 ;;		None
 18527 ;; Auto vars:     Size  Location     Type
 18528 ;;  byteToSend      1    0[COMRAM] unsigned char 
 18529 ;; Return value:  Size  Location     Type
 18530 ;;                  1    wreg      void 
 18531 ;; Registers used:
 18532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18533 ;; Tracked objects:
 18534 ;;		On entry : B/4
 18535 ;;		On exit  : F/0
 18536 ;;		Unchanged: 0/0
 18537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18538 ;;      Params:         0       0       0       0       0       0       0       0       0
 18539 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18540 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18541 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18542 ;;Total ram usage:        1 bytes
 18543 ;; Hardware stack levels used:    1
 18544 ;; This function calls:
 18545 ;;		Nothing
 18546 ;; This function is called by:
 18547 ;;		_USBCtrlEPAllowDataStage
 18548 ;;		_USBCtrlTrfInHandler
 18549 ;; This function uses a non-reentrant model
 18550 ;;
 18551                           
 18552                           	psect	text103
 18553  006126                     __ptext103:
 18554                           	opt stack 0
 18555  006126                     _USBCtrlTrfTxService:
 18556                           	opt stack 14
 18557                           
 18558                           ;usb_device.c: 1439: uint8_t byteToSend;
 18559                           ;usb_device.c: 1443: byteToSend = 8;
 18560                           
 18561                           ; BSR set to: 0
 18562                           ;incstack = 0
 18563  006126  0E08               	movlw	8
 18564  006128  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 18565                           
 18566                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 18567  00612A  500E               	movf	_inPipes+5,w,c	;volatile
 18568  00612C  E10D               	bnz	i2l5471
 18569  00612E  0E08               	movlw	8
 18570  006130  5C0D               	subwf	_inPipes+4,w,c	;volatile
 18571  006132  E20A               	bc	i2l5471
 18572                           
 18573                           ;usb_device.c: 1445: {
 18574                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 18575  006134  C00D  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 18576                           
 18577                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 18578  006138  502B               	movf	_shortPacketStatus,w,c	;volatile
 18579  00613A  E102               	bnz	i2l5467
 18580                           
 18581                           ;usb_device.c: 1454: {
 18582                           ;usb_device.c: 1455: shortPacketStatus = 1;
 18583  00613C  0E01               	movlw	1
 18584  00613E  D003               	goto	L32
 18585  006140                     i2l5467:
 18586                           
 18587                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 18588  006140  042B               	decf	_shortPacketStatus,w,c	;volatile
 18589  006142  E102               	bnz	i2l5471
 18590                           
 18591                           ;usb_device.c: 1458: {
 18592                           ;usb_device.c: 1459: shortPacketStatus = 2;
 18593  006144  0E02               	movlw	2
 18594  006146                     L32:
 18595  006146  6E2B               	movwf	_shortPacketStatus,c	;volatile
 18596  006148                     i2l5471:
 18597                           
 18598                           ;usb_device.c: 1460: }
 18599                           ;usb_device.c: 1461: }
 18600                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 18601  006148  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18602  00614A  5E0D               	subwf	_inPipes+4,f,c	;volatile
 18603  00614C  0E00               	movlw	0
 18604  00614E  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 18605                           
 18606                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 18607  006150  EE20 F001          	lfsr	2,1
 18608  006154  500F               	movf	_pBDTEntryIn,w,c
 18609  006156  26D9               	addwf	fsr2l,f,c
 18610  006158  5010               	movf	_pBDTEntryIn+1,w,c
 18611  00615A  22DA               	addwfc	fsr2h,f,c
 18612  00615C  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 18613                           
 18614                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 18615  006160  0E38               	movlw	56
 18616  006162  0100               	movlb	0	; () banked
 18617  006164  6F87               	movwf	_pDst& (0+255),b
 18618  006166  0E04               	movlw	4
 18619  006168  6F88               	movwf	(_pDst+1)& (0+255),b
 18620                           
 18621                           ; BSR set to: 0
 18622                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 18623  00616A  B00C               	btfsc	_inPipes+3,0,c	;volatile
 18624  00616C  D03A               	goto	i2l5499
 18625  00616E  D01B               	goto	i2l5489
 18626  006170                     i2l5481:
 18627                           
 18628                           ; BSR set to: 0
 18629                           ;usb_device.c: 1478: {
 18630                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 18631  006170  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 18632  006174  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 18633  006178  6AF8               	clrf	tblptru,c
 18634  00617A  C087  FFD9         	movff	_pDst,fsr2l
 18635  00617E  C088  FFDA         	movff	_pDst+1,fsr2h
 18636  006182  0E07               	movlw	(high __ramtop+-1)
 18637  006184  64F7               	cpfsgt	tblptrh,c
 18638  006186  D003               	bra	i2u323_47
 18639  006188  0008               	tblrd		*
 18640  00618A  50F5               	movf	tablat,w,c
 18641  00618C  D005               	bra	i2u323_40
 18642  00618E                     i2u323_47:
 18643  00618E  CFF6 FFE1          	movff	tblptrl,fsr1l
 18644  006192  CFF7 FFE2          	movff	tblptrh,fsr1h
 18645  006196  50E7               	movf	indf1,w,c
 18646  006198                     i2u323_40:
 18647  006198  6EDF               	movwf	indf2,c
 18648  00619A  4A09               	infsnz	_inPipes,f,c	;volatile
 18649  00619C  2A0A               	incf	_inPipes+1,f,c	;volatile
 18650  00619E  0100               	movlb	0	; () banked
 18651  0061A0  4B87               	infsnz	_pDst& (0+255),f,b
 18652  0061A2  2B88               	incf	(_pDst+1)& (0+255),f,b
 18653                           
 18654                           ; BSR set to: 0
 18655                           ;usb_device.c: 1480: byteToSend--;
 18656  0061A4  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18657  0061A6                     i2l5489:
 18658                           
 18659                           ; BSR set to: 0
 18660  0061A6  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18661  0061A8  E1E3               	bnz	i2l5481
 18662  0061AA  0012               	return	
 18663  0061AC                     i2l5491:
 18664                           
 18665                           ; BSR set to: 0
 18666                           ;usb_device.c: 1486: {
 18667                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 18668  0061AC  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 18669  0061B0  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 18670  0061B4  6AF8               	clrf	tblptru,c
 18671  0061B6  C087  FFD9         	movff	_pDst,fsr2l
 18672  0061BA  C088  FFDA         	movff	_pDst+1,fsr2h
 18673  0061BE  0E07               	movlw	(high __ramtop+-1)
 18674  0061C0  64F7               	cpfsgt	tblptrh,c
 18675  0061C2  D003               	bra	i2u325_47
 18676  0061C4  0008               	tblrd		*
 18677  0061C6  50F5               	movf	tablat,w,c
 18678  0061C8  D005               	bra	i2u325_40
 18679  0061CA                     i2u325_47:
 18680  0061CA  CFF6 FFE1          	movff	tblptrl,fsr1l
 18681  0061CE  CFF7 FFE2          	movff	tblptrh,fsr1h
 18682  0061D2  50E7               	movf	indf1,w,c
 18683  0061D4                     i2u325_40:
 18684  0061D4  6EDF               	movwf	indf2,c
 18685  0061D6  4A09               	infsnz	_inPipes,f,c	;volatile
 18686  0061D8  2A0A               	incf	_inPipes+1,f,c	;volatile
 18687  0061DA  0100               	movlb	0	; () banked
 18688  0061DC  4B87               	infsnz	_pDst& (0+255),f,b
 18689  0061DE  2B88               	incf	(_pDst+1)& (0+255),f,b
 18690                           
 18691                           ; BSR set to: 0
 18692                           ;usb_device.c: 1488: byteToSend--;
 18693  0061E0  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18694  0061E2                     i2l5499:
 18695                           
 18696                           ; BSR set to: 0
 18697  0061E2  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18698  0061E4  E1E3               	bnz	i2l5491
 18699                           
 18700                           ; BSR set to: 0
 18701  0061E6  0012               	return		;funcret
 18702  0061E8                     __end_of_USBCtrlTrfTxService:
 18703                           	opt stack 0
 18704                           tosu	equ	0xFFF
 18705                           tosh	equ	0xFFE
 18706                           tosl	equ	0xFFD
 18707                           pclatu	equ	0xFFB
 18708                           pclath	equ	0xFFA
 18709                           tblptru	equ	0xFF8
 18710                           tblptrh	equ	0xFF7
 18711                           tblptrl	equ	0xFF6
 18712                           tablat	equ	0xFF5
 18713                           prodh	equ	0xFF4
 18714                           prodl	equ	0xFF3
 18715                           intcon	equ	0xFF2
 18716                           postinc0	equ	0xFEE
 18717                           wreg	equ	0xFE8
 18718                           indf1	equ	0xFE7
 18719                           fsr1h	equ	0xFE2
 18720                           fsr1l	equ	0xFE1
 18721                           indf2	equ	0xFDF
 18722                           postinc2	equ	0xFDE
 18723                           postdec2	equ	0xFDD
 18724                           plusw2	equ	0xFDB
 18725                           fsr2h	equ	0xFDA
 18726                           fsr2l	equ	0xFD9
 18727                           status	equ	0xFD8
 18728                           
 18729 ;; *************** function _USART_mySetLineCodingHandler *****************
 18730 ;; Defined at:
 18731 ;;		line 236 in file "../Includes/Board/USBapp.c"
 18732 ;; Parameters:    Size  Location     Type
 18733 ;;		None
 18734 ;; Auto vars:     Size  Location     Type
 18735 ;;  dwBaud          4   13[COMRAM] unsigned long 
 18736 ;; Return value:  Size  Location     Type
 18737 ;;                  1    wreg      void 
 18738 ;; Registers used:
 18739 ;;		wreg, status,2, status,0, cstack
 18740 ;; Tracked objects:
 18741 ;;		On entry : F/0
 18742 ;;		On exit  : F/0
 18743 ;;		Unchanged: F/0
 18744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18745 ;;      Params:         0       0       0       0       0       0       0       0       0
 18746 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18747 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18748 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18749 ;;Total ram usage:        4 bytes
 18750 ;; Hardware stack levels used:    1
 18751 ;; Hardware stack levels required when called:    1
 18752 ;; This function calls:
 18753 ;;		___lldiv
 18754 ;;		i2_EUSART_Initialize
 18755 ;; This function is called by:
 18756 ;;		_USBCheckCDCRequest
 18757 ;;		_USBCtrlTrfRxService
 18758 ;;		_USBCtrlTrfInHandler
 18759 ;; This function uses a non-reentrant model
 18760 ;;
 18761                           
 18762                           	psect	text104
 18763  00533C                     __ptext104:
 18764                           	opt stack 0
 18765  00533C                     _USART_mySetLineCodingHandler:
 18766                           	opt stack 14
 18767                           
 18768                           ; BSR set to: 0
 18769                           ;USBapp.c: 239: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 18770                           
 18771                           ; BSR set to: 0
 18772                           ;incstack = 0
 18773  00533C  C0B3  F0C5         	movff	_cdc_notice,_line_coding
 18774  005340  C0B4  F0C6         	movff	_cdc_notice+1,_line_coding+1
 18775  005344  C0B5  F0C7         	movff	_cdc_notice+2,_line_coding+2
 18776  005348  C0B6  F0C8         	movff	_cdc_notice+3,_line_coding+3
 18777                           
 18778                           ; BSR set to: 0
 18779                           ;USBapp.c: 241: uint32_t dwBaud;
 18780                           ;USBapp.c: 242: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 18781  00534C  6A2E               	clrf	___lldiv@dividend,c
 18782  00534E  0E1B               	movlw	27
 18783  005350  6E2F               	movwf	___lldiv@dividend+1,c
 18784  005352  0EB7               	movlw	183
 18785  005354  6E30               	movwf	___lldiv@dividend+2,c
 18786  005356  6A31               	clrf	___lldiv@dividend+3,c
 18787  005358  C0C5  F032         	movff	_line_coding,___lldiv@divisor
 18788  00535C  C0C6  F033         	movff	_line_coding+1,___lldiv@divisor+1
 18789  005360  C0C7  F034         	movff	_line_coding+2,___lldiv@divisor+2
 18790  005364  C0C8  F035         	movff	_line_coding+3,___lldiv@divisor+3
 18791  005368  EC51  F02B         	call	___lldiv	;wreg free
 18792  00536C  0EFF               	movlw	255
 18793  00536E  242E               	addwf	?___lldiv,w,c
 18794  005370  6E3B               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 18795  005372  0EFF               	movlw	255
 18796  005374  202F               	addwfc	?___lldiv+1,w,c
 18797  005376  6E3C               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 18798  005378  0EFF               	movlw	255
 18799  00537A  2030               	addwfc	?___lldiv+2,w,c
 18800  00537C  6E3D               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 18801  00537E  0EFF               	movlw	255
 18802  005380  2031               	addwfc	?___lldiv+3,w,c
 18803  005382  6E3E               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 18804                           
 18805                           ; BSR set to: 0
 18806                           ;USBapp.c: 243: SPBRG = (uint8_t) dwBaud;
 18807  005384  C03B  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 18808                           
 18809                           ; BSR set to: 0
 18810                           ;USBapp.c: 244: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 18811  005388  C03C  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 18812                           
 18813                           ; BSR set to: 0
 18814                           ;USBapp.c: 246: EUSART_Initialize();
 18815  00538C  EFED  F026         	goto	i2_EUSART_Initialize	;wreg free
 18816  005390                     __end_of_USART_mySetLineCodingHandler:
 18817                           	opt stack 0
 18818                           tosu	equ	0xFFF
 18819                           tosh	equ	0xFFE
 18820                           tosl	equ	0xFFD
 18821                           pclatu	equ	0xFFB
 18822                           pclath	equ	0xFFA
 18823                           tblptru	equ	0xFF8
 18824                           tblptrh	equ	0xFF7
 18825                           tblptrl	equ	0xFF6
 18826                           tablat	equ	0xFF5
 18827                           prodh	equ	0xFF4
 18828                           prodl	equ	0xFF3
 18829                           intcon	equ	0xFF2
 18830                           postinc0	equ	0xFEE
 18831                           wreg	equ	0xFE8
 18832                           indf1	equ	0xFE7
 18833                           fsr1h	equ	0xFE2
 18834                           fsr1l	equ	0xFE1
 18835                           indf2	equ	0xFDF
 18836                           postinc2	equ	0xFDE
 18837                           postdec2	equ	0xFDD
 18838                           plusw2	equ	0xFDB
 18839                           fsr2h	equ	0xFDA
 18840                           fsr2l	equ	0xFD9
 18841                           status	equ	0xFD8
 18842                           
 18843 ;; *************** function i2_EUSART_Initialize *****************
 18844 ;; Defined at:
 18845 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 18846 ;; Parameters:    Size  Location     Type
 18847 ;;		None
 18848 ;; Auto vars:     Size  Location     Type
 18849 ;;		None
 18850 ;; Return value:  Size  Location     Type
 18851 ;;                  1    wreg      void 
 18852 ;; Registers used:
 18853 ;;		wreg, status,2
 18854 ;; Tracked objects:
 18855 ;;		On entry : F/0
 18856 ;;		On exit  : F/0
 18857 ;;		Unchanged: F/0
 18858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18859 ;;      Params:         0       0       0       0       0       0       0       0       0
 18860 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18861 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18862 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18863 ;;Total ram usage:        0 bytes
 18864 ;; Hardware stack levels used:    1
 18865 ;; This function calls:
 18866 ;;		Nothing
 18867 ;; This function is called by:
 18868 ;;		_USBapp_CdcEmulatorInitialize
 18869 ;;		_USART_mySetLineCodingHandler
 18870 ;; This function uses a non-reentrant model
 18871 ;;
 18872                           
 18873                           	psect	text105
 18874  004DDA                     __ptext105:
 18875                           	opt stack 0
 18876  004DDA                     i2_EUSART_Initialize:
 18877                           	opt stack 16
 18878                           
 18879                           ; BSR set to: 0
 18880                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 18881                           
 18882                           ; BSR set to: 0
 18883                           ;incstack = 0
 18884  004DDA  9A9D               	bcf	3997,5,c	;volatile
 18885                           
 18886                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 18887  004DDC  989D               	bcf	3997,4,c	;volatile
 18888                           
 18889                           ; BSR set to: 0
 18890                           ;eusart.c: 85: BAUDCON = 0x48;
 18891  004DDE  0E48               	movlw	72
 18892  004DE0  6EB8               	movwf	4024,c	;volatile
 18893                           
 18894                           ;eusart.c: 88: RCSTA = 0x90;
 18895  004DE2  0E90               	movlw	144
 18896  004DE4  6EAB               	movwf	4011,c	;volatile
 18897                           
 18898                           ;eusart.c: 91: TXSTA = 0x26;
 18899  004DE6  0E26               	movlw	38
 18900  004DE8  6EAC               	movwf	4012,c	;volatile
 18901                           
 18902                           ;eusart.c: 95: SPBRG = 0x71;
 18903  004DEA  0E71               	movlw	113
 18904  004DEC  6EAF               	movwf	4015,c	;volatile
 18905                           
 18906                           ;eusart.c: 100: SPBRGH = 0x02;
 18907  004DEE  0E02               	movlw	2
 18908  004DF0  6EB0               	movwf	4016,c	;volatile
 18909                           
 18910                           ; BSR set to: 0
 18911                           ;eusart.c: 103: eusartTxHead = 0;
 18912  004DF2  6A27               	clrf	_eusartTxHead,c
 18913                           
 18914                           ; BSR set to: 0
 18915                           ;eusart.c: 104: eusartTxTail = 0;
 18916  004DF4  6A28               	clrf	_eusartTxTail,c
 18917                           
 18918                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 18919  004DF6  0E40               	movlw	64
 18920  004DF8  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 18921                           
 18922                           ; BSR set to: 0
 18923                           ;eusart.c: 107: eusartRxHead = 0;
 18924  004DFA  6A24               	clrf	_eusartRxHead,c
 18925                           
 18926                           ; BSR set to: 0
 18927                           ;eusart.c: 108: eusartRxTail = 0;
 18928  004DFC  6A25               	clrf	_eusartRxTail,c
 18929                           
 18930                           ; BSR set to: 0
 18931                           ;eusart.c: 109: eusartRxCount = 0;
 18932  004DFE  6A23               	clrf	_eusartRxCount,c	;volatile
 18933                           
 18934                           ; BSR set to: 0
 18935                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 18936  004E00  8A9D               	bsf	3997,5,c	;volatile
 18937                           
 18938                           ; BSR set to: 0
 18939                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 18940  004E02  88AB               	bsf	4011,4,c	;volatile
 18941                           
 18942                           ; BSR set to: 0
 18943  004E04  0012               	return		;funcret
 18944  004E06                     __end_ofi2_EUSART_Initialize:
 18945                           	opt stack 0
 18946                           tosu	equ	0xFFF
 18947                           tosh	equ	0xFFE
 18948                           tosl	equ	0xFFD
 18949                           pclatu	equ	0xFFB
 18950                           pclath	equ	0xFFA
 18951                           tblptru	equ	0xFF8
 18952                           tblptrh	equ	0xFF7
 18953                           tblptrl	equ	0xFF6
 18954                           tablat	equ	0xFF5
 18955                           prodh	equ	0xFF4
 18956                           prodl	equ	0xFF3
 18957                           intcon	equ	0xFF2
 18958                           postinc0	equ	0xFEE
 18959                           wreg	equ	0xFE8
 18960                           indf1	equ	0xFE7
 18961                           fsr1h	equ	0xFE2
 18962                           fsr1l	equ	0xFE1
 18963                           indf2	equ	0xFDF
 18964                           postinc2	equ	0xFDE
 18965                           postdec2	equ	0xFDD
 18966                           plusw2	equ	0xFDB
 18967                           fsr2h	equ	0xFDA
 18968                           fsr2l	equ	0xFD9
 18969                           status	equ	0xFD8
 18970                           
 18971 ;; *************** function ___lldiv *****************
 18972 ;; Defined at:
 18973 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lldiv.c"
 18974 ;; Parameters:    Size  Location     Type
 18975 ;;  dividend        4    0[COMRAM] unsigned long 
 18976 ;;  divisor         4    4[COMRAM] unsigned long 
 18977 ;; Auto vars:     Size  Location     Type
 18978 ;;  quotient        4    8[COMRAM] unsigned long 
 18979 ;;  counter         1   12[COMRAM] unsigned char 
 18980 ;; Return value:  Size  Location     Type
 18981 ;;                  4    0[COMRAM] unsigned long 
 18982 ;; Registers used:
 18983 ;;		wreg, status,2, status,0
 18984 ;; Tracked objects:
 18985 ;;		On entry : F/0
 18986 ;;		On exit  : F/0
 18987 ;;		Unchanged: F/0
 18988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18989 ;;      Params:         8       0       0       0       0       0       0       0       0
 18990 ;;      Locals:         5       0       0       0       0       0       0       0       0
 18991 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18992 ;;      Totals:        13       0       0       0       0       0       0       0       0
 18993 ;;Total ram usage:       13 bytes
 18994 ;; Hardware stack levels used:    1
 18995 ;; This function calls:
 18996 ;;		Nothing
 18997 ;; This function is called by:
 18998 ;;		_USART_mySetLineCodingHandler
 18999 ;; This function uses a non-reentrant model
 19000 ;;
 19001                           
 19002                           	psect	text106
 19003  0056A2                     __ptext106:
 19004                           	opt stack 0
 19005  0056A2                     ___lldiv:
 19006                           	opt stack 14
 19007                           
 19008                           ; BSR set to: 0
 19009                           
 19010                           ; BSR set to: 0
 19011                           ;incstack = 0
 19012  0056A2  6A36               	clrf	___lldiv@quotient,c
 19013  0056A4  6A37               	clrf	___lldiv@quotient+1,c
 19014  0056A6  6A38               	clrf	___lldiv@quotient+2,c
 19015  0056A8  6A39               	clrf	___lldiv@quotient+3,c
 19016                           
 19017                           ; BSR set to: 0
 19018  0056AA  5032               	movf	___lldiv@divisor,w,c
 19019  0056AC  1033               	iorwf	___lldiv@divisor+1,w,c
 19020  0056AE  1034               	iorwf	___lldiv@divisor+2,w,c
 19021  0056B0  1035               	iorwf	___lldiv@divisor+3,w,c
 19022  0056B2  E029               	bz	i2l2158
 19023                           
 19024                           ; BSR set to: 0
 19025  0056B4  0E01               	movlw	1
 19026  0056B6  6E3A               	movwf	___lldiv@counter,c
 19027  0056B8  D006               	goto	i2l5509
 19028  0056BA                     i2l5507:
 19029                           
 19030                           ; BSR set to: 0
 19031  0056BA  90D8               	bcf	status,0,c
 19032  0056BC  3632               	rlcf	___lldiv@divisor,f,c
 19033  0056BE  3633               	rlcf	___lldiv@divisor+1,f,c
 19034  0056C0  3634               	rlcf	___lldiv@divisor+2,f,c
 19035  0056C2  3635               	rlcf	___lldiv@divisor+3,f,c
 19036  0056C4  2A3A               	incf	___lldiv@counter,f,c
 19037  0056C6                     i2l5509:
 19038                           
 19039                           ; BSR set to: 0
 19040  0056C6  AE35               	btfss	___lldiv@divisor+3,7,c
 19041  0056C8  D7F8               	goto	i2l5507
 19042  0056CA                     i2l5511:
 19043                           
 19044                           ; BSR set to: 0
 19045  0056CA  90D8               	bcf	status,0,c
 19046  0056CC  3636               	rlcf	___lldiv@quotient,f,c
 19047  0056CE  3637               	rlcf	___lldiv@quotient+1,f,c
 19048  0056D0  3638               	rlcf	___lldiv@quotient+2,f,c
 19049  0056D2  3639               	rlcf	___lldiv@quotient+3,f,c
 19050                           
 19051                           ; BSR set to: 0
 19052  0056D4  5032               	movf	___lldiv@divisor,w,c
 19053  0056D6  5C2E               	subwf	___lldiv@dividend,w,c
 19054  0056D8  5033               	movf	___lldiv@divisor+1,w,c
 19055  0056DA  582F               	subwfb	___lldiv@dividend+1,w,c
 19056  0056DC  5034               	movf	___lldiv@divisor+2,w,c
 19057  0056DE  5830               	subwfb	___lldiv@dividend+2,w,c
 19058  0056E0  5035               	movf	___lldiv@divisor+3,w,c
 19059  0056E2  5831               	subwfb	___lldiv@dividend+3,w,c
 19060  0056E4  E309               	bnc	i2l5519
 19061                           
 19062                           ; BSR set to: 0
 19063  0056E6  5032               	movf	___lldiv@divisor,w,c
 19064  0056E8  5E2E               	subwf	___lldiv@dividend,f,c
 19065  0056EA  5033               	movf	___lldiv@divisor+1,w,c
 19066  0056EC  5A2F               	subwfb	___lldiv@dividend+1,f,c
 19067  0056EE  5034               	movf	___lldiv@divisor+2,w,c
 19068  0056F0  5A30               	subwfb	___lldiv@dividend+2,f,c
 19069  0056F2  5035               	movf	___lldiv@divisor+3,w,c
 19070  0056F4  5A31               	subwfb	___lldiv@dividend+3,f,c
 19071                           
 19072                           ; BSR set to: 0
 19073  0056F6  8036               	bsf	___lldiv@quotient,0,c
 19074  0056F8                     i2l5519:
 19075                           
 19076                           ; BSR set to: 0
 19077  0056F8  90D8               	bcf	status,0,c
 19078  0056FA  3235               	rrcf	___lldiv@divisor+3,f,c
 19079  0056FC  3234               	rrcf	___lldiv@divisor+2,f,c
 19080  0056FE  3233               	rrcf	___lldiv@divisor+1,f,c
 19081  005700  3232               	rrcf	___lldiv@divisor,f,c
 19082                           
 19083                           ; BSR set to: 0
 19084  005702  2E3A               	decfsz	___lldiv@counter,f,c
 19085  005704  D7E2               	goto	i2l5511
 19086  005706                     i2l2158:
 19087                           
 19088                           ; BSR set to: 0
 19089  005706  C036  F02E         	movff	___lldiv@quotient,?___lldiv
 19090  00570A  C037  F02F         	movff	___lldiv@quotient+1,?___lldiv+1
 19091  00570E  C038  F030         	movff	___lldiv@quotient+2,?___lldiv+2
 19092  005712  C039  F031         	movff	___lldiv@quotient+3,?___lldiv+3
 19093                           
 19094                           ; BSR set to: 0
 19095  005716  0012               	return		;funcret
 19096  005718                     __end_of___lldiv:
 19097                           	opt stack 0
 19098                           tosu	equ	0xFFF
 19099                           tosh	equ	0xFFE
 19100                           tosl	equ	0xFFD
 19101                           pclatu	equ	0xFFB
 19102                           pclath	equ	0xFFA
 19103                           tblptru	equ	0xFF8
 19104                           tblptrh	equ	0xFF7
 19105                           tblptrl	equ	0xFF6
 19106                           tablat	equ	0xFF5
 19107                           prodh	equ	0xFF4
 19108                           prodl	equ	0xFF3
 19109                           intcon	equ	0xFF2
 19110                           postinc0	equ	0xFEE
 19111                           wreg	equ	0xFE8
 19112                           indf1	equ	0xFE7
 19113                           fsr1h	equ	0xFE2
 19114                           fsr1l	equ	0xFE1
 19115                           indf2	equ	0xFDF
 19116                           postinc2	equ	0xFDE
 19117                           postdec2	equ	0xFDD
 19118                           plusw2	equ	0xFDB
 19119                           fsr2h	equ	0xFDA
 19120                           fsr2l	equ	0xFD9
 19121                           status	equ	0xFD8
 19122                           
 19123 ;; *************** function _TMRapp_Tick *****************
 19124 ;; Defined at:
 19125 ;;		line 10 in file "../Includes/Drivers/TMRapp.c"
 19126 ;; Parameters:    Size  Location     Type
 19127 ;;		None
 19128 ;; Auto vars:     Size  Location     Type
 19129 ;;		None
 19130 ;; Return value:  Size  Location     Type
 19131 ;;                  1    wreg      void 
 19132 ;; Registers used:
 19133 ;;		None
 19134 ;; Tracked objects:
 19135 ;;		On entry : 0/0
 19136 ;;		On exit  : F/0
 19137 ;;		Unchanged: 0/0
 19138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19139 ;;      Params:         0       0       0       0       0       0       0       0       0
 19140 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19141 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19142 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19143 ;;Total ram usage:        0 bytes
 19144 ;; Hardware stack levels used:    1
 19145 ;; This function calls:
 19146 ;;		Nothing
 19147 ;; This function is called by:
 19148 ;;		_INTERRUPT_InterruptManager
 19149 ;; This function uses a non-reentrant model
 19150 ;;
 19151                           
 19152                           	psect	text107
 19153  004A38                     __ptext107:
 19154                           	opt stack 0
 19155  004A38                     _TMRapp_Tick:
 19156                           	opt stack 19
 19157                           
 19158                           ;TMRapp.c: 13: appTimer.mSecTick = 1;
 19159                           
 19160                           ; BSR set to: 0
 19161                           ;incstack = 0
 19162  004A38  0100               	movlb	0	; () banked
 19163  004A3A  819B               	bsf	_appTimer& (0+255),0,b
 19164                           
 19165                           ; BSR set to: 0
 19166  004A3C  0012               	return		;funcret
 19167  004A3E                     __end_of_TMRapp_Tick:
 19168                           	opt stack 0
 19169                           tosu	equ	0xFFF
 19170                           tosh	equ	0xFFE
 19171                           tosl	equ	0xFFD
 19172                           pclatu	equ	0xFFB
 19173                           pclath	equ	0xFFA
 19174                           tblptru	equ	0xFF8
 19175                           tblptrh	equ	0xFF7
 19176                           tblptrl	equ	0xFF6
 19177                           tablat	equ	0xFF5
 19178                           prodh	equ	0xFF4
 19179                           prodl	equ	0xFF3
 19180                           intcon	equ	0xFF2
 19181                           postinc0	equ	0xFEE
 19182                           wreg	equ	0xFE8
 19183                           indf1	equ	0xFE7
 19184                           fsr1h	equ	0xFE2
 19185                           fsr1l	equ	0xFE1
 19186                           indf2	equ	0xFDF
 19187                           postinc2	equ	0xFDE
 19188                           postdec2	equ	0xFDD
 19189                           plusw2	equ	0xFDB
 19190                           fsr2h	equ	0xFDA
 19191                           fsr2l	equ	0xFD9
 19192                           status	equ	0xFD8
 19193                           
 19194 ;; *************** function _TMR1_ISR *****************
 19195 ;; Defined at:
 19196 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 19197 ;; Parameters:    Size  Location     Type
 19198 ;;		None
 19199 ;; Auto vars:     Size  Location     Type
 19200 ;;		None
 19201 ;; Return value:  Size  Location     Type
 19202 ;;                  1    wreg      void 
 19203 ;; Registers used:
 19204 ;;		None
 19205 ;; Tracked objects:
 19206 ;;		On entry : 0/0
 19207 ;;		On exit  : 0/0
 19208 ;;		Unchanged: 0/0
 19209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19210 ;;      Params:         0       0       0       0       0       0       0       0       0
 19211 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19212 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19213 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19214 ;;Total ram usage:        0 bytes
 19215 ;; Hardware stack levels used:    1
 19216 ;; This function calls:
 19217 ;;		Nothing
 19218 ;; This function is called by:
 19219 ;;		_INTERRUPT_InterruptManager
 19220 ;; This function uses a non-reentrant model
 19221 ;;
 19222                           
 19223                           	psect	text108
 19224  004A5C                     __ptext108:
 19225                           	opt stack 0
 19226  004A5C                     _TMR1_ISR:
 19227                           	opt stack 19
 19228                           
 19229                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 19230                           
 19231                           ; BSR set to: 0
 19232                           ;incstack = 0
 19233  004A5C  909E               	bcf	3998,0,c	;volatile
 19234                           
 19235                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 19236  004A5E  C08C  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 19237                           
 19238                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 19239  004A62  C08B  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 19240  004A66  0012               	return		;funcret
 19241  004A68                     __end_of_TMR1_ISR:
 19242                           	opt stack 0
 19243                           tosu	equ	0xFFF
 19244                           tosh	equ	0xFFE
 19245                           tosl	equ	0xFFD
 19246                           pclatu	equ	0xFFB
 19247                           pclath	equ	0xFFA
 19248                           tblptru	equ	0xFF8
 19249                           tblptrh	equ	0xFF7
 19250                           tblptrl	equ	0xFF6
 19251                           tablat	equ	0xFF5
 19252                           prodh	equ	0xFF4
 19253                           prodl	equ	0xFF3
 19254                           intcon	equ	0xFF2
 19255                           postinc0	equ	0xFEE
 19256                           wreg	equ	0xFE8
 19257                           indf1	equ	0xFE7
 19258                           fsr1h	equ	0xFE2
 19259                           fsr1l	equ	0xFE1
 19260                           indf2	equ	0xFDF
 19261                           postinc2	equ	0xFDE
 19262                           postdec2	equ	0xFDD
 19263                           plusw2	equ	0xFDB
 19264                           fsr2h	equ	0xFDA
 19265                           fsr2l	equ	0xFD9
 19266                           status	equ	0xFD8
 19267                           
 19268 ;; *************** function _EUSART_Transmit_ISR *****************
 19269 ;; Defined at:
 19270 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 19271 ;; Parameters:    Size  Location     Type
 19272 ;;		None
 19273 ;; Auto vars:     Size  Location     Type
 19274 ;;		None
 19275 ;; Return value:  Size  Location     Type
 19276 ;;                  1    wreg      void 
 19277 ;; Registers used:
 19278 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19279 ;; Tracked objects:
 19280 ;;		On entry : 0/0
 19281 ;;		On exit  : 0/0
 19282 ;;		Unchanged: 0/0
 19283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19284 ;;      Params:         0       0       0       0       0       0       0       0       0
 19285 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19286 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19287 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19288 ;;Total ram usage:        0 bytes
 19289 ;; Hardware stack levels used:    1
 19290 ;; This function calls:
 19291 ;;		Nothing
 19292 ;; This function is called by:
 19293 ;;		_INTERRUPT_InterruptManager
 19294 ;; This function uses a non-reentrant model
 19295 ;;
 19296                           
 19297                           	psect	text109
 19298  004CE4                     __ptext109:
 19299                           	opt stack 0
 19300  004CE4                     _EUSART_Transmit_ISR:
 19301                           	opt stack 19
 19302                           
 19303                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 19304                           
 19305                           ;incstack = 0
 19306  004CE4  0E40               	movlw	64
 19307  004CE6  6026               	cpfslt	_eusartTxBufferRemaining,c
 19308  004CE8  D00F               	goto	i2l923
 19309                           
 19310                           ;eusart.c: 167: {
 19311                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 19312  004CEA  0E00               	movlw	low _eusartTxBuffer
 19313  004CEC  2428               	addwf	_eusartTxTail,w,c
 19314  004CEE  6ED9               	movwf	fsr2l,c
 19315  004CF0  6ADA               	clrf	fsr2h,c
 19316  004CF2  0E02               	movlw	high _eusartTxBuffer
 19317  004CF4  22DA               	addwfc	fsr2h,f,c
 19318  004CF6  50DF               	movf	indf2,w,c
 19319  004CF8  6EAD               	movwf	4013,c	;volatile
 19320  004CFA  2A28               	incf	_eusartTxTail,f,c
 19321                           
 19322                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 19323  004CFC  0E3F               	movlw	63
 19324  004CFE  6428               	cpfsgt	_eusartTxTail,c
 19325  004D00  D001               	goto	i2l7671
 19326                           
 19327                           ;eusart.c: 170: {
 19328                           ;eusart.c: 171: eusartTxTail = 0;
 19329  004D02  6A28               	clrf	_eusartTxTail,c
 19330  004D04                     i2l7671:
 19331                           
 19332                           ;eusart.c: 172: }
 19333                           ;eusart.c: 173: eusartTxBufferRemaining++;
 19334  004D04  2A26               	incf	_eusartTxBufferRemaining,f,c	;volatile
 19335                           
 19336                           ;eusart.c: 174: }
 19337  004D06  0012               	return	
 19338  004D08                     i2l923:
 19339                           
 19340                           ;eusart.c: 175: else
 19341                           ;eusart.c: 176: {
 19342                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 19343  004D08  989D               	bcf	3997,4,c	;volatile
 19344  004D0A  0012               	return		;funcret
 19345  004D0C                     __end_of_EUSART_Transmit_ISR:
 19346                           	opt stack 0
 19347                           tosu	equ	0xFFF
 19348                           tosh	equ	0xFFE
 19349                           tosl	equ	0xFFD
 19350                           pclatu	equ	0xFFB
 19351                           pclath	equ	0xFFA
 19352                           tblptru	equ	0xFF8
 19353                           tblptrh	equ	0xFF7
 19354                           tblptrl	equ	0xFF6
 19355                           tablat	equ	0xFF5
 19356                           prodh	equ	0xFF4
 19357                           prodl	equ	0xFF3
 19358                           intcon	equ	0xFF2
 19359                           postinc0	equ	0xFEE
 19360                           wreg	equ	0xFE8
 19361                           indf1	equ	0xFE7
 19362                           fsr1h	equ	0xFE2
 19363                           fsr1l	equ	0xFE1
 19364                           indf2	equ	0xFDF
 19365                           postinc2	equ	0xFDE
 19366                           postdec2	equ	0xFDD
 19367                           plusw2	equ	0xFDB
 19368                           fsr2h	equ	0xFDA
 19369                           fsr2l	equ	0xFD9
 19370                           status	equ	0xFD8
 19371                           
 19372 ;; *************** function _EUSART_Receive_ISR *****************
 19373 ;; Defined at:
 19374 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 19375 ;; Parameters:    Size  Location     Type
 19376 ;;		None
 19377 ;; Auto vars:     Size  Location     Type
 19378 ;;		None
 19379 ;; Return value:  Size  Location     Type
 19380 ;;                  1    wreg      void 
 19381 ;; Registers used:
 19382 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19383 ;; Tracked objects:
 19384 ;;		On entry : 0/0
 19385 ;;		On exit  : 0/0
 19386 ;;		Unchanged: 0/0
 19387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19388 ;;      Params:         0       0       0       0       0       0       0       0       0
 19389 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19390 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19391 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19392 ;;Total ram usage:        0 bytes
 19393 ;; Hardware stack levels used:    1
 19394 ;; This function calls:
 19395 ;;		Nothing
 19396 ;; This function is called by:
 19397 ;;		_INTERRUPT_InterruptManager
 19398 ;; This function uses a non-reentrant model
 19399 ;;
 19400                           
 19401                           	psect	text110
 19402  004CBC                     __ptext110:
 19403                           	opt stack 0
 19404  004CBC                     _EUSART_Receive_ISR:
 19405                           	opt stack 19
 19406                           
 19407                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 19408                           
 19409                           ;incstack = 0
 19410  004CBC  A2AB               	btfss	4011,1,c	;volatile
 19411  004CBE  D003               	goto	i2l7677
 19412                           
 19413                           ;eusart.c: 184: {
 19414                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 19415  004CC0  98AB               	bcf	4011,4,c	;volatile
 19416                           
 19417                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 19418  004CC2  88AB               	bsf	4011,4,c	;volatile
 19419                           
 19420                           ;eusart.c: 189: }
 19421  004CC4  0012               	return	
 19422  004CC6                     i2l7677:
 19423                           
 19424                           ;eusart.c: 190: else
 19425                           ;eusart.c: 191: {
 19426                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 19427  004CC6  0E00               	movlw	low _eusartRxBuffer
 19428  004CC8  2424               	addwf	_eusartRxHead,w,c
 19429  004CCA  6ED9               	movwf	fsr2l,c
 19430  004CCC  6ADA               	clrf	fsr2h,c
 19431  004CCE  0E01               	movlw	high _eusartRxBuffer
 19432  004CD0  22DA               	addwfc	fsr2h,f,c
 19433  004CD2  CFAE FFDF          	movff	4014,indf2	;volatile
 19434  004CD6  2A24               	incf	_eusartRxHead,f,c
 19435                           
 19436                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 19437  004CD8  0E3F               	movlw	63
 19438  004CDA  6424               	cpfsgt	_eusartRxHead,c
 19439  004CDC  D001               	goto	i2l7685
 19440                           
 19441                           ;eusart.c: 195: {
 19442                           ;eusart.c: 196: eusartRxHead = 0;
 19443  004CDE  6A24               	clrf	_eusartRxHead,c
 19444  004CE0                     i2l7685:
 19445                           
 19446                           ;eusart.c: 197: }
 19447                           ;eusart.c: 198: eusartRxCount++;
 19448  004CE0  2A23               	incf	_eusartRxCount,f,c	;volatile
 19449  004CE2  0012               	return		;funcret
 19450  004CE4                     __end_of_EUSART_Receive_ISR:
 19451                           	opt stack 0
 19452                           tosu	equ	0xFFF
 19453                           tosh	equ	0xFFE
 19454                           tosl	equ	0xFFD
 19455                           pclatu	equ	0xFFB
 19456                           pclath	equ	0xFFA
 19457                           tblptru	equ	0xFF8
 19458                           tblptrh	equ	0xFF7
 19459                           tblptrl	equ	0xFF6
 19460                           tablat	equ	0xFF5
 19461                           prodh	equ	0xFF4
 19462                           prodl	equ	0xFF3
 19463                           intcon	equ	0xFF2
 19464                           postinc0	equ	0xFEE
 19465                           wreg	equ	0xFE8
 19466                           indf1	equ	0xFE7
 19467                           fsr1h	equ	0xFE2
 19468                           fsr1l	equ	0xFE1
 19469                           indf2	equ	0xFDF
 19470                           postinc2	equ	0xFDE
 19471                           postdec2	equ	0xFDD
 19472                           plusw2	equ	0xFDB
 19473                           fsr2h	equ	0xFDA
 19474                           fsr2l	equ	0xFD9
 19475                           status	equ	0xFD8
 19476                           
 19477 ;; *************** function _CMP1_ISR *****************
 19478 ;; Defined at:
 19479 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 19480 ;; Parameters:    Size  Location     Type
 19481 ;;		None
 19482 ;; Auto vars:     Size  Location     Type
 19483 ;;		None
 19484 ;; Return value:  Size  Location     Type
 19485 ;;                  1    wreg      void 
 19486 ;; Registers used:
 19487 ;;		None
 19488 ;; Tracked objects:
 19489 ;;		On entry : 0/0
 19490 ;;		On exit  : 0/0
 19491 ;;		Unchanged: 0/0
 19492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19493 ;;      Params:         0       0       0       0       0       0       0       0       0
 19494 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19495 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19496 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19497 ;;Total ram usage:        0 bytes
 19498 ;; Hardware stack levels used:    1
 19499 ;; This function calls:
 19500 ;;		Nothing
 19501 ;; This function is called by:
 19502 ;;		_INTERRUPT_InterruptManager
 19503 ;; This function uses a non-reentrant model
 19504 ;;
 19505                           
 19506                           	psect	text111
 19507  004A24                     __ptext111:
 19508                           	opt stack 0
 19509  004A24                     _CMP1_ISR:
 19510                           	opt stack 19
 19511                           
 19512                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 19513                           
 19514                           ;incstack = 0
 19515  004A24  9CA1               	bcf	4001,6,c	;volatile
 19516  004A26  0012               	return		;funcret
 19517  004A28                     __end_of_CMP1_ISR:
 19518                           	opt stack 0
 19519                           tosu	equ	0xFFF
 19520                           tosh	equ	0xFFE
 19521                           tosl	equ	0xFFD
 19522                           pclatu	equ	0xFFB
 19523                           pclath	equ	0xFFA
 19524                           tblptru	equ	0xFF8
 19525                           tblptrh	equ	0xFF7
 19526                           tblptrl	equ	0xFF6
 19527                           tablat	equ	0xFF5
 19528                           prodh	equ	0xFF4
 19529                           prodl	equ	0xFF3
 19530                           intcon	equ	0xFF2
 19531                           postinc0	equ	0xFEE
 19532                           wreg	equ	0xFE8
 19533                           indf1	equ	0xFE7
 19534                           fsr1h	equ	0xFE2
 19535                           fsr1l	equ	0xFE1
 19536                           indf2	equ	0xFDF
 19537                           postinc2	equ	0xFDE
 19538                           postdec2	equ	0xFDD
 19539                           plusw2	equ	0xFDB
 19540                           fsr2h	equ	0xFDA
 19541                           fsr2l	equ	0xFD9
 19542                           status	equ	0xFD8
 19543                           tosu	equ	0xFFF
 19544                           tosh	equ	0xFFE
 19545                           tosl	equ	0xFFD
 19546                           pclatu	equ	0xFFB
 19547                           pclath	equ	0xFFA
 19548                           tblptru	equ	0xFF8
 19549                           tblptrh	equ	0xFF7
 19550                           tblptrl	equ	0xFF6
 19551                           tablat	equ	0xFF5
 19552                           prodh	equ	0xFF4
 19553                           prodl	equ	0xFF3
 19554                           intcon	equ	0xFF2
 19555                           postinc0	equ	0xFEE
 19556                           wreg	equ	0xFE8
 19557                           indf1	equ	0xFE7
 19558                           fsr1h	equ	0xFE2
 19559                           fsr1l	equ	0xFE1
 19560                           indf2	equ	0xFDF
 19561                           postinc2	equ	0xFDE
 19562                           postdec2	equ	0xFDD
 19563                           plusw2	equ	0xFDB
 19564                           fsr2h	equ	0xFDA
 19565                           fsr2l	equ	0xFD9
 19566                           status	equ	0xFD8
 19567                           
 19568                           	psect	text112
 19569  000000                     __ptext112:
 19570                           	opt stack 0
 19571                           tosu	equ	0xFFF
 19572                           tosh	equ	0xFFE
 19573                           tosl	equ	0xFFD
 19574                           pclatu	equ	0xFFB
 19575                           pclath	equ	0xFFA
 19576                           tblptru	equ	0xFF8
 19577                           tblptrh	equ	0xFF7
 19578                           tblptrl	equ	0xFF6
 19579                           tablat	equ	0xFF5
 19580                           prodh	equ	0xFF4
 19581                           prodl	equ	0xFF3
 19582                           intcon	equ	0xFF2
 19583                           postinc0	equ	0xFEE
 19584                           wreg	equ	0xFE8
 19585                           indf1	equ	0xFE7
 19586                           fsr1h	equ	0xFE2
 19587                           fsr1l	equ	0xFE1
 19588                           indf2	equ	0xFDF
 19589                           postinc2	equ	0xFDE
 19590                           postdec2	equ	0xFDD
 19591                           plusw2	equ	0xFDB
 19592                           fsr2h	equ	0xFDA
 19593                           fsr2l	equ	0xFD9
 19594                           status	equ	0xFD8
 19595                           
 19596                           	psect	rparam
 19597  0000                     tosu	equ	0xFFF
 19598                           tosh	equ	0xFFE
 19599                           tosl	equ	0xFFD
 19600                           pclatu	equ	0xFFB
 19601                           pclath	equ	0xFFA
 19602                           tblptru	equ	0xFF8
 19603                           tblptrh	equ	0xFF7
 19604                           tblptrl	equ	0xFF6
 19605                           tablat	equ	0xFF5
 19606                           prodh	equ	0xFF4
 19607                           prodl	equ	0xFF3
 19608                           intcon	equ	0xFF2
 19609                           postinc0	equ	0xFEE
 19610                           wreg	equ	0xFE8
 19611                           indf1	equ	0xFE7
 19612                           fsr1h	equ	0xFE2
 19613                           fsr1l	equ	0xFE1
 19614                           indf2	equ	0xFDF
 19615                           postinc2	equ	0xFDE
 19616                           postdec2	equ	0xFDD
 19617                           plusw2	equ	0xFDB
 19618                           fsr2h	equ	0xFDA
 19619                           fsr2l	equ	0xFD9
 19620                           status	equ	0xFD8
 19621                           
 19622                           	psect	temp
 19623  00005B                     btemp:
 19624                           	opt stack 0
 19625  00005B                     	ds	1
 19626  0000                     int$flags	set	btemp
 19627                           tosu	equ	0xFFF
 19628                           tosh	equ	0xFFE
 19629                           tosl	equ	0xFFD
 19630                           pclatu	equ	0xFFB
 19631                           pclath	equ	0xFFA
 19632                           tblptru	equ	0xFF8
 19633                           tblptrh	equ	0xFF7
 19634                           tblptrl	equ	0xFF6
 19635                           tablat	equ	0xFF5
 19636                           prodh	equ	0xFF4
 19637                           prodl	equ	0xFF3
 19638                           intcon	equ	0xFF2
 19639                           postinc0	equ	0xFEE
 19640                           wreg	equ	0xFE8
 19641                           indf1	equ	0xFE7
 19642                           fsr1h	equ	0xFE2
 19643                           fsr1l	equ	0xFE1
 19644                           indf2	equ	0xFDF
 19645                           postinc2	equ	0xFDE
 19646                           postdec2	equ	0xFDD
 19647                           plusw2	equ	0xFDB
 19648                           fsr2h	equ	0xFDA
 19649                           fsr2l	equ	0xFD9
 19650                           status	equ	0xFD8


Data Sizes:
    Strings     1040
    Constant    969
    Data        3
    BSS         427
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     39     152
    BANK1           256      9     217
    BANK2           256      0      64
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_35(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_72(CODE[12]), STR_71(CODE[3]), STR_68(CODE[3]), STR_65(CODE[3]), 
		 -> STR_62(CODE[3]), STR_59(CODE[3]), STR_56(CODE[3]), STR_53(CODE[3]), 
		 -> STR_50(CODE[3]), STR_47(CODE[3]), STR_44(CODE[3]), STR_41(CODE[3]), 
		 -> STR_38(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5137_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5137_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5137_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5137_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S3860$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S3850$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3850$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3826$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3826$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3826$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3826$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 17
		 -> oled_putUint16@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_100(CODE[12]), STR_99(CODE[8]), 
		 -> STR_98(CODE[9]), STR_80(CODE[2]), STR_79(CODE[16]), STR_78(CODE[13]), 
		 -> STR_77(CODE[12]), STR_76(CODE[17]), STR_75(CODE[9]), STR_74(CODE[1]), 
		 -> STR_70(CODE[10]), STR_67(CODE[7]), STR_64(CODE[9]), STR_61(CODE[8]), 
		 -> STR_58(CODE[7]), STR_55(CODE[8]), STR_52(CODE[10]), STR_49(CODE[9]), 
		 -> STR_46(CODE[10]), STR_43(CODE[7]), STR_40(CODE[8]), STR_37(CODE[8]), 
		 -> STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[8]), STR_29(CODE[8]), 
		 -> STR_28(CODE[17]), STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), 
		 -> STR_24(CODE[9]), STR_23(CODE[10]), STR_20(CODE[9]), STR_19(CODE[8]), 
		 -> STR_18(CODE[8]), STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[11]), 
		 -> STR_14(CODE[13]), STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[12]), 
		 -> STR_10(CODE[13]), STR_9(CODE[9]), STR_8(CODE[12]), STR_7(CODE[16]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[9]), STR_3(CODE[15]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendDataCommand@appData	PTR unsigned char  size(1) Largest target is 12
		 -> dataBuffer(BANK0[12]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_81(CODE[10]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_97(CODE[26]), STR_96(CODE[26]), STR_95(CODE[26]), STR_94(CODE[26]), 
		 -> STR_93(CODE[1]), STR_92(CODE[9]), STR_91(CODE[13]), STR_90(CODE[13]), 
		 -> STR_89(CODE[13]), STR_88(CODE[13]), STR_87(CODE[13]), STR_86(CODE[13]), 
		 -> STR_85(CODE[13]), STR_84(CODE[13]), STR_83(CODE[16]), STR_82(CODE[15]), 
		 -> STR_73(CODE[10]), STR_69(CODE[10]), STR_66(CODE[17]), STR_63(CODE[18]), 
		 -> STR_60(CODE[16]), STR_57(CODE[17]), STR_54(CODE[17]), STR_51(CODE[18]), 
		 -> STR_48(CODE[20]), STR_45(CODE[20]), STR_42(CODE[18]), STR_39(CODE[17]), 
		 -> STR_36(CODE[19]), STR_31(CODE[12]), STR_30(CODE[14]), STR_22(CODE[20]), 
		 -> STR_21(CODE[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_oled_putUint16
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _oled_putUint16->_oled_putString
    _moteApp_add8bToDataBuffer->___lbdiv
    _moteApp_add8bToDataBuffer->___lbmod
    _moteApp_add16bToDataBuffer->___lwdiv
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _modemSleep->_moteApp_delayms
    _modemResync->_moteApp_delayms
    _MOTEapp_getModemResponse->_EUSART_Read
    _ADC_TempConversion->___lwdiv
    _moteJoiningProcess->_oled_putString
    _cw_beep->_oled_putString
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _TMRapp_Handler->___lwmod
    _USBapp_Handler->_oled_putString
    _oled_putString->_oled_putChar
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _oled_writeData->_SPI_Exchange8bit
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _oled_writeCommand->_SPI_Exchange8bit
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  246248
                    _DATAEE_ReadByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                        _modemResync
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                         11    11      0  187761
                                             37 BANK0      2     2      0
                                              0 BANK1      9     9      0
                  _ADC_GetConversion
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
           _MOTEapp_getModemResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                    _moteApp_delayms
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  11     8      3   99415
                                             28 BANK0      9     6      3
                  _ADC_GetConversion
                 _ADC_TempConversion
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
                    _sendDataCommand
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      7     3      4    1012
                                              1 BANK0      7     3      4
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     158
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   19583
                                             18 BANK0      9     7      2
                            ___lbdiv
                            ___lbmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint16                                      10     6      4   24135
                                             18 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 3     3      0     297
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            2     1      1    1975
                                              4 BANK0      2     1      1
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     856
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     657
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           3     0      3    6535
                                              7 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   19393
                                             15 BANK0      1     1      0
                 _EUSART_FlushBuffer
                  _EUSART_Initialize
             _PIN_MANAGER_Initialize
                        _modemResync
                         _modemSleep
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1512
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0      62
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      93
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _modemSleep                                           0     0      0    8693
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _modemResync                                          3     3      0    8971
                                              5 BANK0      3     3      0
           _MOTEapp_getModemResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (5) _MOTEapp_getModemResponse                             2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   2     2      0    2178
                                              7 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    2113
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                  53    52      1   57725
                                             18 BANK0      3     2      1
                   _DATAEE_WriteByte
                            _cw_beep
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     1      6     443
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               9     5      4    2459
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _cw_beep                                              0     0      0   26993
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (5) _sendCommand                                          2     0      2    3301
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (4) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _moteApp_delayms                                      5     3      2    5392
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     200
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3768
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3768
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       0     0      0   22858
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _oled_putString                                       5     1      4   17112
                                             13 BANK0      5     1      4
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_clear                                           0     0      0    1188
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (3) _oled_clearRow                                        2     2      0    1188
                                             13 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_putChar                                        10     8      2    1058
                                              3 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (3) _oled_writeData                                       1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _Set_Page_Address                                     1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _Set_Column_Address                                   1     1      0     124
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_writeCommand                                    1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bit                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4558
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     209
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2146
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         4     4      0    2104
                                              7 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1866
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   30065
                                             33 COMRAM    12    12      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (12) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   30065
                                             32 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   17700
                                             29 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  1     1      0   12636
                                             28 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             7     7      0    4286
                                             21 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (14) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     500
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     500
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     501
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _USART_mySetLineCodingHandler                        4     4      0     386
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (12) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _USBapp_handlerState
   _modemResync
     _MOTEapp_getModemResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_GetConversion
     _ADC_TempConversion
       ___lwdiv
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModemResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___lwmod
     _moteApp_delayms
     _moteJoiningProcess
       _DATAEE_WriteByte
       _cw_beep
         _moteApp_delayms
         _oled_clear
           _oled_clearRow
             _oled_putChar
               _Set_Column_Address
                 _oled_writeCommand
                   _SPI_Exchange8bit
               _Set_Page_Address
                 _oled_writeCommand
                   _SPI_Exchange8bit
               _oled_writeData
                 _SPI_Exchange8bit
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _EUSART_Initialize
         _PIN_MANAGER_Initialize
         _modemResync
           _MOTEapp_getModemResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _modemSleep
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_displayOff
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _Set_Page_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _oled_writeData
                   _SPI_Exchange8bit
           _oled_devInit
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setDisplay
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
       _moteApp_add8bToDataBuffer
         ___lbdiv
         ___lbmod
       _moteApp_clearBuffers
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_devInit
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setDisplay
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setFont
   _oled_putString
     _oled_putChar
       _Set_Column_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _Set_Page_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _oled_writeData
         _SPI_Exchange8bit

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      40       9       25.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      9      D9       7       84.8%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     27      98       5       95.0%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     20B      14        0.0%
DATA                 0      0     20B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Apr 23 01:50:26 2016

                            _SPI_Initialize 4A8C                                  _USB_SD_Ptr 7825  
               ?_moteApp_add16bToDataBuffer 00D5                                          l50 603C  
                         ??_CMP1_Initialize 00CE                                  _USB_Buffer 0150  
                       moteRunningProcess@i 00F1                               _USBDeviceInit 62B6  
                   EUSART_FlushBuffer@index 00CE                      __end_of_oled_writeData 4A80  
                        __size_of_CDCInitEP 0052                    USBapp_handlerState@state 00CE  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
                    moteJoiningProcess@mode 0091        USER_USB_CALLBACK_EVENT_HANDLER@event 003B  
      USER_USB_CALLBACK_EVENT_HANDLER@pdata 003D                                         l304 4BA6  
                                       l332 6FB6                 __end_of_USBStdGetDscHandler 6AF2  
                                       l318 6F02                                         l435 779C  
                                       l363 728E                                         l372 735A  
                                       l292 5528                                         l358 7288  
                                       l295 5562                                         l555 5636  
                                       l469 6EA2                                         l671 5790  
                                       l587 4D28                                         l755 522A  
                                       l908 4EB8                                         _BDT 000400  
                                       l917 4F26                                         l693 5F24  
                                       l678 57FC                                         _CKE 007E3E  
                                       _CKP 007E34                                         _GIE 007F97  
                              __CFG_CPB$OFF 000000                                         _PR2 000FBB  
                              __CFG_CPD$OFF 000000                          _moteJoiningProcess 7278  
                                       _UIE 000F64                                         _UIR 000F65  
                           _timer1ReloadVal 008B                                  _USBSuspend 4BB6  
              __end_of_moteApp_clearBuffers 5120                        USBStdSetCfgHandler@i 0043  
                           _TMR2_Initialize 4AA8                                         prod 000FF3  
                                       tosl 000FFD                                         wreg 000FE8  
                            _USBDeviceTasks 67F2                              _USBDeviceState 0097  
                     moteApp_delayms@length 00CE                       ??_USBCtrlTrfRxService 003F  
                  __size_ofi2_USBDeviceInit 00D8                              ??_getsUSBUSART 00D8  
                              ?_EUSART_Read 002E                    USBEnableEndpoint@options 0036  
                              __CFG_LVP$OFF 000000                         ?_moteJoiningProcess 00E0  
                                      l1004 4B5C                                        l1210 5012  
                                      l1038 5046                                        l1066 4AC0  
                                      l2211 51AA                                        l2221 50D2  
                                      l1484 4E80                  USBConfigureEndpoint@handle 0034  
                                      l1485 4E7E                                        l1749 5ABA  
                                      l1779 690C                                        l1788 695E  
                                      l8005 4DB2                                        l8009 4DC8  
                                      l9001 76DE                                        l9003 76E4  
                                      l9021 7722                                        l8029 51DE  
                                      l8037 51FA                                        l9007 76EA  
                                      l8303 517A                                        l8135 5546  
                                      l8145 556C                                        l9041 7794  
                                      l8305 5182                                        l8137 554E  
                                      l9121 6E3A                                        l8235 5D32  
                                      l8331 50C8                                        l8323 50AA  
                                      l9051 781E                                        l8315 51A0  
                                      l8307 5186                                        l8139 5554  
                                      l8171 4CAA                                        l9301 630C  
                                      l8229 5D12                                        l8149 5574  
                                      l8325 50B2                                        l8405 595E  
                                      l9045 77A4                                        l9037 7784  
                                      l9117 6E30                                        l8247 5D86  
                                      l8327 50B6                                        l8271 4FA8  
                                      l8263 4F94                                        l8503 5B32  
                                      l9401 57E6                                        l8409 596C  
                                      l8417 597C                                        l9049 77B4  
                                      l8265 4F98                                        l8513 5B58  
                                      l9145 6E9E                                        l8259 4F8E  
                                      l8275 4FB0                                        l8291 4D54  
                                      l8283 4D3E                                        l8523 5B88  
                                      l8507 5B48                                        l9083 6D68  
                                      l9139 6E98                                        l9261 4DA0  
                                      l9325 6328                                        l9309 6316  
                                      l8701 699C                                        l8621 5AE6  
                                      l9173 5F48                                        l9405 57EC  
                                      l8197 4E8E                                        l9069 6D38  
                                      l9501 7000                                        l8711 69BE  
                                      l8623 5AEA                                        l8631 5B2C  
                                      l8383 561A                                        l8375 55D0  
                                      l8447 50E0                                        l8527 5BBA  
                                      l9431 6EE2                                        l9257 4D90  
                                      l8721 69EC                                        l8385 5622  
                                      l8457 50F4                                        l9521 707E  
                                      l9441 6F06                                        l9425 6ECA  
                                      l9417 6EB6                                        l8627 5B08  
                                      l8651 4B96                                        l8387 5906  
                                      l8379 55F6                                        l8467 510C  
                                      l9515 7056                                        l8709 69BA  
                                      l9189 5F84                                        l9445 6F14  
                                      l9437 6EF2                                        l9295 62E2  
                                      l8719 69CE                                        l8671 692A  
                                      l8663 691A                                        l8903 74A0  
                                      l9519 706C                                        l9471 6F68  
                                      l7945 4F18                                        l7937 5734  
                                      l9385 5792                                        l8833 7304  
                                      l8825 72DC                                        l8809 7290  
                                      l9457 6F32                                        l9481 6FA0  
                                      l8691 6978                                        l8683 6962  
                                      l8667 6922                                        l7963 4EBA  
                                      l9395 57D8                                        l8931 7544  
                                      l8595 568A                                        l9563 604E  
                                      l9571 605E                                        l8677 6950  
                                      l7973 4EDC                                        l7957 4F42  
                                      l8917 74F2                                        l8861 73AE  
                                      l8829 72F2                                        l9557 603E  
                                      l7959 4F44                                        l9399 57E0  
                                      l8847 735E                                        l8599 5690  
                                      l8791 522E                                        l8783 5206  
                                      l8945 7596                                        l9489 6FB8  
                                      l8699 6996                                        l8875 73FE  
                                      l8795 5240                                        l7989 4BF8  
                                      l7997 4D12                                        l8973 763A  
                                      l8797 5242                                        l8789 5226  
                                      l8959 75E8                                        l8799 5246  
                                      STR_1 7DD2                                        STR_2 7DC3  
                                      l8889 744E                                        STR_3 7DE1  
                                      STR_4 7F7E                                        l8987 768C  
                                      l8997 76CE                                        STR_7 7DA4  
                                      STR_8 7ED7                                        l8999 76DA  
                                      STR_9 7F87             __size_of_MOTEapp_TimerBasedTask 000E  
                                      u6210 55C2                                        _PEIE 007F96  
                                      u6217 55B8                                        u6190 5594  
                                      u6197 558A                       ??_USBCtrlTrfTxService 002E  
                                      u6495 5022                                        _UCFG 000F62  
                                      u6496 5024                                        u7707 64A4  
                                      _UEP0 000F6A                                        u7717 5040  
                                      _UEP1 000F6B                                        u7727 4D18  
                                      _UEIE 000F66                                        u7677 646C  
                                      u7687 647A                                        u7697 6490  
                                      _UEIR 000F67                                        _UCON 000F60  
                                      _TMR2 000FBC                             _CDCDataInHandle 0081  
    USBStdFeatureReqHandler@current_ep_data 0047                                        _pDst 0087  
                                      _main 5FB0                    ??i2_USBTransferOnePacket 0032  
         __end_of_moteApp_add8bToDataBuffer 5504                                        fsr1h 000FE2  
                                      fsr2h 000FDA                                        indf1 000FE7  
                                      fsr1l 000FE1                                        indf2 000FDF  
                                      fsr2l 000FD9                             _USBDeviceAttach 4E5E  
                                      btemp 005B                               __CFG_BORV$190 000000  
                                      pclat 000FFA                                        prodh 000FF4  
                                      prodl 000FF3                        _USBapp_setrxByteFlag 4A3E  
                                      start 10AA                             ?_oled_putUint16 00E0  
                             __CFG_IESO$OFF 000000                             __end_of_EndLine 4A8C  
                    __end_of_SPI_Initialize 4A9A                            __end_of_CMP1_ISR 4A28  
                           ?_oled_putString 00DB                  __end_of_USBCheckStdRequest 5D00  
                    ??_USBCtrlTrfOutHandler 0041                 __size_of_moteRunningProcess 018C  
                          ?_oled_setDisplay 002E                               __CFG_MCLRE$ON 000000  
                          _modemBufferIndex 0029                                ___param_bank 000010  
                 ??_USBStdFeatureReqHandler 0043                                 _TMRapp_Tick 4A38  
                      ??_moteJoiningProcess 00E1                      moteApp_delayms@counter 00D1  
             ?_USART_mySetLineCodingHandler 002E                      sendDataCommand@appData 00D1  
                         sendCommand@string 00CF                    ??_USBStdGetStatusHandler 002E  
              __end_of_USBapp_getrxByteFlag 4A34                   __size_of_DATAEE_WriteByte 003A  
                            ?_USBDeviceInit 002E                               ?_EUSART_Write 002E  
                      oled_putUint16@number 00E0              __size_of_OSCILLATOR_Initialize 0016  
                           ?_oled_writeData 002E               __end_of_OSCILLATOR_Initialize 4B66  
                                     ?_main 002E                             __end_of___lbdiv 4FB4  
                                     _EEADR 000FA9                                       STR_10 7E73  
                                     STR_11 7EE3                                       STR_20 7F90  
                                     STR_12 7E9A                                       STR_21 7FFC  
                                     STR_13 7E80                                       STR_14 7E8D  
                                     STR_30 7DF0                                       STR_22 7C7E  
                                     STR_23 7F04                                       STR_15 7EEF  
                                     STR_31 7ECB                                       STR_32 7ECF  
                                     STR_40 7FC2                                       STR_24 7F6C  
                                     STR_16 7F2C                                       STR_41 7EC8  
                                     STR_17 7F99                                       STR_33 7F48  
                                     STR_25 7D1F                                       STR_50 7EC8  
                                     STR_18 7FD2                                       STR_34 7F51  
                                     STR_26 7D52                                       STR_42 7CB7  
                                     STR_35 7FF7                                       STR_43 7FE2  
                                     STR_19 7FDA                                       STR_27 7D63  
                                     STR_51 7CC9                                       STR_44 7EC8  
                                     STR_52 7F18                                       STR_60 7D84  
                                     STR_28 7CDB                                       STR_36 7C92  
                                     STR_53 7EC8                                       STR_61 7FCA  
                                     STR_37 7FBA                                       STR_29 7FAA  
                                     STR_45 7C6A                                       STR_70 7F0E  
                                     STR_62 7EC8                                       STR_38 7EC8  
                                     STR_46 7F22                                       STR_54 7D41  
                                     STR_71 7EC8                                       STR_47 7EC8  
                                     STR_55 7FB2                                       STR_39 7CEC  
                                     STR_63 7CA5                                       STR_56 7EC8  
                                     STR_80 7FFA                                       STR_64 7F5A  
                                     STR_72 7EBF                                       STR_48 7C56  
                                     STR_73 7F0E                                       STR_65 7EC8  
                                     STR_49 7F75                                       STR_81 7EFA  
                                     STR_57 7CFD                                       STR_74 7C07  
                                     STR_58 7FE9                                       STR_90 7E59  
                                     STR_82 7DB4                                       STR_66 7D0E  
                                     STR_59 7EC8                                       STR_67 7FF0  
                                     STR_75 7F3F                                       STR_91 7E66  
                                     STR_83 7D94                                       STR_68 7EC8  
                                     STR_92 7F63                                       STR_84 7E0B  
                                     STR_76 7D30                             __end_of___lbmod 4D5C  
                                     STR_69 7F0E                                       STR_77 7EB3  
                                     STR_85 7E18                                       STR_86 7E25  
                                     STR_78 7DFE                                       STR_94 7C22  
                                     STR_87 7E32                                       STR_79 7D74  
                                     STR_95 7C3C                                       STR_88 7E3F  
                                     STR_96 7BEE                                       STR_89 7E4C  
                                     STR_97 7C08                                       STR_98 7F36  
                                     STR_99 7FA2           __size_of_USBCtrlEPServiceComplete 00E4  
                           _TMR1_StartTimer 4A28                             __end_of___lldiv 5718  
         __size_of_MOTEapp_setResponseReady 0002                                       _T1CON 000FCD  
                    __end_of_USBDeviceTasks 68F0                                       _T2CON 000FBA  
                   __end_of_sendDataCommand 5BC4                   ?_USBCtrlEPServiceComplete 002E  
                           __end_of___lwdiv 51B4                             __end_of___lwmod 50DC  
                 ?_MOTEapp_setResponseReady 002E                         oled_putUint8@number 00E2  
                                     i2l923 4D08                                       _UADDR 000F63  
                                     i2l972 1076                                       i2l964 104A  
                                     i2l966 105A                                       i2l968 1066  
                                     _RCREG 000FAE                                       _RCSTA 000FAB  
                                     _TMR1H 000FCF                                       _TMR1L 000FCE  
                                     _SPBRG 000FAF    moteApp_add16bToDataBuffer@bufferLocation 00D7  
   moteApp_add8bToDataBuffer@bufferLocation 00D2                                       _USTAT 000F61  
                                     _TXREG 000FAD                                       _TXSTA 000FAC  
                             __CFG_WRT0$OFF 000000          __size_of_USBCtrlEPAllowStatusStage 00BC  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                         moteHandler@i_1284 01D7                               __CFG_WRT3$OFF 000000  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                            __CFG_EBTR3$OFF 000000                             __end_of_cw_beep 4F14  
           __end_of_USBCtrlEPAllowDataStage 5AA0                           oled_putChar@index 00DA  
                          __end_of_TMR1_ISR 4A68                                       _sd000 7BEA  
                                     _sd001 7B70             service_pushbutton@Release_Timer 00A6  
                                     _sd002 7BA4                               __CFG_WRTB$OFF 000000  
                    moteRunningProcess@Traw 00EF                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                             _DATAEE_ReadByte 4AFE  
                            __CFG_EBTRB$OFF 000000                                  i2memset@p1 002E  
                                     _light 0085                     __end_of_TMR1_Initialize 4E5E  
                              _runningState 00A2                                       pclath 000FFA  
                                     tablat 000FF5                                       plusw2 000FDB  
                         __end_of_CDCInitEP 533C                  oled_setDisplay@displayType 00D0  
                              ?_modemResync 002E                                       status 000FD8  
                            __CFG_T3CMX$RC0 000000                             _TMR2_StartTimer 4A2C  
                           __end_of_strncmp 5636                             ___lbdiv@divisor 00CE  
                            __CFG_ICPRT$OFF 000000                       ?_USBapp_setrxByteFlag 002E  
                          __end_ofi2_memset 4D86                             ___lbdiv@counter 00D0  
                              _m10SecTicker 009F                             ?_SPI_Initialize 002E  
                           putUSBUSART@data 00CE          USART_mySetLineCodingHandler@dwBaud 003B  
              __size_of_USBStdSetCfgHandler 00A8                             __initialization 53EA  
                     TMR2_ReadTimer@readVal 00CE               __size_of_TMRapp_ClearBitFlags 0004  
                              __end_of_main 606A               __size_of_MOTEapp_handlerState 0008  
                    _MOTEapp_TimerBasedTask 4A9A                              ??_EUSART_Write 00CE  
                   __end_of_TMR2_Initialize 4AB8                                ?_sendCommand 00CF  
               ?_INTERRUPT_InterruptManager 002E                   __size_of_USBCtrlEPService 00B2  
                                    ??_main 00F5                                ?_moteHandler 002E  
                             __activetblptr 000002                          _modemResonseBuffer 0190  
                           ?_USBDeviceTasks 002E                         i2_EUSART_Initialize 4DDA  
                     oled_putUint16@numData 00E4                   sendDataCommand@dataLength 00D2  
                               ?_USBSuspend 002E                                  _NextUSBOut 001A  
                            __CFG_SDOMX$RB3 000000                             __CFG_CCP2MX$RC1 000000  
                              _cdc_mem_type 009C                    __end_of_SPI_Exchange8bit 4AC8  
                   __end_of_USBDeviceAttach 4E8A                                      _ADCON0 000FC2  
                                    _ADCON1 000FC1                                      _ADCON2 000FC0  
                          _CDCDataOutHandle 0083                           _getsUSBUSART$5505 00D9  
                                    _ACTCON 000FB5                                      STR_100 7EA7  
                                    _ADRESH 000FC4                                      _ADRESL 000FC3  
                                    _EEDATA 000FA8                                      _EECON2 000FA7  
         __size_of_MOTEapp_getModemResponse 004A                             getsUSBUSART@len 00D7  
                                    _T1GCON 000FCC                        oled_putUint8@numData 00E3  
                 ?_MOTEapp_getModemResponse 002E                       __size_of_CDCTxService 0100  
                                    i2l1435 681A                                      i2l1612 52A2  
                                    i2l1509 668E                                      i2l1445 6896  
                                    i2l2158 5706                                      i2l1622 628A  
                                    i2l1614 52E6                                      i2l1446 68EC  
                                    i2l1447 689C                                      i2l1562 6A8E  
                                    i2l1652 709E                                      i2l1572 580C  
                                    i2l1636 5C6E                                      i2l1565 6ADA  
                                    i2l1645 5C9E                                      i2l1670 71FE  
                                    i2l1662 7184                                      i2l1567 6ADE  
                                    i2l1575 586E                                      i2l1576 5816  
                                    i2l1729 58C0                                      i2l1577 581A  
                                    i2l1585 509A                                      i2l5211 4F56  
                                    i2l6111 6CB0                                      i2l5215 4F64  
                                    i2l5223 5BD4                                      i2l6121 6D0C  
                                    i2l5241 5C48                                      i2l6041 6638  
                                    i2l6107 6C96                                      i2l5403 58F0  
                                    i2l5229 5BF4                                      i2l6053 66A2  
                                    i2l6061 66B0                                      i2l6037 6632  
                                    i2l5511 56CA                                      i2l6137 5C78  
                                    i2l5507 56BA                                      i2l5355 4FD0  
                                    i2l6163 5CC0                                      i2l5509 56C6  
                                    i2l6085 6C1A                                      i2l5365 588E  
                                    i2l5197 59E4                                      i2l5525 4D66  
                                    i2l6149 5C88                                      i2l5701 5A5A  
                                    i2l5519 56F8                                      i2l5471 6148  
                                    i2l6095 6C40                                      i2l5391 58D8  
                                    i2l5383 58B6                                      i2l5375 58A4  
                                    i2l6159 5CAE                                      i2l5481 6170  
                                    i2l6089 6C26                                      i2l5369 589A  
                                    i2l5529 4D76                                      i2l5705 5A6E  
                                    i2l7321 5EEC                                      i2l5491 61AC  
                                    i2l5467 6140                                      i2l7307 5E8E  
                                    i2l6701 6252                                      i2l5397 58EA  
                                    i2l5725 5DD0                                      i2l7341 63B8  
                                    i2l5831 70F8                                      i2l5815 70A0  
                                    i2l7263 4C4A                                      i2l5489 61A6  
                                    i2l5673 60AE                                      i2l5841 712A  
                                    i2l7265 4C4C                                      i2l5499 61E2  
                                    i2l6715 62B0                                      i2l6707 6270  
                                    i2l5755 6A00                                      i2l5747 5E2A  
                                    i2l7371 6400                                      i2l7347 63E2  
                                    i2l7355 63EC                                      i2l6717 62B2  
                                    i2l5845 713A                                      i2l5855 7172  
                                    i2l5839 7128                                      i2l5767 6A92  
                                    i2l5759 6A10                                      i2l5775 6AE2  
                                    i2l7287 5098                                      i2l5857 719C  
                                    i2l7705 6812                                      i2l5883 7248  
                                    i2l5867 71DE                                      i2l5787 582C  
                                    i2l5885 7254                                      i2l5877 7210  
                                    i2l5869 71EA                                      i2l5797 5860  
                                    i2l7733 6854                                      i2l7671 4D04  
                                    i2l7743 6864                                      i2l7727 6838  
                                    i2l7719 682C                                      i2l6689 6216  
                                    i2l7739 685C                                      i2l7685 4CE0  
                                    i2l7677 4CC6                                      i2l9613 5134  
                                    i2l7757 688A                                      i2l7749 686E  
                                    i2l9615 5166                                      i2l7783 68D0  
                                    i2l7785 68E4                                      i2l7777 68BA  
                                    i2l7697 6806                                      i2l7857 1072  
                                 ??_EndLine 00CF                                      _OSCCON 000FD3  
                             CDCTxService@i 00D7                                      _SPBRGH 000FB0  
                                    _SSPBUF 000FC9                    i2USBTransferOnePacket@ep 0032  
                         ??i2_USBDeviceInit 0036             __size_ofi2_USBTransferOnePacket 009E  
                      ?i2_EUSART_Initialize 002E                        oled_displayOff@state 00D0  
                             oled_putChar@k 00D9                           _shortPacketStatus 002B  
            moteRunningProcess@changeStates 002E                              __CFG_XINST$OFF 000000  
                      _moteApp_clearBuffers 50DC                             USBDeviceTasks@i 004E  
                __end_of_Set_Column_Address 4BF2                 USBStdFeatureReqHandler@pUEP 0045  
                          __end_of_hexToStr 4CBC                    USBTransferOnePacket@data 00CF  
                USBCtrlTrfInHandler@lastDTS 003F                             ??_USBDeviceInit 00D6  
                 __size_of_Set_Page_Address 0014                     __end_of_TMR1_StartTimer 4A2C  
                              ?_putUSBUSART 00CE                                   ??___lbdiv 00CF  
                            __CFG_STVREN$ON 000000                      modemResync@escapeEvent 00D5  
                                 ??___lbmod 00CF                                   ??___lldiv 0036  
                      __end_of_getsUSBUSART 5B30                                   ??___lwdiv 00D2  
                                 ??___lwmod 00D2                           _USBEnableEndpoint 4F48  
           __size_of_USBStdGetStatusHandler 007E                         _EUSART_Transmit_ISR 4CE4  
                                    _memset 4D86                                      clear_0 53F0  
                                    clear_1 53FC                                      clear_2 5408  
                                    clear_3 5414                          ?_USBEnableEndpoint 0036  
            ??_USART_mySetLineCodingHandler 003B                                   ??_cw_beep 00E0  
                   __end_of_DATAEE_ReadByte 4B12                                      _strcmp 5906  
                __end_of_ADC_TempConversion 4C74               __size_of_USBTransferOnePacket 00A0  
                          ?_sendDataCommand 00CF                             _moteApp_delayms 4D0C  
               __size_of_service_pushbutton 004C                                _CDCTxService 68F0  
                              __mediumconst 7824                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                       ??_USBEnableEndpoint 0037                    ADC_GetConversion@channel 00D2  
                                 ?_CMP1_ISR 002E                     __end_of_TMR2_StartTimer 4A30  
                               _CtrlTrfData 000438                                   ??_strncmp 00D4  
                          ___lbdiv@dividend 00CF                               ?_oled_devInit 002E  
                      ?_EUSART_Transmit_ISR 002E                        _controlTransferState 0021  
                      _USBapp_getrxByteFlag 4A30                            ?_TMR1_Initialize 002E  
                      __CFG_LS48MHZ$SYS48X8 000000                        __size_of_EUSART_Read 002E  
                         _SYSTEM_Initialize 4C10                __size_of_USBapp_handlerState 0008  
                           ___lbmod@divisor 00CE                                  __accesstop 0060  
                   __end_of__initialization 5438                      ??_USBapp_setrxByteFlag 002E  
                           ___lbmod@counter 00D0                             __CFG_PBADEN$OFF 000000  
                     ??i2_EUSART_Initialize 002E                             _CMP1_Initialize 4AC8  
                        ?_SYSTEM_Initialize 002E                          oled_writeData@data 00CF  
                             ___rparam_used 000001                               ?_oled_setFont 00CE  
                  __size_of_USBStallHandler 003E                               ?_oled_putChar 00D1  
                     ?_moteApp_clearBuffers 002E                         __size_of_USBSuspend 001E  
               __size_of_EUSART_FlushBuffer 002C                              __pcstackCOMRAM 002E  
                 __end_of_USBEnableEndpoint 4F7E                            __CFG_nPWRTEN$OFF 000000  
                             __end_of_sd000 7BEE                               __end_of_sd001 7BA4  
                             __end_of_sd002 7BD8                                __pidataBANK0 4A21  
                       ??_SYSTEM_Initialize 00D0                   oled_putUint16@station_dot 00E2  
                                 ?_TMR1_ISR 002E            __size_of_USBCtrlEPAllowDataStage 008E  
                          _DATAEE_WriteByte 4FEC               __size_of_USBConfigureEndpoint 0088  
               __end_of_USBCtrlTrfInHandler 62B6                            ?_TMR2_Initialize 002E  
                          ___lbdiv@quotient 00D1                      i2_USBTransferOnePacket 5BC4  
                           __CFG_PCLKEN$OFF 000000                              __CFG_nLPBOR$ON 000000  
                         __end_of_OledFont0 7B2D                           _CDCTxService$5553 00D5  
                                _cdc_notice 00B3                                   ?i2_memset 002E  
                                _cdc_rx_len 009D                                  _cdc_tx_len 009E  
                                ??_CMP1_ISR 002E                             _responsePortNum 007E  
                  ??_USBCtrlTrfSetupHandler 004B                                  _dataBuffer 00A7  
                            ??_oled_devInit 00D0                            ?_USBDeviceAttach 002E  
                 __end_of_SYSTEM_Initialize 4C30                       ??_EUSART_Transmit_ISR 002E  
                    _USBStdGetStatusHandler 5804                       ?_USBapp_getrxByteFlag 002E  
                      service_pushbutton@bs 00CE                            ??_oled_putUint16 00E4  
                                __pbssBANK0 0060                                  __pbssBANK1 0100  
                                __pbssBANK2 0200                        __end_of_EUSART_Write 4F48  
                   __size_of_TMR2_ReadTimer 0008                            ??_oled_putString 00DF  
                            ??_oled_setFont 00D0                 __size_of_EUSART_Receive_ISR 0028  
                       oled_putString@index 00DF                              ??_oled_putChar 00D3  
               __size_of_USBWakeFromSuspend 0022                                 _pBDTEntryIn 000F  
                    __size_of_oled_clearRow 001E                        __size_of_modemResync 0064  
                  sendDataCommand@byteCount 00D4            __end_of_USBCtrlEPServiceComplete 66FE  
          __end_of_MOTEapp_setResponseReady 1006                      oled_putChar@start_page 00D2  
               __size_of_USBCheckCDCRequest 0084                           __CFG_PLLSEL$PLL3X 000000  
                        __size_of_oled_init 0022                            ??_oled_writeData 00CF  
                      USBCtrlTrfRxService@i 003F                                ?_TMRapp_Tick 002E  
                          ?_TMR1_StartTimer 002E                                  ??_TMR1_ISR 002E  
                  oled_putUint16@start_page 00E3                     __end_of_moteApp_delayms 4D34  
                                   _CM1CON0 000F98          MOTEapp_getModemResponse@bufferByte 00D0  
                   __size_of_USBapp_Handler 0076                     __size_of_TMRapp_Handler 00DE  
                                   _BAUDCON 000FB8                                     ?_memset 00CE  
                                _device_dsc 7BD8                   Set_Column_Address@address 00D0  
                  __size_of_oled_displayOff 0012                            _USBCtrlEPService 5E48  
                                _ep_data_in 0072                     __size_of_ADC_Initialize 0016  
                                   ?_strcmp 00CE                            ?_DATAEE_ReadByte 002E  
               __end_of_USBCtrlTrfRxService 6D18                        __size_of_sendCommand 002A  
                        _USBCheckStdRequest 5C62                               _eusartRxCount 0023  
                         _configDescriptor1 7B2D                                     _RS232cp 001C  
                           __CFG_WDTEN$SWON 000000                                  ??i2_memset 0034  
               __end_of_USBCtrlTrfTxService 61E8                        __size_of_moteHandler 01E0  
                       _USBStdSetCfgHandler 5DA0                                     _OSCCON2 000FD2  
                                   _OSCTUNE 000F9B                      __size_of_oled_putUint8 005A  
                                   _SSP1ADD 000FC8                     __end_of_CMP1_Initialize 4ADA  
                       ?_USBCheckStdRequest 002E                            ?_TMR2_StartTimer 002E  
              __size_of_USBStdGetDscHandler 0102                                     _UIEbits 000F64  
                                 ?_hexToStr 002E                                     _UIRbits 000F65  
                          ??_SPI_Initialize 00CE                                     _EndLine 4A80  
                             _cdc_trf_state 0020                        DATAEE_WriteByte@bAdd 00CF  
                __end_of_moteRunningProcess 6EA4                      ??_moteApp_clearBuffers 00CE  
                ?_moteApp_add8bToDataBuffer 00D2                                     _pCDCDst 0078  
                                   _pCDCSrc 007B                       __size_of_getsUSBUSART 0090  
                                   __Hparam 0000                        ?_USBStdSetCfgHandler 002E  
                                 _CDCInitEP 52EA                     ?_MOTEapp_TimerBasedTask 002E  
                                   __Lparam 0000                    moteRunningProcess@i_1373 00F2  
                __size_of_USBEnableEndpoint 0036                         moteHandler@s2Button 01D4  
                          _Set_Page_Address 4B12                        ??_USBCheckStdRequest 004A  
              moteRunningProcess@sleepEvent 00EC                           _timerMinTickCount 008D  
             __size_of_USBCtrlTrfOutHandler 0052                 __size_of_moteJoiningProcess 05AC  
                                   ___lbdiv 4F7E                                     ___lbmod 4D34  
                                   ___lldiv 56A2                            ??_USBDeviceTasks 004E  
                                   ___lwdiv 516A                           ??_USBStallHandler 002E  
                                   ___lwmod 509E                        __size_of_putUSBUSART 001C  
                                   __pcinit 53EA                          getsUSBUSART@buffer 00D5  
                           __size_of_memset 002A                   __end_of_configDescriptor1 7B70  
                                   __ramtop 0800                           hexToStr@character 00CE  
          __end_of_MOTEapp_getModemResponse 51FE                                     __ptext0 5FB0  
                                   __ptext1 6EA4                                     __ptext2 51FE  
                                   __ptext3 6D18                                     __ptext4 5B30  
                                   __ptext5 4C96                                     __ptext6 5390  
                                   __ptext7 66FE                                     __ptext8 50DC  
                                   __ptext9 54A4                    __size_of_oled_setDisplay 0014  
                                   _inPipes 0009                                     _cw_beep 4EE4  
               _USBDeferOUTDataStagePackets 0096                             __size_of_strcmp 0084  
                          oled_setFont@font 00CE                                   _T1CONbits 000FCD  
                     _OSCILLATOR_Initialize 4B50                                ??_USBSuspend 0043  
                             _oled_clearRow 4BF2                                   _T2CONbits 000FBA  
                                _modemSleep 4B9A             moteApp_add8bToDataBuffer@number 00D3  
                                _oled_clear 4B66                    ??_PIN_MANAGER_Initialize 00CE  
              __end_of_TMRapp_ClearBitFlags 4A38                                _LastRS232Out 0019  
                           i2_USBDeviceInit 638C                            i2USBDeviceInit@i 0036  
                         __end_of_oled_init 4C96                           ?_SPI_Exchange8bit 002E  
              __end_of_MOTEapp_handlerState 4A4C                      ??_USBapp_getrxByteFlag 00CE  
                        __end_of_USB_CD_Ptr 782D                  __size_of_SYSTEM_Initialize 0020  
           __size_of_USBCtrlTrfSetupHandler 005E                                  ??_hexToStr 00CE  
                                   _strncmp 55CE                        end_of_initialization 5438  
                              _getsUSBUSART 5AA0               sendDataCommand@byteCount_1431 00D5  
                        ??_SPI_Exchange8bit 00CE                        SPI_Exchange8bit@data 00CE  
                        __end_of_USB_SD_Ptr 782B                         _pBDTEntryEP0OutNext 0017  
                                   memset@c 00D0                                     memset@n 00D2  
                                   memset@p 00D4                               __Lmediumconst 7824  
           _dummy_encapsulated_cmd_response 00BD                    ?_USBStdFeatureReqHandler 002E  
            __end_of_MOTEapp_TimerBasedTask 4AA8                           _EUSART_Initialize 4E06  
                                _rxByteFlag 002A                       ??_USBStdSetCfgHandler 0043  
                           ___lldiv@divisor 0032                                  ?_CDCInitEP 002E  
                           ___lldiv@counter 003A                          ?_EUSART_Initialize 002E  
                             _oled_putUint8 5390                          __end_of_USBSuspend 4BD4  
            ??_USBapp_CdcEmulatorInitialize 003A                     _USBCtrlEPAllowDataStage 5A12  
                                 _RCSTAbits 000FAB                                     postdec2 000FDD  
                                   postinc0 000FEE                                     postinc2 000FDE  
                      __end_of_oled_devInit 653C                    _USBCtrlEPServiceComplete 661A  
                                _responseId 0140                            ?_moteApp_delayms 00CE  
                             _randomPortNum 00A1                    _MOTEapp_setResponseReady 1004  
                _USBStatusStageEnabledFlag1 0098                  _USBStatusStageEnabledFlag2 0099  
                       _USBapp_handlerState 4A4C                         ??_EUSART_Initialize 00CE  
                        USBEnableEndpoint@p 0037                                   _PORTAbits 000F80  
                                 _PORTBbits 000F81                                   _PORTCbits 000F82  
                   oled_putUint8@start_page 00E1                              ?_oled_clearRow 002E  
                      __end_of_oled_setFont 4AFE                          _Set_Column_Address 4BD4  
                      __end_of_oled_putChar 578E                            ___lbmod@dividend 00CF  
                                 _TRISAbits 000F92                                   _TRISBbits 000F93  
                                 _TRISCbits 000F94                           ??_oled_displayOff 00D0  
                     __size_of_EUSART_Write 0034                          _BothEP0OutUOWNsSet 0093  
                          ?_CMP1_Initialize 002E                   USBConfigureEndpoint@EPNum 0033  
                ?_USBCtrlEPAllowStatusStage 002E                    __end_of_DATAEE_WriteByte 5026  
                       ?_Set_Column_Address 002E         USER_USB_CALLBACK_EVENT_HANDLER@size 003F  
                            _TMR2_ReadTimer 4A54                                   _USTATcopy 002D  
                         __size_of_CMP1_ISR 0004                        ?_USBapp_handlerState 002E  
                        _ADC_TempConversion 4C52                    oled_putString@start_page 00DE  
                               ___lbmod@rem 00D1                   __end_of_EUSART_Initialize 4E32  
              __end_of_USBTransferOnePacket 5DA0                                 _CM2CON1bits 000F9A  
                                 _TXSTAbits 000FAC                             moteHandler@Traw 01D2  
                            ?_oled_putUint8 00E0                           putUSBUSART@length 00D0  
                       ?_ADC_TempConversion 002E                      _USBCtrlTrfSetupHandler 5446  
                      ??_Set_Column_Address 00D0                     ?i2_USBTransferOnePacket 002E  
                     __end_of_USBDeviceInit 638C                              _TMRapp_Handler 653C  
                            _USBapp_Handler 578E                        __size_of_TMRapp_Tick 0006  
              ??_moteApp_add16bToDataBuffer 00D8                                _EUSART_Write 4F14  
                     sendDataCommand@string 00CF                     __end_ofi2_USBDeviceInit 6464  
                         __size_of_TMR1_ISR 000C                  __end_of_service_pushbutton 524A  
                            _ADC_Initialize 4B3A                 moteApp_clearBuffers@counter 00CE  
                                 i2memset@c 0030                                   i2memset@n 0032  
                                 i2memset@p 0034                      ?_OSCILLATOR_Initialize 002E  
                            __end_of_memset 4DB0                           _USBBusIsSuspended 0094  
                  oled_writeCommand@command 00CF                                 ?_modemSleep 002E  
                            __end_of_strcmp 598A                                 ?_oled_clear 002E  
                       start_initialization 53EA                        ??_ADC_TempConversion 00D5  
                   ?_USBStdGetStatusHandler 002E               USBCtrlTrfRxService@byteToRead 0040  
                  _MOTEapp_getModemResponse 51B4             __size_of_PIN_MANAGER_Initialize 004E  
                         ??_oled_setDisplay 00D0                               ??_EUSART_Read 00CE  
                    __end_of_TMR2_ReadTimer 4A5C                                 _cdc_data_rx 000540  
                               _cdc_data_tx 000500                 __end_ofi2_EUSART_Initialize 4E06  
                         __size_ofi2_memset 002A                                   _OledFont0 782D  
              __end_of_USBConfigureEndpoint 5A12             __end_of_USBStdFeatureReqHandler 7278  
                  __size_of_sendDataCommand 0094                       ??_USBapp_handlerState 00CE  
         __end_of_USBCtrlEPAllowStatusStage 6126                    __end_of_USBCtrlEPService 5EFA  
      __end_of_USART_mySetLineCodingHandler 5390       __size_of_USART_mySetLineCodingHandler 0054  
              _USART_mySetLineCodingHandler 533C                  __end_of_EUSART_FlushBuffer 4EB6  
                       DATAEE_ReadByte@bAdd 00CE               __size_of_USBapp_setrxByteFlag 0006  
       __size_of_moteApp_add16bToDataBuffer 010A                   ??_USBCtrlEPAllowDataStage 002F  
                               ??_CDCInitEP 003A                              USBDeviceInit@i 00D6  
                    _pBDTEntryEP0OutCurrent 0015                    __size_of_TMR1_Initialize 002C  
                   USBTransferOnePacket@dir 00CE                     USBTransferOnePacket@len 00D1  
                    __end_of_USBapp_Handler 5804                      __end_of_TMRapp_Handler 661A  
            __end_ofi2_USBTransferOnePacket 5C62                        _TMRapp_ClearBitFlags 4A34  
                       _USBStdGetDscHandler 69F0                        _MOTEapp_handlerState 4A44  
                    __end_of_ADC_Initialize 4B50                                 __pdataBANK0 00F5  
                                  ??_memset 00D4                             ??_oled_clearRow 00DB  
MOTEapp_getModemResponse@terminatorReceived 00CF             MOTEapp_TimerBasedTask@timerTask 00CE  
                                  ??_strcmp 00D2                   oled_putString@station_dot 00DD  
                    _USBActiveConfiguration 002C              __end_of_USBStdGetStatusHandler 5882  
               __end_of_EUSART_Transmit_ISR 4D0C                                 __pbssCOMRAM 0001  
                service_pushbutton@PB_Timer 006E                               __pcstackBANK0 00CE  
                             __pcstackBANK1 01D0                __size_of_USBCtrlTrfInHandler 00CE  
                  __size_of_TMR2_Initialize 0010                    __end_of_Set_Page_Address 4B26  
                           ?_TMR2_ReadTimer 002E                                 _activeState 009A  
                      ?_USBStdGetDscHandler 002E                   ADC_TempConversion@tempRaw 00D5  
                __end_of_EUSART_Receive_ISR 4CE4              moteRunningProcess@messageReady 00EB  
                                  ?_EndLine 002E                  __end_of_USBWakeFromSuspend 4C52  
                             ??_modemResync 00D3                  __size_of_EUSART_Initialize 002C  
                         __size_of_hexToStr 0026                             _USBStallHandler 5060  
                              _pBDTEntryOut 0068                         __end_of_EUSART_Read 4EE4  
                __end_of_USBCheckCDCRequest 5906                             ??_oled_putUint8 00E2  
                      oled_putString@string 00DB                    __size_of_USBDeviceAttach 002C  
               ??_moteApp_add8bToDataBuffer 00D3                           _oled_writeCommand 4A68  
                     __size_of_oled_devInit 00D8                     oled_putChar@station_dot 00D1  
                       __size_of_modemSleep 001C                            ___lwdiv@dividend 00CE  
                    _PIN_MANAGER_Initialize 524A                         __size_of_oled_clear 0018  
                     ?_TMRapp_ClearBitFlags 002E                        EUSART_Read@readValue 00CE  
                           ?_TMRapp_Handler 002E                             ?_USBapp_Handler 002E  
                                 __pintcode 1008                          ?_oled_writeCommand 002E  
                             __pmediumconst 7824               moteJoiningProcess@switchEvent 00E0  
                     ?_MOTEapp_handlerState 002E                                   __ptext100 6BFC  
                                 __ptext101 606A                                    ?___lbdiv 00CE  
                                 __ptext110 4CBC                                   __ptext102 61E8  
                                 __ptext111 4A24                                   __ptext103 6126  
                                 __ptext112 0000                                   __ptext104 533C  
                                 __ptext105 4DDA                                   __ptext106 56A2  
                                 __ptext107 4A38                                   __ptext108 4A5C  
                                 __ptext109 4CE4                                    ?___lbmod 00CE  
                                  ?___lldiv 002E                                    ?___lwdiv 00CE  
                                  ?___lwmod 00CE                             ?_ADC_Initialize 002E  
                     __size_of_oled_setFont 0012                                _eusartRxHead 0024  
                             ??_sendCommand 00D1                                _eusartTxHead 0027  
                              _eusartRxTail 0025                                _eusartTxTail 0028  
                     __size_of_oled_putChar 0076                          _moteRunningProcess 6D18  
              ??_INTERRUPT_InterruptManager 004F                            ?i2_USBDeviceInit 002E  
                    moteHandler@readMessage 01D8                         ??_oled_writeCommand 00CF  
                             ??_moteHandler 00F3                                    ?_cw_beep 002E  
                   _eusartTxBufferRemaining 0026                        _USBTransferOnePacket 5D00  
                              moteHandler@i 01D6            moteApp_add16bToDataBuffer@number 00D5  
                  __size_of_TMR1_StartTimer 0004                      moteHandler@buttonPress 01D5  
                       ?_moteRunningProcess 00EA                __end_of_USBCtrlTrfOutHandler 52EA  
                     ??_USBStdGetDscHandler 002E                                    _CMP1_ISR 4A24  
                               _ep_data_out 0075                            ___lwdiv@quotient 00D3  
              __size_of_USBCtrlTrfRxService 011C                                   _secTicker 00A3  
             USBConfigureEndpoint@direction 002E                    __size_of_DATAEE_ReadByte 0014  
                                  ?_strncmp 00CE                                _oled_devInit 6464  
                            _eusartRxBuffer 0100                            _timerMsTickCount 008F  
                                 _oled_init 4C74                __size_of_USBCtrlTrfTxService 00C2  
                            _eusartTxBuffer 0200                                    _LATAbits 000F89  
                                  _IOCCbits 000F87                   __end_of_oled_writeCommand 4A74  
                                  _LATBbits 000F8A                                    _LATCbits 000F8B  
                ??_USBCtrlEPServiceComplete 002F                  ??_MOTEapp_setResponseReady 00CE  
                                  _PIE1bits 000F9D                                    _IPR3bits 000FA5  
                                  _PIE2bits 000FA0                                    _PIE3bits 000FA3  
                  __size_of_TMR2_StartTimer 0004                                _oled_setFont 4AEC  
                                 _moteState 00F7                           ??_sendDataCommand 00D3  
                             _operationType 00A0                        ??_moteRunningProcess 00ED  
                __end_of_moteJoiningProcess 7824         __size_of_INTERRUPT_InterruptManager 00A2  
                              _oled_putChar 5718                                    i2u323_40 6198  
                                  i2u323_47 618E                                    i2u403_48 6CF8  
                                  i2u325_40 61D4                                    i2u325_47 61CA  
                                  i2u351_40 6AD4                                    i2u351_47 6ACA  
                                  _PIR1bits 000F9E                                    _PIR2bits 000FA1  
             __size_of_moteApp_clearBuffers 0044                                    i2u348_40 6A5C  
                                  i2u348_47 6A52                                    i2u349_40 6A8A  
                                  _PIR3bits 000FA4                                    i2u349_47 6A80  
                                  i2u462_48 629C                   USBCtrlEPService@setup_cnt 004D  
                 __size_of_SPI_Exchange8bit 0010                         __end_of_modemResync 5568  
                                  _RCONbits 000FD0                     __size_of_oled_putUint16 00F4  
                             ??_putUSBUSART 00D1                            __CFG_WDTPS$32768 000000  
                                  _UEP0bits 000F6A                  _USBDeferINDataStagePackets 0095  
                                  _SSP1CON1 000FC6          __end_of_moteApp_add16bToDataBuffer 6BFC  
                _moteApp_add16bToDataBuffer 6AF2                 __size_of_USBCheckStdRequest 009E  
                                  _TMR1_ISR 4A5C                     __size_of_oled_putString 0066  
                                  _SSP1STAT 000FC7                                    _UCONbits 000F60  
                           _oled_displayOff 4ADA                                    _VREFCON0 000F7D  
            moteRunningProcess@selectButton 00EA                        _USBConfigureEndpoint 598A  
          __size_of_USBStdFeatureReqHandler 01F4                           ??_TMR1_Initialize 00CE  
                                _ADCON0bits 000FC2                     Set_Page_Address@address 00D0  
                     ?_USBTransferOnePacket 00CE                      ADC_TempConversion@temp 00D6  
                 _moteApp_add8bToDataBuffer 54A4                     __size_of_oled_writeData 000C  
                             ?_CDCTxService 002E                    moteHandler@gotoNextState 01D1  
                              _RemoteWakeup 001D                         __end_of_sendCommand 4DDA  
                                  i2_memset 4D5C                           __CFG_CFGPLLEN$OFF 000000  
                     DATAEE_WriteByte@bData 00CE                          _RS232_Out_Data_Rdy 001B  
                   __end_of_USBStallHandler 509E                         __end_of_moteHandler 7084  
                               _EUSART_Read 4EB6                           _moteApp_GoToSleep 5636  
               ??_USBCtrlEPAllowStatusStage 002E                 __end_of_USBStdSetCfgHandler 5E48  
                         ?_DATAEE_WriteByte 00CE               __size_of_USBapp_getrxByteFlag 0004  
                        ?_moteApp_GoToSleep 002E                                  ?_oled_init 002E  
                         ??_TMR2_Initialize 00CE                            __size_of_EndLine 000C  
                        ??_DATAEE_WriteByte 00CF                          __end_of_device_dsc 7BEA  
                                _EECON1bits 000FA6                     ?_USBCtrlTrfSetupHandler 002E  
             USBapp_CdcEmulatorInitialize@i 003A                      ??_TMRapp_ClearBitFlags 00CE  
                   USBStdGetStatusHandler@p 002E                                    __Hrparam 0000  
                       ??_moteApp_GoToSleep 00DD                                    __Lrparam 0000  
                    USBTransferOnePacket@ep 00D2                      ??_MOTEapp_handlerState 00CE  
                         _ADC_GetConversion 5026                          __CFG_BOREN$SBORDIS 000000  
                                  _SetupPkt 000430                     __size_of_SPI_Initialize 000E  
                   ??_OSCILLATOR_Initialize 00CE                       ?_USBConfigureEndpoint 002E  
                        ?_ADC_GetConversion 00CE                           ??_USBDeviceAttach 00CE  
                          __size_of___lbdiv 0036                            __size_of___lbmod 0028  
                ??_MOTEapp_getModemResponse 00CF                                _selectedFont 00F5  
                          __size_of___lldiv 0076                             _oled_setDisplay 4B26  
          moteApp_clearBuffers@counter_1498 00CF            moteApp_clearBuffers@counter_1499 00D0  
                          __size_of___lwdiv 004A                            __size_of___lwmod 003E  
                 MOTEapp_handlerState@state 00CE                                  _ANSELAbits 000F5B  
                       __end_of_putUSBUSART 4B9A                                 _line_coding 00C5  
                                _ANSELCbits 000F5D                              ??_CDCTxService 00D5  
                              ??_modemSleep 00D3                            __size_of_cw_beep 0030  
                       ??_ADC_GetConversion 00D0                                ??_oled_clear 00DD  
                  modemResync@escapeCounter 00D3                    __size_of_moteApp_delayms 0028  
                 __end_of_moteApp_GoToSleep 56A2                     __size_of_USBDeviceTasks 00FE  
                           ___lwdiv@divisor 00D0                                    _appTimer 009B  
                           ___lwdiv@counter 00D2                                    __ptext10 4D34  
                                  __ptext11 4F7E                                    __ptext20 5504  
                                  __ptext12 6AF2                                    __ptext21 51B4  
                                  __ptext13 5636                                    __ptext30 4EE4  
                                  __ptext22 4E8A                                    __ptext14 4C74  
                                  __ptext31 4DB0                                    __ptext23 4A54  
                                  __ptext15 4AEC                                    __ptext40 578E  
                                  __ptext32 4A80                                    __ptext24 4C52  
                                  __ptext16 4B26                                    __ptext41 5568  
                                  __ptext33 4D0C                                    __ptext25 516A  
                                  __ptext17 6464                                    __ptext50 5EFA  
                                  __ptext42 4B66                                    __ptext34 4FEC  
                                  __ptext26 5026                                    __ptext18 4ADA  
                                  __ptext51 4B7E                                    __ptext43 4BF2  
                                  __ptext35 653C                                    __ptext27 7278  
                                  __ptext19 4B9A                                    __ptext60 4D86  
                                  __ptext52 5AA0                                    __ptext44 5718  
                                  __ptext36 509E                                    __ptext28 55CE  
                                  __ptext61 4E5E                                    __ptext53 4A30  
                                  __ptext45 4A74                                    __ptext37 4A34  
                                  __ptext29 5906                                    __ptext70 4E06  
                                  __ptext62 4C10                                    __ptext54 1004  
                                  __ptext46 4B12                                    __ptext38 4A9A  
                                  __ptext71 4AC8                                    __ptext63 4AA8  
                                  __ptext55 4F14                                    __ptext47 4BD4  
                                  __ptext39 4A4C                                    __ptext80 4BB6  
                                  __ptext72 4B3A                                    __ptext64 4A2C  
                                  __ptext56 4EB6                                    __ptext48 4A68  
                                  __ptext81 5060                                    __ptext73 4A44  
                                  __ptext65 4E32                                    __ptext57 68F0  
                                  __ptext49 4AB8                                    __ptext90 69F0  
                                  __ptext82 5E48                                    __ptext74 4AFE  
                                  __ptext66 4A28                                    __ptext58 5D00  
                                  __ptext91 7084                                    __ptext83 5446  
                                  __ptext67 4A8C                                    __ptext59 62B6  
                                  __ptext92 5120                                    __ptext84 661A  
                                  __ptext76 4A3E                                    __ptext68 524A  
                                  __ptext93 4FB4                                    __ptext85 5A12  
                                  __ptext77 67F2                                    __ptext69 4B50  
                                  __ptext94 52EA                                    __ptext86 5C62  
                                  __ptext78 638C                                    __ptext95 5BC4  
                                  __ptext87 5DA0                                    __ptext79 4C30  
                                  __ptext96 4F48                                    __ptext88 4D5C  
                                  __ptext97 598A                                    __ptext89 5804  
                                  __ptext98 5882                                    __ptext99 5298  
      __end_of_USBapp_CdcEmulatorInitialize 4FEC       __size_of_USBapp_CdcEmulatorInitialize 0038  
              _USBapp_CdcEmulatorInitialize 4FB4                                _SSP1CON1bits 000FC6  
                                  _hexToStr 4C96                          _service_pushbutton 51FE  
                         ??_TMR1_StartTimer 00CE                 DATAEE_WriteByte@GIEBitValue 00D0  
                               _OSCCON2bits 000FD2                            __size_of_strncmp 0068  
                               _modemResync 5504              __end_of_USBCtrlTrfSetupHandler 54A4  
                             __size_of_main 00BA                           ?_USBCtrlEPService 002E  
                __size_of_oled_writeCommand 000C                                  strncmp@len 00D2  
                       ?_service_pushbutton 002E                           ??_DATAEE_ReadByte 00CE  
                 __end_of_ADC_GetConversion 5060                    __size_of_CMP1_Initialize 0012  
                   __end_of_oled_displayOff 4AEC                          ??_USBCtrlEPService 004B  
                       _USBCtrlTrfInHandler 61E8                               ??_TMRapp_Tick 002E  
                        __end_of_modemSleep 4BB6                          __end_of_oled_clear 4B7E  
                                  _outPipes 0001                        _USBCtrlTrfOutHandler 5298  
                                  int$flags 005B                                    _usbState 00A5  
                 _USBCtrlEPAllowStatusStage 606A                 __size_of_Set_Column_Address 001E  
                         ??_TMR2_StartTimer 00CE          __end_of_INTERRUPT_InterruptManager 10AA  
                _INTERRUPT_InterruptManager 1008                                _SSP1STATbits 000FC7  
                               _sendCommand 4DB0                      ??_USBTransferOnePacket 00D2  
                        oled_clearRow@index 00DC                          _EUSART_FlushBuffer 4E8A  
              __end_of_USBapp_setrxByteFlag 4A44                                 _moteHandler 6EA4  
                          ??_TMR2_ReadTimer 00CE                        ??_service_pushbutton 00CE  
                 _USBDeferStatusStagePacket 001E                    CDCTxService@byte_to_send 00D8  
                                _INTCONbits 000FF2                 __end_of_USBapp_handlerState 4A54  
                      ?_USBCtrlTrfInHandler 002E                         ?_EUSART_FlushBuffer 002E  
               __size_of_ADC_TempConversion 0022               USBCtrlTrfTxService@byteToSend 002E  
                                  memset@p1 00CE                            ?_USBStallHandler 002E  
                  USBStdFeatureReqHandler@p 0048                           ?_Set_Page_Address 002E  
                  ??_MOTEapp_TimerBasedTask 00CE                                _responseData 0060  
             ?_USBapp_CdcEmulatorInitialize 002E                                    intlevel2 0000  
                               ??_oled_init 00DD                          ??_Set_Page_Address 00D0  
                    __size_of_USBDeviceInit 00D6     __end_of_USER_USB_CALLBACK_EVENT_HANDLER 516A  
  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 004A           ??_USER_USB_CALLBACK_EVENT_HANDLER 0041  
          ?_USER_USB_CALLBACK_EVENT_HANDLER 003B             _USER_USB_CALLBACK_EVENT_HANDLER 5120  
            moteJoiningProcess@messageReady 00E2                            ___lwmod@dividend 00CE  
              i2USBTransferOnePacket@handle 0033                            ___lldiv@dividend 002E  
                   ?_PIN_MANAGER_Initialize 002E                            ??_USBapp_Handler 00E0  
                          ??_TMRapp_Handler 00D3                        moteHandler@gotoSleep 01D0  
              __size_ofi2_EUSART_Initialize 002C                                   strncmp@s1 00CE  
                                 strncmp@s2 00D0                            ??_ADC_Initialize 00CE  
                      ??_EUSART_FlushBuffer 00CE                     __end_of_oled_setDisplay 4B3A  
                            _oled_putUint16 66FE                            _SPI_Exchange8bit 4AB8  
                i2USBTransferOnePacket@data 002F                                 _sleepTicker 00A4  
                    ??_USBConfigureEndpoint 002F                       ?_USBCtrlTrfOutHandler 002E  
                            _oled_putString 5568                                 _putUSBUSART 4B7E  
                        _EUSART_Receive_ISR 4CBC                           oled_clearRow@page 00DB  
                      __CFG_CPUDIV$NOCLKDIV 000000                         _USBCtrlTrfRxService 6BFC  
                        _USBWakeFromSuspend 4C30                     _USBStdFeatureReqHandler 7084  
   __end_of_USBapp_DeviceCdcEmulatorHandler 5FB0    __size_of_USBapp_DeviceCdcEmulatorHandler 00B6  
          ?_USBapp_DeviceCdcEmulatorHandler 002E           ??_USBapp_DeviceCdcEmulatorHandler 00DB  
           _USBapp_DeviceCdcEmulatorHandler 5EFA                          _USBCheckCDCRequest 5882  
                       _USBCtrlTrfTxService 6126                         __end_of_TMRapp_Tick 4A3E  
                     __end_of_oled_clearRow 4C10                                 _temperature 0089  
                       ?_EUSART_Receive_ISR 002E                              _oled_writeData 4A74  
                       ?_USBWakeFromSuspend 002E                                    strcmp@s1 00CE  
                                  strcmp@t0 00D4                                    strcmp@s2 00D0  
                                  strcmp@t1 00D6                                    strcmp@t2 00D5  
                          ___lldiv@quotient 0036                             ___lwmod@divisor 00D0  
                     ??_USBCtrlTrfInHandler 003F                       _USBAlternateInterface 00CC  
                           ___lwmod@counter 00D2                         ?_USBCheckCDCRequest 002E  
                __size_of_moteApp_GoToSleep 006C                   i2USBTransferOnePacket@dir 002E  
                 i2USBTransferOnePacket@len 0031                         USBEnableEndpoint@ep 0039  
                           _endpoint_number 0022                             _sendDataCommand 5B30  
                      ?_USBCtrlTrfRxService 002E                               ?_getsUSBUSART 00D5  
                  oled_putUint8@station_dot 00E0                          __CFG_FOSC$INTOSCIO 000000  
                        EUSART_Write@txData 00CE                __size_of_EUSART_Transmit_ISR 0028  
            __end_of_PIN_MANAGER_Initialize 5298                    ?_USBCtrlEPAllowDataStage 002E  
        __size_of_moteApp_add8bToDataBuffer 0060                        ?_USBCtrlTrfTxService 002E  
                         ??_moteApp_delayms 00D0                _USBStatusStageTimeoutCounter 001F  
                      ??_EUSART_Receive_ISR 002E                        ??_USBWakeFromSuspend 0043  
                    __end_of_oled_putUint16 67F2                  USBTransferOnePacket@handle 00D3  
                __size_of_ADC_GetConversion 003A                        __end_of_CDCTxService 69F0  
                           _TMR1_Initialize 4E32           moteJoiningProcess@joiningComplete 00E1  
                          ?_oled_displayOff 002E                       __end_of_oled_putUint8 53EA  
                    __end_of_oled_putString 55CE                        ??_USBCheckCDCRequest 002E  
                                _USB_CD_Ptr 782B  
