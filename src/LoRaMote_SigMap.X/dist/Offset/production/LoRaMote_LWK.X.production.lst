

Microchip Technology PIC18 PRO Macro Assembler V1.36 build -262312587 
                                                                                               Fri Apr 22 22:01:27 2016

Microchip Technology Omniscient Code Generator v1.36 (PRO mode) build 201601150325
     1                           	processor	18LF25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	text113,global,reloc=2,class=CODE,delta=1
   132                           	psect	text114,global,reloc=2,class=CODE,delta=1
   133                           	psect	text115,global,reloc=2,class=CODE,delta=1
   134                           	psect	text116,global,reloc=2,class=CODE,delta=1
   135                           	psect	text117,global,reloc=2,class=CODE,delta=1
   136                           	psect	text118,global,reloc=2,class=CODE,delta=1
   137                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   140                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   141                           	dabs	1,0x400,48,_BDT
   142                           	dabs	1,0x500,64,_cdc_data_tx
   143                           	dabs	1,0x438,8,_CtrlTrfData
   144                           	dabs	1,0x430,8,_SetupPkt
   145                           	dabs	1,0x540,64,_cdc_data_rx
   146  0000                     
   147                           	psect	idataBANK0
   148  001004                     __pidataBANK0:
   149                           	opt stack 0
   150                           
   151                           ;initializer for _moteState
   152  001004  01                 	db	1
   153                           
   154                           ;initializer for moteJoiningProcess@float_val
   155  001005  FF                 	db	255
   156                           
   157                           	psect	idataBANK1
   158  003AF6                     __pidataBANK1:
   159                           	opt stack 0
   160                           
   161                           ;initializer for _selectedFont
   162  003AF6  99                 	db	low _OledFont0
   163  003AF7  77                 	db	high _OledFont0
   164                           
   165                           	psect	mediumconst
   166  00777E                     __pmediumconst:
   167                           	opt stack 0
   168  00777E  00                 	db	0
   169  00777F                     _dpowers:
   170                           	opt stack 0
   171  00777F  0001               	dw	1
   172  007781  000A               	dw	10
   173  007783  0064               	dw	100
   174  007785  03E8               	dw	1000
   175  007787  2710               	dw	10000
   176  007789                     __end_of_dpowers:
   177                           	opt stack 0
   178  007789                     _hexpowers:
   179                           	opt stack 0
   180  007789  0001               	dw	1
   181  00778B  0010               	dw	16
   182  00778D  0100               	dw	256
   183  00778F  1000               	dw	4096
   184  007791                     __end_of_hexpowers:
   185                           	opt stack 0
   186  007791                     _USB_SD_Ptr:
   187                           	opt stack 0
   188  007791  56                 	db	low _sd000
   189  007792  7B                 	db	high _sd000
   190  007793  DC                 	db	low _sd001
   191  007794  7A                 	db	high _sd001
   192  007795  10                 	db	low _sd002
   193  007796  7B                 	db	high _sd002
   194  007797                     __end_of_USB_SD_Ptr:
   195                           	opt stack 0
   196  007797                     _USB_CD_Ptr:
   197                           	opt stack 0
   198  007797  99                 	db	low _configDescriptor1
   199  007798  7A                 	db	high _configDescriptor1
   200  007799                     __end_of_USB_CD_Ptr:
   201                           	opt stack 0
   202  007799                     _OledFont0:
   203                           	opt stack 0
   204  007799  00                 	db	0
   205  00779A  00                 	db	0
   206  00779B  00                 	db	0
   207  00779C  00                 	db	0
   208  00779D  00                 	db	0
   209  00779E  00                 	db	0
   210  00779F  00                 	db	0
   211  0077A0  00                 	db	0
   212  0077A1  00                 	db	0
   213  0077A2  00                 	db	0
   214  0077A3  00                 	db	0
   215  0077A4  5F                 	db	95
   216  0077A5  00                 	db	0
   217  0077A6  00                 	db	0
   218  0077A7  00                 	db	0
   219  0077A8  00                 	db	0
   220  0077A9  00                 	db	0
   221  0077AA  00                 	db	0
   222  0077AB  03                 	db	3
   223  0077AC  00                 	db	0
   224  0077AD  03                 	db	3
   225  0077AE  00                 	db	0
   226  0077AF  00                 	db	0
   227  0077B0  00                 	db	0
   228  0077B1  64                 	db	100
   229  0077B2  3C                 	db	60
   230  0077B3  26                 	db	38
   231  0077B4  64                 	db	100
   232  0077B5  3C                 	db	60
   233  0077B6  26                 	db	38
   234  0077B7  24                 	db	36
   235  0077B8  00                 	db	0
   236  0077B9  26                 	db	38
   237  0077BA  49                 	db	73
   238  0077BB  49                 	db	73
   239  0077BC  7F                 	db	127
   240  0077BD  49                 	db	73
   241  0077BE  49                 	db	73
   242  0077BF  32                 	db	50
   243  0077C0  00                 	db	0
   244  0077C1  42                 	db	66
   245  0077C2  25                 	db	37
   246  0077C3  12                 	db	18
   247  0077C4  08                 	db	8
   248  0077C5  24                 	db	36
   249  0077C6  52                 	db	82
   250  0077C7  21                 	db	33
   251  0077C8  00                 	db	0
   252  0077C9  20                 	db	32
   253  0077CA  50                 	db	80
   254  0077CB  4E                 	db	78
   255  0077CC  55                 	db	85
   256  0077CD  22                 	db	34
   257  0077CE  58                 	db	88
   258  0077CF  28                 	db	40
   259  0077D0  00                 	db	0
   260  0077D1  00                 	db	0
   261  0077D2  00                 	db	0
   262  0077D3  00                 	db	0
   263  0077D4  03                 	db	3
   264  0077D5  00                 	db	0
   265  0077D6  00                 	db	0
   266  0077D7  00                 	db	0
   267  0077D8  00                 	db	0
   268  0077D9  00                 	db	0
   269  0077DA  00                 	db	0
   270  0077DB  1C                 	db	28
   271  0077DC  22                 	db	34
   272  0077DD  41                 	db	65
   273  0077DE  00                 	db	0
   274  0077DF  00                 	db	0
   275  0077E0  00                 	db	0
   276  0077E1  00                 	db	0
   277  0077E2  00                 	db	0
   278  0077E3  00                 	db	0
   279  0077E4  41                 	db	65
   280  0077E5  22                 	db	34
   281  0077E6  1C                 	db	28
   282  0077E7  00                 	db	0
   283  0077E8  00                 	db	0
   284  0077E9  00                 	db	0
   285  0077EA  15                 	db	21
   286  0077EB  15                 	db	21
   287  0077EC  0E                 	db	14
   288  0077ED  0E                 	db	14
   289  0077EE  15                 	db	21
   290  0077EF  15                 	db	21
   291  0077F0  00                 	db	0
   292  0077F1  00                 	db	0
   293  0077F2  08                 	db	8
   294  0077F3  08                 	db	8
   295  0077F4  3E                 	db	62
   296  0077F5  08                 	db	8
   297  0077F6  08                 	db	8
   298  0077F7  00                 	db	0
   299  0077F8  00                 	db	0
   300  0077F9  00                 	db	0
   301  0077FA  00                 	db	0
   302  0077FB  00                 	db	0
   303  0077FC  50                 	db	80
   304  0077FD  30                 	db	48
   305  0077FE  00                 	db	0
   306  0077FF  00                 	db	0
   307  007800  00                 	db	0
   308  007801  00                 	db	0
   309  007802  08                 	db	8
   310  007803  08                 	db	8
   311  007804  08                 	db	8
   312  007805  08                 	db	8
   313  007806  08                 	db	8
   314  007807  00                 	db	0
   315  007808  00                 	db	0
   316  007809  00                 	db	0
   317  00780A  00                 	db	0
   318  00780B  00                 	db	0
   319  00780C  40                 	db	64
   320  00780D  00                 	db	0
   321  00780E  00                 	db	0
   322  00780F  00                 	db	0
   323  007810  00                 	db	0
   324  007811  40                 	db	64
   325  007812  20                 	db	32
   326  007813  10                 	db	16
   327  007814  08                 	db	8
   328  007815  04                 	db	4
   329  007816  02                 	db	2
   330  007817  01                 	db	1
   331  007818  00                 	db	0
   332  007819  00                 	db	0
   333  00781A  3E                 	db	62
   334  00781B  41                 	db	65
   335  00781C  41                 	db	65
   336  00781D  41                 	db	65
   337  00781E  3E                 	db	62
   338  00781F  00                 	db	0
   339  007820  00                 	db	0
   340  007821  00                 	db	0
   341  007822  00                 	db	0
   342  007823  41                 	db	65
   343  007824  7F                 	db	127
   344  007825  40                 	db	64
   345  007826  00                 	db	0
   346  007827  00                 	db	0
   347  007828  00                 	db	0
   348  007829  00                 	db	0
   349  00782A  42                 	db	66
   350  00782B  61                 	db	97
   351  00782C  51                 	db	81
   352  00782D  49                 	db	73
   353  00782E  6E                 	db	110
   354  00782F  00                 	db	0
   355  007830  00                 	db	0
   356  007831  00                 	db	0
   357  007832  22                 	db	34
   358  007833  41                 	db	65
   359  007834  49                 	db	73
   360  007835  49                 	db	73
   361  007836  36                 	db	54
   362  007837  00                 	db	0
   363  007838  00                 	db	0
   364  007839  00                 	db	0
   365  00783A  18                 	db	24
   366  00783B  14                 	db	20
   367  00783C  12                 	db	18
   368  00783D  7F                 	db	127
   369  00783E  10                 	db	16
   370  00783F  00                 	db	0
   371  007840  00                 	db	0
   372  007841  00                 	db	0
   373  007842  27                 	db	39
   374  007843  49                 	db	73
   375  007844  49                 	db	73
   376  007845  49                 	db	73
   377  007846  71                 	db	113
   378  007847  00                 	db	0
   379  007848  00                 	db	0
   380  007849  00                 	db	0
   381  00784A  3C                 	db	60
   382  00784B  4A                 	db	74
   383  00784C  49                 	db	73
   384  00784D  48                 	db	72
   385  00784E  70                 	db	112
   386  00784F  00                 	db	0
   387  007850  00                 	db	0
   388  007851  00                 	db	0
   389  007852  43                 	db	67
   390  007853  21                 	db	33
   391  007854  11                 	db	17
   392  007855  0D                 	db	13
   393  007856  03                 	db	3
   394  007857  00                 	db	0
   395  007858  00                 	db	0
   396  007859  00                 	db	0
   397  00785A  36                 	db	54
   398  00785B  49                 	db	73
   399  00785C  49                 	db	73
   400  00785D  49                 	db	73
   401  00785E  36                 	db	54
   402  00785F  00                 	db	0
   403  007860  00                 	db	0
   404  007861  00                 	db	0
   405  007862  06                 	db	6
   406  007863  09                 	db	9
   407  007864  49                 	db	73
   408  007865  29                 	db	41
   409  007866  1E                 	db	30
   410  007867  00                 	db	0
   411  007868  00                 	db	0
   412  007869  00                 	db	0
   413  00786A  00                 	db	0
   414  00786B  00                 	db	0
   415  00786C  12                 	db	18
   416  00786D  00                 	db	0
   417  00786E  00                 	db	0
   418  00786F  00                 	db	0
   419  007870  00                 	db	0
   420  007871  00                 	db	0
   421  007872  00                 	db	0
   422  007873  00                 	db	0
   423  007874  52                 	db	82
   424  007875  30                 	db	48
   425  007876  00                 	db	0
   426  007877  00                 	db	0
   427  007878  00                 	db	0
   428  007879  00                 	db	0
   429  00787A  00                 	db	0
   430  00787B  08                 	db	8
   431  00787C  14                 	db	20
   432  00787D  14                 	db	20
   433  00787E  22                 	db	34
   434  00787F  00                 	db	0
   435  007880  00                 	db	0
   436  007881  00                 	db	0
   437  007882  14                 	db	20
   438  007883  14                 	db	20
   439  007884  14                 	db	20
   440  007885  14                 	db	20
   441  007886  14                 	db	20
   442  007887  14                 	db	20
   443  007888  00                 	db	0
   444  007889  00                 	db	0
   445  00788A  00                 	db	0
   446  00788B  22                 	db	34
   447  00788C  14                 	db	20
   448  00788D  14                 	db	20
   449  00788E  08                 	db	8
   450  00788F  00                 	db	0
   451  007890  00                 	db	0
   452  007891  00                 	db	0
   453  007892  02                 	db	2
   454  007893  01                 	db	1
   455  007894  59                 	db	89
   456  007895  05                 	db	5
   457  007896  02                 	db	2
   458  007897  00                 	db	0
   459  007898  00                 	db	0
   460  007899  3E                 	db	62
   461  00789A  41                 	db	65
   462  00789B  5D                 	db	93
   463  00789C  55                 	db	85
   464  00789D  4D                 	db	77
   465  00789E  51                 	db	81
   466  00789F  2E                 	db	46
   467  0078A0  00                 	db	0
   468  0078A1  40                 	db	64
   469  0078A2  7C                 	db	124
   470  0078A3  4A                 	db	74
   471  0078A4  09                 	db	9
   472  0078A5  4A                 	db	74
   473  0078A6  7C                 	db	124
   474  0078A7  40                 	db	64
   475  0078A8  00                 	db	0
   476  0078A9  41                 	db	65
   477  0078AA  7F                 	db	127
   478  0078AB  49                 	db	73
   479  0078AC  49                 	db	73
   480  0078AD  49                 	db	73
   481  0078AE  49                 	db	73
   482  0078AF  36                 	db	54
   483  0078B0  00                 	db	0
   484  0078B1  1C                 	db	28
   485  0078B2  22                 	db	34
   486  0078B3  41                 	db	65
   487  0078B4  41                 	db	65
   488  0078B5  41                 	db	65
   489  0078B6  41                 	db	65
   490  0078B7  22                 	db	34
   491  0078B8  00                 	db	0
   492  0078B9  41                 	db	65
   493  0078BA  7F                 	db	127
   494  0078BB  41                 	db	65
   495  0078BC  41                 	db	65
   496  0078BD  41                 	db	65
   497  0078BE  22                 	db	34
   498  0078BF  1C                 	db	28
   499  0078C0  00                 	db	0
   500  0078C1  41                 	db	65
   501  0078C2  7F                 	db	127
   502  0078C3  49                 	db	73
   503  0078C4  49                 	db	73
   504  0078C5  5D                 	db	93
   505  0078C6  41                 	db	65
   506  0078C7  63                 	db	99
   507  0078C8  00                 	db	0
   508  0078C9  41                 	db	65
   509  0078CA  7F                 	db	127
   510  0078CB  49                 	db	73
   511  0078CC  09                 	db	9
   512  0078CD  1D                 	db	29
   513  0078CE  01                 	db	1
   514  0078CF  03                 	db	3
   515  0078D0  00                 	db	0
   516  0078D1  1C                 	db	28
   517  0078D2  22                 	db	34
   518  0078D3  41                 	db	65
   519  0078D4  49                 	db	73
   520  0078D5  49                 	db	73
   521  0078D6  3A                 	db	58
   522  0078D7  08                 	db	8
   523  0078D8  00                 	db	0
   524  0078D9  41                 	db	65
   525  0078DA  7F                 	db	127
   526  0078DB  08                 	db	8
   527  0078DC  08                 	db	8
   528  0078DD  08                 	db	8
   529  0078DE  7F                 	db	127
   530  0078DF  41                 	db	65
   531  0078E0  00                 	db	0
   532  0078E1  00                 	db	0
   533  0078E2  41                 	db	65
   534  0078E3  41                 	db	65
   535  0078E4  7F                 	db	127
   536  0078E5  41                 	db	65
   537  0078E6  41                 	db	65
   538  0078E7  00                 	db	0
   539  0078E8  00                 	db	0
   540  0078E9  30                 	db	48
   541  0078EA  40                 	db	64
   542  0078EB  41                 	db	65
   543  0078EC  41                 	db	65
   544  0078ED  3F                 	db	63
   545  0078EE  01                 	db	1
   546  0078EF  01                 	db	1
   547  0078F0  00                 	db	0
   548  0078F1  41                 	db	65
   549  0078F2  7F                 	db	127
   550  0078F3  08                 	db	8
   551  0078F4  0C                 	db	12
   552  0078F5  12                 	db	18
   553  0078F6  61                 	db	97
   554  0078F7  41                 	db	65
   555  0078F8  00                 	db	0
   556  0078F9  41                 	db	65
   557  0078FA  7F                 	db	127
   558  0078FB  41                 	db	65
   559  0078FC  40                 	db	64
   560  0078FD  40                 	db	64
   561  0078FE  40                 	db	64
   562  0078FF  60                 	db	96
   563  007900  00                 	db	0
   564  007901  41                 	db	65
   565  007902  7F                 	db	127
   566  007903  42                 	db	66
   567  007904  0C                 	db	12
   568  007905  42                 	db	66
   569  007906  7F                 	db	127
   570  007907  41                 	db	65
   571  007908  00                 	db	0
   572  007909  41                 	db	65
   573  00790A  7F                 	db	127
   574  00790B  42                 	db	66
   575  00790C  0C                 	db	12
   576  00790D  11                 	db	17
   577  00790E  7F                 	db	127
   578  00790F  01                 	db	1
   579  007910  00                 	db	0
   580  007911  1C                 	db	28
   581  007912  22                 	db	34
   582  007913  41                 	db	65
   583  007914  41                 	db	65
   584  007915  41                 	db	65
   585  007916  22                 	db	34
   586  007917  1C                 	db	28
   587  007918  00                 	db	0
   588  007919  41                 	db	65
   589  00791A  7F                 	db	127
   590  00791B  49                 	db	73
   591  00791C  09                 	db	9
   592  00791D  09                 	db	9
   593  00791E  09                 	db	9
   594  00791F  06                 	db	6
   595  007920  00                 	db	0
   596  007921  0C                 	db	12
   597  007922  12                 	db	18
   598  007923  21                 	db	33
   599  007924  21                 	db	33
   600  007925  61                 	db	97
   601  007926  52                 	db	82
   602  007927  4C                 	db	76
   603  007928  00                 	db	0
   604  007929  41                 	db	65
   605  00792A  7F                 	db	127
   606  00792B  09                 	db	9
   607  00792C  09                 	db	9
   608  00792D  19                 	db	25
   609  00792E  69                 	db	105
   610  00792F  46                 	db	70
   611  007930  00                 	db	0
   612  007931  66                 	db	102
   613  007932  49                 	db	73
   614  007933  49                 	db	73
   615  007934  49                 	db	73
   616  007935  49                 	db	73
   617  007936  49                 	db	73
   618  007937  33                 	db	51
   619  007938  00                 	db	0
   620  007939  03                 	db	3
   621  00793A  01                 	db	1
   622  00793B  41                 	db	65
   623  00793C  7F                 	db	127
   624  00793D  41                 	db	65
   625  00793E  01                 	db	1
   626  00793F  03                 	db	3
   627  007940  00                 	db	0
   628  007941  01                 	db	1
   629  007942  3F                 	db	63
   630  007943  41                 	db	65
   631  007944  40                 	db	64
   632  007945  41                 	db	65
   633  007946  3F                 	db	63
   634  007947  01                 	db	1
   635  007948  00                 	db	0
   636  007949  01                 	db	1
   637  00794A  0F                 	db	15
   638  00794B  31                 	db	49
   639  00794C  40                 	db	64
   640  00794D  31                 	db	49
   641  00794E  0F                 	db	15
   642  00794F  01                 	db	1
   643  007950  00                 	db	0
   644  007951  01                 	db	1
   645  007952  1F                 	db	31
   646  007953  61                 	db	97
   647  007954  14                 	db	20
   648  007955  61                 	db	97
   649  007956  1F                 	db	31
   650  007957  01                 	db	1
   651  007958  00                 	db	0
   652  007959  41                 	db	65
   653  00795A  41                 	db	65
   654  00795B  36                 	db	54
   655  00795C  08                 	db	8
   656  00795D  36                 	db	54
   657  00795E  41                 	db	65
   658  00795F  41                 	db	65
   659  007960  00                 	db	0
   660  007961  01                 	db	1
   661  007962  03                 	db	3
   662  007963  44                 	db	68
   663  007964  78                 	db	120
   664  007965  44                 	db	68
   665  007966  03                 	db	3
   666  007967  01                 	db	1
   667  007968  00                 	db	0
   668  007969  43                 	db	67
   669  00796A  61                 	db	97
   670  00796B  51                 	db	81
   671  00796C  49                 	db	73
   672  00796D  45                 	db	69
   673  00796E  43                 	db	67
   674  00796F  61                 	db	97
   675  007970  00                 	db	0
   676  007971  00                 	db	0
   677  007972  00                 	db	0
   678  007973  7F                 	db	127
   679  007974  41                 	db	65
   680  007975  41                 	db	65
   681  007976  00                 	db	0
   682  007977  00                 	db	0
   683  007978  00                 	db	0
   684  007979  01                 	db	1
   685  00797A  02                 	db	2
   686  00797B  04                 	db	4
   687  00797C  08                 	db	8
   688  00797D  10                 	db	16
   689  00797E  20                 	db	32
   690  00797F  40                 	db	64
   691  007980  00                 	db	0
   692  007981  00                 	db	0
   693  007982  00                 	db	0
   694  007983  41                 	db	65
   695  007984  41                 	db	65
   696  007985  7F                 	db	127
   697  007986  00                 	db	0
   698  007987  00                 	db	0
   699  007988  00                 	db	0
   700  007989  00                 	db	0
   701  00798A  04                 	db	4
   702  00798B  02                 	db	2
   703  00798C  01                 	db	1
   704  00798D  01                 	db	1
   705  00798E  02                 	db	2
   706  00798F  04                 	db	4
   707  007990  00                 	db	0
   708  007991  00                 	db	0
   709  007992  40                 	db	64
   710  007993  40                 	db	64
   711  007994  40                 	db	64
   712  007995  40                 	db	64
   713  007996  40                 	db	64
   714  007997  40                 	db	64
   715  007998  00                 	db	0
   716  007999  00                 	db	0
   717  00799A  01                 	db	1
   718  00799B  02                 	db	2
   719  00799C  00                 	db	0
   720  00799D  00                 	db	0
   721  00799E  00                 	db	0
   722  00799F  00                 	db	0
   723  0079A0  00                 	db	0
   724  0079A1  00                 	db	0
   725  0079A2  34                 	db	52
   726  0079A3  4A                 	db	74
   727  0079A4  4A                 	db	74
   728  0079A5  4A                 	db	74
   729  0079A6  3C                 	db	60
   730  0079A7  40                 	db	64
   731  0079A8  00                 	db	0
   732  0079A9  00                 	db	0
   733  0079AA  41                 	db	65
   734  0079AB  3F                 	db	63
   735  0079AC  48                 	db	72
   736  0079AD  48                 	db	72
   737  0079AE  48                 	db	72
   738  0079AF  30                 	db	48
   739  0079B0  00                 	db	0
   740  0079B1  00                 	db	0
   741  0079B2  3C                 	db	60
   742  0079B3  42                 	db	66
   743  0079B4  42                 	db	66
   744  0079B5  42                 	db	66
   745  0079B6  24                 	db	36
   746  0079B7  00                 	db	0
   747  0079B8  00                 	db	0
   748  0079B9  00                 	db	0
   749  0079BA  30                 	db	48
   750  0079BB  48                 	db	72
   751  0079BC  48                 	db	72
   752  0079BD  49                 	db	73
   753  0079BE  3F                 	db	63
   754  0079BF  40                 	db	64
   755  0079C0  00                 	db	0
   756  0079C1  00                 	db	0
   757  0079C2  3C                 	db	60
   758  0079C3  4A                 	db	74
   759  0079C4  4A                 	db	74
   760  0079C5  4A                 	db	74
   761  0079C6  2C                 	db	44
   762  0079C7  00                 	db	0
   763  0079C8  00                 	db	0
   764  0079C9  00                 	db	0
   765  0079CA  00                 	db	0
   766  0079CB  48                 	db	72
   767  0079CC  7E                 	db	126
   768  0079CD  49                 	db	73
   769  0079CE  09                 	db	9
   770  0079CF  00                 	db	0
   771  0079D0  00                 	db	0
   772  0079D1  00                 	db	0
   773  0079D2  26                 	db	38
   774  0079D3  49                 	db	73
   775  0079D4  49                 	db	73
   776  0079D5  49                 	db	73
   777  0079D6  3F                 	db	63
   778  0079D7  01                 	db	1
   779  0079D8  00                 	db	0
   780  0079D9  41                 	db	65
   781  0079DA  7F                 	db	127
   782  0079DB  48                 	db	72
   783  0079DC  04                 	db	4
   784  0079DD  44                 	db	68
   785  0079DE  78                 	db	120
   786  0079DF  40                 	db	64
   787  0079E0  00                 	db	0
   788  0079E1  00                 	db	0
   789  0079E2  00                 	db	0
   790  0079E3  44                 	db	68
   791  0079E4  7D                 	db	125
   792  0079E5  40                 	db	64
   793  0079E6  00                 	db	0
   794  0079E7  00                 	db	0
   795  0079E8  00                 	db	0
   796  0079E9  00                 	db	0
   797  0079EA  00                 	db	0
   798  0079EB  40                 	db	64
   799  0079EC  44                 	db	68
   800  0079ED  3D                 	db	61
   801  0079EE  00                 	db	0
   802  0079EF  00                 	db	0
   803  0079F0  00                 	db	0
   804  0079F1  41                 	db	65
   805  0079F2  7F                 	db	127
   806  0079F3  10                 	db	16
   807  0079F4  18                 	db	24
   808  0079F5  24                 	db	36
   809  0079F6  42                 	db	66
   810  0079F7  42                 	db	66
   811  0079F8  00                 	db	0
   812  0079F9  00                 	db	0
   813  0079FA  40                 	db	64
   814  0079FB  41                 	db	65
   815  0079FC  7F                 	db	127
   816  0079FD  40                 	db	64
   817  0079FE  40                 	db	64
   818  0079FF  00                 	db	0
   819  007A00  00                 	db	0
   820  007A01  42                 	db	66
   821  007A02  7E                 	db	126
   822  007A03  02                 	db	2
   823  007A04  7C                 	db	124
   824  007A05  02                 	db	2
   825  007A06  7E                 	db	126
   826  007A07  40                 	db	64
   827  007A08  00                 	db	0
   828  007A09  42                 	db	66
   829  007A0A  7E                 	db	126
   830  007A0B  44                 	db	68
   831  007A0C  02                 	db	2
   832  007A0D  42                 	db	66
   833  007A0E  7C                 	db	124
   834  007A0F  40                 	db	64
   835  007A10  00                 	db	0
   836  007A11  00                 	db	0
   837  007A12  3C                 	db	60
   838  007A13  42                 	db	66
   839  007A14  42                 	db	66
   840  007A15  42                 	db	66
   841  007A16  3C                 	db	60
   842  007A17  00                 	db	0
   843  007A18  00                 	db	0
   844  007A19  00                 	db	0
   845  007A1A  41                 	db	65
   846  007A1B  7F                 	db	127
   847  007A1C  49                 	db	73
   848  007A1D  09                 	db	9
   849  007A1E  09                 	db	9
   850  007A1F  06                 	db	6
   851  007A20  00                 	db	0
   852  007A21  00                 	db	0
   853  007A22  06                 	db	6
   854  007A23  09                 	db	9
   855  007A24  09                 	db	9
   856  007A25  49                 	db	73
   857  007A26  7F                 	db	127
   858  007A27  41                 	db	65
   859  007A28  00                 	db	0
   860  007A29  00                 	db	0
   861  007A2A  42                 	db	66
   862  007A2B  7E                 	db	126
   863  007A2C  44                 	db	68
   864  007A2D  02                 	db	2
   865  007A2E  02                 	db	2
   866  007A2F  04                 	db	4
   867  007A30  00                 	db	0
   868  007A31  00                 	db	0
   869  007A32  64                 	db	100
   870  007A33  4A                 	db	74
   871  007A34  4A                 	db	74
   872  007A35  4A                 	db	74
   873  007A36  36                 	db	54
   874  007A37  00                 	db	0
   875  007A38  00                 	db	0
   876  007A39  00                 	db	0
   877  007A3A  04                 	db	4
   878  007A3B  3F                 	db	63
   879  007A3C  44                 	db	68
   880  007A3D  44                 	db	68
   881  007A3E  20                 	db	32
   882  007A3F  00                 	db	0
   883  007A40  00                 	db	0
   884  007A41  00                 	db	0
   885  007A42  02                 	db	2
   886  007A43  3E                 	db	62
   887  007A44  40                 	db	64
   888  007A45  40                 	db	64
   889  007A46  22                 	db	34
   890  007A47  7E                 	db	126
   891  007A48  40                 	db	64
   892  007A49  02                 	db	2
   893  007A4A  0E                 	db	14
   894  007A4B  32                 	db	50
   895  007A4C  40                 	db	64
   896  007A4D  32                 	db	50
   897  007A4E  0E                 	db	14
   898  007A4F  02                 	db	2
   899  007A50  00                 	db	0
   900  007A51  02                 	db	2
   901  007A52  1E                 	db	30
   902  007A53  62                 	db	98
   903  007A54  18                 	db	24
   904  007A55  62                 	db	98
   905  007A56  1E                 	db	30
   906  007A57  02                 	db	2
   907  007A58  00                 	db	0
   908  007A59  42                 	db	66
   909  007A5A  62                 	db	98
   910  007A5B  14                 	db	20
   911  007A5C  08                 	db	8
   912  007A5D  14                 	db	20
   913  007A5E  62                 	db	98
   914  007A5F  42                 	db	66
   915  007A60  00                 	db	0
   916  007A61  01                 	db	1
   917  007A62  43                 	db	67
   918  007A63  45                 	db	69
   919  007A64  38                 	db	56
   920  007A65  05                 	db	5
   921  007A66  03                 	db	3
   922  007A67  01                 	db	1
   923  007A68  00                 	db	0
   924  007A69  00                 	db	0
   925  007A6A  46                 	db	70
   926  007A6B  62                 	db	98
   927  007A6C  52                 	db	82
   928  007A6D  4A                 	db	74
   929  007A6E  46                 	db	70
   930  007A6F  62                 	db	98
   931  007A70  00                 	db	0
   932  007A71  00                 	db	0
   933  007A72  00                 	db	0
   934  007A73  08                 	db	8
   935  007A74  36                 	db	54
   936  007A75  41                 	db	65
   937  007A76  00                 	db	0
   938  007A77  00                 	db	0
   939  007A78  00                 	db	0
   940  007A79  00                 	db	0
   941  007A7A  00                 	db	0
   942  007A7B  00                 	db	0
   943  007A7C  7F                 	db	127
   944  007A7D  00                 	db	0
   945  007A7E  00                 	db	0
   946  007A7F  00                 	db	0
   947  007A80  00                 	db	0
   948  007A81  00                 	db	0
   949  007A82  00                 	db	0
   950  007A83  00                 	db	0
   951  007A84  41                 	db	65
   952  007A85  36                 	db	54
   953  007A86  08                 	db	8
   954  007A87  00                 	db	0
   955  007A88  00                 	db	0
   956  007A89  00                 	db	0
   957  007A8A  18                 	db	24
   958  007A8B  08                 	db	8
   959  007A8C  08                 	db	8
   960  007A8D  10                 	db	16
   961  007A8E  10                 	db	16
   962  007A8F  18                 	db	24
   963  007A90  00                 	db	0
   964  007A91  AA                 	db	170
   965  007A92  55                 	db	85
   966  007A93  AA                 	db	170
   967  007A94  55                 	db	85
   968  007A95  AA                 	db	170
   969  007A96  55                 	db	85
   970  007A97  AA                 	db	170
   971  007A98  55                 	db	85
   972  007A99                     __end_of_OledFont0:
   973                           	opt stack 0
   974  007A99                     _configDescriptor1:
   975                           	opt stack 0
   976  007A99  09                 	db	9
   977  007A9A  02                 	db	2
   978  007A9B  43                 	db	67
   979  007A9C  00                 	db	0
   980  007A9D  02                 	db	2
   981  007A9E  01                 	db	1
   982  007A9F  00                 	db	0
   983  007AA0  C0                 	db	192
   984  007AA1  32                 	db	50
   985  007AA2  09                 	db	9
   986  007AA3  04                 	db	4
   987  007AA4  00                 	db	0
   988  007AA5  00                 	db	0
   989  007AA6  01                 	db	1
   990  007AA7  02                 	db	2
   991  007AA8  02                 	db	2
   992  007AA9  01                 	db	1
   993  007AAA  00                 	db	0
   994  007AAB  05                 	db	5
   995  007AAC  24                 	db	36
   996  007AAD  00                 	db	0
   997  007AAE  10                 	db	16
   998  007AAF  01                 	db	1
   999  007AB0  04                 	db	4
  1000  007AB1  24                 	db	36
  1001  007AB2  02                 	db	2
  1002  007AB3  02                 	db	2
  1003  007AB4  05                 	db	5
  1004  007AB5  24                 	db	36
  1005  007AB6  06                 	db	6
  1006  007AB7  00                 	db	0
  1007  007AB8  01                 	db	1
  1008  007AB9  05                 	db	5
  1009  007ABA  24                 	db	36
  1010  007ABB  01                 	db	1
  1011  007ABC  00                 	db	0
  1012  007ABD  01                 	db	1
  1013  007ABE  07                 	db	7
  1014  007ABF  05                 	db	5
  1015  007AC0  81                 	db	129
  1016  007AC1  03                 	db	3
  1017  007AC2  08                 	db	8
  1018  007AC3  00                 	db	0
  1019  007AC4  02                 	db	2
  1020  007AC5  09                 	db	9
  1021  007AC6  04                 	db	4
  1022  007AC7  01                 	db	1
  1023  007AC8  00                 	db	0
  1024  007AC9  02                 	db	2
  1025  007ACA  0A                 	db	10
  1026  007ACB  00                 	db	0
  1027  007ACC  00                 	db	0
  1028  007ACD  00                 	db	0
  1029  007ACE  07                 	db	7
  1030  007ACF  05                 	db	5
  1031  007AD0  02                 	db	2
  1032  007AD1  02                 	db	2
  1033  007AD2  40                 	db	64
  1034  007AD3  00                 	db	0
  1035  007AD4  00                 	db	0
  1036  007AD5  07                 	db	7
  1037  007AD6  05                 	db	5
  1038  007AD7  82                 	db	130
  1039  007AD8  02                 	db	2
  1040  007AD9  40                 	db	64
  1041  007ADA  00                 	db	0
  1042  007ADB  00                 	db	0
  1043  007ADC                     __end_of_configDescriptor1:
  1044                           	opt stack 0
  1045  007ADC                     _sd001:
  1046                           	opt stack 0
  1047  007ADC  34                 	db	52
  1048  007ADD  03                 	db	3
  1049  007ADE  004D               	dw	77
  1050  007AE0  0069               	dw	105
  1051  007AE2  0063               	dw	99
  1052  007AE4  0072               	dw	114
  1053  007AE6  006F               	dw	111
  1054  007AE8  0063               	dw	99
  1055  007AEA  0068               	dw	104
  1056  007AEC  0069               	dw	105
  1057  007AEE  0070               	dw	112
  1058  007AF0  0020               	dw	32
  1059  007AF2  0054               	dw	84
  1060  007AF4  0065               	dw	101
  1061  007AF6  0063               	dw	99
  1062  007AF8  0068               	dw	104
  1063  007AFA  006E               	dw	110
  1064  007AFC  006F               	dw	111
  1065  007AFE  006C               	dw	108
  1066  007B00  006F               	dw	111
  1067  007B02  0067               	dw	103
  1068  007B04  0079               	dw	121
  1069  007B06  0020               	dw	32
  1070  007B08  0049               	dw	73
  1071  007B0A  006E               	dw	110
  1072  007B0C  0063               	dw	99
  1073  007B0E  002E               	dw	46
  1074  007B10                     __end_of_sd001:
  1075                           	opt stack 0
  1076  007B10                     _sd002:
  1077                           	opt stack 0
  1078  007B10  34                 	db	52
  1079  007B11  03                 	db	3
  1080  007B12  0043               	dw	67
  1081  007B14  0044               	dw	68
  1082  007B16  0043               	dw	67
  1083  007B18  0020               	dw	32
  1084  007B1A  0052               	dw	82
  1085  007B1C  0053               	dw	83
  1086  007B1E  002D               	dw	45
  1087  007B20  0032               	dw	50
  1088  007B22  0033               	dw	51
  1089  007B24  0032               	dw	50
  1090  007B26  0020               	dw	32
  1091  007B28  0045               	dw	69
  1092  007B2A  006D               	dw	109
  1093  007B2C  0075               	dw	117
  1094  007B2E  006C               	dw	108
  1095  007B30  0061               	dw	97
  1096  007B32  0074               	dw	116
  1097  007B34  0069               	dw	105
  1098  007B36  006F               	dw	111
  1099  007B38  006E               	dw	110
  1100  007B3A  0020               	dw	32
  1101  007B3C  0044               	dw	68
  1102  007B3E  0065               	dw	101
  1103  007B40  006D               	dw	109
  1104  007B42  006F               	dw	111
  1105  007B44                     __end_of_sd002:
  1106                           	opt stack 0
  1107  007B44                     _device_dsc:
  1108                           	opt stack 0
  1109  007B44  12                 	db	18
  1110  007B45  01                 	db	1
  1111  007B46  0200               	dw	512
  1112  007B48  02                 	db	2
  1113  007B49  00                 	db	0
  1114  007B4A  00                 	db	0
  1115  007B4B  08                 	db	8
  1116  007B4C  04D8               	dw	1240
  1117  007B4E  000A               	dw	10
  1118  007B50  0100               	dw	256
  1119  007B52  01                 	db	1
  1120  007B53  02                 	db	2
  1121  007B54  00                 	db	0
  1122  007B55  01                 	db	1
  1123  007B56                     __end_of_device_dsc:
  1124                           	opt stack 0
  1125  007B56                     _sd000:
  1126                           	opt stack 0
  1127  007B56  04                 	db	4
  1128  007B57  03                 	db	3
  1129  007B58  0409               	dw	1033
  1130  007B5A                     __end_of_sd000:
  1131                           	opt stack 0
  1132  0000                     _ANSELAbits	set	3931
  1133  0000                     _ANSELCbits	set	3933
  1134  0000                     _ACTCON	set	4021
  1135  0000                     _ADCON0	set	4034
  1136  0000                     _ADCON0bits	set	4034
  1137  0000                     _ADCON1	set	4033
  1138  0000                     _ADCON2	set	4032
  1139  0000                     _ADRESH	set	4036
  1140  0000                     _ADRESL	set	4035
  1141  0000                     _BAUDCON	set	4024
  1142  0000                     _CM1CON0	set	3992
  1143  0000                     _CM2CON1bits	set	3994
  1144  0000                     _EEADR	set	4009
  1145  0000                     _EECON1bits	set	4006
  1146  0000                     _EECON2	set	4007
  1147  0000                     _EEDATA	set	4008
  1148  0000                     _INTCONbits	set	4082
  1149  0000                     _IOCCbits	set	3975
  1150  0000                     _IPR3bits	set	4005
  1151  0000                     _LATAbits	set	3977
  1152  0000                     _LATBbits	set	3978
  1153  0000                     _LATCbits	set	3979
  1154  0000                     _OSCCON	set	4051
  1155  0000                     _OSCCON2	set	4050
  1156  0000                     _OSCCON2bits	set	4050
  1157  0000                     _OSCTUNE	set	3995
  1158  0000                     _PIE1bits	set	3997
  1159  0000                     _PIE2bits	set	4000
  1160  0000                     _PIE3bits	set	4003
  1161  0000                     _PIR1bits	set	3998
  1162  0000                     _PIR2bits	set	4001
  1163  0000                     _PIR3bits	set	4004
  1164  0000                     _PORTAbits	set	3968
  1165  0000                     _PORTBbits	set	3969
  1166  0000                     _PORTCbits	set	3970
  1167  0000                     _PR2	set	4027
  1168  0000                     _RCONbits	set	4048
  1169  0000                     _RCREG	set	4014
  1170  0000                     _RCSTA	set	4011
  1171  0000                     _RCSTAbits	set	4011
  1172  0000                     _SPBRG	set	4015
  1173  0000                     _SPBRGH	set	4016
  1174  0000                     _SSP1ADD	set	4040
  1175  0000                     _SSP1CON1	set	4038
  1176  0000                     _SSP1CON1bits	set	4038
  1177  0000                     _SSP1STAT	set	4039
  1178  0000                     _SSP1STATbits	set	4039
  1179  0000                     _SSPBUF	set	4041
  1180  0000                     _T1CON	set	4045
  1181  0000                     _T1CONbits	set	4045
  1182  0000                     _T1GCON	set	4044
  1183  0000                     _T2CON	set	4026
  1184  0000                     _T2CONbits	set	4026
  1185  0000                     _TMR1H	set	4047
  1186  0000                     _TMR1L	set	4046
  1187  0000                     _TMR2	set	4028
  1188  0000                     _TRISAbits	set	3986
  1189  0000                     _TRISBbits	set	3987
  1190  0000                     _TRISCbits	set	3988
  1191  0000                     _TXREG	set	4013
  1192  0000                     _TXSTA	set	4012
  1193  0000                     _TXSTAbits	set	4012
  1194  0000                     _UADDR	set	3939
  1195  0000                     _UCFG	set	3938
  1196  0000                     _UCON	set	3936
  1197  0000                     _UCONbits	set	3936
  1198  0000                     _UEIE	set	3942
  1199  0000                     _UEIR	set	3943
  1200  0000                     _UEP0bits	set	3946
  1201  0000                     _UIE	set	3940
  1202  0000                     _UIEbits	set	3940
  1203  0000                     _UIR	set	3941
  1204  0000                     _UIRbits	set	3941
  1205  0000                     _USTAT	set	3937
  1206  0000                     _VREFCON0	set	3965
  1207  0000                     _UEP0	set	3946
  1208  0000                     _UEP1	set	3947
  1209  0000                     _CKE	set	32318
  1210  0000                     _CKP	set	32308
  1211  0000                     _GIE	set	32663
  1212  0000                     _PEIE	set	32662
  1213  007B5A                     STR_70:
  1214  007B5A  72                 	db	114	;'r'
  1215  007B5B  61                 	db	97	;'a'
  1216  007B5C  64                 	db	100	;'d'
  1217  007B5D  69                 	db	105	;'i'
  1218  007B5E  6F                 	db	111	;'o'
  1219  007B5F  20                 	db	32
  1220  007B60  74                 	db	116	;'t'
  1221  007B61  78                 	db	120	;'x'
  1222  007B62  20                 	db	32
  1223  007B63  41                 	db	65	;'A'
  1224  007B64  41                 	db	65	;'A'
  1225  007B65  25                 	db	37
  1226  007B66  30                 	db	48	;'0'
  1227  007B67  32                 	db	50	;'2'
  1228  007B68  58                 	db	88	;'X'
  1229  007B69  25                 	db	37
  1230  007B6A  30                 	db	48	;'0'
  1231  007B6B  32                 	db	50	;'2'
  1232  007B6C  58                 	db	88	;'X'
  1233  007B6D  25                 	db	37
  1234  007B6E  30                 	db	48	;'0'
  1235  007B6F  32                 	db	50	;'2'
  1236  007B70  58                 	db	88	;'X'
  1237  007B71  25                 	db	37
  1238  007B72  30                 	db	48	;'0'
  1239  007B73  32                 	db	50	;'2'
  1240  007B74  58                 	db	88	;'X'
  1241  007B75  25                 	db	37
  1242  007B76  30                 	db	48	;'0'
  1243  007B77  32                 	db	50	;'2'
  1244  007B78  58                 	db	88	;'X'
  1245  007B79  00                 	db	0
  1246  007B7A                     STR_103:
  1247  007B7A  73                 	db	115	;'s'
  1248  007B7B  79                 	db	121	;'y'
  1249  007B7C  73                 	db	115	;'s'
  1250  007B7D  20                 	db	32
  1251  007B7E  73                 	db	115	;'s'
  1252  007B7F  65                 	db	101	;'e'
  1253  007B80  74                 	db	116	;'t'
  1254  007B81  20                 	db	32
  1255  007B82  70                 	db	112	;'p'
  1256  007B83  69                 	db	105	;'i'
  1257  007B84  6E                 	db	110	;'n'
  1258  007B85  64                 	db	100	;'d'
  1259  007B86  69                 	db	105	;'i'
  1260  007B87  67                 	db	103	;'g'
  1261  007B88  20                 	db	32
  1262  007B89  47                 	db	71	;'G'
  1263  007B8A  50                 	db	80	;'P'
  1264  007B8B  49                 	db	73	;'I'
  1265  007B8C  4F                 	db	79	;'O'
  1266  007B8D  31                 	db	49	;'1'
  1267  007B8E  30                 	db	48	;'0'
  1268  007B8F  20                 	db	32
  1269  007B90  30                 	db	48	;'0'
  1270  007B91  0D                 	db	13
  1271  007B92  0A                 	db	10
  1272  007B93  00                 	db	0
  1273  007B94  73                 	db	115	;'s'
  1274  007B95  79                 	db	121	;'y'
  1275  007B96  73                 	db	115	;'s'
  1276  007B97  20                 	db	32
  1277  007B98  73                 	db	115	;'s'
  1278  007B99  65                 	db	101	;'e'
  1279  007B9A  74                 	db	116	;'t'
  1280  007B9B  20                 	db	32
  1281  007B9C  70                 	db	112	;'p'
  1282  007B9D  69                 	db	105	;'i'
  1283  007B9E  6E                 	db	110	;'n'
  1284  007B9F  64                 	db	100	;'d'
  1285  007BA0  69                 	db	105	;'i'
  1286  007BA1  67                 	db	103	;'g'
  1287  007BA2  20                 	db	32
  1288  007BA3  47                 	db	71	;'G'
  1289  007BA4  50                 	db	80	;'P'
  1290  007BA5  49                 	db	73	;'I'
  1291  007BA6  4F                 	db	79	;'O'
  1292  007BA7  31                 	db	49	;'1'
  1293  007BA8  31                 	db	49	;'1'
  1294  007BA9  20                 	db	32
  1295  007BAA  30                 	db	48	;'0'
  1296  007BAB  0D                 	db	13
  1297  007BAC  0A                 	db	10
  1298  007BAD  00                 	db	0
  1299  007BAE  73                 	db	115	;'s'
  1300  007BAF  79                 	db	121	;'y'
  1301  007BB0  73                 	db	115	;'s'
  1302  007BB1  20                 	db	32
  1303  007BB2  73                 	db	115	;'s'
  1304  007BB3  65                 	db	101	;'e'
  1305  007BB4  74                 	db	116	;'t'
  1306  007BB5  20                 	db	32
  1307  007BB6  70                 	db	112	;'p'
  1308  007BB7  69                 	db	105	;'i'
  1309  007BB8  6E                 	db	110	;'n'
  1310  007BB9  64                 	db	100	;'d'
  1311  007BBA  69                 	db	105	;'i'
  1312  007BBB  67                 	db	103	;'g'
  1313  007BBC  20                 	db	32
  1314  007BBD  47                 	db	71	;'G'
  1315  007BBE  50                 	db	80	;'P'
  1316  007BBF  49                 	db	73	;'I'
  1317  007BC0  4F                 	db	79	;'O'
  1318  007BC1  31                 	db	49	;'1'
  1319  007BC2  30                 	db	48	;'0'
  1320  007BC3  20                 	db	32
  1321  007BC4  31                 	db	49	;'1'
  1322  007BC5  0D                 	db	13
  1323  007BC6  0A                 	db	10
  1324  007BC7  00                 	db	0
  1325  007BC8  73                 	db	115	;'s'
  1326  007BC9  79                 	db	121	;'y'
  1327  007BCA  73                 	db	115	;'s'
  1328  007BCB  20                 	db	32
  1329  007BCC  73                 	db	115	;'s'
  1330  007BCD  65                 	db	101	;'e'
  1331  007BCE  74                 	db	116	;'t'
  1332  007BCF  20                 	db	32
  1333  007BD0  70                 	db	112	;'p'
  1334  007BD1  69                 	db	105	;'i'
  1335  007BD2  6E                 	db	110	;'n'
  1336  007BD3  64                 	db	100	;'d'
  1337  007BD4  69                 	db	105	;'i'
  1338  007BD5  67                 	db	103	;'g'
  1339  007BD6  20                 	db	32
  1340  007BD7  47                 	db	71	;'G'
  1341  007BD8  50                 	db	80	;'P'
  1342  007BD9  49                 	db	73	;'I'
  1343  007BDA  4F                 	db	79	;'O'
  1344  007BDB  31                 	db	49	;'1'
  1345  007BDC  31                 	db	49	;'1'
  1346  007BDD  20                 	db	32
  1347  007BDE  31                 	db	49	;'1'
  1348  007BDF  0D                 	db	13
  1349  007BE0  0A                 	db	10
  1350  007BE1  00                 	db	0
  1351  007BE2                     STR_73:
  1352  007BE2  72                 	db	114	;'r'
  1353  007BE3  61                 	db	97	;'a'
  1354  007BE4  64                 	db	100	;'d'
  1355  007BE5  69                 	db	105	;'i'
  1356  007BE6  6F                 	db	111	;'o'
  1357  007BE7  20                 	db	32
  1358  007BE8  74                 	db	116	;'t'
  1359  007BE9  78                 	db	120	;'x'
  1360  007BEA  20                 	db	32
  1361  007BEB  41                 	db	65	;'A'
  1362  007BEC  41                 	db	65	;'A'
  1363  007BED  25                 	db	37
  1364  007BEE  30                 	db	48	;'0'
  1365  007BEF  32                 	db	50	;'2'
  1366  007BF0  58                 	db	88	;'X'
  1367  007BF1  25                 	db	37
  1368  007BF2  30                 	db	48	;'0'
  1369  007BF3  32                 	db	50	;'2'
  1370  007BF4  58                 	db	88	;'X'
  1371  007BF5  25                 	db	37
  1372  007BF6  30                 	db	48	;'0'
  1373  007BF7  32                 	db	50	;'2'
  1374  007BF8  58                 	db	88	;'X'
  1375  007BF9  00                 	db	0
  1376  007BFA                     STR_46:
  1377  007BFA  72                 	db	114	;'r'
  1378  007BFB  61                 	db	97	;'a'
  1379  007BFC  64                 	db	100	;'d'
  1380  007BFD  69                 	db	105	;'i'
  1381  007BFE  6F                 	db	111	;'o'
  1382  007BFF  20                 	db	32
  1383  007C00  73                 	db	115	;'s'
  1384  007C01  65                 	db	101	;'e'
  1385  007C02  74                 	db	116	;'t'
  1386  007C03  20                 	db	32
  1387  007C04  66                 	db	102	;'f'
  1388  007C05  64                 	db	100	;'d'
  1389  007C06  65                 	db	101	;'e'
  1390  007C07  76                 	db	118	;'v'
  1391  007C08  20                 	db	32
  1392  007C09  35                 	db	53	;'5'
  1393  007C0A  30                 	db	48	;'0'
  1394  007C0B  30                 	db	48	;'0'
  1395  007C0C  30                 	db	48	;'0'
  1396  007C0D  00                 	db	0
  1397  007C0E                     STR_43:
  1398  007C0E  72                 	db	114	;'r'
  1399  007C0F  61                 	db	97	;'a'
  1400  007C10  64                 	db	100	;'d'
  1401  007C11  69                 	db	105	;'i'
  1402  007C12  6F                 	db	111	;'o'
  1403  007C13  20                 	db	32
  1404  007C14  73                 	db	115	;'s'
  1405  007C15  65                 	db	101	;'e'
  1406  007C16  74                 	db	116	;'t'
  1407  007C17  20                 	db	32
  1408  007C18  61                 	db	97	;'a'
  1409  007C19  66                 	db	102	;'f'
  1410  007C1A  63                 	db	99	;'c'
  1411  007C1B  62                 	db	98	;'b'
  1412  007C1C  77                 	db	119	;'w'
  1413  007C1D  20                 	db	32
  1414  007C1E  31                 	db	49	;'1'
  1415  007C1F  32                 	db	50	;'2'
  1416  007C20  35                 	db	53	;'5'
  1417  007C21  00                 	db	0
  1418  007C22                     STR_22:
  1419  007C22  73                 	db	115	;'s'
  1420  007C23  79                 	db	121	;'y'
  1421  007C24  73                 	db	115	;'s'
  1422  007C25  20                 	db	32
  1423  007C26  73                 	db	115	;'s'
  1424  007C27  6C                 	db	108	;'l'
  1425  007C28  65                 	db	101	;'e'
  1426  007C29  65                 	db	101	;'e'
  1427  007C2A  70                 	db	112	;'p'
  1428  007C2B  20                 	db	32
  1429  007C2C  39                 	db	57	;'9'
  1430  007C2D  39                 	db	57	;'9'
  1431  007C2E  39                 	db	57	;'9'
  1432  007C2F  39                 	db	57	;'9'
  1433  007C30  39                 	db	57	;'9'
  1434  007C31  39                 	db	57	;'9'
  1435  007C32  39                 	db	57	;'9'
  1436  007C33  39                 	db	57	;'9'
  1437  007C34  39                 	db	57	;'9'
  1438  007C35  00                 	db	0
  1439  007C36                     STR_34:
  1440  007C36  72                 	db	114	;'r'
  1441  007C37  61                 	db	97	;'a'
  1442  007C38  64                 	db	100	;'d'
  1443  007C39  69                 	db	105	;'i'
  1444  007C3A  6F                 	db	111	;'o'
  1445  007C3B  20                 	db	32
  1446  007C3C  73                 	db	115	;'s'
  1447  007C3D  65                 	db	101	;'e'
  1448  007C3E  74                 	db	116	;'t'
  1449  007C3F  20                 	db	32
  1450  007C40  6D                 	db	109	;'m'
  1451  007C41  6F                 	db	111	;'o'
  1452  007C42  64                 	db	100	;'d'
  1453  007C43  20                 	db	32
  1454  007C44  6C                 	db	108	;'l'
  1455  007C45  6F                 	db	111	;'o'
  1456  007C46  72                 	db	114	;'r'
  1457  007C47  61                 	db	97	;'a'
  1458  007C48  00                 	db	0
  1459  007C49                     STR_61:
  1460  007C49  72                 	db	114	;'r'
  1461  007C4A  61                 	db	97	;'a'
  1462  007C4B  64                 	db	100	;'d'
  1463  007C4C  69                 	db	105	;'i'
  1464  007C4D  6F                 	db	111	;'o'
  1465  007C4E  20                 	db	32
  1466  007C4F  73                 	db	115	;'s'
  1467  007C50  65                 	db	101	;'e'
  1468  007C51  74                 	db	116	;'t'
  1469  007C52  20                 	db	32
  1470  007C53  73                 	db	115	;'s'
  1471  007C54  79                 	db	121	;'y'
  1472  007C55  6E                 	db	110	;'n'
  1473  007C56  63                 	db	99	;'c'
  1474  007C57  20                 	db	32
  1475  007C58  31                 	db	49	;'1'
  1476  007C59  32                 	db	50	;'2'
  1477  007C5A  00                 	db	0
  1478  007C5B                     STR_40:
  1479  007C5B  72                 	db	114	;'r'
  1480  007C5C  61                 	db	97	;'a'
  1481  007C5D  64                 	db	100	;'d'
  1482  007C5E  69                 	db	105	;'i'
  1483  007C5F  6F                 	db	111	;'o'
  1484  007C60  20                 	db	32
  1485  007C61  73                 	db	115	;'s'
  1486  007C62  65                 	db	101	;'e'
  1487  007C63  74                 	db	116	;'t'
  1488  007C64  20                 	db	32
  1489  007C65  73                 	db	115	;'s'
  1490  007C66  66                 	db	102	;'f'
  1491  007C67  20                 	db	32
  1492  007C68  73                 	db	115	;'s'
  1493  007C69  66                 	db	102	;'f'
  1494  007C6A  31                 	db	49	;'1'
  1495  007C6B  32                 	db	50	;'2'
  1496  007C6C  00                 	db	0
  1497  007C6D                     STR_49:
  1498  007C6D  72                 	db	114	;'r'
  1499  007C6E  61                 	db	97	;'a'
  1500  007C6F  64                 	db	100	;'d'
  1501  007C70  69                 	db	105	;'i'
  1502  007C71  6F                 	db	111	;'o'
  1503  007C72  20                 	db	32
  1504  007C73  73                 	db	115	;'s'
  1505  007C74  65                 	db	101	;'e'
  1506  007C75  74                 	db	116	;'t'
  1507  007C76  20                 	db	32
  1508  007C77  70                 	db	112	;'p'
  1509  007C78  72                 	db	114	;'r'
  1510  007C79  6C                 	db	108	;'l'
  1511  007C7A  65                 	db	101	;'e'
  1512  007C7B  6E                 	db	110	;'n'
  1513  007C7C  20                 	db	32
  1514  007C7D  38                 	db	56	;'8'
  1515  007C7E  00                 	db	0
  1516  007C7F                     STR_108:
  1517  007C7F  30                 	db	48	;'0'
  1518  007C80  31                 	db	49	;'1'
  1519  007C81  32                 	db	50	;'2'
  1520  007C82  33                 	db	51	;'3'
  1521  007C83  34                 	db	52	;'4'
  1522  007C84  35                 	db	53	;'5'
  1523  007C85  36                 	db	54	;'6'
  1524  007C86  37                 	db	55	;'7'
  1525  007C87  38                 	db	56	;'8'
  1526  007C88  39                 	db	57	;'9'
  1527  007C89  41                 	db	65	;'A'
  1528  007C8A  42                 	db	66	;'B'
  1529  007C8B  43                 	db	67	;'C'
  1530  007C8C  44                 	db	68	;'D'
  1531  007C8D  45                 	db	69	;'E'
  1532  007C8E  46                 	db	70	;'F'
  1533  007C8F  00                 	db	0
  1534  007C90                     STR_28:
  1535  007C90  20                 	db	32
  1536  007C91  28                 	db	40
  1537  007C92  53                 	db	83	;'S'
  1538  007C93  31                 	db	49	;'1'
  1539  007C94  29                 	db	41
  1540  007C95  20                 	db	32
  1541  007C96  20                 	db	32
  1542  007C97  20                 	db	32
  1543  007C98  20                 	db	32
  1544  007C99  20                 	db	32
  1545  007C9A  20                 	db	32
  1546  007C9B  28                 	db	40
  1547  007C9C  53                 	db	83	;'S'
  1548  007C9D  32                 	db	50	;'2'
  1549  007C9E  29                 	db	41
  1550  007C9F  20                 	db	32
  1551  007CA0  00                 	db	0
  1552  007CA1                     STR_37:
  1553  007CA1  72                 	db	114	;'r'
  1554  007CA2  61                 	db	97	;'a'
  1555  007CA3  64                 	db	100	;'d'
  1556  007CA4  69                 	db	105	;'i'
  1557  007CA5  6F                 	db	111	;'o'
  1558  007CA6  20                 	db	32
  1559  007CA7  73                 	db	115	;'s'
  1560  007CA8  65                 	db	101	;'e'
  1561  007CA9  74                 	db	116	;'t'
  1562  007CAA  20                 	db	32
  1563  007CAB  70                 	db	112	;'p'
  1564  007CAC  77                 	db	119	;'w'
  1565  007CAD  72                 	db	114	;'r'
  1566  007CAE  20                 	db	32
  1567  007CAF  32                 	db	50	;'2'
  1568  007CB0  30                 	db	48	;'0'
  1569  007CB1  00                 	db	0
  1570  007CB2                     STR_55:
  1571  007CB2  72                 	db	114	;'r'
  1572  007CB3  61                 	db	97	;'a'
  1573  007CB4  64                 	db	100	;'d'
  1574  007CB5  69                 	db	105	;'i'
  1575  007CB6  6F                 	db	111	;'o'
  1576  007CB7  20                 	db	32
  1577  007CB8  73                 	db	115	;'s'
  1578  007CB9  65                 	db	101	;'e'
  1579  007CBA  74                 	db	116	;'t'
  1580  007CBB  20                 	db	32
  1581  007CBC  63                 	db	99	;'c'
  1582  007CBD  72                 	db	114	;'r'
  1583  007CBE  20                 	db	32
  1584  007CBF  34                 	db	52	;'4'
  1585  007CC0  2F                 	db	47
  1586  007CC1  35                 	db	53	;'5'
  1587  007CC2  00                 	db	0
  1588  007CC3                     STR_64:
  1589  007CC3  72                 	db	114	;'r'
  1590  007CC4  61                 	db	97	;'a'
  1591  007CC5  64                 	db	100	;'d'
  1592  007CC6  69                 	db	105	;'i'
  1593  007CC7  6F                 	db	111	;'o'
  1594  007CC8  20                 	db	32
  1595  007CC9  73                 	db	115	;'s'
  1596  007CCA  65                 	db	101	;'e'
  1597  007CCB  74                 	db	116	;'t'
  1598  007CCC  20                 	db	32
  1599  007CCD  62                 	db	98	;'b'
  1600  007CCE  77                 	db	119	;'w'
  1601  007CCF  20                 	db	32
  1602  007CD0  31                 	db	49	;'1'
  1603  007CD1  32                 	db	50	;'2'
  1604  007CD2  35                 	db	53	;'5'
  1605  007CD3  00                 	db	0
  1606  007CD4                     STR_25:
  1607  007CD4  52                 	db	82	;'R'
  1608  007CD5  65                 	db	101	;'e'
  1609  007CD6  52                 	db	82	;'R'
  1610  007CD7  75                 	db	117	;'u'
  1611  007CD8  6E                 	db	110	;'n'
  1612  007CD9  20                 	db	32
  1613  007CDA  50                 	db	80	;'P'
  1614  007CDB  77                 	db	119	;'w'
  1615  007CDC  72                 	db	114	;'r'
  1616  007CDD  54                 	db	84	;'T'
  1617  007CDE  73                 	db	115	;'s'
  1618  007CDF  74                 	db	116	;'t'
  1619  007CE0  3C                 	db	60	;'<'
  1620  007CE1  53                 	db	83	;'S'
  1621  007CE2  32                 	db	50	;'2'
  1622  007CE3  3E                 	db	62	;'>'
  1623  007CE4  00                 	db	0
  1624  007CE5                     STR_83:
  1625  007CE5  49                 	db	73	;'I'
  1626  007CE6  73                 	db	115	;'s'
  1627  007CE7  73                 	db	115	;'s'
  1628  007CE8  75                 	db	117	;'u'
  1629  007CE9  65                 	db	101	;'e'
  1630  007CEA  20                 	db	32
  1631  007CEB  50                 	db	80	;'P'
  1632  007CEC  65                 	db	101	;'e'
  1633  007CED  72                 	db	114	;'r'
  1634  007CEE  6F                 	db	111	;'o'
  1635  007CEF  64                 	db	100	;'d'
  1636  007CF0  69                 	db	105	;'i'
  1637  007CF1  63                 	db	99	;'c'
  1638  007CF2  20                 	db	32
  1639  007CF3  54                 	db	84	;'T'
  1640  007CF4  58                 	db	88	;'X'
  1641  007CF5  00                 	db	0
  1642  007CF6                     STR_52:
  1643  007CF6  72                 	db	114	;'r'
  1644  007CF7  61                 	db	97	;'a'
  1645  007CF8  64                 	db	100	;'d'
  1646  007CF9  69                 	db	105	;'i'
  1647  007CFA  6F                 	db	111	;'o'
  1648  007CFB  20                 	db	32
  1649  007CFC  73                 	db	115	;'s'
  1650  007CFD  65                 	db	101	;'e'
  1651  007CFE  74                 	db	116	;'t'
  1652  007CFF  20                 	db	32
  1653  007D00  63                 	db	99	;'c'
  1654  007D01  72                 	db	114	;'r'
  1655  007D02  63                 	db	99	;'c'
  1656  007D03  20                 	db	32
  1657  007D04  6F                 	db	111	;'o'
  1658  007D05  6E                 	db	110	;'n'
  1659  007D06  00                 	db	0
  1660  007D07                     STR_26:
  1661  007D07  4D                 	db	77	;'M'
  1662  007D08  6F                 	db	111	;'o'
  1663  007D09  62                 	db	98	;'b'
  1664  007D0A  69                 	db	105	;'i'
  1665  007D0B  6C                 	db	108	;'l'
  1666  007D0C  65                 	db	101	;'e'
  1667  007D0D  20                 	db	32
  1668  007D0E  4D                 	db	77	;'M'
  1669  007D0F  6F                 	db	111	;'o'
  1670  007D10  74                 	db	116	;'t'
  1671  007D11  65                 	db	101	;'e'
  1672  007D12  20                 	db	32
  1673  007D13  2D                 	db	45
  1674  007D14  41                 	db	65	;'A'
  1675  007D15  70                 	db	112	;'p'
  1676  007D16  70                 	db	112	;'p'
  1677  007D17  00                 	db	0
  1678  007D18                     STR_27:
  1679  007D18  4E                 	db	78	;'N'
  1680  007D19  61                 	db	97	;'a'
  1681  007D1A  76                 	db	118	;'v'
  1682  007D1B  69                 	db	105	;'i'
  1683  007D1C  67                 	db	103	;'g'
  1684  007D1D  61                 	db	97	;'a'
  1685  007D1E  74                 	db	116	;'t'
  1686  007D1F  65                 	db	101	;'e'
  1687  007D20  20                 	db	32
  1688  007D21  20                 	db	32
  1689  007D22  53                 	db	83	;'S'
  1690  007D23  65                 	db	101	;'e'
  1691  007D24  6C                 	db	108	;'l'
  1692  007D25  65                 	db	101	;'e'
  1693  007D26  63                 	db	99	;'c'
  1694  007D27  74                 	db	116	;'t'
  1695  007D28  00                 	db	0
  1696  007D29                     STR_86:
  1697  007D29  28                 	db	40
  1698  007D2A  4E                 	db	78	;'N'
  1699  007D2B  41                 	db	65	;'A'
  1700  007D2C  56                 	db	86	;'V'
  1701  007D2D  29                 	db	41
  1702  007D2E  20                 	db	32
  1703  007D2F  20                 	db	32
  1704  007D30  20                 	db	32
  1705  007D31  20                 	db	32
  1706  007D32  28                 	db	40
  1707  007D33  53                 	db	83	;'S'
  1708  007D34  45                 	db	69	;'E'
  1709  007D35  4C                 	db	76	;'L'
  1710  007D36  29                 	db	41
  1711  007D37  20                 	db	32
  1712  007D38  00                 	db	0
  1713  007D39                     STR_58:
  1714  007D39  72                 	db	114	;'r'
  1715  007D3A  61                 	db	97	;'a'
  1716  007D3B  64                 	db	100	;'d'
  1717  007D3C  69                 	db	105	;'i'
  1718  007D3D  6F                 	db	111	;'o'
  1719  007D3E  20                 	db	32
  1720  007D3F  73                 	db	115	;'s'
  1721  007D40  65                 	db	101	;'e'
  1722  007D41  74                 	db	116	;'t'
  1723  007D42  20                 	db	32
  1724  007D43  77                 	db	119	;'w'
  1725  007D44  64                 	db	100	;'d'
  1726  007D45  74                 	db	116	;'t'
  1727  007D46  20                 	db	32
  1728  007D47  30                 	db	48	;'0'
  1729  007D48  00                 	db	0
  1730  007D49                     STR_77:
  1731  007D49  47                 	db	71	;'G'
  1732  007D4A  6F                 	db	111	;'o'
  1733  007D4B  74                 	db	116	;'t'
  1734  007D4C  20                 	db	32
  1735  007D4D  52                 	db	82	;'R'
  1736  007D4E  58                 	db	88	;'X'
  1737  007D4F  20                 	db	32
  1738  007D50  4D                 	db	77	;'M'
  1739  007D51  65                 	db	101	;'e'
  1740  007D52  73                 	db	115	;'s'
  1741  007D53  73                 	db	115	;'s'
  1742  007D54  61                 	db	97	;'a'
  1743  007D55  67                 	db	103	;'g'
  1744  007D56  65                 	db	101	;'e'
  1745  007D57  3A                 	db	58	;':'
  1746  007D58  00                 	db	0
  1747  007D59                     STR_68:
  1748  007D59  50                 	db	80	;'P'
  1749  007D5A  75                 	db	117	;'u'
  1750  007D5B  6D                 	db	109	;'m'
  1751  007D5C  70                 	db	112	;'p'
  1752  007D5D  20                 	db	32
  1753  007D5E  64                 	db	100	;'d'
  1754  007D5F  65                 	db	101	;'e'
  1755  007D60  66                 	db	102	;'f'
  1756  007D61  61                 	db	97	;'a'
  1757  007D62  75                 	db	117	;'u'
  1758  007D63  6C                 	db	108	;'l'
  1759  007D64  74                 	db	116	;'t'
  1760  007D65  20                 	db	32
  1761  007D66  4F                 	db	79	;'O'
  1762  007D67  4E                 	db	78	;'N'
  1763  007D68  00                 	db	0
  1764  007D69  6D                 	db	109	;'m'
  1765  007D6A  61                 	db	97	;'a'
  1766  007D6B  63                 	db	99	;'c'
  1767  007D6C  20                 	db	32
  1768  007D6D  73                 	db	115	;'s'
  1769  007D6E  65                 	db	101	;'e'
  1770  007D6F  74                 	db	116	;'t'
  1771  007D70  20                 	db	32
  1772  007D71  61                 	db	97	;'a'
  1773  007D72  64                 	db	100	;'d'
  1774  007D73  72                 	db	114	;'r'
  1775  007D74  20                 	db	32
  1776  007D75  6F                 	db	111	;'o'
  1777  007D76  66                 	db	102	;'f'
  1778  007D77  66                 	db	102	;'f'
  1779  007D78  00                 	db	0
  1780  007D79  42                 	db	66	;'B'
  1781  007D7A  75                 	db	117	;'u'
  1782  007D7B  69                 	db	105	;'i'
  1783  007D7C  6C                 	db	108	;'l'
  1784  007D7D  64                 	db	100	;'d'
  1785  007D7E  20                 	db	32
  1786  007D7F  44                 	db	68	;'D'
  1787  007D80  61                 	db	97	;'a'
  1788  007D81  74                 	db	116	;'t'
  1789  007D82  65                 	db	101	;'e'
  1790  007D83  2F                 	db	47
  1791  007D84  54                 	db	84	;'T'
  1792  007D85  69                 	db	105	;'i'
  1793  007D86  6D                 	db	109	;'m'
  1794  007D87  65                 	db	101	;'e'
  1795  007D88  00                 	db	0
  1796  007D89                     STR_69:
  1797  007D89  57                 	db	87	;'W'
  1798  007D8A  61                 	db	97	;'a'
  1799  007D8B  69                 	db	105	;'i'
  1800  007D8C  74                 	db	116	;'t'
  1801  007D8D  69                 	db	105	;'i'
  1802  007D8E  6E                 	db	110	;'n'
  1803  007D8F  67                 	db	103	;'g'
  1804  007D90  20                 	db	32
  1805  007D91  66                 	db	102	;'f'
  1806  007D92  6F                 	db	111	;'o'
  1807  007D93  72                 	db	114	;'r'
  1808  007D94  20                 	db	32
  1809  007D95  52                 	db	82	;'R'
  1810  007D96  58                 	db	88	;'X'
  1811  007D97  00                 	db	0
  1812  007D98  6D                 	db	109	;'m'
  1813  007D99  61                 	db	97	;'a'
  1814  007D9A  63                 	db	99	;'c'
  1815  007D9B  20                 	db	32
  1816  007D9C  73                 	db	115	;'s'
  1817  007D9D  65                 	db	101	;'e'
  1818  007D9E  74                 	db	116	;'t'
  1819  007D9F  20                 	db	32
  1820  007DA0  61                 	db	97	;'a'
  1821  007DA1  64                 	db	100	;'d'
  1822  007DA2  72                 	db	114	;'r'
  1823  007DA3  20                 	db	32
  1824  007DA4  6F                 	db	111	;'o'
  1825  007DA5  6E                 	db	110	;'n'
  1826  007DA6  00                 	db	0
  1827  007DA7                     STR_2:
  1828  007DA7  20                 	db	32
  1829  007DA8  20                 	db	32
  1830  007DA9  20                 	db	32
  1831  007DAA  50                 	db	80	;'P'
  1832  007DAB  52                 	db	82	;'R'
  1833  007DAC  4F                 	db	79	;'O'
  1834  007DAD  54                 	db	84	;'T'
  1835  007DAE  4F                 	db	79	;'O'
  1836  007DAF  20                 	db	32
  1837  007DB0  20                 	db	32
  1838  007DB1  20                 	db	32
  1839  007DB2  20                 	db	32
  1840  007DB3  20                 	db	32
  1841  007DB4  20                 	db	32
  1842  007DB5  00                 	db	0
  1843  007DB6                     STR_1:
  1844  007DB6  4D                 	db	77	;'M'
  1845  007DB7  45                 	db	69	;'E'
  1846  007DB8  4E                 	db	78	;'N'
  1847  007DB9  43                 	db	67	;'C'
  1848  007DBA  4F                 	db	79	;'O'
  1849  007DBB  2D                 	db	45
  1850  007DBC  4C                 	db	76	;'L'
  1851  007DBD  4F                 	db	79	;'O'
  1852  007DBE  52                 	db	82	;'R'
  1853  007DBF  45                 	db	69	;'E'
  1854  007DC0  58                 	db	88	;'X'
  1855  007DC1  20                 	db	32
  1856  007DC2  20                 	db	32
  1857  007DC3  20                 	db	32
  1858  007DC4  00                 	db	0
  1859  007DC5                     STR_3:
  1860  007DC5  20                 	db	32
  1861  007DC6  20                 	db	32
  1862  007DC7  20                 	db	32
  1863  007DC8  42                 	db	66	;'B'
  1864  007DC9  75                 	db	117	;'u'
  1865  007DCA  69                 	db	105	;'i'
  1866  007DCB  6C                 	db	108	;'l'
  1867  007DCC  64                 	db	100	;'d'
  1868  007DCD  20                 	db	32
  1869  007DCE  30                 	db	48	;'0'
  1870  007DCF  30                 	db	48	;'0'
  1871  007DD0  35                 	db	53	;'5'
  1872  007DD1  20                 	db	32
  1873  007DD2  20                 	db	32
  1874  007DD3  00                 	db	0
  1875  007DD4                     STR_85:
  1876  007DD4  4C                 	db	76	;'L'
  1877  007DD5  3A                 	db	58	;':'
  1878  007DD6  20                 	db	32
  1879  007DD7  20                 	db	32
  1880  007DD8  20                 	db	32
  1881  007DD9  20                 	db	32
  1882  007DDA  20                 	db	32
  1883  007DDB  20                 	db	32
  1884  007DDC  20                 	db	32
  1885  007DDD  54                 	db	84	;'T'
  1886  007DDE  3A                 	db	58	;':'
  1887  007DDF  20                 	db	32
  1888  007DE0  00                 	db	0
  1889  007DE1                     STR_91:
  1890  007DE1  6D                 	db	109	;'m'
  1891  007DE2  61                 	db	97	;'a'
  1892  007DE3  63                 	db	99	;'c'
  1893  007DE4  20                 	db	32
  1894  007DE5  73                 	db	115	;'s'
  1895  007DE6  65                 	db	101	;'e'
  1896  007DE7  74                 	db	116	;'t'
  1897  007DE8  20                 	db	32
  1898  007DE9  64                 	db	100	;'d'
  1899  007DEA  72                 	db	114	;'r'
  1900  007DEB  20                 	db	32
  1901  007DEC  30                 	db	48	;'0'
  1902  007DED  00                 	db	0
  1903  007DEE                     STR_92:
  1904  007DEE  6D                 	db	109	;'m'
  1905  007DEF  61                 	db	97	;'a'
  1906  007DF0  63                 	db	99	;'c'
  1907  007DF1  20                 	db	32
  1908  007DF2  73                 	db	115	;'s'
  1909  007DF3  65                 	db	101	;'e'
  1910  007DF4  74                 	db	116	;'t'
  1911  007DF5  20                 	db	32
  1912  007DF6  64                 	db	100	;'d'
  1913  007DF7  72                 	db	114	;'r'
  1914  007DF8  20                 	db	32
  1915  007DF9  31                 	db	49	;'1'
  1916  007DFA  00                 	db	0
  1917  007DFB  6D                 	db	109	;'m'
  1918  007DFC  61                 	db	97	;'a'
  1919  007DFD  63                 	db	99	;'c'
  1920  007DFE  20                 	db	32
  1921  007DFF  73                 	db	115	;'s'
  1922  007E00  65                 	db	101	;'e'
  1923  007E01  74                 	db	116	;'t'
  1924  007E02  20                 	db	32
  1925  007E03  64                 	db	100	;'d'
  1926  007E04  72                 	db	114	;'r'
  1927  007E05  20                 	db	32
  1928  007E06  32                 	db	50	;'2'
  1929  007E07  00                 	db	0
  1930  007E08  6D                 	db	109	;'m'
  1931  007E09  61                 	db	97	;'a'
  1932  007E0A  63                 	db	99	;'c'
  1933  007E0B  20                 	db	32
  1934  007E0C  73                 	db	115	;'s'
  1935  007E0D  65                 	db	101	;'e'
  1936  007E0E  74                 	db	116	;'t'
  1937  007E0F  20                 	db	32
  1938  007E10  64                 	db	100	;'d'
  1939  007E11  72                 	db	114	;'r'
  1940  007E12  20                 	db	32
  1941  007E13  33                 	db	51	;'3'
  1942  007E14  00                 	db	0
  1943  007E15  6D                 	db	109	;'m'
  1944  007E16  61                 	db	97	;'a'
  1945  007E17  63                 	db	99	;'c'
  1946  007E18  20                 	db	32
  1947  007E19  73                 	db	115	;'s'
  1948  007E1A  65                 	db	101	;'e'
  1949  007E1B  74                 	db	116	;'t'
  1950  007E1C  20                 	db	32
  1951  007E1D  64                 	db	100	;'d'
  1952  007E1E  72                 	db	114	;'r'
  1953  007E1F  20                 	db	32
  1954  007E20  34                 	db	52	;'4'
  1955  007E21  00                 	db	0
  1956  007E22  6D                 	db	109	;'m'
  1957  007E23  61                 	db	97	;'a'
  1958  007E24  63                 	db	99	;'c'
  1959  007E25  20                 	db	32
  1960  007E26  73                 	db	115	;'s'
  1961  007E27  65                 	db	101	;'e'
  1962  007E28  74                 	db	116	;'t'
  1963  007E29  20                 	db	32
  1964  007E2A  64                 	db	100	;'d'
  1965  007E2B  72                 	db	114	;'r'
  1966  007E2C  20                 	db	32
  1967  007E2D  35                 	db	53	;'5'
  1968  007E2E  00                 	db	0
  1969  007E2F  6D                 	db	109	;'m'
  1970  007E30  61                 	db	97	;'a'
  1971  007E31  63                 	db	99	;'c'
  1972  007E32  20                 	db	32
  1973  007E33  73                 	db	115	;'s'
  1974  007E34  65                 	db	101	;'e'
  1975  007E35  74                 	db	116	;'t'
  1976  007E36  20                 	db	32
  1977  007E37  64                 	db	100	;'d'
  1978  007E38  72                 	db	114	;'r'
  1979  007E39  20                 	db	32
  1980  007E3A  36                 	db	54	;'6'
  1981  007E3B  00                 	db	0
  1982  007E3C  6D                 	db	109	;'m'
  1983  007E3D  61                 	db	97	;'a'
  1984  007E3E  63                 	db	99	;'c'
  1985  007E3F  20                 	db	32
  1986  007E40  73                 	db	115	;'s'
  1987  007E41  65                 	db	101	;'e'
  1988  007E42  74                 	db	116	;'t'
  1989  007E43  20                 	db	32
  1990  007E44  64                 	db	100	;'d'
  1991  007E45  72                 	db	114	;'r'
  1992  007E46  20                 	db	32
  1993  007E47  37                 	db	55	;'7'
  1994  007E48  00                 	db	0
  1995  007E49  42                 	db	66	;'B'
  1996  007E4A  75                 	db	117	;'u'
  1997  007E4B  74                 	db	116	;'t'
  1998  007E4C  74                 	db	116	;'t'
  1999  007E4D  6F                 	db	111	;'o'
  2000  007E4E  6E                 	db	110	;'n'
  2001  007E4F  20                 	db	32
  2002  007E50  54                 	db	84	;'T'
  2003  007E51  65                 	db	101	;'e'
  2004  007E52  73                 	db	115	;'s'
  2005  007E53  74                 	db	116	;'t'
  2006  007E54  3A                 	db	58	;':'
  2007  007E55  00                 	db	0
  2008  007E56  42                 	db	66	;'B'
  2009  007E57  75                 	db	117	;'u'
  2010  007E58  74                 	db	116	;'t'
  2011  007E59  74                 	db	116	;'t'
  2012  007E5A  6F                 	db	111	;'o'
  2013  007E5B  6E                 	db	110	;'n'
  2014  007E5C  31                 	db	49	;'1'
  2015  007E5D  20                 	db	32
  2016  007E5E  50                 	db	80	;'P'
  2017  007E5F  41                 	db	65	;'A'
  2018  007E60  53                 	db	83	;'S'
  2019  007E61  53                 	db	83	;'S'
  2020  007E62  00                 	db	0
  2021  007E63  42                 	db	66	;'B'
  2022  007E64  75                 	db	117	;'u'
  2023  007E65  74                 	db	116	;'t'
  2024  007E66  74                 	db	116	;'t'
  2025  007E67  6F                 	db	111	;'o'
  2026  007E68  6E                 	db	110	;'n'
  2027  007E69  32                 	db	50	;'2'
  2028  007E6A  20                 	db	32
  2029  007E6B  50                 	db	80	;'P'
  2030  007E6C  41                 	db	65	;'A'
  2031  007E6D  53                 	db	83	;'S'
  2032  007E6E  53                 	db	83	;'S'
  2033  007E6F  00                 	db	0
  2034  007E70  50                 	db	80	;'P'
  2035  007E71  72                 	db	114	;'r'
  2036  007E72  65                 	db	101	;'e'
  2037  007E73  73                 	db	115	;'s'
  2038  007E74  73                 	db	115	;'s'
  2039  007E75  20                 	db	32
  2040  007E76  42                 	db	66	;'B'
  2041  007E77  75                 	db	117	;'u'
  2042  007E78  74                 	db	116	;'t'
  2043  007E79  74                 	db	116	;'t'
  2044  007E7A  6F                 	db	111	;'o'
  2045  007E7B  6E                 	db	110	;'n'
  2046  007E7C  00                 	db	0
  2047  007E7D                     STR_107:
  2048  007E7D  55                 	db	85	;'U'
  2049  007E7E  53                 	db	83	;'S'
  2050  007E7F  42                 	db	66	;'B'
  2051  007E80  20                 	db	32
  2052  007E81  48                 	db	72	;'H'
  2053  007E82  61                 	db	97	;'a'
  2054  007E83  6E                 	db	110	;'n'
  2055  007E84  64                 	db	100	;'d'
  2056  007E85  6C                 	db	108	;'l'
  2057  007E86  65                 	db	101	;'e'
  2058  007E87  72                 	db	114	;'r'
  2059  007E88  00                 	db	0
  2060  007E89                     STR_84:
  2061  007E89  4F                 	db	79	;'O'
  2062  007E8A  6E                 	db	110	;'n'
  2063  007E8B  20                 	db	32
  2064  007E8C  50                 	db	80	;'P'
  2065  007E8D  6F                 	db	111	;'o'
  2066  007E8E  72                 	db	114	;'r'
  2067  007E8F  74                 	db	116	;'t'
  2068  007E90  20                 	db	32
  2069  007E91  23                 	db	35
  2070  007E92  3A                 	db	58	;':'
  2071  007E93  20                 	db	32
  2072  007E94  00                 	db	0
  2073  007E95                     STR_74:
  2074  007E95  52                 	db	82	;'R'
  2075  007E96  58                 	db	88	;'X'
  2076  007E97  20                 	db	32
  2077  007E98  50                 	db	80	;'P'
  2078  007E99  75                 	db	117	;'u'
  2079  007E9A  6D                 	db	109	;'m'
  2080  007E9B  70                 	db	112	;'p'
  2081  007E9C  20                 	db	32
  2082  007E9D  4F                 	db	79	;'O'
  2083  007E9E  46                 	db	70	;'F'
  2084  007E9F  46                 	db	70	;'F'
  2085  007EA0  00                 	db	0
  2086  007EA1                     STR_79:
  2087  007EA1  72                 	db	114	;'r'
  2088  007EA2  61                 	db	97	;'a'
  2089  007EA3  64                 	db	100	;'d'
  2090  007EA4  69                 	db	105	;'i'
  2091  007EA5  6F                 	db	111	;'o'
  2092  007EA6  5F                 	db	95	;'_'
  2093  007EA7  74                 	db	116	;'t'
  2094  007EA8  78                 	db	120	;'x'
  2095  007EA9  5F                 	db	95	;'_'
  2096  007EAA  6F                 	db	111	;'o'
  2097  007EAB  6B                 	db	107	;'k'
  2098  007EAC  00                 	db	0
  2099  007EAD                     STR_29:
  2100  007EAD  73                 	db	115	;'s'
  2101  007EAE  79                 	db	121	;'y'
  2102  007EAF  73                 	db	115	;'s'
  2103  007EB0  20                 	db	32
  2104  007EB1  67                 	db	103	;'g'
  2105  007EB2  65                 	db	101	;'e'
  2106  007EB3  74                 	db	116	;'t'
  2107  007EB4  20                 	db	32
  2108  007EB5  76                 	db	118	;'v'
  2109  007EB6  65                 	db	101	;'e'
  2110  007EB7  72                 	db	114	;'r'
  2111  007EB8  00                 	db	0
  2112  007EB9  41                 	db	65	;'A'
  2113  007EBA  70                 	db	112	;'p'
  2114  007EBB  72                 	db	114	;'r'
  2115  007EBC  20                 	db	32
  2116  007EBD  32                 	db	50	;'2'
  2117  007EBE  32                 	db	50	;'2'
  2118  007EBF  20                 	db	32
  2119  007EC0  32                 	db	50	;'2'
  2120  007EC1  30                 	db	48	;'0'
  2121  007EC2  31                 	db	49	;'1'
  2122  007EC3  36                 	db	54	;'6'
  2123  007EC4  00                 	db	0
  2124  007EC5  42                 	db	66	;'B'
  2125  007EC6  75                 	db	117	;'u'
  2126  007EC7  74                 	db	116	;'t'
  2127  007EC8  74                 	db	116	;'t'
  2128  007EC9  6F                 	db	111	;'o'
  2129  007ECA  6E                 	db	110	;'n'
  2130  007ECB  20                 	db	32
  2131  007ECC  46                 	db	70	;'F'
  2132  007ECD  41                 	db	65	;'A'
  2133  007ECE  49                 	db	73	;'I'
  2134  007ECF  4C                 	db	76	;'L'
  2135  007ED0  00                 	db	0
  2136  007ED1                     STR_71:
  2137  007ED1  72                 	db	114	;'r'
  2138  007ED2  61                 	db	97	;'a'
  2139  007ED3  64                 	db	100	;'d'
  2140  007ED4  69                 	db	105	;'i'
  2141  007ED5  6F                 	db	111	;'o'
  2142  007ED6  20                 	db	32
  2143  007ED7  74                 	db	116	;'t'
  2144  007ED8  78                 	db	120	;'x'
  2145  007ED9  3A                 	db	58	;':'
  2146  007EDA  20                 	db	32
  2147  007EDB  00                 	db	0
  2148  007EDC                     STR_72:
  2149  007EDC  72                 	db	114	;'r'
  2150  007EDD  61                 	db	97	;'a'
  2151  007EDE  64                 	db	100	;'d'
  2152  007EDF  69                 	db	105	;'i'
  2153  007EE0  6F                 	db	111	;'o'
  2154  007EE1  20                 	db	32
  2155  007EE2  72                 	db	114	;'r'
  2156  007EE3  78                 	db	120	;'x'
  2157  007EE4  20                 	db	32
  2158  007EE5  30                 	db	48	;'0'
  2159  007EE6  00                 	db	0
  2160  007EE7                     STR_75:
  2161  007EE7  52                 	db	82	;'R'
  2162  007EE8  58                 	db	88	;'X'
  2163  007EE9  20                 	db	32
  2164  007EEA  50                 	db	80	;'P'
  2165  007EEB  75                 	db	117	;'u'
  2166  007EEC  6D                 	db	109	;'m'
  2167  007EED  70                 	db	112	;'p'
  2168  007EEE  20                 	db	32
  2169  007EEF  4F                 	db	79	;'O'
  2170  007EF0  4E                 	db	78	;'N'
  2171  007EF1  00                 	db	0
  2172  007EF2  43                 	db	67	;'C'
  2173  007EF3  6F                 	db	111	;'o'
  2174  007EF4  6D                 	db	109	;'m'
  2175  007EF5  6D                 	db	109	;'m'
  2176  007EF6  20                 	db	32
  2177  007EF7  54                 	db	84	;'T'
  2178  007EF8  65                 	db	101	;'e'
  2179  007EF9  73                 	db	115	;'s'
  2180  007EFA  74                 	db	116	;'t'
  2181  007EFB  3A                 	db	58	;':'
  2182  007EFC  00                 	db	0
  2183  007EFD                     STR_88:
  2184  007EFD  72                 	db	114	;'r'
  2185  007EFE  61                 	db	97	;'a'
  2186  007EFF  64                 	db	100	;'d'
  2187  007F00  69                 	db	105	;'i'
  2188  007F01  6F                 	db	111	;'o'
  2189  007F02  20                 	db	32
  2190  007F03  74                 	db	116	;'t'
  2191  007F04  78                 	db	120	;'x'
  2192  007F05  20                 	db	32
  2193  007F06  00                 	db	0
  2194  007F07                     STR_23:
  2195  007F07  4D                 	db	77	;'M'
  2196  007F08  4F                 	db	79	;'O'
  2197  007F09  54                 	db	84	;'T'
  2198  007F0A  45                 	db	69	;'E'
  2199  007F0B  20                 	db	32
  2200  007F0C  4D                 	db	77	;'M'
  2201  007F0D  6F                 	db	111	;'o'
  2202  007F0E  64                 	db	100	;'d'
  2203  007F0F  65                 	db	101	;'e'
  2204  007F10  00                 	db	0
  2205  007F11                     STR_67:
  2206  007F11  6D                 	db	109	;'m'
  2207  007F12  61                 	db	97	;'a'
  2208  007F13  63                 	db	99	;'c'
  2209  007F14  20                 	db	32
  2210  007F15  70                 	db	112	;'p'
  2211  007F16  61                 	db	97	;'a'
  2212  007F17  75                 	db	117	;'u'
  2213  007F18  73                 	db	115	;'s'
  2214  007F19  65                 	db	101	;'e'
  2215  007F1A  00                 	db	0
  2216  007F1B                     STR_50:
  2217  007F1B  73                 	db	115	;'s'
  2218  007F1C  65                 	db	101	;'e'
  2219  007F1D  74                 	db	116	;'t'
  2220  007F1E  20                 	db	32
  2221  007F1F  70                 	db	112	;'p'
  2222  007F20  72                 	db	114	;'r'
  2223  007F21  6C                 	db	108	;'l'
  2224  007F22  65                 	db	101	;'e'
  2225  007F23  6E                 	db	110	;'n'
  2226  007F24  00                 	db	0
  2227  007F25                     STR_44:
  2228  007F25  73                 	db	115	;'s'
  2229  007F26  65                 	db	101	;'e'
  2230  007F27  74                 	db	116	;'t'
  2231  007F28  20                 	db	32
  2232  007F29  61                 	db	97	;'a'
  2233  007F2A  66                 	db	102	;'f'
  2234  007F2B  63                 	db	99	;'c'
  2235  007F2C  62                 	db	98	;'b'
  2236  007F2D  77                 	db	119	;'w'
  2237  007F2E  00                 	db	0
  2238  007F2F  4C                 	db	76	;'L'
  2239  007F30  45                 	db	69	;'E'
  2240  007F31  44                 	db	68	;'D'
  2241  007F32  20                 	db	32
  2242  007F33  54                 	db	84	;'T'
  2243  007F34  65                 	db	101	;'e'
  2244  007F35  73                 	db	115	;'s'
  2245  007F36  74                 	db	116	;'t'
  2246  007F37  3A                 	db	58	;':'
  2247  007F38  00                 	db	0
  2248  007F39                     STR_105:
  2249  007F39  43                 	db	67	;'C'
  2250  007F3A  44                 	db	68	;'D'
  2251  007F3B  43                 	db	67	;'C'
  2252  007F3C  20                 	db	32
  2253  007F3D  4D                 	db	77	;'M'
  2254  007F3E  6F                 	db	111	;'o'
  2255  007F3F  64                 	db	100	;'d'
  2256  007F40  65                 	db	101	;'e'
  2257  007F41  00                 	db	0
  2258  007F42                     STR_82:
  2259  007F42  53                 	db	83	;'S'
  2260  007F43  75                 	db	117	;'u'
  2261  007F44  63                 	db	99	;'c'
  2262  007F45  63                 	db	99	;'c'
  2263  007F46  65                 	db	101	;'e'
  2264  007F47  73                 	db	115	;'s'
  2265  007F48  73                 	db	115	;'s'
  2266  007F49  21                 	db	33
  2267  007F4A  00                 	db	0
  2268  007F4B                     STR_31:
  2269  007F4B  52                 	db	82	;'R'
  2270  007F4C  58                 	db	88	;'X'
  2271  007F4D  20                 	db	32
  2272  007F4E  52                 	db	82	;'R'
  2273  007F4F  45                 	db	69	;'E'
  2274  007F50  53                 	db	83	;'S'
  2275  007F51  45                 	db	69	;'E'
  2276  007F52  54                 	db	84	;'T'
  2277  007F53  00                 	db	0
  2278  007F54                     STR_32:
  2279  007F54  54                 	db	84	;'T'
  2280  007F55  58                 	db	88	;'X'
  2281  007F56  20                 	db	32
  2282  007F57  52                 	db	82	;'R'
  2283  007F58  45                 	db	69	;'E'
  2284  007F59  53                 	db	83	;'S'
  2285  007F5A  45                 	db	69	;'E'
  2286  007F5B  54                 	db	84	;'T'
  2287  007F5C  00                 	db	0
  2288  007F5D                     STR_62:
  2289  007F5D  73                 	db	115	;'s'
  2290  007F5E  65                 	db	101	;'e'
  2291  007F5F  74                 	db	116	;'t'
  2292  007F60  20                 	db	32
  2293  007F61  73                 	db	115	;'s'
  2294  007F62  79                 	db	121	;'y'
  2295  007F63  6E                 	db	110	;'n'
  2296  007F64  63                 	db	99	;'c'
  2297  007F65  00                 	db	0
  2298  007F66  6D                 	db	109	;'m'
  2299  007F67  61                 	db	97	;'a'
  2300  007F68  63                 	db	99	;'c'
  2301  007F69  20                 	db	32
  2302  007F6A  73                 	db	115	;'s'
  2303  007F6B  61                 	db	97	;'a'
  2304  007F6C  76                 	db	118	;'v'
  2305  007F6D  65                 	db	101	;'e'
  2306  007F6E  00                 	db	0
  2307  007F6F                     STR_24:
  2308  007F6F  53                 	db	83	;'S'
  2309  007F70  74                 	db	116	;'t'
  2310  007F71  61                 	db	97	;'a'
  2311  007F72  72                 	db	114	;'r'
  2312  007F73  74                 	db	116	;'t'
  2313  007F74  69                 	db	105	;'i'
  2314  007F75  6E                 	db	110	;'n'
  2315  007F76  67                 	db	103	;'g'
  2316  007F77  00                 	db	0
  2317  007F78                     STR_47:
  2318  007F78  73                 	db	115	;'s'
  2319  007F79  65                 	db	101	;'e'
  2320  007F7A  74                 	db	116	;'t'
  2321  007F7B  20                 	db	32
  2322  007F7C  66                 	db	102	;'f'
  2323  007F7D  64                 	db	100	;'d'
  2324  007F7E  65                 	db	101	;'e'
  2325  007F7F  76                 	db	118	;'v'
  2326  007F80  00                 	db	0
  2327  007F81  4D                 	db	77	;'M'
  2328  007F82  6F                 	db	111	;'o'
  2329  007F83  54                 	db	84	;'T'
  2330  007F84  65                 	db	101	;'e'
  2331  007F85  20                 	db	32
  2332  007F86  76                 	db	118	;'v'
  2333  007F87  20                 	db	32
  2334  007F88  2E                 	db	46
  2335  007F89  00                 	db	0
  2336  007F8A  32                 	db	50	;'2'
  2337  007F8B  31                 	db	49	;'1'
  2338  007F8C  3A                 	db	58	;':'
  2339  007F8D  32                 	db	50	;'2'
  2340  007F8E  39                 	db	57	;'9'
  2341  007F8F  3A                 	db	58	;':'
  2342  007F90  31                 	db	49	;'1'
  2343  007F91  30                 	db	48	;'0'
  2344  007F92  00                 	db	0
  2345  007F93  52                 	db	82	;'R'
  2346  007F94  46                 	db	70	;'F'
  2347  007F95  20                 	db	32
  2348  007F96  54                 	db	84	;'T'
  2349  007F97  65                 	db	101	;'e'
  2350  007F98  73                 	db	115	;'s'
  2351  007F99  74                 	db	116	;'t'
  2352  007F9A  3A                 	db	58	;':'
  2353  007F9B  00                 	db	0
  2354  007F9C  41                 	db	65	;'A'
  2355  007F9D  44                 	db	68	;'D'
  2356  007F9E  43                 	db	67	;'C'
  2357  007F9F  20                 	db	32
  2358  007FA0  54                 	db	84	;'T'
  2359  007FA1  65                 	db	101	;'e'
  2360  007FA2  73                 	db	115	;'s'
  2361  007FA3  74                 	db	116	;'t'
  2362  007FA4  00                 	db	0
  2363  007FA5                     STR_106:
  2364  007FA5  43                 	db	67	;'C'
  2365  007FA6  6F                 	db	111	;'o'
  2366  007FA7  6D                 	db	109	;'m'
  2367  007FA8  6D                 	db	109	;'m'
  2368  007FA9  61                 	db	97	;'a'
  2369  007FAA  6E                 	db	110	;'n'
  2370  007FAB  64                 	db	100	;'d'
  2371  007FAC  00                 	db	0
  2372  007FAD                     STR_53:
  2373  007FAD  73                 	db	115	;'s'
  2374  007FAE  65                 	db	101	;'e'
  2375  007FAF  74                 	db	116	;'t'
  2376  007FB0  20                 	db	32
  2377  007FB1  63                 	db	99	;'c'
  2378  007FB2  72                 	db	114	;'r'
  2379  007FB3  63                 	db	99	;'c'
  2380  007FB4  00                 	db	0
  2381  007FB5                     STR_35:
  2382  007FB5  73                 	db	115	;'s'
  2383  007FB6  65                 	db	101	;'e'
  2384  007FB7  74                 	db	116	;'t'
  2385  007FB8  20                 	db	32
  2386  007FB9  6D                 	db	109	;'m'
  2387  007FBA  6F                 	db	111	;'o'
  2388  007FBB  64                 	db	100	;'d'
  2389  007FBC  00                 	db	0
  2390  007FBD                     STR_38:
  2391  007FBD  73                 	db	115	;'s'
  2392  007FBE  65                 	db	101	;'e'
  2393  007FBF  74                 	db	116	;'t'
  2394  007FC0  20                 	db	32
  2395  007FC1  70                 	db	112	;'p'
  2396  007FC2  77                 	db	119	;'w'
  2397  007FC3  72                 	db	114	;'r'
  2398  007FC4  00                 	db	0
  2399  007FC5                     STR_59:
  2400  007FC5  73                 	db	115	;'s'
  2401  007FC6  65                 	db	101	;'e'
  2402  007FC7  74                 	db	116	;'t'
  2403  007FC8  20                 	db	32
  2404  007FC9  77                 	db	119	;'w'
  2405  007FCA  64                 	db	100	;'d'
  2406  007FCB  74                 	db	116	;'t'
  2407  007FCC  00                 	db	0
  2408  007FCD  54                 	db	84	;'T'
  2409  007FCE  65                 	db	101	;'e'
  2410  007FCF  6D                 	db	109	;'m'
  2411  007FD0  70                 	db	112	;'p'
  2412  007FD1  20                 	db	32
  2413  007FD2  20                 	db	32
  2414  007FD3  3D                 	db	61	;'='
  2415  007FD4  00                 	db	0
  2416  007FD5  4C                 	db	76	;'L'
  2417  007FD6  69                 	db	105	;'i'
  2418  007FD7  67                 	db	103	;'g'
  2419  007FD8  68                 	db	104	;'h'
  2420  007FD9  74                 	db	116	;'t'
  2421  007FDA  20                 	db	32
  2422  007FDB  3D                 	db	61	;'='
  2423  007FDC  00                 	db	0
  2424  007FDD                     STR_41:
  2425  007FDD  73                 	db	115	;'s'
  2426  007FDE  65                 	db	101	;'e'
  2427  007FDF  74                 	db	116	;'t'
  2428  007FE0  20                 	db	32
  2429  007FE1  73                 	db	115	;'s'
  2430  007FE2  66                 	db	102	;'f'
  2431  007FE3  00                 	db	0
  2432  007FE4                     STR_56:
  2433  007FE4  73                 	db	115	;'s'
  2434  007FE5  65                 	db	101	;'e'
  2435  007FE6  74                 	db	116	;'t'
  2436  007FE7  20                 	db	32
  2437  007FE8  63                 	db	99	;'c'
  2438  007FE9  72                 	db	114	;'r'
  2439  007FEA  00                 	db	0
  2440  007FEB                     STR_65:
  2441  007FEB  73                 	db	115	;'s'
  2442  007FEC  65                 	db	101	;'e'
  2443  007FED  74                 	db	116	;'t'
  2444  007FEE  20                 	db	32
  2445  007FEF  62                 	db	98	;'b'
  2446  007FF0  77                 	db	119	;'w'
  2447  007FF1  00                 	db	0
  2448  007FF2                     STR_76:
  2449  007FF2  20                 	db	32
  2450  007FF3  25                 	db	37
  2451  007FF4  64                 	db	100	;'d'
  2452  007FF5  63                 	db	99	;'c'
  2453  007FF6  56                 	db	86	;'V'
  2454  007FF7  00                 	db	0
  2455  007FF8                     STR_33:
  2456  007FF8  52                 	db	82	;'R'
  2457  007FF9  4E                 	db	78	;'N'
  2458  007FFA  00                 	db	0
  2459  007FFB                     STR_87:
  2460  007FFB  43                 	db	67	;'C'
  2461  007FFC  00                 	db	0
  2462  007FFD                     STR_21:
  2463  007FFD  7A                 	db	122	;'z'
  2464  007FFE  00                 	db	0
  2465  0000                     
  2466                           ; #config settings
  2467  007FFF  00                 	db	0	; dummy byte at the end
  2468  0000                     
  2469                           	psect	cinit
  2470  0047D2                     __pcinit:
  2471                           	opt stack 0
  2472  0047D2                     start_initialization:
  2473                           	opt stack 0
  2474  0047D2                     __initialization:
  2475                           	opt stack 0
  2476                           
  2477                           ; Clear objects allocated to BANK2 (128 bytes)
  2478  0047D2  EE02  F000         	lfsr	0,__pbssBANK2
  2479  0047D6  0E80               	movlw	128
  2480  0047D8                     clear_0:
  2481  0047D8  6AEE               	clrf	postinc0,c
  2482  0047DA  06E8               	decf	wreg,f,c
  2483  0047DC  E1FD               	bnz	clear_0
  2484                           
  2485                           ; Clear objects allocated to BANK1 (253 bytes)
  2486  0047DE  EE01  F000         	lfsr	0,__pbssBANK1
  2487  0047E2  0EFD               	movlw	253
  2488  0047E4                     clear_1:
  2489  0047E4  6AEE               	clrf	postinc0,c
  2490  0047E6  06E8               	decf	wreg,f,c
  2491  0047E8  E1FD               	bnz	clear_1
  2492                           
  2493                           ; Clear objects allocated to BANK0 (5 bytes)
  2494  0047EA  0100               	movlb	0
  2495  0047EC  6BF8               	clrf	(__pbssBANK0+4)& (0+255),b
  2496  0047EE  6BF7               	clrf	(__pbssBANK0+3)& (0+255),b
  2497  0047F0  6BF6               	clrf	(__pbssBANK0+2)& (0+255),b
  2498  0047F2  6BF5               	clrf	(__pbssBANK0+1)& (0+255),b
  2499  0047F4  6BF4               	clrf	__pbssBANK0& (0+255),b
  2500                           
  2501                           ; Clear objects allocated to COMRAM (45 bytes)
  2502  0047F6  EE00  F001         	lfsr	0,__pbssCOMRAM
  2503  0047FA  0E2D               	movlw	45
  2504  0047FC                     clear_2:
  2505  0047FC  6AEE               	clrf	postinc0,c
  2506  0047FE  06E8               	decf	wreg,f,c
  2507  004800  E1FD               	bnz	clear_2
  2508                           
  2509                           ; Initialize objects allocated to BANK1 (2 bytes)
  2510                           ; load TBLPTR registers with __pidataBANK1
  2511  004802  0EF6               	movlw	low __pidataBANK1
  2512  004804  6EF6               	movwf	tblptrl,c
  2513  004806  0E3A               	movlw	high __pidataBANK1
  2514  004808  6EF7               	movwf	tblptrh,c
  2515  00480A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2516  00480C  6EF8               	movwf	tblptru,c
  2517  00480E  0009               	tblrd		*+	;fetch initializer
  2518  004810  CFF5 F1FD          	movff	tablat,__pdataBANK1
  2519  004814  0009               	tblrd		*+	;fetch initializer
  2520  004816  CFF5 F1FE          	movff	tablat,__pdataBANK1+1
  2521                           
  2522                           ; Initialize objects allocated to BANK0 (2 bytes)
  2523                           ; load TBLPTR registers with __pidataBANK0
  2524  00481A  0E04               	movlw	low __pidataBANK0
  2525  00481C  6EF6               	movwf	tblptrl,c
  2526  00481E  0E10               	movlw	high __pidataBANK0
  2527  004820  6EF7               	movwf	tblptrh,c
  2528  004822  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2529  004824  6EF8               	movwf	tblptru,c
  2530  004826  0009               	tblrd		*+	;fetch initializer
  2531  004828  CFF5 F0F9          	movff	tablat,__pdataBANK0
  2532  00482C  0009               	tblrd		*+	;fetch initializer
  2533  00482E  CFF5 F0FA          	movff	tablat,__pdataBANK0+1
  2534  004832                     end_of_initialization:
  2535                           	opt stack 0
  2536  004832                     __end_of__initialization:
  2537                           	opt stack 0
  2538  004832  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2539  004834  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2540  004836  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2541  004838  6EF8               	movwf	tblptru,c
  2542  00483A  0100               	movlb	0
  2543  00483C  EF89  F029         	goto	_main	;jump to C main() function
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           postinc0	equ	0xFEE
  2549                           wreg	equ	0xFE8
  2550                           
  2551                           	psect	bssCOMRAM
  2552  000001                     __pbssCOMRAM:
  2553                           	opt stack 0
  2554  000001                     _outPipes:
  2555                           	opt stack 0
  2556  000001                     	ds	8
  2557  000009                     _inPipes:
  2558                           	opt stack 0
  2559  000009                     	ds	6
  2560  00000F                     _pBDTEntryIn:
  2561                           	opt stack 0
  2562  00000F                     	ds	6
  2563  000015                     _pBDTEntryEP0OutCurrent:
  2564                           	opt stack 0
  2565  000015                     	ds	2
  2566  000017                     _pBDTEntryEP0OutNext:
  2567                           	opt stack 0
  2568  000017                     	ds	2
  2569  000019                     _LastRS232Out:
  2570                           	opt stack 0
  2571  000019                     	ds	1
  2572  00001A                     _NextUSBOut:
  2573                           	opt stack 0
  2574  00001A                     	ds	1
  2575  00001B                     _RS232_Out_Data_Rdy:
  2576                           	opt stack 0
  2577  00001B                     	ds	1
  2578  00001C                     _RS232cp:
  2579                           	opt stack 0
  2580  00001C                     	ds	1
  2581  00001D                     _USBDeferStatusStagePacket:
  2582                           	opt stack 0
  2583  00001D                     	ds	1
  2584  00001E                     _USBStatusStageTimeoutCounter:
  2585                           	opt stack 0
  2586  00001E                     	ds	1
  2587  00001F                     _cdc_trf_state:
  2588                           	opt stack 0
  2589  00001F                     	ds	1
  2590  000020                     _controlTransferState:
  2591                           	opt stack 0
  2592  000020                     	ds	1
  2593  000021                     _endpoint_number:
  2594                           	opt stack 0
  2595  000021                     	ds	1
  2596  000022                     _eusartRxCount:
  2597                           	opt stack 0
  2598  000022                     	ds	1
  2599  000023                     _eusartTxBufferRemaining:
  2600                           	opt stack 0
  2601  000023                     	ds	1
  2602  000024                     _eusartTxHead:
  2603                           	opt stack 0
  2604  000024                     	ds	1
  2605  000025                     _eusartTxTail:
  2606                           	opt stack 0
  2607  000025                     	ds	1
  2608  000026                     _modemBufferIndex:
  2609                           	opt stack 0
  2610  000026                     	ds	1
  2611  000027                     _runningState:
  2612                           	opt stack 0
  2613  000027                     	ds	1
  2614  000028                     _rxByteFlag:
  2615                           	opt stack 0
  2616  000028                     	ds	1
  2617  000029                     _secTicker:
  2618                           	opt stack 0
  2619  000029                     	ds	1
  2620  00002A                     _shortPacketStatus:
  2621                           	opt stack 0
  2622  00002A                     	ds	1
  2623  00002B                     moteJoiningProcess@pkt_cnt:
  2624                           	opt stack 0
  2625  00002B                     	ds	1
  2626  00002C                     _USBActiveConfiguration:
  2627                           	opt stack 0
  2628  00002C                     	ds	1
  2629  00002D                     _USTATcopy:
  2630                           	opt stack 0
  2631  00002D                     	ds	1
  2632                           tblptru	equ	0xFF8
  2633                           tblptrh	equ	0xFF7
  2634                           tblptrl	equ	0xFF6
  2635                           tablat	equ	0xFF5
  2636                           postinc0	equ	0xFEE
  2637                           wreg	equ	0xFE8
  2638                           
  2639                           	psect	bssBANK0
  2640  0000F4                     __pbssBANK0:
  2641                           	opt stack 0
  2642  0000F4                     _USBDeviceState:
  2643                           	opt stack 0
  2644  0000F4                     	ds	1
  2645  0000F5                     _appTimer:
  2646                           	opt stack 0
  2647  0000F5                     	ds	1
  2648  0000F6                     _cdc_rx_len:
  2649                           	opt stack 0
  2650  0000F6                     	ds	1
  2651  0000F7                     _cdc_tx_len:
  2652                           	opt stack 0
  2653  0000F7                     	ds	1
  2654  0000F8                     _randomPortNum:
  2655                           	opt stack 0
  2656  0000F8                     	ds	1
  2657                           tblptru	equ	0xFF8
  2658                           tblptrh	equ	0xFF7
  2659                           tblptrl	equ	0xFF6
  2660                           tablat	equ	0xFF5
  2661                           postinc0	equ	0xFEE
  2662                           wreg	equ	0xFE8
  2663                           
  2664                           	psect	dataBANK0
  2665  0000F9                     __pdataBANK0:
  2666                           	opt stack 0
  2667  0000F9                     _moteState:
  2668                           	opt stack 0
  2669  0000F9                     	ds	1
  2670  0000FA                     moteJoiningProcess@float_val:
  2671                           	opt stack 0
  2672  0000FA                     	ds	1
  2673                           tblptru	equ	0xFF8
  2674                           tblptrh	equ	0xFF7
  2675                           tblptrl	equ	0xFF6
  2676                           tablat	equ	0xFF5
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           
  2680                           	psect	bssBANK1
  2681  000100                     __pbssBANK1:
  2682                           	opt stack 0
  2683  000100                     _responseId:
  2684                           	opt stack 0
  2685  000100                     	ds	16
  2686  000110                     _responseData:
  2687                           	opt stack 0
  2688  000110                     	ds	8
  2689  000118                     _pBDTEntryOut:
  2690                           	opt stack 0
  2691  000118                     	ds	6
  2692  00011E                     service_pushbutton@PB_Timer:
  2693                           	opt stack 0
  2694  00011E                     	ds	4
  2695  000122                     _ep_data_in:
  2696                           	opt stack 0
  2697  000122                     	ds	3
  2698  000125                     _ep_data_out:
  2699                           	opt stack 0
  2700  000125                     	ds	3
  2701  000128                     _pCDCDst:
  2702                           	opt stack 0
  2703  000128                     	ds	3
  2704  00012B                     _pCDCSrc:
  2705                           	opt stack 0
  2706  00012B                     	ds	3
  2707  00012E                     _responsePortNum:
  2708                           	opt stack 0
  2709  00012E                     	ds	3
  2710  000131                     _CDCDataInHandle:
  2711                           	opt stack 0
  2712  000131                     	ds	2
  2713  000133                     _CDCDataOutHandle:
  2714                           	opt stack 0
  2715  000133                     	ds	2
  2716  000135                     _light:
  2717                           	opt stack 0
  2718  000135                     	ds	2
  2719  000137                     _pDst:
  2720                           	opt stack 0
  2721  000137                     	ds	2
  2722  000139                     _temperature:
  2723                           	opt stack 0
  2724  000139                     	ds	2
  2725  00013B                     _timer1ReloadVal:
  2726                           	opt stack 0
  2727  00013B                     	ds	2
  2728  00013D                     _timerMinTickCount:
  2729                           	opt stack 0
  2730  00013D                     	ds	2
  2731  00013F                     _timerMsTickCount:
  2732                           	opt stack 0
  2733  00013F                     	ds	2
  2734  000141                     moteJoiningProcess@mode:
  2735                           	opt stack 0
  2736  000141                     	ds	2
  2737  000143                     moteJoiningProcess@skip_count:
  2738                           	opt stack 0
  2739  000143                     	ds	2
  2740  000145                     _BothEP0OutUOWNsSet:
  2741                           	opt stack 0
  2742  000145                     	ds	1
  2743  000146                     _RemoteWakeup:
  2744                           	opt stack 0
  2745  000146                     	ds	1
  2746  000147                     _USBBusIsSuspended:
  2747                           	opt stack 0
  2748  000147                     	ds	1
  2749  000148                     _USBDeferINDataStagePackets:
  2750                           	opt stack 0
  2751  000148                     	ds	1
  2752  000149                     _USBDeferOUTDataStagePackets:
  2753                           	opt stack 0
  2754  000149                     	ds	1
  2755  00014A                     _USBStatusStageEnabledFlag1:
  2756                           	opt stack 0
  2757  00014A                     	ds	1
  2758  00014B                     _USBStatusStageEnabledFlag2:
  2759                           	opt stack 0
  2760  00014B                     	ds	1
  2761  00014C                     _activeState:
  2762                           	opt stack 0
  2763  00014C                     	ds	1
  2764  00014D                     _cdc_mem_type:
  2765                           	opt stack 0
  2766  00014D                     	ds	1
  2767  00014E                     _eusartRxHead:
  2768                           	opt stack 0
  2769  00014E                     	ds	1
  2770  00014F                     _eusartRxTail:
  2771                           	opt stack 0
  2772  00014F                     	ds	1
  2773  000150                     _m10SecTicker:
  2774                           	opt stack 0
  2775  000150                     	ds	1
  2776  000151                     _operationType:
  2777                           	opt stack 0
  2778  000151                     	ds	1
  2779  000152                     _sleepTicker:
  2780                           	opt stack 0
  2781  000152                     	ds	1
  2782  000153                     _usbState:
  2783                           	opt stack 0
  2784  000153                     	ds	1
  2785  000154                     moteJoiningProcess@pending_confirm:
  2786                           	opt stack 0
  2787  000154                     	ds	1
  2788  000155                     service_pushbutton@Release_Timer:
  2789                           	opt stack 0
  2790  000155                     	ds	1
  2791  000156                     _USB_Buffer:
  2792                           	opt stack 0
  2793  000156                     	ds	64
  2794  000196                     _modemResonseBuffer:
  2795                           	opt stack 0
  2796  000196                     	ds	64
  2797  0001D6                     _dataBuffer:
  2798                           	opt stack 0
  2799  0001D6                     	ds	12
  2800  0001E2                     _cdc_notice:
  2801                           	opt stack 0
  2802  0001E2                     	ds	10
  2803  0001EC                     _dummy_encapsulated_cmd_response:
  2804                           	opt stack 0
  2805  0001EC                     	ds	8
  2806  0001F4                     _line_coding:
  2807                           	opt stack 0
  2808  0001F4                     	ds	7
  2809  0001FB                     _USBAlternateInterface:
  2810                           	opt stack 0
  2811  0001FB                     	ds	2
  2812                           tblptru	equ	0xFF8
  2813                           tblptrh	equ	0xFF7
  2814                           tblptrl	equ	0xFF6
  2815                           tablat	equ	0xFF5
  2816                           postinc0	equ	0xFEE
  2817                           wreg	equ	0xFE8
  2818                           
  2819                           	psect	dataBANK1
  2820  0001FD                     __pdataBANK1:
  2821                           	opt stack 0
  2822  0001FD                     _selectedFont:
  2823                           	opt stack 0
  2824  0001FD                     	ds	2
  2825                           tblptru	equ	0xFF8
  2826                           tblptrh	equ	0xFF7
  2827                           tblptrl	equ	0xFF6
  2828                           tablat	equ	0xFF5
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           
  2832                           	psect	bssBANK2
  2833  000200                     __pbssBANK2:
  2834                           	opt stack 0
  2835  000200                     _eusartRxBuffer:
  2836                           	opt stack 0
  2837  000200                     	ds	64
  2838  000240                     _eusartTxBuffer:
  2839                           	opt stack 0
  2840  000240                     	ds	64
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           postinc0	equ	0xFEE
  2846                           wreg	equ	0xFE8
  2847                           
  2848                           	psect	cstackBANK2
  2849  000280                     __pcstackBANK2:
  2850                           	opt stack 0
  2851  000280                     moteHandler@gotoSleep:
  2852                           	opt stack 0
  2853                           
  2854                           ; 1 bytes @ 0x0
  2855  000280                     	ds	1
  2856  000281                     moteHandler@gotoNextState:
  2857                           	opt stack 0
  2858                           
  2859                           ; 1 bytes @ 0x1
  2860  000281                     	ds	1
  2861  000282                     moteHandler@Traw:
  2862                           	opt stack 0
  2863                           
  2864                           ; 2 bytes @ 0x2
  2865  000282                     	ds	2
  2866  000284                     moteHandler@s2Button:
  2867                           	opt stack 0
  2868                           
  2869                           ; 1 bytes @ 0x4
  2870  000284                     	ds	1
  2871  000285                     moteHandler@buttonPress:
  2872                           	opt stack 0
  2873                           
  2874                           ; 1 bytes @ 0x5
  2875  000285                     	ds	1
  2876  000286                     moteHandler@i:
  2877                           	opt stack 0
  2878                           
  2879                           ; 1 bytes @ 0x6
  2880  000286                     	ds	1
  2881  000287                     moteHandler@i_1488:
  2882                           	opt stack 0
  2883                           
  2884                           ; 1 bytes @ 0x7
  2885  000287                     	ds	1
  2886  000288                     moteHandler@readMessage:
  2887                           	opt stack 0
  2888                           
  2889                           ; 1 bytes @ 0x8
  2890  000288                     	ds	1
  2891                           tblptru	equ	0xFF8
  2892                           tblptrh	equ	0xFF7
  2893                           tblptrl	equ	0xFF6
  2894                           tablat	equ	0xFF5
  2895                           postinc0	equ	0xFEE
  2896                           wreg	equ	0xFE8
  2897                           
  2898                           	psect	cstackBANK0
  2899  000060                     __pcstackBANK0:
  2900                           	opt stack 0
  2901  000060                     ??_TMR1_Initialize:
  2902  000060                     ??_isdigit:
  2903  000060                     ?_ADC_GetConversion:
  2904                           	opt stack 0
  2905  000060                     ?_strncmp:
  2906                           	opt stack 0
  2907  000060                     ?_strcmp:
  2908                           	opt stack 0
  2909  000060                     ?_USBTransferOnePacket:
  2910                           	opt stack 0
  2911  000060                     ?___wmul:
  2912                           	opt stack 0
  2913  000060                     ?___lwdiv:
  2914                           	opt stack 0
  2915  000060                     ?___xxtofl:
  2916                           	opt stack 0
  2917  000060                     nibble2int@c:
  2918                           	opt stack 0
  2919  000060                     MOTEapp_handlerState@state:
  2920                           	opt stack 0
  2921  000060                     MOTEapp_TimerBasedTask@timerTask:
  2922                           	opt stack 0
  2923  000060                     hexToStr@character:
  2924                           	opt stack 0
  2925  000060                     moteApp_clearBuffers@counter:
  2926                           	opt stack 0
  2927  000060                     USBapp_handlerState@state:
  2928                           	opt stack 0
  2929  000060                     service_pushbutton@bs:
  2930                           	opt stack 0
  2931  000060                     EUSART_Read@readValue:
  2932                           	opt stack 0
  2933  000060                     EUSART_Write@txData:
  2934                           	opt stack 0
  2935  000060                     EUSART_FlushBuffer@index:
  2936                           	opt stack 0
  2937  000060                     SPI_Exchange8bit@data:
  2938                           	opt stack 0
  2939  000060                     DATAEE_WriteByte@bData:
  2940                           	opt stack 0
  2941  000060                     DATAEE_ReadByte@bAdd:
  2942                           	opt stack 0
  2943  000060                     TMR2_ReadTimer@readVal:
  2944                           	opt stack 0
  2945  000060                     USBTransferOnePacket@dir:
  2946                           	opt stack 0
  2947  000060                     ___lbdiv@divisor:
  2948                           	opt stack 0
  2949  000060                     ___lbmod@divisor:
  2950                           	opt stack 0
  2951  000060                     moteApp_delayms@length:
  2952                           	opt stack 0
  2953  000060                     oled_setFont@font:
  2954                           	opt stack 0
  2955  000060                     putUSBUSART@data:
  2956                           	opt stack 0
  2957  000060                     ___wmul@multiplier:
  2958                           	opt stack 0
  2959  000060                     ___lwdiv@dividend:
  2960                           	opt stack 0
  2961  000060                     memset@p1:
  2962                           	opt stack 0
  2963  000060                     strcmp@s1:
  2964                           	opt stack 0
  2965  000060                     strncmp@s1:
  2966                           	opt stack 0
  2967  000060                     ___xxtofl@val:
  2968                           	opt stack 0
  2969                           
  2970                           ; 4 bytes @ 0x0
  2971  000060                     	ds	1
  2972  000061                     MOTEapp_getModemResponse@terminatorReceived:
  2973                           	opt stack 0
  2974  000061                     moteApp_clearBuffers@counter_1736:
  2975                           	opt stack 0
  2976  000061                     oled_writeCommand@command:
  2977                           	opt stack 0
  2978  000061                     oled_writeData@data:
  2979                           	opt stack 0
  2980  000061                     DATAEE_WriteByte@bAdd:
  2981                           	opt stack 0
  2982  000061                     _isdigit$6028:
  2983                           	opt stack 0
  2984  000061                     ___lbdiv@dividend:
  2985                           	opt stack 0
  2986  000061                     ___lbmod@dividend:
  2987                           	opt stack 0
  2988  000061                     sendCommand@string:
  2989                           	opt stack 0
  2990  000061                     sendDataCommand@string:
  2991                           	opt stack 0
  2992  000061                     USBTransferOnePacket@data:
  2993                           	opt stack 0
  2994                           
  2995                           ; 2 bytes @ 0x1
  2996  000061                     	ds	1
  2997  000062                     ??_moteApp_delayms:
  2998  000062                     ??_ADC_GetConversion:
  2999  000062                     ??_oled_devInit:
  3000  000062                     MOTEapp_getModemResponse@bufferByte:
  3001                           	opt stack 0
  3002  000062                     moteApp_clearBuffers@counter_1737:
  3003                           	opt stack 0
  3004  000062                     Set_Page_Address@address:
  3005                           	opt stack 0
  3006  000062                     Set_Column_Address@address:
  3007                           	opt stack 0
  3008  000062                     oled_setDisplay@displayType:
  3009                           	opt stack 0
  3010  000062                     oled_displayOff@state:
  3011                           	opt stack 0
  3012  000062                     DATAEE_WriteByte@GIEBitValue:
  3013                           	opt stack 0
  3014  000062                     putUSBUSART@length:
  3015                           	opt stack 0
  3016  000062                     isdigit@c:
  3017                           	opt stack 0
  3018  000062                     ___lbdiv@counter:
  3019                           	opt stack 0
  3020  000062                     ___lbmod@counter:
  3021                           	opt stack 0
  3022  000062                     ___wmul@multiplicand:
  3023                           	opt stack 0
  3024  000062                     ___lwdiv@divisor:
  3025                           	opt stack 0
  3026  000062                     memset@c:
  3027                           	opt stack 0
  3028  000062                     strcmp@s2:
  3029                           	opt stack 0
  3030  000062                     strncmp@s2:
  3031                           	opt stack 0
  3032                           
  3033                           ; 2 bytes @ 0x2
  3034  000062                     	ds	1
  3035  000063                     oled_putChar@station_dot:
  3036                           	opt stack 0
  3037  000063                     USBTransferOnePacket@len:
  3038                           	opt stack 0
  3039  000063                     ___lbdiv@quotient:
  3040                           	opt stack 0
  3041  000063                     ___lbmod@rem:
  3042                           	opt stack 0
  3043  000063                     sendDataCommand@appData:
  3044                           	opt stack 0
  3045  000063                     moteApp_delayms@counter:
  3046                           	opt stack 0
  3047                           
  3048                           ; 2 bytes @ 0x3
  3049  000063                     	ds	1
  3050  000064                     ??_strcmp:
  3051  000064                     ??___xxtofl:
  3052  000064                     moteApp_add8bToDataBuffer@bufferLocation:
  3053                           	opt stack 0
  3054  000064                     oled_putChar@start_page:
  3055                           	opt stack 0
  3056  000064                     ADC_GetConversion@channel:
  3057                           	opt stack 0
  3058  000064                     USBTransferOnePacket@ep:
  3059                           	opt stack 0
  3060  000064                     ___lwdiv@counter:
  3061                           	opt stack 0
  3062  000064                     ___wmul@product:
  3063                           	opt stack 0
  3064  000064                     memset@n:
  3065                           	opt stack 0
  3066  000064                     strncmp@len:
  3067                           	opt stack 0
  3068                           
  3069                           ; 2 bytes @ 0x4
  3070  000064                     	ds	1
  3071  000065                     ??_oled_putChar:
  3072  000065                     sendDataCommand@dataLength:
  3073                           	opt stack 0
  3074  000065                     moteApp_add8bToDataBuffer@number:
  3075                           	opt stack 0
  3076  000065                     modemResync@escapeCounter:
  3077                           	opt stack 0
  3078  000065                     USBTransferOnePacket@handle:
  3079                           	opt stack 0
  3080  000065                     ___lwdiv@quotient:
  3081                           	opt stack 0
  3082                           
  3083                           ; 2 bytes @ 0x5
  3084  000065                     	ds	1
  3085  000066                     ??_strncmp:
  3086  000066                     ??_sendDataCommand:
  3087  000066                     strcmp@t0:
  3088                           	opt stack 0
  3089  000066                     memset@p:
  3090                           	opt stack 0
  3091                           
  3092                           ; 2 bytes @ 0x6
  3093  000066                     	ds	1
  3094  000067                     ?___lwmod:
  3095                           	opt stack 0
  3096  000067                     modemResync@escapeEvent:
  3097                           	opt stack 0
  3098  000067                     sendDataCommand@byteCount:
  3099                           	opt stack 0
  3100  000067                     ADC_TempConversion@tempRaw:
  3101                           	opt stack 0
  3102  000067                     strcmp@t2:
  3103                           	opt stack 0
  3104  000067                     getsUSBUSART@buffer:
  3105                           	opt stack 0
  3106  000067                     _CDCTxService$5699:
  3107                           	opt stack 0
  3108  000067                     ___lwmod@dividend:
  3109                           	opt stack 0
  3110                           
  3111                           ; 2 bytes @ 0x7
  3112  000067                     	ds	1
  3113  000068                     sendDataCommand@byteCount_1669:
  3114                           	opt stack 0
  3115  000068                     ADC_TempConversion@temp:
  3116                           	opt stack 0
  3117  000068                     USBDeviceInit@i:
  3118                           	opt stack 0
  3119  000068                     strcmp@t1:
  3120                           	opt stack 0
  3121  000068                     ___xxtofl@sign:
  3122                           	opt stack 0
  3123                           
  3124                           ; 1 bytes @ 0x8
  3125  000068                     	ds	1
  3126  000069                     getsUSBUSART@len:
  3127                           	opt stack 0
  3128  000069                     CDCTxService@i:
  3129                           	opt stack 0
  3130  000069                     ___xxtofl@exp:
  3131                           	opt stack 0
  3132  000069                     ___lwmod@divisor:
  3133                           	opt stack 0
  3134                           
  3135                           ; 2 bytes @ 0x9
  3136  000069                     	ds	1
  3137  00006A                     CDCTxService@byte_to_send:
  3138                           	opt stack 0
  3139  00006A                     ___xxtofl@arg:
  3140                           	opt stack 0
  3141                           
  3142                           ; 4 bytes @ 0xA
  3143  00006A                     	ds	1
  3144  00006B                     oled_putChar@k:
  3145                           	opt stack 0
  3146  00006B                     ___lwmod@counter:
  3147                           	opt stack 0
  3148  00006B                     _getsUSBUSART$5651:
  3149                           	opt stack 0
  3150                           
  3151                           ; 2 bytes @ 0xB
  3152  00006B                     	ds	1
  3153  00006C                     ?_sprintf:
  3154                           	opt stack 0
  3155  00006C                     oled_putChar@index:
  3156                           	opt stack 0
  3157  00006C                     moteApp_add16bToDataBuffer@number:
  3158                           	opt stack 0
  3159  00006C                     sprintf@f:
  3160                           	opt stack 0
  3161                           
  3162                           ; 2 bytes @ 0xC
  3163  00006C                     	ds	1
  3164  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  3165  00006D                     oled_clearRow@page:
  3166                           	opt stack 0
  3167  00006D                     oled_putString@string:
  3168                           	opt stack 0
  3169                           
  3170                           ; 2 bytes @ 0xD
  3171  00006D                     	ds	1
  3172  00006E                     ?___flmul:
  3173                           	opt stack 0
  3174  00006E                     moteApp_add16bToDataBuffer@bufferLocation:
  3175                           	opt stack 0
  3176  00006E                     oled_clearRow@index:
  3177                           	opt stack 0
  3178  00006E                     ___flmul@b:
  3179                           	opt stack 0
  3180                           
  3181                           ; 4 bytes @ 0xE
  3182  00006E                     	ds	1
  3183  00006F                     oled_putString@station_dot:
  3184                           	opt stack 0
  3185                           
  3186                           ; 1 bytes @ 0xF
  3187  00006F                     	ds	1
  3188  000070                     oled_putString@start_page:
  3189                           	opt stack 0
  3190                           
  3191                           ; 1 bytes @ 0x10
  3192  000070                     	ds	1
  3193  000071                     oled_putString@index:
  3194                           	opt stack 0
  3195                           
  3196                           ; 1 bytes @ 0x11
  3197  000071                     	ds	1
  3198  000072                     oled_putUint8@station_dot:
  3199                           	opt stack 0
  3200  000072                     oled_putUint16@number:
  3201                           	opt stack 0
  3202  000072                     ___flmul@a:
  3203                           	opt stack 0
  3204                           
  3205                           ; 4 bytes @ 0x12
  3206  000072                     	ds	1
  3207  000073                     oled_putUint8@start_page:
  3208                           	opt stack 0
  3209                           
  3210                           ; 1 bytes @ 0x13
  3211  000073                     	ds	1
  3212  000074                     oled_putUint8@number:
  3213                           	opt stack 0
  3214  000074                     oled_putUint16@station_dot:
  3215                           	opt stack 0
  3216                           
  3217                           ; 1 bytes @ 0x14
  3218  000074                     	ds	1
  3219  000075                     oled_putUint16@start_page:
  3220                           	opt stack 0
  3221  000075                     oled_putUint8@numData:
  3222                           	opt stack 0
  3223                           
  3224                           ; 6 bytes @ 0x15
  3225  000075                     	ds	1
  3226  000076                     ??___flmul:
  3227  000076                     oled_putUint16@numData:
  3228                           	opt stack 0
  3229                           
  3230                           ; 6 bytes @ 0x16
  3231  000076                     	ds	2
  3232  000078                     ??_sprintf:
  3233                           
  3234                           ; 1 bytes @ 0x18
  3235  000078                     	ds	2
  3236  00007A                     ___flmul@sign:
  3237                           	opt stack 0
  3238                           
  3239                           ; 1 bytes @ 0x1A
  3240  00007A                     	ds	1
  3241  00007B                     ___flmul@aexp:
  3242                           	opt stack 0
  3243                           
  3244                           ; 1 bytes @ 0x1B
  3245  00007B                     	ds	1
  3246  00007C                     moteRunningProcess@selectButton:
  3247                           	opt stack 0
  3248  00007C                     sprintf@idx:
  3249                           	opt stack 0
  3250  00007C                     ___flmul@bexp:
  3251                           	opt stack 0
  3252                           
  3253                           ; 1 bytes @ 0x1C
  3254  00007C                     	ds	1
  3255  00007D                     moteRunningProcess@messageReady:
  3256                           	opt stack 0
  3257  00007D                     sprintf@ap:
  3258                           	opt stack 0
  3259  00007D                     ___flmul@grs:
  3260                           	opt stack 0
  3261                           
  3262                           ; 4 bytes @ 0x1D
  3263  00007D                     	ds	1
  3264  00007E                     moteRunningProcess@sleepEvent:
  3265                           	opt stack 0
  3266  00007E                     sprintf@prec:
  3267                           	opt stack 0
  3268                           
  3269                           ; 1 bytes @ 0x1E
  3270  00007E                     	ds	1
  3271  00007F                     ??_moteRunningProcess:
  3272  00007F                     sprintf@val:
  3273                           	opt stack 0
  3274                           
  3275                           ; 2 bytes @ 0x1F
  3276  00007F                     	ds	2
  3277  000081                     sprintf@flag:
  3278                           	opt stack 0
  3279  000081                     moteRunningProcess@Traw:
  3280                           	opt stack 0
  3281  000081                     ___flmul@prod:
  3282                           	opt stack 0
  3283                           
  3284                           ; 4 bytes @ 0x21
  3285  000081                     	ds	1
  3286  000082                     sprintf@width:
  3287                           	opt stack 0
  3288                           
  3289                           ; 2 bytes @ 0x22
  3290  000082                     	ds	1
  3291  000083                     moteRunningProcess@i:
  3292                           	opt stack 0
  3293                           
  3294                           ; 1 bytes @ 0x23
  3295  000083                     	ds	1
  3296  000084                     moteRunningProcess@i_1611:
  3297                           	opt stack 0
  3298  000084                     sprintf@sp:
  3299                           	opt stack 0
  3300                           
  3301                           ; 1 bytes @ 0x24
  3302  000084                     	ds	1
  3303  000085                     sprintf@c:
  3304                           	opt stack 0
  3305  000085                     ___flmul@temp:
  3306                           	opt stack 0
  3307                           
  3308                           ; 2 bytes @ 0x25
  3309  000085                     	ds	2
  3310  000087                     ?___fldiv:
  3311                           	opt stack 0
  3312  000087                     ___fldiv@b:
  3313                           	opt stack 0
  3314                           
  3315                           ; 4 bytes @ 0x27
  3316  000087                     	ds	4
  3317  00008B                     ___fldiv@a:
  3318                           	opt stack 0
  3319                           
  3320                           ; 4 bytes @ 0x2B
  3321  00008B                     	ds	4
  3322  00008F                     ??___fldiv:
  3323                           
  3324                           ; 1 bytes @ 0x2F
  3325  00008F                     	ds	4
  3326  000093                     ___fldiv@sign:
  3327                           	opt stack 0
  3328                           
  3329                           ; 1 bytes @ 0x33
  3330  000093                     	ds	1
  3331  000094                     ___fldiv@rem:
  3332                           	opt stack 0
  3333                           
  3334                           ; 4 bytes @ 0x34
  3335  000094                     	ds	4
  3336  000098                     ___fldiv@new_exp:
  3337                           	opt stack 0
  3338                           
  3339                           ; 2 bytes @ 0x38
  3340  000098                     	ds	2
  3341  00009A                     ___fldiv@grs:
  3342                           	opt stack 0
  3343                           
  3344                           ; 4 bytes @ 0x3A
  3345  00009A                     	ds	4
  3346  00009E                     ___fldiv@bexp:
  3347                           	opt stack 0
  3348                           
  3349                           ; 1 bytes @ 0x3E
  3350  00009E                     	ds	1
  3351  00009F                     ___fldiv@aexp:
  3352                           	opt stack 0
  3353                           
  3354                           ; 1 bytes @ 0x3F
  3355  00009F                     	ds	1
  3356  0000A0                     ?___fltol:
  3357                           	opt stack 0
  3358  0000A0                     ___fltol@f1:
  3359                           	opt stack 0
  3360                           
  3361                           ; 4 bytes @ 0x40
  3362  0000A0                     	ds	4
  3363  0000A4                     ??___fltol:
  3364                           
  3365                           ; 1 bytes @ 0x44
  3366  0000A4                     	ds	4
  3367  0000A8                     ___fltol@sign1:
  3368                           	opt stack 0
  3369                           
  3370                           ; 1 bytes @ 0x48
  3371  0000A8                     	ds	1
  3372  0000A9                     ___fltol@exp1:
  3373                           	opt stack 0
  3374                           
  3375                           ; 1 bytes @ 0x49
  3376  0000A9                     	ds	1
  3377  0000AA                     moteJoiningProcess@switchEvent:
  3378                           	opt stack 0
  3379                           
  3380                           ; 1 bytes @ 0x4A
  3381  0000AA                     	ds	1
  3382  0000AB                     ??_moteJoiningProcess:
  3383                           
  3384                           ; 1 bytes @ 0x4B
  3385  0000AB                     	ds	7
  3386  0000B2                     moteJoiningProcess@buf:
  3387                           	opt stack 0
  3388                           
  3389                           ; 50 bytes @ 0x52
  3390  0000B2                     	ds	50
  3391  0000E4                     _moteJoiningProcess$6539:
  3392                           	opt stack 0
  3393                           
  3394                           ; 4 bytes @ 0x84
  3395  0000E4                     	ds	4
  3396  0000E8                     moteJoiningProcess@old_float:
  3397                           	opt stack 0
  3398                           
  3399                           ; 2 bytes @ 0x88
  3400  0000E8                     	ds	2
  3401  0000EA                     moteJoiningProcess@ana:
  3402                           	opt stack 0
  3403                           
  3404                           ; 2 bytes @ 0x8A
  3405  0000EA                     	ds	2
  3406  0000EC                     moteJoiningProcess@cV:
  3407                           	opt stack 0
  3408                           
  3409                           ; 2 bytes @ 0x8C
  3410  0000EC                     	ds	2
  3411  0000EE                     moteJoiningProcess@joiningComplete:
  3412                           	opt stack 0
  3413                           
  3414                           ; 1 bytes @ 0x8E
  3415  0000EE                     	ds	1
  3416  0000EF                     moteJoiningProcess@batt:
  3417                           	opt stack 0
  3418                           
  3419                           ; 2 bytes @ 0x8F
  3420  0000EF                     	ds	2
  3421  0000F1                     moteJoiningProcess@messageReady:
  3422                           	opt stack 0
  3423                           
  3424                           ; 1 bytes @ 0x91
  3425  0000F1                     	ds	1
  3426  0000F2                     ??_moteHandler:
  3427                           
  3428                           ; 1 bytes @ 0x92
  3429  0000F2                     	ds	2
  3430  0000F4                     tblptru	equ	0xFF8
  3431                           tblptrh	equ	0xFF7
  3432                           tblptrl	equ	0xFF6
  3433                           tablat	equ	0xFF5
  3434                           postinc0	equ	0xFEE
  3435                           wreg	equ	0xFE8
  3436                           
  3437                           ; 1 bytes @ 0x94
  3438                           
  3439                           	psect	cstackCOMRAM
  3440  00002E                     __pcstackCOMRAM:
  3441                           	opt stack 0
  3442  00002E                     ??_USBStdGetDscHandler:
  3443  00002E                     ?i2_USBTransferOnePacket:
  3444                           	opt stack 0
  3445  00002E                     ?___lldiv:
  3446                           	opt stack 0
  3447  00002E                     USBConfigureEndpoint@direction:
  3448                           	opt stack 0
  3449  00002E                     USBCtrlTrfTxService@byteToSend:
  3450                           	opt stack 0
  3451  00002E                     i2USBTransferOnePacket@dir:
  3452                           	opt stack 0
  3453  00002E                     USBStdGetStatusHandler@p:
  3454                           	opt stack 0
  3455  00002E                     i2memset@p1:
  3456                           	opt stack 0
  3457  00002E                     ___lldiv@dividend:
  3458                           	opt stack 0
  3459                           
  3460                           ; 4 bytes @ 0x0
  3461  00002E                     	ds	1
  3462  00002F                     ??_USBConfigureEndpoint:
  3463  00002F                     i2USBTransferOnePacket@data:
  3464                           	opt stack 0
  3465                           
  3466                           ; 2 bytes @ 0x1
  3467  00002F                     	ds	1
  3468  000030                     i2memset@c:
  3469                           	opt stack 0
  3470                           
  3471                           ; 2 bytes @ 0x2
  3472  000030                     	ds	1
  3473  000031                     i2USBTransferOnePacket@len:
  3474                           	opt stack 0
  3475                           
  3476                           ; 1 bytes @ 0x3
  3477  000031                     	ds	1
  3478  000032                     i2USBTransferOnePacket@ep:
  3479                           	opt stack 0
  3480  000032                     i2memset@n:
  3481                           	opt stack 0
  3482  000032                     ___lldiv@divisor:
  3483                           	opt stack 0
  3484                           
  3485                           ; 4 bytes @ 0x4
  3486  000032                     	ds	1
  3487  000033                     USBConfigureEndpoint@EPNum:
  3488                           	opt stack 0
  3489  000033                     i2USBTransferOnePacket@handle:
  3490                           	opt stack 0
  3491                           
  3492                           ; 2 bytes @ 0x5
  3493  000033                     	ds	1
  3494  000034                     USBConfigureEndpoint@handle:
  3495                           	opt stack 0
  3496  000034                     i2memset@p:
  3497                           	opt stack 0
  3498                           
  3499                           ; 2 bytes @ 0x6
  3500  000034                     	ds	2
  3501  000036                     USBEnableEndpoint@options:
  3502                           	opt stack 0
  3503  000036                     i2USBDeviceInit@i:
  3504                           	opt stack 0
  3505  000036                     ___lldiv@quotient:
  3506                           	opt stack 0
  3507                           
  3508                           ; 4 bytes @ 0x8
  3509  000036                     	ds	1
  3510  000037                     USBEnableEndpoint@p:
  3511                           	opt stack 0
  3512                           
  3513                           ; 2 bytes @ 0x9
  3514  000037                     	ds	2
  3515  000039                     USBEnableEndpoint@ep:
  3516                           	opt stack 0
  3517                           
  3518                           ; 1 bytes @ 0xB
  3519  000039                     	ds	1
  3520  00003A                     USBapp_CdcEmulatorInitialize@i:
  3521                           	opt stack 0
  3522  00003A                     ___lldiv@counter:
  3523                           	opt stack 0
  3524                           
  3525                           ; 1 bytes @ 0xC
  3526  00003A                     	ds	1
  3527  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3528                           	opt stack 0
  3529  00003B                     USART_mySetLineCodingHandler@dwBaud:
  3530                           	opt stack 0
  3531                           
  3532                           ; 4 bytes @ 0xD
  3533  00003B                     	ds	2
  3534  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3535                           	opt stack 0
  3536                           
  3537                           ; 2 bytes @ 0xF
  3538  00003D                     	ds	2
  3539  00003F                     USBCtrlTrfRxService@i:
  3540                           	opt stack 0
  3541  00003F                     USBCtrlTrfInHandler@lastDTS:
  3542                           	opt stack 0
  3543  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3544                           	opt stack 0
  3545                           
  3546                           ; 2 bytes @ 0x11
  3547  00003F                     	ds	1
  3548  000040                     USBCtrlTrfRxService@byteToRead:
  3549                           	opt stack 0
  3550                           
  3551                           ; 1 bytes @ 0x12
  3552  000040                     	ds	1
  3553  000041                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3554                           
  3555                           ; 1 bytes @ 0x13
  3556  000041                     	ds	2
  3557  000043                     ??_USBStdFeatureReqHandler:
  3558  000043                     USBStdSetCfgHandler@i:
  3559                           	opt stack 0
  3560                           
  3561                           ; 1 bytes @ 0x15
  3562  000043                     	ds	2
  3563  000045                     USBStdFeatureReqHandler@pUEP:
  3564                           	opt stack 0
  3565                           
  3566                           ; 2 bytes @ 0x17
  3567  000045                     	ds	2
  3568  000047                     USBStdFeatureReqHandler@current_ep_data:
  3569                           	opt stack 0
  3570                           
  3571                           ; 1 bytes @ 0x19
  3572  000047                     	ds	1
  3573  000048                     USBStdFeatureReqHandler@p:
  3574                           	opt stack 0
  3575                           
  3576                           ; 2 bytes @ 0x1A
  3577  000048                     	ds	2
  3578  00004A                     ??_USBCtrlEPService:
  3579  00004A                     
  3580                           ; 1 bytes @ 0x1C
  3581  00004A                     	ds	2
  3582  00004C                     USBCtrlEPService@setup_cnt:
  3583                           	opt stack 0
  3584                           
  3585                           ; 1 bytes @ 0x1E
  3586  00004C                     	ds	1
  3587  00004D                     USBDeviceTasks@i:
  3588                           	opt stack 0
  3589                           
  3590                           ; 1 bytes @ 0x1F
  3591  00004D                     	ds	1
  3592  00004E                     ??_INTERRUPT_InterruptManager:
  3593                           
  3594                           ; 1 bytes @ 0x20
  3595  00004E                     	ds	12
  3596                           tblptru	equ	0xFF8
  3597                           tblptrh	equ	0xFF7
  3598                           tblptrl	equ	0xFF6
  3599                           tablat	equ	0xFF5
  3600                           postinc0	equ	0xFEE
  3601                           wreg	equ	0xFE8
  3602                           
  3603 ;;
  3604 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3605 ;;
  3606 ;; *************** function _main *****************
  3607 ;; Defined at:
  3608 ;;		line 55 in file "main.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : F/1
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3625 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels required when called:   21
  3628 ;; This function calls:
  3629 ;;		_DATAEE_ReadByte
  3630 ;;		_MOTEapp_handlerState
  3631 ;;		_SYSTEM_Initialize
  3632 ;;		_USBDeviceAttach
  3633 ;;		_USBDeviceInit
  3634 ;;		_USBapp_Handler
  3635 ;;		_USBapp_handlerState
  3636 ;;		_modemResync
  3637 ;;		_moteApp_delayms
  3638 ;;		_moteHandler
  3639 ;;		_oled_clear
  3640 ;;		_oled_init
  3641 ;;		_oled_putString
  3642 ;; This function is called by:
  3643 ;;		Startup code after reset
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text0
  3648  005312                     __ptext0:
  3649                           	opt stack 0
  3650  005312                     _main:
  3651                           	opt stack 10
  3652                           
  3653                           ;main.c: 58: SYSTEM_Initialize();
  3654                           
  3655                           ;incstack = 0
  3656  005312  EC88  F01E         	call	_SYSTEM_Initialize	;wreg free
  3657                           
  3658                           ; BSR set to: 1
  3659                           ;main.c: 73: oled_init();
  3660  005316  EC98  F01E         	call	_oled_init	;wreg free
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;main.c: 74: USBDeviceInit();
  3664  00531A  EC00  F02C         	call	_USBDeviceInit	;wreg free
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;main.c: 80: USBDeviceAttach();
  3668  00531E  EC6D  F01F         	call	_USBDeviceAttach	;wreg free
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;main.c: 82: PEIE = 1;
  3672  005322  8CF2               	bsf	intcon,6,c	;volatile
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;main.c: 83: GIE = 1;
  3676  005324  8EF2               	bsf	intcon,7,c	;volatile
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;main.c: 86: moteApp_delayms(300);
  3680  005326  0E01               	movlw	1
  3681  005328  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3682  00532A  0E2C               	movlw	44
  3683  00532C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  3684  00532E  EC06  F01F         	call	_moteApp_delayms	;wreg free
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;main.c: 87: modemResync();
  3688  005332  ECE5  F022         	call	_modemResync	;wreg free
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;main.c: 88: moteApp_delayms(300);
  3692  005336  0E01               	movlw	1
  3693  005338  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3694  00533A  0E2C               	movlw	44
  3695  00533C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  3696  00533E  EC06  F01F         	call	_moteApp_delayms	;wreg free
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;main.c: 92: powerOnStatus = DATAEE_ReadByte(0x00);
  3700  005342  0E00               	movlw	0
  3701  005344  ECE4  F01D         	call	_DATAEE_ReadByte
  3702                           
  3703                           ;main.c: 102: operationType = USB;
  3704  005348  0101               	movlb	1	; () banked
  3705  00534A  6B51               	clrf	_operationType& (0+255),b
  3706                           
  3707                           ; BSR set to: 1
  3708                           ;main.c: 103: USBapp_handlerState(USB_STARTUP);
  3709  00534C  0E00               	movlw	0
  3710  00534E  EC95  F01D         	call	_USBapp_handlerState
  3711                           
  3712                           ;main.c: 108: oled_clear();
  3713  005352  EC22  F01E         	call	_oled_clear	;wreg free
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;main.c: 109: oled_putString("MENCO-LOREX   ",0,0);
  3717  005356  0EB6               	movlw	low STR_1
  3718  005358  6F6D               	movwf	oled_putString@string& (0+255),b
  3719  00535A  0E7D               	movlw	high STR_1
  3720  00535C  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  3721  00535E  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  3722  005360  6B70               	clrf	oled_putString@start_page& (0+255),b
  3723  005362  EC17  F023         	call	_oled_putString	;wreg free
  3724                           
  3725                           ;main.c: 110: oled_putString("   PROTO      ",0,1);
  3726  005366  0EA7               	movlw	low STR_2
  3727  005368  0100               	movlb	0	; () banked
  3728  00536A  6F6D               	movwf	oled_putString@string& (0+255),b
  3729  00536C  0E7D               	movlw	high STR_2
  3730  00536E  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  3731  005370  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  3732  005372  0E01               	movlw	1
  3733  005374  6F70               	movwf	oled_putString@start_page& (0+255),b
  3734  005376  EC17  F023         	call	_oled_putString	;wreg free
  3735                           
  3736                           ;main.c: 111: oled_putString("   Build 005  ",0,3);
  3737  00537A  0EC5               	movlw	low STR_3
  3738  00537C  0100               	movlb	0	; () banked
  3739  00537E  6F6D               	movwf	oled_putString@string& (0+255),b
  3740  005380  0E7D               	movlw	high STR_3
  3741  005382  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  3742  005384  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  3743  005386  0E03               	movlw	3
  3744  005388  6F70               	movwf	oled_putString@start_page& (0+255),b
  3745  00538A  EC17  F023         	call	_oled_putString	;wreg free
  3746                           
  3747                           ;main.c: 112: moteApp_delayms(700);
  3748  00538E  0E02               	movlw	2
  3749  005390  0100               	movlb	0	; () banked
  3750  005392  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3751  005394  0EBC               	movlw	188
  3752  005396  6F60               	movwf	moteApp_delayms@length& (0+255),b
  3753  005398  EC06  F01F         	call	_moteApp_delayms	;wreg free
  3754  00539C  D012               	goto	l11475
  3755  00539E                     l50:
  3756  00539E  D7FF               	goto	l50
  3757  0053A0                     l11461:
  3758                           
  3759                           ; BSR set to: 1
  3760                           ;main.c: 124: USBapp_Handler();
  3761  0053A0  EC96  F024         	call	_USBapp_Handler	;wreg free
  3762                           
  3763                           ;main.c: 126: operationType = MOTE;
  3764  0053A4  0E01               	movlw	1
  3765  0053A6  0101               	movlb	1	; () banked
  3766  0053A8  6F51               	movwf	_operationType& (0+255),b
  3767                           
  3768                           ; BSR set to: 1
  3769                           ;main.c: 127: MOTEapp_handlerState(MOTE_STARTUP);
  3770  0053AA  EC90  F01D         	call	_MOTEapp_handlerState
  3771                           
  3772                           ;main.c: 128: break;
  3773  0053AE  D009               	goto	l11475
  3774  0053B0                     l11467:
  3775                           
  3776                           ; BSR set to: 1
  3777                           ;main.c: 130: if (moteHandler() == MOTE_SWAP)
  3778  0053B0  EC6F  F031         	call	_moteHandler	;wreg free
  3779  0053B4  0A04               	xorlw	4
  3780  0053B6  E105               	bnz	l11475
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;main.c: 131: {
  3784                           ;main.c: 133: operationType = USB;
  3785  0053B8  0101               	movlb	1	; () banked
  3786  0053BA  6B51               	clrf	_operationType& (0+255),b
  3787                           
  3788                           ; BSR set to: 1
  3789                           ;main.c: 134: USBapp_handlerState(USB_STARTUP);
  3790  0053BC  0E00               	movlw	0
  3791  0053BE  EC95  F01D         	call	_USBapp_handlerState
  3792  0053C2                     l11475:
  3793  0053C2  0101               	movlb	1	; () banked
  3794  0053C4  5151               	movf	_operationType& (0+255),w,b
  3795                           
  3796                           ; Switch size 1, requested type "speed"
  3797                           ; Number of cases is 2, Range of values is 0 to 1
  3798                           ; switch strategies available:
  3799                           ; Name         Instructions Cycles
  3800                           ; simple_byte            7     4 (average)
  3801                           ;	Chosen strategy is simple_byte
  3802  0053C6  E0EC               	bz	l11461
  3803  0053C8  0A01               	xorlw	1	; case 1
  3804  0053CA  E0F2               	bz	l11467
  3805  0053CC  D7E8               	goto	l50
  3806  0053CE                     __end_of_main:
  3807                           	opt stack 0
  3808                           tblptru	equ	0xFF8
  3809                           tblptrh	equ	0xFF7
  3810                           tblptrl	equ	0xFF6
  3811                           tablat	equ	0xFF5
  3812                           intcon	equ	0xFF2
  3813                           postinc0	equ	0xFEE
  3814                           wreg	equ	0xFE8
  3815                           
  3816 ;; *************** function _moteHandler *****************
  3817 ;; Defined at:
  3818 ;;		line 173 in file "../Includes/Board/MOTEapp.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  i               1    7[BANK2 ] unsigned char 
  3823 ;;  i               1    6[BANK2 ] unsigned char 
  3824 ;;  Traw            2    2[BANK2 ] unsigned int 
  3825 ;;  readMessage     1    8[BANK2 ] unsigned char 
  3826 ;;  buttonPress     1    5[BANK2 ] enum E6327
  3827 ;;  s2Button        1    4[BANK2 ] unsigned char 
  3828 ;;  gotoNextStat    1    1[BANK2 ] unsigned char 
  3829 ;;  gotoSleep       1    0[BANK2 ] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      enum E7241
  3832 ;; Registers used:
  3833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/1
  3836 ;;		On exit  : F/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3839 ;;      Params:         0       0       0       0       0       0       0       0       0
  3840 ;;      Locals:         0       0       0       9       0       0       0       0       0
  3841 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3842 ;;      Totals:         0       2       0       9       0       0       0       0       0
  3843 ;;Total ram usage:       11 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:   20
  3846 ;; This function calls:
  3847 ;;		_ADC_GetConversion
  3848 ;;		_ADC_TempConversion
  3849 ;;		_MOTEapp_TimerBasedTask
  3850 ;;		_MOTEapp_getModemResponse
  3851 ;;		_TMRapp_ClearBitFlags
  3852 ;;		_TMRapp_Handler
  3853 ;;		_moteApp_delayms
  3854 ;;		_moteJoiningProcess
  3855 ;;		_moteRunningProcess
  3856 ;;		_oled_clear
  3857 ;;		_oled_putString
  3858 ;;		_service_pushbutton
  3859 ;; This function is called by:
  3860 ;;		_main
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text1
  3865  0062DE                     __ptext1:
  3866                           	opt stack 0
  3867  0062DE                     _moteHandler:
  3868                           	opt stack 10
  3869                           
  3870                           ;MOTEapp.c: 175: bool gotoSleep = 0;
  3871                           
  3872                           ; BSR set to: 1
  3873                           ;incstack = 0
  3874  0062DE  0102               	movlb	2	; () banked
  3875  0062E0  6B80               	clrf	moteHandler@gotoSleep& (0+255),b
  3876                           
  3877                           ;MOTEapp.c: 176: bool gotoNextState = 0;
  3878  0062E2  6B81               	clrf	moteHandler@gotoNextState& (0+255),b
  3879                           
  3880                           ;MOTEapp.c: 177: bool s2Button = 0;
  3881  0062E4  6B84               	clrf	moteHandler@s2Button& (0+255),b
  3882                           
  3883                           ; BSR set to: 2
  3884                           ;MOTEapp.c: 185: if (PORTAbits.RA0)
  3885                           
  3886                           ; BSR set to: 2
  3887  0062E6  A080               	btfss	3968,0,c	;volatile
  3888  0062E8  D003               	goto	l11319
  3889                           
  3890                           ; BSR set to: 2
  3891                           ;MOTEapp.c: 186: moteState = MOTE_SWAP;
  3892  0062EA  0E04               	movlw	4
  3893  0062EC  0100               	movlb	0	; () banked
  3894  0062EE  6FF9               	movwf	_moteState& (0+255),b
  3895  0062F0                     l11319:
  3896                           
  3897                           ;MOTEapp.c: 189: if ( appTimer.mSecTick )
  3898  0062F0  0100               	movlb	0	; () banked
  3899  0062F2  A1F5               	btfss	_appTimer& (0+255),0,b
  3900  0062F4  D008               	goto	l11327
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;MOTEapp.c: 190: {
  3904                           ;MOTEapp.c: 192: TMRapp_ClearBitFlags();
  3905  0062F6  EC84  F01D         	call	_TMRapp_ClearBitFlags	;wreg free
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;MOTEapp.c: 194: TMRapp_Handler();
  3909  0062FA  EC73  F02C         	call	_TMRapp_Handler	;wreg free
  3910                           
  3911                           ;MOTEapp.c: 195: MOTEapp_TimerBasedTask(appTimer);
  3912  0062FE  0100               	movlb	0	; () banked
  3913  006300  51F5               	movf	_appTimer& (0+255),w,b
  3914  006302  ECF8  F01D         	call	_MOTEapp_TimerBasedTask
  3915  006306                     l11327:
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;MOTEapp.c: 196: }
  3919                           ;MOTEapp.c: 199: buttonPress = service_pushbutton();
  3920  006306  EC5F  F022         	call	_service_pushbutton	;wreg free
  3921  00630A  0102               	movlb	2	; () banked
  3922  00630C  6F85               	movwf	moteHandler@buttonPress& (0+255),b
  3923                           
  3924                           ;MOTEapp.c: 200: if (buttonPress == ShortPress1)
  3925  00630E  0585               	decf	moteHandler@buttonPress& (0+255),w,b
  3926  006310  E104               	bnz	l11333
  3927                           
  3928                           ; BSR set to: 2
  3929                           ;MOTEapp.c: 201: {
  3930                           ;MOTEapp.c: 202: secTicker = 0;
  3931  006312  6A29               	clrf	_secTicker,c
  3932                           
  3933                           ; BSR set to: 2
  3934                           ;MOTEapp.c: 203: gotoNextState = 1;
  3935  006314  0E01               	movlw	1
  3936  006316  6F81               	movwf	moteHandler@gotoNextState& (0+255),b
  3937                           
  3938                           ;MOTEapp.c: 204: }
  3939  006318  D006               	goto	l11339
  3940  00631A                     l11333:
  3941                           
  3942                           ; BSR set to: 2
  3943                           ;MOTEapp.c: 205: else if (buttonPress == ShortPress2)
  3944  00631A  0E02               	movlw	2
  3945  00631C  1985               	xorwf	moteHandler@buttonPress& (0+255),w,b
  3946  00631E  E103               	bnz	l11339
  3947                           
  3948                           ; BSR set to: 2
  3949                           ;MOTEapp.c: 206: {
  3950                           ;MOTEapp.c: 207: secTicker = 0;
  3951  006320  6A29               	clrf	_secTicker,c
  3952                           
  3953                           ; BSR set to: 2
  3954                           ;MOTEapp.c: 208: s2Button = 1;
  3955  006322  0E01               	movlw	1
  3956  006324  6F84               	movwf	moteHandler@s2Button& (0+255),b
  3957  006326                     l11339:
  3958                           
  3959                           ; BSR set to: 2
  3960                           ;MOTEapp.c: 209: }
  3961                           ;MOTEapp.c: 212: if ( MOTEapp_getModemResponse() )
  3962  006326  EC46  F021         	call	_MOTEapp_getModemResponse	;wreg free
  3963  00632A  0900               	iorlw	0
  3964  00632C  E004               	bz	l328
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;MOTEapp.c: 213: readMessage = 1;
  3968  00632E  0E01               	movlw	1
  3969  006330  0102               	movlb	2	; () banked
  3970  006332  6F88               	movwf	moteHandler@readMessage& (0+255),b
  3971  006334  D002               	goto	l11343
  3972  006336                     l328:
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;MOTEapp.c: 214: else
  3976                           ;MOTEapp.c: 215: readMessage = 0;
  3977  006336  0102               	movlb	2	; () banked
  3978  006338  6B88               	clrf	moteHandler@readMessage& (0+255),b
  3979  00633A                     l11343:
  3980                           
  3981                           ; BSR set to: 2
  3982                           ;MOTEapp.c: 218: if ( (runningState == runningUplink) || (runningState == runningSensorM
      +                          enu) )
  3983  00633A  0E06               	movlw	6
  3984  00633C  1827               	xorwf	_runningState,w,c
  3985  00633E  E003               	bz	l11347
  3986                           
  3987                           ; BSR set to: 2
  3988  006340  0E02               	movlw	2
  3989  006342  1827               	xorwf	_runningState,w,c
  3990  006344  E14D               	bnz	l11383
  3991  006346                     l11347:
  3992                           
  3993                           ; BSR set to: 2
  3994                           ;MOTEapp.c: 219: {
  3995                           ;MOTEapp.c: 221: if (m10SecTicker >= 5)
  3996  006346  0E04               	movlw	4
  3997  006348  0101               	movlb	1	; () banked
  3998  00634A  6550               	cpfsgt	_m10SecTicker& (0+255),b
  3999  00634C  D049               	goto	l11383
  4000                           
  4001                           ; BSR set to: 1
  4002                           ;MOTEapp.c: 222: {
  4003                           ;MOTEapp.c: 223: uint16_t Traw = 0;
  4004  00634E  0102               	movlb	2	; () banked
  4005  006350  6B82               	clrf	moteHandler@Traw& (0+255),b
  4006  006352  6B83               	clrf	(moteHandler@Traw+1)& (0+255),b
  4007                           
  4008                           ; BSR set to: 2
  4009                           ;MOTEapp.c: 224: moteApp_delayms(10);
  4010  006354  0100               	movlb	0	; () banked
  4011  006356  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4012  006358  0E0A               	movlw	10
  4013  00635A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4014  00635C  EC06  F01F         	call	_moteApp_delayms	;wreg free
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;MOTEapp.c: 225: for(uint8_t i = 32; i>0; i--)
  4018  006360  0E20               	movlw	32
  4019  006362  0102               	movlb	2	; () banked
  4020  006364  6F86               	movwf	moteHandler@i& (0+255),b
  4021  006366                     l11359:
  4022                           
  4023                           ; BSR set to: 2
  4024                           ;MOTEapp.c: 226: {
  4025                           ;MOTEapp.c: 227: light = (light + ADC_GetConversion(Light_channel)) / 2;
  4026  006366  0E03               	movlw	3
  4027  006368  EC67  F020         	call	_ADC_GetConversion
  4028  00636C  0101               	movlb	1	; () banked
  4029  00636E  5135               	movf	_light& (0+255),w,b
  4030  006370  0100               	movlb	0	; () banked
  4031  006372  2760               	addwf	?_ADC_GetConversion& (0+255),f,b
  4032  006374  0101               	movlb	1	; () banked
  4033  006376  5136               	movf	(_light+1)& (0+255),w,b
  4034  006378  0100               	movlb	0	; () banked
  4035  00637A  2361               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4036  00637C  90D8               	bcf	status,0,c
  4037  00637E  3161               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4038  006380  6FF2               	movwf	??_moteHandler& (0+255),b
  4039  006382  3160               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4040  006384  0101               	movlb	1	; () banked
  4041  006386  6F35               	movwf	_light& (0+255),b
  4042  006388  C0F2  F136         	movff	??_moteHandler,_light+1
  4043                           
  4044                           ; BSR set to: 1
  4045  00638C  0102               	movlb	2	; () banked
  4046  00638E  0786               	decf	moteHandler@i& (0+255),f,b
  4047                           
  4048                           ; BSR set to: 2
  4049  006390  5186               	movf	moteHandler@i& (0+255),w,b
  4050  006392  E1E9               	bnz	l11359
  4051                           
  4052                           ; BSR set to: 2
  4053                           ;MOTEapp.c: 228: }
  4054                           ;MOTEapp.c: 229: moteApp_delayms(10);
  4055  006394  0100               	movlb	0	; () banked
  4056  006396  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4057  006398  0E0A               	movlw	10
  4058  00639A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4059  00639C  EC06  F01F         	call	_moteApp_delayms	;wreg free
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;MOTEapp.c: 230: for(uint8_t i = 32; i>0; i--)
  4063  0063A0  0E20               	movlw	32
  4064  0063A2  0102               	movlb	2	; () banked
  4065  0063A4  6F87               	movwf	moteHandler@i_1488& (0+255),b
  4066  0063A6                     l11373:
  4067                           
  4068                           ; BSR set to: 2
  4069                           ;MOTEapp.c: 231: {
  4070                           ;MOTEapp.c: 232: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  4071  0063A6  0E02               	movlw	2
  4072  0063A8  EC67  F020         	call	_ADC_GetConversion
  4073  0063AC  0102               	movlb	2	; () banked
  4074  0063AE  5182               	movf	moteHandler@Traw& (0+255),w,b
  4075  0063B0  0100               	movlb	0	; () banked
  4076  0063B2  2760               	addwf	?_ADC_GetConversion& (0+255),f,b
  4077  0063B4  0102               	movlb	2	; () banked
  4078  0063B6  5183               	movf	(moteHandler@Traw+1)& (0+255),w,b
  4079  0063B8  0100               	movlb	0	; () banked
  4080  0063BA  2361               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4081  0063BC  90D8               	bcf	status,0,c
  4082  0063BE  3161               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4083  0063C0  6FF2               	movwf	??_moteHandler& (0+255),b
  4084  0063C2  3160               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4085  0063C4  0102               	movlb	2	; () banked
  4086  0063C6  6F82               	movwf	moteHandler@Traw& (0+255),b
  4087  0063C8  C0F2  F283         	movff	??_moteHandler,moteHandler@Traw+1
  4088                           
  4089                           ; BSR set to: 2
  4090  0063CC  0787               	decf	moteHandler@i_1488& (0+255),f,b
  4091                           
  4092                           ; BSR set to: 2
  4093  0063CE  5187               	movf	moteHandler@i_1488& (0+255),w,b
  4094  0063D0  E1EA               	bnz	l11373
  4095                           
  4096                           ; BSR set to: 2
  4097                           ;MOTEapp.c: 233: }
  4098                           ;MOTEapp.c: 234: temperature = ADC_TempConversion(Traw);
  4099  0063D2  5182               	movf	moteHandler@Traw& (0+255),w,b
  4100  0063D4  ECA9  F01E         	call	_ADC_TempConversion
  4101  0063D8  0101               	movlb	1	; () banked
  4102  0063DA  6F39               	movwf	_temperature& (0+255),b
  4103  0063DC  6B3A               	clrf	(_temperature+1)& (0+255),b
  4104                           
  4105                           ; BSR set to: 1
  4106                           ;MOTEapp.c: 235: m10SecTicker = 0;
  4107  0063DE  6B50               	clrf	_m10SecTicker& (0+255),b
  4108  0063E0                     l11383:
  4109                           
  4110                           ;MOTEapp.c: 236: }
  4111                           ;MOTEapp.c: 237: }
  4112                           ;MOTEapp.c: 239: if(secTicker)
  4113  0063E0  5029               	movf	_secTicker,w,c
  4114  0063E2  E063               	bz	l11421
  4115                           
  4116                           ;MOTEapp.c: 240: {
  4117                           ;MOTEapp.c: 241: if (secTicker >= 10)
  4118  0063E4  0E09               	movlw	9
  4119  0063E6  6429               	cpfsgt	_secTicker,c
  4120  0063E8  D060               	goto	l11421
  4121                           
  4122                           ;MOTEapp.c: 242: {
  4123                           ;MOTEapp.c: 243: gotoSleep = 1;
  4124  0063EA  0E01               	movlw	1
  4125  0063EC  0102               	movlb	2	; () banked
  4126  0063EE  6F80               	movwf	moteHandler@gotoSleep& (0+255),b
  4127                           
  4128                           ; BSR set to: 2
  4129                           ;MOTEapp.c: 244: secTicker = 0;
  4130  0063F0  6A29               	clrf	_secTicker,c
  4131  0063F2  D05B               	goto	l11421
  4132  0063F4                     l342:
  4133  0063F4  D7FF               	goto	l342
  4134  0063F6                     l11391:
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;MOTEapp.c: 254: oled_clear();
  4138  0063F6  EC22  F01E         	call	_oled_clear	;wreg free
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;MOTEapp.c: 255: oled_putString("MOTE Mode",1,0);
  4142  0063FA  0E07               	movlw	low STR_23
  4143  0063FC  6F6D               	movwf	oled_putString@string& (0+255),b
  4144  0063FE  0E7F               	movlw	high STR_23
  4145  006400  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4146  006402  0E01               	movlw	1
  4147  006404  6F6F               	movwf	oled_putString@station_dot& (0+255),b
  4148  006406  6B70               	clrf	oled_putString@start_page& (0+255),b
  4149  006408  EC17  F023         	call	_oled_putString	;wreg free
  4150                           
  4151                           ;MOTEapp.c: 256: oled_putString("Starting",2,1);
  4152  00640C  0E6F               	movlw	low STR_24
  4153  00640E  0100               	movlb	0	; () banked
  4154  006410  6F6D               	movwf	oled_putString@string& (0+255),b
  4155  006412  0E7F               	movlw	high STR_24
  4156  006414  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4157  006416  0E02               	movlw	2
  4158  006418  6F6F               	movwf	oled_putString@station_dot& (0+255),b
  4159  00641A  0E01               	movlw	1
  4160  00641C  6F70               	movwf	oled_putString@start_page& (0+255),b
  4161  00641E  EC17  F023         	call	_oled_putString	;wreg free
  4162                           
  4163                           ;MOTEapp.c: 257: oled_putString("ReRun PwrTst<S2>",0,3);
  4164  006422  0ED4               	movlw	low STR_25
  4165  006424  0100               	movlb	0	; () banked
  4166  006426  6F6D               	movwf	oled_putString@string& (0+255),b
  4167  006428  0E7C               	movlw	high STR_25
  4168  00642A  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4169  00642C  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4170  00642E  0E03               	movlw	3
  4171  006430  6F70               	movwf	oled_putString@start_page& (0+255),b
  4172  006432  EC17  F023         	call	_oled_putString	;wreg free
  4173                           
  4174                           ;MOTEapp.c: 258: activeState = moteStartup;
  4175  006436  0101               	movlb	1	; () banked
  4176  006438  6B4C               	clrf	_activeState& (0+255),b
  4177                           
  4178                           ; BSR set to: 1
  4179                           ;MOTEapp.c: 259: moteState = MOTE_JOINING;
  4180  00643A  0E02               	movlw	2
  4181  00643C  D028               	goto	L1
  4182  00643E                     l11403:
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;MOTEapp.c: 262: if ( moteJoiningProcess(readMessage, s2Button) )
  4186  00643E  C284  F0AA         	movff	moteHandler@s2Button,moteJoiningProcess@switchEvent
  4187  006442  0102               	movlb	2	; () banked
  4188  006444  5188               	movf	moteHandler@readMessage& (0+255),w,b
  4189  006446  EC2E  F037         	call	_moteJoiningProcess
  4190  00644A  0900               	iorlw	0
  4191  00644C  E038               	bz	l11423
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;MOTEapp.c: 263: {
  4195                           ;MOTEapp.c: 264: oled_clear();
  4196  00644E  EC22  F01E         	call	_oled_clear	;wreg free
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;MOTEapp.c: 265: oled_putString("Mobile Mote -App",0,0);
  4200  006452  0E07               	movlw	low STR_26
  4201  006454  6F6D               	movwf	oled_putString@string& (0+255),b
  4202  006456  0E7D               	movlw	high STR_26
  4203  006458  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4204  00645A  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4205  00645C  6B70               	clrf	oled_putString@start_page& (0+255),b
  4206  00645E  EC17  F023         	call	_oled_putString	;wreg free
  4207                           
  4208                           ;MOTEapp.c: 266: oled_putString("Navigate  Select", 0,2);
  4209  006462  0E18               	movlw	low STR_27
  4210  006464  0100               	movlb	0	; () banked
  4211  006466  6F6D               	movwf	oled_putString@string& (0+255),b
  4212  006468  0E7D               	movlw	high STR_27
  4213  00646A  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4214  00646C  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4215  00646E  0E02               	movlw	2
  4216  006470  6F70               	movwf	oled_putString@start_page& (0+255),b
  4217  006472  EC17  F023         	call	_oled_putString	;wreg free
  4218                           
  4219                           ;MOTEapp.c: 267: oled_putString(" (S1)      (S2) ", 0,3);
  4220  006476  0E90               	movlw	low STR_28
  4221  006478  0100               	movlb	0	; () banked
  4222  00647A  6F6D               	movwf	oled_putString@string& (0+255),b
  4223  00647C  0E7C               	movlw	high STR_28
  4224  00647E  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4225  006480  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4226  006482  0E03               	movlw	3
  4227  006484  6F70               	movwf	oled_putString@start_page& (0+255),b
  4228  006486  EC17  F023         	call	_oled_putString	;wreg free
  4229                           
  4230                           ;MOTEapp.c: 268: runningState = runningEnter;
  4231  00648A  6A27               	clrf	_runningState,c
  4232                           
  4233                           ;MOTEapp.c: 269: moteState = MOTE_RUNNING;
  4234  00648C  0E03               	movlw	3
  4235  00648E                     L1:
  4236  00648E  0100               	movlb	0	; () banked
  4237  006490  6FF9               	movwf	_moteState& (0+255),b
  4238  006492  D015               	goto	l11423
  4239  006494                     l11417:
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;MOTEapp.c: 273: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  4243  006494  C284  F07C         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  4244  006498  C288  F07D         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  4245  00649C  C280  F07E         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  4246  0064A0  0102               	movlb	2	; () banked
  4247  0064A2  5181               	movf	moteHandler@gotoNextState& (0+255),w,b
  4248  0064A4  EC9B  F030         	call	_moteRunningProcess
  4249                           
  4250                           ;MOTEapp.c: 274: break;
  4251  0064A8  D00A               	goto	l11423
  4252  0064AA                     l11421:
  4253  0064AA  0100               	movlb	0	; () banked
  4254  0064AC  51F9               	movf	_moteState& (0+255),w,b
  4255                           
  4256                           ; Switch size 1, requested type "speed"
  4257                           ; Number of cases is 4, Range of values is 1 to 4
  4258                           ; switch strategies available:
  4259                           ; Name         Instructions Cycles
  4260                           ; simple_byte           13     7 (average)
  4261                           ;	Chosen strategy is simple_byte
  4262  0064AE  0A01               	xorlw	1	; case 1
  4263  0064B0  E0A2               	bz	l11391
  4264  0064B2  0A03               	xorlw	3	; case 2
  4265  0064B4  E0C4               	bz	l11403
  4266  0064B6  0A01               	xorlw	1	; case 3
  4267  0064B8  E0ED               	bz	l11417
  4268  0064BA  0A07               	xorlw	7	; case 4
  4269  0064BC  E19B               	bnz	l342
  4270  0064BE                     l11423:
  4271                           
  4272                           ;MOTEapp.c: 279: return moteState;
  4273  0064BE  0100               	movlb	0	; () banked
  4274  0064C0  51F9               	movf	_moteState& (0+255),w,b
  4275                           
  4276                           ; BSR set to: 0
  4277  0064C2  0012               	return		;funcret
  4278  0064C4                     __end_of_moteHandler:
  4279                           	opt stack 0
  4280                           tblptru	equ	0xFF8
  4281                           tblptrh	equ	0xFF7
  4282                           tblptrl	equ	0xFF6
  4283                           tablat	equ	0xFF5
  4284                           intcon	equ	0xFF2
  4285                           postinc0	equ	0xFEE
  4286                           wreg	equ	0xFE8
  4287                           status	equ	0xFD8
  4288                           
  4289 ;; *************** function _service_pushbutton *****************
  4290 ;; Defined at:
  4291 ;;		line 14 in file "../Includes/Drivers/buttons.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;		None
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  bs              1    0[BANK0 ] enum E6178
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      enum E6327
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0
  4300 ;; Tracked objects:
  4301 ;;		On entry : F/0
  4302 ;;		On exit  : F/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4305 ;;      Params:         0       0       0       0       0       0       0       0       0
  4306 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4308 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4309 ;;Total ram usage:        1 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; Hardware stack levels required when called:   11
  4312 ;; This function calls:
  4313 ;;		Nothing
  4314 ;; This function is called by:
  4315 ;;		_moteHandler
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text2
  4320  0044BE                     __ptext2:
  4321                           	opt stack 0
  4322  0044BE                     _service_pushbutton:
  4323                           	opt stack 18
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;buttons.c: 20: if ((PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;incstack = 0
  4330  0044BE  A082               	btfss	3970,0,c	;volatile
  4331  0044C0  D002               	goto	l10583
  4332                           
  4333                           ; BSR set to: 0
  4334  0044C2  B282               	btfsc	3970,1,c	;volatile
  4335  0044C4  D016               	goto	l10591
  4336  0044C6                     l10583:
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;buttons.c: 21: {
  4340                           ;buttons.c: 22: ++PB_Timer;
  4341  0044C6  0101               	movlb	1	; () banked
  4342  0044C8  2B1E               	incf	service_pushbutton@PB_Timer& (0+255),f,b
  4343  0044CA  0E00               	movlw	0
  4344  0044CC  231F               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
  4345  0044CE  2320               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
  4346  0044D0  2321               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
  4347                           
  4348                           ;buttons.c: 26: if (PB_Timer == 55)
  4349  0044D2  0E37               	movlw	55
  4350  0044D4  191E               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
  4351  0044D6  111F               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
  4352  0044D8  1120               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
  4353  0044DA  1121               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
  4354  0044DC  E107               	bnz	l774
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;buttons.c: 27: {
  4358                           ;buttons.c: 28: Release_Timer = 0;
  4359  0044DE  6B55               	clrf	service_pushbutton@Release_Timer& (0+255),b
  4360                           
  4361                           ;buttons.c: 30: if (PORTCbits.RC0 == 0)
  4362  0044E0  B082               	btfsc	3970,0,c	;volatile
  4363  0044E2  D002               	goto	l10589
  4364                           
  4365                           ; BSR set to: 1
  4366                           ;buttons.c: 31: {
  4367                           ;buttons.c: 32: bs = ShortPress1;
  4368  0044E4  0E01               	movlw	1
  4369  0044E6  D011               	goto	L2
  4370  0044E8                     l10589:
  4371                           
  4372                           ; BSR set to: 1
  4373                           ;buttons.c: 34: else
  4374                           ;buttons.c: 35: {
  4375                           ;buttons.c: 36: bs = ShortPress2;
  4376  0044E8  0E02               	movlw	2
  4377  0044EA  D00F               	goto	L2
  4378  0044EC                     l774:
  4379                           
  4380                           ; BSR set to: 1
  4381                           ;buttons.c: 39: else
  4382                           ;buttons.c: 40: {
  4383                           ;buttons.c: 41: bs = NoButton;
  4384  0044EC  0100               	movlb	0	; () banked
  4385  0044EE  6B60               	clrf	service_pushbutton@bs& (0+255),b
  4386  0044F0  D00E               	goto	l10599
  4387  0044F2                     l10591:
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;buttons.c: 44: else
  4391                           ;buttons.c: 45: {
  4392                           ;buttons.c: 46: if (Release_Timer == 20)
  4393  0044F2  0E14               	movlw	20
  4394  0044F4  0101               	movlb	1	; () banked
  4395  0044F6  1955               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
  4396  0044F8  E106               	bnz	l10595
  4397                           
  4398                           ; BSR set to: 1
  4399                           ;buttons.c: 47: {
  4400                           ;buttons.c: 48: PB_Timer = 0;
  4401  0044FA  6B1E               	clrf	service_pushbutton@PB_Timer& (0+255),b
  4402  0044FC  6B1F               	clrf	(service_pushbutton@PB_Timer+1)& (0+255),b
  4403  0044FE  6B20               	clrf	(service_pushbutton@PB_Timer+2)& (0+255),b
  4404  004500  6B21               	clrf	(service_pushbutton@PB_Timer+3)& (0+255),b
  4405                           
  4406                           ;buttons.c: 49: Release_Timer = 0;
  4407  004502  6B55               	clrf	service_pushbutton@Release_Timer& (0+255),b
  4408                           
  4409                           ;buttons.c: 50: }
  4410  004504  D001               	goto	l10597
  4411  004506                     l10595:
  4412                           
  4413                           ; BSR set to: 1
  4414                           ;buttons.c: 51: else
  4415                           ;buttons.c: 52: {
  4416                           ;buttons.c: 53: Release_Timer++;
  4417  004506  2B55               	incf	service_pushbutton@Release_Timer& (0+255),f,b
  4418  004508                     l10597:
  4419                           
  4420                           ; BSR set to: 1
  4421                           ;buttons.c: 54: }
  4422                           ;buttons.c: 55: bs = Released;
  4423  004508  0E03               	movlw	3
  4424  00450A                     L2:
  4425  00450A  0100               	movlb	0	; () banked
  4426  00450C  6F60               	movwf	service_pushbutton@bs& (0+255),b
  4427  00450E                     l10599:
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;buttons.c: 56: }
  4431                           ;buttons.c: 58: return bs;
  4432  00450E  5160               	movf	service_pushbutton@bs& (0+255),w,b
  4433                           
  4434                           ; BSR set to: 0
  4435  004510  0012               	return		;funcret
  4436  004512                     __end_of_service_pushbutton:
  4437                           	opt stack 0
  4438                           tblptru	equ	0xFF8
  4439                           tblptrh	equ	0xFF7
  4440                           tblptrl	equ	0xFF6
  4441                           tablat	equ	0xFF5
  4442                           intcon	equ	0xFF2
  4443                           postinc0	equ	0xFEE
  4444                           wreg	equ	0xFE8
  4445                           status	equ	0xFD8
  4446                           
  4447 ;; *************** function _moteRunningProcess *****************
  4448 ;; Defined at:
  4449 ;;		line 741 in file "../Includes/Board/MOTEapp.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  changeStates    1    wreg     unsigned char 
  4452 ;;  selectButton    1   28[BANK0 ] unsigned char 
  4453 ;;  messageReady    1   29[BANK0 ] unsigned char 
  4454 ;;  sleepEvent      1   30[BANK0 ] unsigned char 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  changeStates    1    0[COMRAM] unsigned char 
  4457 ;;  i               1   36[BANK0 ] unsigned char 
  4458 ;;  i               1   35[BANK0 ] unsigned char 
  4459 ;;  Traw            2   33[BANK0 ] unsigned int 
  4460 ;;  readByte        1    0        unsigned char 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      enum E6570
  4463 ;; Registers used:
  4464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : F/2
  4467 ;;		On exit  : D/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4470 ;;      Params:         0       3       0       0       0       0       0       0       0
  4471 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4472 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4473 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4474 ;;Total ram usage:        9 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; Hardware stack levels required when called:   19
  4477 ;; This function calls:
  4478 ;;		_ADC_GetConversion
  4479 ;;		_ADC_TempConversion
  4480 ;;		_TMR2_ReadTimer
  4481 ;;		_moteApp_GoToSleep
  4482 ;;		_moteApp_add16bToDataBuffer
  4483 ;;		_moteApp_add8bToDataBuffer
  4484 ;;		_moteApp_clearBuffers
  4485 ;;		_moteApp_delayms
  4486 ;;		_oled_clear
  4487 ;;		_oled_putString
  4488 ;;		_oled_putUint16
  4489 ;;		_oled_putUint8
  4490 ;;		_sendDataCommand
  4491 ;; This function is called by:
  4492 ;;		_moteHandler
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text3
  4497  006136                     __ptext3:
  4498                           	opt stack 0
  4499  006136                     _moteRunningProcess:
  4500                           	opt stack 10
  4501                           
  4502                           ; BSR set to: 2
  4503                           ;MOTEapp.c: 745: if ((sleepEvent) && (periodicState))
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;incstack = 0
  4507  006136  0100               	movlb	0	; () banked
  4508  006138  517E               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  4509  00613A  E101 D0CD          	bz	l11047
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;MOTEapp.c: 746: {
  4513                           ;MOTEapp.c: 747: if (sleepTicker >= 33)
  4514  00613E  0E20               	movlw	32
  4515  006140  0101               	movlb	1	; () banked
  4516  006142  6552               	cpfsgt	_sleepTicker& (0+255),b
  4517  006144  D0C6               	goto	l11041
  4518                           
  4519                           ; BSR set to: 1
  4520                           ;MOTEapp.c: 748: {
  4521                           ;MOTEapp.c: 750: uint16_t Traw = 0;
  4522  006146  0100               	movlb	0	; () banked
  4523  006148  6B81               	clrf	moteRunningProcess@Traw& (0+255),b
  4524  00614A  6B82               	clrf	(moteRunningProcess@Traw+1)& (0+255),b
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;MOTEapp.c: 751: moteApp_delayms(10);
  4528  00614C  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4529  00614E  0E0A               	movlw	10
  4530  006150  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4531  006152  EC06  F01F         	call	_moteApp_delayms	;wreg free
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;MOTEapp.c: 752: for(uint8_t i = 32; i>0; i--)
  4535  006156  0E20               	movlw	32
  4536  006158  6F83               	movwf	moteRunningProcess@i& (0+255),b
  4537  00615A                     l10971:
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;MOTEapp.c: 753: {
  4541                           ;MOTEapp.c: 754: light = (light + ADC_GetConversion(Light_channel)) / 2;
  4542  00615A  0E03               	movlw	3
  4543  00615C  EC67  F020         	call	_ADC_GetConversion
  4544  006160  0101               	movlb	1	; () banked
  4545  006162  5135               	movf	_light& (0+255),w,b
  4546  006164  0100               	movlb	0	; () banked
  4547  006166  2760               	addwf	?_ADC_GetConversion& (0+255),f,b
  4548  006168  0101               	movlb	1	; () banked
  4549  00616A  5136               	movf	(_light+1)& (0+255),w,b
  4550  00616C  0100               	movlb	0	; () banked
  4551  00616E  2361               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4552  006170  90D8               	bcf	status,0,c
  4553  006172  3161               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4554  006174  6F7F               	movwf	??_moteRunningProcess& (0+255),b
  4555  006176  3160               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4556  006178  0101               	movlb	1	; () banked
  4557  00617A  6F35               	movwf	_light& (0+255),b
  4558  00617C  C07F  F136         	movff	??_moteRunningProcess,_light+1
  4559                           
  4560                           ; BSR set to: 1
  4561  006180  0100               	movlb	0	; () banked
  4562  006182  0783               	decf	moteRunningProcess@i& (0+255),f,b
  4563                           
  4564                           ; BSR set to: 0
  4565  006184  5183               	movf	moteRunningProcess@i& (0+255),w,b
  4566  006186  E1E9               	bnz	l10971
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;MOTEapp.c: 755: }
  4570                           ;MOTEapp.c: 756: moteApp_delayms(10);
  4571  006188  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4572  00618A  0E0A               	movlw	10
  4573  00618C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4574  00618E  EC06  F01F         	call	_moteApp_delayms	;wreg free
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;MOTEapp.c: 757: for(uint8_t i = 32; i>0; i--)
  4578  006192  0E20               	movlw	32
  4579  006194  6F84               	movwf	moteRunningProcess@i_1611& (0+255),b
  4580  006196                     l10985:
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;MOTEapp.c: 758: {
  4584                           ;MOTEapp.c: 759: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  4585  006196  0E02               	movlw	2
  4586  006198  EC67  F020         	call	_ADC_GetConversion
  4587  00619C  5181               	movf	moteRunningProcess@Traw& (0+255),w,b
  4588  00619E  2760               	addwf	?_ADC_GetConversion& (0+255),f,b
  4589  0061A0  5182               	movf	(moteRunningProcess@Traw+1)& (0+255),w,b
  4590  0061A2  2361               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4591  0061A4  90D8               	bcf	status,0,c
  4592  0061A6  3161               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4593  0061A8  6F7F               	movwf	??_moteRunningProcess& (0+255),b
  4594  0061AA  3160               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4595  0061AC  6F81               	movwf	moteRunningProcess@Traw& (0+255),b
  4596  0061AE  C07F  F082         	movff	??_moteRunningProcess,moteRunningProcess@Traw+1
  4597                           
  4598                           ; BSR set to: 0
  4599  0061B2  0784               	decf	moteRunningProcess@i_1611& (0+255),f,b
  4600                           
  4601                           ; BSR set to: 0
  4602  0061B4  5184               	movf	moteRunningProcess@i_1611& (0+255),w,b
  4603  0061B6  E1EF               	bnz	l10985
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;MOTEapp.c: 760: }
  4607                           ;MOTEapp.c: 761: temperature = ADC_TempConversion(Traw);
  4608  0061B8  5181               	movf	moteRunningProcess@Traw& (0+255),w,b
  4609  0061BA  ECA9  F01E         	call	_ADC_TempConversion
  4610  0061BE  0101               	movlb	1	; () banked
  4611  0061C0  6F39               	movwf	_temperature& (0+255),b
  4612  0061C2  6B3A               	clrf	(_temperature+1)& (0+255),b
  4613                           
  4614                           ; BSR set to: 1
  4615                           ;MOTEapp.c: 763: sleepTicker = 0;
  4616  0061C4  6B52               	clrf	_sleepTicker& (0+255),b
  4617                           
  4618                           ; BSR set to: 1
  4619                           ;MOTEapp.c: 764: oled_clear();
  4620  0061C6  EC22  F01E         	call	_oled_clear	;wreg free
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;MOTEapp.c: 765: oled_putString("Issue Perodic TX",0,0);
  4624  0061CA  0EE5               	movlw	low STR_83
  4625  0061CC  6F6D               	movwf	oled_putString@string& (0+255),b
  4626  0061CE  0E7C               	movlw	high STR_83
  4627  0061D0  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4628  0061D2  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4629  0061D4  6B70               	clrf	oled_putString@start_page& (0+255),b
  4630  0061D6  EC17  F023         	call	_oled_putString	;wreg free
  4631                           
  4632                           ;MOTEapp.c: 766: oled_putString("On Port #: ",0,1);
  4633  0061DA  0E89               	movlw	low STR_84
  4634  0061DC  0100               	movlb	0	; () banked
  4635  0061DE  6F6D               	movwf	oled_putString@string& (0+255),b
  4636  0061E0  0E7E               	movlw	high STR_84
  4637  0061E2  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4638  0061E4  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4639  0061E6  0E01               	movlw	1
  4640  0061E8  6F70               	movwf	oled_putString@start_page& (0+255),b
  4641  0061EA  EC17  F023         	call	_oled_putString	;wreg free
  4642                           
  4643                           ;MOTEapp.c: 767: oled_putUint8(randomPortNum,10,1);
  4644  0061EE  0E0A               	movlw	10
  4645  0061F0  0100               	movlb	0	; () banked
  4646  0061F2  6F72               	movwf	oled_putUint8@station_dot& (0+255),b
  4647  0061F4  0E01               	movlw	1
  4648  0061F6  6F73               	movwf	oled_putUint8@start_page& (0+255),b
  4649  0061F8  51F8               	movf	_randomPortNum& (0+255),w,b
  4650  0061FA  EC89  F022         	call	_oled_putUint8
  4651                           
  4652                           ;MOTEapp.c: 768: oled_putString("L:       T: ",0,2);
  4653  0061FE  0ED4               	movlw	low STR_85
  4654  006200  0100               	movlb	0	; () banked
  4655  006202  6F6D               	movwf	oled_putString@string& (0+255),b
  4656  006204  0E7D               	movlw	high STR_85
  4657  006206  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4658  006208  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4659  00620A  0E02               	movlw	2
  4660  00620C  6F70               	movwf	oled_putString@start_page& (0+255),b
  4661  00620E  EC17  F023         	call	_oled_putString	;wreg free
  4662                           
  4663                           ;MOTEapp.c: 769: oled_putUint16(light,3,2);
  4664  006212  C135  F072         	movff	_light,oled_putUint16@number
  4665  006216  C136  F073         	movff	_light+1,oled_putUint16@number+1
  4666  00621A  0E03               	movlw	3
  4667  00621C  0100               	movlb	0	; () banked
  4668  00621E  6F74               	movwf	oled_putUint16@station_dot& (0+255),b
  4669  006220  0E02               	movlw	2
  4670  006222  6F75               	movwf	oled_putUint16@start_page& (0+255),b
  4671  006224  ECE7  F02C         	call	_oled_putUint16	;wreg free
  4672                           
  4673                           ;MOTEapp.c: 770: oled_putUint8(temperature,12,2);
  4674  006228  0E0C               	movlw	12
  4675  00622A  0100               	movlb	0	; () banked
  4676  00622C  6F72               	movwf	oled_putUint8@station_dot& (0+255),b
  4677  00622E  0E02               	movlw	2
  4678  006230  6F73               	movwf	oled_putUint8@start_page& (0+255),b
  4679  006232  0101               	movlb	1	; () banked
  4680  006234  5139               	movf	_temperature& (0+255),w,b
  4681  006236  EC89  F022         	call	_oled_putUint8
  4682                           
  4683                           ;MOTEapp.c: 771: oled_putString("(NAV)    (SEL) ",0,3);
  4684  00623A  0E29               	movlw	low STR_86
  4685  00623C  0100               	movlb	0	; () banked
  4686  00623E  6F6D               	movwf	oled_putString@string& (0+255),b
  4687  006240  0E7D               	movlw	high STR_86
  4688  006242  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4689  006244  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4690  006246  0E03               	movlw	3
  4691  006248  6F70               	movwf	oled_putString@start_page& (0+255),b
  4692  00624A  EC17  F023         	call	_oled_putString	;wreg free
  4693                           
  4694                           ;MOTEapp.c: 773: moteApp_clearBuffers();
  4695  00624E  EC6B  F021         	call	_moteApp_clearBuffers	;wreg free
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;MOTEapp.c: 774: randomPortNum = TMR2_ReadTimer();
  4699  006252  EC8C  F01D         	call	_TMR2_ReadTimer	;wreg free
  4700  006256  6FF8               	movwf	_randomPortNum& (0+255),b
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;MOTEapp.c: 776: if (!randomPortNum)
  4704  006258  51F8               	movf	_randomPortNum& (0+255),w,b
  4705  00625A  E103               	bnz	l11019
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;MOTEapp.c: 777: randomPortNum = 5;
  4709  00625C  0E05               	movlw	5
  4710  00625E  6FF8               	movwf	_randomPortNum& (0+255),b
  4711  006260  D005               	goto	l11023
  4712  006262                     l11019:
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;MOTEapp.c: 778: else if (randomPortNum > 223)
  4716  006262  0EDF               	movlw	223
  4717  006264  65F8               	cpfsgt	_randomPortNum& (0+255),b
  4718  006266  D002               	goto	l11023
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;MOTEapp.c: 779: randomPortNum = randomPortNum - 50;
  4722  006268  0ECE               	movlw	206
  4723  00626A  27F8               	addwf	_randomPortNum& (0+255),f,b
  4724  00626C                     l11023:
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;MOTEapp.c: 781: moteApp_add8bToDataBuffer(randomPortNum, 0);
  4728  00626C  6B64               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  4729  00626E  51F8               	movf	_randomPortNum& (0+255),w,b
  4730  006270  ECB3  F023         	call	_moteApp_add8bToDataBuffer
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;MOTEapp.c: 782: dataBuffer[3] = 0x20;
  4734  006274  0E20               	movlw	32
  4735  006276  0101               	movlb	1	; () banked
  4736  006278  6FD9               	movwf	(_dataBuffer+3)& (0+255),b
  4737                           
  4738                           ; BSR set to: 1
  4739                           ;MOTEapp.c: 783: moteApp_add16bToDataBuffer(light, 4);
  4740  00627A  C135  F06C         	movff	_light,moteApp_add16bToDataBuffer@number
  4741  00627E  C136  F06D         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  4742  006282  0E04               	movlw	4
  4743  006284  0100               	movlb	0	; () banked
  4744  006286  6F6E               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  4745  006288  EC7C  F02F         	call	_moteApp_add16bToDataBuffer	;wreg free
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;MOTEapp.c: 784: moteApp_add8bToDataBuffer(temperature, 9);
  4749  00628C  0E09               	movlw	9
  4750  00628E  6F64               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  4751  006290  0101               	movlb	1	; () banked
  4752  006292  5139               	movf	_temperature& (0+255),w,b
  4753  006294  ECB3  F023         	call	_moteApp_add8bToDataBuffer
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;MOTEapp.c: 786: sleepTxOccurances = 0;
  4757  006298  F000               	nop	
  4758                           
  4759                           ;MOTEapp.c: 787: oled_putString("C",15,1);
  4760  00629A  0EFB               	movlw	low STR_87
  4761  00629C  0100               	movlb	0	; () banked
  4762  00629E  6F6D               	movwf	oled_putString@string& (0+255),b
  4763  0062A0  0E7F               	movlw	high STR_87
  4764  0062A2  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4765  0062A4  0E0F               	movlw	15
  4766  0062A6  6F6F               	movwf	oled_putString@station_dot& (0+255),b
  4767  0062A8  0E01               	movlw	1
  4768  0062AA  6F70               	movwf	oled_putString@start_page& (0+255),b
  4769  0062AC  EC17  F023         	call	_oled_putString	;wreg free
  4770                           
  4771                           ;MOTEapp.c: 788: sendDataCommand("radio tx ", dataBuffer, 12);
  4772  0062B0  0EFD               	movlw	low STR_88
  4773  0062B2  0100               	movlb	0	; () banked
  4774  0062B4  6F61               	movwf	sendDataCommand@string& (0+255),b
  4775  0062B6  0E7E               	movlw	high STR_88
  4776  0062B8  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  4777  0062BA  0ED6               	movlw	low _dataBuffer
  4778  0062BC  6F63               	movwf	sendDataCommand@appData& (0+255),b
  4779  0062BE  0E01               	movlw	high _dataBuffer
  4780  0062C0  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  4781  0062C2  0E0C               	movlw	12
  4782  0062C4  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  4783  0062C6  EC1D  F027         	call	_sendDataCommand	;wreg free
  4784                           
  4785                           ;MOTEapp.c: 789: secTicker = 10 - (10 / 3);
  4786  0062CA  0E07               	movlw	7
  4787  0062CC  6E29               	movwf	_secTicker,c
  4788                           
  4789                           ;MOTEapp.c: 790: runningState = runningUplinkTransmit;
  4790  0062CE  0E08               	movlw	8
  4791  0062D0  D002               	goto	L38
  4792  0062D2                     l11041:
  4793                           
  4794                           ; BSR set to: 1
  4795                           ;MOTEapp.c: 792: else
  4796                           ;MOTEapp.c: 793: {
  4797                           ;MOTEapp.c: 794: sleepTicker++;
  4798  0062D2  2B52               	incf	_sleepTicker& (0+255),f,b
  4799                           
  4800                           ; BSR set to: 1
  4801                           ;MOTEapp.c: 795: runningState = runningSleep;
  4802  0062D4  0E0E               	movlw	14
  4803  0062D6                     L38:
  4804  0062D6  6E27               	movwf	_runningState,c
  4805  0062D8                     l11047:
  4806                           
  4807                           ;MOTEapp.c: 797: }
  4808                           ;MOTEapp.c: 798: }
  4809                           ;MOTEapp.c: 800: moteApp_GoToSleep();
  4810  0062D8  EC7E  F023         	call	_moteApp_GoToSleep	;wreg free
  4811  0062DC                     l488:
  4812  0062DC  D7FF               	goto	l488
  4813  0062DE                     __end_of_moteRunningProcess:
  4814                           	opt stack 0
  4815                           tblptru	equ	0xFF8
  4816                           tblptrh	equ	0xFF7
  4817                           tblptrl	equ	0xFF6
  4818                           tablat	equ	0xFF5
  4819                           intcon	equ	0xFF2
  4820                           postinc0	equ	0xFEE
  4821                           wreg	equ	0xFE8
  4822                           status	equ	0xFD8
  4823                           
  4824 ;; *************** function _sendDataCommand *****************
  4825 ;; Defined at:
  4826 ;;		line 970 in file "../Includes/Board/MOTEapp.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  4829 ;;		 -> STR_88(10), 
  4830 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  4831 ;;		 -> dataBuffer(12), 
  4832 ;;  dataLength      1    5[BANK0 ] unsigned char 
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  byteCount       1    8[BANK0 ] unsigned char 
  4835 ;;  byteCount       1    7[BANK0 ] unsigned char 
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      void 
  4838 ;; Registers used:
  4839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : F/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4845 ;;      Params:         0       5       0       0       0       0       0       0       0
  4846 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4847 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4848 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4849 ;;Total ram usage:        8 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:   13
  4852 ;; This function calls:
  4853 ;;		_EUSART_Write
  4854 ;;		_EndLine
  4855 ;;		_hexToStr
  4856 ;; This function is called by:
  4857 ;;		_moteRunningProcess
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text4
  4862  004E3A                     __ptext4:
  4863                           	opt stack 0
  4864  004E3A                     _sendDataCommand:
  4865                           	opt stack 15
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;MOTEapp.c: 973: while (*string)
  4869                           
  4870                           ;incstack = 0
  4871  004E3A  D00B               	goto	l9991
  4872  004E3C                     l9987:
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;MOTEapp.c: 974: {
  4876                           ;MOTEapp.c: 975: EUSART_Write(*string++);
  4877  004E3C  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  4878  004E40  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  4879  004E44                     	if	0	;tblptru may be non-zero
  4880  004E44                     	endif
  4881  004E44                     	if	0	;tblptru may be non-zero
  4882  004E44                     	endif
  4883  004E44  0008               	tblrd		*
  4884  004E46  50F5               	movf	tablat,w,c
  4885  004E48  ECFB  F01F         	call	_EUSART_Write
  4886  004E4C  0100               	movlb	0	; () banked
  4887  004E4E  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
  4888  004E50  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
  4889  004E52                     l9991:
  4890                           
  4891                           ; BSR set to: 0
  4892  004E52  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  4893  004E56  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  4894  004E5A                     	if	0	;tblptru may be non-zero
  4895  004E5A                     	endif
  4896  004E5A                     	if	0	;tblptru may be non-zero
  4897  004E5A                     	endif
  4898  004E5A  0008               	tblrd		*
  4899  004E5C  50F5               	movf	tablat,w,c
  4900  004E5E  E1EE               	bnz	l9987
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;MOTEapp.c: 976: }
  4904                           ;MOTEapp.c: 978: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  4905  004E60  6B67               	clrf	sendDataCommand@byteCount& (0+255),b
  4906  004E62                     l9997:
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;MOTEapp.c: 979: {
  4910                           ;MOTEapp.c: 980: EUSART_Write(appData[byteCount]);
  4911  004E62  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
  4912  004E64  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  4913  004E66  6ED9               	movwf	fsr2l,c
  4914  004E68  0E00               	movlw	0
  4915  004E6A  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  4916  004E6C  6EDA               	movwf	fsr2h,c
  4917  004E6E  50DF               	movf	indf2,w,c
  4918  004E70  ECFB  F01F         	call	_EUSART_Write
  4919  004E74  0100               	movlb	0	; () banked
  4920  004E76  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
  4921                           
  4922                           ; BSR set to: 0
  4923  004E78  0E02               	movlw	2
  4924  004E7A  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  4925  004E7C  D7F2               	goto	l9997
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;MOTEapp.c: 981: }
  4929                           ;MOTEapp.c: 983: EUSART_Write(appData[3]);
  4930  004E7E  EE20 F003          	lfsr	2,3
  4931  004E82  5163               	movf	sendDataCommand@appData& (0+255),w,b
  4932  004E84  26D9               	addwf	fsr2l,f,c
  4933  004E86  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
  4934  004E88  22DA               	addwfc	fsr2h,f,c
  4935  004E8A  50DF               	movf	indf2,w,c
  4936  004E8C  ECFB  F01F         	call	_EUSART_Write
  4937                           
  4938                           ;MOTEapp.c: 985: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  4939  004E90  0E04               	movlw	4
  4940  004E92  0100               	movlb	0	; () banked
  4941  004E94  6F68               	movwf	sendDataCommand@byteCount_1669& (0+255),b
  4942  004E96  D01D               	goto	l10011
  4943  004E98                     l10007:
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;MOTEapp.c: 986: {
  4947                           ;MOTEapp.c: 987: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  4948  004E98  5168               	movf	sendDataCommand@byteCount_1669& (0+255),w,b
  4949  004E9A  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  4950  004E9C  6ED9               	movwf	fsr2l,c
  4951  004E9E  0E00               	movlw	0
  4952  004EA0  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  4953  004EA2  6EDA               	movwf	fsr2h,c
  4954  004EA4  50DF               	movf	indf2,w,c
  4955  004EA6  6F66               	movwf	??_sendDataCommand& (0+255),b
  4956  004EA8  3966               	swapf	??_sendDataCommand& (0+255),w,b
  4957  004EAA  0B0F               	andlw	15
  4958  004EAC  ECDF  F01E         	call	_hexToStr
  4959  004EB0  ECFB  F01F         	call	_EUSART_Write
  4960                           
  4961                           ;MOTEapp.c: 988: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  4962  004EB4  0100               	movlb	0	; () banked
  4963  004EB6  5168               	movf	sendDataCommand@byteCount_1669& (0+255),w,b
  4964  004EB8  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  4965  004EBA  6ED9               	movwf	fsr2l,c
  4966  004EBC  0E00               	movlw	0
  4967  004EBE  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  4968  004EC0  6EDA               	movwf	fsr2h,c
  4969  004EC2  50DF               	movf	indf2,w,c
  4970  004EC4  0B0F               	andlw	15
  4971  004EC6  ECDF  F01E         	call	_hexToStr
  4972  004ECA  ECFB  F01F         	call	_EUSART_Write
  4973  004ECE  0100               	movlb	0	; () banked
  4974  004ED0  2B68               	incf	sendDataCommand@byteCount_1669& (0+255),f,b
  4975  004ED2                     l10011:
  4976                           
  4977                           ; BSR set to: 0
  4978  004ED2  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
  4979  004ED4  5D68               	subwf	sendDataCommand@byteCount_1669& (0+255),w,b
  4980  004ED6  E3E0               	bnc	l10007
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;MOTEapp.c: 989: }
  4984                           ;MOTEapp.c: 990: EndLine();
  4985  004ED8  EFAC  F01D         	goto	_EndLine	;wreg free
  4986  004EDC                     __end_of_sendDataCommand:
  4987                           	opt stack 0
  4988                           tblptru	equ	0xFF8
  4989                           tblptrh	equ	0xFF7
  4990                           tblptrl	equ	0xFF6
  4991                           tablat	equ	0xFF5
  4992                           intcon	equ	0xFF2
  4993                           postinc0	equ	0xFEE
  4994                           wreg	equ	0xFE8
  4995                           indf2	equ	0xFDF
  4996                           fsr2h	equ	0xFDA
  4997                           fsr2l	equ	0xFD9
  4998                           status	equ	0xFD8
  4999                           
  5000 ;; *************** function _hexToStr *****************
  5001 ;; Defined at:
  5002 ;;		line 1002 in file "../Includes/Board/MOTEapp.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;  character       1    wreg     unsigned char 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;  character       1    0[BANK0 ] unsigned char 
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      unsigned char 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0
  5011 ;; Tracked objects:
  5012 ;;		On entry : F/0
  5013 ;;		On exit  : F/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5016 ;;      Params:         0       0       0       0       0       0       0       0       0
  5017 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5019 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5020 ;;Total ram usage:        1 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:   11
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_sendDataCommand
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           	psect	text5
  5031  003DBE                     __ptext5:
  5032                           	opt stack 0
  5033  003DBE                     _hexToStr:
  5034                           	opt stack 16
  5035                           
  5036                           ;incstack = 0
  5037                           ;hexToStr@character stored from wreg
  5038  003DBE  6F60               	movwf	hexToStr@character& (0+255),b
  5039                           
  5040                           ;MOTEapp.c: 1005: character = character & 0x0F;
  5041  003DC0  0E0F               	movlw	15
  5042  003DC2  0100               	movlb	0	; () banked
  5043  003DC4  1760               	andwf	hexToStr@character& (0+255),f,b
  5044                           
  5045                           ;MOTEapp.c: 1007: if (character < 0x0A)
  5046  003DC6  0E0A               	movlw	10
  5047  003DC8  6160               	cpfslt	hexToStr@character& (0+255),b
  5048  003DCA  D003               	goto	l9471
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;MOTEapp.c: 1008: {
  5052                           ;MOTEapp.c: 1009: return character + '0';
  5053  003DCC  5160               	movf	hexToStr@character& (0+255),w,b
  5054  003DCE  0F30               	addlw	48
  5055  003DD0  0012               	return	
  5056  003DD2                     l9471:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;MOTEapp.c: 1011: else if ( (character >= 0x0A) && (character <= 0x0F) )
  5060  003DD2  0E09               	movlw	9
  5061  003DD4  6560               	cpfsgt	hexToStr@character& (0+255),b
  5062  003DD6  0C00               	retlw	0
  5063                           
  5064                           ; BSR set to: 0
  5065  003DD8  0E10               	movlw	16
  5066  003DDA  6160               	cpfslt	hexToStr@character& (0+255),b
  5067  003DDC  0C00               	retlw	0
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;MOTEapp.c: 1012: {
  5071                           ;MOTEapp.c: 1013: return character + '0' + 7;
  5072  003DDE  5160               	movf	hexToStr@character& (0+255),w,b
  5073  003DE0  0F37               	addlw	55
  5074  003DE2  0012               	return	
  5075  003DE4                     __end_of_hexToStr:
  5076                           	opt stack 0
  5077                           tblptru	equ	0xFF8
  5078                           tblptrh	equ	0xFF7
  5079                           tblptrl	equ	0xFF6
  5080                           tablat	equ	0xFF5
  5081                           intcon	equ	0xFF2
  5082                           postinc0	equ	0xFEE
  5083                           wreg	equ	0xFE8
  5084                           indf2	equ	0xFDF
  5085                           fsr2h	equ	0xFDA
  5086                           fsr2l	equ	0xFD9
  5087                           status	equ	0xFD8
  5088                           
  5089 ;; *************** function _oled_putUint8 *****************
  5090 ;; Defined at:
  5091 ;;		line 226 in file "../Includes/Drivers/SSD1306oLED.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;  number          1    wreg     unsigned char 
  5094 ;;  station_dot     1   18[BANK0 ] unsigned char 
  5095 ;;  start_page      1   19[BANK0 ] unsigned char 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  number          1   20[BANK0 ] unsigned char 
  5098 ;;  numData         6   21[BANK0 ] struct .
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5103 ;; Tracked objects:
  5104 ;;		On entry : E/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5108 ;;      Params:         0       2       0       0       0       0       0       0       0
  5109 ;;      Locals:         0       7       0       0       0       0       0       0       0
  5110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5111 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5112 ;;Total ram usage:        9 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:   16
  5115 ;; This function calls:
  5116 ;;		___lbdiv
  5117 ;;		___lbmod
  5118 ;;		_oled_putString
  5119 ;; This function is called by:
  5120 ;;		_moteRunningProcess
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text6
  5125  004512                     __ptext6:
  5126                           	opt stack 0
  5127  004512                     _oled_putUint8:
  5128                           	opt stack 12
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;incstack = 0
  5132                           ;oled_putUint8@number stored from wreg
  5133  004512  0100               	movlb	0	; () banked
  5134  004514  6F74               	movwf	oled_putUint8@number& (0+255),b
  5135                           
  5136                           ;SSD1306oLED.c: 228: display_data_t numData;
  5137                           ;SSD1306oLED.c: 229: numData.d2 = '0' + (number % 10);
  5138  004516  0E0A               	movlw	10
  5139  004518  6F60               	movwf	___lbmod@divisor& (0+255),b
  5140  00451A  5174               	movf	oled_putUint8@number& (0+255),w,b
  5141  00451C  EC1A  F01F         	call	___lbmod
  5142  004520  0F30               	addlw	48
  5143  004522  6F77               	movwf	(oled_putUint8@numData+2)& (0+255),b
  5144                           
  5145                           ;SSD1306oLED.c: 230: number /= 10;
  5146  004524  0E0A               	movlw	10
  5147  004526  6F60               	movwf	___lbdiv@divisor& (0+255),b
  5148  004528  5174               	movf	oled_putUint8@number& (0+255),w,b
  5149  00452A  EC30  F020         	call	___lbdiv
  5150  00452E  6F74               	movwf	oled_putUint8@number& (0+255),b
  5151                           
  5152                           ;SSD1306oLED.c: 231: numData.d1 = '0' + (number % 10);
  5153  004530  0E0A               	movlw	10
  5154  004532  6F60               	movwf	___lbmod@divisor& (0+255),b
  5155  004534  5174               	movf	oled_putUint8@number& (0+255),w,b
  5156  004536  EC1A  F01F         	call	___lbmod
  5157  00453A  0F30               	addlw	48
  5158  00453C  6F76               	movwf	(oled_putUint8@numData+1)& (0+255),b
  5159                           
  5160                           ;SSD1306oLED.c: 232: number /= 10;
  5161  00453E  0E0A               	movlw	10
  5162  004540  6F60               	movwf	___lbdiv@divisor& (0+255),b
  5163  004542  5174               	movf	oled_putUint8@number& (0+255),w,b
  5164  004544  EC30  F020         	call	___lbdiv
  5165  004548  6F74               	movwf	oled_putUint8@number& (0+255),b
  5166                           
  5167                           ;SSD1306oLED.c: 233: numData.d0 = '0' + (number % 10);
  5168  00454A  0E0A               	movlw	10
  5169  00454C  6F60               	movwf	___lbmod@divisor& (0+255),b
  5170  00454E  5174               	movf	oled_putUint8@number& (0+255),w,b
  5171  004550  EC1A  F01F         	call	___lbmod
  5172  004554  0F30               	addlw	48
  5173  004556  6F75               	movwf	oled_putUint8@numData& (0+255),b
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;SSD1306oLED.c: 235: numData.b[3]=0;
  5177  004558  6B78               	clrf	(oled_putUint8@numData+3)& (0+255),b
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;SSD1306oLED.c: 237: oled_putString(numData.b,station_dot,start_page);
  5181  00455A  0E75               	movlw	low oled_putUint8@numData
  5182  00455C  6F6D               	movwf	oled_putString@string& (0+255),b
  5183  00455E  6B6E               	clrf	(oled_putString@string+1)& (0+255),b
  5184  004560  C072  F06F         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  5185  004564  C073  F070         	movff	oled_putUint8@start_page,oled_putString@start_page
  5186  004568  EF17  F023         	goto	_oled_putString	;wreg free
  5187  00456C                     __end_of_oled_putUint8:
  5188                           	opt stack 0
  5189                           tblptru	equ	0xFF8
  5190                           tblptrh	equ	0xFF7
  5191                           tblptrl	equ	0xFF6
  5192                           tablat	equ	0xFF5
  5193                           intcon	equ	0xFF2
  5194                           postinc0	equ	0xFEE
  5195                           wreg	equ	0xFE8
  5196                           indf2	equ	0xFDF
  5197                           fsr2h	equ	0xFDA
  5198                           fsr2l	equ	0xFD9
  5199                           status	equ	0xFD8
  5200                           
  5201 ;; *************** function _oled_putUint16 *****************
  5202 ;; Defined at:
  5203 ;;		line 240 in file "../Includes/Drivers/SSD1306oLED.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  number          2   18[BANK0 ] unsigned int 
  5206 ;;  station_dot     1   20[BANK0 ] unsigned char 
  5207 ;;  start_page      1   21[BANK0 ] unsigned char 
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;  numData         6   22[BANK0 ] struct .
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      void 
  5212 ;; Registers used:
  5213 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : F/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5219 ;;      Params:         0       4       0       0       0       0       0       0       0
  5220 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5222 ;;      Totals:         0      10       0       0       0       0       0       0       0
  5223 ;;Total ram usage:       10 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:   16
  5226 ;; This function calls:
  5227 ;;		___lwdiv
  5228 ;;		___lwmod
  5229 ;;		_oled_putString
  5230 ;; This function is called by:
  5231 ;;		_moteRunningProcess
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text7
  5236  0059CE                     __ptext7:
  5237                           	opt stack 0
  5238  0059CE                     _oled_putUint16:
  5239                           	opt stack 12
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;SSD1306oLED.c: 242: display_data_t numData;
  5243                           ;SSD1306oLED.c: 243: numData.d4 = '0' + (number % 10);
  5244                           
  5245                           ;incstack = 0
  5246  0059CE  C072  F067         	movff	oled_putUint16@number,___lwmod@dividend
  5247  0059D2  C073  F068         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  5248  0059D6  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5249  0059D8  0E0A               	movlw	10
  5250  0059DA  6F69               	movwf	___lwmod@divisor& (0+255),b
  5251  0059DC  ECDD  F020         	call	___lwmod	;wreg free
  5252  0059E0  5167               	movf	?___lwmod& (0+255),w,b
  5253  0059E2  0F30               	addlw	48
  5254  0059E4  6F7A               	movwf	(oled_putUint16@numData+4)& (0+255),b
  5255                           
  5256                           ;SSD1306oLED.c: 244: number /= 10;
  5257  0059E6  C072  F060         	movff	oled_putUint16@number,___lwdiv@dividend
  5258  0059EA  C073  F061         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  5259  0059EE  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5260  0059F0  0E0A               	movlw	10
  5261  0059F2  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5262  0059F4  EC21  F021         	call	___lwdiv	;wreg free
  5263  0059F8  C060  F072         	movff	?___lwdiv,oled_putUint16@number
  5264  0059FC  C061  F073         	movff	?___lwdiv+1,oled_putUint16@number+1
  5265                           
  5266                           ;SSD1306oLED.c: 245: numData.d3 = '0' + (number % 10);
  5267  005A00  C072  F067         	movff	oled_putUint16@number,___lwmod@dividend
  5268  005A04  C073  F068         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  5269  005A08  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5270  005A0A  0E0A               	movlw	10
  5271  005A0C  6F69               	movwf	___lwmod@divisor& (0+255),b
  5272  005A0E  ECDD  F020         	call	___lwmod	;wreg free
  5273  005A12  5167               	movf	?___lwmod& (0+255),w,b
  5274  005A14  0F30               	addlw	48
  5275  005A16  6F79               	movwf	(oled_putUint16@numData+3)& (0+255),b
  5276                           
  5277                           ;SSD1306oLED.c: 246: number /= 10;
  5278  005A18  C072  F060         	movff	oled_putUint16@number,___lwdiv@dividend
  5279  005A1C  C073  F061         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  5280  005A20  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5281  005A22  0E0A               	movlw	10
  5282  005A24  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5283  005A26  EC21  F021         	call	___lwdiv	;wreg free
  5284  005A2A  C060  F072         	movff	?___lwdiv,oled_putUint16@number
  5285  005A2E  C061  F073         	movff	?___lwdiv+1,oled_putUint16@number+1
  5286                           
  5287                           ;SSD1306oLED.c: 247: numData.d2 = '0' + (number % 10);
  5288  005A32  C072  F067         	movff	oled_putUint16@number,___lwmod@dividend
  5289  005A36  C073  F068         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  5290  005A3A  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5291  005A3C  0E0A               	movlw	10
  5292  005A3E  6F69               	movwf	___lwmod@divisor& (0+255),b
  5293  005A40  ECDD  F020         	call	___lwmod	;wreg free
  5294  005A44  5167               	movf	?___lwmod& (0+255),w,b
  5295  005A46  0F30               	addlw	48
  5296  005A48  6F78               	movwf	(oled_putUint16@numData+2)& (0+255),b
  5297                           
  5298                           ;SSD1306oLED.c: 248: number /= 10;
  5299  005A4A  C072  F060         	movff	oled_putUint16@number,___lwdiv@dividend
  5300  005A4E  C073  F061         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  5301  005A52  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5302  005A54  0E0A               	movlw	10
  5303  005A56  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5304  005A58  EC21  F021         	call	___lwdiv	;wreg free
  5305  005A5C  C060  F072         	movff	?___lwdiv,oled_putUint16@number
  5306  005A60  C061  F073         	movff	?___lwdiv+1,oled_putUint16@number+1
  5307                           
  5308                           ;SSD1306oLED.c: 249: numData.d1 = '0' + (number % 10);
  5309  005A64  C072  F067         	movff	oled_putUint16@number,___lwmod@dividend
  5310  005A68  C073  F068         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  5311  005A6C  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5312  005A6E  0E0A               	movlw	10
  5313  005A70  6F69               	movwf	___lwmod@divisor& (0+255),b
  5314  005A72  ECDD  F020         	call	___lwmod	;wreg free
  5315  005A76  5167               	movf	?___lwmod& (0+255),w,b
  5316  005A78  0F30               	addlw	48
  5317  005A7A  6F77               	movwf	(oled_putUint16@numData+1)& (0+255),b
  5318                           
  5319                           ;SSD1306oLED.c: 250: number /= 10;
  5320  005A7C  C072  F060         	movff	oled_putUint16@number,___lwdiv@dividend
  5321  005A80  C073  F061         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  5322  005A84  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5323  005A86  0E0A               	movlw	10
  5324  005A88  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5325  005A8A  EC21  F021         	call	___lwdiv	;wreg free
  5326  005A8E  C060  F072         	movff	?___lwdiv,oled_putUint16@number
  5327  005A92  C061  F073         	movff	?___lwdiv+1,oled_putUint16@number+1
  5328                           
  5329                           ;SSD1306oLED.c: 251: numData.d0 = '0' + (number % 10);
  5330  005A96  C072  F067         	movff	oled_putUint16@number,___lwmod@dividend
  5331  005A9A  C073  F068         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  5332  005A9E  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5333  005AA0  0E0A               	movlw	10
  5334  005AA2  6F69               	movwf	___lwmod@divisor& (0+255),b
  5335  005AA4  ECDD  F020         	call	___lwmod	;wreg free
  5336  005AA8  5167               	movf	?___lwmod& (0+255),w,b
  5337  005AAA  0F30               	addlw	48
  5338  005AAC  6F76               	movwf	oled_putUint16@numData& (0+255),b
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;SSD1306oLED.c: 253: numData.b[5]=0;
  5342  005AAE  6B7B               	clrf	(oled_putUint16@numData+5)& (0+255),b
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;SSD1306oLED.c: 255: oled_putString(numData.b,station_dot,start_page);
  5346  005AB0  0E76               	movlw	low oled_putUint16@numData
  5347  005AB2  6F6D               	movwf	oled_putString@string& (0+255),b
  5348  005AB4  6B6E               	clrf	(oled_putString@string+1)& (0+255),b
  5349  005AB6  C074  F06F         	movff	oled_putUint16@station_dot,oled_putString@station_dot
  5350  005ABA  C075  F070         	movff	oled_putUint16@start_page,oled_putString@start_page
  5351  005ABE  EF17  F023         	goto	_oled_putString	;wreg free
  5352  005AC2                     __end_of_oled_putUint16:
  5353                           	opt stack 0
  5354                           tblptru	equ	0xFF8
  5355                           tblptrh	equ	0xFF7
  5356                           tblptrl	equ	0xFF6
  5357                           tablat	equ	0xFF5
  5358                           intcon	equ	0xFF2
  5359                           postinc0	equ	0xFEE
  5360                           wreg	equ	0xFE8
  5361                           indf2	equ	0xFDF
  5362                           fsr2h	equ	0xFDA
  5363                           fsr2l	equ	0xFD9
  5364                           status	equ	0xFD8
  5365                           
  5366 ;; *************** function _moteApp_clearBuffers *****************
  5367 ;; Defined at:
  5368 ;;		line 1112 in file "../Includes/Board/MOTEapp.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;		None
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  counter         1    2[BANK0 ] unsigned char 
  5373 ;;  counter         1    1[BANK0 ] unsigned char 
  5374 ;;  counter         1    0[BANK0 ] unsigned char 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  1    wreg      void 
  5377 ;; Registers used:
  5378 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : F/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5384 ;;      Params:         0       0       0       0       0       0       0       0       0
  5385 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5387 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5388 ;;Total ram usage:        3 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; Hardware stack levels required when called:   11
  5391 ;; This function calls:
  5392 ;;		Nothing
  5393 ;; This function is called by:
  5394 ;;		_moteRunningProcess
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text8
  5399  0042D6                     __ptext8:
  5400                           	opt stack 0
  5401  0042D6                     _moteApp_clearBuffers:
  5402                           	opt stack 17
  5403                           
  5404                           ;MOTEapp.c: 1114: for (uint8_t counter = 0; counter < 3; counter++)
  5405                           
  5406                           ;incstack = 0
  5407  0042D6  0100               	movlb	0	; () banked
  5408  0042D8  6B60               	clrf	moteApp_clearBuffers@counter& (0+255),b
  5409  0042DA                     l9931:
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;MOTEapp.c: 1115: {
  5413                           ;MOTEapp.c: 1116: responsePortNum[counter] = 0;
  5414  0042DA  0E2E               	movlw	low _responsePortNum
  5415  0042DC  2560               	addwf	moteApp_clearBuffers@counter& (0+255),w,b
  5416  0042DE  6ED9               	movwf	fsr2l,c
  5417  0042E0  6ADA               	clrf	fsr2h,c
  5418  0042E2  0E01               	movlw	high _responsePortNum
  5419  0042E4  22DA               	addwfc	fsr2h,f,c
  5420  0042E6  6ADF               	clrf	indf2,c
  5421                           
  5422                           ; BSR set to: 0
  5423  0042E8  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
  5424                           
  5425                           ; BSR set to: 0
  5426  0042EA  0E02               	movlw	2
  5427  0042EC  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
  5428  0042EE  D7F5               	goto	l9931
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;MOTEapp.c: 1117: }
  5432                           ;MOTEapp.c: 1118: for (uint8_t counter = 0; counter < 34; counter++)
  5433  0042F0  6B61               	clrf	moteApp_clearBuffers@counter_1736& (0+255),b
  5434  0042F2                     l9941:
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;MOTEapp.c: 1119: {
  5438                           ;MOTEapp.c: 1120: responseId[counter] = 0;
  5439  0042F2  0E00               	movlw	low _responseId
  5440  0042F4  2561               	addwf	moteApp_clearBuffers@counter_1736& (0+255),w,b
  5441  0042F6  6ED9               	movwf	fsr2l,c
  5442  0042F8  6ADA               	clrf	fsr2h,c
  5443  0042FA  0E01               	movlw	high _responseId
  5444  0042FC  22DA               	addwfc	fsr2h,f,c
  5445  0042FE  6ADF               	clrf	indf2,c
  5446                           
  5447                           ; BSR set to: 0
  5448  004300  2B61               	incf	moteApp_clearBuffers@counter_1736& (0+255),f,b
  5449                           
  5450                           ; BSR set to: 0
  5451  004302  0E21               	movlw	33
  5452  004304  6561               	cpfsgt	moteApp_clearBuffers@counter_1736& (0+255),b
  5453  004306  D7F5               	goto	l9941
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;MOTEapp.c: 1121: }
  5457                           ;MOTEapp.c: 1122: for (uint8_t counter = 0; counter < 10; counter++)
  5458  004308  6B62               	clrf	moteApp_clearBuffers@counter_1737& (0+255),b
  5459  00430A                     l9951:
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;MOTEapp.c: 1123: {
  5463                           ;MOTEapp.c: 1124: responseData[counter] = 0;
  5464  00430A  0E10               	movlw	low _responseData
  5465  00430C  2562               	addwf	moteApp_clearBuffers@counter_1737& (0+255),w,b
  5466  00430E  6ED9               	movwf	fsr2l,c
  5467  004310  6ADA               	clrf	fsr2h,c
  5468  004312  0E01               	movlw	high _responseData
  5469  004314  22DA               	addwfc	fsr2h,f,c
  5470  004316  6ADF               	clrf	indf2,c
  5471                           
  5472                           ; BSR set to: 0
  5473  004318  2B62               	incf	moteApp_clearBuffers@counter_1737& (0+255),f,b
  5474                           
  5475                           ; BSR set to: 0
  5476  00431A  0E09               	movlw	9
  5477  00431C  6562               	cpfsgt	moteApp_clearBuffers@counter_1737& (0+255),b
  5478  00431E  D7F5               	goto	l9951
  5479  004320  0C09               	retlw	9
  5480  004322                     __end_of_moteApp_clearBuffers:
  5481                           	opt stack 0
  5482                           tblptru	equ	0xFF8
  5483                           tblptrh	equ	0xFF7
  5484                           tblptrl	equ	0xFF6
  5485                           tablat	equ	0xFF5
  5486                           intcon	equ	0xFF2
  5487                           postinc0	equ	0xFEE
  5488                           wreg	equ	0xFE8
  5489                           indf2	equ	0xFDF
  5490                           fsr2h	equ	0xFDA
  5491                           fsr2l	equ	0xFD9
  5492                           status	equ	0xFD8
  5493                           
  5494 ;; *************** function _moteApp_add8bToDataBuffer *****************
  5495 ;; Defined at:
  5496 ;;		line 1128 in file "../Includes/Board/MOTEapp.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  number          1    wreg     unsigned char 
  5499 ;;  bufferLocati    1    4[BANK0 ] unsigned char 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  number          1    5[BANK0 ] unsigned char 
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      void 
  5504 ;; Registers used:
  5505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : E/0
  5508 ;;		On exit  : F/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5511 ;;      Params:         0       1       0       0       0       0       0       0       0
  5512 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5514 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5515 ;;Total ram usage:        2 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:   12
  5518 ;; This function calls:
  5519 ;;		___lbdiv
  5520 ;;		___lbmod
  5521 ;; This function is called by:
  5522 ;;		_moteRunningProcess
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text9
  5527  004766                     __ptext9:
  5528                           	opt stack 0
  5529  004766                     _moteApp_add8bToDataBuffer:
  5530                           	opt stack 16
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;incstack = 0
  5534                           ;moteApp_add8bToDataBuffer@number stored from wreg
  5535  004766  0100               	movlb	0	; () banked
  5536  004768  6F65               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5537                           
  5538                           ;MOTEapp.c: 1130: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  5539  00476A  0ED8               	movlw	low (_dataBuffer+2)
  5540  00476C  2564               	addwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5541  00476E  6ED9               	movwf	fsr2l,c
  5542  004770  6ADA               	clrf	fsr2h,c
  5543  004772  0E01               	movlw	high (_dataBuffer+2)
  5544  004774  22DA               	addwfc	fsr2h,f,c
  5545  004776  0E0A               	movlw	10
  5546  004778  6F60               	movwf	___lbmod@divisor& (0+255),b
  5547  00477A  5165               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5548  00477C  EC1A  F01F         	call	___lbmod
  5549  004780  0F30               	addlw	48
  5550  004782  6EDF               	movwf	indf2,c
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;MOTEapp.c: 1131: number /= 10;
  5554  004784  0E0A               	movlw	10
  5555  004786  6F60               	movwf	___lbdiv@divisor& (0+255),b
  5556  004788  5165               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5557  00478A  EC30  F020         	call	___lbdiv
  5558  00478E  6F65               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;MOTEapp.c: 1132: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  5562  004790  0ED7               	movlw	low (_dataBuffer+1)
  5563  004792  2564               	addwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5564  004794  6ED9               	movwf	fsr2l,c
  5565  004796  6ADA               	clrf	fsr2h,c
  5566  004798  0E01               	movlw	high (_dataBuffer+1)
  5567  00479A  22DA               	addwfc	fsr2h,f,c
  5568  00479C  0E0A               	movlw	10
  5569  00479E  6F60               	movwf	___lbmod@divisor& (0+255),b
  5570  0047A0  5165               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5571  0047A2  EC1A  F01F         	call	___lbmod
  5572  0047A6  0F30               	addlw	48
  5573  0047A8  6EDF               	movwf	indf2,c
  5574                           
  5575                           ;MOTEapp.c: 1133: number /= 10;
  5576  0047AA  0E0A               	movlw	10
  5577  0047AC  6F60               	movwf	___lbdiv@divisor& (0+255),b
  5578  0047AE  5165               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5579  0047B0  EC30  F020         	call	___lbdiv
  5580  0047B4  6F65               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;MOTEapp.c: 1134: dataBuffer[bufferLocation] = '0' + (number % 10);
  5584  0047B6  0ED6               	movlw	low _dataBuffer
  5585  0047B8  2564               	addwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5586  0047BA  6ED9               	movwf	fsr2l,c
  5587  0047BC  6ADA               	clrf	fsr2h,c
  5588  0047BE  0E01               	movlw	high _dataBuffer
  5589  0047C0  22DA               	addwfc	fsr2h,f,c
  5590  0047C2  0E0A               	movlw	10
  5591  0047C4  6F60               	movwf	___lbmod@divisor& (0+255),b
  5592  0047C6  5165               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5593  0047C8  EC1A  F01F         	call	___lbmod
  5594  0047CC  0F30               	addlw	48
  5595  0047CE  6EDF               	movwf	indf2,c
  5596                           
  5597                           ; BSR set to: 0
  5598  0047D0  0012               	return		;funcret
  5599  0047D2                     __end_of_moteApp_add8bToDataBuffer:
  5600                           	opt stack 0
  5601                           tblptru	equ	0xFF8
  5602                           tblptrh	equ	0xFF7
  5603                           tblptrl	equ	0xFF6
  5604                           tablat	equ	0xFF5
  5605                           intcon	equ	0xFF2
  5606                           postinc0	equ	0xFEE
  5607                           wreg	equ	0xFE8
  5608                           indf2	equ	0xFDF
  5609                           fsr2h	equ	0xFDA
  5610                           fsr2l	equ	0xFD9
  5611                           status	equ	0xFD8
  5612                           
  5613 ;; *************** function ___lbmod *****************
  5614 ;; Defined at:
  5615 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbmod.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  dividend        1    wreg     unsigned char 
  5618 ;;  divisor         1    0[BANK0 ] unsigned char 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  dividend        1    1[BANK0 ] unsigned char 
  5621 ;;  rem             1    3[BANK0 ] unsigned char 
  5622 ;;  counter         1    2[BANK0 ] unsigned char 
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1    wreg      unsigned char 
  5625 ;; Registers used:
  5626 ;;		wreg, status,2, status,0
  5627 ;; Tracked objects:
  5628 ;;		On entry : F/0
  5629 ;;		On exit  : F/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5632 ;;      Params:         0       1       0       0       0       0       0       0       0
  5633 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5635 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5636 ;;Total ram usage:        4 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:   11
  5639 ;; This function calls:
  5640 ;;		Nothing
  5641 ;; This function is called by:
  5642 ;;		_moteApp_add8bToDataBuffer
  5643 ;;		_oled_putUint8
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           	psect	text10
  5648  003E34                     __ptext10:
  5649                           	opt stack 0
  5650  003E34                     ___lbmod:
  5651                           	opt stack 16
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;incstack = 0
  5655                           ;___lbmod@dividend stored from wreg
  5656  003E34  6F61               	movwf	___lbmod@dividend& (0+255),b
  5657  003E36  0E08               	movlw	8
  5658  003E38  0100               	movlb	0	; () banked
  5659  003E3A  6F62               	movwf	___lbmod@counter& (0+255),b
  5660                           
  5661                           ; BSR set to: 0
  5662  003E3C  6B63               	clrf	___lbmod@rem& (0+255),b
  5663  003E3E                     l9601:
  5664                           
  5665                           ; BSR set to: 0
  5666  003E3E  90D8               	bcf	status,0,c
  5667  003E40  3561               	rlcf	___lbmod@dividend& (0+255),w,b
  5668  003E42  3563               	rlcf	___lbmod@rem& (0+255),w,b
  5669  003E44  6F63               	movwf	___lbmod@rem& (0+255),b
  5670                           
  5671                           ; BSR set to: 0
  5672  003E46  90D8               	bcf	status,0,c
  5673  003E48  3761               	rlcf	___lbmod@dividend& (0+255),f,b
  5674                           
  5675                           ; BSR set to: 0
  5676  003E4A  5160               	movf	___lbmod@divisor& (0+255),w,b
  5677  003E4C  5D63               	subwf	___lbmod@rem& (0+255),w,b
  5678  003E4E  E302               	bnc	l9609
  5679                           
  5680                           ; BSR set to: 0
  5681  003E50  5160               	movf	___lbmod@divisor& (0+255),w,b
  5682  003E52  5F63               	subwf	___lbmod@rem& (0+255),f,b
  5683  003E54                     l9609:
  5684                           
  5685                           ; BSR set to: 0
  5686  003E54  2F62               	decfsz	___lbmod@counter& (0+255),f,b
  5687  003E56  D7F3               	goto	l9601
  5688                           
  5689                           ; BSR set to: 0
  5690  003E58  5163               	movf	___lbmod@rem& (0+255),w,b
  5691                           
  5692                           ; BSR set to: 0
  5693  003E5A  0012               	return		;funcret
  5694  003E5C                     __end_of___lbmod:
  5695                           	opt stack 0
  5696                           tblptru	equ	0xFF8
  5697                           tblptrh	equ	0xFF7
  5698                           tblptrl	equ	0xFF6
  5699                           tablat	equ	0xFF5
  5700                           intcon	equ	0xFF2
  5701                           postinc0	equ	0xFEE
  5702                           wreg	equ	0xFE8
  5703                           indf2	equ	0xFDF
  5704                           fsr2h	equ	0xFDA
  5705                           fsr2l	equ	0xFD9
  5706                           status	equ	0xFD8
  5707                           
  5708 ;; *************** function ___lbdiv *****************
  5709 ;; Defined at:
  5710 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbdiv.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;  dividend        1    wreg     unsigned char 
  5713 ;;  divisor         1    0[BANK0 ] unsigned char 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;  dividend        1    1[BANK0 ] unsigned char 
  5716 ;;  quotient        1    3[BANK0 ] unsigned char 
  5717 ;;  counter         1    2[BANK0 ] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      unsigned char 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0
  5722 ;; Tracked objects:
  5723 ;;		On entry : F/0
  5724 ;;		On exit  : F/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5727 ;;      Params:         0       1       0       0       0       0       0       0       0
  5728 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5730 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5731 ;;Total ram usage:        4 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:   11
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_moteApp_add8bToDataBuffer
  5738 ;;		_oled_putUint8
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           	psect	text11
  5743  004060                     __ptext11:
  5744                           	opt stack 0
  5745  004060                     ___lbdiv:
  5746                           	opt stack 16
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;incstack = 0
  5750                           ;___lbdiv@dividend stored from wreg
  5751  004060  6F61               	movwf	___lbdiv@dividend& (0+255),b
  5752  004062  0100               	movlb	0	; () banked
  5753  004064  6B63               	clrf	___lbdiv@quotient& (0+255),b
  5754                           
  5755                           ; BSR set to: 0
  5756  004066  5160               	movf	___lbdiv@divisor& (0+255),w,b
  5757  004068  E014               	bz	l9593
  5758                           
  5759                           ; BSR set to: 0
  5760  00406A  0E01               	movlw	1
  5761  00406C  6F62               	movwf	___lbdiv@counter& (0+255),b
  5762  00406E  D003               	goto	l9581
  5763  004070                     l9577:
  5764                           
  5765                           ; BSR set to: 0
  5766  004070  90D8               	bcf	status,0,c
  5767  004072  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
  5768                           
  5769                           ; BSR set to: 0
  5770  004074  2B62               	incf	___lbdiv@counter& (0+255),f,b
  5771  004076                     l9581:
  5772                           
  5773                           ; BSR set to: 0
  5774  004076  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
  5775  004078  D7FB               	goto	l9577
  5776  00407A                     l9583:
  5777                           
  5778                           ; BSR set to: 0
  5779  00407A  90D8               	bcf	status,0,c
  5780  00407C  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
  5781  00407E  5160               	movf	___lbdiv@divisor& (0+255),w,b
  5782  004080  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
  5783  004082  E303               	bnc	l9589
  5784                           
  5785                           ; BSR set to: 0
  5786  004084  5160               	movf	___lbdiv@divisor& (0+255),w,b
  5787  004086  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
  5788                           
  5789                           ; BSR set to: 0
  5790  004088  8163               	bsf	___lbdiv@quotient& (0+255),0,b
  5791  00408A                     l9589:
  5792                           
  5793                           ; BSR set to: 0
  5794  00408A  90D8               	bcf	status,0,c
  5795  00408C  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
  5796                           
  5797                           ; BSR set to: 0
  5798  00408E  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
  5799  004090  D7F4               	goto	l9583
  5800  004092                     l9593:
  5801                           
  5802                           ; BSR set to: 0
  5803  004092  5163               	movf	___lbdiv@quotient& (0+255),w,b
  5804                           
  5805                           ; BSR set to: 0
  5806  004094  0012               	return		;funcret
  5807  004096                     __end_of___lbdiv:
  5808                           	opt stack 0
  5809                           tblptru	equ	0xFF8
  5810                           tblptrh	equ	0xFF7
  5811                           tblptrl	equ	0xFF6
  5812                           tablat	equ	0xFF5
  5813                           intcon	equ	0xFF2
  5814                           postinc0	equ	0xFEE
  5815                           wreg	equ	0xFE8
  5816                           indf2	equ	0xFDF
  5817                           fsr2h	equ	0xFDA
  5818                           fsr2l	equ	0xFD9
  5819                           status	equ	0xFD8
  5820                           
  5821 ;; *************** function _moteApp_add16bToDataBuffer *****************
  5822 ;; Defined at:
  5823 ;;		line 1137 in file "../Includes/Board/MOTEapp.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;  number          2   12[BANK0 ] unsigned int 
  5826 ;;  bufferLocati    1   14[BANK0 ] unsigned char 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : F/0
  5835 ;;		On exit  : F/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5838 ;;      Params:         0       3       0       0       0       0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5841 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5842 ;;Total ram usage:        3 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:   12
  5845 ;; This function calls:
  5846 ;;		___lwdiv
  5847 ;;		___lwmod
  5848 ;; This function is called by:
  5849 ;;		_moteRunningProcess
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text12
  5854  005EF8                     __ptext12:
  5855                           	opt stack 0
  5856  005EF8                     _moteApp_add16bToDataBuffer:
  5857                           	opt stack 16
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;MOTEapp.c: 1139: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;incstack = 0
  5864  005EF8  0EDA               	movlw	low (_dataBuffer+4)
  5865  005EFA  256E               	addwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5866  005EFC  6ED9               	movwf	fsr2l,c
  5867  005EFE  6ADA               	clrf	fsr2h,c
  5868  005F00  0E01               	movlw	high (_dataBuffer+4)
  5869  005F02  22DA               	addwfc	fsr2h,f,c
  5870  005F04  C06C  F067         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5871  005F08  C06D  F068         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5872  005F0C  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5873  005F0E  0E0A               	movlw	10
  5874  005F10  6F69               	movwf	___lwmod@divisor& (0+255),b
  5875  005F12  ECDD  F020         	call	___lwmod	;wreg free
  5876  005F16  5167               	movf	?___lwmod& (0+255),w,b
  5877  005F18  0F30               	addlw	48
  5878  005F1A  6EDF               	movwf	indf2,c
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;MOTEapp.c: 1140: number /= 10;
  5882  005F1C  C06C  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5883  005F20  C06D  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5884  005F24  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5885  005F26  0E0A               	movlw	10
  5886  005F28  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5887  005F2A  EC21  F021         	call	___lwdiv	;wreg free
  5888  005F2E  C060  F06C         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5889  005F32  C061  F06D         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;MOTEapp.c: 1141: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
  5893  005F36  0ED9               	movlw	low (_dataBuffer+3)
  5894  005F38  256E               	addwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5895  005F3A  6ED9               	movwf	fsr2l,c
  5896  005F3C  6ADA               	clrf	fsr2h,c
  5897  005F3E  0E01               	movlw	high (_dataBuffer+3)
  5898  005F40  22DA               	addwfc	fsr2h,f,c
  5899  005F42  C06C  F067         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5900  005F46  C06D  F068         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5901  005F4A  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5902  005F4C  0E0A               	movlw	10
  5903  005F4E  6F69               	movwf	___lwmod@divisor& (0+255),b
  5904  005F50  ECDD  F020         	call	___lwmod	;wreg free
  5905  005F54  5167               	movf	?___lwmod& (0+255),w,b
  5906  005F56  0F30               	addlw	48
  5907  005F58  6EDF               	movwf	indf2,c
  5908                           
  5909                           ;MOTEapp.c: 1142: number /= 10;
  5910  005F5A  C06C  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5911  005F5E  C06D  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5912  005F62  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5913  005F64  0E0A               	movlw	10
  5914  005F66  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5915  005F68  EC21  F021         	call	___lwdiv	;wreg free
  5916  005F6C  C060  F06C         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5917  005F70  C061  F06D         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;MOTEapp.c: 1143: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  5921  005F74  0ED8               	movlw	low (_dataBuffer+2)
  5922  005F76  256E               	addwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5923  005F78  6ED9               	movwf	fsr2l,c
  5924  005F7A  6ADA               	clrf	fsr2h,c
  5925  005F7C  0E01               	movlw	high (_dataBuffer+2)
  5926  005F7E  22DA               	addwfc	fsr2h,f,c
  5927  005F80  C06C  F067         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5928  005F84  C06D  F068         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5929  005F88  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5930  005F8A  0E0A               	movlw	10
  5931  005F8C  6F69               	movwf	___lwmod@divisor& (0+255),b
  5932  005F8E  ECDD  F020         	call	___lwmod	;wreg free
  5933  005F92  5167               	movf	?___lwmod& (0+255),w,b
  5934  005F94  0F30               	addlw	48
  5935  005F96  6EDF               	movwf	indf2,c
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;MOTEapp.c: 1144: number /= 10;
  5939  005F98  C06C  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5940  005F9C  C06D  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5941  005FA0  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5942  005FA2  0E0A               	movlw	10
  5943  005FA4  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5944  005FA6  EC21  F021         	call	___lwdiv	;wreg free
  5945  005FAA  C060  F06C         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5946  005FAE  C061  F06D         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5947                           
  5948                           ;MOTEapp.c: 1145: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  5949  005FB2  0ED7               	movlw	low (_dataBuffer+1)
  5950  005FB4  256E               	addwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5951  005FB6  6ED9               	movwf	fsr2l,c
  5952  005FB8  6ADA               	clrf	fsr2h,c
  5953  005FBA  0E01               	movlw	high (_dataBuffer+1)
  5954  005FBC  22DA               	addwfc	fsr2h,f,c
  5955  005FBE  C06C  F067         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5956  005FC2  C06D  F068         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5957  005FC6  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5958  005FC8  0E0A               	movlw	10
  5959  005FCA  6F69               	movwf	___lwmod@divisor& (0+255),b
  5960  005FCC  ECDD  F020         	call	___lwmod	;wreg free
  5961  005FD0  5167               	movf	?___lwmod& (0+255),w,b
  5962  005FD2  0F30               	addlw	48
  5963  005FD4  6EDF               	movwf	indf2,c
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;MOTEapp.c: 1146: number /= 10;
  5967  005FD6  C06C  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5968  005FDA  C06D  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5969  005FDE  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5970  005FE0  0E0A               	movlw	10
  5971  005FE2  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5972  005FE4  EC21  F021         	call	___lwdiv	;wreg free
  5973  005FE8  C060  F06C         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5974  005FEC  C061  F06D         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;MOTEapp.c: 1147: dataBuffer[bufferLocation] = '0' + (number % 10);
  5978  005FF0  0ED6               	movlw	low _dataBuffer
  5979  005FF2  256E               	addwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5980  005FF4  6ED9               	movwf	fsr2l,c
  5981  005FF6  6ADA               	clrf	fsr2h,c
  5982  005FF8  0E01               	movlw	high _dataBuffer
  5983  005FFA  22DA               	addwfc	fsr2h,f,c
  5984  005FFC  C06C  F067         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5985  006000  C06D  F068         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5986  006004  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5987  006006  0E0A               	movlw	10
  5988  006008  6F69               	movwf	___lwmod@divisor& (0+255),b
  5989  00600A  ECDD  F020         	call	___lwmod	;wreg free
  5990  00600E  5167               	movf	?___lwmod& (0+255),w,b
  5991  006010  0F30               	addlw	48
  5992  006012  6EDF               	movwf	indf2,c
  5993                           
  5994                           ; BSR set to: 0
  5995  006014  0012               	return		;funcret
  5996  006016                     __end_of_moteApp_add16bToDataBuffer:
  5997                           	opt stack 0
  5998                           tblptru	equ	0xFF8
  5999                           tblptrh	equ	0xFF7
  6000                           tblptrl	equ	0xFF6
  6001                           tablat	equ	0xFF5
  6002                           intcon	equ	0xFF2
  6003                           postinc0	equ	0xFEE
  6004                           wreg	equ	0xFE8
  6005                           indf2	equ	0xFDF
  6006                           fsr2h	equ	0xFDA
  6007                           fsr2l	equ	0xFD9
  6008                           status	equ	0xFD8
  6009                           
  6010 ;; *************** function _moteApp_GoToSleep *****************
  6011 ;; Defined at:
  6012 ;;		line 1021 in file "../Includes/Board/MOTEapp.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;		None
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  status          1    0        unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      unsigned char 
  6019 ;; Registers used:
  6020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : F/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6026 ;;      Params:         0       0       0       0       0       0       0       0       0
  6027 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6029 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6030 ;;Total ram usage:        1 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:   18
  6033 ;; This function calls:
  6034 ;;		_EUSART_FlushBuffer
  6035 ;;		_EUSART_Initialize
  6036 ;;		_PIN_MANAGER_Initialize
  6037 ;;		_modemResync
  6038 ;;		_modemSleep
  6039 ;;		_oled_displayOff
  6040 ;;		_oled_init
  6041 ;; This function is called by:
  6042 ;;		_moteRunningProcess
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text13
  6047  0046FC                     __ptext13:
  6048                           	opt stack 0
  6049  0046FC                     _moteApp_GoToSleep:
  6050                           	opt stack 10
  6051  0046FC                     l574:
  6052  0046FC  A282               	btfss	3970,1,c	;volatile
  6053  0046FE  D7FE               	goto	l574
  6054                           
  6055                           ;MOTEapp.c: 1025: modemSleep();
  6056  004700  EC79  F01E         	call	_modemSleep	;wreg free
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;MOTEapp.c: 1026: oled_displayOff(1);
  6060  004704  0E01               	movlw	1
  6061  004706  ECDB  F01D         	call	_oled_displayOff
  6062                           
  6063                           ;MOTEapp.c: 1027: ADCON0bits.ADON = 0;
  6064  00470A  90C2               	bcf	4034,0,c	;volatile
  6065                           
  6066                           ;MOTEapp.c: 1028: INTCONbits.GIE = 0;
  6067  00470C  9EF2               	bcf	intcon,7,c	;volatile
  6068                           
  6069                           ;MOTEapp.c: 1029: GIE = 0;
  6070  00470E  9EF2               	bcf	intcon,7,c	;volatile
  6071                           
  6072                           ;MOTEapp.c: 1030: PEIE = 0;
  6073  004710  9CF2               	bcf	intcon,6,c	;volatile
  6074                           
  6075                           ;MOTEapp.c: 1032: ANSELAbits.ANSA0 = 1;
  6076  004712  010F               	movlb	15	; () banked
  6077  004714  815B               	bsf	91,0,b	;volatile
  6078                           
  6079                           ; BSR set to: 15
  6080                           ;MOTEapp.c: 1034: PIE2bits.C1IE = 1;
  6081  004716  8CA0               	bsf	4000,6,c	;volatile
  6082                           
  6083                           ; BSR set to: 15
  6084                           ;MOTEapp.c: 1035: IOCCbits.IOCC0 = 1;
  6085  004718  8087               	bsf	3975,0,c	;volatile
  6086                           
  6087                           ; BSR set to: 15
  6088                           ;MOTEapp.c: 1036: IOCCbits.IOCC1 = 1;
  6089  00471A  8287               	bsf	3975,1,c	;volatile
  6090                           
  6091                           ; BSR set to: 15
  6092                           ;MOTEapp.c: 1037: IOCCbits.IOCC2 = 1;
  6093  00471C  8487               	bsf	3975,2,c	;volatile
  6094                           
  6095                           ; BSR set to: 15
  6096                           ;MOTEapp.c: 1038: INTCONbits.IOCIE = 1;
  6097  00471E  86F2               	bsf	intcon,3,c	;volatile
  6098                           
  6099                           ; BSR set to: 15
  6100  004720  5082               	movf	3970,w,c	;volatile
  6101                           
  6102                           ; BSR set to: 15
  6103  004722  5082               	movf	3970,w,c	;volatile
  6104                           
  6105                           ; BSR set to: 15
  6106  004724  5082               	movf	3970,w,c	;volatile
  6107                           
  6108                           ; BSR set to: 15
  6109                           ;MOTEapp.c: 1046: }
  6110                           ;MOTEapp.c: 1047: INTCONbits.IOCIF = 0;
  6111  004726  90F2               	bcf	intcon,0,c	;volatile
  6112                           
  6113                           ; BSR set to: 15
  6114                           ;MOTEapp.c: 1048: PIR2bits.C1IF = 0;
  6115  004728  9CA1               	bcf	4001,6,c	;volatile
  6116                           
  6117                           ; BSR set to: 15
  6118                           ;MOTEapp.c: 1049: __nop();
  6119  00472A  F000               	nop	
  6120  00472C  0003               	sleep		;# 
  6121                           
  6122                           ;MOTEapp.c: 1051: __nop();
  6123  00472E  F000               	nop	
  6124                           
  6125                           ;MOTEapp.c: 1054: EUSART_FlushBuffer();
  6126  004730  ECB1  F01F         	call	_EUSART_FlushBuffer	;wreg free
  6127                           
  6128                           ; BSR set to: 1
  6129                           ;MOTEapp.c: 1056: INTCONbits.IOCIE = 0;
  6130  004734  96F2               	bcf	intcon,3,c	;volatile
  6131                           
  6132                           ; BSR set to: 1
  6133                           ;MOTEapp.c: 1057: IOCCbits.IOCC0 = 0;
  6134  004736  9087               	bcf	3975,0,c	;volatile
  6135                           
  6136                           ; BSR set to: 1
  6137                           ;MOTEapp.c: 1058: IOCCbits.IOCC1 = 0;
  6138  004738  9287               	bcf	3975,1,c	;volatile
  6139                           
  6140                           ; BSR set to: 1
  6141                           ;MOTEapp.c: 1059: IOCCbits.IOCC2 = 0;
  6142  00473A  9487               	bcf	3975,2,c	;volatile
  6143                           
  6144                           ; BSR set to: 1
  6145                           ;MOTEapp.c: 1060: PIE2bits.C1IE = 0;
  6146  00473C  9CA0               	bcf	4000,6,c	;volatile
  6147                           
  6148                           ; BSR set to: 1
  6149                           ;MOTEapp.c: 1061: GIE = 1;
  6150  00473E  8EF2               	bsf	intcon,7,c	;volatile
  6151                           
  6152                           ; BSR set to: 1
  6153                           ;MOTEapp.c: 1063: PIN_MANAGER_Initialize();
  6154  004740  EC91  F021         	call	_PIN_MANAGER_Initialize	;wreg free
  6155                           
  6156                           ; BSR set to: 15
  6157                           ;MOTEapp.c: 1064: EUSART_Initialize();
  6158  004744  EC9A  F01F         	call	_EUSART_Initialize	;wreg free
  6159                           
  6160                           ; BSR set to: 1
  6161                           ;MOTEapp.c: 1066: if (INTCONbits.IOCIF)
  6162  004748  A0F2               	btfss	intcon,0,c	;volatile
  6163  00474A  D002               	goto	l10079
  6164                           
  6165                           ; BSR set to: 1
  6166                           ;MOTEapp.c: 1067: {
  6167                           ;MOTEapp.c: 1068: INTCONbits.IOCIF = 0;
  6168  00474C  90F2               	bcf	intcon,0,c	;volatile
  6169                           
  6170                           ; BSR set to: 1
  6171                           ;MOTEapp.c: 1070: }
  6172  00474E  D002               	goto	l10083
  6173  004750                     l10079:
  6174                           
  6175                           ; BSR set to: 1
  6176                           ;MOTEapp.c: 1076: else
  6177                           ;MOTEapp.c: 1077: {
  6178                           ;MOTEapp.c: 1078: secTicker = 10;
  6179  004750  0E0A               	movlw	10
  6180  004752  6E29               	movwf	_secTicker,c
  6181  004754                     l10083:
  6182                           
  6183                           ; BSR set to: 1
  6184                           ;MOTEapp.c: 1080: }
  6185                           ;MOTEapp.c: 1081: ANSELAbits.ANSA0 = 0;
  6186  004754  010F               	movlb	15	; () banked
  6187  004756  915B               	bcf	91,0,b	;volatile
  6188                           
  6189                           ; BSR set to: 15
  6190                           ;MOTEapp.c: 1082: oled_displayOff(0);
  6191  004758  0E00               	movlw	0
  6192  00475A  ECDB  F01D         	call	_oled_displayOff
  6193                           
  6194                           ;MOTEapp.c: 1083: oled_init();
  6195  00475E  EC98  F01E         	call	_oled_init	;wreg free
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;MOTEapp.c: 1085: modemResync();
  6199  004762  EFE5  F022         	goto	_modemResync	;wreg free
  6200  004766                     __end_of_moteApp_GoToSleep:
  6201                           	opt stack 0
  6202                           tblptru	equ	0xFF8
  6203                           tblptrh	equ	0xFF7
  6204                           tblptrl	equ	0xFF6
  6205                           tablat	equ	0xFF5
  6206                           intcon	equ	0xFF2
  6207                           postinc0	equ	0xFEE
  6208                           wreg	equ	0xFE8
  6209                           indf2	equ	0xFDF
  6210                           fsr2h	equ	0xFDA
  6211                           fsr2l	equ	0xFD9
  6212                           status	equ	0xFD8
  6213                           
  6214 ;; *************** function _oled_displayOff *****************
  6215 ;; Defined at:
  6216 ;;		line 394 in file "../Includes/Drivers/SSD1306oLED.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  state           1    wreg     unsigned char 
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;  state           1    2[BANK0 ] unsigned char 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      void 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6230 ;;      Params:         0       0       0       0       0       0       0       0       0
  6231 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6233 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6234 ;;Total ram usage:        1 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:   13
  6237 ;; This function calls:
  6238 ;;		_oled_writeCommand
  6239 ;; This function is called by:
  6240 ;;		_moteApp_GoToSleep
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text14
  6245  003BB6                     __ptext14:
  6246                           	opt stack 0
  6247  003BB6                     _oled_displayOff:
  6248                           	opt stack 14
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;incstack = 0
  6252                           ;oled_displayOff@state stored from wreg
  6253  003BB6  0100               	movlb	0	; () banked
  6254  003BB8  6F62               	movwf	oled_displayOff@state& (0+255),b
  6255                           
  6256                           ;SSD1306oLED.c: 396: LATBbits.LATB4 = 0;
  6257  003BBA  988A               	bcf	3978,4,c	;volatile
  6258                           
  6259                           ;SSD1306oLED.c: 397: oled_writeCommand(0xAF - state);
  6260  003BBC  5162               	movf	oled_displayOff@state& (0+255),w,b
  6261  003BBE  08AF               	sublw	175
  6262  003BC0  ECA0  F01D         	call	_oled_writeCommand
  6263                           
  6264                           ;SSD1306oLED.c: 398: LATBbits.LATB4 = 1;
  6265  003BC4  888A               	bsf	3978,4,c	;volatile
  6266  003BC6  0012               	return		;funcret
  6267  003BC8                     __end_of_oled_displayOff:
  6268                           	opt stack 0
  6269                           tblptru	equ	0xFF8
  6270                           tblptrh	equ	0xFF7
  6271                           tblptrl	equ	0xFF6
  6272                           tablat	equ	0xFF5
  6273                           intcon	equ	0xFF2
  6274                           postinc0	equ	0xFEE
  6275                           wreg	equ	0xFE8
  6276                           indf2	equ	0xFDF
  6277                           fsr2h	equ	0xFDA
  6278                           fsr2l	equ	0xFD9
  6279                           status	equ	0xFD8
  6280                           
  6281 ;; *************** function _modemSleep *****************
  6282 ;; Defined at:
  6283 ;;		line 160 in file "../Includes/Board/MOTEapp.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;		None
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;		None
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      void 
  6290 ;; Registers used:
  6291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : F/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6297 ;;      Params:         0       0       0       0       0       0       0       0       0
  6298 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6300 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6301 ;;Total ram usage:        0 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; Hardware stack levels required when called:   14
  6304 ;; This function calls:
  6305 ;;		_moteApp_delayms
  6306 ;;		_sendCommand
  6307 ;; This function is called by:
  6308 ;;		_moteApp_GoToSleep
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text15
  6313  003CF2                     __ptext15:
  6314                           	opt stack 0
  6315  003CF2                     _modemSleep:
  6316                           	opt stack 13
  6317                           
  6318                           ;MOTEapp.c: 162: sendCommand("sys sleep 999999999");
  6319                           
  6320                           ;incstack = 0
  6321  003CF2  0E22               	movlw	low STR_22
  6322  003CF4  0100               	movlb	0	; () banked
  6323  003CF6  6F61               	movwf	sendCommand@string& (0+255),b
  6324  003CF8  0E7C               	movlw	high STR_22
  6325  003CFA  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  6326  003CFC  EC35  F022         	call	_sendCommand	;wreg free
  6327  003D00                     l314:
  6328  003D00  B89D               	btfsc	3997,4,c	;volatile
  6329  003D02  D7FE               	goto	l314
  6330                           
  6331                           ;MOTEapp.c: 165: moteApp_delayms(20);
  6332  003D04  0100               	movlb	0	; () banked
  6333  003D06  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6334  003D08  0E14               	movlw	20
  6335  003D0A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  6336  003D0C  EF06  F01F         	goto	_moteApp_delayms	;wreg free
  6337  003D10                     __end_of_modemSleep:
  6338                           	opt stack 0
  6339                           tblptru	equ	0xFF8
  6340                           tblptrh	equ	0xFF7
  6341                           tblptrl	equ	0xFF6
  6342                           tablat	equ	0xFF5
  6343                           intcon	equ	0xFF2
  6344                           postinc0	equ	0xFEE
  6345                           wreg	equ	0xFE8
  6346                           indf2	equ	0xFDF
  6347                           fsr2h	equ	0xFDA
  6348                           fsr2l	equ	0xFD9
  6349                           status	equ	0xFD8
  6350                           
  6351 ;; *************** function _modemResync *****************
  6352 ;; Defined at:
  6353 ;;		line 123 in file "../Includes/Board/MOTEapp.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;		None
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
  6358 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : F/0
  6365 ;;		On exit  : F/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6368 ;;      Params:         0       0       0       0       0       0       0       0       0
  6369 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6371 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6372 ;;Total ram usage:        3 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:   14
  6375 ;; This function calls:
  6376 ;;		_MOTEapp_getModemResponse
  6377 ;;		_moteApp_delayms
  6378 ;;		_sendCommand
  6379 ;; This function is called by:
  6380 ;;		_main
  6381 ;;		_moteApp_GoToSleep
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           	psect	text16
  6386  0045CA                     __ptext16:
  6387                           	opt stack 0
  6388  0045CA                     _modemResync:
  6389                           	opt stack 13
  6390                           
  6391                           ; BSR set to: 0
  6392                           ;MOTEapp.c: 125: bool escapeEvent = 0;
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;incstack = 0
  6396  0045CA  6B67               	clrf	modemResync@escapeEvent& (0+255),b
  6397                           
  6398                           ;MOTEapp.c: 126: uint16_t escapeCounter = 0;
  6399  0045CC  6B65               	clrf	modemResync@escapeCounter& (0+255),b
  6400  0045CE  6B66               	clrf	(modemResync@escapeCounter+1)& (0+255),b
  6401                           
  6402                           ;MOTEapp.c: 134: TXSTAbits.TXEN = 0;
  6403  0045D0  9AAC               	bcf	4012,5,c	;volatile
  6404                           
  6405                           ;MOTEapp.c: 135: LATCbits.LATC6 = 0;
  6406  0045D2  9C8B               	bcf	3979,6,c	;volatile
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;MOTEapp.c: 136: moteApp_delayms(10);
  6410  0045D4  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6411  0045D6  0E0A               	movlw	10
  6412  0045D8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  6413  0045DA  EC06  F01F         	call	_moteApp_delayms	;wreg free
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;MOTEapp.c: 141: TXSTAbits.TXEN = 1;
  6417  0045DE  8AAC               	bsf	4012,5,c	;volatile
  6418                           
  6419                           ;MOTEapp.c: 142: moteApp_delayms(5);
  6420  0045E0  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6421  0045E2  0E05               	movlw	5
  6422  0045E4  6F60               	movwf	moteApp_delayms@length& (0+255),b
  6423  0045E6  EC06  F01F         	call	_moteApp_delayms	;wreg free
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;MOTEapp.c: 144: TXREG = 0x55;
  6427  0045EA  0E55               	movlw	85
  6428  0045EC  6EAD               	movwf	4013,c	;volatile
  6429  0045EE                     l302:
  6430                           
  6431                           ; BSR set to: 0
  6432  0045EE  A2AC               	btfss	4012,1,c	;volatile
  6433  0045F0  D7FE               	goto	l302
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;MOTEapp.c: 148: sendCommand("z");
  6437  0045F2  0EFD               	movlw	low STR_21
  6438  0045F4  6F61               	movwf	sendCommand@string& (0+255),b
  6439  0045F6  0E7F               	movlw	high STR_21
  6440  0045F8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  6441  0045FA  EC35  F022         	call	_sendCommand	;wreg free
  6442                           
  6443                           ;MOTEapp.c: 150: moteApp_delayms(40);
  6444  0045FE  0100               	movlb	0	; () banked
  6445  004600  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6446  004602  0E28               	movlw	40
  6447  004604  6F60               	movwf	moteApp_delayms@length& (0+255),b
  6448  004606  EC06  F01F         	call	_moteApp_delayms	;wreg free
  6449                           
  6450                           ;MOTEapp.c: 151: while (escapeEvent)
  6451  00460A  D00E               	goto	l305
  6452  00460C                     l9435:
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;MOTEapp.c: 152: {
  6456                           ;MOTEapp.c: 153: if(MOTEapp_getModemResponse())
  6457  00460C  EC46  F021         	call	_MOTEapp_getModemResponse	;wreg free
  6458  004610  0900               	iorlw	0
  6459  004612  E003               	bz	l9439
  6460  004614                     l9437:
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;MOTEapp.c: 154: escapeEvent = 1;
  6464  004614  0E01               	movlw	1
  6465  004616  6F67               	movwf	modemResync@escapeEvent& (0+255),b
  6466  004618  D007               	goto	l305
  6467  00461A                     l9439:
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;MOTEapp.c: 155: else if (++escapeCounter > 5000)
  6471  00461A  4B65               	infsnz	modemResync@escapeCounter& (0+255),f,b
  6472  00461C  2B66               	incf	(modemResync@escapeCounter+1)& (0+255),f,b
  6473  00461E  0E89               	movlw	137
  6474  004620  5D65               	subwf	modemResync@escapeCounter& (0+255),w,b
  6475  004622  0E13               	movlw	19
  6476  004624  5966               	subwfb	(modemResync@escapeCounter+1)& (0+255),w,b
  6477  004626  E2F6               	bc	l9437
  6478  004628                     l305:
  6479                           
  6480                           ; BSR set to: 0
  6481  004628  5167               	movf	modemResync@escapeEvent& (0+255),w,b
  6482  00462A  E1F0               	bnz	l9435
  6483                           
  6484                           ; BSR set to: 0
  6485  00462C  0012               	return		;funcret
  6486  00462E                     __end_of_modemResync:
  6487                           	opt stack 0
  6488                           tblptru	equ	0xFF8
  6489                           tblptrh	equ	0xFF7
  6490                           tblptrl	equ	0xFF6
  6491                           tablat	equ	0xFF5
  6492                           intcon	equ	0xFF2
  6493                           postinc0	equ	0xFEE
  6494                           wreg	equ	0xFE8
  6495                           indf2	equ	0xFDF
  6496                           fsr2h	equ	0xFDA
  6497                           fsr2l	equ	0xFD9
  6498                           status	equ	0xFD8
  6499                           
  6500 ;; *************** function _MOTEapp_getModemResponse *****************
  6501 ;; Defined at:
  6502 ;;		line 921 in file "../Includes/Board/MOTEapp.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;		None
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  bufferByte      1    2[BANK0 ] unsigned char 
  6507 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1    wreg      unsigned char 
  6510 ;; Registers used:
  6511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6512 ;; Tracked objects:
  6513 ;;		On entry : D/2
  6514 ;;		On exit  : F/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6517 ;;      Params:         0       0       0       0       0       0       0       0       0
  6518 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6520 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6521 ;;Total ram usage:        2 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:   12
  6524 ;; This function calls:
  6525 ;;		_EUSART_Read
  6526 ;; This function is called by:
  6527 ;;		_modemResync
  6528 ;;		_moteHandler
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           	psect	text17
  6533  00428C                     __ptext17:
  6534                           	opt stack 0
  6535  00428C                     _MOTEapp_getModemResponse:
  6536                           	opt stack 14
  6537                           
  6538                           ;MOTEapp.c: 923: bool terminatorReceived = 0;
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;incstack = 0
  6542  00428C  0100               	movlb	0	; () banked
  6543  00428E  6B61               	clrf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;MOTEapp.c: 924: if ((eusartRxCount))
  6547  004290  5022               	movf	_eusartRxCount,w,c	;volatile
  6548  004292  E01F               	bz	l9337
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;MOTEapp.c: 927: bufferByte = EUSART_Read();
  6552                           
  6553                           ; BSR set to: 0
  6554  004294  ECE1  F01F         	call	_EUSART_Read	;wreg free
  6555  004298  6F62               	movwf	MOTEapp_getModemResponse@bufferByte& (0+255),b
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;MOTEapp.c: 929: if (bufferByte == 0x0D)
  6559  00429A  0E0D               	movlw	13
  6560  00429C  1962               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
  6561  00429E  E10B               	bnz	l9329
  6562                           
  6563                           ; BSR set to: 0
  6564                           ;MOTEapp.c: 930: {
  6565                           ;MOTEapp.c: 931: modemResonseBuffer[modemBufferIndex] = 0x00;
  6566  0042A0  0E96               	movlw	low _modemResonseBuffer
  6567  0042A2  2426               	addwf	_modemBufferIndex,w,c
  6568  0042A4  6ED9               	movwf	fsr2l,c
  6569  0042A6  6ADA               	clrf	fsr2h,c
  6570  0042A8  0E01               	movlw	high _modemResonseBuffer
  6571  0042AA  22DA               	addwfc	fsr2h,f,c
  6572  0042AC  6ADF               	clrf	indf2,c
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;MOTEapp.c: 932: terminatorReceived = 1;
  6576  0042AE  0E01               	movlw	1
  6577  0042B0  6F61               	movwf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;MOTEapp.c: 933: modemBufferIndex = 0;
  6581  0042B2  6A26               	clrf	_modemBufferIndex,c
  6582                           
  6583                           ;MOTEapp.c: 934: }
  6584  0042B4  D00E               	goto	l9337
  6585  0042B6                     l9329:
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;MOTEapp.c: 935: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
  6589  0042B6  5162               	movf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
  6590  0042B8  E00C               	bz	l9337
  6591                           
  6592                           ; BSR set to: 0
  6593  0042BA  0E0A               	movlw	10
  6594  0042BC  1962               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
  6595  0042BE  E009               	bz	l9337
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;MOTEapp.c: 939: else
  6599                           ;MOTEapp.c: 940: {
  6600                           ;MOTEapp.c: 941: modemResonseBuffer[modemBufferIndex] = bufferByte;
  6601  0042C0  0E96               	movlw	low _modemResonseBuffer
  6602  0042C2  2426               	addwf	_modemBufferIndex,w,c
  6603  0042C4  6ED9               	movwf	fsr2l,c
  6604  0042C6  6ADA               	clrf	fsr2h,c
  6605  0042C8  0E01               	movlw	high _modemResonseBuffer
  6606  0042CA  22DA               	addwfc	fsr2h,f,c
  6607  0042CC  C062  FFDF         	movff	MOTEapp_getModemResponse@bufferByte,indf2
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;MOTEapp.c: 943: modemBufferIndex++;
  6611  0042D0  2A26               	incf	_modemBufferIndex,f,c
  6612  0042D2                     l9337:
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;MOTEapp.c: 944: }
  6616                           ;MOTEapp.c: 945: }
  6617                           ;MOTEapp.c: 946: return terminatorReceived;
  6618  0042D2  5161               	movf	MOTEapp_getModemResponse@terminatorReceived& (0+255),w,b
  6619                           
  6620                           ; BSR set to: 0
  6621  0042D4  0012               	return		;funcret
  6622  0042D6                     __end_of_MOTEapp_getModemResponse:
  6623                           	opt stack 0
  6624                           tblptru	equ	0xFF8
  6625                           tblptrh	equ	0xFF7
  6626                           tblptrl	equ	0xFF6
  6627                           tablat	equ	0xFF5
  6628                           intcon	equ	0xFF2
  6629                           postinc0	equ	0xFEE
  6630                           wreg	equ	0xFE8
  6631                           indf2	equ	0xFDF
  6632                           fsr2h	equ	0xFDA
  6633                           fsr2l	equ	0xFD9
  6634                           status	equ	0xFD8
  6635                           
  6636 ;; *************** function _EUSART_FlushBuffer *****************
  6637 ;; Defined at:
  6638 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;		None
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  index           1    0[BANK0 ] unsigned char 
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  1    wreg      void 
  6645 ;; Registers used:
  6646 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/F
  6649 ;;		On exit  : F/1
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6652 ;;      Params:         0       0       0       0       0       0       0       0       0
  6653 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6655 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6656 ;;Total ram usage:        1 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:   11
  6659 ;; This function calls:
  6660 ;;		Nothing
  6661 ;; This function is called by:
  6662 ;;		_moteApp_GoToSleep
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           	psect	text18
  6667  003F62                     __ptext18:
  6668                           	opt stack 0
  6669  003F62                     _EUSART_FlushBuffer:
  6670                           	opt stack 16
  6671                           
  6672                           ;eusart.c: 204: uint8_t index;
  6673                           ;eusart.c: 205: for (index=0; index < 64; index++)
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;incstack = 0
  6677  003F62  0100               	movlb	0	; () banked
  6678  003F64  6B60               	clrf	EUSART_FlushBuffer@index& (0+255),b
  6679  003F66                     l9497:
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;eusart.c: 206: {
  6683                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
  6684  003F66  0E00               	movlw	low _eusartRxBuffer
  6685  003F68  2560               	addwf	EUSART_FlushBuffer@index& (0+255),w,b
  6686  003F6A  6ED9               	movwf	fsr2l,c
  6687  003F6C  6ADA               	clrf	fsr2h,c
  6688  003F6E  0E02               	movlw	high _eusartRxBuffer
  6689  003F70  22DA               	addwfc	fsr2h,f,c
  6690  003F72  6ADF               	clrf	indf2,c
  6691                           
  6692                           ; BSR set to: 0
  6693  003F74  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
  6694                           
  6695                           ; BSR set to: 0
  6696  003F76  0E3F               	movlw	63
  6697  003F78  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
  6698  003F7A  D7F5               	goto	l9497
  6699                           
  6700                           ; BSR set to: 0
  6701                           ;eusart.c: 208: }
  6702                           ;eusart.c: 209: eusartRxHead = 0;
  6703  003F7C  0101               	movlb	1	; () banked
  6704  003F7E  6B4E               	clrf	_eusartRxHead& (0+255),b
  6705                           
  6706                           ;eusart.c: 210: eusartRxTail = 0;
  6707  003F80  6B4F               	clrf	_eusartRxTail& (0+255),b
  6708                           
  6709                           ;eusart.c: 211: eusartRxCount = 0;
  6710  003F82  6A22               	clrf	_eusartRxCount,c	;volatile
  6711                           
  6712                           ;eusart.c: 213: PIE1bits.TXIE = 0;
  6713  003F84  989D               	bcf	3997,4,c	;volatile
  6714                           
  6715                           ;eusart.c: 214: eusartTxHead = 0;
  6716  003F86  6A24               	clrf	_eusartTxHead,c
  6717                           
  6718                           ;eusart.c: 215: eusartTxTail = 0;
  6719  003F88  6A25               	clrf	_eusartTxTail,c
  6720                           
  6721                           ; BSR set to: 1
  6722                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  6723  003F8A  0E40               	movlw	64
  6724  003F8C  6E23               	movwf	_eusartTxBufferRemaining,c	;volatile
  6725                           
  6726                           ; BSR set to: 1
  6727  003F8E  0C40               	retlw	64	;funcret
  6728  003F90                     __end_of_EUSART_FlushBuffer:
  6729                           	opt stack 0
  6730                           tblptru	equ	0xFF8
  6731                           tblptrh	equ	0xFF7
  6732                           tblptrl	equ	0xFF6
  6733                           tablat	equ	0xFF5
  6734                           intcon	equ	0xFF2
  6735                           postinc0	equ	0xFEE
  6736                           wreg	equ	0xFE8
  6737                           indf2	equ	0xFDF
  6738                           fsr2h	equ	0xFDA
  6739                           fsr2l	equ	0xFD9
  6740                           status	equ	0xFD8
  6741                           
  6742 ;; *************** function _TMR2_ReadTimer *****************
  6743 ;; Defined at:
  6744 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;		None
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;  readVal         1    0[BANK0 ] unsigned char 
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  1    wreg      unsigned char 
  6751 ;; Registers used:
  6752 ;;		wreg, status,2
  6753 ;; Tracked objects:
  6754 ;;		On entry : F/0
  6755 ;;		On exit  : F/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6758 ;;      Params:         0       0       0       0       0       0       0       0       0
  6759 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6761 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6762 ;;Total ram usage:        1 bytes
  6763 ;; Hardware stack levels used:    1
  6764 ;; Hardware stack levels required when called:   11
  6765 ;; This function calls:
  6766 ;;		Nothing
  6767 ;; This function is called by:
  6768 ;;		_moteRunningProcess
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772                           	psect	text19
  6773  003B18                     __ptext19:
  6774                           	opt stack 0
  6775  003B18                     _TMR2_ReadTimer:
  6776                           	opt stack 17
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;tmr2.c: 88: uint8_t readVal;
  6780                           ;tmr2.c: 90: readVal = TMR2;
  6781                           
  6782                           ; BSR set to: 1
  6783                           ;incstack = 0
  6784  003B18  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;tmr2.c: 92: return readVal;
  6788  003B1C  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
  6789                           
  6790                           ; BSR set to: 0
  6791  003B1E  0012               	return		;funcret
  6792  003B20                     __end_of_TMR2_ReadTimer:
  6793                           	opt stack 0
  6794                           tblptru	equ	0xFF8
  6795                           tblptrh	equ	0xFF7
  6796                           tblptrl	equ	0xFF6
  6797                           tablat	equ	0xFF5
  6798                           intcon	equ	0xFF2
  6799                           postinc0	equ	0xFEE
  6800                           wreg	equ	0xFE8
  6801                           indf2	equ	0xFDF
  6802                           fsr2h	equ	0xFDA
  6803                           fsr2l	equ	0xFD9
  6804                           status	equ	0xFD8
  6805                           
  6806 ;; *************** function _ADC_TempConversion *****************
  6807 ;; Defined at:
  6808 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;  tempRaw         1    wreg     enum E6179
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;  tempRaw         1    7[BANK0 ] enum E6179
  6813 ;;  temp            1    8[BANK0 ] unsigned char 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  1    wreg      unsigned char 
  6816 ;; Registers used:
  6817 ;;		wreg, status,2, status,0, cstack
  6818 ;; Tracked objects:
  6819 ;;		On entry : D/2
  6820 ;;		On exit  : F/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6823 ;;      Params:         0       0       0       0       0       0       0       0       0
  6824 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6826 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6827 ;;Total ram usage:        2 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:   12
  6830 ;; This function calls:
  6831 ;;		___lwdiv
  6832 ;; This function is called by:
  6833 ;;		_moteHandler
  6834 ;;		_moteRunningProcess
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text20
  6839  003D52                     __ptext20:
  6840                           	opt stack 0
  6841  003D52                     _ADC_TempConversion:
  6842                           	opt stack 16
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;incstack = 0
  6846                           ;ADC_TempConversion@tempRaw stored from wreg
  6847  003D52  0100               	movlb	0	; () banked
  6848  003D54  6F67               	movwf	ADC_TempConversion@tempRaw& (0+255),b
  6849                           
  6850                           ;adc.c: 138: uint8_t temp;
  6851                           ;adc.c: 140: temp = (uint16_t) (tempRaw - 250) / 5;
  6852  003D56  0E06               	movlw	6
  6853  003D58  2567               	addwf	ADC_TempConversion@tempRaw& (0+255),w,b
  6854  003D5A  6F60               	movwf	___lwdiv@dividend& (0+255),b
  6855  003D5C  6B61               	clrf	(___lwdiv@dividend+1)& (0+255),b
  6856  003D5E  0EFF               	movlw	255
  6857  003D60  2361               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
  6858  003D62  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  6859  003D64  0E05               	movlw	5
  6860  003D66  6F62               	movwf	___lwdiv@divisor& (0+255),b
  6861  003D68  EC21  F021         	call	___lwdiv	;wreg free
  6862  003D6C  5160               	movf	?___lwdiv& (0+255),w,b
  6863  003D6E  6F68               	movwf	ADC_TempConversion@temp& (0+255),b
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;adc.c: 141: return temp;
  6867  003D70  5168               	movf	ADC_TempConversion@temp& (0+255),w,b
  6868                           
  6869                           ; BSR set to: 0
  6870  003D72  0012               	return		;funcret
  6871  003D74                     __end_of_ADC_TempConversion:
  6872                           	opt stack 0
  6873                           tblptru	equ	0xFF8
  6874                           tblptrh	equ	0xFF7
  6875                           tblptrl	equ	0xFF6
  6876                           tablat	equ	0xFF5
  6877                           intcon	equ	0xFF2
  6878                           postinc0	equ	0xFEE
  6879                           wreg	equ	0xFE8
  6880                           indf2	equ	0xFDF
  6881                           fsr2h	equ	0xFDA
  6882                           fsr2l	equ	0xFD9
  6883                           status	equ	0xFD8
  6884                           
  6885 ;; *************** function _moteJoiningProcess *****************
  6886 ;; Defined at:
  6887 ;;		line 285 in file "../Includes/Board/MOTEapp.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;  messageReady    1    wreg     unsigned char 
  6890 ;;  switchEvent     1   74[BANK0 ] unsigned char 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  messageReady    1  145[BANK0 ] unsigned char 
  6893 ;;  cV              2  140[BANK0 ] unsigned int 
  6894 ;;  ana             2  138[BANK0 ] unsigned int 
  6895 ;;  old_float       2  136[BANK0 ] int 
  6896 ;;  batt            2  143[BANK0 ] unsigned int 
  6897 ;;  buf            50   82[BANK0 ] unsigned char [50]
  6898 ;;  joiningCompl    1  142[BANK0 ] unsigned char 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  1    wreg      enum E6542
  6901 ;; Registers used:
  6902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6903 ;; Tracked objects:
  6904 ;;		On entry : F/2
  6905 ;;		On exit  : F/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6908 ;;      Params:         0       1       0       0       0       0       0       0       0
  6909 ;;      Locals:         0      64       0       0       0       0       0       0       0
  6910 ;;      Temps:          0       7       0       0       0       0       0       0       0
  6911 ;;      Totals:         0      72       0       0       0       0       0       0       0
  6912 ;;Total ram usage:       72 bytes
  6913 ;; Hardware stack levels used:    1
  6914 ;; Hardware stack levels required when called:   18
  6915 ;; This function calls:
  6916 ;;		_ADC_GetConversion
  6917 ;;		_DATAEE_WriteByte
  6918 ;;		___fldiv
  6919 ;;		___flmul
  6920 ;;		___fltol
  6921 ;;		___xxtofl
  6922 ;;		_moteApp_delayms
  6923 ;;		_nibble2int
  6924 ;;		_oled_clear
  6925 ;;		_oled_init
  6926 ;;		_oled_putString
  6927 ;;		_sendCommand
  6928 ;;		_sprintf
  6929 ;;		_strcmp
  6930 ;;		_strncmp
  6931 ;; This function is called by:
  6932 ;;		_moteHandler
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text21
  6937  006E5C                     __ptext21:
  6938                           	opt stack 0
  6939  006E5C                     _moteJoiningProcess:
  6940                           	opt stack 11
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;incstack = 0
  6944                           ;moteJoiningProcess@messageReady stored from wreg
  6945  006E5C  0100               	movlb	0	; () banked
  6946  006E5E  6FF1               	movwf	moteJoiningProcess@messageReady& (0+255),b
  6947                           
  6948                           ;MOTEapp.c: 287: bool joiningComplete = 0;
  6949  006E60  6BEE               	clrf	moteJoiningProcess@joiningComplete& (0+255),b
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;MOTEapp.c: 288: static int mode = 0;
  6953                           ;MOTEapp.c: 289: static unsigned char pkt_cnt = 0;
  6954                           ;MOTEapp.c: 290: static unsigned char float_val = 255;
  6955                           ;MOTEapp.c: 291: static bool pending_confirm = 0;
  6956                           ;MOTEapp.c: 292: char buf[50];
  6957                           ;MOTEapp.c: 293: static int skip_count = 0;
  6958                           ;MOTEapp.c: 296: if (switchEvent)
  6959  006E62  51AA               	movf	moteJoiningProcess@switchEvent& (0+255),w,b
  6960  006E64  E102 EF84  F03B    	bz	l10951
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;MOTEapp.c: 297: {
  6964                           ;MOTEapp.c: 298: activeState = moteComFailure;
  6965  006E6A  0E11               	movlw	17
  6966  006E6C  0101               	movlb	1	; () banked
  6967  006E6E  6F4C               	movwf	_activeState& (0+255),b
  6968  006E70                     l365:
  6969  006E70  A282               	btfss	3970,1,c	;volatile
  6970  006E72  D7FE               	goto	l365
  6971  006E74  EF84  F03B         	goto	l10951
  6972  006E78                     l370:
  6973  006E78  D7FF               	goto	l370
  6974  006E7A                     l10609:
  6975                           
  6976                           ; BSR set to: 1
  6977                           ;MOTEapp.c: 314: sendCommand("sys get ver");
  6978  006E7A  0EAD               	movlw	low STR_29
  6979  006E7C  0100               	movlb	0	; () banked
  6980  006E7E  6F61               	movwf	sendCommand@string& (0+255),b
  6981  006E80  0E7E               	movlw	high STR_29
  6982  006E82  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  6983  006E84  EC35  F022         	call	_sendCommand	;wreg free
  6984                           
  6985                           ;MOTEapp.c: 315: oled_clear();
  6986  006E88  EC22  F01E         	call	_oled_clear	;wreg free
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;MOTEapp.c: 316: oled_putString("get ver",0,0);
  6990  006E8C  0EB1               	movlw	low (STR_29+4)
  6991  006E8E  6F6D               	movwf	oled_putString@string& (0+255),b
  6992  006E90  0E7E               	movlw	high (STR_29+4)
  6993  006E92  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  6994  006E94  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  6995  006E96  6B70               	clrf	oled_putString@start_page& (0+255),b
  6996  006E98  EC17  F023         	call	_oled_putString	;wreg free
  6997                           
  6998                           ;MOTEapp.c: 317: moteApp_delayms(50);
  6999  006E9C  0100               	movlb	0	; () banked
  7000  006E9E  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7001  006EA0  0E32               	movlw	50
  7002  006EA2  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7003  006EA4  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;MOTEapp.c: 318: if (PORTBbits.RB0) {
  7007  006EA8  A081               	btfss	3969,0,c	;volatile
  7008  006EAA  D00E               	goto	l10623
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;MOTEapp.c: 319: mode = 2;
  7012  006EAC  0101               	movlb	1	; () banked
  7013  006EAE  6B42               	clrf	(moteJoiningProcess@mode+1)& (0+255),b
  7014  006EB0  0E02               	movlw	2
  7015  006EB2  6F41               	movwf	moteJoiningProcess@mode& (0+255),b
  7016                           
  7017                           ; BSR set to: 1
  7018                           ;MOTEapp.c: 320: oled_putString("RX RESET",0,0);
  7019  006EB4  0E4B               	movlw	low STR_31
  7020  006EB6  0100               	movlb	0	; () banked
  7021  006EB8  6F6D               	movwf	oled_putString@string& (0+255),b
  7022  006EBA  0E7F               	movlw	high STR_31
  7023  006EBC  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7024  006EBE  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7025  006EC0  6B70               	clrf	oled_putString@start_page& (0+255),b
  7026  006EC2  EC17  F023         	call	_oled_putString	;wreg free
  7027                           
  7028                           ;MOTEapp.c: 321: } else {
  7029  006EC6  D00D               	goto	l10627
  7030  006EC8                     l10623:
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;MOTEapp.c: 322: mode = 1;
  7034  006EC8  0101               	movlb	1	; () banked
  7035  006ECA  6B42               	clrf	(moteJoiningProcess@mode+1)& (0+255),b
  7036  006ECC  0E01               	movlw	1
  7037  006ECE  6F41               	movwf	moteJoiningProcess@mode& (0+255),b
  7038                           
  7039                           ; BSR set to: 1
  7040                           ;MOTEapp.c: 323: oled_putString("TX RESET",0,0);
  7041  006ED0  0E54               	movlw	low STR_32
  7042  006ED2  0100               	movlb	0	; () banked
  7043  006ED4  6F6D               	movwf	oled_putString@string& (0+255),b
  7044  006ED6  0E7F               	movlw	high STR_32
  7045  006ED8  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7046  006EDA  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7047  006EDC  6B70               	clrf	oled_putString@start_page& (0+255),b
  7048  006EDE  EC17  F023         	call	_oled_putString	;wreg free
  7049  006EE2                     l10627:
  7050                           
  7051                           ;MOTEapp.c: 324: }
  7052                           ;MOTEapp.c: 325: moteApp_delayms(500);
  7053  006EE2  0E01               	movlw	1
  7054  006EE4  0100               	movlb	0	; () banked
  7055  006EE6  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7056  006EE8  0EF4               	movlw	244
  7057  006EEA  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7058  006EEC  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7059                           
  7060                           ; BSR set to: 0
  7061                           ;MOTEapp.c: 326: activeState = moteReset;
  7062  006EF0  0E01               	movlw	1
  7063  006EF2  D3BA               	goto	L16
  7064  006EF4                     l10631:
  7065                           
  7066                           ; BSR set to: 1
  7067                           ;MOTEapp.c: 330: if ( messageReady )
  7068  006EF4  0100               	movlb	0	; () banked
  7069  006EF6  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7070  006EF8  E102 EFBC  F03B    	bz	l10953
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;MOTEapp.c: 331: {
  7074                           ;MOTEapp.c: 332: if(strncmp(modemResonseBuffer, "RN", 2) == 0)
  7075  006EFE  0E96               	movlw	low _modemResonseBuffer
  7076  006F00  6F60               	movwf	strncmp@s1& (0+255),b
  7077  006F02  0E01               	movlw	high _modemResonseBuffer
  7078  006F04  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7079  006F06  0EF8               	movlw	low STR_33
  7080  006F08  6F62               	movwf	strncmp@s2& (0+255),b
  7081  006F0A  0E7F               	movlw	high STR_33
  7082  006F0C  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7083  006F0E  6B65               	clrf	(strncmp@len+1)& (0+255),b
  7084  006F10  0E02               	movlw	2
  7085  006F12  6F64               	movwf	strncmp@len& (0+255),b
  7086  006F14  EC4A  F023         	call	_strncmp	;wreg free
  7087  006F18  5160               	movf	?_strncmp& (0+255),w,b
  7088  006F1A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7089  006F1C  E118               	bnz	l379
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;MOTEapp.c: 333: {
  7093                           ;MOTEapp.c: 334: sendCommand("radio set mod lora");
  7094  006F1E  0E36               	movlw	low STR_34
  7095  006F20  6F61               	movwf	sendCommand@string& (0+255),b
  7096  006F22  0E7C               	movlw	high STR_34
  7097  006F24  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7098  006F26  EC35  F022         	call	_sendCommand	;wreg free
  7099                           
  7100                           ;MOTEapp.c: 335: oled_clear();
  7101  006F2A  EC22  F01E         	call	_oled_clear	;wreg free
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;MOTEapp.c: 336: oled_putString("set mod",0,0);
  7105  006F2E  0EB5               	movlw	low STR_35
  7106  006F30  6F6D               	movwf	oled_putString@string& (0+255),b
  7107  006F32  0E7F               	movlw	high STR_35
  7108  006F34  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7109  006F36  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7110  006F38  6B70               	clrf	oled_putString@start_page& (0+255),b
  7111  006F3A  EC17  F023         	call	_oled_putString	;wreg free
  7112                           
  7113                           ;MOTEapp.c: 337: moteApp_delayms(50);
  7114  006F3E  0100               	movlb	0	; () banked
  7115  006F40  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7116  006F42  0E32               	movlw	50
  7117  006F44  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7118  006F46  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;MOTEapp.c: 338: activeState = moteSetMod;
  7122  006F4A  0E02               	movlw	2
  7123  006F4C  D38D               	goto	L16
  7124  006F4E                     l379:
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;MOTEapp.c: 340: else
  7128                           ;MOTEapp.c: 341: {
  7129                           ;MOTEapp.c: 342: activeState = moteStartup;
  7130  006F4E  0101               	movlb	1	; () banked
  7131  006F50  6B4C               	clrf	_activeState& (0+255),b
  7132  006F52  EFBC  F03B         	goto	l10953
  7133  006F56                     l10645:
  7134                           
  7135                           ; BSR set to: 1
  7136                           ;MOTEapp.c: 347: if ( messageReady )
  7137  006F56  0100               	movlb	0	; () banked
  7138  006F58  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7139  006F5A  E102 EFBC  F03B    	bz	l10953
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;MOTEapp.c: 348: {
  7143                           ;MOTEapp.c: 349: if(strcmp(modemResonseBuffer, "ok") == 0)
  7144  006F60  0E96               	movlw	low _modemResonseBuffer
  7145  006F62  6F60               	movwf	strcmp@s1& (0+255),b
  7146  006F64  0E01               	movlw	high _modemResonseBuffer
  7147  006F66  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7148  006F68  0EAA               	movlw	low (STR_79+9)
  7149  006F6A  6F62               	movwf	strcmp@s2& (0+255),b
  7150  006F6C  0E7E               	movlw	high (STR_79+9)
  7151  006F6E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7152  006F70  ECD2  F024         	call	_strcmp	;wreg free
  7153  006F74  5160               	movf	?_strcmp& (0+255),w,b
  7154  006F76  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7155  006F78  E1EA               	bnz	l379
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;MOTEapp.c: 350: {
  7159                           ;MOTEapp.c: 351: sendCommand("radio set pwr 20");
  7160  006F7A  0EA1               	movlw	low STR_37
  7161  006F7C  6F61               	movwf	sendCommand@string& (0+255),b
  7162  006F7E  0E7C               	movlw	high STR_37
  7163  006F80  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7164  006F82  EC35  F022         	call	_sendCommand	;wreg free
  7165                           
  7166                           ;MOTEapp.c: 352: oled_clear();
  7167  006F86  EC22  F01E         	call	_oled_clear	;wreg free
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;MOTEapp.c: 353: oled_putString("set pwr",0,0);
  7171  006F8A  0EBD               	movlw	low STR_38
  7172  006F8C  6F6D               	movwf	oled_putString@string& (0+255),b
  7173  006F8E  0E7F               	movlw	high STR_38
  7174  006F90  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7175  006F92  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7176  006F94  6B70               	clrf	oled_putString@start_page& (0+255),b
  7177  006F96  EC17  F023         	call	_oled_putString	;wreg free
  7178                           
  7179                           ;MOTEapp.c: 354: moteApp_delayms(50);
  7180  006F9A  0100               	movlb	0	; () banked
  7181  006F9C  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7182  006F9E  0E32               	movlw	50
  7183  006FA0  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7184  006FA2  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7185                           
  7186                           ; BSR set to: 0
  7187                           ;MOTEapp.c: 355: activeState = moteSetPwr;
  7188  006FA6  0E03               	movlw	3
  7189  006FA8  D35F               	goto	L16
  7190  006FAA                     l10659:
  7191                           
  7192                           ; BSR set to: 1
  7193                           ;MOTEapp.c: 364: if ( messageReady )
  7194  006FAA  0100               	movlb	0	; () banked
  7195  006FAC  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7196  006FAE  E101 D3E3          	bz	l10953
  7197                           
  7198                           ; BSR set to: 0
  7199                           ;MOTEapp.c: 365: {
  7200                           ;MOTEapp.c: 366: if(strcmp(modemResonseBuffer, "ok") == 0)
  7201  006FB2  0E96               	movlw	low _modemResonseBuffer
  7202  006FB4  6F60               	movwf	strcmp@s1& (0+255),b
  7203  006FB6  0E01               	movlw	high _modemResonseBuffer
  7204  006FB8  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7205  006FBA  0EAA               	movlw	low (STR_79+9)
  7206  006FBC  6F62               	movwf	strcmp@s2& (0+255),b
  7207  006FBE  0E7E               	movlw	high (STR_79+9)
  7208  006FC0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7209  006FC2  ECD2  F024         	call	_strcmp	;wreg free
  7210  006FC6  5160               	movf	?_strcmp& (0+255),w,b
  7211  006FC8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7212  006FCA  E1C1               	bnz	l379
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;MOTEapp.c: 367: {
  7216                           ;MOTEapp.c: 369: sendCommand("radio set sf sf12");
  7217  006FCC  0E5B               	movlw	low STR_40
  7218  006FCE  6F61               	movwf	sendCommand@string& (0+255),b
  7219  006FD0  0E7C               	movlw	high STR_40
  7220  006FD2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7221  006FD4  EC35  F022         	call	_sendCommand	;wreg free
  7222                           
  7223                           ;MOTEapp.c: 370: oled_clear();
  7224  006FD8  EC22  F01E         	call	_oled_clear	;wreg free
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;MOTEapp.c: 371: oled_putString("set sf",0,0);
  7228  006FDC  0EDD               	movlw	low STR_41
  7229  006FDE  6F6D               	movwf	oled_putString@string& (0+255),b
  7230  006FE0  0E7F               	movlw	high STR_41
  7231  006FE2  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7232  006FE4  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7233  006FE6  6B70               	clrf	oled_putString@start_page& (0+255),b
  7234  006FE8  EC17  F023         	call	_oled_putString	;wreg free
  7235                           
  7236                           ;MOTEapp.c: 372: moteApp_delayms(50);
  7237  006FEC  0100               	movlb	0	; () banked
  7238  006FEE  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7239  006FF0  0E32               	movlw	50
  7240  006FF2  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7241  006FF4  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;MOTEapp.c: 373: activeState = moteSetSf;
  7245  006FF8  0E04               	movlw	4
  7246  006FFA  D336               	goto	L16
  7247  006FFC                     l10673:
  7248                           
  7249                           ; BSR set to: 1
  7250                           ;MOTEapp.c: 382: if ( messageReady )
  7251  006FFC  0100               	movlb	0	; () banked
  7252  006FFE  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7253  007000  E101 D3BA          	bz	l10953
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;MOTEapp.c: 383: {
  7257                           ;MOTEapp.c: 384: if(strcmp(modemResonseBuffer, "ok") == 0)
  7258  007004  0E96               	movlw	low _modemResonseBuffer
  7259  007006  6F60               	movwf	strcmp@s1& (0+255),b
  7260  007008  0E01               	movlw	high _modemResonseBuffer
  7261  00700A  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7262  00700C  0EAA               	movlw	low (STR_79+9)
  7263  00700E  6F62               	movwf	strcmp@s2& (0+255),b
  7264  007010  0E7E               	movlw	high (STR_79+9)
  7265  007012  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7266  007014  ECD2  F024         	call	_strcmp	;wreg free
  7267  007018  5160               	movf	?_strcmp& (0+255),w,b
  7268  00701A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7269  00701C  E198               	bnz	l379
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;MOTEapp.c: 385: {
  7273                           ;MOTEapp.c: 387: sendCommand("radio set afcbw 125");
  7274  00701E  0E0E               	movlw	low STR_43
  7275  007020  6F61               	movwf	sendCommand@string& (0+255),b
  7276  007022  0E7C               	movlw	high STR_43
  7277  007024  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7278  007026  EC35  F022         	call	_sendCommand	;wreg free
  7279                           
  7280                           ;MOTEapp.c: 388: oled_clear();
  7281  00702A  EC22  F01E         	call	_oled_clear	;wreg free
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;MOTEapp.c: 389: oled_putString("set afcbw",0,0);
  7285  00702E  0E25               	movlw	low STR_44
  7286  007030  6F6D               	movwf	oled_putString@string& (0+255),b
  7287  007032  0E7F               	movlw	high STR_44
  7288  007034  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7289  007036  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7290  007038  6B70               	clrf	oled_putString@start_page& (0+255),b
  7291  00703A  EC17  F023         	call	_oled_putString	;wreg free
  7292                           
  7293                           ;MOTEapp.c: 390: moteApp_delayms(50);
  7294  00703E  0100               	movlb	0	; () banked
  7295  007040  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7296  007042  0E32               	movlw	50
  7297  007044  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7298  007046  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;MOTEapp.c: 391: activeState = moteSetAfcbw;
  7302  00704A  0E05               	movlw	5
  7303  00704C  D30D               	goto	L16
  7304  00704E                     l10687:
  7305                           
  7306                           ; BSR set to: 1
  7307                           ;MOTEapp.c: 400: if ( messageReady )
  7308  00704E  0100               	movlb	0	; () banked
  7309  007050  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7310  007052  E101 D391          	bz	l10953
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;MOTEapp.c: 401: {
  7314                           ;MOTEapp.c: 402: if(strcmp(modemResonseBuffer, "ok") == 0)
  7315  007056  0E96               	movlw	low _modemResonseBuffer
  7316  007058  6F60               	movwf	strcmp@s1& (0+255),b
  7317  00705A  0E01               	movlw	high _modemResonseBuffer
  7318  00705C  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7319  00705E  0EAA               	movlw	low (STR_79+9)
  7320  007060  6F62               	movwf	strcmp@s2& (0+255),b
  7321  007062  0E7E               	movlw	high (STR_79+9)
  7322  007064  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7323  007066  ECD2  F024         	call	_strcmp	;wreg free
  7324  00706A  5160               	movf	?_strcmp& (0+255),w,b
  7325  00706C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7326  00706E  E001 D76E          	bnz	l379
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;MOTEapp.c: 403: {
  7330                           ;MOTEapp.c: 405: sendCommand("radio set fdev 5000");
  7331  007072  0EFA               	movlw	low STR_46
  7332  007074  6F61               	movwf	sendCommand@string& (0+255),b
  7333  007076  0E7B               	movlw	high STR_46
  7334  007078  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7335  00707A  EC35  F022         	call	_sendCommand	;wreg free
  7336                           
  7337                           ;MOTEapp.c: 406: oled_clear();
  7338  00707E  EC22  F01E         	call	_oled_clear	;wreg free
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;MOTEapp.c: 407: oled_putString("set fdev",0,0);
  7342  007082  0E78               	movlw	low STR_47
  7343  007084  6F6D               	movwf	oled_putString@string& (0+255),b
  7344  007086  0E7F               	movlw	high STR_47
  7345  007088  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7346  00708A  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7347  00708C  6B70               	clrf	oled_putString@start_page& (0+255),b
  7348  00708E  EC17  F023         	call	_oled_putString	;wreg free
  7349                           
  7350                           ;MOTEapp.c: 408: moteApp_delayms(50);
  7351  007092  0100               	movlb	0	; () banked
  7352  007094  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7353  007096  0E32               	movlw	50
  7354  007098  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7355  00709A  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;MOTEapp.c: 409: activeState = moteSetFdev;
  7359  00709E  0E06               	movlw	6
  7360  0070A0  D2E3               	goto	L16
  7361  0070A2                     l10701:
  7362                           
  7363                           ; BSR set to: 1
  7364                           ;MOTEapp.c: 418: if ( messageReady )
  7365  0070A2  0100               	movlb	0	; () banked
  7366  0070A4  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7367  0070A6  E101 D367          	bz	l10953
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;MOTEapp.c: 419: {
  7371                           ;MOTEapp.c: 420: if(strcmp(modemResonseBuffer, "ok") == 0)
  7372  0070AA  0E96               	movlw	low _modemResonseBuffer
  7373  0070AC  6F60               	movwf	strcmp@s1& (0+255),b
  7374  0070AE  0E01               	movlw	high _modemResonseBuffer
  7375  0070B0  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7376  0070B2  0EAA               	movlw	low (STR_79+9)
  7377  0070B4  6F62               	movwf	strcmp@s2& (0+255),b
  7378  0070B6  0E7E               	movlw	high (STR_79+9)
  7379  0070B8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7380  0070BA  ECD2  F024         	call	_strcmp	;wreg free
  7381  0070BE  5160               	movf	?_strcmp& (0+255),w,b
  7382  0070C0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7383  0070C2  E001 D744          	bnz	l379
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;MOTEapp.c: 421: {
  7387                           ;MOTEapp.c: 423: sendCommand("radio set prlen 8");
  7388  0070C6  0E6D               	movlw	low STR_49
  7389  0070C8  6F61               	movwf	sendCommand@string& (0+255),b
  7390  0070CA  0E7C               	movlw	high STR_49
  7391  0070CC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7392  0070CE  EC35  F022         	call	_sendCommand	;wreg free
  7393                           
  7394                           ;MOTEapp.c: 424: oled_clear();
  7395  0070D2  EC22  F01E         	call	_oled_clear	;wreg free
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;MOTEapp.c: 425: oled_putString("set prlen",0,0);
  7399  0070D6  0E1B               	movlw	low STR_50
  7400  0070D8  6F6D               	movwf	oled_putString@string& (0+255),b
  7401  0070DA  0E7F               	movlw	high STR_50
  7402  0070DC  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7403  0070DE  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7404  0070E0  6B70               	clrf	oled_putString@start_page& (0+255),b
  7405  0070E2  EC17  F023         	call	_oled_putString	;wreg free
  7406                           
  7407                           ;MOTEapp.c: 426: moteApp_delayms(50);
  7408  0070E6  0100               	movlb	0	; () banked
  7409  0070E8  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7410  0070EA  0E32               	movlw	50
  7411  0070EC  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7412  0070EE  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;MOTEapp.c: 427: activeState = moteSetPrlen;
  7416  0070F2  0E07               	movlw	7
  7417  0070F4  D2B9               	goto	L16
  7418  0070F6                     l10715:
  7419                           
  7420                           ; BSR set to: 1
  7421                           ;MOTEapp.c: 436: if ( messageReady )
  7422  0070F6  0100               	movlb	0	; () banked
  7423  0070F8  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7424  0070FA  E101 D33D          	bz	l10953
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;MOTEapp.c: 437: {
  7428                           ;MOTEapp.c: 438: if(strcmp(modemResonseBuffer, "ok") == 0)
  7429  0070FE  0E96               	movlw	low _modemResonseBuffer
  7430  007100  6F60               	movwf	strcmp@s1& (0+255),b
  7431  007102  0E01               	movlw	high _modemResonseBuffer
  7432  007104  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7433  007106  0EAA               	movlw	low (STR_79+9)
  7434  007108  6F62               	movwf	strcmp@s2& (0+255),b
  7435  00710A  0E7E               	movlw	high (STR_79+9)
  7436  00710C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7437  00710E  ECD2  F024         	call	_strcmp	;wreg free
  7438  007112  5160               	movf	?_strcmp& (0+255),w,b
  7439  007114  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7440  007116  E001 D71A          	bnz	l379
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;MOTEapp.c: 439: {
  7444                           ;MOTEapp.c: 441: sendCommand("radio set crc on");
  7445  00711A  0EF6               	movlw	low STR_52
  7446  00711C  6F61               	movwf	sendCommand@string& (0+255),b
  7447  00711E  0E7C               	movlw	high STR_52
  7448  007120  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7449  007122  EC35  F022         	call	_sendCommand	;wreg free
  7450                           
  7451                           ;MOTEapp.c: 442: oled_clear();
  7452  007126  EC22  F01E         	call	_oled_clear	;wreg free
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;MOTEapp.c: 443: oled_putString("set crc",0,0);
  7456  00712A  0EAD               	movlw	low STR_53
  7457  00712C  6F6D               	movwf	oled_putString@string& (0+255),b
  7458  00712E  0E7F               	movlw	high STR_53
  7459  007130  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7460  007132  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7461  007134  6B70               	clrf	oled_putString@start_page& (0+255),b
  7462  007136  EC17  F023         	call	_oled_putString	;wreg free
  7463                           
  7464                           ;MOTEapp.c: 444: moteApp_delayms(50);
  7465  00713A  0100               	movlb	0	; () banked
  7466  00713C  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7467  00713E  0E32               	movlw	50
  7468  007140  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7469  007142  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;MOTEapp.c: 445: activeState = moteSetCrc;
  7473  007146  0E08               	movlw	8
  7474  007148  D28F               	goto	L16
  7475  00714A                     l10729:
  7476                           
  7477                           ; BSR set to: 1
  7478                           ;MOTEapp.c: 454: if ( messageReady )
  7479  00714A  0100               	movlb	0	; () banked
  7480  00714C  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7481  00714E  E101 D313          	bz	l10953
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;MOTEapp.c: 455: {
  7485                           ;MOTEapp.c: 456: if(strcmp(modemResonseBuffer, "ok") == 0)
  7486  007152  0E96               	movlw	low _modemResonseBuffer
  7487  007154  6F60               	movwf	strcmp@s1& (0+255),b
  7488  007156  0E01               	movlw	high _modemResonseBuffer
  7489  007158  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7490  00715A  0EAA               	movlw	low (STR_79+9)
  7491  00715C  6F62               	movwf	strcmp@s2& (0+255),b
  7492  00715E  0E7E               	movlw	high (STR_79+9)
  7493  007160  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7494  007162  ECD2  F024         	call	_strcmp	;wreg free
  7495  007166  5160               	movf	?_strcmp& (0+255),w,b
  7496  007168  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7497  00716A  E001 D6F0          	bnz	l379
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;MOTEapp.c: 457: {
  7501                           ;MOTEapp.c: 459: sendCommand("radio set cr 4/5");
  7502  00716E  0EB2               	movlw	low STR_55
  7503  007170  6F61               	movwf	sendCommand@string& (0+255),b
  7504  007172  0E7C               	movlw	high STR_55
  7505  007174  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7506  007176  EC35  F022         	call	_sendCommand	;wreg free
  7507                           
  7508                           ;MOTEapp.c: 460: oled_clear();
  7509  00717A  EC22  F01E         	call	_oled_clear	;wreg free
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;MOTEapp.c: 461: oled_putString("set cr",0,0);
  7513  00717E  0EE4               	movlw	low STR_56
  7514  007180  6F6D               	movwf	oled_putString@string& (0+255),b
  7515  007182  0E7F               	movlw	high STR_56
  7516  007184  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7517  007186  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7518  007188  6B70               	clrf	oled_putString@start_page& (0+255),b
  7519  00718A  EC17  F023         	call	_oled_putString	;wreg free
  7520                           
  7521                           ;MOTEapp.c: 462: moteApp_delayms(50);
  7522  00718E  0100               	movlb	0	; () banked
  7523  007190  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7524  007192  0E32               	movlw	50
  7525  007194  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7526  007196  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;MOTEapp.c: 463: activeState = moteSetCr;
  7530  00719A  0E09               	movlw	9
  7531  00719C  D265               	goto	L16
  7532  00719E                     l10743:
  7533                           
  7534                           ; BSR set to: 1
  7535                           ;MOTEapp.c: 472: if ( messageReady )
  7536  00719E  0100               	movlb	0	; () banked
  7537  0071A0  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7538  0071A2  E101 D2E9          	bz	l10953
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;MOTEapp.c: 473: {
  7542                           ;MOTEapp.c: 474: if(strcmp(modemResonseBuffer, "ok") == 0)
  7543  0071A6  0E96               	movlw	low _modemResonseBuffer
  7544  0071A8  6F60               	movwf	strcmp@s1& (0+255),b
  7545  0071AA  0E01               	movlw	high _modemResonseBuffer
  7546  0071AC  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7547  0071AE  0EAA               	movlw	low (STR_79+9)
  7548  0071B0  6F62               	movwf	strcmp@s2& (0+255),b
  7549  0071B2  0E7E               	movlw	high (STR_79+9)
  7550  0071B4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7551  0071B6  ECD2  F024         	call	_strcmp	;wreg free
  7552  0071BA  5160               	movf	?_strcmp& (0+255),w,b
  7553  0071BC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7554  0071BE  E001 D6C6          	bnz	l379
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;MOTEapp.c: 475: {
  7558                           ;MOTEapp.c: 477: sendCommand("radio set wdt 0");
  7559  0071C2  0E39               	movlw	low STR_58
  7560  0071C4  6F61               	movwf	sendCommand@string& (0+255),b
  7561  0071C6  0E7D               	movlw	high STR_58
  7562  0071C8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7563  0071CA  EC35  F022         	call	_sendCommand	;wreg free
  7564                           
  7565                           ;MOTEapp.c: 478: oled_clear();
  7566  0071CE  EC22  F01E         	call	_oled_clear	;wreg free
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;MOTEapp.c: 479: oled_putString("set wdt",0,0);
  7570  0071D2  0EC5               	movlw	low STR_59
  7571  0071D4  6F6D               	movwf	oled_putString@string& (0+255),b
  7572  0071D6  0E7F               	movlw	high STR_59
  7573  0071D8  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7574  0071DA  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7575  0071DC  6B70               	clrf	oled_putString@start_page& (0+255),b
  7576  0071DE  EC17  F023         	call	_oled_putString	;wreg free
  7577                           
  7578                           ;MOTEapp.c: 480: moteApp_delayms(50);
  7579  0071E2  0100               	movlb	0	; () banked
  7580  0071E4  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7581  0071E6  0E32               	movlw	50
  7582  0071E8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7583  0071EA  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;MOTEapp.c: 481: activeState = moteSetWdt;
  7587  0071EE  0E0A               	movlw	10
  7588  0071F0  D23B               	goto	L16
  7589  0071F2                     l10757:
  7590                           
  7591                           ; BSR set to: 1
  7592                           ;MOTEapp.c: 490: if ( messageReady )
  7593  0071F2  0100               	movlb	0	; () banked
  7594  0071F4  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7595  0071F6  E101 D2BF          	bz	l10953
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;MOTEapp.c: 491: {
  7599                           ;MOTEapp.c: 492: if(strcmp(modemResonseBuffer, "ok") == 0)
  7600  0071FA  0E96               	movlw	low _modemResonseBuffer
  7601  0071FC  6F60               	movwf	strcmp@s1& (0+255),b
  7602  0071FE  0E01               	movlw	high _modemResonseBuffer
  7603  007200  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7604  007202  0EAA               	movlw	low (STR_79+9)
  7605  007204  6F62               	movwf	strcmp@s2& (0+255),b
  7606  007206  0E7E               	movlw	high (STR_79+9)
  7607  007208  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7608  00720A  ECD2  F024         	call	_strcmp	;wreg free
  7609  00720E  5160               	movf	?_strcmp& (0+255),w,b
  7610  007210  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7611  007212  E001 D69C          	bnz	l379
  7612                           
  7613                           ; BSR set to: 0
  7614                           ;MOTEapp.c: 493: {
  7615                           ;MOTEapp.c: 495: sendCommand("radio set sync 12");
  7616  007216  0E49               	movlw	low STR_61
  7617  007218  6F61               	movwf	sendCommand@string& (0+255),b
  7618  00721A  0E7C               	movlw	high STR_61
  7619  00721C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7620  00721E  EC35  F022         	call	_sendCommand	;wreg free
  7621                           
  7622                           ;MOTEapp.c: 496: oled_clear();
  7623  007222  EC22  F01E         	call	_oled_clear	;wreg free
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;MOTEapp.c: 497: oled_putString("set sync",0,0);
  7627  007226  0E5D               	movlw	low STR_62
  7628  007228  6F6D               	movwf	oled_putString@string& (0+255),b
  7629  00722A  0E7F               	movlw	high STR_62
  7630  00722C  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7631  00722E  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7632  007230  6B70               	clrf	oled_putString@start_page& (0+255),b
  7633  007232  EC17  F023         	call	_oled_putString	;wreg free
  7634                           
  7635                           ;MOTEapp.c: 498: moteApp_delayms(50);
  7636  007236  0100               	movlb	0	; () banked
  7637  007238  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7638  00723A  0E32               	movlw	50
  7639  00723C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7640  00723E  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;MOTEapp.c: 499: activeState = moteSetSync;
  7644  007242  0E0B               	movlw	11
  7645  007244  D211               	goto	L16
  7646  007246                     l10771:
  7647                           
  7648                           ; BSR set to: 1
  7649                           ;MOTEapp.c: 508: if ( messageReady )
  7650  007246  0100               	movlb	0	; () banked
  7651  007248  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7652  00724A  E101 D295          	bz	l10953
  7653                           
  7654                           ; BSR set to: 0
  7655                           ;MOTEapp.c: 509: {
  7656                           ;MOTEapp.c: 510: if(strcmp(modemResonseBuffer, "ok") == 0)
  7657  00724E  0E96               	movlw	low _modemResonseBuffer
  7658  007250  6F60               	movwf	strcmp@s1& (0+255),b
  7659  007252  0E01               	movlw	high _modemResonseBuffer
  7660  007254  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7661  007256  0EAA               	movlw	low (STR_79+9)
  7662  007258  6F62               	movwf	strcmp@s2& (0+255),b
  7663  00725A  0E7E               	movlw	high (STR_79+9)
  7664  00725C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7665  00725E  ECD2  F024         	call	_strcmp	;wreg free
  7666  007262  5160               	movf	?_strcmp& (0+255),w,b
  7667  007264  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7668  007266  E001 D672          	bnz	l379
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;MOTEapp.c: 511: {
  7672                           ;MOTEapp.c: 513: sendCommand("radio set bw 125");
  7673  00726A  0EC3               	movlw	low STR_64
  7674  00726C  6F61               	movwf	sendCommand@string& (0+255),b
  7675  00726E  0E7C               	movlw	high STR_64
  7676  007270  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7677  007272  EC35  F022         	call	_sendCommand	;wreg free
  7678                           
  7679                           ;MOTEapp.c: 514: oled_clear();
  7680  007276  EC22  F01E         	call	_oled_clear	;wreg free
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;MOTEapp.c: 515: oled_putString("set bw",0,0);
  7684  00727A  0EEB               	movlw	low STR_65
  7685  00727C  6F6D               	movwf	oled_putString@string& (0+255),b
  7686  00727E  0E7F               	movlw	high STR_65
  7687  007280  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7688  007282  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7689  007284  6B70               	clrf	oled_putString@start_page& (0+255),b
  7690  007286  EC17  F023         	call	_oled_putString	;wreg free
  7691                           
  7692                           ;MOTEapp.c: 516: moteApp_delayms(50);
  7693  00728A  0100               	movlb	0	; () banked
  7694  00728C  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7695  00728E  0E32               	movlw	50
  7696  007290  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7697  007292  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;MOTEapp.c: 517: activeState = moteSetBw;
  7701  007296  0E0C               	movlw	12
  7702  007298  D1E7               	goto	L16
  7703  00729A                     l10785:
  7704                           
  7705                           ; BSR set to: 1
  7706                           ;MOTEapp.c: 526: if ( messageReady )
  7707  00729A  0100               	movlb	0	; () banked
  7708  00729C  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7709  00729E  E101 D26B          	bz	l10953
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;MOTEapp.c: 527: {
  7713                           ;MOTEapp.c: 528: if(strcmp(modemResonseBuffer, "ok") == 0)
  7714  0072A2  0E96               	movlw	low _modemResonseBuffer
  7715  0072A4  6F60               	movwf	strcmp@s1& (0+255),b
  7716  0072A6  0E01               	movlw	high _modemResonseBuffer
  7717  0072A8  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7718  0072AA  0EAA               	movlw	low (STR_79+9)
  7719  0072AC  6F62               	movwf	strcmp@s2& (0+255),b
  7720  0072AE  0E7E               	movlw	high (STR_79+9)
  7721  0072B0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7722  0072B2  ECD2  F024         	call	_strcmp	;wreg free
  7723  0072B6  5160               	movf	?_strcmp& (0+255),w,b
  7724  0072B8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7725  0072BA  E001 D648          	bnz	l379
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;MOTEapp.c: 529: {
  7729                           ;MOTEapp.c: 530: sendCommand("mac pause");
  7730  0072BE  0E11               	movlw	low STR_67
  7731  0072C0  6F61               	movwf	sendCommand@string& (0+255),b
  7732  0072C2  0E7F               	movlw	high STR_67
  7733  0072C4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7734  0072C6  EC35  F022         	call	_sendCommand	;wreg free
  7735                           
  7736                           ;MOTEapp.c: 531: oled_clear();
  7737  0072CA  EC22  F01E         	call	_oled_clear	;wreg free
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;MOTEapp.c: 532: oled_putString("Pump default ON",0,0);
  7741  0072CE  0E59               	movlw	low STR_68
  7742  0072D0  6F6D               	movwf	oled_putString@string& (0+255),b
  7743  0072D2  0E7D               	movlw	high STR_68
  7744  0072D4  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7745  0072D6  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7746  0072D8  6B70               	clrf	oled_putString@start_page& (0+255),b
  7747  0072DA  EC17  F023         	call	_oled_putString	;wreg free
  7748                           
  7749                           ;MOTEapp.c: 533: oled_putString("Waiting for RX",0,1);
  7750  0072DE  0E89               	movlw	low STR_69
  7751  0072E0  0100               	movlb	0	; () banked
  7752  0072E2  6F6D               	movwf	oled_putString@string& (0+255),b
  7753  0072E4  0E7D               	movlw	high STR_69
  7754  0072E6  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7755  0072E8  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7756  0072EA  0E01               	movlw	1
  7757  0072EC  6F70               	movwf	oled_putString@start_page& (0+255),b
  7758  0072EE  EC17  F023         	call	_oled_putString	;wreg free
  7759  0072F2                     l10797:
  7760                           
  7761                           ;MOTEapp.c: 534: moteApp_delayms(50);
  7762  0072F2  0100               	movlb	0	; () banked
  7763  0072F4  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7764  0072F6  0E32               	movlw	50
  7765  0072F8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7766  0072FA  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7767  0072FE                     l10799:
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;MOTEapp.c: 535: activeState = moteMacPause;
  7771  0072FE  0E0D               	movlw	13
  7772  007300  D1B3               	goto	L16
  7773  007302                     l10801:
  7774                           
  7775                           ; BSR set to: 1
  7776                           ;MOTEapp.c: 544: if ( messageReady )
  7777  007302  0100               	movlb	0	; () banked
  7778  007304  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7779  007306  E101 D237          	bz	l10953
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;MOTEapp.c: 545: {
  7783                           ;MOTEapp.c: 546: if (mode == 1) {
  7784  00730A  0101               	movlb	1	; () banked
  7785  00730C  0541               	decf	moteJoiningProcess@mode& (0+255),w,b
  7786  00730E  1142               	iorwf	(moteJoiningProcess@mode+1)& (0+255),w,b
  7787  007310  E16F               	bnz	l10841
  7788                           
  7789                           ; BSR set to: 1
  7790                           ;MOTEapp.c: 549: TRISAbits.TRISA5=0;
  7791  007312  9A92               	bcf	3986,5,c	;volatile
  7792                           
  7793                           ;MOTEapp.c: 550: LATAbits.LATA5=1;
  7794  007314  8A89               	bsf	3977,5,c	;volatile
  7795                           
  7796                           ;MOTEapp.c: 551: LATBbits.LATB0 = 0;
  7797  007316  908A               	bcf	3978,0,c	;volatile
  7798                           
  7799                           ;MOTEapp.c: 552: LATBbits.LATB1 = 0;
  7800  007318  928A               	bcf	3978,1,c	;volatile
  7801                           
  7802                           ;MOTEapp.c: 553: LATBbits.LATB2 = 0;
  7803  00731A  948A               	bcf	3978,2,c	;volatile
  7804                           
  7805                           ;MOTEapp.c: 554: LATBbits.LATB3 = 0;
  7806  00731C  968A               	bcf	3978,3,c	;volatile
  7807                           
  7808                           ;MOTEapp.c: 555: LATBbits.LATB5 = 0;
  7809  00731E  9A8A               	bcf	3978,5,c	;volatile
  7810                           
  7811                           ;MOTEapp.c: 556: LATBbits.LATB4 = 0;
  7812  007320  988A               	bcf	3978,4,c	;volatile
  7813                           
  7814                           ;MOTEapp.c: 557: LATBbits.LATB6 = 0;
  7815  007322  9C8A               	bcf	3978,6,c	;volatile
  7816  007324                     l10807:
  7817                           
  7818                           ; BSR set to: 1
  7819                           ;MOTEapp.c: 561: moteApp_delayms(100);
  7820  007324  0100               	movlb	0	; () banked
  7821  007326  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7822  007328  0E64               	movlw	100
  7823  00732A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7824  00732C  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;MOTEapp.c: 564: TRISBbits.TRISB7 = 1;
  7828  007330  8E93               	bsf	3987,7,c	;volatile
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;MOTEapp.c: 565: LATBbits.LATB6 = 1;
  7832  007332  8C8A               	bsf	3978,6,c	;volatile
  7833                           
  7834                           ;MOTEapp.c: 566: moteApp_delayms(5);
  7835  007334  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7836  007336  0E05               	movlw	5
  7837  007338  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7838  00733A  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;MOTEapp.c: 567: int old_float = float_val;
  7842  00733E  C0FA  F0E8         	movff	moteJoiningProcess@float_val,moteJoiningProcess@old_float
  7843  007342  6BE9               	clrf	(moteJoiningProcess@old_float+1)& (0+255),b
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;MOTEapp.c: 568: float_val = (PORTBbits.RB7)?1:0;
  7847  007344  0E00               	movlw	0
  7848  007346  BE81               	btfsc	3969,7,c	;volatile
  7849  007348  0E01               	movlw	1
  7850  00734A  6FFA               	movwf	moteJoiningProcess@float_val& (0+255),b
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;MOTEapp.c: 569: LATBbits.LATB6 = 0;
  7854  00734C  9C8A               	bcf	3978,6,c	;volatile
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;MOTEapp.c: 571: skip_count++;
  7858  00734E  0101               	movlb	1	; () banked
  7859  007350  4B43               	infsnz	moteJoiningProcess@skip_count& (0+255),f,b
  7860  007352  2B44               	incf	(moteJoiningProcess@skip_count+1)& (0+255),f,b
  7861                           
  7862                           ; BSR set to: 1
  7863                           ;MOTEapp.c: 572: if (old_float != float_val || skip_count > 150) {
  7864  007354  0100               	movlb	0	; () banked
  7865  007356  51FA               	movf	moteJoiningProcess@float_val& (0+255),w,b
  7866  007358  19E8               	xorwf	moteJoiningProcess@old_float& (0+255),w,b
  7867  00735A  11E9               	iorwf	(moteJoiningProcess@old_float+1)& (0+255),w,b
  7868  00735C  E108               	bnz	l432
  7869                           
  7870                           ; BSR set to: 0
  7871  00735E  0101               	movlb	1	; () banked
  7872  007360  BF44               	btfsc	(moteJoiningProcess@skip_count+1)& (0+255),7,b
  7873  007362  D7E0               	goto	l10807
  7874  007364  5144               	movf	(moteJoiningProcess@skip_count+1)& (0+255),w,b
  7875  007366  E103               	bnz	u10100
  7876  007368  0E97               	movlw	151
  7877  00736A  5D43               	subwf	moteJoiningProcess@skip_count& (0+255),w,b
  7878  00736C  E3DB               	bnc	l10807
  7879  00736E                     u10100:
  7880  00736E                     l432:
  7881                           
  7882                           ;MOTEapp.c: 574: }
  7883                           ;MOTEapp.c: 575: }
  7884                           ;MOTEapp.c: 576: skip_count = 0;
  7885  00736E  0101               	movlb	1	; () banked
  7886  007370  6B43               	clrf	moteJoiningProcess@skip_count& (0+255),b
  7887  007372  6B44               	clrf	(moteJoiningProcess@skip_count+1)& (0+255),b
  7888                           
  7889                           ;MOTEapp.c: 579: LATAbits.LATA5=0;
  7890  007374  9A89               	bcf	3977,5,c	;volatile
  7891                           
  7892                           ;MOTEapp.c: 580: LATBbits.LATB2 = 1;
  7893  007376  848A               	bsf	3978,2,c	;volatile
  7894                           
  7895                           ;MOTEapp.c: 581: LATBbits.LATB4 = 1;
  7896  007378  888A               	bsf	3978,4,c	;volatile
  7897                           
  7898                           ; BSR set to: 1
  7899                           ;MOTEapp.c: 582: oled_init();
  7900  00737A  EC98  F01E         	call	_oled_init	;wreg free
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;MOTEapp.c: 585: pkt_cnt++;
  7904  00737E  2A2B               	incf	moteJoiningProcess@pkt_cnt,f,c
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;MOTEapp.c: 586: uint16_t batt = ADC_GetConversion(Temp_channel);
  7908  007380  0E02               	movlw	2
  7909  007382  EC67  F020         	call	_ADC_GetConversion
  7910  007386  C060  F0EF         	movff	?_ADC_GetConversion,moteJoiningProcess@batt
  7911  00738A  C061  F0F0         	movff	?_ADC_GetConversion+1,moteJoiningProcess@batt+1
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;MOTEapp.c: 587: sprintf(buf,"radio tx AA%02X%02X%02X%02X%02X",mode,float_val,pkt_cnt,ba
      +                          tt/256,batt%256);
  7915  00738E  0E5A               	movlw	low STR_70
  7916  007390  6F6C               	movwf	sprintf@f& (0+255),b
  7917  007392  0E7B               	movlw	high STR_70
  7918  007394  6F6D               	movwf	(sprintf@f+1)& (0+255),b
  7919  007396  C141  F06E         	movff	moteJoiningProcess@mode,?_sprintf+2
  7920  00739A  C142  F06F         	movff	moteJoiningProcess@mode+1,?_sprintf+3
  7921  00739E  C0FA  F070         	movff	moteJoiningProcess@float_val,?_sprintf+4
  7922  0073A2  6B71               	clrf	(?_sprintf+5)& (0+255),b
  7923  0073A4  C02B  F072         	movff	moteJoiningProcess@pkt_cnt,?_sprintf+6
  7924  0073A8  6B73               	clrf	(?_sprintf+7)& (0+255),b
  7925  0073AA  C0F0  F074         	movff	moteJoiningProcess@batt+1,?_sprintf+8
  7926  0073AE  6B75               	clrf	(?_sprintf+9)& (0+255),b
  7927  0073B0  51EF               	movf	moteJoiningProcess@batt& (0+255),w,b
  7928  0073B2  6F76               	movwf	(?_sprintf+10)& (0+255),b
  7929  0073B4  6B77               	clrf	(?_sprintf+11)& (0+255),b
  7930  0073B6  0EB2               	movlw	moteJoiningProcess@buf& (0+255)
  7931  0073B8  ECBD  F035         	call	_sprintf
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;MOTEapp.c: 588: sendCommand(buf);
  7935  0073BC  0EB2               	movlw	low moteJoiningProcess@buf
  7936  0073BE  6F61               	movwf	sendCommand@string& (0+255),b
  7937  0073C0  6B62               	clrf	(sendCommand@string+1)& (0+255),b
  7938  0073C2  EC35  F022         	call	_sendCommand	;wreg free
  7939  0073C6  0004               	clrwdt		;# 
  7940                           
  7941                           ;MOTEapp.c: 593: oled_clear();
  7942  0073C8  EC22  F01E         	call	_oled_clear	;wreg free
  7943                           
  7944                           ; BSR set to: 0
  7945                           ;MOTEapp.c: 594: oled_putString("radio tx: ",0,0);
  7946  0073CC  0ED1               	movlw	low STR_71
  7947  0073CE  6F6D               	movwf	oled_putString@string& (0+255),b
  7948  0073D0  0E7E               	movlw	high STR_71
  7949  0073D2  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7950  0073D4  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7951  0073D6  6B70               	clrf	oled_putString@start_page& (0+255),b
  7952  0073D8  EC17  F023         	call	_oled_putString	;wreg free
  7953                           
  7954                           ;MOTEapp.c: 595: oled_putString(&buf[9],0,1);
  7955  0073DC  0EBB               	movlw	low (moteJoiningProcess@buf+9)
  7956  0073DE  0100               	movlb	0	; () banked
  7957  0073E0  6F6D               	movwf	oled_putString@string& (0+255),b
  7958  0073E2  6B6E               	clrf	(oled_putString@string+1)& (0+255),b
  7959  0073E4  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7960  0073E6  0E01               	movlw	1
  7961  0073E8  6F70               	movwf	oled_putString@start_page& (0+255),b
  7962  0073EA  EC17  F023         	call	_oled_putString	;wreg free
  7963                           
  7964                           ;MOTEapp.c: 597: } else {
  7965  0073EE  D116               	goto	l10905
  7966  0073F0                     l10841:
  7967                           
  7968                           ; BSR set to: 1
  7969                           ;MOTEapp.c: 599: if (!pending_confirm) {
  7970  0073F0  5154               	movf	moteJoiningProcess@pending_confirm& (0+255),w,b
  7971  0073F2  E108               	bnz	l10845
  7972                           
  7973                           ; BSR set to: 1
  7974                           ;MOTEapp.c: 601: sendCommand("radio rx 0");
  7975  0073F4  0EDC               	movlw	low STR_72
  7976  0073F6  0100               	movlb	0	; () banked
  7977  0073F8  6F61               	movwf	sendCommand@string& (0+255),b
  7978  0073FA  0E7E               	movlw	high STR_72
  7979  0073FC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7980  0073FE  EC35  F022         	call	_sendCommand	;wreg free
  7981                           
  7982                           ;MOTEapp.c: 602: } else {
  7983  007402  D01A               	goto	l10853
  7984  007404                     l10845:
  7985                           
  7986                           ; BSR set to: 1
  7987                           ;MOTEapp.c: 604: pkt_cnt++;
  7988  007404  2A2B               	incf	moteJoiningProcess@pkt_cnt,f,c
  7989                           
  7990                           ; BSR set to: 1
  7991                           ;MOTEapp.c: 605: sprintf(buf,"radio tx AA%02X%02X%02X",mode,float_val,pkt_cnt);
  7992  007406  0EE2               	movlw	low STR_73
  7993  007408  0100               	movlb	0	; () banked
  7994  00740A  6F6C               	movwf	sprintf@f& (0+255),b
  7995  00740C  0E7B               	movlw	high STR_73
  7996  00740E  6F6D               	movwf	(sprintf@f+1)& (0+255),b
  7997  007410  C141  F06E         	movff	moteJoiningProcess@mode,?_sprintf+2
  7998  007414  C142  F06F         	movff	moteJoiningProcess@mode+1,?_sprintf+3
  7999  007418  C0FA  F070         	movff	moteJoiningProcess@float_val,?_sprintf+4
  8000  00741C  6B71               	clrf	(?_sprintf+5)& (0+255),b
  8001  00741E  C02B  F072         	movff	moteJoiningProcess@pkt_cnt,?_sprintf+6
  8002  007422  6B73               	clrf	(?_sprintf+7)& (0+255),b
  8003  007424  0EB2               	movlw	moteJoiningProcess@buf& (0+255)
  8004  007426  ECBD  F035         	call	_sprintf
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;MOTEapp.c: 606: sendCommand(buf);
  8008  00742A  0EB2               	movlw	low moteJoiningProcess@buf
  8009  00742C  6F61               	movwf	sendCommand@string& (0+255),b
  8010  00742E  6B62               	clrf	(sendCommand@string+1)& (0+255),b
  8011  007430  EC35  F022         	call	_sendCommand	;wreg free
  8012                           
  8013                           ;MOTEapp.c: 607: pending_confirm = 0;
  8014  007434  0101               	movlb	1	; () banked
  8015  007436  6B54               	clrf	moteJoiningProcess@pending_confirm& (0+255),b
  8016  007438                     l10853:
  8017                           
  8018                           ;MOTEapp.c: 608: }
  8019                           ;MOTEapp.c: 611: if (modemResonseBuffer[0]=='r' &&
  8020                           ;MOTEapp.c: 612: modemResonseBuffer[6]=='r' &&
  8021                           ;MOTEapp.c: 613: modemResonseBuffer[7]=='x' &&
  8022                           ;MOTEapp.c: 614: modemResonseBuffer[10]=='A' &&
  8023                           ;MOTEapp.c: 615: modemResonseBuffer[11]=='A')
  8024  007438  0E72               	movlw	114
  8025  00743A  0101               	movlb	1	; () banked
  8026  00743C  1996               	xorwf	_modemResonseBuffer& (0+255),w,b
  8027  00743E  E001 D0ED          	bnz	l10905
  8028                           
  8029                           ; BSR set to: 1
  8030  007442  0E72               	movlw	114
  8031  007444  199C               	xorwf	(_modemResonseBuffer+6)& (0+255),w,b
  8032  007446  E001 D0E9          	bnz	l10905
  8033                           
  8034                           ; BSR set to: 1
  8035  00744A  0E78               	movlw	120
  8036  00744C  199D               	xorwf	(_modemResonseBuffer+7)& (0+255),w,b
  8037  00744E  E001 D0E5          	bnz	l10905
  8038                           
  8039                           ; BSR set to: 1
  8040  007452  0E41               	movlw	65
  8041  007454  19A0               	xorwf	(_modemResonseBuffer+10)& (0+255),w,b
  8042  007456  E001 D0E1          	bnz	l10905
  8043                           
  8044                           ; BSR set to: 1
  8045  00745A  0E41               	movlw	65
  8046  00745C  19A1               	xorwf	(_modemResonseBuffer+11)& (0+255),w,b
  8047  00745E  E001 D0DD          	bnz	l10905
  8048                           
  8049                           ; BSR set to: 1
  8050                           ;MOTEapp.c: 616: {
  8051                           ;MOTEapp.c: 618: if (modemResonseBuffer[13]=='1')
  8052  007462  0E31               	movlw	49
  8053  007464  19A3               	xorwf	(_modemResonseBuffer+13)& (0+255),w,b
  8054  007466  E001 D0CF          	bnz	l10901
  8055                           
  8056                           ; BSR set to: 1
  8057  00746A  0004               	clrwdt		;# 
  8058                           
  8059                           ;MOTEapp.c: 628: if (modemResonseBuffer[15]=='1') {
  8060  00746C  0E31               	movlw	49
  8061  00746E  19A5               	xorwf	(_modemResonseBuffer+15)& (0+255),w,b
  8062  007470  E111               	bnz	l439
  8063                           
  8064                           ; BSR set to: 1
  8065                           ;MOTEapp.c: 630: TRISBbits.TRISB7 = 0;
  8066  007472  9E93               	bcf	3987,7,c	;volatile
  8067                           
  8068                           ;MOTEapp.c: 631: LATBbits.LATB7 = 1;
  8069  007474  8E8A               	bsf	3978,7,c	;volatile
  8070                           
  8071                           ;MOTEapp.c: 632: TRISBbits.TRISB6 = 1;
  8072  007476  8C93               	bsf	3987,6,c	;volatile
  8073                           
  8074                           ; BSR set to: 1
  8075                           ;MOTEapp.c: 633: float_val = 1;
  8076  007478  0E01               	movlw	1
  8077  00747A  0100               	movlb	0	; () banked
  8078  00747C  6FFA               	movwf	moteJoiningProcess@float_val& (0+255),b
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;MOTEapp.c: 634: oled_clear();
  8082  00747E  EC22  F01E         	call	_oled_clear	;wreg free
  8083                           
  8084                           ; BSR set to: 0
  8085                           ;MOTEapp.c: 635: oled_putString("RX Pump OFF",0,0);
  8086  007482  0E95               	movlw	low STR_74
  8087  007484  6F6D               	movwf	oled_putString@string& (0+255),b
  8088  007486  0E7E               	movlw	high STR_74
  8089  007488  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  8090  00748A  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8091  00748C  6B70               	clrf	oled_putString@start_page& (0+255),b
  8092  00748E  EC17  F023         	call	_oled_putString	;wreg free
  8093                           
  8094                           ;MOTEapp.c: 636: } else {
  8095  007492  D00F               	goto	l10881
  8096  007494                     l439:
  8097                           
  8098                           ; BSR set to: 1
  8099                           ;MOTEapp.c: 638: TRISBbits.TRISB7 = 0;
  8100  007494  9E93               	bcf	3987,7,c	;volatile
  8101                           
  8102                           ;MOTEapp.c: 639: LATBbits.LATB7 = 0;
  8103  007496  9E8A               	bcf	3978,7,c	;volatile
  8104                           
  8105                           ;MOTEapp.c: 640: TRISBbits.TRISB6 = 1;
  8106  007498  8C93               	bsf	3987,6,c	;volatile
  8107                           
  8108                           ;MOTEapp.c: 641: float_val = 0;
  8109  00749A  0100               	movlb	0	; () banked
  8110  00749C  6BFA               	clrf	moteJoiningProcess@float_val& (0+255),b
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;MOTEapp.c: 642: oled_clear();
  8114  00749E  EC22  F01E         	call	_oled_clear	;wreg free
  8115                           
  8116                           ; BSR set to: 0
  8117                           ;MOTEapp.c: 643: oled_putString("RX Pump ON",0,0);
  8118  0074A2  0EE7               	movlw	low STR_75
  8119  0074A4  6F6D               	movwf	oled_putString@string& (0+255),b
  8120  0074A6  0E7E               	movlw	high STR_75
  8121  0074A8  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  8122  0074AA  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8123  0074AC  6B70               	clrf	oled_putString@start_page& (0+255),b
  8124  0074AE  EC17  F023         	call	_oled_putString	;wreg free
  8125  0074B2                     l10881:
  8126                           
  8127                           ;MOTEapp.c: 644: }
  8128                           ;MOTEapp.c: 645: oled_putString(&modemResonseBuffer[18],0,1);
  8129  0074B2  0EA8               	movlw	low (_modemResonseBuffer+18)
  8130  0074B4  0100               	movlb	0	; () banked
  8131  0074B6  6F6D               	movwf	oled_putString@string& (0+255),b
  8132  0074B8  0E01               	movlw	high (_modemResonseBuffer+18)
  8133  0074BA  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  8134  0074BC  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8135  0074BE  0E01               	movlw	1
  8136  0074C0  6F70               	movwf	oled_putString@start_page& (0+255),b
  8137  0074C2  EC17  F023         	call	_oled_putString	;wreg free
  8138                           
  8139                           ;MOTEapp.c: 648: uint16_t ana = 4096*nibble2int(modemResonseBuffer[18])
  8140                           ;MOTEapp.c: 649: + 256*nibble2int(modemResonseBuffer[19])
  8141                           ;MOTEapp.c: 650: + 16*nibble2int(modemResonseBuffer[20])
  8142                           ;MOTEapp.c: 651: + nibble2int(modemResonseBuffer[21]);
  8143  0074C6  0101               	movlb	1	; () banked
  8144  0074C8  51AB               	movf	(_modemResonseBuffer+21)& (0+255),w,b
  8145  0074CA  ECA1  F020         	call	_nibble2int
  8146  0074CE  6FAB               	movwf	??_moteJoiningProcess& (0+255),b
  8147  0074D0  0101               	movlb	1	; () banked
  8148  0074D2  51A9               	movf	(_modemResonseBuffer+19)& (0+255),w,b
  8149  0074D4  ECA1  F020         	call	_nibble2int
  8150  0074D8  6FAD               	movwf	(??_moteJoiningProcess+2)& (0+255),b
  8151  0074DA  6BAC               	clrf	(??_moteJoiningProcess+1)& (0+255),b
  8152  0074DC  0101               	movlb	1	; () banked
  8153  0074DE  51A8               	movf	(_modemResonseBuffer+18)& (0+255),w,b
  8154  0074E0  ECA1  F020         	call	_nibble2int
  8155  0074E4  6FAE               	movwf	(??_moteJoiningProcess+3)& (0+255),b
  8156  0074E6  6BAF               	clrf	(??_moteJoiningProcess+4)& (0+255),b
  8157  0074E8  0E00               	movlw	0
  8158  0074EA  03AE               	mulwf	(??_moteJoiningProcess+3)& (0+255),b
  8159  0074EC  CFF3 F0B0          	movff	prodl,??_moteJoiningProcess+5
  8160  0074F0  CFF4 F0B1          	movff	prodh,??_moteJoiningProcess+6
  8161  0074F4  03AF               	mulwf	(??_moteJoiningProcess+4)& (0+255),b
  8162  0074F6  50F3               	movf	prodl,w,c
  8163  0074F8  27B1               	addwf	(??_moteJoiningProcess+6)& (0+255),f,b
  8164  0074FA  0E10               	movlw	16
  8165  0074FC  03AE               	mulwf	(??_moteJoiningProcess+3)& (0+255),b
  8166  0074FE  50F3               	movf	prodl,w,c
  8167  007500  27B1               	addwf	(??_moteJoiningProcess+6)& (0+255),f,b
  8168  007502  0101               	movlb	1	; () banked
  8169  007504  51AA               	movf	(_modemResonseBuffer+20)& (0+255),w,b
  8170  007506  ECA1  F020         	call	_nibble2int
  8171  00750A  0D10               	mullw	16
  8172  00750C  50F3               	movf	prodl,w,c
  8173  00750E  27B0               	addwf	(??_moteJoiningProcess+5)& (0+255),f,b
  8174  007510  50F4               	movf	prodh,w,c
  8175  007512  23B1               	addwfc	(??_moteJoiningProcess+6)& (0+255),f,b
  8176  007514  51AC               	movf	(??_moteJoiningProcess+1)& (0+255),w,b
  8177  007516  27B0               	addwf	(??_moteJoiningProcess+5)& (0+255),f,b
  8178  007518  51AD               	movf	(??_moteJoiningProcess+2)& (0+255),w,b
  8179  00751A  23B1               	addwfc	(??_moteJoiningProcess+6)& (0+255),f,b
  8180  00751C  51AB               	movf	??_moteJoiningProcess& (0+255),w,b
  8181  00751E  25B0               	addwf	(??_moteJoiningProcess+5)& (0+255),w,b
  8182  007520  6FEA               	movwf	moteJoiningProcess@ana& (0+255),b
  8183  007522  0E00               	movlw	0
  8184  007524  21B1               	addwfc	(??_moteJoiningProcess+6)& (0+255),w,b
  8185  007526  6FEB               	movwf	(moteJoiningProcess@ana+1)& (0+255),b
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;MOTEapp.c: 652: uint16_t cV = ((float)ana)*100.0/828.0*13.22;
  8189  007528  6B8B               	clrf	___fldiv@a& (0+255),b
  8190  00752A  6B8C               	clrf	(___fldiv@a+1)& (0+255),b
  8191  00752C  0E4F               	movlw	79
  8192  00752E  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
  8193  007530  0E44               	movlw	68
  8194  007532  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
  8195  007534  6B72               	clrf	___flmul@a& (0+255),b
  8196  007536  6B73               	clrf	(___flmul@a+1)& (0+255),b
  8197  007538  0EC8               	movlw	200
  8198  00753A  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8199  00753C  0E42               	movlw	66
  8200  00753E  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8201  007540  C0EA  F060         	movff	moteJoiningProcess@ana,___xxtofl@val
  8202  007544  C0EB  F061         	movff	moteJoiningProcess@ana+1,___xxtofl@val+1
  8203  007548  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  8204  00754A  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  8205  00754C  0E00               	movlw	0
  8206  00754E  ECEF  F02E         	call	___xxtofl
  8207  007552  C060  F06E         	movff	?___xxtofl,___flmul@b
  8208  007556  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  8209  00755A  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  8210  00755E  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  8211  007562  EC6B  F034         	call	___flmul	;wreg free
  8212  007566  C06E  F087         	movff	?___flmul,___fldiv@b
  8213  00756A  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
  8214  00756E  C070  F089         	movff	?___flmul+2,___fldiv@b+2
  8215  007572  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
  8216  007576  EC62  F032         	call	___fldiv	;wreg free
  8217  00757A  C087  F0E4         	movff	?___fldiv,_moteJoiningProcess$6539
  8218  00757E  C088  F0E5         	movff	?___fldiv+1,_moteJoiningProcess$6539+1
  8219  007582  C089  F0E6         	movff	?___fldiv+2,_moteJoiningProcess$6539+2
  8220  007586  C08A  F0E7         	movff	?___fldiv+3,_moteJoiningProcess$6539+3
  8221                           
  8222                           ; BSR set to: 0
  8223                           ;MOTEapp.c: 652: uint16_t cV = ((float)ana)*100.0/828.0*13.22;
  8224  00758A  0E1F               	movlw	31
  8225  00758C  6F72               	movwf	___flmul@a& (0+255),b
  8226  00758E  0E85               	movlw	133
  8227  007590  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8228  007592  0E53               	movlw	83
  8229  007594  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8230  007596  0E41               	movlw	65
  8231  007598  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8232  00759A  C0E4  F06E         	movff	_moteJoiningProcess$6539,___flmul@b
  8233  00759E  C0E5  F06F         	movff	_moteJoiningProcess$6539+1,___flmul@b+1
  8234  0075A2  C0E6  F070         	movff	_moteJoiningProcess$6539+2,___flmul@b+2
  8235  0075A6  C0E7  F071         	movff	_moteJoiningProcess$6539+3,___flmul@b+3
  8236  0075AA  EC6B  F034         	call	___flmul	;wreg free
  8237  0075AE  C06E  F0A0         	movff	?___flmul,___fltol@f1
  8238  0075B2  C06F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  8239  0075B6  C070  F0A2         	movff	?___flmul+2,___fltol@f1+2
  8240  0075BA  C071  F0A3         	movff	?___flmul+3,___fltol@f1+3
  8241  0075BE  EC2F  F026         	call	___fltol	;wreg free
  8242  0075C2  C0A0  F0EC         	movff	?___fltol,moteJoiningProcess@cV
  8243  0075C6  C0A1  F0ED         	movff	?___fltol+1,moteJoiningProcess@cV+1
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;MOTEapp.c: 653: sprintf(buf," %dcV",cV);
  8247  0075CA  0EF2               	movlw	low STR_76
  8248  0075CC  6F6C               	movwf	sprintf@f& (0+255),b
  8249  0075CE  0E7F               	movlw	high STR_76
  8250  0075D0  6F6D               	movwf	(sprintf@f+1)& (0+255),b
  8251  0075D2  C0EC  F06E         	movff	moteJoiningProcess@cV,?_sprintf+2
  8252  0075D6  C0ED  F06F         	movff	moteJoiningProcess@cV+1,?_sprintf+3
  8253  0075DA  0EB2               	movlw	moteJoiningProcess@buf& (0+255)
  8254  0075DC  ECBD  F035         	call	_sprintf
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;MOTEapp.c: 654: oled_putString(buf,5,1);
  8258  0075E0  0EB2               	movlw	low moteJoiningProcess@buf
  8259  0075E2  6F6D               	movwf	oled_putString@string& (0+255),b
  8260  0075E4  6B6E               	clrf	(oled_putString@string+1)& (0+255),b
  8261  0075E6  0E05               	movlw	5
  8262  0075E8  6F6F               	movwf	oled_putString@station_dot& (0+255),b
  8263  0075EA  0E01               	movlw	1
  8264  0075EC  6F70               	movwf	oled_putString@start_page& (0+255),b
  8265  0075EE  EC17  F023         	call	_oled_putString	;wreg free
  8266                           
  8267                           ;MOTEapp.c: 657: LATAbits.LATA6 = 1;
  8268  0075F2  8C89               	bsf	3977,6,c	;volatile
  8269                           
  8270                           ;MOTEapp.c: 658: moteApp_delayms(100);
  8271  0075F4  0100               	movlb	0	; () banked
  8272  0075F6  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8273  0075F8  0E64               	movlw	100
  8274  0075FA  6F60               	movwf	moteApp_delayms@length& (0+255),b
  8275  0075FC  EC06  F01F         	call	_moteApp_delayms	;wreg free
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;MOTEapp.c: 659: LATAbits.LATA6 = 0;
  8279  007600  9C89               	bcf	3977,6,c	;volatile
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;MOTEapp.c: 662: pending_confirm = 0;
  8283  007602  0101               	movlb	1	; () banked
  8284  007604  6B54               	clrf	moteJoiningProcess@pending_confirm& (0+255),b
  8285                           
  8286                           ;MOTEapp.c: 663: } else {
  8287  007606  D00A               	goto	l10905
  8288  007608                     l10901:
  8289                           
  8290                           ; BSR set to: 1
  8291                           ;MOTEapp.c: 665: oled_clear();
  8292  007608  EC22  F01E         	call	_oled_clear	;wreg free
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;MOTEapp.c: 666: oled_putString("Got RX Message:",0,0);
  8296  00760C  0E49               	movlw	low STR_77
  8297  00760E  6F6D               	movwf	oled_putString@string& (0+255),b
  8298  007610  0E7D               	movlw	high STR_77
  8299  007612  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  8300  007614  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8301  007616  6B70               	clrf	oled_putString@start_page& (0+255),b
  8302  007618  EC17  F023         	call	_oled_putString	;wreg free
  8303  00761C                     l10905:
  8304                           
  8305                           ;MOTEapp.c: 670: }
  8306                           ;MOTEapp.c: 671: }
  8307                           ;MOTEapp.c: 672: }
  8308                           ;MOTEapp.c: 673: moteApp_delayms(250);
  8309  00761C  0100               	movlb	0	; () banked
  8310  00761E  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8311  007620  0EFA               	movlw	250
  8312  007622  6F60               	movwf	moteApp_delayms@length& (0+255),b
  8313  007624  EC06  F01F         	call	_moteApp_delayms	;wreg free
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;MOTEapp.c: 674: activeState = moteTxJoin;
  8317  007628  0E0E               	movlw	14
  8318  00762A  D01E               	goto	L16
  8319  00762C                     l10909:
  8320                           
  8321                           ; BSR set to: 1
  8322                           ;MOTEapp.c: 678: if ( messageReady )
  8323  00762C  0100               	movlb	0	; () banked
  8324  00762E  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  8325  007630  E101 D0A2          	bz	l10953
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;MOTEapp.c: 679: {
  8329                           ;MOTEapp.c: 680: if (mode == 1) {
  8330  007634  0101               	movlb	1	; () banked
  8331  007636  0541               	decf	moteJoiningProcess@mode& (0+255),w,b
  8332  007638  1142               	iorwf	(moteJoiningProcess@mode+1)& (0+255),w,b
  8333  00763A  E001 D65A          	bnz	l10797
  8334                           
  8335                           ; BSR set to: 1
  8336                           ;MOTEapp.c: 681: if(strcmp(modemResonseBuffer, "ok") == 0)
  8337  00763E  0E96               	movlw	low _modemResonseBuffer
  8338  007640  0100               	movlb	0	; () banked
  8339  007642  6F60               	movwf	strcmp@s1& (0+255),b
  8340  007644  0E01               	movlw	high _modemResonseBuffer
  8341  007646  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  8342  007648  0EAA               	movlw	low (STR_79+9)
  8343  00764A  6F62               	movwf	strcmp@s2& (0+255),b
  8344  00764C  0E7E               	movlw	high (STR_79+9)
  8345  00764E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  8346  007650  ECD2  F024         	call	_strcmp	;wreg free
  8347  007654  5160               	movf	?_strcmp& (0+255),w,b
  8348  007656  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  8349  007658  E001 D479          	bnz	l379
  8350                           
  8351                           ; BSR set to: 0
  8352                           ;MOTEapp.c: 682: {
  8353                           ;MOTEapp.c: 686: moteApp_delayms(50);
  8354  00765C  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8355  00765E  0E32               	movlw	50
  8356  007660  6F60               	movwf	moteApp_delayms@length& (0+255),b
  8357  007662  EC06  F01F         	call	_moteApp_delayms	;wreg free
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;MOTEapp.c: 687: activeState = moteTxWait;
  8361  007666  0E0F               	movlw	15
  8362  007668                     L16:
  8363  007668  0101               	movlb	1	; () banked
  8364  00766A  6F4C               	movwf	_activeState& (0+255),b
  8365                           
  8366                           ;MOTEapp.c: 688: }
  8367  00766C  D085               	goto	l10953
  8368  00766E                     l10923:
  8369                           
  8370                           ; BSR set to: 1
  8371                           ;MOTEapp.c: 700: if ( messageReady )
  8372  00766E  0100               	movlb	0	; () banked
  8373  007670  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  8374  007672  E101 D081          	bz	l10953
  8375                           
  8376                           ; BSR set to: 0
  8377                           ;MOTEapp.c: 701: {
  8378                           ;MOTEapp.c: 702: if(strcmp(modemResonseBuffer, "radio_tx_ok") == 0)
  8379  007676  0E96               	movlw	low _modemResonseBuffer
  8380  007678  6F60               	movwf	strcmp@s1& (0+255),b
  8381  00767A  0E01               	movlw	high _modemResonseBuffer
  8382  00767C  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  8383  00767E  0EA1               	movlw	low STR_79
  8384  007680  6F62               	movwf	strcmp@s2& (0+255),b
  8385  007682  0E7E               	movlw	high STR_79
  8386  007684  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  8387  007686  ECD2  F024         	call	_strcmp	;wreg free
  8388  00768A  5160               	movf	?_strcmp& (0+255),w,b
  8389  00768C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  8390  00768E  E001 D45E          	bnz	l379
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;MOTEapp.c: 703: {
  8394                           ;MOTEapp.c: 704: sendCommand("mac pause");
  8395  007692  0E11               	movlw	low STR_67
  8396  007694  6F61               	movwf	sendCommand@string& (0+255),b
  8397  007696  0E7F               	movlw	high STR_67
  8398  007698  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  8399  00769A  EC35  F022         	call	_sendCommand	;wreg free
  8400                           
  8401                           ;MOTEapp.c: 705: oled_clear();
  8402  00769E  EC22  F01E         	call	_oled_clear	;wreg free
  8403                           
  8404                           ; BSR set to: 0
  8405                           ;MOTEapp.c: 706: oled_putString("",0,0);
  8406  0076A2  0E93               	movlw	low (STR_103+25)
  8407  0076A4  6F6D               	movwf	oled_putString@string& (0+255),b
  8408  0076A6  0E7B               	movlw	high (STR_103+25)
  8409  0076A8  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  8410  0076AA  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8411  0076AC  6B70               	clrf	oled_putString@start_page& (0+255),b
  8412  0076AE  EC17  F023         	call	_oled_putString	;wreg free
  8413                           
  8414                           ;MOTEapp.c: 707: oled_putString("Success!",0,1);
  8415  0076B2  0E42               	movlw	low STR_82
  8416  0076B4  0100               	movlb	0	; () banked
  8417  0076B6  6F6D               	movwf	oled_putString@string& (0+255),b
  8418  0076B8  0E7F               	movlw	high STR_82
  8419  0076BA  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  8420  0076BC  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8421  0076BE  0E01               	movlw	1
  8422  0076C0  6F70               	movwf	oled_putString@start_page& (0+255),b
  8423  0076C2  EC17  F023         	call	_oled_putString	;wreg free
  8424                           
  8425                           ;MOTEapp.c: 708: moteApp_delayms(200);
  8426  0076C6  0100               	movlb	0	; () banked
  8427  0076C8  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8428  0076CA  0EC8               	movlw	200
  8429  0076CC  6F60               	movwf	moteApp_delayms@length& (0+255),b
  8430  0076CE  EC06  F01F         	call	_moteApp_delayms	;wreg free
  8431  0076D2  D615               	goto	l10799
  8432  0076D4                     l10939:
  8433                           
  8434                           ; BSR set to: 1
  8435                           ;MOTEapp.c: 719: joiningComplete = 1;
  8436  0076D4  0E01               	movlw	1
  8437  0076D6  0100               	movlb	0	; () banked
  8438  0076D8  6FEE               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;MOTEapp.c: 720: moteApp_delayms(50);
  8442  0076DA  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8443  0076DC  0E32               	movlw	50
  8444  0076DE  6F60               	movwf	moteApp_delayms@length& (0+255),b
  8445  0076E0  EC06  F01F         	call	_moteApp_delayms	;wreg free
  8446                           
  8447                           ;MOTEapp.c: 721: break;
  8448  0076E4  D049               	goto	l10953
  8449  0076E6                     l10943:
  8450                           
  8451                           ; BSR set to: 1
  8452                           ;MOTEapp.c: 723: DATAEE_WriteByte(0x00, 0x00);
  8453  0076E6  0E00               	movlw	0
  8454  0076E8  0100               	movlb	0	; () banked
  8455  0076EA  6B60               	clrf	DATAEE_WriteByte@bData& (0+255),b
  8456  0076EC  EC84  F020         	call	_DATAEE_WriteByte
  8457  0076F0                     l454:
  8458  0076F0  B082               	btfsc	3970,0,c	;volatile
  8459  0076F2  D002               	goto	l10947
  8460  0076F4  A282               	btfss	3970,1,c	;volatile
  8461  0076F6  D7FC               	goto	l454
  8462  0076F8                     l10947:
  8463                           
  8464                           ;MOTEapp.c: 725: moteApp_delayms(40);
  8465  0076F8  0100               	movlb	0	; () banked
  8466  0076FA  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8467  0076FC  0E28               	movlw	40
  8468  0076FE  6F60               	movwf	moteApp_delayms@length& (0+255),b
  8469  007700  EC06  F01F         	call	_moteApp_delayms	;wreg free
  8470  007704  00FF               	reset		;# 
  8471                           
  8472                           ;MOTEapp.c: 728: break;
  8473  007706  D038               	goto	l10953
  8474  007708                     l10951:
  8475  007708  0101               	movlb	1	; () banked
  8476  00770A  514C               	movf	_activeState& (0+255),w,b
  8477                           
  8478                           ; Switch size 1, requested type "speed"
  8479                           ; Number of cases is 18, Range of values is 0 to 17
  8480                           ; switch strategies available:
  8481                           ; Name         Instructions Cycles
  8482                           ; simple_byte           55    28 (average)
  8483                           ;	Chosen strategy is simple_byte
  8484  00770C  E102 EF3D  F037    	bz	l10609
  8485  007712  0A01               	xorlw	1	; case 1
  8486  007714  E102 EF7A  F037    	bz	l10631
  8487  00771A  0A03               	xorlw	3	; case 2
  8488  00771C  E101 D41B          	bz	l10645
  8489  007720  0A01               	xorlw	1	; case 3
  8490  007722  E101 D442          	bz	l10659
  8491  007726  0A07               	xorlw	7	; case 4
  8492  007728  E101 D468          	bz	l10673
  8493  00772C  0A01               	xorlw	1	; case 5
  8494  00772E  E101 D48E          	bz	l10687
  8495  007732  0A03               	xorlw	3	; case 6
  8496  007734  E101 D4B5          	bz	l10701
  8497  007738  0A01               	xorlw	1	; case 7
  8498  00773A  E101 D4DC          	bz	l10715
  8499  00773E  0A0F               	xorlw	15	; case 8
  8500  007740  E101 D503          	bz	l10729
  8501  007744  0A01               	xorlw	1	; case 9
  8502  007746  E101 D52A          	bz	l10743
  8503  00774A  0A03               	xorlw	3	; case 10
  8504  00774C  E101 D551          	bz	l10757
  8505  007750  0A01               	xorlw	1	; case 11
  8506  007752  E101 D578          	bz	l10771
  8507  007756  0A07               	xorlw	7	; case 12
  8508  007758  E101 D59F          	bz	l10785
  8509  00775C  0A01               	xorlw	1	; case 13
  8510  00775E  E101 D5D0          	bz	l10801
  8511  007762  0A03               	xorlw	3	; case 14
  8512  007764  E101 D762          	bz	l10909
  8513  007768  0A01               	xorlw	1	; case 15
  8514  00776A  E081               	bz	l10923
  8515  00776C  0A1F               	xorlw	31	; case 16
  8516  00776E  E0B2               	bz	l10939
  8517  007770  0A01               	xorlw	1	; case 17
  8518  007772  E0B9               	bz	l10943
  8519  007774  EF3C  F037         	goto	l370
  8520  007778                     l10953:
  8521                           
  8522                           ;MOTEapp.c: 730: return joiningComplete;
  8523  007778  0100               	movlb	0	; () banked
  8524  00777A  51EE               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
  8525                           
  8526                           ; BSR set to: 0
  8527  00777C  0012               	return		;funcret
  8528  00777E                     __end_of_moteJoiningProcess:
  8529                           	opt stack 0
  8530                           tblptru	equ	0xFF8
  8531                           tblptrh	equ	0xFF7
  8532                           tblptrl	equ	0xFF6
  8533                           tablat	equ	0xFF5
  8534                           prodh	equ	0xFF4
  8535                           prodl	equ	0xFF3
  8536                           intcon	equ	0xFF2
  8537                           postinc0	equ	0xFEE
  8538                           wreg	equ	0xFE8
  8539                           indf2	equ	0xFDF
  8540                           fsr2h	equ	0xFDA
  8541                           fsr2l	equ	0xFD9
  8542                           status	equ	0xFD8
  8543                           
  8544 ;; *************** function _strncmp *****************
  8545 ;; Defined at:
  8546 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/strncmp.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  8549 ;;		 -> modemResonseBuffer(64), 
  8550 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  8551 ;;		 -> STR_33(3), 
  8552 ;;  len             2    4[BANK0 ] unsigned int 
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;		None
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  2    0[BANK0 ] int 
  8557 ;; Registers used:
  8558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8559 ;; Tracked objects:
  8560 ;;		On entry : F/0
  8561 ;;		On exit  : F/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8564 ;;      Params:         0       6       0       0       0       0       0       0       0
  8565 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8566 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8567 ;;      Totals:         0       7       0       0       0       0       0       0       0
  8568 ;;Total ram usage:        7 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; Hardware stack levels required when called:   11
  8571 ;; This function calls:
  8572 ;;		Nothing
  8573 ;; This function is called by:
  8574 ;;		_moteJoiningProcess
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           	psect	text22
  8579  004694                     __ptext22:
  8580                           	opt stack 0
  8581  004694                     _strncmp:
  8582                           	opt stack 17
  8583                           
  8584                           ; BSR set to: 0
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;incstack = 0
  8588  004694  D029               	goto	l9729
  8589  004696                     l9719:
  8590                           
  8591                           ; BSR set to: 0
  8592  004696  C060  FFD9         	movff	strncmp@s1,fsr2l
  8593  00469A  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  8594  00469E  50DF               	movf	indf2,w,c
  8595  0046A0  E00D               	bz	l9723
  8596                           
  8597                           ; BSR set to: 0
  8598  0046A2  C060  FFD9         	movff	strncmp@s1,fsr2l
  8599  0046A6  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  8600  0046AA  50DF               	movf	indf2,w,c
  8601  0046AC  6F66               	movwf	??_strncmp& (0+255),b
  8602  0046AE  C062  FFF6         	movff	strncmp@s2,tblptrl
  8603  0046B2  C063  FFF7         	movff	strncmp@s2+1,tblptrh
  8604  0046B6                     	if	0	;tblptru may be non-zero
  8605  0046B6                     	endif
  8606  0046B6                     	if	0	;tblptru may be non-zero
  8607  0046B6                     	endif
  8608  0046B6  0008               	tblrd		*
  8609  0046B8  18F5               	xorwf	tablat,w,c
  8610  0046BA  E012               	bz	l9727
  8611  0046BC                     l9723:
  8612                           
  8613                           ; BSR set to: 0
  8614  0046BC  C060  FFD9         	movff	strncmp@s1,fsr2l
  8615  0046C0  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  8616  0046C4  50DF               	movf	indf2,w,c
  8617  0046C6  6F66               	movwf	??_strncmp& (0+255),b
  8618  0046C8  C062  FFF6         	movff	strncmp@s2,tblptrl
  8619  0046CC  C063  FFF7         	movff	strncmp@s2+1,tblptrh
  8620  0046D0                     	if	0	;tblptru may be non-zero
  8621  0046D0                     	endif
  8622  0046D0                     	if	0	;tblptru may be non-zero
  8623  0046D0                     	endif
  8624  0046D0  0008               	tblrd		*
  8625  0046D2  50F5               	movf	tablat,w,c
  8626  0046D4  5D66               	subwf	??_strncmp& (0+255),w,b
  8627  0046D6  6F60               	movwf	?_strncmp& (0+255),b
  8628  0046D8  6B61               	clrf	(?_strncmp+1)& (0+255),b
  8629  0046DA  A0D8               	btfss	status,0,c
  8630  0046DC  0761               	decf	(?_strncmp+1)& (0+255),f,b
  8631  0046DE  0012               	return	
  8632  0046E0                     l9727:
  8633                           
  8634                           ; BSR set to: 0
  8635  0046E0  4B60               	infsnz	strncmp@s1& (0+255),f,b
  8636  0046E2  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
  8637  0046E4  4B62               	infsnz	strncmp@s2& (0+255),f,b
  8638  0046E6  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
  8639  0046E8                     l9729:
  8640                           
  8641                           ; BSR set to: 0
  8642  0046E8  0764               	decf	strncmp@len& (0+255),f,b
  8643  0046EA  A0D8               	btfss	status,0,c
  8644  0046EC  0765               	decf	(strncmp@len+1)& (0+255),f,b
  8645  0046EE  2964               	incf	strncmp@len& (0+255),w,b
  8646  0046F0  E1D2               	bnz	l9719
  8647  0046F2  2965               	incf	(strncmp@len+1)& (0+255),w,b
  8648  0046F4  E1D0               	bnz	l9719
  8649                           
  8650                           ; BSR set to: 0
  8651  0046F6  6B60               	clrf	?_strncmp& (0+255),b
  8652  0046F8  6B61               	clrf	(?_strncmp+1)& (0+255),b
  8653                           
  8654                           ; BSR set to: 0
  8655  0046FA  0012               	return		;funcret
  8656  0046FC                     __end_of_strncmp:
  8657                           	opt stack 0
  8658                           tblptru	equ	0xFF8
  8659                           tblptrh	equ	0xFF7
  8660                           tblptrl	equ	0xFF6
  8661                           tablat	equ	0xFF5
  8662                           prodh	equ	0xFF4
  8663                           prodl	equ	0xFF3
  8664                           intcon	equ	0xFF2
  8665                           postinc0	equ	0xFEE
  8666                           wreg	equ	0xFE8
  8667                           indf2	equ	0xFDF
  8668                           fsr2h	equ	0xFDA
  8669                           fsr2l	equ	0xFD9
  8670                           status	equ	0xFD8
  8671                           
  8672 ;; *************** function _strcmp *****************
  8673 ;; Defined at:
  8674 ;;		line 5 in file "/opt/microchip/xc8/v1.36/sources/common/strcmp.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  8677 ;;		 -> modemResonseBuffer(64), 
  8678 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  8679 ;;		 -> STR_79(12), STR_78(3), STR_66(3), STR_63(3), 
  8680 ;;		 -> STR_60(3), STR_57(3), STR_54(3), STR_51(3), 
  8681 ;;		 -> STR_48(3), STR_45(3), STR_42(3), STR_39(3), 
  8682 ;;		 -> STR_36(3), 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;  t1              1    8[BANK0 ] unsigned char 
  8685 ;;  t2              1    7[BANK0 ] unsigned char 
  8686 ;;  t0              1    6[BANK0 ] unsigned char 
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  2    0[BANK0 ] int 
  8689 ;; Registers used:
  8690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8691 ;; Tracked objects:
  8692 ;;		On entry : F/0
  8693 ;;		On exit  : F/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8696 ;;      Params:         0       4       0       0       0       0       0       0       0
  8697 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8698 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8699 ;;      Totals:         0       9       0       0       0       0       0       0       0
  8700 ;;Total ram usage:        9 bytes
  8701 ;; Hardware stack levels used:    1
  8702 ;; Hardware stack levels required when called:   11
  8703 ;; This function calls:
  8704 ;;		Nothing
  8705 ;; This function is called by:
  8706 ;;		_moteJoiningProcess
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           	psect	text23
  8711  0049A4                     __ptext23:
  8712                           	opt stack 0
  8713  0049A4                     _strcmp:
  8714                           	opt stack 17
  8715  0049A4                     l9731:
  8716                           
  8717                           ; BSR set to: 0
  8718  0049A4  C060  FFD9         	movff	strcmp@s1,fsr2l
  8719  0049A8  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  8720  0049AC  50DF               	movf	indf2,w,c
  8721  0049AE  6F66               	movwf	strcmp@t0& (0+255),b
  8722                           
  8723                           ; BSR set to: 0
  8724  0049B0  C062  FFF6         	movff	strcmp@s2,tblptrl
  8725  0049B4  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  8726  0049B8                     	if	0	;tblptru may be non-zero
  8727  0049B8                     	endif
  8728  0049B8                     	if	0	;tblptru may be non-zero
  8729  0049B8                     	endif
  8730  0049B8  0008               	tblrd		*
  8731  0049BA  CFF5 F068          	movff	tablat,strcmp@t1
  8732                           
  8733                           ; BSR set to: 0
  8734  0049BE  5166               	movf	strcmp@t0& (0+255),w,b
  8735  0049C0  E02C               	bz	l9761
  8736                           
  8737                           ; BSR set to: 0
  8738  0049C2  0E02               	movlw	2
  8739  0049C4  2760               	addwf	strcmp@s1& (0+255),f,b
  8740  0049C6  0E00               	movlw	0
  8741  0049C8  2361               	addwfc	(strcmp@s1+1)& (0+255),f,b
  8742  0049CA  5168               	movf	strcmp@t1& (0+255),w,b
  8743  0049CC  1966               	xorwf	strcmp@t0& (0+255),w,b
  8744  0049CE  E125               	bnz	l9761
  8745                           
  8746                           ; BSR set to: 0
  8747  0049D0  EE2F F0FF          	lfsr	2,-1
  8748  0049D4  5160               	movf	strcmp@s1& (0+255),w,b
  8749  0049D6  26D9               	addwf	fsr2l,f,c
  8750  0049D8  5161               	movf	(strcmp@s1+1)& (0+255),w,b
  8751  0049DA  22DA               	addwfc	fsr2h,f,c
  8752  0049DC  50DF               	movf	indf2,w,c
  8753  0049DE  6F67               	movwf	strcmp@t2& (0+255),b
  8754                           
  8755                           ; BSR set to: 0
  8756  0049E0  2962               	incf	strcmp@s2& (0+255),w,b
  8757  0049E2  6F64               	movwf	??_strcmp& (0+255),b
  8758  0049E4  0E00               	movlw	0
  8759  0049E6  2163               	addwfc	(strcmp@s2+1)& (0+255),w,b
  8760  0049E8  6F65               	movwf	(??_strcmp+1)& (0+255),b
  8761  0049EA  C064  FFF6         	movff	??_strcmp,tblptrl
  8762  0049EE  C065  FFF7         	movff	??_strcmp+1,tblptrh
  8763  0049F2                     	if	0	;tblptru may be non-zero
  8764  0049F2                     	endif
  8765  0049F2                     	if	0	;tblptru may be non-zero
  8766  0049F2                     	endif
  8767  0049F2  0008               	tblrd		*
  8768  0049F4  CFF5 F068          	movff	tablat,strcmp@t1
  8769                           
  8770                           ; BSR set to: 0
  8771  0049F8  5167               	movf	strcmp@t2& (0+255),w,b
  8772  0049FA  E107               	bnz	l9753
  8773  0049FC                     l9749:
  8774                           
  8775                           ; BSR set to: 0
  8776  0049FC  5168               	movf	strcmp@t1& (0+255),w,b
  8777  0049FE  5D67               	subwf	strcmp@t2& (0+255),w,b
  8778  004A00  6F60               	movwf	?_strcmp& (0+255),b
  8779  004A02  6B61               	clrf	(?_strcmp+1)& (0+255),b
  8780  004A04  A0D8               	btfss	status,0,c
  8781  004A06  0761               	decf	(?_strcmp+1)& (0+255),f,b
  8782  004A08  0012               	return	
  8783  004A0A                     l9753:
  8784                           
  8785                           ; BSR set to: 0
  8786  004A0A  0E02               	movlw	2
  8787  004A0C  2762               	addwf	strcmp@s2& (0+255),f,b
  8788  004A0E  0E00               	movlw	0
  8789  004A10  2363               	addwfc	(strcmp@s2+1)& (0+255),f,b
  8790  004A12  5167               	movf	strcmp@t2& (0+255),w,b
  8791  004A14  1968               	xorwf	strcmp@t1& (0+255),w,b
  8792  004A16  E1F2               	bnz	l9749
  8793  004A18  D7C5               	goto	l9731
  8794  004A1A                     l9761:
  8795                           
  8796                           ; BSR set to: 0
  8797  004A1A  5168               	movf	strcmp@t1& (0+255),w,b
  8798  004A1C  5D66               	subwf	strcmp@t0& (0+255),w,b
  8799  004A1E  6F60               	movwf	?_strcmp& (0+255),b
  8800  004A20  6B61               	clrf	(?_strcmp+1)& (0+255),b
  8801  004A22  A0D8               	btfss	status,0,c
  8802  004A24  0761               	decf	(?_strcmp+1)& (0+255),f,b
  8803                           
  8804                           ; BSR set to: 0
  8805  004A26  0012               	return		;funcret
  8806  004A28                     __end_of_strcmp:
  8807                           	opt stack 0
  8808                           tblptru	equ	0xFF8
  8809                           tblptrh	equ	0xFF7
  8810                           tblptrl	equ	0xFF6
  8811                           tablat	equ	0xFF5
  8812                           prodh	equ	0xFF4
  8813                           prodl	equ	0xFF3
  8814                           intcon	equ	0xFF2
  8815                           postinc0	equ	0xFEE
  8816                           wreg	equ	0xFE8
  8817                           indf2	equ	0xFDF
  8818                           fsr2h	equ	0xFDA
  8819                           fsr2l	equ	0xFD9
  8820                           status	equ	0xFD8
  8821                           
  8822 ;; *************** function _sprintf *****************
  8823 ;; Defined at:
  8824 ;;		line 492 in file "/opt/microchip/xc8/v1.36/sources/common/doprnt.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;  sp              1    wreg     PTR unsigned char 
  8827 ;;		 -> moteJoiningProcess@buf(50), 
  8828 ;;  f               2   12[BANK0 ] PTR const unsigned char 
  8829 ;;		 -> STR_76(6), STR_73(24), STR_70(32), 
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;  sp              1   36[BANK0 ] PTR unsigned char 
  8832 ;;		 -> moteJoiningProcess@buf(50), 
  8833 ;;  idx             1   28[BANK0 ] unsigned char 
  8834 ;;  tmpval          4    0        struct .
  8835 ;;  cp              3    0        PTR const unsigned char 
  8836 ;;  width           2   34[BANK0 ] int 
  8837 ;;  val             2   31[BANK0 ] unsigned int 
  8838 ;;  len             2    0        unsigned int 
  8839 ;;  c               1   37[BANK0 ] char 
  8840 ;;  flag            1   33[BANK0 ] unsigned char 
  8841 ;;  prec            1   30[BANK0 ] char 
  8842 ;;  ap              1   29[BANK0 ] PTR void [1]
  8843 ;;		 -> ?_sprintf(2), 
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  2   12[BANK0 ] int 
  8846 ;; Registers used:
  8847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : F/0
  8850 ;;		On exit  : F/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8853 ;;      Params:         0      12       0       0       0       0       0       0       0
  8854 ;;      Locals:         0      10       0       0       0       0       0       0       0
  8855 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8856 ;;      Totals:         0      26       0       0       0       0       0       0       0
  8857 ;;Total ram usage:       26 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:   12
  8860 ;; This function calls:
  8861 ;;		___lwdiv
  8862 ;;		___lwmod
  8863 ;;		___wmul
  8864 ;;		_isdigit
  8865 ;; This function is called by:
  8866 ;;		_moteJoiningProcess
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text24
  8871  006B7A                     __ptext24:
  8872                           	opt stack 0
  8873  006B7A                     _sprintf:
  8874                           	opt stack 16
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;incstack = 0
  8878                           ;sprintf@sp stored from wreg
  8879  006B7A  6F84               	movwf	sprintf@sp& (0+255),b
  8880                           
  8881                           ;doprnt.c: 494: va_list ap;
  8882                           ;doprnt.c: 499: signed char c;
  8883                           ;doprnt.c: 501: int width;
  8884                           ;doprnt.c: 506: signed char prec;
  8885                           ;doprnt.c: 508: unsigned char flag;
  8886                           ;doprnt.c: 523: union {
  8887                           ;doprnt.c: 524: unsigned long vd;
  8888                           ;doprnt.c: 525: double integ;
  8889                           ;doprnt.c: 526: } tmpval;
  8890                           ;doprnt.c: 528: unsigned int val;
  8891                           ;doprnt.c: 529: unsigned len;
  8892                           ;doprnt.c: 530: const char * cp;
  8893                           ;doprnt.c: 533: *ap = __va_start();
  8894  006B7C  0E6E               	movlw	low (?_sprintf+2)
  8895  006B7E  0100               	movlb	0	; () banked
  8896  006B80  6F7D               	movwf	sprintf@ap& (0+255),b
  8897                           
  8898                           ;doprnt.c: 536: while(c = *f++) {
  8899  006B82  D15B               	goto	l9899
  8900  006B84                     l9767:
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;doprnt.c: 538: if(c != '%')
  8904  006B84  0E25               	movlw	37
  8905  006B86  1985               	xorwf	sprintf@c& (0+255),w,b
  8906  006B88  E007               	bz	l1848
  8907                           
  8908                           ; BSR set to: 0
  8909                           ;doprnt.c: 540: {
  8910                           ;doprnt.c: 541: ((*sp++ = (c)));
  8911  006B8A  5184               	movf	sprintf@sp& (0+255),w,b
  8912  006B8C  6ED9               	movwf	fsr2l,c
  8913  006B8E  6ADA               	clrf	fsr2h,c
  8914  006B90  C085  FFDF         	movff	sprintf@c,indf2
  8915                           
  8916                           ; BSR set to: 0
  8917  006B94  2B84               	incf	sprintf@sp& (0+255),f,b
  8918                           
  8919                           ;doprnt.c: 542: continue;
  8920  006B96  D151               	goto	l9899
  8921  006B98                     l1848:
  8922                           
  8923                           ; BSR set to: 0
  8924                           ;doprnt.c: 543: }
  8925                           ;doprnt.c: 546: width = 0;
  8926  006B98  6B82               	clrf	sprintf@width& (0+255),b
  8927  006B9A  6B83               	clrf	(sprintf@width+1)& (0+255),b
  8928                           
  8929                           ;doprnt.c: 548: flag = 0;
  8930  006B9C  6B81               	clrf	sprintf@flag& (0+255),b
  8931  006B9E  D003               	goto	l9777
  8932  006BA0                     l9773:
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;doprnt.c: 580: flag |= 0x04;
  8936  006BA0  8581               	bsf	sprintf@flag& (0+255),2,b
  8937                           
  8938                           ;doprnt.c: 581: f++;
  8939  006BA2  4B6C               	infsnz	sprintf@f& (0+255),f,b
  8940  006BA4  2B6D               	incf	(sprintf@f+1)& (0+255),f,b
  8941  006BA6                     l9777:
  8942                           
  8943                           ; BSR set to: 0
  8944  006BA6  C06C  FFF6         	movff	sprintf@f,tblptrl
  8945  006BAA  C06D  FFF7         	movff	sprintf@f+1,tblptrh
  8946  006BAE                     	if	0	;tblptru may be non-zero
  8947  006BAE                     	endif
  8948  006BAE                     	if	0	;tblptru may be non-zero
  8949  006BAE                     	endif
  8950  006BAE  0008               	tblrd		*
  8951  006BB0  50F5               	movf	tablat,w,c
  8952                           
  8953                           ; Switch size 1, requested type "speed"
  8954                           ; Number of cases is 1, Range of values is 48 to 48
  8955                           ; switch strategies available:
  8956                           ; Name         Instructions Cycles
  8957                           ; simple_byte            4     3 (average)
  8958                           ;	Chosen strategy is simple_byte
  8959  006BB2  0A30               	xorlw	48	; case 48
  8960  006BB4  E0F5               	bz	l9773
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8964  006BB6  C06C  FFF6         	movff	sprintf@f,tblptrl
  8965  006BBA  C06D  FFF7         	movff	sprintf@f+1,tblptrh
  8966  006BBE                     	if	0	;tblptru may be non-zero
  8967  006BBE                     	endif
  8968  006BBE                     	if	0	;tblptru may be non-zero
  8969  006BBE                     	endif
  8970  006BBE  0008               	tblrd		*
  8971  006BC0  50F5               	movf	tablat,w,c
  8972  006BC2  EC6A  F01E         	call	_isdigit
  8973  006BC6  E330               	bnc	l9795
  8974                           
  8975                           ; BSR set to: 0
  8976                           ;doprnt.c: 598: width = 0;
  8977  006BC8  6B82               	clrf	sprintf@width& (0+255),b
  8978  006BCA  6B83               	clrf	(sprintf@width+1)& (0+255),b
  8979  006BCC                     l9783:
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;doprnt.c: 600: width *= 10;
  8983  006BCC  C082  F060         	movff	sprintf@width,___wmul@multiplier
  8984  006BD0  C083  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  8985  006BD4  6B63               	clrf	(___wmul@multiplicand+1)& (0+255),b
  8986  006BD6  0E0A               	movlw	10
  8987  006BD8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  8988  006BDA  ECCC  F01E         	call	___wmul	;wreg free
  8989  006BDE  C060  F082         	movff	?___wmul,sprintf@width
  8990  006BE2  C061  F083         	movff	?___wmul+1,sprintf@width+1
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;doprnt.c: 601: width += *f++ - '0';
  8994  006BE6  0ED0               	movlw	208
  8995  006BE8  6F78               	movwf	??_sprintf& (0+255),b
  8996  006BEA  6979               	setf	(??_sprintf+1)& (0+255),b
  8997  006BEC  C06C  FFF6         	movff	sprintf@f,tblptrl
  8998  006BF0  C06D  FFF7         	movff	sprintf@f+1,tblptrh
  8999  006BF4                     	if	0	;tblptru may be non-zero
  9000  006BF4                     	endif
  9001  006BF4                     	if	0	;tblptru may be non-zero
  9002  006BF4                     	endif
  9003  006BF4  0008               	tblrd		*
  9004  006BF6  50F5               	movf	tablat,w,c
  9005  006BF8  6F7A               	movwf	(??_sprintf+2)& (0+255),b
  9006  006BFA  6B7B               	clrf	(??_sprintf+3)& (0+255),b
  9007  006BFC  5178               	movf	??_sprintf& (0+255),w,b
  9008  006BFE  277A               	addwf	(??_sprintf+2)& (0+255),f,b
  9009  006C00  5179               	movf	(??_sprintf+1)& (0+255),w,b
  9010  006C02  237B               	addwfc	(??_sprintf+3)& (0+255),f,b
  9011  006C04  517A               	movf	(??_sprintf+2)& (0+255),w,b
  9012  006C06  2782               	addwf	sprintf@width& (0+255),f,b
  9013  006C08  517B               	movf	(??_sprintf+3)& (0+255),w,b
  9014  006C0A  2383               	addwfc	(sprintf@width+1)& (0+255),f,b
  9015                           
  9016                           ; BSR set to: 0
  9017  006C0C  4B6C               	infsnz	sprintf@f& (0+255),f,b
  9018  006C0E  2B6D               	incf	(sprintf@f+1)& (0+255),f,b
  9019                           
  9020                           ; BSR set to: 0
  9021                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  9022  006C10  C06C  FFF6         	movff	sprintf@f,tblptrl
  9023  006C14  C06D  FFF7         	movff	sprintf@f+1,tblptrh
  9024  006C18                     	if	0	;tblptru may be non-zero
  9025  006C18                     	endif
  9026  006C18                     	if	0	;tblptru may be non-zero
  9027  006C18                     	endif
  9028  006C18  0008               	tblrd		*
  9029  006C1A  50F5               	movf	tablat,w,c
  9030  006C1C  EC6A  F01E         	call	_isdigit
  9031  006C20  E303               	bnc	l9795
  9032  006C22  D7D4               	goto	l9783
  9033  006C24                     l9791:
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;doprnt.c: 718: case 'x':
  9037                           ;doprnt.c: 721: flag |= 0x80;
  9038  006C24  8F81               	bsf	sprintf@flag& (0+255),7,b
  9039                           
  9040                           ;doprnt.c: 723: break;
  9041  006C26  D015               	goto	l1863
  9042  006C28                     l9795:
  9043                           
  9044                           ; BSR set to: 0
  9045  006C28  C06C  FFF6         	movff	sprintf@f,tblptrl
  9046  006C2C  C06D  FFF7         	movff	sprintf@f+1,tblptrh
  9047  006C30  4B6C               	infsnz	sprintf@f& (0+255),f,b
  9048  006C32  2B6D               	incf	(sprintf@f+1)& (0+255),f,b
  9049  006C34                     	if	0	;tblptru may be non-zero
  9050  006C34                     	endif
  9051  006C34                     	if	0	;tblptru may be non-zero
  9052  006C34                     	endif
  9053  006C34  0008               	tblrd		*
  9054  006C36  CFF5 F085          	movff	tablat,sprintf@c
  9055  006C3A  5185               	movf	sprintf@c& (0+255),w,b
  9056                           
  9057                           ; Switch size 1, requested type "speed"
  9058                           ; Number of cases is 5, Range of values is 0 to 120
  9059                           ; switch strategies available:
  9060                           ; Name         Instructions Cycles
  9061                           ; simple_byte           16     9 (average)
  9062                           ;	Chosen strategy is simple_byte
  9063  006C3C  E101 D109          	bz	l9901
  9064  006C40  0A58               	xorlw	88	; case 88
  9065  006C42  E0F0               	bz	l9791
  9066  006C44  0A3C               	xorlw	60	; case 100
  9067  006C46  E005               	bz	l1863
  9068  006C48  0A0D               	xorlw	13	; case 105
  9069  006C4A  E003               	bz	l1863
  9070  006C4C  0A11               	xorlw	17	; case 120
  9071  006C4E  E0EA               	bz	l9791
  9072  006C50  D0F4               	goto	l9899
  9073  006C52                     l1863:
  9074                           
  9075                           ; BSR set to: 0
  9076                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  9077  006C52  BF81               	btfsc	sprintf@flag& (0+255),7,b
  9078  006C54  D012               	goto	l9807
  9079                           
  9080                           ; BSR set to: 0
  9081                           ;doprnt.c: 1253: {
  9082                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  9083  006C56  517D               	movf	sprintf@ap& (0+255),w,b
  9084  006C58  6ED9               	movwf	fsr2l,c
  9085  006C5A  6ADA               	clrf	fsr2h,c
  9086  006C5C  CFDE F07F          	movff	postinc2,sprintf@val
  9087  006C60  CFDD F080          	movff	postdec2,sprintf@val+1
  9088                           
  9089                           ; BSR set to: 0
  9090  006C64  0E02               	movlw	2
  9091  006C66  277D               	addwf	sprintf@ap& (0+255),f,b
  9092                           
  9093                           ; BSR set to: 0
  9094                           ;doprnt.c: 1261: if((int)val < 0) {
  9095  006C68  AF80               	btfss	(sprintf@val+1)& (0+255),7,b
  9096  006C6A  D03D               	goto	l9841
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;doprnt.c: 1262: flag |= 0x03;
  9100  006C6C  0E03               	movlw	3
  9101  006C6E  1381               	iorwf	sprintf@flag& (0+255),f,b
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;doprnt.c: 1263: val = -val;
  9105  006C70  6D7F               	negf	sprintf@val& (0+255),b
  9106  006C72  1F80               	comf	(sprintf@val+1)& (0+255),f,b
  9107  006C74  B0D8               	btfsc	status,0,c
  9108  006C76  2B80               	incf	(sprintf@val+1)& (0+255),f,b
  9109  006C78  D036               	goto	l9841
  9110  006C7A                     l9807:
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;doprnt.c: 1268: else
  9114                           ;doprnt.c: 1273: {
  9115                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  9116  006C7A  517D               	movf	sprintf@ap& (0+255),w,b
  9117  006C7C  6ED9               	movwf	fsr2l,c
  9118  006C7E  6ADA               	clrf	fsr2h,c
  9119  006C80  CFDE F07F          	movff	postinc2,sprintf@val
  9120  006C84  CFDD F080          	movff	postdec2,sprintf@val+1
  9121                           
  9122                           ; BSR set to: 0
  9123  006C88  0E02               	movlw	2
  9124  006C8A  277D               	addwf	sprintf@ap& (0+255),f,b
  9125  006C8C  D02C               	goto	l9841
  9126  006C8E                     l9811:
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9130  006C8E  0E01               	movlw	1
  9131  006C90  6F85               	movwf	sprintf@c& (0+255),b
  9132  006C92                     l9817:
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;doprnt.c: 1306: if(val < dpowers[c])
  9136  006C92  5185               	movf	sprintf@c& (0+255),w,b
  9137  006C94  0D02               	mullw	2
  9138  006C96  0E7F               	movlw	low _dpowers
  9139  006C98  24F3               	addwf	prodl,w,c
  9140  006C9A  6EF6               	movwf	tblptrl,c
  9141  006C9C  0E77               	movlw	high _dpowers
  9142  006C9E  20F4               	addwfc	prodh,w,c
  9143  006CA0  6EF7               	movwf	tblptrh,c
  9144  006CA2                     	if	0	;There are less than 3 active tblptr bytes
  9145  006CA2                     	endif
  9146  006CA2  0009               	tblrd		*+
  9147  006CA4  50F5               	movf	tablat,w,c
  9148  006CA6  5D7F               	subwf	sprintf@val& (0+255),w,b
  9149  006CA8  0009               	tblrd		*+
  9150  006CAA  50F5               	movf	tablat,w,c
  9151  006CAC  5980               	subwfb	(sprintf@val+1)& (0+255),w,b
  9152  006CAE  E320               	bnc	l9843
  9153                           
  9154                           ; BSR set to: 0
  9155  006CB0  2B85               	incf	sprintf@c& (0+255),f,b
  9156                           
  9157                           ; BSR set to: 0
  9158  006CB2  0E05               	movlw	5
  9159  006CB4  1985               	xorwf	sprintf@c& (0+255),w,b
  9160  006CB6  E01C               	bz	l9843
  9161  006CB8  D7EC               	goto	l9817
  9162  006CBA                     l9825:
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  9166  006CBA  0E01               	movlw	1
  9167  006CBC  6F85               	movwf	sprintf@c& (0+255),b
  9168  006CBE                     l9831:
  9169                           
  9170                           ; BSR set to: 0
  9171                           ;doprnt.c: 1317: if(val < hexpowers[c])
  9172  006CBE  5185               	movf	sprintf@c& (0+255),w,b
  9173  006CC0  0D02               	mullw	2
  9174  006CC2  0E89               	movlw	low _hexpowers
  9175  006CC4  24F3               	addwf	prodl,w,c
  9176  006CC6  6EF6               	movwf	tblptrl,c
  9177  006CC8  0E77               	movlw	high _hexpowers
  9178  006CCA  20F4               	addwfc	prodh,w,c
  9179  006CCC  6EF7               	movwf	tblptrh,c
  9180  006CCE                     	if	0	;There are less than 3 active tblptr bytes
  9181  006CCE                     	endif
  9182  006CCE  0009               	tblrd		*+
  9183  006CD0  50F5               	movf	tablat,w,c
  9184  006CD2  5D7F               	subwf	sprintf@val& (0+255),w,b
  9185  006CD4  0009               	tblrd		*+
  9186  006CD6  50F5               	movf	tablat,w,c
  9187  006CD8  5980               	subwfb	(sprintf@val+1)& (0+255),w,b
  9188  006CDA  E30A               	bnc	l9843
  9189                           
  9190                           ; BSR set to: 0
  9191  006CDC  2B85               	incf	sprintf@c& (0+255),f,b
  9192                           
  9193                           ; BSR set to: 0
  9194  006CDE  0E04               	movlw	4
  9195  006CE0  1985               	xorwf	sprintf@c& (0+255),w,b
  9196  006CE2  E006               	bz	l9843
  9197  006CE4  D7EC               	goto	l9831
  9198  006CE6                     l9841:
  9199                           
  9200                           ; BSR set to: 0
  9201  006CE6  5181               	movf	sprintf@flag& (0+255),w,b
  9202  006CE8  0B80               	andlw	128
  9203                           
  9204                           ; Switch size 1, requested type "speed"
  9205                           ; Number of cases is 2, Range of values is 0 to 128
  9206                           ; switch strategies available:
  9207                           ; Name         Instructions Cycles
  9208                           ; simple_byte            7     4 (average)
  9209                           ;	Chosen strategy is simple_byte
  9210  006CEA  E0D1               	bz	l9811
  9211  006CEC  0A80               	xorlw	128	; case 128
  9212  006CEE  E0E5               	bz	l9825
  9213  006CF0                     l9843:
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9217  006CF0  5182               	movf	sprintf@width& (0+255),w,b
  9218  006CF2  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
  9219  006CF4  E008               	bz	l9849
  9220                           
  9221                           ; BSR set to: 0
  9222  006CF6  C081  F078         	movff	sprintf@flag,??_sprintf
  9223  006CFA  0E03               	movlw	3
  9224  006CFC  1778               	andwf	??_sprintf& (0+255),f,b
  9225  006CFE  E003               	bz	l9849
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;doprnt.c: 1346: width--;
  9229  006D00  0782               	decf	sprintf@width& (0+255),f,b
  9230  006D02  A0D8               	btfss	status,0,c
  9231  006D04  0783               	decf	(sprintf@width+1)& (0+255),f,b
  9232  006D06                     l9849:
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;doprnt.c: 1381: if(width > c)
  9236  006D06  0E80               	movlw	128
  9237  006D08  BF85               	btfsc	sprintf@c& (0+255),7,b
  9238  006D0A  0E7F               	movlw	127
  9239  006D0C  6F78               	movwf	??_sprintf& (0+255),b
  9240  006D0E  5182               	movf	sprintf@width& (0+255),w,b
  9241  006D10  5D85               	subwf	sprintf@c& (0+255),w,b
  9242  006D12  5183               	movf	(sprintf@width+1)& (0+255),w,b
  9243  006D14  0A80               	xorlw	128
  9244  006D16  5978               	subwfb	??_sprintf& (0+255),w,b
  9245  006D18  E207               	bc	l1881
  9246                           
  9247                           ; BSR set to: 0
  9248                           ;doprnt.c: 1382: width -= c;
  9249  006D1A  5185               	movf	sprintf@c& (0+255),w,b
  9250  006D1C  5F82               	subwf	sprintf@width& (0+255),f,b
  9251  006D1E  0E00               	movlw	0
  9252  006D20  BF85               	btfsc	sprintf@c& (0+255),7,b
  9253  006D22  0EFF               	movlw	255
  9254  006D24  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
  9255  006D26  D002               	goto	l1882
  9256  006D28                     l1881:
  9257                           
  9258                           ; BSR set to: 0
  9259                           ;doprnt.c: 1383: else
  9260                           ;doprnt.c: 1384: width = 0;
  9261  006D28  6B82               	clrf	sprintf@width& (0+255),b
  9262  006D2A  6B83               	clrf	(sprintf@width+1)& (0+255),b
  9263  006D2C                     l1882:
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;doprnt.c: 1387: if(flag & 0x04) {
  9267  006D2C  A581               	btfss	sprintf@flag& (0+255),2,b
  9268  006D2E  D018               	goto	l9867
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;doprnt.c: 1392: if(flag & 0x03)
  9272  006D30  C081  F078         	movff	sprintf@flag,??_sprintf
  9273  006D34  0E03               	movlw	3
  9274  006D36  1778               	andwf	??_sprintf& (0+255),f,b
  9275  006D38  E006               	bz	l9859
  9276                           
  9277                           ; BSR set to: 0
  9278                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  9279  006D3A  5184               	movf	sprintf@sp& (0+255),w,b
  9280  006D3C  6ED9               	movwf	fsr2l,c
  9281  006D3E  6ADA               	clrf	fsr2h,c
  9282  006D40  0E2D               	movlw	45
  9283  006D42  6EDF               	movwf	indf2,c
  9284                           
  9285                           ; BSR set to: 0
  9286  006D44  2B84               	incf	sprintf@sp& (0+255),f,b
  9287  006D46                     l9859:
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;doprnt.c: 1415: if(width)
  9291  006D46  5182               	movf	sprintf@width& (0+255),w,b
  9292  006D48  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
  9293  006D4A  E024               	bz	l9881
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  9297  006D4C  5184               	movf	sprintf@sp& (0+255),w,b
  9298  006D4E  6ED9               	movwf	fsr2l,c
  9299  006D50  6ADA               	clrf	fsr2h,c
  9300  006D52  0E30               	movlw	48
  9301  006D54  6EDF               	movwf	indf2,c
  9302                           
  9303                           ; BSR set to: 0
  9304  006D56  2B84               	incf	sprintf@sp& (0+255),f,b
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;doprnt.c: 1418: while(--width);
  9308  006D58  0782               	decf	sprintf@width& (0+255),f,b
  9309  006D5A  A0D8               	btfss	status,0,c
  9310  006D5C  0783               	decf	(sprintf@width+1)& (0+255),f,b
  9311  006D5E  D7F3               	goto	l9859
  9312  006D60                     l9867:
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;doprnt.c: 1422: {
  9316                           ;doprnt.c: 1424: if(width
  9317                           ;doprnt.c: 1428: )
  9318  006D60  5182               	movf	sprintf@width& (0+255),w,b
  9319  006D62  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
  9320  006D64  E00C               	bz	l9875
  9321  006D66                     l9869:
  9322                           
  9323                           ; BSR set to: 0
  9324                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  9325  006D66  5184               	movf	sprintf@sp& (0+255),w,b
  9326  006D68  6ED9               	movwf	fsr2l,c
  9327  006D6A  6ADA               	clrf	fsr2h,c
  9328  006D6C  0E20               	movlw	32
  9329  006D6E  6EDF               	movwf	indf2,c
  9330                           
  9331                           ; BSR set to: 0
  9332  006D70  2B84               	incf	sprintf@sp& (0+255),f,b
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;doprnt.c: 1431: while(--width);
  9336  006D72  0782               	decf	sprintf@width& (0+255),f,b
  9337  006D74  A0D8               	btfss	status,0,c
  9338  006D76  0783               	decf	(sprintf@width+1)& (0+255),f,b
  9339  006D78  5182               	movf	sprintf@width& (0+255),w,b
  9340  006D7A  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
  9341  006D7C  E1F4               	bnz	l9869
  9342  006D7E                     l9875:
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;doprnt.c: 1438: if(flag & 0x03)
  9346  006D7E  C081  F078         	movff	sprintf@flag,??_sprintf
  9347  006D82  0E03               	movlw	3
  9348  006D84  1778               	andwf	??_sprintf& (0+255),f,b
  9349  006D86  E006               	bz	l9881
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9353  006D88  5184               	movf	sprintf@sp& (0+255),w,b
  9354  006D8A  6ED9               	movwf	fsr2l,c
  9355  006D8C  6ADA               	clrf	fsr2h,c
  9356  006D8E  0E2D               	movlw	45
  9357  006D90  6EDF               	movwf	indf2,c
  9358                           
  9359                           ; BSR set to: 0
  9360  006D92  2B84               	incf	sprintf@sp& (0+255),f,b
  9361  006D94                     l9881:
  9362                           
  9363                           ; BSR set to: 0
  9364                           ;doprnt.c: 1469: }
  9365                           ;doprnt.c: 1472: prec = c;
  9366  006D94  C085  F07E         	movff	sprintf@c,sprintf@prec
  9367                           
  9368                           ;doprnt.c: 1474: while(prec--) {
  9369  006D98  D04D               	goto	l9897
  9370  006D9A                     l9883:
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9374  006D9A  517E               	movf	sprintf@prec& (0+255),w,b
  9375  006D9C  0D02               	mullw	2
  9376  006D9E  0E7F               	movlw	low _dpowers
  9377  006DA0  24F3               	addwf	prodl,w,c
  9378  006DA2  6EF6               	movwf	tblptrl,c
  9379  006DA4  0E77               	movlw	high _dpowers
  9380  006DA6  20F4               	addwfc	prodh,w,c
  9381  006DA8  6EF7               	movwf	tblptrh,c
  9382  006DAA                     	if	0	;There are less than 3 active tblptr bytes
  9383  006DAA                     	endif
  9384  006DAA  0009               	tblrd		*+
  9385  006DAC  CFF5 F062          	movff	tablat,___lwdiv@divisor
  9386  006DB0  000A               	tblrd		*-
  9387  006DB2  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  9388  006DB6  C07F  F060         	movff	sprintf@val,___lwdiv@dividend
  9389  006DBA  C080  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  9390  006DBE  EC21  F021         	call	___lwdiv	;wreg free
  9391  006DC2  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  9392  006DC6  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  9393  006DCA  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  9394  006DCC  0E0A               	movlw	10
  9395  006DCE  6F69               	movwf	___lwmod@divisor& (0+255),b
  9396  006DD0  ECDD  F020         	call	___lwmod	;wreg free
  9397  006DD4  5167               	movf	?___lwmod& (0+255),w,b
  9398  006DD6  0F30               	addlw	48
  9399  006DD8  6F85               	movwf	sprintf@c& (0+255),b
  9400                           
  9401                           ;doprnt.c: 1491: break;
  9402  006DDA  D026               	goto	l9893
  9403  006DDC                     l9885:
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;doprnt.c: 1499: {
  9407                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  9408  006DDC  C07F  F060         	movff	sprintf@val,___lwdiv@dividend
  9409  006DE0  C080  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  9410  006DE4  517E               	movf	sprintf@prec& (0+255),w,b
  9411  006DE6  0D02               	mullw	2
  9412  006DE8  0E89               	movlw	low _hexpowers
  9413  006DEA  24F3               	addwf	prodl,w,c
  9414  006DEC  6EF6               	movwf	tblptrl,c
  9415  006DEE  0E77               	movlw	high _hexpowers
  9416  006DF0  20F4               	addwfc	prodh,w,c
  9417  006DF2  6EF7               	movwf	tblptrh,c
  9418  006DF4                     	if	0	;There are less than 3 active tblptr bytes
  9419  006DF4                     	endif
  9420  006DF4  0009               	tblrd		*+
  9421  006DF6  CFF5 F062          	movff	tablat,___lwdiv@divisor
  9422  006DFA  000A               	tblrd		*-
  9423  006DFC  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  9424  006E00  EC21  F021         	call	___lwdiv	;wreg free
  9425  006E04  5160               	movf	?___lwdiv& (0+255),w,b
  9426  006E06  0B0F               	andlw	15
  9427  006E08  6F7C               	movwf	sprintf@idx& (0+255),b
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  9431  006E0A  0E7F               	movlw	low STR_108
  9432  006E0C  257C               	addwf	sprintf@idx& (0+255),w,b
  9433  006E0E  6EF6               	movwf	tblptrl,c
  9434  006E10  6AF7               	clrf	tblptrh,c
  9435  006E12  0E7C               	movlw	high STR_108
  9436  006E14  22F7               	addwfc	tblptrh,f,c
  9437  006E16                     	if	0	;There are less than 3 active tblptr bytes
  9438  006E16                     	endif
  9439  006E16  0008               	tblrd		*
  9440  006E18  CFF5 F085          	movff	tablat,sprintf@c
  9441                           
  9442                           ;doprnt.c: 1508: }
  9443                           ;doprnt.c: 1510: break;
  9444  006E1C  D005               	goto	l9893
  9445  006E1E                     l9891:
  9446                           
  9447                           ; BSR set to: 0
  9448  006E1E  5181               	movf	sprintf@flag& (0+255),w,b
  9449  006E20  0B80               	andlw	128
  9450                           
  9451                           ; Switch size 1, requested type "speed"
  9452                           ; Number of cases is 2, Range of values is 0 to 128
  9453                           ; switch strategies available:
  9454                           ; Name         Instructions Cycles
  9455                           ; simple_byte            7     4 (average)
  9456                           ;	Chosen strategy is simple_byte
  9457  006E22  E0BB               	bz	l9883
  9458  006E24  0A80               	xorlw	128	; case 128
  9459  006E26  E0DA               	bz	l9885
  9460  006E28                     l9893:
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;doprnt.c: 1524: ((*sp++ = (c)));
  9464  006E28  5184               	movf	sprintf@sp& (0+255),w,b
  9465  006E2A  6ED9               	movwf	fsr2l,c
  9466  006E2C  6ADA               	clrf	fsr2h,c
  9467  006E2E  C085  FFDF         	movff	sprintf@c,indf2
  9468                           
  9469                           ; BSR set to: 0
  9470  006E32  2B84               	incf	sprintf@sp& (0+255),f,b
  9471  006E34                     l9897:
  9472                           
  9473                           ; BSR set to: 0
  9474  006E34  077E               	decf	sprintf@prec& (0+255),f,b
  9475  006E36  297E               	incf	sprintf@prec& (0+255),w,b
  9476  006E38  E1F2               	bnz	l9891
  9477  006E3A                     l9899:
  9478                           
  9479                           ; BSR set to: 0
  9480  006E3A  C06C  FFF6         	movff	sprintf@f,tblptrl
  9481  006E3E  C06D  FFF7         	movff	sprintf@f+1,tblptrh
  9482  006E42  4B6C               	infsnz	sprintf@f& (0+255),f,b
  9483  006E44  2B6D               	incf	(sprintf@f+1)& (0+255),f,b
  9484  006E46                     	if	0	;tblptru may be non-zero
  9485  006E46                     	endif
  9486  006E46                     	if	0	;tblptru may be non-zero
  9487  006E46                     	endif
  9488  006E46  0008               	tblrd		*
  9489  006E48  CFF5 F085          	movff	tablat,sprintf@c
  9490  006E4C  5185               	movf	sprintf@c& (0+255),w,b
  9491  006E4E  E001 D699          	bnz	l9767
  9492  006E52                     l9901:
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;doprnt.c: 1538: *sp = 0;
  9496  006E52  5184               	movf	sprintf@sp& (0+255),w,b
  9497  006E54  6ED9               	movwf	fsr2l,c
  9498  006E56  6ADA               	clrf	fsr2h,c
  9499  006E58  6ADF               	clrf	indf2,c
  9500                           
  9501                           ; BSR set to: 0
  9502  006E5A  0C00               	retlw	0	;funcret
  9503  006E5C                     __end_of_sprintf:
  9504                           	opt stack 0
  9505                           tblptru	equ	0xFF8
  9506                           tblptrh	equ	0xFF7
  9507                           tblptrl	equ	0xFF6
  9508                           tablat	equ	0xFF5
  9509                           prodh	equ	0xFF4
  9510                           prodl	equ	0xFF3
  9511                           intcon	equ	0xFF2
  9512                           postinc0	equ	0xFEE
  9513                           wreg	equ	0xFE8
  9514                           indf2	equ	0xFDF
  9515                           postinc2	equ	0xFDE
  9516                           postdec2	equ	0xFDD
  9517                           fsr2h	equ	0xFDA
  9518                           fsr2l	equ	0xFD9
  9519                           status	equ	0xFD8
  9520                           
  9521 ;; *************** function _isdigit *****************
  9522 ;; Defined at:
  9523 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/isdigit.c"
  9524 ;; Parameters:    Size  Location     Type
  9525 ;;  c               1    wreg     unsigned char 
  9526 ;; Auto vars:     Size  Location     Type
  9527 ;;  c               1    2[BANK0 ] unsigned char 
  9528 ;; Return value:  Size  Location     Type
  9529 ;;		None               void
  9530 ;; Registers used:
  9531 ;;		wreg, status,2, status,0
  9532 ;; Tracked objects:
  9533 ;;		On entry : F/0
  9534 ;;		On exit  : F/0
  9535 ;;		Unchanged: 0/0
  9536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9537 ;;      Params:         0       0       0       0       0       0       0       0       0
  9538 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9539 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9540 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9541 ;;Total ram usage:        3 bytes
  9542 ;; Hardware stack levels used:    1
  9543 ;; Hardware stack levels required when called:   11
  9544 ;; This function calls:
  9545 ;;		Nothing
  9546 ;; This function is called by:
  9547 ;;		_sprintf
  9548 ;; This function uses a non-reentrant model
  9549 ;;
  9550                           
  9551                           	psect	text25
  9552  003CD4                     __ptext25:
  9553                           	opt stack 0
  9554  003CD4                     _isdigit:
  9555                           	opt stack 16
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;incstack = 0
  9559                           ;isdigit@c stored from wreg
  9560  003CD4  6F62               	movwf	isdigit@c& (0+255),b
  9561  003CD6  0100               	movlb	0	; () banked
  9562  003CD8  6B61               	clrf	_isdigit$6028& (0+255),b
  9563                           
  9564                           ; BSR set to: 0
  9565  003CDA  0E3A               	movlw	58
  9566  003CDC  6162               	cpfslt	isdigit@c& (0+255),b
  9567  003CDE  D005               	goto	l9561
  9568                           
  9569                           ; BSR set to: 0
  9570  003CE0  0E2F               	movlw	47
  9571  003CE2  6562               	cpfsgt	isdigit@c& (0+255),b
  9572  003CE4  D002               	goto	l9561
  9573                           
  9574                           ; BSR set to: 0
  9575  003CE6  0E01               	movlw	1
  9576  003CE8  6F61               	movwf	_isdigit$6028& (0+255),b
  9577  003CEA                     l9561:
  9578                           
  9579                           ; BSR set to: 0
  9580  003CEA  C061  F060         	movff	_isdigit$6028,??_isdigit
  9581  003CEE  3160               	rrcf	??_isdigit& (0+255),w,b
  9582                           
  9583                           ; BSR set to: 0
  9584  003CF0  0012               	return		;funcret
  9585  003CF2                     __end_of_isdigit:
  9586                           	opt stack 0
  9587                           tblptru	equ	0xFF8
  9588                           tblptrh	equ	0xFF7
  9589                           tblptrl	equ	0xFF6
  9590                           tablat	equ	0xFF5
  9591                           prodh	equ	0xFF4
  9592                           prodl	equ	0xFF3
  9593                           intcon	equ	0xFF2
  9594                           postinc0	equ	0xFEE
  9595                           wreg	equ	0xFE8
  9596                           indf2	equ	0xFDF
  9597                           postinc2	equ	0xFDE
  9598                           postdec2	equ	0xFDD
  9599                           fsr2h	equ	0xFDA
  9600                           fsr2l	equ	0xFD9
  9601                           status	equ	0xFD8
  9602                           
  9603 ;; *************** function ___wmul *****************
  9604 ;; Defined at:
  9605 ;;		line 15 in file "/opt/microchip/xc8/v1.36/sources/common/Umul16.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9608 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;  product         2    4[BANK0 ] unsigned int 
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  2    0[BANK0 ] unsigned int 
  9613 ;; Registers used:
  9614 ;;		wreg, status,2, status,0, prodl, prodh
  9615 ;; Tracked objects:
  9616 ;;		On entry : F/0
  9617 ;;		On exit  : F/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9620 ;;      Params:         0       4       0       0       0       0       0       0       0
  9621 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9622 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9623 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9624 ;;Total ram usage:        6 bytes
  9625 ;; Hardware stack levels used:    1
  9626 ;; Hardware stack levels required when called:   11
  9627 ;; This function calls:
  9628 ;;		Nothing
  9629 ;; This function is called by:
  9630 ;;		_sprintf
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           	psect	text26
  9635  003D98                     __ptext26:
  9636                           	opt stack 0
  9637  003D98                     ___wmul:
  9638                           	opt stack 16
  9639                           
  9640                           ; BSR set to: 0
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;incstack = 0
  9644  003D98  5160               	movf	___wmul@multiplier& (0+255),w,b
  9645  003D9A  0362               	mulwf	___wmul@multiplicand& (0+255),b
  9646  003D9C  CFF3 F064          	movff	prodl,___wmul@product
  9647  003DA0  CFF4 F065          	movff	prodh,___wmul@product+1
  9648  003DA4  5160               	movf	___wmul@multiplier& (0+255),w,b
  9649  003DA6  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9650  003DA8  50F3               	movf	prodl,w,c
  9651  003DAA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  9652  003DAC  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9653  003DAE  0362               	mulwf	___wmul@multiplicand& (0+255),b
  9654  003DB0  50F3               	movf	prodl,w,c
  9655  003DB2  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  9656                           
  9657                           ; BSR set to: 0
  9658  003DB4  C064  F060         	movff	___wmul@product,?___wmul
  9659  003DB8  C065  F061         	movff	___wmul@product+1,?___wmul+1
  9660                           
  9661                           ; BSR set to: 0
  9662  003DBC  0012               	return		;funcret
  9663  003DBE                     __end_of___wmul:
  9664                           	opt stack 0
  9665                           tblptru	equ	0xFF8
  9666                           tblptrh	equ	0xFF7
  9667                           tblptrl	equ	0xFF6
  9668                           tablat	equ	0xFF5
  9669                           prodh	equ	0xFF4
  9670                           prodl	equ	0xFF3
  9671                           intcon	equ	0xFF2
  9672                           postinc0	equ	0xFEE
  9673                           wreg	equ	0xFE8
  9674                           indf2	equ	0xFDF
  9675                           postinc2	equ	0xFDE
  9676                           postdec2	equ	0xFDD
  9677                           fsr2h	equ	0xFDA
  9678                           fsr2l	equ	0xFD9
  9679                           status	equ	0xFD8
  9680                           
  9681 ;; *************** function ___lwdiv *****************
  9682 ;; Defined at:
  9683 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
  9684 ;; Parameters:    Size  Location     Type
  9685 ;;  dividend        2    0[BANK0 ] unsigned int 
  9686 ;;  divisor         2    2[BANK0 ] unsigned int 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;  quotient        2    5[BANK0 ] unsigned int 
  9689 ;;  counter         1    4[BANK0 ] unsigned char 
  9690 ;; Return value:  Size  Location     Type
  9691 ;;                  2    0[BANK0 ] unsigned int 
  9692 ;; Registers used:
  9693 ;;		wreg, status,2, status,0
  9694 ;; Tracked objects:
  9695 ;;		On entry : F/0
  9696 ;;		On exit  : F/0
  9697 ;;		Unchanged: 0/0
  9698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9699 ;;      Params:         0       4       0       0       0       0       0       0       0
  9700 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9702 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9703 ;;Total ram usage:        7 bytes
  9704 ;; Hardware stack levels used:    1
  9705 ;; Hardware stack levels required when called:   11
  9706 ;; This function calls:
  9707 ;;		Nothing
  9708 ;; This function is called by:
  9709 ;;		_moteApp_add16bToDataBuffer
  9710 ;;		_oled_putUint16
  9711 ;;		_ADC_TempConversion
  9712 ;;		_sprintf
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           	psect	text27
  9717  004242                     __ptext27:
  9718                           	opt stack 0
  9719  004242                     ___lwdiv:
  9720                           	opt stack 16
  9721                           
  9722                           ; BSR set to: 0
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;incstack = 0
  9726  004242  6B65               	clrf	___lwdiv@quotient& (0+255),b
  9727  004244  6B66               	clrf	(___lwdiv@quotient+1)& (0+255),b
  9728                           
  9729                           ; BSR set to: 0
  9730  004246  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9731  004248  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  9732  00424A  E01B               	bz	l2303
  9733                           
  9734                           ; BSR set to: 0
  9735  00424C  0E01               	movlw	1
  9736  00424E  6F64               	movwf	___lwdiv@counter& (0+255),b
  9737  004250  D004               	goto	l9623
  9738  004252                     l9621:
  9739                           
  9740                           ; BSR set to: 0
  9741  004252  90D8               	bcf	status,0,c
  9742  004254  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  9743  004256  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9744  004258  2B64               	incf	___lwdiv@counter& (0+255),f,b
  9745  00425A                     l9623:
  9746                           
  9747                           ; BSR set to: 0
  9748  00425A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  9749  00425C  D7FA               	goto	l9621
  9750  00425E                     l9625:
  9751                           
  9752                           ; BSR set to: 0
  9753  00425E  90D8               	bcf	status,0,c
  9754  004260  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  9755  004262  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9756                           
  9757                           ; BSR set to: 0
  9758  004264  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9759  004266  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  9760  004268  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9761  00426A  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9762  00426C  E305               	bnc	l9633
  9763                           
  9764                           ; BSR set to: 0
  9765  00426E  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9766  004270  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  9767  004272  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9768  004274  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9769                           
  9770                           ; BSR set to: 0
  9771  004276  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  9772  004278                     l9633:
  9773                           
  9774                           ; BSR set to: 0
  9775  004278  90D8               	bcf	status,0,c
  9776  00427A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9777  00427C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  9778                           
  9779                           ; BSR set to: 0
  9780  00427E  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  9781  004280  D7EE               	goto	l9625
  9782  004282                     l2303:
  9783                           
  9784                           ; BSR set to: 0
  9785  004282  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  9786  004286  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9787                           
  9788                           ; BSR set to: 0
  9789  00428A  0012               	return		;funcret
  9790  00428C                     __end_of___lwdiv:
  9791                           	opt stack 0
  9792                           tblptru	equ	0xFF8
  9793                           tblptrh	equ	0xFF7
  9794                           tblptrl	equ	0xFF6
  9795                           tablat	equ	0xFF5
  9796                           prodh	equ	0xFF4
  9797                           prodl	equ	0xFF3
  9798                           intcon	equ	0xFF2
  9799                           postinc0	equ	0xFEE
  9800                           wreg	equ	0xFE8
  9801                           indf2	equ	0xFDF
  9802                           postinc2	equ	0xFDE
  9803                           postdec2	equ	0xFDD
  9804                           fsr2h	equ	0xFDA
  9805                           fsr2l	equ	0xFD9
  9806                           status	equ	0xFD8
  9807                           
  9808 ;; *************** function _sendCommand *****************
  9809 ;; Defined at:
  9810 ;;		line 960 in file "../Includes/Board/MOTEapp.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9813 ;;		 -> STR_104(26), STR_103(26), STR_102(26), STR_101(26), 
  9814 ;;		 -> STR_100(1), STR_99(9), STR_98(13), STR_97(13), 
  9815 ;;		 -> STR_96(13), STR_95(13), STR_94(13), STR_93(13), 
  9816 ;;		 -> STR_92(13), STR_91(13), STR_90(16), STR_89(15), 
  9817 ;;		 -> STR_80(10), STR_72(11), moteJoiningProcess@buf(50), STR_67(10), 
  9818 ;;		 -> STR_64(17), STR_61(18), STR_58(16), STR_55(17), 
  9819 ;;		 -> STR_52(17), STR_49(18), STR_46(20), STR_43(20), 
  9820 ;;		 -> STR_40(18), STR_37(17), STR_34(19), STR_29(12), 
  9821 ;;		 -> STR_22(20), STR_21(2), 
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;		None
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  1    wreg      void 
  9826 ;; Registers used:
  9827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : F/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9833 ;;      Params:         0       2       0       0       0       0       0       0       0
  9834 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9835 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9836 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9837 ;;Total ram usage:        2 bytes
  9838 ;; Hardware stack levels used:    1
  9839 ;; Hardware stack levels required when called:   13
  9840 ;; This function calls:
  9841 ;;		_EUSART_Write
  9842 ;;		_EndLine
  9843 ;; This function is called by:
  9844 ;;		_modemResync
  9845 ;;		_modemSleep
  9846 ;;		_moteJoiningProcess
  9847 ;; This function uses a non-reentrant model
  9848 ;;
  9849                           
  9850                           	psect	text28
  9851  00446A                     __ptext28:
  9852                           	opt stack 0
  9853  00446A                     _sendCommand:
  9854                           	opt stack 13
  9855                           
  9856                           ; BSR set to: 0
  9857                           ;MOTEapp.c: 963: while (*string)
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;incstack = 0
  9861  00446A  D015               	goto	l9309
  9862  00446C                     l9305:
  9863                           
  9864                           ;MOTEapp.c: 964: {
  9865                           ;MOTEapp.c: 965: EUSART_Write(*string++);
  9866  00446C  C061  FFF6         	movff	sendCommand@string,tblptrl
  9867  004470  C062  FFF7         	movff	sendCommand@string+1,tblptrh
  9868  004474  6AF8               	clrf	tblptru,c
  9869  004476  0E07               	movlw	(high __ramtop+-1)
  9870  004478  64F7               	cpfsgt	tblptrh,c
  9871  00447A  D003               	bra	u8087
  9872  00447C  0008               	tblrd		*
  9873  00447E  50F5               	movf	tablat,w,c
  9874  004480  D005               	bra	u8080
  9875  004482                     u8087:
  9876  004482  CFF6 FFE1          	movff	tblptrl,fsr1l
  9877  004486  CFF7 FFE2          	movff	tblptrh,fsr1h
  9878  00448A  50E7               	movf	indf1,w,c
  9879  00448C                     u8080:
  9880  00448C  ECFB  F01F         	call	_EUSART_Write
  9881  004490  0100               	movlb	0	; () banked
  9882  004492  4B61               	infsnz	sendCommand@string& (0+255),f,b
  9883  004494  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
  9884  004496                     l9309:
  9885                           
  9886                           ; BSR set to: 0
  9887  004496  C061  FFF6         	movff	sendCommand@string,tblptrl
  9888  00449A  C062  FFF7         	movff	sendCommand@string+1,tblptrh
  9889  00449E  6AF8               	clrf	tblptru,c
  9890  0044A0  0E07               	movlw	(high __ramtop+-1)
  9891  0044A2  64F7               	cpfsgt	tblptrh,c
  9892  0044A4  D003               	bra	u8097
  9893  0044A6  0008               	tblrd		*
  9894  0044A8  50F5               	movf	tablat,w,c
  9895  0044AA  D005               	bra	u8090
  9896  0044AC                     u8097:
  9897  0044AC  CFF6 FFE1          	movff	tblptrl,fsr1l
  9898  0044B0  CFF7 FFE2          	movff	tblptrh,fsr1h
  9899  0044B4  50E7               	movf	indf1,w,c
  9900  0044B6                     u8090:
  9901  0044B6  0900               	iorlw	0
  9902  0044B8  E1D9               	bnz	l9305
  9903                           
  9904                           ;MOTEapp.c: 966: }
  9905                           ;MOTEapp.c: 967: EndLine();
  9906  0044BA  EFAC  F01D         	goto	_EndLine	;wreg free
  9907  0044BE                     __end_of_sendCommand:
  9908                           	opt stack 0
  9909                           tblptru	equ	0xFF8
  9910                           tblptrh	equ	0xFF7
  9911                           tblptrl	equ	0xFF6
  9912                           tablat	equ	0xFF5
  9913                           prodh	equ	0xFF4
  9914                           prodl	equ	0xFF3
  9915                           intcon	equ	0xFF2
  9916                           postinc0	equ	0xFEE
  9917                           wreg	equ	0xFE8
  9918                           indf1	equ	0xFE7
  9919                           fsr1h	equ	0xFE2
  9920                           fsr1l	equ	0xFE1
  9921                           indf2	equ	0xFDF
  9922                           postinc2	equ	0xFDE
  9923                           postdec2	equ	0xFDD
  9924                           fsr2h	equ	0xFDA
  9925                           fsr2l	equ	0xFD9
  9926                           status	equ	0xFD8
  9927                           
  9928 ;; *************** function _EndLine *****************
  9929 ;; Defined at:
  9930 ;;		line 954 in file "../Includes/Board/MOTEapp.c"
  9931 ;; Parameters:    Size  Location     Type
  9932 ;;		None
  9933 ;; Auto vars:     Size  Location     Type
  9934 ;;		None
  9935 ;; Return value:  Size  Location     Type
  9936 ;;                  1    wreg      void 
  9937 ;; Registers used:
  9938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9944 ;;      Params:         0       0       0       0       0       0       0       0       0
  9945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9947 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9948 ;;Total ram usage:        0 bytes
  9949 ;; Hardware stack levels used:    1
  9950 ;; Hardware stack levels required when called:   12
  9951 ;; This function calls:
  9952 ;;		_EUSART_Write
  9953 ;; This function is called by:
  9954 ;;		_sendCommand
  9955 ;;		_sendDataCommand
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           	psect	text29
  9960  003B58                     __ptext29:
  9961                           	opt stack 0
  9962  003B58                     _EndLine:
  9963                           	opt stack 15
  9964                           
  9965                           ;MOTEapp.c: 956: EUSART_Write(0x0D);
  9966                           
  9967                           ;incstack = 0
  9968  003B58  0E0D               	movlw	13
  9969  003B5A  ECFB  F01F         	call	_EUSART_Write
  9970                           
  9971                           ;MOTEapp.c: 957: EUSART_Write(0x0A);
  9972  003B5E  0E0A               	movlw	10
  9973  003B60  EFFB  F01F         	goto	_EUSART_Write
  9974  003B64                     __end_of_EndLine:
  9975                           	opt stack 0
  9976                           tblptru	equ	0xFF8
  9977                           tblptrh	equ	0xFF7
  9978                           tblptrl	equ	0xFF6
  9979                           tablat	equ	0xFF5
  9980                           prodh	equ	0xFF4
  9981                           prodl	equ	0xFF3
  9982                           intcon	equ	0xFF2
  9983                           postinc0	equ	0xFEE
  9984                           wreg	equ	0xFE8
  9985                           indf1	equ	0xFE7
  9986                           fsr1h	equ	0xFE2
  9987                           fsr1l	equ	0xFE1
  9988                           indf2	equ	0xFDF
  9989                           postinc2	equ	0xFDE
  9990                           postdec2	equ	0xFDD
  9991                           fsr2h	equ	0xFDA
  9992                           fsr2l	equ	0xFD9
  9993                           status	equ	0xFD8
  9994                           
  9995 ;; *************** function _oled_init *****************
  9996 ;; Defined at:
  9997 ;;		line 308 in file "../Includes/Drivers/SSD1306oLED.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;		None
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;		None
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  1    wreg      void 
 10004 ;; Registers used:
 10005 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/1
 10008 ;;		On exit  : F/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10011 ;;      Params:         0       0       0       0       0       0       0       0       0
 10012 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10013 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10014 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10015 ;;Total ram usage:        0 bytes
 10016 ;; Hardware stack levels used:    1
 10017 ;; Hardware stack levels required when called:   17
 10018 ;; This function calls:
 10019 ;;		_oled_clear
 10020 ;;		_oled_devInit
 10021 ;;		_oled_setDisplay
 10022 ;;		_oled_setFont
 10023 ;; This function is called by:
 10024 ;;		_main
 10025 ;;		_moteJoiningProcess
 10026 ;;		_moteApp_GoToSleep
 10027 ;; This function uses a non-reentrant model
 10028 ;;
 10029                           
 10030                           	psect	text30
 10031  003D30                     __ptext30:
 10032                           	opt stack 0
 10033  003D30                     _oled_init:
 10034                           	opt stack 13
 10035                           
 10036                           ;SSD1306oLED.c: 311: TRISBbits.TRISB2=0;
 10037                           
 10038                           ;incstack = 0
 10039  003D30  9493               	bcf	3987,2,c	;volatile
 10040                           
 10041                           ;SSD1306oLED.c: 312: TRISBbits.TRISB4=0;
 10042  003D32  9893               	bcf	3987,4,c	;volatile
 10043                           
 10044                           ;SSD1306oLED.c: 313: TRISBbits.TRISB5=0;
 10045  003D34  9A93               	bcf	3987,5,c	;volatile
 10046                           
 10047                           ;SSD1306oLED.c: 315: oled_devInit();
 10048  003D36  ECB0  F02A         	call	_oled_devInit	;wreg free
 10049                           
 10050                           ;SSD1306oLED.c: 316: oled_setDisplay(Normal);
 10051  003D3A  0E00               	movlw	0
 10052  003D3C  EC02  F01E         	call	_oled_setDisplay
 10053                           
 10054                           ;SSD1306oLED.c: 318: oled_setFont(OledFont0);
 10055  003D40  0E99               	movlw	low _OledFont0
 10056  003D42  0100               	movlb	0	; () banked
 10057  003D44  6F60               	movwf	oled_setFont@font& (0+255),b
 10058  003D46  0E77               	movlw	high _OledFont0
 10059  003D48  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
 10060  003D4A  ECD2  F01D         	call	_oled_setFont	;wreg free
 10061                           
 10062                           ; BSR set to: 0
 10063                           ;SSD1306oLED.c: 319: oled_clear();
 10064  003D4E  EF22  F01E         	goto	_oled_clear	;wreg free
 10065  003D52                     __end_of_oled_init:
 10066                           	opt stack 0
 10067                           tblptru	equ	0xFF8
 10068                           tblptrh	equ	0xFF7
 10069                           tblptrl	equ	0xFF6
 10070                           tablat	equ	0xFF5
 10071                           prodh	equ	0xFF4
 10072                           prodl	equ	0xFF3
 10073                           intcon	equ	0xFF2
 10074                           postinc0	equ	0xFEE
 10075                           wreg	equ	0xFE8
 10076                           indf1	equ	0xFE7
 10077                           fsr1h	equ	0xFE2
 10078                           fsr1l	equ	0xFE1
 10079                           indf2	equ	0xFDF
 10080                           postinc2	equ	0xFDE
 10081                           postdec2	equ	0xFDD
 10082                           fsr2h	equ	0xFDA
 10083                           fsr2l	equ	0xFD9
 10084                           status	equ	0xFD8
 10085                           
 10086 ;; *************** function _oled_setFont *****************
 10087 ;; Defined at:
 10088 ;;		line 218 in file "../Includes/Drivers/SSD1306oLED.c"
 10089 ;; Parameters:    Size  Location     Type
 10090 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 10091 ;;		 -> OledFont0(768), 
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;		None
 10094 ;; Return value:  Size  Location     Type
 10095 ;;                  1    wreg      void 
 10096 ;; Registers used:
 10097 ;;		wreg, status,2, status,0
 10098 ;; Tracked objects:
 10099 ;;		On entry : F/0
 10100 ;;		On exit  : F/0
 10101 ;;		Unchanged: 0/0
 10102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10103 ;;      Params:         0       2       0       0       0       0       0       0       0
 10104 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10105 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10106 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10107 ;;Total ram usage:        2 bytes
 10108 ;; Hardware stack levels used:    1
 10109 ;; Hardware stack levels required when called:   11
 10110 ;; This function calls:
 10111 ;;		Nothing
 10112 ;; This function is called by:
 10113 ;;		_oled_init
 10114 ;; This function uses a non-reentrant model
 10115 ;;
 10116                           
 10117                           	psect	text31
 10118  003BA4                     __ptext31:
 10119                           	opt stack 0
 10120  003BA4                     _oled_setFont:
 10121                           	opt stack 18
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;SSD1306oLED.c: 220: if(font!=0)
 10125                           
 10126                           ; BSR set to: 0
 10127                           ;incstack = 0
 10128  003BA4  5160               	movf	oled_setFont@font& (0+255),w,b
 10129  003BA6  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 10130  003BA8  B4D8               	btfsc	status,2,c
 10131  003BAA  0012               	return	
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;SSD1306oLED.c: 221: {
 10135                           ;SSD1306oLED.c: 222: selectedFont=font;
 10136  003BAC  C060  F1FD         	movff	oled_setFont@font,_selectedFont
 10137  003BB0  C061  F1FE         	movff	oled_setFont@font+1,_selectedFont+1
 10138                           
 10139                           ; BSR set to: 0
 10140  003BB4  0012               	return		;funcret
 10141  003BB6                     __end_of_oled_setFont:
 10142                           	opt stack 0
 10143                           tblptru	equ	0xFF8
 10144                           tblptrh	equ	0xFF7
 10145                           tblptrl	equ	0xFF6
 10146                           tablat	equ	0xFF5
 10147                           prodh	equ	0xFF4
 10148                           prodl	equ	0xFF3
 10149                           intcon	equ	0xFF2
 10150                           postinc0	equ	0xFEE
 10151                           wreg	equ	0xFE8
 10152                           indf1	equ	0xFE7
 10153                           fsr1h	equ	0xFE2
 10154                           fsr1l	equ	0xFE1
 10155                           indf2	equ	0xFDF
 10156                           postinc2	equ	0xFDE
 10157                           postdec2	equ	0xFDD
 10158                           fsr2h	equ	0xFDA
 10159                           fsr2l	equ	0xFD9
 10160                           status	equ	0xFD8
 10161                           
 10162 ;; *************** function _oled_setDisplay *****************
 10163 ;; Defined at:
 10164 ;;		line 383 in file "../Includes/Drivers/SSD1306oLED.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;  displayType     1    wreg     enum E6298
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;  displayType     1    2[BANK0 ] enum E6298
 10169 ;; Return value:  Size  Location     Type
 10170 ;;                  1    wreg      void 
 10171 ;; Registers used:
 10172 ;;		wreg, status,2, status,0, cstack
 10173 ;; Tracked objects:
 10174 ;;		On entry : 0/1
 10175 ;;		On exit  : 0/0
 10176 ;;		Unchanged: 0/0
 10177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10178 ;;      Params:         0       0       0       0       0       0       0       0       0
 10179 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10180 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10181 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10182 ;;Total ram usage:        1 bytes
 10183 ;; Hardware stack levels used:    1
 10184 ;; Hardware stack levels required when called:   13
 10185 ;; This function calls:
 10186 ;;		_oled_writeCommand
 10187 ;; This function is called by:
 10188 ;;		_oled_init
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           	psect	text32
 10193  003C04                     __ptext32:
 10194                           	opt stack 0
 10195  003C04                     _oled_setDisplay:
 10196                           	opt stack 16
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;incstack = 0
 10200                           ;oled_setDisplay@displayType stored from wreg
 10201  003C04  0100               	movlb	0	; () banked
 10202  003C06  6F62               	movwf	oled_setDisplay@displayType& (0+255),b
 10203                           
 10204                           ;SSD1306oLED.c: 385: displayType = 0xA6 + displayType;
 10205  003C08  0EA6               	movlw	166
 10206  003C0A  2762               	addwf	oled_setDisplay@displayType& (0+255),f,b
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;SSD1306oLED.c: 387: LATBbits.LATB4 = 0;
 10210  003C0C  988A               	bcf	3978,4,c	;volatile
 10211                           
 10212                           ; BSR set to: 0
 10213                           ;SSD1306oLED.c: 389: oled_writeCommand(displayType);
 10214  003C0E  5162               	movf	oled_setDisplay@displayType& (0+255),w,b
 10215  003C10  ECA0  F01D         	call	_oled_writeCommand
 10216                           
 10217                           ;SSD1306oLED.c: 391: LATBbits.LATB4 = 1;
 10218  003C14  888A               	bsf	3978,4,c	;volatile
 10219  003C16  0012               	return		;funcret
 10220  003C18                     __end_of_oled_setDisplay:
 10221                           	opt stack 0
 10222                           tblptru	equ	0xFF8
 10223                           tblptrh	equ	0xFF7
 10224                           tblptrl	equ	0xFF6
 10225                           tablat	equ	0xFF5
 10226                           prodh	equ	0xFF4
 10227                           prodl	equ	0xFF3
 10228                           intcon	equ	0xFF2
 10229                           postinc0	equ	0xFEE
 10230                           wreg	equ	0xFE8
 10231                           indf1	equ	0xFE7
 10232                           fsr1h	equ	0xFE2
 10233                           fsr1l	equ	0xFE1
 10234                           indf2	equ	0xFDF
 10235                           postinc2	equ	0xFDE
 10236                           postdec2	equ	0xFDD
 10237                           fsr2h	equ	0xFDA
 10238                           fsr2l	equ	0xFD9
 10239                           status	equ	0xFD8
 10240                           
 10241 ;; *************** function _oled_devInit *****************
 10242 ;; Defined at:
 10243 ;;		line 322 in file "../Includes/Drivers/SSD1306oLED.c"
 10244 ;; Parameters:    Size  Location     Type
 10245 ;;		None
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;		None
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  1    wreg      void 
 10250 ;; Registers used:
 10251 ;;		wreg, status,2, cstack
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/1
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10257 ;;      Params:         0       0       0       0       0       0       0       0       0
 10258 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10259 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10260 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10261 ;;Total ram usage:        1 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:   13
 10264 ;; This function calls:
 10265 ;;		_oled_writeCommand
 10266 ;; This function is called by:
 10267 ;;		_oled_init
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text33
 10272  005560                     __ptext33:
 10273                           	opt stack 0
 10274  005560                     _oled_devInit:
 10275                           	opt stack 16
 10276                           
 10277                           ;SSD1306oLED.c: 324: LATBbits.LATB4 = 1;
 10278                           
 10279                           ;incstack = 0
 10280  005560  888A               	bsf	3978,4,c	;volatile
 10281                           
 10282                           ;SSD1306oLED.c: 326: LATBbits.LATB5 = 1;
 10283  005562  8A8A               	bsf	3978,5,c	;volatile
 10284                           
 10285                           ;SSD1306oLED.c: 330: LATBbits.LATB2 = 1;
 10286  005564  848A               	bsf	3978,2,c	;volatile
 10287                           
 10288                           ;SSD1306oLED.c: 331: _delay((unsigned long)((20)*(48000000/4000000.0)));
 10289  005566  0E50               	movlw	80
 10290  005568                     u10677:
 10291  005568  2EE8               	decfsz	wreg,f,c
 10292  00556A  D7FE               	goto	u10677
 10293                           
 10294                           ;SSD1306oLED.c: 332: LATBbits.LATB2 = 0;
 10295  00556C  948A               	bcf	3978,2,c	;volatile
 10296                           
 10297                           ;SSD1306oLED.c: 333: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10298  00556E  0E04               	movlw	4
 10299  005570  0100               	movlb	0	; () banked
 10300  005572  6F62               	movwf	??_oled_devInit& (0+255),b
 10301  005574  0E1C               	movlw	28
 10302  005576                     u10687:
 10303  005576  2EE8               	decfsz	wreg,f,c
 10304  005578  D7FE               	goto	u10687
 10305  00557A  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 10306  00557C  D7FC               	goto	u10687
 10307  00557E  D000               	nop2	
 10308                           
 10309                           ;SSD1306oLED.c: 334: LATBbits.LATB2 = 1;
 10310  005580  848A               	bsf	3978,2,c	;volatile
 10311                           
 10312                           ;SSD1306oLED.c: 336: LATBbits.LATB4 = 0;
 10313  005582  988A               	bcf	3978,4,c	;volatile
 10314                           
 10315                           ;SSD1306oLED.c: 337: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10316  005584  0E04               	movlw	4
 10317  005586  0100               	movlb	0	; () banked
 10318  005588  6F62               	movwf	??_oled_devInit& (0+255),b
 10319  00558A  0E1C               	movlw	28
 10320  00558C                     u10697:
 10321  00558C  2EE8               	decfsz	wreg,f,c
 10322  00558E  D7FE               	goto	u10697
 10323  005590  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 10324  005592  D7FC               	goto	u10697
 10325  005594  D000               	nop2	
 10326                           
 10327                           ;SSD1306oLED.c: 338: LATBbits.LATB5 = 0;
 10328  005596  9A8A               	bcf	3978,5,c	;volatile
 10329                           
 10330                           ;SSD1306oLED.c: 339: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10331  005598  0E04               	movlw	4
 10332  00559A  0100               	movlb	0	; () banked
 10333  00559C  6F62               	movwf	??_oled_devInit& (0+255),b
 10334  00559E  0E1C               	movlw	28
 10335  0055A0                     u10707:
 10336  0055A0  2EE8               	decfsz	wreg,f,c
 10337  0055A2  D7FE               	goto	u10707
 10338  0055A4  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 10339  0055A6  D7FC               	goto	u10707
 10340  0055A8  D000               	nop2	
 10341                           
 10342                           ;SSD1306oLED.c: 342: oled_writeCommand(0xAE);
 10343  0055AA  0EAE               	movlw	174
 10344  0055AC  ECA0  F01D         	call	_oled_writeCommand
 10345                           
 10346                           ;SSD1306oLED.c: 344: oled_writeCommand(0xD5);
 10347  0055B0  0ED5               	movlw	213
 10348  0055B2  ECA0  F01D         	call	_oled_writeCommand
 10349                           
 10350                           ;SSD1306oLED.c: 345: oled_writeCommand(0x80);
 10351  0055B6  0E80               	movlw	128
 10352  0055B8  ECA0  F01D         	call	_oled_writeCommand
 10353                           
 10354                           ;SSD1306oLED.c: 347: oled_writeCommand(0xA8);
 10355  0055BC  0EA8               	movlw	168
 10356  0055BE  ECA0  F01D         	call	_oled_writeCommand
 10357                           
 10358                           ;SSD1306oLED.c: 348: oled_writeCommand(0x1F);
 10359  0055C2  0E1F               	movlw	31
 10360  0055C4  ECA0  F01D         	call	_oled_writeCommand
 10361                           
 10362                           ;SSD1306oLED.c: 350: oled_writeCommand(0xD3);
 10363  0055C8  0ED3               	movlw	211
 10364  0055CA  ECA0  F01D         	call	_oled_writeCommand
 10365                           
 10366                           ;SSD1306oLED.c: 351: oled_writeCommand(0x00);
 10367  0055CE  0E00               	movlw	0
 10368  0055D0  ECA0  F01D         	call	_oled_writeCommand
 10369                           
 10370                           ;SSD1306oLED.c: 353: oled_writeCommand(0x8D);
 10371  0055D4  0E8D               	movlw	141
 10372  0055D6  ECA0  F01D         	call	_oled_writeCommand
 10373                           
 10374                           ;SSD1306oLED.c: 354: oled_writeCommand(0x14);
 10375  0055DA  0E14               	movlw	20
 10376  0055DC  ECA0  F01D         	call	_oled_writeCommand
 10377                           
 10378                           ;SSD1306oLED.c: 356: oled_writeCommand(0x40);
 10379  0055E0  0E40               	movlw	64
 10380  0055E2  ECA0  F01D         	call	_oled_writeCommand
 10381                           
 10382                           ;SSD1306oLED.c: 358: oled_writeCommand(0xA6);
 10383  0055E6  0EA6               	movlw	166
 10384  0055E8  ECA0  F01D         	call	_oled_writeCommand
 10385                           
 10386                           ;SSD1306oLED.c: 360: oled_writeCommand(0xA4);
 10387  0055EC  0EA4               	movlw	164
 10388  0055EE  ECA0  F01D         	call	_oled_writeCommand
 10389                           
 10390                           ;SSD1306oLED.c: 362: oled_writeCommand(0xA0);
 10391  0055F2  0EA0               	movlw	160
 10392  0055F4  ECA0  F01D         	call	_oled_writeCommand
 10393                           
 10394                           ;SSD1306oLED.c: 364: oled_writeCommand(0xC0);
 10395  0055F8  0EC0               	movlw	192
 10396  0055FA  ECA0  F01D         	call	_oled_writeCommand
 10397                           
 10398                           ;SSD1306oLED.c: 366: oled_writeCommand(0xDA);
 10399  0055FE  0EDA               	movlw	218
 10400  005600  ECA0  F01D         	call	_oled_writeCommand
 10401                           
 10402                           ;SSD1306oLED.c: 367: oled_writeCommand(0x42);
 10403  005604  0E42               	movlw	66
 10404  005606  ECA0  F01D         	call	_oled_writeCommand
 10405                           
 10406                           ;SSD1306oLED.c: 369: oled_writeCommand(0x81);
 10407  00560A  0E81               	movlw	129
 10408  00560C  ECA0  F01D         	call	_oled_writeCommand
 10409                           
 10410                           ;SSD1306oLED.c: 370: oled_writeCommand(0x7F);
 10411  005610  0E7F               	movlw	127
 10412  005612  ECA0  F01D         	call	_oled_writeCommand
 10413                           
 10414                           ;SSD1306oLED.c: 372: oled_writeCommand(0xD9);
 10415  005616  0ED9               	movlw	217
 10416  005618  ECA0  F01D         	call	_oled_writeCommand
 10417                           
 10418                           ;SSD1306oLED.c: 373: oled_writeCommand(0xF1);
 10419  00561C  0EF1               	movlw	241
 10420  00561E  ECA0  F01D         	call	_oled_writeCommand
 10421                           
 10422                           ;SSD1306oLED.c: 375: oled_writeCommand(0xDB);
 10423  005622  0EDB               	movlw	219
 10424  005624  ECA0  F01D         	call	_oled_writeCommand
 10425                           
 10426                           ;SSD1306oLED.c: 376: oled_writeCommand(0x40);
 10427  005628  0E40               	movlw	64
 10428  00562A  ECA0  F01D         	call	_oled_writeCommand
 10429                           
 10430                           ;SSD1306oLED.c: 378: oled_writeCommand(0xAF);
 10431  00562E  0EAF               	movlw	175
 10432  005630  ECA0  F01D         	call	_oled_writeCommand
 10433                           
 10434                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 1;
 10435  005634  888A               	bsf	3978,4,c	;volatile
 10436  005636  0012               	return		;funcret
 10437  005638                     __end_of_oled_devInit:
 10438                           	opt stack 0
 10439                           tblptru	equ	0xFF8
 10440                           tblptrh	equ	0xFF7
 10441                           tblptrl	equ	0xFF6
 10442                           tablat	equ	0xFF5
 10443                           prodh	equ	0xFF4
 10444                           prodl	equ	0xFF3
 10445                           intcon	equ	0xFF2
 10446                           postinc0	equ	0xFEE
 10447                           wreg	equ	0xFE8
 10448                           indf1	equ	0xFE7
 10449                           fsr1h	equ	0xFE2
 10450                           fsr1l	equ	0xFE1
 10451                           indf2	equ	0xFDF
 10452                           postinc2	equ	0xFDE
 10453                           postdec2	equ	0xFDD
 10454                           fsr2h	equ	0xFDA
 10455                           fsr2l	equ	0xFD9
 10456                           status	equ	0xFD8
 10457                           
 10458 ;; *************** function _nibble2int *****************
 10459 ;; Defined at:
 10460 ;;		line 110 in file "../Includes/Board/MOTEapp.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;  c               1    wreg     unsigned char 
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;  c               1    0[BANK0 ] unsigned char 
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  1    wreg      unsigned char 
 10467 ;; Registers used:
 10468 ;;		wreg, status,2, status,0
 10469 ;; Tracked objects:
 10470 ;;		On entry : F/1
 10471 ;;		On exit  : F/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10474 ;;      Params:         0       0       0       0       0       0       0       0       0
 10475 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10476 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10477 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10478 ;;Total ram usage:        1 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:   11
 10481 ;; This function calls:
 10482 ;;		Nothing
 10483 ;; This function is called by:
 10484 ;;		_moteJoiningProcess
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text34
 10489  004142                     __ptext34:
 10490                           	opt stack 0
 10491  004142                     _nibble2int:
 10492                           	opt stack 17
 10493                           
 10494                           ;incstack = 0
 10495                           ;nibble2int@c stored from wreg
 10496  004142  0100               	movlb	0	; () banked
 10497  004144  6F60               	movwf	nibble2int@c& (0+255),b
 10498                           
 10499                           ;MOTEapp.c: 112: if (c>='0' && c<='9') {
 10500  004146  0E2F               	movlw	47
 10501  004148  6560               	cpfsgt	nibble2int@c& (0+255),b
 10502  00414A  D006               	goto	l9693
 10503                           
 10504                           ; BSR set to: 0
 10505  00414C  0E3A               	movlw	58
 10506  00414E  6160               	cpfslt	nibble2int@c& (0+255),b
 10507  004150  D003               	goto	l9693
 10508                           
 10509                           ; BSR set to: 0
 10510                           ;MOTEapp.c: 113: return c-'0';
 10511  004152  5160               	movf	nibble2int@c& (0+255),w,b
 10512  004154  0FD0               	addlw	208
 10513  004156  0012               	return	
 10514  004158                     l9693:
 10515                           
 10516                           ; BSR set to: 0
 10517  004158  0E40               	movlw	64
 10518  00415A  6560               	cpfsgt	nibble2int@c& (0+255),b
 10519  00415C  D006               	goto	l9703
 10520                           
 10521                           ; BSR set to: 0
 10522  00415E  0E47               	movlw	71
 10523  004160  6160               	cpfslt	nibble2int@c& (0+255),b
 10524  004162  D003               	goto	l9703
 10525                           
 10526                           ; BSR set to: 0
 10527                           ;MOTEapp.c: 115: return 10+c-'A';
 10528  004164  5160               	movf	nibble2int@c& (0+255),w,b
 10529  004166  0FC9               	addlw	201
 10530  004168  0012               	return	
 10531  00416A                     l9703:
 10532                           
 10533                           ; BSR set to: 0
 10534  00416A  0E60               	movlw	96
 10535  00416C  6560               	cpfsgt	nibble2int@c& (0+255),b
 10536  00416E  0C00               	retlw	0
 10537                           
 10538                           ; BSR set to: 0
 10539  004170  0E67               	movlw	103
 10540  004172  6160               	cpfslt	nibble2int@c& (0+255),b
 10541  004174  0C00               	retlw	0
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;MOTEapp.c: 117: return 10+c-'a';
 10545  004176  5160               	movf	nibble2int@c& (0+255),w,b
 10546  004178  0FA9               	addlw	169
 10547  00417A  0012               	return	
 10548  00417C                     __end_of_nibble2int:
 10549                           	opt stack 0
 10550                           tblptru	equ	0xFF8
 10551                           tblptrh	equ	0xFF7
 10552                           tblptrl	equ	0xFF6
 10553                           tablat	equ	0xFF5
 10554                           prodh	equ	0xFF4
 10555                           prodl	equ	0xFF3
 10556                           intcon	equ	0xFF2
 10557                           postinc0	equ	0xFEE
 10558                           wreg	equ	0xFE8
 10559                           indf1	equ	0xFE7
 10560                           fsr1h	equ	0xFE2
 10561                           fsr1l	equ	0xFE1
 10562                           indf2	equ	0xFDF
 10563                           postinc2	equ	0xFDE
 10564                           postdec2	equ	0xFDD
 10565                           fsr2h	equ	0xFDA
 10566                           fsr2l	equ	0xFD9
 10567                           status	equ	0xFD8
 10568                           
 10569 ;; *************** function _moteApp_delayms *****************
 10570 ;; Defined at:
 10571 ;;		line 1150 in file "../Includes/Board/MOTEapp.c"
 10572 ;; Parameters:    Size  Location     Type
 10573 ;;  length          2    0[BANK0 ] unsigned int 
 10574 ;; Auto vars:     Size  Location     Type
 10575 ;;  counter         2    3[BANK0 ] unsigned int 
 10576 ;; Return value:  Size  Location     Type
 10577 ;;                  1    wreg      void 
 10578 ;; Registers used:
 10579 ;;		wreg, status,2, status,0
 10580 ;; Tracked objects:
 10581 ;;		On entry : F/0
 10582 ;;		On exit  : F/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10585 ;;      Params:         0       2       0       0       0       0       0       0       0
 10586 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10587 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10588 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10589 ;;Total ram usage:        5 bytes
 10590 ;; Hardware stack levels used:    1
 10591 ;; Hardware stack levels required when called:   11
 10592 ;; This function calls:
 10593 ;;		Nothing
 10594 ;; This function is called by:
 10595 ;;		_main
 10596 ;;		_modemResync
 10597 ;;		_modemSleep
 10598 ;;		_moteHandler
 10599 ;;		_moteJoiningProcess
 10600 ;;		_moteRunningProcess
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604                           	psect	text35
 10605  003E0C                     __ptext35:
 10606                           	opt stack 0
 10607  003E0C                     _moteApp_delayms:
 10608                           	opt stack 17
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;MOTEapp.c: 1152: uint16_t counter;
 10612                           ;MOTEapp.c: 1153: for(counter = 0; counter < length; counter++)
 10613                           
 10614                           ; BSR set to: 0
 10615                           ;incstack = 0
 10616  003E0C  6B63               	clrf	moteApp_delayms@counter& (0+255),b
 10617  003E0E  6B64               	clrf	(moteApp_delayms@counter+1)& (0+255),b
 10618  003E10  D00B               	goto	l606
 10619  003E12                     l9297:
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;MOTEapp.c: 1154: {
 10623                           ;MOTEapp.c: 1155: _delay((unsigned long)((1)*(48000000/4000.0)));
 10624  003E12  0E10               	movlw	16
 10625  003E14  6F62               	movwf	??_moteApp_delayms& (0+255),b
 10626  003E16  0E94               	movlw	148
 10627  003E18                     u10717:
 10628  003E18  2EE8               	decfsz	wreg,f,c
 10629  003E1A  D7FE               	goto	u10717
 10630  003E1C  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 10631  003E1E  D7FC               	goto	u10717
 10632  003E20  D000               	nop2	
 10633  003E22  0100               	movlb	0	; () banked
 10634  003E24  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 10635  003E26  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 10636  003E28                     l606:
 10637                           
 10638                           ; BSR set to: 0
 10639  003E28  5160               	movf	moteApp_delayms@length& (0+255),w,b
 10640  003E2A  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 10641  003E2C  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 10642  003E2E  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 10643  003E30  E3F0               	bnc	l9297
 10644                           
 10645                           ; BSR set to: 0
 10646  003E32  0012               	return		;funcret
 10647  003E34                     __end_of_moteApp_delayms:
 10648                           	opt stack 0
 10649                           tblptru	equ	0xFF8
 10650                           tblptrh	equ	0xFF7
 10651                           tblptrl	equ	0xFF6
 10652                           tablat	equ	0xFF5
 10653                           prodh	equ	0xFF4
 10654                           prodl	equ	0xFF3
 10655                           intcon	equ	0xFF2
 10656                           postinc0	equ	0xFEE
 10657                           wreg	equ	0xFE8
 10658                           indf1	equ	0xFE7
 10659                           fsr1h	equ	0xFE2
 10660                           fsr1l	equ	0xFE1
 10661                           indf2	equ	0xFDF
 10662                           postinc2	equ	0xFDE
 10663                           postdec2	equ	0xFDD
 10664                           fsr2h	equ	0xFDA
 10665                           fsr2l	equ	0xFD9
 10666                           status	equ	0xFD8
 10667                           
 10668 ;; *************** function ___xxtofl *****************
 10669 ;; Defined at:
 10670 ;;		line 10 in file "/opt/microchip/xc8/v1.36/sources/common/xxtofl.c"
 10671 ;; Parameters:    Size  Location     Type
 10672 ;;  sign            1    wreg     unsigned char 
 10673 ;;  val             4    0[BANK0 ] long 
 10674 ;; Auto vars:     Size  Location     Type
 10675 ;;  sign            1    8[BANK0 ] unsigned char 
 10676 ;;  arg             4   10[BANK0 ] unsigned long 
 10677 ;;  exp             1    9[BANK0 ] unsigned char 
 10678 ;; Return value:  Size  Location     Type
 10679 ;;                  4    0[BANK0 ] unsigned char 
 10680 ;; Registers used:
 10681 ;;		wreg, status,2, status,0
 10682 ;; Tracked objects:
 10683 ;;		On entry : F/0
 10684 ;;		On exit  : F/0
 10685 ;;		Unchanged: 0/0
 10686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10687 ;;      Params:         0       4       0       0       0       0       0       0       0
 10688 ;;      Locals:         0       6       0       0       0       0       0       0       0
 10689 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10690 ;;      Totals:         0      14       0       0       0       0       0       0       0
 10691 ;;Total ram usage:       14 bytes
 10692 ;; Hardware stack levels used:    1
 10693 ;; Hardware stack levels required when called:   11
 10694 ;; This function calls:
 10695 ;;		Nothing
 10696 ;; This function is called by:
 10697 ;;		_moteJoiningProcess
 10698 ;; This function uses a non-reentrant model
 10699 ;;
 10700                           
 10701                           	psect	text36
 10702  005DDE                     __ptext36:
 10703                           	opt stack 0
 10704  005DDE                     ___xxtofl:
 10705                           	opt stack 17
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;incstack = 0
 10709                           ;___xxtofl@sign stored from wreg
 10710  005DDE  6F68               	movwf	___xxtofl@sign& (0+255),b
 10711  005DE0  0100               	movlb	0	; () banked
 10712  005DE2  5168               	movf	___xxtofl@sign& (0+255),w,b
 10713  005DE4  E01C               	bz	l2473
 10714                           
 10715                           ; BSR set to: 0
 10716  005DE6  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10717  005DE8  D01A               	goto	l2473
 10718                           
 10719                           ; BSR set to: 0
 10720  005DEA  C060  F064         	movff	___xxtofl@val,??___xxtofl
 10721  005DEE  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 10722  005DF2  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 10723  005DF6  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 10724  005DFA  1F64               	comf	??___xxtofl& (0+255),f,b
 10725  005DFC  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 10726  005DFE  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 10727  005E00  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 10728  005E02  2B64               	incf	??___xxtofl& (0+255),f,b
 10729  005E04  0E00               	movlw	0
 10730  005E06  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10731  005E08  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10732  005E0A  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10733  005E0C  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 10734  005E10  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 10735  005E14  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 10736  005E18  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 10737  005E1C  D008               	goto	l10493
 10738  005E1E                     l2473:
 10739                           
 10740                           ; BSR set to: 0
 10741  005E1E  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 10742  005E22  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10743  005E26  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10744  005E2A  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10745  005E2E                     l10493:
 10746                           
 10747                           ; BSR set to: 0
 10748  005E2E  5160               	movf	___xxtofl@val& (0+255),w,b
 10749  005E30  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10750  005E32  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10751  005E34  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10752  005E36  E105               	bnz	l10497
 10753                           
 10754                           ; BSR set to: 0
 10755  005E38  6B60               	clrf	?___xxtofl& (0+255),b
 10756  005E3A  6B61               	clrf	(?___xxtofl+1)& (0+255),b
 10757  005E3C  6B62               	clrf	(?___xxtofl+2)& (0+255),b
 10758  005E3E  6B63               	clrf	(?___xxtofl+3)& (0+255),b
 10759  005E40  0012               	return	
 10760  005E42                     l10497:
 10761                           
 10762                           ; BSR set to: 0
 10763  005E42  0E96               	movlw	150
 10764  005E44  6F69               	movwf	___xxtofl@exp& (0+255),b
 10765  005E46  D006               	goto	l10501
 10766  005E48                     l10499:
 10767                           
 10768                           ; BSR set to: 0
 10769  005E48  2B69               	incf	___xxtofl@exp& (0+255),f,b
 10770  005E4A  90D8               	bcf	status,0,c
 10771  005E4C  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10772  005E4E  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10773  005E50  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10774  005E52  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 10775  005E54                     l10501:
 10776                           
 10777                           ; BSR set to: 0
 10778  005E54  6B64               	clrf	??___xxtofl& (0+255),b
 10779  005E56  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 10780  005E58  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 10781  005E5A  0EFE               	movlw	254
 10782  005E5C  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10783  005E5E  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 10784  005E60  5164               	movf	??___xxtofl& (0+255),w,b
 10785  005E62  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10786  005E64  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10787  005E66  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10788  005E68  E00C               	bz	l2480
 10789  005E6A  D7EE               	goto	l10499
 10790  005E6C                     l10503:
 10791                           
 10792                           ; BSR set to: 0
 10793  005E6C  2B69               	incf	___xxtofl@exp& (0+255),f,b
 10794                           
 10795                           ; BSR set to: 0
 10796  005E6E  2B6A               	incf	___xxtofl@arg& (0+255),f,b
 10797  005E70  0E00               	movlw	0
 10798  005E72  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10799  005E74  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10800  005E76  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10801                           
 10802                           ; BSR set to: 0
 10803  005E78  90D8               	bcf	status,0,c
 10804  005E7A  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10805  005E7C  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10806  005E7E  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10807  005E80  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 10808  005E82                     l2480:
 10809                           
 10810                           ; BSR set to: 0
 10811  005E82  6B64               	clrf	??___xxtofl& (0+255),b
 10812  005E84  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 10813  005E86  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 10814  005E88  516D               	movf	(___xxtofl@arg+3)& (0+255),w,b
 10815  005E8A  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 10816  005E8C  5164               	movf	??___xxtofl& (0+255),w,b
 10817  005E8E  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10818  005E90  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10819  005E92  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10820  005E94  E007               	bz	l10511
 10821  005E96  D7EA               	goto	l10503
 10822  005E98                     l10509:
 10823                           
 10824                           ; BSR set to: 0
 10825  005E98  0769               	decf	___xxtofl@exp& (0+255),f,b
 10826  005E9A  90D8               	bcf	status,0,c
 10827  005E9C  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 10828  005E9E  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10829  005EA0  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10830  005EA2  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10831  005EA4                     l10511:
 10832                           
 10833                           ; BSR set to: 0
 10834  005EA4  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10835  005EA6  D003               	goto	l2487
 10836                           
 10837                           ; BSR set to: 0
 10838  005EA8  0E02               	movlw	2
 10839  005EAA  6169               	cpfslt	___xxtofl@exp& (0+255),b
 10840  005EAC  D7F5               	goto	l10509
 10841  005EAE                     l2487:
 10842                           
 10843                           ; BSR set to: 0
 10844  005EAE  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 10845  005EB0  D002               	goto	l2488
 10846                           
 10847                           ; BSR set to: 0
 10848  005EB2  0E7F               	movlw	127
 10849  005EB4  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10850  005EB6                     l2488:
 10851                           
 10852                           ; BSR set to: 0
 10853  005EB6  90D8               	bcf	status,0,c
 10854  005EB8  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 10855  005EBA  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 10856  005EBE  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 10857  005EC0  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 10858  005EC2  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 10859  005EC4  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 10860  005EC8  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 10861  005ECA  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 10862  005ECC  6B64               	clrf	??___xxtofl& (0+255),b
 10863  005ECE  5164               	movf	??___xxtofl& (0+255),w,b
 10864  005ED0  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 10865  005ED2  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 10866  005ED4  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10867  005ED6  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 10868  005ED8  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10869  005EDA  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 10870  005EDC  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10871                           
 10872                           ; BSR set to: 0
 10873  005EDE  5168               	movf	___xxtofl@sign& (0+255),w,b
 10874  005EE0  E002               	bz	l10523
 10875                           
 10876                           ; BSR set to: 0
 10877  005EE2  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 10878                           
 10879                           ; BSR set to: 0
 10880  005EE4  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10881  005EE6                     l10523:
 10882                           
 10883                           ; BSR set to: 0
 10884  005EE6  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 10885  005EEA  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 10886  005EEE  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 10887  005EF2  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 10888                           
 10889                           ; BSR set to: 0
 10890  005EF6  0012               	return		;funcret
 10891  005EF8                     __end_of___xxtofl:
 10892                           	opt stack 0
 10893                           tblptru	equ	0xFF8
 10894                           tblptrh	equ	0xFF7
 10895                           tblptrl	equ	0xFF6
 10896                           tablat	equ	0xFF5
 10897                           prodh	equ	0xFF4
 10898                           prodl	equ	0xFF3
 10899                           intcon	equ	0xFF2
 10900                           postinc0	equ	0xFEE
 10901                           wreg	equ	0xFE8
 10902                           indf1	equ	0xFE7
 10903                           fsr1h	equ	0xFE2
 10904                           fsr1l	equ	0xFE1
 10905                           indf2	equ	0xFDF
 10906                           postinc2	equ	0xFDE
 10907                           postdec2	equ	0xFDD
 10908                           fsr2h	equ	0xFDA
 10909                           fsr2l	equ	0xFD9
 10910                           status	equ	0xFD8
 10911                           
 10912 ;; *************** function ___fltol *****************
 10913 ;; Defined at:
 10914 ;;		line 43 in file "/opt/microchip/xc8/v1.36/sources/common/fltol.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;  f1              4   64[BANK0 ] unsigned char 
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;  exp1            1   73[BANK0 ] unsigned char 
 10919 ;;  sign1           1   72[BANK0 ] unsigned char 
 10920 ;; Return value:  Size  Location     Type
 10921 ;;                  4   64[BANK0 ] long 
 10922 ;; Registers used:
 10923 ;;		wreg, status,2, status,0
 10924 ;; Tracked objects:
 10925 ;;		On entry : F/0
 10926 ;;		On exit  : F/0
 10927 ;;		Unchanged: 0/0
 10928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10929 ;;      Params:         0       4       0       0       0       0       0       0       0
 10930 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10931 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10932 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10933 ;;Total ram usage:       10 bytes
 10934 ;; Hardware stack levels used:    1
 10935 ;; Hardware stack levels required when called:   11
 10936 ;; This function calls:
 10937 ;;		Nothing
 10938 ;; This function is called by:
 10939 ;;		_moteJoiningProcess
 10940 ;; This function uses a non-reentrant model
 10941 ;;
 10942                           
 10943                           	psect	text37
 10944  004C5E                     __ptext37:
 10945                           	opt stack 0
 10946  004C5E                     ___fltol:
 10947                           	opt stack 17
 10948                           
 10949                           ; BSR set to: 0
 10950                           
 10951                           ; BSR set to: 0
 10952                           ;incstack = 0
 10953  004C5E  35A2               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10954  004C60  35A3               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10955  004C62  6FA9               	movwf	___fltol@exp1& (0+255),b
 10956  004C64  51A9               	movf	___fltol@exp1& (0+255),w,b
 10957  004C66  E105               	bnz	l10453
 10958  004C68                     l10451:
 10959                           
 10960                           ; BSR set to: 0
 10961  004C68  6BA0               	clrf	?___fltol& (0+255),b
 10962  004C6A  6BA1               	clrf	(?___fltol+1)& (0+255),b
 10963  004C6C  6BA2               	clrf	(?___fltol+2)& (0+255),b
 10964  004C6E  6BA3               	clrf	(?___fltol+3)& (0+255),b
 10965  004C70  0012               	return	
 10966  004C72                     l10453:
 10967                           
 10968                           ; BSR set to: 0
 10969  004C72  C0A0  F0A4         	movff	___fltol@f1,??___fltol
 10970  004C76  C0A1  F0A5         	movff	___fltol@f1+1,??___fltol+1
 10971  004C7A  C0A2  F0A6         	movff	___fltol@f1+2,??___fltol+2
 10972  004C7E  C0A3  F0A7         	movff	___fltol@f1+3,??___fltol+3
 10973  004C82  0E20               	movlw	32
 10974  004C84  D005               	goto	u9500
 10975  004C86                     u9505:
 10976  004C86  90D8               	bcf	status,0,c
 10977  004C88  33A7               	rrcf	(??___fltol+3)& (0+255),f,b
 10978  004C8A  33A6               	rrcf	(??___fltol+2)& (0+255),f,b
 10979  004C8C  33A5               	rrcf	(??___fltol+1)& (0+255),f,b
 10980  004C8E  33A4               	rrcf	??___fltol& (0+255),f,b
 10981  004C90                     u9500:
 10982  004C90  2EE8               	decfsz	wreg,f,c
 10983  004C92  D7F9               	goto	u9505
 10984  004C94  51A4               	movf	??___fltol& (0+255),w,b
 10985  004C96  6FA8               	movwf	___fltol@sign1& (0+255),b
 10986                           
 10987                           ; BSR set to: 0
 10988  004C98  8FA2               	bsf	(___fltol@f1+2)& (0+255),7,b
 10989                           
 10990                           ; BSR set to: 0
 10991  004C9A  6BA3               	clrf	(___fltol@f1+3)& (0+255),b
 10992                           
 10993                           ; BSR set to: 0
 10994  004C9C  0E96               	movlw	150
 10995  004C9E  5FA9               	subwf	___fltol@exp1& (0+255),f,b
 10996                           
 10997                           ; BSR set to: 0
 10998  004CA0  AFA9               	btfss	___fltol@exp1& (0+255),7,b
 10999  004CA2  D00C               	goto	l10471
 11000                           
 11001                           ; BSR set to: 0
 11002  004CA4  51A9               	movf	___fltol@exp1& (0+255),w,b
 11003  004CA6  0A80               	xorlw	128
 11004  004CA8  0F97               	addlw	151
 11005  004CAA  E3DE               	bnc	l10451
 11006  004CAC                     l10467:
 11007                           
 11008                           ; BSR set to: 0
 11009  004CAC  90D8               	bcf	status,0,c
 11010  004CAE  33A3               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11011  004CB0  33A2               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11012  004CB2  33A1               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11013  004CB4  33A0               	rrcf	___fltol@f1& (0+255),f,b
 11014                           
 11015                           ; BSR set to: 0
 11016  004CB6  3FA9               	incfsz	___fltol@exp1& (0+255),f,b
 11017  004CB8  D7F9               	goto	l10467
 11018  004CBA  D00C               	goto	l10479
 11019  004CBC                     l10471:
 11020                           
 11021                           ; BSR set to: 0
 11022  004CBC  0E1F               	movlw	31
 11023  004CBE  65A9               	cpfsgt	___fltol@exp1& (0+255),b
 11024  004CC0  D007               	goto	l10477
 11025  004CC2  D7D2               	goto	l10451
 11026  004CC4                     l10475:
 11027                           
 11028                           ; BSR set to: 0
 11029  004CC4  90D8               	bcf	status,0,c
 11030  004CC6  37A0               	rlcf	___fltol@f1& (0+255),f,b
 11031  004CC8  37A1               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11032  004CCA  37A2               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11033  004CCC  37A3               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11034  004CCE  07A9               	decf	___fltol@exp1& (0+255),f,b
 11035  004CD0                     l10477:
 11036                           
 11037                           ; BSR set to: 0
 11038  004CD0  51A9               	movf	___fltol@exp1& (0+255),w,b
 11039  004CD2  E1F8               	bnz	l10475
 11040  004CD4                     l10479:
 11041                           
 11042                           ; BSR set to: 0
 11043  004CD4  51A8               	movf	___fltol@sign1& (0+255),w,b
 11044  004CD6  E008               	bz	l10483
 11045                           
 11046                           ; BSR set to: 0
 11047  004CD8  1FA3               	comf	(___fltol@f1+3)& (0+255),f,b
 11048  004CDA  1FA2               	comf	(___fltol@f1+2)& (0+255),f,b
 11049  004CDC  1FA1               	comf	(___fltol@f1+1)& (0+255),f,b
 11050  004CDE  6DA0               	negf	___fltol@f1& (0+255),b
 11051  004CE0  0E00               	movlw	0
 11052  004CE2  23A1               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11053  004CE4  23A2               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11054  004CE6  23A3               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11055  004CE8                     l10483:
 11056                           
 11057                           ; BSR set to: 0
 11058  004CE8  C0A0  F0A0         	movff	___fltol@f1,?___fltol
 11059  004CEC  C0A1  F0A1         	movff	___fltol@f1+1,?___fltol+1
 11060  004CF0  C0A2  F0A2         	movff	___fltol@f1+2,?___fltol+2
 11061  004CF4  C0A3  F0A3         	movff	___fltol@f1+3,?___fltol+3
 11062                           
 11063                           ; BSR set to: 0
 11064  004CF8  0012               	return		;funcret
 11065  004CFA                     __end_of___fltol:
 11066                           	opt stack 0
 11067                           tblptru	equ	0xFF8
 11068                           tblptrh	equ	0xFF7
 11069                           tblptrl	equ	0xFF6
 11070                           tablat	equ	0xFF5
 11071                           prodh	equ	0xFF4
 11072                           prodl	equ	0xFF3
 11073                           intcon	equ	0xFF2
 11074                           postinc0	equ	0xFEE
 11075                           wreg	equ	0xFE8
 11076                           indf1	equ	0xFE7
 11077                           fsr1h	equ	0xFE2
 11078                           fsr1l	equ	0xFE1
 11079                           indf2	equ	0xFDF
 11080                           postinc2	equ	0xFDE
 11081                           postdec2	equ	0xFDD
 11082                           fsr2h	equ	0xFDA
 11083                           fsr2l	equ	0xFD9
 11084                           status	equ	0xFD8
 11085                           
 11086 ;; *************** function ___flmul *****************
 11087 ;; Defined at:
 11088 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/sprcmul.c"
 11089 ;; Parameters:    Size  Location     Type
 11090 ;;  b               4   14[BANK0 ] long 
 11091 ;;  a               4   18[BANK0 ] long 
 11092 ;; Auto vars:     Size  Location     Type
 11093 ;;  prod            4   33[BANK0 ] struct .
 11094 ;;  grs             4   29[BANK0 ] unsigned long 
 11095 ;;  temp            2   37[BANK0 ] struct .
 11096 ;;  bexp            1   28[BANK0 ] unsigned char 
 11097 ;;  aexp            1   27[BANK0 ] unsigned char 
 11098 ;;  sign            1   26[BANK0 ] unsigned char 
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  4   14[BANK0 ] unsigned char 
 11101 ;; Registers used:
 11102 ;;		wreg, status,2, status,0, prodl, prodh
 11103 ;; Tracked objects:
 11104 ;;		On entry : F/0
 11105 ;;		On exit  : F/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11108 ;;      Params:         0       8       0       0       0       0       0       0       0
 11109 ;;      Locals:         0      13       0       0       0       0       0       0       0
 11110 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11111 ;;      Totals:         0      25       0       0       0       0       0       0       0
 11112 ;;Total ram usage:       25 bytes
 11113 ;; Hardware stack levels used:    1
 11114 ;; Hardware stack levels required when called:   11
 11115 ;; This function calls:
 11116 ;;		Nothing
 11117 ;; This function is called by:
 11118 ;;		_moteJoiningProcess
 11119 ;; This function uses a non-reentrant model
 11120 ;;
 11121                           
 11122                           	psect	text38
 11123  0068D6                     __ptext38:
 11124                           	opt stack 0
 11125  0068D6                     ___flmul:
 11126                           	opt stack 17
 11127                           
 11128                           ; BSR set to: 0
 11129                           
 11130                           ; BSR set to: 0
 11131                           ;incstack = 0
 11132  0068D6  5171               	movf	(___flmul@b+3)& (0+255),w,b
 11133  0068D8  0B80               	andlw	128
 11134  0068DA  6F7A               	movwf	___flmul@sign& (0+255),b
 11135  0068DC  5171               	movf	(___flmul@b+3)& (0+255),w,b
 11136  0068DE  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 11137  0068E0  6F7C               	movwf	___flmul@bexp& (0+255),b
 11138                           
 11139                           ; BSR set to: 0
 11140  0068E2  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 11141                           
 11142                           ; BSR set to: 0
 11143  0068E4  817C               	bsf	___flmul@bexp& (0+255),0,b
 11144                           
 11145                           ; BSR set to: 0
 11146  0068E6  517C               	movf	___flmul@bexp& (0+255),w,b
 11147  0068E8  E008               	bz	l2426
 11148                           
 11149                           ; BSR set to: 0
 11150  0068EA  297C               	incf	___flmul@bexp& (0+255),w,b
 11151  0068EC  E104               	bnz	l10343
 11152                           
 11153                           ; BSR set to: 0
 11154  0068EE  6B6E               	clrf	___flmul@b& (0+255),b
 11155  0068F0  6B6F               	clrf	(___flmul@b+1)& (0+255),b
 11156  0068F2  6B70               	clrf	(___flmul@b+2)& (0+255),b
 11157  0068F4  6B71               	clrf	(___flmul@b+3)& (0+255),b
 11158  0068F6                     l10343:
 11159                           
 11160                           ; BSR set to: 0
 11161  0068F6  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 11162  0068F8  D004               	goto	l10345
 11163  0068FA                     l2426:
 11164                           
 11165                           ; BSR set to: 0
 11166  0068FA  6B6E               	clrf	___flmul@b& (0+255),b
 11167  0068FC  6B6F               	clrf	(___flmul@b+1)& (0+255),b
 11168  0068FE  6B70               	clrf	(___flmul@b+2)& (0+255),b
 11169  006900  6B71               	clrf	(___flmul@b+3)& (0+255),b
 11170  006902                     l10345:
 11171                           
 11172                           ; BSR set to: 0
 11173  006902  5175               	movf	(___flmul@a+3)& (0+255),w,b
 11174  006904  0B80               	andlw	128
 11175  006906  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 11176  006908  5175               	movf	(___flmul@a+3)& (0+255),w,b
 11177  00690A  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 11178  00690C  6F7B               	movwf	___flmul@aexp& (0+255),b
 11179                           
 11180                           ; BSR set to: 0
 11181  00690E  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 11182                           
 11183                           ; BSR set to: 0
 11184  006910  817B               	bsf	___flmul@aexp& (0+255),0,b
 11185                           
 11186                           ; BSR set to: 0
 11187  006912  517B               	movf	___flmul@aexp& (0+255),w,b
 11188  006914  E008               	bz	l2430
 11189                           
 11190                           ; BSR set to: 0
 11191  006916  297B               	incf	___flmul@aexp& (0+255),w,b
 11192  006918  E104               	bnz	l10357
 11193                           
 11194                           ; BSR set to: 0
 11195  00691A  6B72               	clrf	___flmul@a& (0+255),b
 11196  00691C  6B73               	clrf	(___flmul@a+1)& (0+255),b
 11197  00691E  6B74               	clrf	(___flmul@a+2)& (0+255),b
 11198  006920  6B75               	clrf	(___flmul@a+3)& (0+255),b
 11199  006922                     l10357:
 11200                           
 11201                           ; BSR set to: 0
 11202  006922  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 11203  006924  D004               	goto	l10359
 11204  006926                     l2430:
 11205                           
 11206                           ; BSR set to: 0
 11207  006926  6B72               	clrf	___flmul@a& (0+255),b
 11208  006928  6B73               	clrf	(___flmul@a+1)& (0+255),b
 11209  00692A  6B74               	clrf	(___flmul@a+2)& (0+255),b
 11210  00692C  6B75               	clrf	(___flmul@a+3)& (0+255),b
 11211  00692E                     l10359:
 11212                           
 11213                           ; BSR set to: 0
 11214  00692E  517B               	movf	___flmul@aexp& (0+255),w,b
 11215  006930  E002               	bz	l2435
 11216                           
 11217                           ; BSR set to: 0
 11218  006932  517C               	movf	___flmul@bexp& (0+255),w,b
 11219  006934  E105               	bnz	l10363
 11220  006936                     l2435:
 11221                           
 11222                           ; BSR set to: 0
 11223  006936  6B6E               	clrf	?___flmul& (0+255),b
 11224  006938  6B6F               	clrf	(?___flmul+1)& (0+255),b
 11225  00693A  6B70               	clrf	(?___flmul+2)& (0+255),b
 11226  00693C  6B71               	clrf	(?___flmul+3)& (0+255),b
 11227  00693E  0012               	return	
 11228  006940                     l10363:
 11229                           
 11230                           ; BSR set to: 0
 11231  006940  5174               	movf	(___flmul@a+2)& (0+255),w,b
 11232  006942  036E               	mulwf	___flmul@b& (0+255),b
 11233  006944  CFF3 F085          	movff	prodl,___flmul@temp
 11234  006948  CFF4 F086          	movff	prodh,___flmul@temp+1
 11235                           
 11236                           ; BSR set to: 0
 11237  00694C  5185               	movf	___flmul@temp& (0+255),w,b
 11238  00694E  6F7D               	movwf	___flmul@grs& (0+255),b
 11239  006950  6B7E               	clrf	(___flmul@grs+1)& (0+255),b
 11240  006952  6B7F               	clrf	(___flmul@grs+2)& (0+255),b
 11241  006954  6B80               	clrf	(___flmul@grs+3)& (0+255),b
 11242                           
 11243                           ; BSR set to: 0
 11244  006956  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11245  006958  6F81               	movwf	___flmul@prod& (0+255),b
 11246  00695A  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 11247  00695C  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 11248  00695E  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 11249  006960  5173               	movf	(___flmul@a+1)& (0+255),w,b
 11250  006962  036F               	mulwf	(___flmul@b+1)& (0+255),b
 11251  006964  CFF3 F085          	movff	prodl,___flmul@temp
 11252  006968  CFF4 F086          	movff	prodh,___flmul@temp+1
 11253                           
 11254                           ; BSR set to: 0
 11255  00696C  5185               	movf	___flmul@temp& (0+255),w,b
 11256  00696E  277D               	addwf	___flmul@grs& (0+255),f,b
 11257  006970  0E00               	movlw	0
 11258  006972  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11259  006974  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11260  006976  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11261                           
 11262                           ; BSR set to: 0
 11263  006978  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11264  00697A  2781               	addwf	___flmul@prod& (0+255),f,b
 11265  00697C  0E00               	movlw	0
 11266  00697E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11267  006980  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11268  006982  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11269  006984  5172               	movf	___flmul@a& (0+255),w,b
 11270  006986  0370               	mulwf	(___flmul@b+2)& (0+255),b
 11271  006988  CFF3 F085          	movff	prodl,___flmul@temp
 11272  00698C  CFF4 F086          	movff	prodh,___flmul@temp+1
 11273                           
 11274                           ; BSR set to: 0
 11275  006990  5185               	movf	___flmul@temp& (0+255),w,b
 11276  006992  277D               	addwf	___flmul@grs& (0+255),f,b
 11277  006994  0E00               	movlw	0
 11278  006996  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11279  006998  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11280  00699A  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11281                           
 11282                           ; BSR set to: 0
 11283  00699C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11284  00699E  2781               	addwf	___flmul@prod& (0+255),f,b
 11285  0069A0  0E00               	movlw	0
 11286  0069A2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11287  0069A4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11288  0069A6  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11289                           
 11290                           ; BSR set to: 0
 11291  0069A8  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 11292  0069AC  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 11293  0069B0  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 11294  0069B4  6B7D               	clrf	___flmul@grs& (0+255),b
 11295                           
 11296                           ; BSR set to: 0
 11297  0069B6  5172               	movf	___flmul@a& (0+255),w,b
 11298  0069B8  036F               	mulwf	(___flmul@b+1)& (0+255),b
 11299  0069BA  CFF3 F085          	movff	prodl,___flmul@temp
 11300  0069BE  CFF4 F086          	movff	prodh,___flmul@temp+1
 11301                           
 11302                           ; BSR set to: 0
 11303  0069C2  5185               	movf	___flmul@temp& (0+255),w,b
 11304  0069C4  277D               	addwf	___flmul@grs& (0+255),f,b
 11305  0069C6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11306  0069C8  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11307  0069CA  0E00               	movlw	0
 11308  0069CC  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11309  0069CE  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11310                           
 11311                           ; BSR set to: 0
 11312  0069D0  5173               	movf	(___flmul@a+1)& (0+255),w,b
 11313  0069D2  036E               	mulwf	___flmul@b& (0+255),b
 11314  0069D4  CFF3 F085          	movff	prodl,___flmul@temp
 11315  0069D8  CFF4 F086          	movff	prodh,___flmul@temp+1
 11316                           
 11317                           ; BSR set to: 0
 11318  0069DC  5185               	movf	___flmul@temp& (0+255),w,b
 11319  0069DE  277D               	addwf	___flmul@grs& (0+255),f,b
 11320  0069E0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11321  0069E2  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11322  0069E4  0E00               	movlw	0
 11323  0069E6  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11324  0069E8  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11325                           
 11326                           ; BSR set to: 0
 11327  0069EA  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 11328  0069EE  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 11329  0069F2  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 11330  0069F6  6B7D               	clrf	___flmul@grs& (0+255),b
 11331  0069F8  5172               	movf	___flmul@a& (0+255),w,b
 11332  0069FA  036E               	mulwf	___flmul@b& (0+255),b
 11333  0069FC  CFF3 F085          	movff	prodl,___flmul@temp
 11334  006A00  CFF4 F086          	movff	prodh,___flmul@temp+1
 11335                           
 11336                           ; BSR set to: 0
 11337  006A04  5185               	movf	___flmul@temp& (0+255),w,b
 11338  006A06  277D               	addwf	___flmul@grs& (0+255),f,b
 11339  006A08  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11340  006A0A  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11341  006A0C  0E00               	movlw	0
 11342  006A0E  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11343  006A10  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11344                           
 11345                           ; BSR set to: 0
 11346  006A12  5174               	movf	(___flmul@a+2)& (0+255),w,b
 11347  006A14  036F               	mulwf	(___flmul@b+1)& (0+255),b
 11348  006A16  CFF3 F085          	movff	prodl,___flmul@temp
 11349  006A1A  CFF4 F086          	movff	prodh,___flmul@temp+1
 11350  006A1E  5185               	movf	___flmul@temp& (0+255),w,b
 11351  006A20  2781               	addwf	___flmul@prod& (0+255),f,b
 11352  006A22  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11353  006A24  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11354  006A26  0E00               	movlw	0
 11355  006A28  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11356  006A2A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11357                           
 11358                           ; BSR set to: 0
 11359  006A2C  5173               	movf	(___flmul@a+1)& (0+255),w,b
 11360  006A2E  0370               	mulwf	(___flmul@b+2)& (0+255),b
 11361  006A30  CFF3 F085          	movff	prodl,___flmul@temp
 11362  006A34  CFF4 F086          	movff	prodh,___flmul@temp+1
 11363                           
 11364                           ; BSR set to: 0
 11365  006A38  5185               	movf	___flmul@temp& (0+255),w,b
 11366  006A3A  2781               	addwf	___flmul@prod& (0+255),f,b
 11367  006A3C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11368  006A3E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11369  006A40  0E00               	movlw	0
 11370  006A42  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11371  006A44  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11372  006A46  5174               	movf	(___flmul@a+2)& (0+255),w,b
 11373  006A48  0370               	mulwf	(___flmul@b+2)& (0+255),b
 11374  006A4A  CFF3 F085          	movff	prodl,___flmul@temp
 11375  006A4E  CFF4 F086          	movff	prodh,___flmul@temp+1
 11376                           
 11377                           ; BSR set to: 0
 11378  006A52  5185               	movf	___flmul@temp& (0+255),w,b
 11379  006A54  6F76               	movwf	??___flmul& (0+255),b
 11380  006A56  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11381  006A58  6F77               	movwf	(??___flmul+1)& (0+255),b
 11382  006A5A  6B78               	clrf	(??___flmul+2)& (0+255),b
 11383  006A5C  6B79               	clrf	(??___flmul+3)& (0+255),b
 11384  006A5E  C078  F079         	movff	??___flmul+2,??___flmul+3
 11385  006A62  C077  F078         	movff	??___flmul+1,??___flmul+2
 11386  006A66  C076  F077         	movff	??___flmul,??___flmul+1
 11387  006A6A  6B76               	clrf	??___flmul& (0+255),b
 11388  006A6C  5176               	movf	??___flmul& (0+255),w,b
 11389  006A6E  2781               	addwf	___flmul@prod& (0+255),f,b
 11390  006A70  5177               	movf	(??___flmul+1)& (0+255),w,b
 11391  006A72  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11392  006A74  5178               	movf	(??___flmul+2)& (0+255),w,b
 11393  006A76  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11394  006A78  5179               	movf	(??___flmul+3)& (0+255),w,b
 11395  006A7A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11396                           
 11397                           ; BSR set to: 0
 11398  006A7C  5180               	movf	(___flmul@grs+3)& (0+255),w,b
 11399  006A7E  2781               	addwf	___flmul@prod& (0+255),f,b
 11400  006A80  0E00               	movlw	0
 11401  006A82  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11402  006A84  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11403  006A86  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11404                           
 11405                           ; BSR set to: 0
 11406  006A88  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 11407  006A8C  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 11408  006A90  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 11409  006A94  6B7D               	clrf	___flmul@grs& (0+255),b
 11410                           
 11411                           ; BSR set to: 0
 11412  006A96  517B               	movf	___flmul@aexp& (0+255),w,b
 11413  006A98  C07C  F076         	movff	___flmul@bexp,??___flmul
 11414  006A9C  6B77               	clrf	(??___flmul+1)& (0+255),b
 11415  006A9E  2776               	addwf	??___flmul& (0+255),f,b
 11416  006AA0  0E00               	movlw	0
 11417  006AA2  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 11418  006AA4  0E82               	movlw	130
 11419  006AA6  2576               	addwf	??___flmul& (0+255),w,b
 11420  006AA8  6F85               	movwf	___flmul@temp& (0+255),b
 11421  006AAA  0EFF               	movlw	255
 11422  006AAC  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 11423  006AAE  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 11424  006AB0  D00F               	goto	l10411
 11425  006AB2                     l10405:
 11426                           
 11427                           ; BSR set to: 0
 11428  006AB2  90D8               	bcf	status,0,c
 11429  006AB4  3781               	rlcf	___flmul@prod& (0+255),f,b
 11430  006AB6  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 11431  006AB8  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 11432  006ABA  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 11433                           
 11434                           ; BSR set to: 0
 11435  006ABC  BF80               	btfsc	(___flmul@grs+3)& (0+255),7,b
 11436                           
 11437                           ; BSR set to: 0
 11438  006ABE  8181               	bsf	___flmul@prod& (0+255),0,b
 11439                           
 11440                           ; BSR set to: 0
 11441  006AC0  90D8               	bcf	status,0,c
 11442  006AC2  377D               	rlcf	___flmul@grs& (0+255),f,b
 11443  006AC4  377E               	rlcf	(___flmul@grs+1)& (0+255),f,b
 11444  006AC6  377F               	rlcf	(___flmul@grs+2)& (0+255),f,b
 11445  006AC8  3780               	rlcf	(___flmul@grs+3)& (0+255),f,b
 11446  006ACA  0785               	decf	___flmul@temp& (0+255),f,b
 11447  006ACC  A0D8               	btfss	status,0,c
 11448  006ACE  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 11449  006AD0                     l10411:
 11450                           
 11451                           ; BSR set to: 0
 11452  006AD0  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 11453  006AD2  D7EF               	goto	l10405
 11454                           
 11455                           ; BSR set to: 0
 11456  006AD4  6B7B               	clrf	___flmul@aexp& (0+255),b
 11457  006AD6  AF80               	btfss	(___flmul@grs+3)& (0+255),7,b
 11458  006AD8  D013               	goto	l2441
 11459                           
 11460                           ; BSR set to: 0
 11461  006ADA  517D               	movf	___flmul@grs& (0+255),w,b
 11462  006ADC  6F76               	movwf	??___flmul& (0+255),b
 11463  006ADE  517E               	movf	(___flmul@grs+1)& (0+255),w,b
 11464  006AE0  6F77               	movwf	(??___flmul+1)& (0+255),b
 11465  006AE2  517F               	movf	(___flmul@grs+2)& (0+255),w,b
 11466  006AE4  6F78               	movwf	(??___flmul+2)& (0+255),b
 11467  006AE6  0E7F               	movlw	127
 11468  006AE8  1580               	andwf	(___flmul@grs+3)& (0+255),w,b
 11469  006AEA  6F79               	movwf	(??___flmul+3)& (0+255),b
 11470  006AEC  5176               	movf	??___flmul& (0+255),w,b
 11471  006AEE  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 11472  006AF0  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 11473  006AF2  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 11474  006AF4  E003               	bz	l2442
 11475  006AF6                     l10415:
 11476                           
 11477                           ; BSR set to: 0
 11478  006AF6  0E01               	movlw	1
 11479  006AF8  6F7B               	movwf	___flmul@aexp& (0+255),b
 11480  006AFA  D002               	goto	l2441
 11481  006AFC                     l2442:
 11482                           
 11483                           ; BSR set to: 0
 11484  006AFC  B181               	btfsc	___flmul@prod& (0+255),0,b
 11485  006AFE  D7FB               	goto	l10415
 11486  006B00                     l2441:
 11487                           
 11488                           ; BSR set to: 0
 11489  006B00  517B               	movf	___flmul@aexp& (0+255),w,b
 11490  006B02  E00E               	bz	l10427
 11491                           
 11492                           ; BSR set to: 0
 11493  006B04  2B81               	incf	___flmul@prod& (0+255),f,b
 11494  006B06  0E00               	movlw	0
 11495  006B08  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11496  006B0A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11497  006B0C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11498                           
 11499                           ; BSR set to: 0
 11500  006B0E  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 11501  006B10  D007               	goto	l10427
 11502                           
 11503                           ; BSR set to: 0
 11504  006B12  3584               	rlcf	(___flmul@prod+3)& (0+255),w,b
 11505  006B14  3384               	rrcf	(___flmul@prod+3)& (0+255),f,b
 11506  006B16  3383               	rrcf	(___flmul@prod+2)& (0+255),f,b
 11507  006B18  3382               	rrcf	(___flmul@prod+1)& (0+255),f,b
 11508  006B1A  3381               	rrcf	___flmul@prod& (0+255),f,b
 11509                           
 11510                           ; BSR set to: 0
 11511  006B1C  4B85               	infsnz	___flmul@temp& (0+255),f,b
 11512  006B1E  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 11513  006B20                     l10427:
 11514                           
 11515                           ; BSR set to: 0
 11516  006B20  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11517  006B22  D00A               	goto	l10431
 11518  006B24  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11519  006B26  E102               	bnz	u9460
 11520  006B28  2985               	incf	___flmul@temp& (0+255),w,b
 11521  006B2A  E306               	bnc	l10431
 11522  006B2C                     u9460:
 11523                           
 11524                           ; BSR set to: 0
 11525  006B2C  6B81               	clrf	___flmul@prod& (0+255),b
 11526  006B2E  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 11527  006B30  0E80               	movlw	128
 11528  006B32  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 11529  006B34  0E7F               	movlw	127
 11530  006B36  D015               	goto	L17
 11531  006B38                     l10431:
 11532                           
 11533                           ; BSR set to: 0
 11534  006B38  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11535  006B3A  D004               	goto	l10433
 11536  006B3C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11537  006B3E  E108               	bnz	l2449
 11538  006B40  0585               	decf	___flmul@temp& (0+255),w,b
 11539  006B42  E206               	bc	l2449
 11540  006B44                     l10433:
 11541                           
 11542                           ; BSR set to: 0
 11543  006B44  6B81               	clrf	___flmul@prod& (0+255),b
 11544  006B46  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 11545  006B48  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 11546  006B4A  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 11547  006B4C  6B7A               	clrf	___flmul@sign& (0+255),b
 11548  006B4E  D00A               	goto	l10443
 11549  006B50                     l2449:
 11550                           
 11551                           ; BSR set to: 0
 11552  006B50  C085  F07C         	movff	___flmul@temp,___flmul@bexp
 11553                           
 11554                           ; BSR set to: 0
 11555  006B54  0E7F               	movlw	127
 11556  006B56  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 11557  006B58  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 11558                           
 11559                           ; BSR set to: 0
 11560  006B5A  B17C               	btfsc	___flmul@bexp& (0+255),0,b
 11561                           
 11562                           ; BSR set to: 0
 11563  006B5C  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 11564                           
 11565                           ; BSR set to: 0
 11566  006B5E  90D8               	bcf	status,0,c
 11567  006B60  317C               	rrcf	___flmul@bexp& (0+255),w,b
 11568  006B62                     L17:
 11569  006B62  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 11570  006B64                     l10443:
 11571                           
 11572                           ; BSR set to: 0
 11573  006B64  517A               	movf	___flmul@sign& (0+255),w,b
 11574  006B66  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 11575                           
 11576                           ; BSR set to: 0
 11577  006B68  C081  F06E         	movff	___flmul@prod,?___flmul
 11578  006B6C  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 11579  006B70  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 11580  006B74  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 11581                           
 11582                           ; BSR set to: 0
 11583  006B78  0012               	return		;funcret
 11584  006B7A                     __end_of___flmul:
 11585                           	opt stack 0
 11586                           tblptru	equ	0xFF8
 11587                           tblptrh	equ	0xFF7
 11588                           tblptrl	equ	0xFF6
 11589                           tablat	equ	0xFF5
 11590                           prodh	equ	0xFF4
 11591                           prodl	equ	0xFF3
 11592                           intcon	equ	0xFF2
 11593                           postinc0	equ	0xFEE
 11594                           wreg	equ	0xFE8
 11595                           indf1	equ	0xFE7
 11596                           fsr1h	equ	0xFE2
 11597                           fsr1l	equ	0xFE1
 11598                           indf2	equ	0xFDF
 11599                           postinc2	equ	0xFDE
 11600                           postdec2	equ	0xFDD
 11601                           fsr2h	equ	0xFDA
 11602                           fsr2l	equ	0xFD9
 11603                           status	equ	0xFD8
 11604                           
 11605 ;; *************** function ___fldiv *****************
 11606 ;; Defined at:
 11607 ;;		line 11 in file "/opt/microchip/xc8/v1.36/sources/common/sprcdiv.c"
 11608 ;; Parameters:    Size  Location     Type
 11609 ;;  b               4   39[BANK0 ] unsigned char 
 11610 ;;  a               4   43[BANK0 ] unsigned char 
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;  grs             4   58[BANK0 ] unsigned long 
 11613 ;;  rem             4   52[BANK0 ] unsigned long 
 11614 ;;  new_exp         2   56[BANK0 ] int 
 11615 ;;  aexp            1   63[BANK0 ] unsigned char 
 11616 ;;  bexp            1   62[BANK0 ] unsigned char 
 11617 ;;  sign            1   51[BANK0 ] unsigned char 
 11618 ;; Return value:  Size  Location     Type
 11619 ;;                  4   39[BANK0 ] unsigned char 
 11620 ;; Registers used:
 11621 ;;		wreg, status,2, status,0
 11622 ;; Tracked objects:
 11623 ;;		On entry : F/0
 11624 ;;		On exit  : F/0
 11625 ;;		Unchanged: 0/0
 11626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11627 ;;      Params:         0       8       0       0       0       0       0       0       0
 11628 ;;      Locals:         0      13       0       0       0       0       0       0       0
 11629 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11630 ;;      Totals:         0      25       0       0       0       0       0       0       0
 11631 ;;Total ram usage:       25 bytes
 11632 ;; Hardware stack levels used:    1
 11633 ;; Hardware stack levels required when called:   11
 11634 ;; This function calls:
 11635 ;;		Nothing
 11636 ;; This function is called by:
 11637 ;;		_moteJoiningProcess
 11638 ;; This function uses a non-reentrant model
 11639 ;;
 11640                           
 11641                           	psect	text39
 11642  0064C4                     __ptext39:
 11643                           	opt stack 0
 11644  0064C4                     ___fldiv:
 11645                           	opt stack 17
 11646                           
 11647                           ; BSR set to: 0
 11648                           
 11649                           ; BSR set to: 0
 11650                           ;incstack = 0
 11651  0064C4  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 11652  0064C6  0B80               	andlw	128
 11653  0064C8  6F93               	movwf	___fldiv@sign& (0+255),b
 11654  0064CA  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 11655  0064CC  258A               	addwf	(___fldiv@b+3)& (0+255),w,b
 11656  0064CE  6F9E               	movwf	___fldiv@bexp& (0+255),b
 11657                           
 11658                           ; BSR set to: 0
 11659  0064D0  BF89               	btfsc	(___fldiv@b+2)& (0+255),7,b
 11660                           
 11661                           ; BSR set to: 0
 11662  0064D2  819E               	bsf	___fldiv@bexp& (0+255),0,b
 11663                           
 11664                           ; BSR set to: 0
 11665  0064D4  519E               	movf	___fldiv@bexp& (0+255),w,b
 11666  0064D6  E008               	bz	l2392
 11667                           
 11668                           ; BSR set to: 0
 11669  0064D8  299E               	incf	___fldiv@bexp& (0+255),w,b
 11670  0064DA  E104               	bnz	l10223
 11671                           
 11672                           ; BSR set to: 0
 11673  0064DC  6B87               	clrf	___fldiv@b& (0+255),b
 11674  0064DE  6B88               	clrf	(___fldiv@b+1)& (0+255),b
 11675  0064E0  6B89               	clrf	(___fldiv@b+2)& (0+255),b
 11676  0064E2  6B8A               	clrf	(___fldiv@b+3)& (0+255),b
 11677  0064E4                     l10223:
 11678                           
 11679                           ; BSR set to: 0
 11680  0064E4  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 11681  0064E6  D003               	goto	L18
 11682  0064E8                     l2392:
 11683                           
 11684                           ; BSR set to: 0
 11685  0064E8  6B87               	clrf	___fldiv@b& (0+255),b
 11686  0064EA  6B88               	clrf	(___fldiv@b+1)& (0+255),b
 11687  0064EC  6B89               	clrf	(___fldiv@b+2)& (0+255),b
 11688  0064EE                     L18:
 11689  0064EE  6B8A               	clrf	(___fldiv@b+3)& (0+255),b
 11690                           
 11691                           ; BSR set to: 0
 11692  0064F0  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 11693  0064F2  0B80               	andlw	128
 11694  0064F4  1B93               	xorwf	___fldiv@sign& (0+255),f,b
 11695  0064F6  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 11696  0064F8  258E               	addwf	(___fldiv@a+3)& (0+255),w,b
 11697  0064FA  6F9F               	movwf	___fldiv@aexp& (0+255),b
 11698                           
 11699                           ; BSR set to: 0
 11700  0064FC  BF8D               	btfsc	(___fldiv@a+2)& (0+255),7,b
 11701                           
 11702                           ; BSR set to: 0
 11703  0064FE  819F               	bsf	___fldiv@aexp& (0+255),0,b
 11704                           
 11705                           ; BSR set to: 0
 11706  006500  519F               	movf	___fldiv@aexp& (0+255),w,b
 11707  006502  E008               	bz	l2396
 11708                           
 11709                           ; BSR set to: 0
 11710  006504  299F               	incf	___fldiv@aexp& (0+255),w,b
 11711  006506  E104               	bnz	l10239
 11712                           
 11713                           ; BSR set to: 0
 11714  006508  6B8B               	clrf	___fldiv@a& (0+255),b
 11715  00650A  6B8C               	clrf	(___fldiv@a+1)& (0+255),b
 11716  00650C  6B8D               	clrf	(___fldiv@a+2)& (0+255),b
 11717  00650E  6B8E               	clrf	(___fldiv@a+3)& (0+255),b
 11718  006510                     l10239:
 11719                           
 11720                           ; BSR set to: 0
 11721  006510  8F8D               	bsf	(___fldiv@a+2)& (0+255),7,b
 11722  006512  D003               	goto	L19
 11723  006514                     l2396:
 11724                           
 11725                           ; BSR set to: 0
 11726  006514  6B8B               	clrf	___fldiv@a& (0+255),b
 11727  006516  6B8C               	clrf	(___fldiv@a+1)& (0+255),b
 11728  006518  6B8D               	clrf	(___fldiv@a+2)& (0+255),b
 11729  00651A                     L19:
 11730  00651A  6B8E               	clrf	(___fldiv@a+3)& (0+255),b
 11731                           
 11732                           ; BSR set to: 0
 11733  00651C  518B               	movf	___fldiv@a& (0+255),w,b
 11734  00651E  118C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 11735  006520  118D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 11736  006522  118E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 11737  006524  E111               	bnz	l10253
 11738                           
 11739                           ; BSR set to: 0
 11740  006526  6B87               	clrf	___fldiv@b& (0+255),b
 11741  006528  6B88               	clrf	(___fldiv@b+1)& (0+255),b
 11742  00652A  6B89               	clrf	(___fldiv@b+2)& (0+255),b
 11743  00652C  6B8A               	clrf	(___fldiv@b+3)& (0+255),b
 11744                           
 11745                           ; BSR set to: 0
 11746  00652E  0E80               	movlw	128
 11747  006530  1389               	iorwf	(___fldiv@b+2)& (0+255),f,b
 11748  006532  0E7F               	movlw	127
 11749  006534  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11750                           
 11751                           ; BSR set to: 0
 11752  006536  C087  F087         	movff	___fldiv@b,?___fldiv
 11753  00653A  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 11754  00653E  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 11755  006542  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 11756  006546  0012               	return	
 11757  006548                     l10253:
 11758                           
 11759                           ; BSR set to: 0
 11760  006548  519E               	movf	___fldiv@bexp& (0+255),w,b
 11761  00654A  E105               	bnz	l10257
 11762                           
 11763                           ; BSR set to: 0
 11764  00654C  6B87               	clrf	?___fldiv& (0+255),b
 11765  00654E  6B88               	clrf	(?___fldiv+1)& (0+255),b
 11766  006550  6B89               	clrf	(?___fldiv+2)& (0+255),b
 11767  006552  6B8A               	clrf	(?___fldiv+3)& (0+255),b
 11768  006554  0012               	return	
 11769  006556                     l10257:
 11770                           
 11771                           ; BSR set to: 0
 11772  006556  519F               	movf	___fldiv@aexp& (0+255),w,b
 11773  006558  C09E  F08F         	movff	___fldiv@bexp,??___fldiv
 11774  00655C  6B90               	clrf	(??___fldiv+1)& (0+255),b
 11775  00655E  5F8F               	subwf	??___fldiv& (0+255),f,b
 11776  006560  0E00               	movlw	0
 11777  006562  5B90               	subwfb	(??___fldiv+1)& (0+255),f,b
 11778  006564  0E7F               	movlw	127
 11779  006566  258F               	addwf	??___fldiv& (0+255),w,b
 11780  006568  6F98               	movwf	___fldiv@new_exp& (0+255),b
 11781  00656A  0E00               	movlw	0
 11782  00656C  2190               	addwfc	(??___fldiv+1)& (0+255),w,b
 11783  00656E  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11784                           
 11785                           ; BSR set to: 0
 11786  006570  C087  F094         	movff	___fldiv@b,___fldiv@rem
 11787  006574  C088  F095         	movff	___fldiv@b+1,___fldiv@rem+1
 11788  006578  C089  F096         	movff	___fldiv@b+2,___fldiv@rem+2
 11789  00657C  C08A  F097         	movff	___fldiv@b+3,___fldiv@rem+3
 11790                           
 11791                           ; BSR set to: 0
 11792  006580  6B87               	clrf	___fldiv@b& (0+255),b
 11793  006582  6B88               	clrf	(___fldiv@b+1)& (0+255),b
 11794  006584  6B89               	clrf	(___fldiv@b+2)& (0+255),b
 11795  006586  6B8A               	clrf	(___fldiv@b+3)& (0+255),b
 11796                           
 11797                           ; BSR set to: 0
 11798  006588  6B9A               	clrf	___fldiv@grs& (0+255),b
 11799  00658A  6B9B               	clrf	(___fldiv@grs+1)& (0+255),b
 11800  00658C  6B9C               	clrf	(___fldiv@grs+2)& (0+255),b
 11801  00658E  6B9D               	clrf	(___fldiv@grs+3)& (0+255),b
 11802                           
 11803                           ; BSR set to: 0
 11804  006590  6B9F               	clrf	___fldiv@aexp& (0+255),b
 11805  006592  D026               	goto	l2402
 11806  006594                     l10267:
 11807                           
 11808                           ; BSR set to: 0
 11809  006594  519F               	movf	___fldiv@aexp& (0+255),w,b
 11810  006596  E011               	bz	l10275
 11811                           
 11812                           ; BSR set to: 0
 11813  006598  90D8               	bcf	status,0,c
 11814  00659A  3794               	rlcf	___fldiv@rem& (0+255),f,b
 11815  00659C  3795               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11816  00659E  3796               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11817  0065A0  3797               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11818  0065A2  90D8               	bcf	status,0,c
 11819  0065A4  3787               	rlcf	___fldiv@b& (0+255),f,b
 11820  0065A6  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11821  0065A8  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11822  0065AA  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11823                           
 11824                           ; BSR set to: 0
 11825  0065AC  BF9D               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 11826                           
 11827                           ; BSR set to: 0
 11828  0065AE  8187               	bsf	___fldiv@b& (0+255),0,b
 11829                           
 11830                           ; BSR set to: 0
 11831  0065B0  90D8               	bcf	status,0,c
 11832  0065B2  379A               	rlcf	___fldiv@grs& (0+255),f,b
 11833  0065B4  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11834  0065B6  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11835  0065B8  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11836  0065BA                     l10275:
 11837                           
 11838                           ; BSR set to: 0
 11839  0065BA  518B               	movf	___fldiv@a& (0+255),w,b
 11840  0065BC  5D94               	subwf	___fldiv@rem& (0+255),w,b
 11841  0065BE  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 11842  0065C0  5995               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 11843  0065C2  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 11844  0065C4  5996               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 11845  0065C6  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 11846  0065C8  5997               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 11847  0065CA  E309               	bnc	l10281
 11848                           
 11849                           ; BSR set to: 0
 11850  0065CC  8D9D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 11851                           
 11852                           ; BSR set to: 0
 11853  0065CE  518B               	movf	___fldiv@a& (0+255),w,b
 11854  0065D0  5F94               	subwf	___fldiv@rem& (0+255),f,b
 11855  0065D2  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 11856  0065D4  5B95               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 11857  0065D6  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 11858  0065D8  5B96               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 11859  0065DA  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 11860  0065DC  5B97               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 11861  0065DE                     l10281:
 11862                           
 11863                           ; BSR set to: 0
 11864  0065DE  2B9F               	incf	___fldiv@aexp& (0+255),f,b
 11865  0065E0                     l2402:
 11866                           
 11867                           ; BSR set to: 0
 11868  0065E0  0E19               	movlw	25
 11869  0065E2  659F               	cpfsgt	___fldiv@aexp& (0+255),b
 11870  0065E4  D7D7               	goto	l10267
 11871                           
 11872                           ; BSR set to: 0
 11873  0065E6  5194               	movf	___fldiv@rem& (0+255),w,b
 11874  0065E8  1195               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 11875  0065EA  1196               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 11876  0065EC  1197               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 11877  0065EE  E011               	bz	l10293
 11878                           
 11879                           ; BSR set to: 0
 11880  0065F0  819A               	bsf	___fldiv@grs& (0+255),0,b
 11881  0065F2  D00F               	goto	l10293
 11882  0065F4                     l10287:
 11883                           
 11884                           ; BSR set to: 0
 11885  0065F4  90D8               	bcf	status,0,c
 11886  0065F6  3787               	rlcf	___fldiv@b& (0+255),f,b
 11887  0065F8  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11888  0065FA  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11889  0065FC  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11890                           
 11891                           ; BSR set to: 0
 11892  0065FE  BF9D               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 11893                           
 11894                           ; BSR set to: 0
 11895  006600  8187               	bsf	___fldiv@b& (0+255),0,b
 11896                           
 11897                           ; BSR set to: 0
 11898  006602  90D8               	bcf	status,0,c
 11899  006604  379A               	rlcf	___fldiv@grs& (0+255),f,b
 11900  006606  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11901  006608  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11902  00660A  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11903  00660C  0798               	decf	___fldiv@new_exp& (0+255),f,b
 11904  00660E  A0D8               	btfss	status,0,c
 11905  006610  0799               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 11906  006612                     l10293:
 11907                           
 11908                           ; BSR set to: 0
 11909  006612  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 11910  006614  D7EF               	goto	l10287
 11911                           
 11912                           ; BSR set to: 0
 11913  006616  6B9F               	clrf	___fldiv@aexp& (0+255),b
 11914  006618  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11915  00661A  D013               	goto	l2413
 11916                           
 11917                           ; BSR set to: 0
 11918  00661C  519A               	movf	___fldiv@grs& (0+255),w,b
 11919  00661E  6F8F               	movwf	??___fldiv& (0+255),b
 11920  006620  519B               	movf	(___fldiv@grs+1)& (0+255),w,b
 11921  006622  6F90               	movwf	(??___fldiv+1)& (0+255),b
 11922  006624  519C               	movf	(___fldiv@grs+2)& (0+255),w,b
 11923  006626  6F91               	movwf	(??___fldiv+2)& (0+255),b
 11924  006628  0E7F               	movlw	127
 11925  00662A  159D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 11926  00662C  6F92               	movwf	(??___fldiv+3)& (0+255),b
 11927  00662E  518F               	movf	??___fldiv& (0+255),w,b
 11928  006630  1190               	iorwf	(??___fldiv+1)& (0+255),w,b
 11929  006632  1191               	iorwf	(??___fldiv+2)& (0+255),w,b
 11930  006634  1192               	iorwf	(??___fldiv+3)& (0+255),w,b
 11931  006636  E003               	bz	l2414
 11932  006638                     l10297:
 11933                           
 11934                           ; BSR set to: 0
 11935  006638  0E01               	movlw	1
 11936  00663A  6F9F               	movwf	___fldiv@aexp& (0+255),b
 11937  00663C  D002               	goto	l2413
 11938  00663E                     l2414:
 11939                           
 11940                           ; BSR set to: 0
 11941  00663E  B187               	btfsc	___fldiv@b& (0+255),0,b
 11942  006640  D7FB               	goto	l10297
 11943  006642                     l2413:
 11944                           
 11945                           ; BSR set to: 0
 11946  006642  519F               	movf	___fldiv@aexp& (0+255),w,b
 11947  006644  E00E               	bz	l10309
 11948                           
 11949                           ; BSR set to: 0
 11950  006646  2B87               	incf	___fldiv@b& (0+255),f,b
 11951  006648  0E00               	movlw	0
 11952  00664A  2388               	addwfc	(___fldiv@b+1)& (0+255),f,b
 11953  00664C  2389               	addwfc	(___fldiv@b+2)& (0+255),f,b
 11954  00664E  238A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 11955                           
 11956                           ; BSR set to: 0
 11957  006650  A18A               	btfss	(___fldiv@b+3)& (0+255),0,b
 11958  006652  D007               	goto	l10309
 11959                           
 11960                           ; BSR set to: 0
 11961  006654  358A               	rlcf	(___fldiv@b+3)& (0+255),w,b
 11962  006656  338A               	rrcf	(___fldiv@b+3)& (0+255),f,b
 11963  006658  3389               	rrcf	(___fldiv@b+2)& (0+255),f,b
 11964  00665A  3388               	rrcf	(___fldiv@b+1)& (0+255),f,b
 11965  00665C  3387               	rrcf	___fldiv@b& (0+255),f,b
 11966                           
 11967                           ; BSR set to: 0
 11968  00665E  4B98               	infsnz	___fldiv@new_exp& (0+255),f,b
 11969  006660  2B99               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 11970  006662                     l10309:
 11971                           
 11972                           ; BSR set to: 0
 11973  006662  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11974  006664  D00A               	goto	l10315
 11975  006666  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11976  006668  E102               	bnz	u9280
 11977  00666A  2998               	incf	___fldiv@new_exp& (0+255),w,b
 11978  00666C  E306               	bnc	l10315
 11979  00666E                     u9280:
 11980                           
 11981                           ; BSR set to: 0
 11982  00666E  6B99               	clrf	(___fldiv@new_exp+1)& (0+255),b
 11983  006670  6998               	setf	___fldiv@new_exp& (0+255),b
 11984                           
 11985                           ; BSR set to: 0
 11986  006672  6B87               	clrf	___fldiv@b& (0+255),b
 11987  006674  6B88               	clrf	(___fldiv@b+1)& (0+255),b
 11988  006676  6B89               	clrf	(___fldiv@b+2)& (0+255),b
 11989  006678  6B8A               	clrf	(___fldiv@b+3)& (0+255),b
 11990  00667A                     l10315:
 11991                           
 11992                           ; BSR set to: 0
 11993  00667A  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11994  00667C  D004               	goto	l10317
 11995  00667E  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11996  006680  E109               	bnz	l2420
 11997  006682  0598               	decf	___fldiv@new_exp& (0+255),w,b
 11998  006684  E207               	bc	l2420
 11999  006686                     l10317:
 12000                           
 12001                           ; BSR set to: 0
 12002  006686  6B98               	clrf	___fldiv@new_exp& (0+255),b
 12003  006688  6B99               	clrf	(___fldiv@new_exp+1)& (0+255),b
 12004  00668A  6B87               	clrf	___fldiv@b& (0+255),b
 12005  00668C  6B88               	clrf	(___fldiv@b+1)& (0+255),b
 12006  00668E  6B89               	clrf	(___fldiv@b+2)& (0+255),b
 12007  006690  6B8A               	clrf	(___fldiv@b+3)& (0+255),b
 12008  006692  6B93               	clrf	___fldiv@sign& (0+255),b
 12009  006694                     l2420:
 12010                           
 12011                           ; BSR set to: 0
 12012  006694  C098  F09E         	movff	___fldiv@new_exp,___fldiv@bexp
 12013  006698  A19E               	btfss	___fldiv@bexp& (0+255),0,b
 12014  00669A  D002               	goto	l10321
 12015                           
 12016                           ; BSR set to: 0
 12017  00669C  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 12018  00669E  D001               	goto	l10323
 12019  0066A0                     l10321:
 12020                           
 12021                           ; BSR set to: 0
 12022  0066A0  9F89               	bcf	(___fldiv@b+2)& (0+255),7,b
 12023  0066A2                     l10323:
 12024                           
 12025                           ; BSR set to: 0
 12026  0066A2  90D8               	bcf	status,0,c
 12027  0066A4  319E               	rrcf	___fldiv@bexp& (0+255),w,b
 12028  0066A6  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 12029                           
 12030                           ; BSR set to: 0
 12031  0066A8  5193               	movf	___fldiv@sign& (0+255),w,b
 12032  0066AA  D744               	goto	L20
 12033  0066AC                     __end_of___fldiv:
 12034                           	opt stack 0
 12035                           tblptru	equ	0xFF8
 12036                           tblptrh	equ	0xFF7
 12037                           tblptrl	equ	0xFF6
 12038                           tablat	equ	0xFF5
 12039                           prodh	equ	0xFF4
 12040                           prodl	equ	0xFF3
 12041                           intcon	equ	0xFF2
 12042                           postinc0	equ	0xFEE
 12043                           wreg	equ	0xFE8
 12044                           indf1	equ	0xFE7
 12045                           fsr1h	equ	0xFE2
 12046                           fsr1l	equ	0xFE1
 12047                           indf2	equ	0xFDF
 12048                           postinc2	equ	0xFDE
 12049                           postdec2	equ	0xFDD
 12050                           fsr2h	equ	0xFDA
 12051                           fsr2l	equ	0xFD9
 12052                           status	equ	0xFD8
 12053                           
 12054 ;; *************** function _DATAEE_WriteByte *****************
 12055 ;; Defined at:
 12056 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 12057 ;; Parameters:    Size  Location     Type
 12058 ;;  bAdd            1    wreg     unsigned char 
 12059 ;;  bData           1    0[BANK0 ] unsigned char 
 12060 ;; Auto vars:     Size  Location     Type
 12061 ;;  bAdd            1    1[BANK0 ] unsigned char 
 12062 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 12063 ;; Return value:  Size  Location     Type
 12064 ;;                  1    wreg      void 
 12065 ;; Registers used:
 12066 ;;		wreg, status,2
 12067 ;; Tracked objects:
 12068 ;;		On entry : F/0
 12069 ;;		On exit  : 0/0
 12070 ;;		Unchanged: 0/0
 12071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12072 ;;      Params:         0       1       0       0       0       0       0       0       0
 12073 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12074 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12075 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12076 ;;Total ram usage:        3 bytes
 12077 ;; Hardware stack levels used:    1
 12078 ;; Hardware stack levels required when called:   11
 12079 ;; This function calls:
 12080 ;;		Nothing
 12081 ;; This function is called by:
 12082 ;;		_moteJoiningProcess
 12083 ;; This function uses a non-reentrant model
 12084 ;;
 12085                           
 12086                           	psect	text40
 12087  004108                     __ptext40:
 12088                           	opt stack 0
 12089  004108                     _DATAEE_WriteByte:
 12090                           	opt stack 17
 12091                           
 12092                           ; BSR set to: 0
 12093                           ;incstack = 0
 12094                           ;DATAEE_WriteByte@bAdd stored from wreg
 12095  004108  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 12096                           
 12097                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 12098  00410A  0E00               	movlw	0
 12099  00410C  BEF2               	btfsc	intcon,7,c	;volatile
 12100  00410E  0E01               	movlw	1
 12101  004110  0100               	movlb	0	; () banked
 12102  004112  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 12103                           
 12104                           ; BSR set to: 0
 12105                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 12106  004114  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 12107                           
 12108                           ; BSR set to: 0
 12109                           ;memory.c: 171: EEDATA = bData;
 12110  004118  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 12111                           
 12112                           ; BSR set to: 0
 12113                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 12114  00411C  9EA6               	bcf	4006,7,c	;volatile
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;memory.c: 173: EECON1bits.CFGS = 0;
 12118  00411E  9CA6               	bcf	4006,6,c	;volatile
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;memory.c: 174: EECON1bits.WREN = 1;
 12122  004120  84A6               	bsf	4006,2,c	;volatile
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;memory.c: 175: INTCONbits.GIE = 0;
 12126  004122  9EF2               	bcf	intcon,7,c	;volatile
 12127                           
 12128                           ; BSR set to: 0
 12129                           ;memory.c: 176: EECON2 = 0x55;
 12130  004124  0E55               	movlw	85
 12131  004126  6EA7               	movwf	4007,c	;volatile
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;memory.c: 177: EECON2 = 0xAA;
 12135  004128  0EAA               	movlw	170
 12136  00412A  6EA7               	movwf	4007,c	;volatile
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;memory.c: 178: EECON1bits.WR = 1;
 12140  00412C  82A6               	bsf	4006,1,c	;volatile
 12141  00412E                     l1229:
 12142  00412E  B2A6               	btfsc	4006,1,c	;volatile
 12143  004130  D7FE               	goto	l1229
 12144                           
 12145                           ;memory.c: 182: }
 12146                           ;memory.c: 184: EECON1bits.WREN = 0;
 12147  004132  94A6               	bcf	4006,2,c	;volatile
 12148                           
 12149                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 12150  004134  0100               	movlb	0	; () banked
 12151  004136  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 12152  004138  D002               	bra	u8805
 12153  00413A  9EF2               	bcf	intcon,7,c	;volatile
 12154  00413C  D001               	bra	u8806
 12155  00413E                     u8805:
 12156  00413E  8EF2               	bsf	intcon,7,c	;volatile
 12157  004140                     u8806:
 12158  004140  0012               	return		;funcret
 12159  004142                     __end_of_DATAEE_WriteByte:
 12160                           	opt stack 0
 12161                           tblptru	equ	0xFF8
 12162                           tblptrh	equ	0xFF7
 12163                           tblptrl	equ	0xFF6
 12164                           tablat	equ	0xFF5
 12165                           prodh	equ	0xFF4
 12166                           prodl	equ	0xFF3
 12167                           intcon	equ	0xFF2
 12168                           postinc0	equ	0xFEE
 12169                           wreg	equ	0xFE8
 12170                           indf1	equ	0xFE7
 12171                           fsr1h	equ	0xFE2
 12172                           fsr1l	equ	0xFE1
 12173                           indf2	equ	0xFDF
 12174                           postinc2	equ	0xFDE
 12175                           postdec2	equ	0xFDD
 12176                           fsr2h	equ	0xFDA
 12177                           fsr2l	equ	0xFD9
 12178                           status	equ	0xFD8
 12179                           
 12180 ;; *************** function _ADC_GetConversion *****************
 12181 ;; Defined at:
 12182 ;;		line 113 in file "../Includes/MccGenerated/adc.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;  channel         1    wreg     enum E6179
 12185 ;; Auto vars:     Size  Location     Type
 12186 ;;  channel         1    4[BANK0 ] enum E6179
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  2    0[BANK0 ] unsigned int 
 12189 ;; Registers used:
 12190 ;;		wreg, status,2, status,0
 12191 ;; Tracked objects:
 12192 ;;		On entry : C/2
 12193 ;;		On exit  : F/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12196 ;;      Params:         0       2       0       0       0       0       0       0       0
 12197 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12198 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12199 ;;      Totals:         0       5       0       0       0       0       0       0       0
 12200 ;;Total ram usage:        5 bytes
 12201 ;; Hardware stack levels used:    1
 12202 ;; Hardware stack levels required when called:   11
 12203 ;; This function calls:
 12204 ;;		Nothing
 12205 ;; This function is called by:
 12206 ;;		_moteHandler
 12207 ;;		_moteJoiningProcess
 12208 ;;		_moteRunningProcess
 12209 ;; This function uses a non-reentrant model
 12210 ;;
 12211                           
 12212                           	psect	text41
 12213  0040CE                     __ptext41:
 12214                           	opt stack 0
 12215  0040CE                     _ADC_GetConversion:
 12216                           	opt stack 17
 12217                           
 12218                           ;incstack = 0
 12219                           ;ADC_GetConversion@channel stored from wreg
 12220  0040CE  0100               	movlb	0	; () banked
 12221  0040D0  6F64               	movwf	ADC_GetConversion@channel& (0+255),b
 12222                           
 12223                           ;adc.c: 116: ADCON0bits.CHS = channel;
 12224  0040D2  C064  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 12225  0040D6  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 12226  0040D8  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 12227  0040DA  50C2               	movf	4034,w,c	;volatile
 12228  0040DC  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 12229  0040DE  0B83               	andlw	-125
 12230  0040E0  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 12231  0040E2  6EC2               	movwf	4034,c	;volatile
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;adc.c: 119: ADCON0bits.ADON = 1;
 12235  0040E4  80C2               	bsf	4034,0,c	;volatile
 12236                           
 12237                           ; BSR set to: 0
 12238                           ;adc.c: 122: _delay((unsigned long)((5)*(48000000/4000000.0)));
 12239  0040E6  0E14               	movlw	20
 12240  0040E8                     u10727:
 12241  0040E8  2EE8               	decfsz	wreg,f,c
 12242  0040EA  D7FE               	goto	u10727
 12243                           
 12244                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
 12245  0040EC  82C2               	bsf	4034,1,c	;volatile
 12246  0040EE                     l1057:
 12247  0040EE  B2C2               	btfsc	4034,1,c	;volatile
 12248  0040F0  D7FE               	goto	l1057
 12249                           
 12250                           ;adc.c: 130: }
 12251                           ;adc.c: 133: return ((ADRESH << 8) + ADRESL);
 12252  0040F2  50C4               	movf	4036,w,c	;volatile
 12253  0040F4  0100               	movlb	0	; () banked
 12254  0040F6  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 12255  0040F8  6B62               	clrf	??_ADC_GetConversion& (0+255),b
 12256  0040FA  50C3               	movf	4035,w,c	;volatile
 12257  0040FC  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
 12258  0040FE  6F60               	movwf	?_ADC_GetConversion& (0+255),b
 12259  004100  0E00               	movlw	0
 12260  004102  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 12261  004104  6F61               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 12262                           
 12263                           ; BSR set to: 0
 12264  004106  0012               	return		;funcret
 12265  004108                     __end_of_ADC_GetConversion:
 12266                           	opt stack 0
 12267                           tblptru	equ	0xFF8
 12268                           tblptrh	equ	0xFF7
 12269                           tblptrl	equ	0xFF6
 12270                           tablat	equ	0xFF5
 12271                           prodh	equ	0xFF4
 12272                           prodl	equ	0xFF3
 12273                           intcon	equ	0xFF2
 12274                           postinc0	equ	0xFEE
 12275                           wreg	equ	0xFE8
 12276                           indf1	equ	0xFE7
 12277                           fsr1h	equ	0xFE2
 12278                           fsr1l	equ	0xFE1
 12279                           indf2	equ	0xFDF
 12280                           postinc2	equ	0xFDE
 12281                           postdec2	equ	0xFDD
 12282                           fsr2h	equ	0xFDA
 12283                           fsr2l	equ	0xFD9
 12284                           status	equ	0xFD8
 12285                           
 12286 ;; *************** function _TMRapp_Handler *****************
 12287 ;; Defined at:
 12288 ;;		line 22 in file "../Includes/Drivers/TMRapp.c"
 12289 ;; Parameters:    Size  Location     Type
 12290 ;;		None
 12291 ;; Auto vars:     Size  Location     Type
 12292 ;;		None
 12293 ;; Return value:  Size  Location     Type
 12294 ;;                  1    wreg      void 
 12295 ;; Registers used:
 12296 ;;		wreg, status,2, status,0, cstack
 12297 ;; Tracked objects:
 12298 ;;		On entry : F/0
 12299 ;;		On exit  : E/0
 12300 ;;		Unchanged: 0/0
 12301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12302 ;;      Params:         0       0       0       0       0       0       0       0       0
 12303 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12304 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12305 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12306 ;;Total ram usage:        0 bytes
 12307 ;; Hardware stack levels used:    1
 12308 ;; Hardware stack levels required when called:   12
 12309 ;; This function calls:
 12310 ;;		___lwmod
 12311 ;; This function is called by:
 12312 ;;		_moteHandler
 12313 ;; This function uses a non-reentrant model
 12314 ;;
 12315                           
 12316                           	psect	text42
 12317  0058E6                     __ptext42:
 12318                           	opt stack 0
 12319  0058E6                     _TMRapp_Handler:
 12320                           	opt stack 17
 12321                           
 12322                           ; BSR set to: 0
 12323                           ;TMRapp.c: 25: timerMsTickCount++;
 12324                           
 12325                           ; BSR set to: 0
 12326                           ;incstack = 0
 12327  0058E6  0101               	movlb	1	; () banked
 12328  0058E8  4B3F               	infsnz	_timerMsTickCount& (0+255),f,b
 12329  0058EA  2B40               	incf	(_timerMsTickCount+1)& (0+255),f,b
 12330                           
 12331                           ; BSR set to: 1
 12332                           ;TMRapp.c: 27: if ( (timerMsTickCount % 10) == 0)
 12333  0058EC  C13F  F067         	movff	_timerMsTickCount,___lwmod@dividend
 12334  0058F0  C140  F068         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 12335  0058F4  0100               	movlb	0	; () banked
 12336  0058F6  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
 12337  0058F8  0E0A               	movlw	10
 12338  0058FA  6F69               	movwf	___lwmod@divisor& (0+255),b
 12339  0058FC  ECDD  F020         	call	___lwmod	;wreg free
 12340  005900  5167               	movf	?___lwmod& (0+255),w,b
 12341  005902  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12342  005904  A4D8               	btfss	status,2,c
 12343  005906  0012               	return	
 12344                           
 12345                           ; BSR set to: 0
 12346                           ;TMRapp.c: 28: {
 12347                           ;TMRapp.c: 29: appTimer.mSecTenTick = 1;
 12348  005908  83F5               	bsf	_appTimer& (0+255),1,b
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;TMRapp.c: 30: if ( (timerMsTickCount % 100) == 0)
 12352  00590A  C13F  F067         	movff	_timerMsTickCount,___lwmod@dividend
 12353  00590E  C140  F068         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 12354  005912  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
 12355  005914  0E64               	movlw	100
 12356  005916  6F69               	movwf	___lwmod@divisor& (0+255),b
 12357  005918  ECDD  F020         	call	___lwmod	;wreg free
 12358  00591C  5167               	movf	?___lwmod& (0+255),w,b
 12359  00591E  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12360  005920  A4D8               	btfss	status,2,c
 12361  005922  0012               	return	
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;TMRapp.c: 31: {
 12365                           ;TMRapp.c: 32: appTimer.mSecHundredTick = 1;
 12366  005924  85F5               	bsf	_appTimer& (0+255),2,b
 12367                           
 12368                           ; BSR set to: 0
 12369                           ;TMRapp.c: 33: if ( (timerMsTickCount % 1000) == 0)
 12370  005926  C13F  F067         	movff	_timerMsTickCount,___lwmod@dividend
 12371  00592A  C140  F068         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 12372  00592E  0E03               	movlw	3
 12373  005930  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 12374  005932  0EE8               	movlw	232
 12375  005934  6F69               	movwf	___lwmod@divisor& (0+255),b
 12376  005936  ECDD  F020         	call	___lwmod	;wreg free
 12377  00593A  5167               	movf	?___lwmod& (0+255),w,b
 12378  00593C  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12379  00593E  A4D8               	btfss	status,2,c
 12380  005940  0012               	return	
 12381                           
 12382                           ; BSR set to: 0
 12383                           ;TMRapp.c: 34: {
 12384                           ;TMRapp.c: 35: appTimer.SecTick = 1;
 12385  005942  87F5               	bsf	_appTimer& (0+255),3,b
 12386                           
 12387                           ; BSR set to: 0
 12388                           ;TMRapp.c: 36: if ( (timerMsTickCount % 60000) == 0)
 12389  005944  C13F  F067         	movff	_timerMsTickCount,___lwmod@dividend
 12390  005948  C140  F068         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 12391  00594C  0EEA               	movlw	234
 12392  00594E  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 12393  005950  0E60               	movlw	96
 12394  005952  6F69               	movwf	___lwmod@divisor& (0+255),b
 12395  005954  ECDD  F020         	call	___lwmod	;wreg free
 12396  005958  5167               	movf	?___lwmod& (0+255),w,b
 12397  00595A  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12398  00595C  A4D8               	btfss	status,2,c
 12399  00595E  0012               	return	
 12400                           
 12401                           ; BSR set to: 0
 12402                           ;TMRapp.c: 37: {
 12403                           ;TMRapp.c: 38: timerMinTickCount++;
 12404  005960  0101               	movlb	1	; () banked
 12405  005962  4B3D               	infsnz	_timerMinTickCount& (0+255),f,b
 12406  005964  2B3E               	incf	(_timerMinTickCount+1)& (0+255),f,b
 12407                           
 12408                           ; BSR set to: 1
 12409                           ;TMRapp.c: 39: appTimer.MinTick = 1;
 12410  005966  0100               	movlb	0	; () banked
 12411  005968  89F5               	bsf	_appTimer& (0+255),4,b
 12412                           
 12413                           ; BSR set to: 0
 12414                           ;TMRapp.c: 40: if ( (timerMinTickCount % 60) == 0)
 12415  00596A  C13D  F067         	movff	_timerMinTickCount,___lwmod@dividend
 12416  00596E  C13E  F068         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 12417  005972  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
 12418  005974  0E3C               	movlw	60
 12419  005976  6F69               	movwf	___lwmod@divisor& (0+255),b
 12420  005978  ECDD  F020         	call	___lwmod	;wreg free
 12421  00597C  5167               	movf	?___lwmod& (0+255),w,b
 12422  00597E  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12423  005980  A4D8               	btfss	status,2,c
 12424  005982  0012               	return	
 12425                           
 12426                           ; BSR set to: 0
 12427                           ;TMRapp.c: 41: {
 12428                           ;TMRapp.c: 42: appTimer.HourTick = 1;
 12429  005984  8BF5               	bsf	_appTimer& (0+255),5,b
 12430                           
 12431                           ; BSR set to: 0
 12432                           ;TMRapp.c: 43: if ( (timerMinTickCount % 720) == 0)
 12433  005986  C13D  F067         	movff	_timerMinTickCount,___lwmod@dividend
 12434  00598A  C13E  F068         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 12435  00598E  0E02               	movlw	2
 12436  005990  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 12437  005992  0ED0               	movlw	208
 12438  005994  6F69               	movwf	___lwmod@divisor& (0+255),b
 12439  005996  ECDD  F020         	call	___lwmod	;wreg free
 12440  00599A  5167               	movf	?___lwmod& (0+255),w,b
 12441  00599C  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12442  00599E  A4D8               	btfss	status,2,c
 12443  0059A0  0012               	return	
 12444                           
 12445                           ; BSR set to: 0
 12446                           ;TMRapp.c: 44: {
 12447                           ;TMRapp.c: 45: appTimer.HalfDayTick = 1;
 12448  0059A2  8DF5               	bsf	_appTimer& (0+255),6,b
 12449                           
 12450                           ; BSR set to: 0
 12451                           ;TMRapp.c: 46: if ( (timerMinTickCount % 1440) == 0)
 12452  0059A4  C13D  F067         	movff	_timerMinTickCount,___lwmod@dividend
 12453  0059A8  C13E  F068         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 12454  0059AC  0E05               	movlw	5
 12455  0059AE  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 12456  0059B0  0EA0               	movlw	160
 12457  0059B2  6F69               	movwf	___lwmod@divisor& (0+255),b
 12458  0059B4  ECDD  F020         	call	___lwmod	;wreg free
 12459  0059B8  5167               	movf	?___lwmod& (0+255),w,b
 12460  0059BA  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12461  0059BC  A4D8               	btfss	status,2,c
 12462  0059BE  0012               	return	
 12463                           
 12464                           ; BSR set to: 0
 12465                           ;TMRapp.c: 47: {
 12466                           ;TMRapp.c: 48: appTimer.DayTick = 1;
 12467  0059C0  8FF5               	bsf	_appTimer& (0+255),7,b
 12468                           
 12469                           ;TMRapp.c: 50: timerMsTickCount = 0;
 12470  0059C2  0101               	movlb	1	; () banked
 12471  0059C4  6B3F               	clrf	_timerMsTickCount& (0+255),b
 12472  0059C6  6B40               	clrf	(_timerMsTickCount+1)& (0+255),b
 12473                           
 12474                           ;TMRapp.c: 51: timerMinTickCount = 0;
 12475  0059C8  6B3D               	clrf	_timerMinTickCount& (0+255),b
 12476  0059CA  6B3E               	clrf	(_timerMinTickCount+1)& (0+255),b
 12477  0059CC  0012               	return	
 12478  0059CE                     __end_of_TMRapp_Handler:
 12479                           	opt stack 0
 12480                           tblptru	equ	0xFF8
 12481                           tblptrh	equ	0xFF7
 12482                           tblptrl	equ	0xFF6
 12483                           tablat	equ	0xFF5
 12484                           prodh	equ	0xFF4
 12485                           prodl	equ	0xFF3
 12486                           intcon	equ	0xFF2
 12487                           postinc0	equ	0xFEE
 12488                           wreg	equ	0xFE8
 12489                           indf1	equ	0xFE7
 12490                           fsr1h	equ	0xFE2
 12491                           fsr1l	equ	0xFE1
 12492                           indf2	equ	0xFDF
 12493                           postinc2	equ	0xFDE
 12494                           postdec2	equ	0xFDD
 12495                           fsr2h	equ	0xFDA
 12496                           fsr2l	equ	0xFD9
 12497                           status	equ	0xFD8
 12498                           
 12499 ;; *************** function ___lwmod *****************
 12500 ;; Defined at:
 12501 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
 12502 ;; Parameters:    Size  Location     Type
 12503 ;;  dividend        2    7[BANK0 ] unsigned int 
 12504 ;;  divisor         2    9[BANK0 ] unsigned int 
 12505 ;; Auto vars:     Size  Location     Type
 12506 ;;  counter         1   11[BANK0 ] unsigned char 
 12507 ;; Return value:  Size  Location     Type
 12508 ;;                  2    7[BANK0 ] unsigned int 
 12509 ;; Registers used:
 12510 ;;		wreg, status,2, status,0
 12511 ;; Tracked objects:
 12512 ;;		On entry : F/0
 12513 ;;		On exit  : F/0
 12514 ;;		Unchanged: 0/0
 12515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12516 ;;      Params:         0       4       0       0       0       0       0       0       0
 12517 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12518 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12519 ;;      Totals:         0       5       0       0       0       0       0       0       0
 12520 ;;Total ram usage:        5 bytes
 12521 ;; Hardware stack levels used:    1
 12522 ;; Hardware stack levels required when called:   11
 12523 ;; This function calls:
 12524 ;;		Nothing
 12525 ;; This function is called by:
 12526 ;;		_moteApp_add16bToDataBuffer
 12527 ;;		_TMRapp_Handler
 12528 ;;		_oled_putUint16
 12529 ;;		_sprintf
 12530 ;; This function uses a non-reentrant model
 12531 ;;
 12532                           
 12533                           	psect	text43
 12534  0041BA                     __ptext43:
 12535                           	opt stack 0
 12536  0041BA                     ___lwmod:
 12537                           	opt stack 16
 12538                           
 12539                           ; BSR set to: 0
 12540                           
 12541                           ;incstack = 0
 12542  0041BA  5169               	movf	___lwmod@divisor& (0+255),w,b
 12543  0041BC  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 12544  0041BE  E017               	bz	l2313
 12545                           
 12546                           ; BSR set to: 0
 12547  0041C0  0E01               	movlw	1
 12548  0041C2  6F6B               	movwf	___lwmod@counter& (0+255),b
 12549  0041C4  D004               	goto	l9643
 12550  0041C6                     l9641:
 12551                           
 12552                           ; BSR set to: 0
 12553  0041C6  90D8               	bcf	status,0,c
 12554  0041C8  3769               	rlcf	___lwmod@divisor& (0+255),f,b
 12555  0041CA  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 12556  0041CC  2B6B               	incf	___lwmod@counter& (0+255),f,b
 12557  0041CE                     l9643:
 12558                           
 12559                           ; BSR set to: 0
 12560  0041CE  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 12561  0041D0  D7FA               	goto	l9641
 12562  0041D2                     l9645:
 12563                           
 12564                           ; BSR set to: 0
 12565  0041D2  5169               	movf	___lwmod@divisor& (0+255),w,b
 12566  0041D4  5D67               	subwf	___lwmod@dividend& (0+255),w,b
 12567  0041D6  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12568  0041D8  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 12569  0041DA  E304               	bnc	l9649
 12570                           
 12571                           ; BSR set to: 0
 12572  0041DC  5169               	movf	___lwmod@divisor& (0+255),w,b
 12573  0041DE  5F67               	subwf	___lwmod@dividend& (0+255),f,b
 12574  0041E0  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12575  0041E2  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 12576  0041E4                     l9649:
 12577                           
 12578                           ; BSR set to: 0
 12579  0041E4  90D8               	bcf	status,0,c
 12580  0041E6  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 12581  0041E8  3369               	rrcf	___lwmod@divisor& (0+255),f,b
 12582                           
 12583                           ; BSR set to: 0
 12584  0041EA  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
 12585  0041EC  D7F2               	goto	l9645
 12586  0041EE                     l2313:
 12587                           
 12588                           ; BSR set to: 0
 12589  0041EE  C067  F067         	movff	___lwmod@dividend,?___lwmod
 12590  0041F2  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
 12591                           
 12592                           ; BSR set to: 0
 12593  0041F6  0012               	return		;funcret
 12594  0041F8                     __end_of___lwmod:
 12595                           	opt stack 0
 12596                           tblptru	equ	0xFF8
 12597                           tblptrh	equ	0xFF7
 12598                           tblptrl	equ	0xFF6
 12599                           tablat	equ	0xFF5
 12600                           prodh	equ	0xFF4
 12601                           prodl	equ	0xFF3
 12602                           intcon	equ	0xFF2
 12603                           postinc0	equ	0xFEE
 12604                           wreg	equ	0xFE8
 12605                           indf1	equ	0xFE7
 12606                           fsr1h	equ	0xFE2
 12607                           fsr1l	equ	0xFE1
 12608                           indf2	equ	0xFDF
 12609                           postinc2	equ	0xFDE
 12610                           postdec2	equ	0xFDD
 12611                           fsr2h	equ	0xFDA
 12612                           fsr2l	equ	0xFD9
 12613                           status	equ	0xFD8
 12614                           
 12615 ;; *************** function _TMRapp_ClearBitFlags *****************
 12616 ;; Defined at:
 12617 ;;		line 16 in file "../Includes/Drivers/TMRapp.c"
 12618 ;; Parameters:    Size  Location     Type
 12619 ;;		None
 12620 ;; Auto vars:     Size  Location     Type
 12621 ;;		None
 12622 ;; Return value:  Size  Location     Type
 12623 ;;                  1    wreg      void 
 12624 ;; Registers used:
 12625 ;;		None
 12626 ;; Tracked objects:
 12627 ;;		On entry : F/0
 12628 ;;		On exit  : F/0
 12629 ;;		Unchanged: 0/0
 12630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12631 ;;      Params:         0       0       0       0       0       0       0       0       0
 12632 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12633 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12634 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12635 ;;Total ram usage:        0 bytes
 12636 ;; Hardware stack levels used:    1
 12637 ;; Hardware stack levels required when called:   11
 12638 ;; This function calls:
 12639 ;;		Nothing
 12640 ;; This function is called by:
 12641 ;;		_moteHandler
 12642 ;; This function uses a non-reentrant model
 12643 ;;
 12644                           
 12645                           	psect	text44
 12646  003B08                     __ptext44:
 12647                           	opt stack 0
 12648  003B08                     _TMRapp_ClearBitFlags:
 12649                           	opt stack 18
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;TMRapp.c: 19: appTimer.TicksBitMap = 0x00;
 12653                           
 12654                           ; BSR set to: 0
 12655                           ;incstack = 0
 12656  003B08  6BF5               	clrf	_appTimer& (0+255),b
 12657                           
 12658                           ; BSR set to: 0
 12659  003B0A  0012               	return		;funcret
 12660  003B0C                     __end_of_TMRapp_ClearBitFlags:
 12661                           	opt stack 0
 12662                           tblptru	equ	0xFF8
 12663                           tblptrh	equ	0xFF7
 12664                           tblptrl	equ	0xFF6
 12665                           tablat	equ	0xFF5
 12666                           prodh	equ	0xFF4
 12667                           prodl	equ	0xFF3
 12668                           intcon	equ	0xFF2
 12669                           postinc0	equ	0xFEE
 12670                           wreg	equ	0xFE8
 12671                           indf1	equ	0xFE7
 12672                           fsr1h	equ	0xFE2
 12673                           fsr1l	equ	0xFE1
 12674                           indf2	equ	0xFDF
 12675                           postinc2	equ	0xFDE
 12676                           postdec2	equ	0xFDD
 12677                           fsr2h	equ	0xFDA
 12678                           fsr2l	equ	0xFD9
 12679                           status	equ	0xFD8
 12680                           
 12681 ;; *************** function _MOTEapp_TimerBasedTask *****************
 12682 ;; Defined at:
 12683 ;;		line 882 in file "../Includes/Board/MOTEapp.c"
 12684 ;; Parameters:    Size  Location     Type
 12685 ;;  timerTask       1    wreg     struct .
 12686 ;; Auto vars:     Size  Location     Type
 12687 ;;  timerTask       1    0[BANK0 ] struct .
 12688 ;; Return value:  Size  Location     Type
 12689 ;;                  1    wreg      void 
 12690 ;; Registers used:
 12691 ;;		wreg, status,2, status,0
 12692 ;; Tracked objects:
 12693 ;;		On entry : F/0
 12694 ;;		On exit  : F/0
 12695 ;;		Unchanged: 0/0
 12696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12697 ;;      Params:         0       0       0       0       0       0       0       0       0
 12698 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12699 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12700 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12701 ;;Total ram usage:        1 bytes
 12702 ;; Hardware stack levels used:    1
 12703 ;; Hardware stack levels required when called:   11
 12704 ;; This function calls:
 12705 ;;		Nothing
 12706 ;; This function is called by:
 12707 ;;		_moteHandler
 12708 ;; This function uses a non-reentrant model
 12709 ;;
 12710                           
 12711                           	psect	text45
 12712  003BF0                     __ptext45:
 12713                           	opt stack 0
 12714  003BF0                     _MOTEapp_TimerBasedTask:
 12715                           	opt stack 18
 12716                           
 12717                           ; BSR set to: 0
 12718                           ;incstack = 0
 12719                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 12720  003BF0  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 12721                           
 12722                           ;MOTEapp.c: 887: if (timerTask.mSecTenTick)
 12723  003BF2  0100               	movlb	0	; () banked
 12724  003BF4  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 12725  003BF6  D002               	goto	l10567
 12726                           
 12727                           ; BSR set to: 0
 12728                           ;MOTEapp.c: 888: {
 12729                           ;MOTEapp.c: 890: m10SecTicker++;
 12730  003BF8  0101               	movlb	1	; () banked
 12731  003BFA  2B50               	incf	_m10SecTicker& (0+255),f,b
 12732  003BFC                     l10567:
 12733                           
 12734                           ;MOTEapp.c: 896: }
 12735                           ;MOTEapp.c: 897: if (timerTask.SecTick)
 12736  003BFC  0100               	movlb	0	; () banked
 12737  003BFE  B760               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 12738                           
 12739                           ; BSR set to: 0
 12740                           ;MOTEapp.c: 898: {
 12741                           ;MOTEapp.c: 900: secTicker++;
 12742  003C00  2A29               	incf	_secTicker,f,c
 12743  003C02  0012               	return	
 12744  003C04                     __end_of_MOTEapp_TimerBasedTask:
 12745                           	opt stack 0
 12746                           tblptru	equ	0xFF8
 12747                           tblptrh	equ	0xFF7
 12748                           tblptrl	equ	0xFF6
 12749                           tablat	equ	0xFF5
 12750                           prodh	equ	0xFF4
 12751                           prodl	equ	0xFF3
 12752                           intcon	equ	0xFF2
 12753                           postinc0	equ	0xFEE
 12754                           wreg	equ	0xFE8
 12755                           indf1	equ	0xFE7
 12756                           fsr1h	equ	0xFE2
 12757                           fsr1l	equ	0xFE1
 12758                           indf2	equ	0xFDF
 12759                           postinc2	equ	0xFDE
 12760                           postdec2	equ	0xFDD
 12761                           fsr2h	equ	0xFDA
 12762                           fsr2l	equ	0xFD9
 12763                           status	equ	0xFD8
 12764                           
 12765 ;; *************** function _USBapp_handlerState *****************
 12766 ;; Defined at:
 12767 ;;		line 63 in file "../Includes/Board/USBapp.c"
 12768 ;; Parameters:    Size  Location     Type
 12769 ;;  state           1    wreg     enum E6263
 12770 ;; Auto vars:     Size  Location     Type
 12771 ;;  state           1    0[BANK0 ] enum E6263
 12772 ;; Return value:  Size  Location     Type
 12773 ;;                  1    wreg      void 
 12774 ;; Registers used:
 12775 ;;		wreg
 12776 ;; Tracked objects:
 12777 ;;		On entry : F/1
 12778 ;;		On exit  : 0/0
 12779 ;;		Unchanged: 0/0
 12780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12781 ;;      Params:         0       0       0       0       0       0       0       0       0
 12782 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12783 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12784 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12785 ;;Total ram usage:        1 bytes
 12786 ;; Hardware stack levels used:    1
 12787 ;; Hardware stack levels required when called:   11
 12788 ;; This function calls:
 12789 ;;		Nothing
 12790 ;; This function is called by:
 12791 ;;		_main
 12792 ;; This function uses a non-reentrant model
 12793 ;;
 12794                           
 12795                           	psect	text46
 12796  003B2A                     __ptext46:
 12797                           	opt stack 0
 12798  003B2A                     _USBapp_handlerState:
 12799                           	opt stack 19
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;incstack = 0
 12803                           ;USBapp_handlerState@state stored from wreg
 12804  003B2A  0100               	movlb	0	; () banked
 12805  003B2C  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 12806                           
 12807                           ;USBapp.c: 65: usbState = state;
 12808  003B2E  C060  F153         	movff	USBapp_handlerState@state,_usbState
 12809  003B32  0012               	return		;funcret
 12810  003B34                     __end_of_USBapp_handlerState:
 12811                           	opt stack 0
 12812                           tblptru	equ	0xFF8
 12813                           tblptrh	equ	0xFF7
 12814                           tblptrl	equ	0xFF6
 12815                           tablat	equ	0xFF5
 12816                           prodh	equ	0xFF4
 12817                           prodl	equ	0xFF3
 12818                           intcon	equ	0xFF2
 12819                           postinc0	equ	0xFEE
 12820                           wreg	equ	0xFE8
 12821                           indf1	equ	0xFE7
 12822                           fsr1h	equ	0xFE2
 12823                           fsr1l	equ	0xFE1
 12824                           indf2	equ	0xFDF
 12825                           postinc2	equ	0xFDE
 12826                           postdec2	equ	0xFDD
 12827                           fsr2h	equ	0xFDA
 12828                           fsr2l	equ	0xFD9
 12829                           status	equ	0xFD8
 12830                           
 12831 ;; *************** function _USBapp_Handler *****************
 12832 ;; Defined at:
 12833 ;;		line 68 in file "../Includes/Board/USBapp.c"
 12834 ;; Parameters:    Size  Location     Type
 12835 ;;		None
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;		None
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  1    wreg      void 
 12840 ;; Registers used:
 12841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/1
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12847 ;;      Params:         0       0       0       0       0       0       0       0       0
 12848 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12849 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12850 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12851 ;;Total ram usage:        0 bytes
 12852 ;; Hardware stack levels used:    1
 12853 ;; Hardware stack levels required when called:   17
 12854 ;; This function calls:
 12855 ;;		_USBapp_DeviceCdcEmulatorHandler
 12856 ;;		_oled_clear
 12857 ;;		_oled_putString
 12858 ;; This function is called by:
 12859 ;;		_main
 12860 ;; This function uses a non-reentrant model
 12861 ;;
 12862                           
 12863                           	psect	text47
 12864  00492C                     __ptext47:
 12865                           	opt stack 0
 12866  00492C                     _USBapp_Handler:
 12867                           	opt stack 13
 12868                           
 12869                           ;USBapp.c: 72: {
 12870                           ;USBapp.c: 73: switch(usbState)
 12871                           
 12872                           ;incstack = 0
 12873                           ;USBapp.c: 71: do
 12874  00492C  D02F               	goto	l11307
 12875  00492E                     l690:
 12876                           
 12877                           ; BSR set to: 1
 12878  00492E  D7FF               	goto	l690
 12879  004930                     l11287:
 12880                           
 12881                           ; BSR set to: 1
 12882                           ;USBapp.c: 80: oled_clear();
 12883  004930  EC22  F01E         	call	_oled_clear	;wreg free
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;USBapp.c: 81: oled_putString("CDC Mode",1,0);
 12887  004934  0E39               	movlw	low STR_105
 12888  004936  6F6D               	movwf	oled_putString@string& (0+255),b
 12889  004938  0E7F               	movlw	high STR_105
 12890  00493A  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
 12891  00493C  0E01               	movlw	1
 12892  00493E  6F6F               	movwf	oled_putString@station_dot& (0+255),b
 12893  004940  6B70               	clrf	oled_putString@start_page& (0+255),b
 12894  004942  EC17  F023         	call	_oled_putString	;wreg free
 12895                           
 12896                           ;USBapp.c: 82: oled_putString("Command",2,1);
 12897  004946  0EA5               	movlw	low STR_106
 12898  004948  0100               	movlb	0	; () banked
 12899  00494A  6F6D               	movwf	oled_putString@string& (0+255),b
 12900  00494C  0E7F               	movlw	high STR_106
 12901  00494E  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
 12902  004950  0E02               	movlw	2
 12903  004952  6F6F               	movwf	oled_putString@station_dot& (0+255),b
 12904  004954  0E01               	movlw	1
 12905  004956  6F70               	movwf	oled_putString@start_page& (0+255),b
 12906  004958  EC17  F023         	call	_oled_putString	;wreg free
 12907                           
 12908                           ;USBapp.c: 83: oled_putString("USB Handler",0,2);
 12909  00495C  0E7D               	movlw	low STR_107
 12910  00495E  0100               	movlb	0	; () banked
 12911  004960  6F6D               	movwf	oled_putString@string& (0+255),b
 12912  004962  0E7E               	movlw	high STR_107
 12913  004964  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
 12914  004966  6B6F               	clrf	oled_putString@station_dot& (0+255),b
 12915  004968  0E02               	movlw	2
 12916  00496A  6F70               	movwf	oled_putString@start_page& (0+255),b
 12917  00496C  EC17  F023         	call	_oled_putString	;wreg free
 12918                           
 12919                           ;USBapp.c: 85: usbState = USB_RUNNING;
 12920  004970  0E01               	movlw	1
 12921  004972  D006               	goto	L21
 12922  004974                     l11297:
 12923                           
 12924                           ; BSR set to: 1
 12925                           ;USBapp.c: 89: if( USBDeviceState < CONFIGURED_STATE )
 12926  004974  0E20               	movlw	32
 12927  004976  0100               	movlb	0	; () banked
 12928  004978  61F4               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 12929  00497A  D001               	goto	l11301
 12930  00497C  D00F               	goto	l697
 12931  00497E                     l11301:
 12932                           
 12933                           ; BSR set to: 0
 12934                           ;USBapp.c: 93: }
 12935                           ;USBapp.c: 94: usbState = USB_CDC;
 12936  00497E  0E02               	movlw	2
 12937  004980                     L21:
 12938  004980  0101               	movlb	1	; () banked
 12939  004982  6F53               	movwf	_usbState& (0+255),b
 12940                           
 12941                           ;USBapp.c: 95: break;
 12942  004984  D00B               	goto	l697
 12943  004986                     l11303:
 12944                           
 12945                           ; BSR set to: 1
 12946                           ;USBapp.c: 98: USBapp_DeviceCdcEmulatorHandler();
 12947  004986  ECCF  F028         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 12948                           
 12949                           ;USBapp.c: 101: break;
 12950  00498A  D008               	goto	l697
 12951  00498C                     l11307:
 12952  00498C  0101               	movlb	1	; () banked
 12953  00498E  5153               	movf	_usbState& (0+255),w,b
 12954                           
 12955                           ; Switch size 1, requested type "speed"
 12956                           ; Number of cases is 3, Range of values is 0 to 2
 12957                           ; switch strategies available:
 12958                           ; Name         Instructions Cycles
 12959                           ; simple_byte           10     6 (average)
 12960                           ;	Chosen strategy is simple_byte
 12961  004990  E0CF               	bz	l11287
 12962  004992  0A01               	xorlw	1	; case 1
 12963  004994  E0EF               	bz	l11297
 12964  004996  0A03               	xorlw	3	; case 2
 12965  004998  E0F6               	bz	l11303
 12966  00499A  D7C9               	goto	l690
 12967  00499C                     l697:
 12968                           
 12969                           ;USBapp.c: 103: }while(PORTAbits.RA0);
 12970  00499C  B080               	btfsc	3968,0,c	;volatile
 12971  00499E  D7F6               	goto	l11307
 12972                           
 12973                           ;USBapp.c: 104: __nop();
 12974  0049A0  F000               	nop	
 12975  0049A2  0012               	return		;funcret
 12976  0049A4                     __end_of_USBapp_Handler:
 12977                           	opt stack 0
 12978                           tblptru	equ	0xFF8
 12979                           tblptrh	equ	0xFF7
 12980                           tblptrl	equ	0xFF6
 12981                           tablat	equ	0xFF5
 12982                           prodh	equ	0xFF4
 12983                           prodl	equ	0xFF3
 12984                           intcon	equ	0xFF2
 12985                           postinc0	equ	0xFEE
 12986                           wreg	equ	0xFE8
 12987                           indf1	equ	0xFE7
 12988                           fsr1h	equ	0xFE2
 12989                           fsr1l	equ	0xFE1
 12990                           indf2	equ	0xFDF
 12991                           postinc2	equ	0xFDE
 12992                           postdec2	equ	0xFDD
 12993                           fsr2h	equ	0xFDA
 12994                           fsr2l	equ	0xFD9
 12995                           status	equ	0xFD8
 12996                           
 12997 ;; *************** function _oled_putString *****************
 12998 ;; Defined at:
 12999 ;;		line 273 in file "../Includes/Drivers/SSD1306oLED.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;  string          2   13[BANK0 ] PTR const unsigned char 
 13002 ;;		 -> oled_putUint16@numData(6), oled_putUint8@numData(6), STR_107(12), STR_106(8), 
 13003 ;;		 -> STR_105(9), STR_87(2), STR_86(16), STR_85(13), 
 13004 ;;		 -> STR_84(12), STR_83(17), STR_82(9), STR_81(1), 
 13005 ;;		 -> STR_77(16), STR_75(11), STR_74(12), STR_71(11), 
 13006 ;;		 -> moteJoiningProcess@buf(50), STR_69(15), STR_68(16), STR_65(7), 
 13007 ;;		 -> STR_62(9), STR_59(8), STR_56(7), STR_53(8), 
 13008 ;;		 -> STR_50(10), STR_47(9), STR_44(10), STR_41(7), 
 13009 ;;		 -> STR_38(8), STR_35(8), modemResonseBuffer(64), STR_32(9), 
 13010 ;;		 -> STR_31(9), STR_30(8), STR_28(17), STR_27(17), 
 13011 ;;		 -> STR_26(17), STR_25(17), STR_24(9), STR_23(10), 
 13012 ;;		 -> STR_20(9), STR_19(8), STR_18(8), STR_17(9), 
 13013 ;;		 -> STR_16(10), STR_15(11), STR_14(13), STR_13(13), 
 13014 ;;		 -> STR_12(13), STR_11(12), STR_10(13), STR_9(9), 
 13015 ;;		 -> STR_8(12), STR_7(16), STR_6(2), STR_5(2), 
 13016 ;;		 -> STR_4(9), STR_3(15), STR_2(15), STR_1(15), 
 13017 ;;  station_dot     1   15[BANK0 ] unsigned char 
 13018 ;;  start_page      1   16[BANK0 ] unsigned char 
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;  index           1   17[BANK0 ] unsigned char 
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  1    wreg      void 
 13023 ;; Registers used:
 13024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13025 ;; Tracked objects:
 13026 ;;		On entry : F/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13030 ;;      Params:         0       4       0       0       0       0       0       0       0
 13031 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13032 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13033 ;;      Totals:         0       5       0       0       0       0       0       0       0
 13034 ;;Total ram usage:        5 bytes
 13035 ;; Hardware stack levels used:    1
 13036 ;; Hardware stack levels required when called:   15
 13037 ;; This function calls:
 13038 ;;		_oled_putChar
 13039 ;; This function is called by:
 13040 ;;		_main
 13041 ;;		_moteHandler
 13042 ;;		_moteJoiningProcess
 13043 ;;		_moteRunningProcess
 13044 ;;		_USBapp_Handler
 13045 ;;		_oled_putUint8
 13046 ;;		_oled_putUint16
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           	psect	text48
 13051  00462E                     __ptext48:
 13052                           	opt stack 0
 13053  00462E                     _oled_putString:
 13054                           	opt stack 15
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;SSD1306oLED.c: 275: uint8_t index;
 13058                           ;SSD1306oLED.c: 276: for(index = station_dot; index < 16; index++)
 13059                           
 13060                           ;incstack = 0
 13061  00462E  C06F  F071         	movff	oled_putString@station_dot,oled_putString@index
 13062  004632                     l9445:
 13063                           
 13064                           ; BSR set to: 0
 13065  004632  0E0F               	movlw	15
 13066  004634  6571               	cpfsgt	oled_putString@index& (0+255),b
 13067  004636  D001               	goto	l9449
 13068  004638  0C0F               	retlw	15
 13069  00463A                     l9449:
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;SSD1306oLED.c: 277: {
 13073                           ;SSD1306oLED.c: 278: if (*string != 0)
 13074  00463A  C06D  FFF6         	movff	oled_putString@string,tblptrl
 13075  00463E  C06E  FFF7         	movff	oled_putString@string+1,tblptrh
 13076  004642  6AF8               	clrf	tblptru,c
 13077  004644  0E07               	movlw	(high __ramtop+-1)
 13078  004646  64F7               	cpfsgt	tblptrh,c
 13079  004648  D003               	bra	u8217
 13080  00464A  0008               	tblrd		*
 13081  00464C  50F5               	movf	tablat,w,c
 13082  00464E  D005               	bra	u8210
 13083  004650                     u8217:
 13084  004650  CFF6 FFE1          	movff	tblptrl,fsr1l
 13085  004654  CFF7 FFE2          	movff	tblptrh,fsr1h
 13086  004658  50E7               	movf	indf1,w,c
 13087  00465A                     u8210:
 13088  00465A  0900               	iorlw	0
 13089  00465C  B4D8               	btfsc	status,2,c
 13090  00465E  0012               	return	
 13091                           
 13092                           ;SSD1306oLED.c: 279: {
 13093                           ;SSD1306oLED.c: 280: oled_putChar(*string, index, start_page);
 13094  004660  C071  F063         	movff	oled_putString@index,oled_putChar@station_dot
 13095  004664  C070  F064         	movff	oled_putString@start_page,oled_putChar@start_page
 13096  004668  C06D  FFF6         	movff	oled_putString@string,tblptrl
 13097  00466C  C06E  FFF7         	movff	oled_putString@string+1,tblptrh
 13098  004670  6AF8               	clrf	tblptru,c
 13099  004672  0E07               	movlw	(high __ramtop+-1)
 13100  004674  64F7               	cpfsgt	tblptrh,c
 13101  004676  D003               	bra	u8237
 13102  004678  0008               	tblrd		*
 13103  00467A  50F5               	movf	tablat,w,c
 13104  00467C  D005               	bra	u8230
 13105  00467E                     u8237:
 13106  00467E  CFF6 FFE1          	movff	tblptrl,fsr1l
 13107  004682  CFF7 FFE2          	movff	tblptrh,fsr1h
 13108  004686  50E7               	movf	indf1,w,c
 13109  004688                     u8230:
 13110  004688  EC5B  F024         	call	_oled_putChar
 13111                           
 13112                           ; BSR set to: 0
 13113                           ;SSD1306oLED.c: 281: *string++;
 13114  00468C  4B6D               	infsnz	oled_putString@string& (0+255),f,b
 13115  00468E  2B6E               	incf	(oled_putString@string+1)& (0+255),f,b
 13116                           
 13117                           ; BSR set to: 0
 13118                           
 13119                           ;SSD1306oLED.c: 282: }
 13120  004690  2B71               	incf	oled_putString@index& (0+255),f,b
 13121  004692  D7CF               	goto	l9445
 13122  004694                     __end_of_oled_putString:
 13123                           	opt stack 0
 13124                           tblptru	equ	0xFF8
 13125                           tblptrh	equ	0xFF7
 13126                           tblptrl	equ	0xFF6
 13127                           tablat	equ	0xFF5
 13128                           prodh	equ	0xFF4
 13129                           prodl	equ	0xFF3
 13130                           intcon	equ	0xFF2
 13131                           postinc0	equ	0xFEE
 13132                           wreg	equ	0xFE8
 13133                           indf1	equ	0xFE7
 13134                           fsr1h	equ	0xFE2
 13135                           fsr1l	equ	0xFE1
 13136                           indf2	equ	0xFDF
 13137                           postinc2	equ	0xFDE
 13138                           postdec2	equ	0xFDD
 13139                           fsr2h	equ	0xFDA
 13140                           fsr2l	equ	0xFD9
 13141                           status	equ	0xFD8
 13142                           
 13143 ;; *************** function _oled_clear *****************
 13144 ;; Defined at:
 13145 ;;		line 290 in file "../Includes/Drivers/SSD1306oLED.c"
 13146 ;; Parameters:    Size  Location     Type
 13147 ;;		None
 13148 ;; Auto vars:     Size  Location     Type
 13149 ;;		None
 13150 ;; Return value:  Size  Location     Type
 13151 ;;                  1    wreg      void 
 13152 ;; Registers used:
 13153 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13154 ;; Tracked objects:
 13155 ;;		On entry : 0/1
 13156 ;;		On exit  : F/0
 13157 ;;		Unchanged: 0/0
 13158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13159 ;;      Params:         0       0       0       0       0       0       0       0       0
 13160 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13161 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13162 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13163 ;;Total ram usage:        0 bytes
 13164 ;; Hardware stack levels used:    1
 13165 ;; Hardware stack levels required when called:   16
 13166 ;; This function calls:
 13167 ;;		_oled_clearRow
 13168 ;; This function is called by:
 13169 ;;		_main
 13170 ;;		_moteHandler
 13171 ;;		_moteJoiningProcess
 13172 ;;		_moteRunningProcess
 13173 ;;		_USBapp_Handler
 13174 ;;		_oled_init
 13175 ;; This function uses a non-reentrant model
 13176 ;;
 13177                           
 13178                           	psect	text49
 13179  003C44                     __ptext49:
 13180                           	opt stack 0
 13181  003C44                     _oled_clear:
 13182                           	opt stack 13
 13183                           
 13184                           ;SSD1306oLED.c: 292: oled_clearRow(0);
 13185                           
 13186                           ;incstack = 0
 13187  003C44  0E00               	movlw	0
 13188  003C46  EC5B  F01E         	call	_oled_clearRow
 13189                           
 13190                           ;SSD1306oLED.c: 293: oled_clearRow(1);
 13191  003C4A  0E01               	movlw	1
 13192  003C4C  EC5B  F01E         	call	_oled_clearRow
 13193                           
 13194                           ;SSD1306oLED.c: 294: oled_clearRow(2);
 13195  003C50  0E02               	movlw	2
 13196  003C52  EC5B  F01E         	call	_oled_clearRow
 13197                           
 13198                           ;SSD1306oLED.c: 295: oled_clearRow(3);
 13199  003C56  0E03               	movlw	3
 13200  003C58  EF5B  F01E         	goto	_oled_clearRow
 13201  003C5C                     __end_of_oled_clear:
 13202                           	opt stack 0
 13203                           tblptru	equ	0xFF8
 13204                           tblptrh	equ	0xFF7
 13205                           tblptrl	equ	0xFF6
 13206                           tablat	equ	0xFF5
 13207                           prodh	equ	0xFF4
 13208                           prodl	equ	0xFF3
 13209                           intcon	equ	0xFF2
 13210                           postinc0	equ	0xFEE
 13211                           wreg	equ	0xFE8
 13212                           indf1	equ	0xFE7
 13213                           fsr1h	equ	0xFE2
 13214                           fsr1l	equ	0xFE1
 13215                           indf2	equ	0xFDF
 13216                           postinc2	equ	0xFDE
 13217                           postdec2	equ	0xFDD
 13218                           fsr2h	equ	0xFDA
 13219                           fsr2l	equ	0xFD9
 13220                           status	equ	0xFD8
 13221                           
 13222 ;; *************** function _oled_clearRow *****************
 13223 ;; Defined at:
 13224 ;;		line 298 in file "../Includes/Drivers/SSD1306oLED.c"
 13225 ;; Parameters:    Size  Location     Type
 13226 ;;  page            1    wreg     unsigned char 
 13227 ;; Auto vars:     Size  Location     Type
 13228 ;;  page            1   13[BANK0 ] unsigned char 
 13229 ;;  index           1   14[BANK0 ] unsigned char 
 13230 ;; Return value:  Size  Location     Type
 13231 ;;                  1    wreg      void 
 13232 ;; Registers used:
 13233 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13234 ;; Tracked objects:
 13235 ;;		On entry : 0/1
 13236 ;;		On exit  : F/0
 13237 ;;		Unchanged: 0/0
 13238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13239 ;;      Params:         0       0       0       0       0       0       0       0       0
 13240 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13241 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13242 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13243 ;;Total ram usage:        2 bytes
 13244 ;; Hardware stack levels used:    1
 13245 ;; Hardware stack levels required when called:   15
 13246 ;; This function calls:
 13247 ;;		_oled_putChar
 13248 ;; This function is called by:
 13249 ;;		_oled_clear
 13250 ;; This function uses a non-reentrant model
 13251 ;;
 13252                           
 13253                           	psect	text50
 13254  003CB6                     __ptext50:
 13255                           	opt stack 0
 13256  003CB6                     _oled_clearRow:
 13257                           	opt stack 13
 13258                           
 13259                           ; BSR set to: 0
 13260                           ;incstack = 0
 13261                           ;oled_clearRow@page stored from wreg
 13262  003CB6  0100               	movlb	0	; () banked
 13263  003CB8  6F6D               	movwf	oled_clearRow@page& (0+255),b
 13264                           
 13265                           ;SSD1306oLED.c: 300: uint8_t index;
 13266                           ;SSD1306oLED.c: 302: for(index = 0; index < 16; index++)
 13267  003CBA  6B6E               	clrf	oled_clearRow@index& (0+255),b
 13268  003CBC                     l9289:
 13269                           
 13270                           ; BSR set to: 0
 13271                           ;SSD1306oLED.c: 303: {
 13272                           ;SSD1306oLED.c: 304: oled_putChar( ' ', index, page);
 13273  003CBC  C06E  F063         	movff	oled_clearRow@index,oled_putChar@station_dot
 13274  003CC0  C06D  F064         	movff	oled_clearRow@page,oled_putChar@start_page
 13275  003CC4  0E20               	movlw	32
 13276  003CC6  EC5B  F024         	call	_oled_putChar
 13277                           
 13278                           ; BSR set to: 0
 13279  003CCA  2B6E               	incf	oled_clearRow@index& (0+255),f,b
 13280                           
 13281                           ; BSR set to: 0
 13282  003CCC  0E0F               	movlw	15
 13283  003CCE  656E               	cpfsgt	oled_clearRow@index& (0+255),b
 13284  003CD0  D7F5               	goto	l9289
 13285  003CD2  0C0F               	retlw	15
 13286  003CD4                     __end_of_oled_clearRow:
 13287                           	opt stack 0
 13288                           tblptru	equ	0xFF8
 13289                           tblptrh	equ	0xFF7
 13290                           tblptrl	equ	0xFF6
 13291                           tablat	equ	0xFF5
 13292                           prodh	equ	0xFF4
 13293                           prodl	equ	0xFF3
 13294                           intcon	equ	0xFF2
 13295                           postinc0	equ	0xFEE
 13296                           wreg	equ	0xFE8
 13297                           indf1	equ	0xFE7
 13298                           fsr1h	equ	0xFE2
 13299                           fsr1l	equ	0xFE1
 13300                           indf2	equ	0xFDF
 13301                           postinc2	equ	0xFDE
 13302                           postdec2	equ	0xFDD
 13303                           fsr2h	equ	0xFDA
 13304                           fsr2l	equ	0xFD9
 13305                           status	equ	0xFD8
 13306                           
 13307 ;; *************** function _oled_putChar *****************
 13308 ;; Defined at:
 13309 ;;		line 258 in file "../Includes/Drivers/SSD1306oLED.c"
 13310 ;; Parameters:    Size  Location     Type
 13311 ;;  k               1    wreg     unsigned char 
 13312 ;;  station_dot     1    3[BANK0 ] unsigned char 
 13313 ;;  start_page      1    4[BANK0 ] unsigned char 
 13314 ;; Auto vars:     Size  Location     Type
 13315 ;;  k               1   11[BANK0 ] unsigned char 
 13316 ;;  index           1   12[BANK0 ] unsigned char 
 13317 ;; Return value:  Size  Location     Type
 13318 ;;                  1    wreg      void 
 13319 ;; Registers used:
 13320 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13321 ;; Tracked objects:
 13322 ;;		On entry : 0/0
 13323 ;;		On exit  : F/0
 13324 ;;		Unchanged: 0/0
 13325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13326 ;;      Params:         0       2       0       0       0       0       0       0       0
 13327 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13328 ;;      Temps:          0       6       0       0       0       0       0       0       0
 13329 ;;      Totals:         0      10       0       0       0       0       0       0       0
 13330 ;;Total ram usage:       10 bytes
 13331 ;; Hardware stack levels used:    1
 13332 ;; Hardware stack levels required when called:   14
 13333 ;; This function calls:
 13334 ;;		_Set_Column_Address
 13335 ;;		_Set_Page_Address
 13336 ;;		_oled_writeData
 13337 ;; This function is called by:
 13338 ;;		_oled_putString
 13339 ;;		_oled_clearRow
 13340 ;; This function uses a non-reentrant model
 13341 ;;
 13342                           
 13343                           	psect	text51
 13344  0048B6                     __ptext51:
 13345                           	opt stack 0
 13346  0048B6                     _oled_putChar:
 13347                           	opt stack 15
 13348                           
 13349                           ; BSR set to: 0
 13350                           ;incstack = 0
 13351                           ;oled_putChar@k stored from wreg
 13352  0048B6  0100               	movlb	0	; () banked
 13353  0048B8  6F6B               	movwf	oled_putChar@k& (0+255),b
 13354                           
 13355                           ;SSD1306oLED.c: 260: uint8_t index;
 13356                           ;SSD1306oLED.c: 262: Set_Page_Address(start_page);
 13357  0048BA  5164               	movf	oled_putChar@start_page& (0+255),w,b
 13358  0048BC  ECEE  F01D         	call	_Set_Page_Address
 13359                           
 13360                           ;SSD1306oLED.c: 263: Set_Column_Address(0x00 + station_dot * 8);
 13361  0048C0  0100               	movlb	0	; () banked
 13362  0048C2  5163               	movf	oled_putChar@station_dot& (0+255),w,b
 13363  0048C4  0D08               	mullw	8
 13364  0048C6  50F3               	movf	prodl,w,c
 13365  0048C8  EC4C  F01E         	call	_Set_Column_Address
 13366                           
 13367                           ;SSD1306oLED.c: 265: LATBbits.LATB4 = 0;
 13368  0048CC  988A               	bcf	3978,4,c	;volatile
 13369                           
 13370                           ;SSD1306oLED.c: 266: for(index = 0; index < 8; index++)
 13371  0048CE  0100               	movlb	0	; () banked
 13372  0048D0  6B6C               	clrf	oled_putChar@index& (0+255),b
 13373  0048D2                     l9237:
 13374                           
 13375                           ; BSR set to: 0
 13376                           ;SSD1306oLED.c: 267: {
 13377                           ;SSD1306oLED.c: 268: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 13378  0048D2  6B65               	clrf	??_oled_putChar& (0+255),b
 13379  0048D4  6966               	setf	(??_oled_putChar+1)& (0+255),b
 13380  0048D6  516B               	movf	oled_putChar@k& (0+255),w,b
 13381  0048D8  6F67               	movwf	(??_oled_putChar+2)& (0+255),b
 13382  0048DA  6B68               	clrf	(??_oled_putChar+3)& (0+255),b
 13383  0048DC  90D8               	bcf	status,0,c
 13384  0048DE  3767               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 13385  0048E0  3768               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 13386  0048E2  90D8               	bcf	status,0,c
 13387  0048E4  3767               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 13388  0048E6  3768               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 13389  0048E8  90D8               	bcf	status,0,c
 13390  0048EA  3767               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 13391  0048EC  3768               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 13392  0048EE  C1FD  F069         	movff	_selectedFont,??_oled_putChar+4
 13393  0048F2  C1FE  F06A         	movff	_selectedFont+1,??_oled_putChar+5
 13394  0048F6  5167               	movf	(??_oled_putChar+2)& (0+255),w,b
 13395  0048F8  2769               	addwf	(??_oled_putChar+4)& (0+255),f,b
 13396  0048FA  5168               	movf	(??_oled_putChar+3)& (0+255),w,b
 13397  0048FC  236A               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 13398  0048FE  516C               	movf	oled_putChar@index& (0+255),w,b
 13399  004900  2769               	addwf	(??_oled_putChar+4)& (0+255),f,b
 13400  004902  0E00               	movlw	0
 13401  004904  236A               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 13402  004906  5165               	movf	??_oled_putChar& (0+255),w,b
 13403  004908  2769               	addwf	(??_oled_putChar+4)& (0+255),f,b
 13404  00490A  5166               	movf	(??_oled_putChar+1)& (0+255),w,b
 13405  00490C  236A               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 13406  00490E  C069  FFF6         	movff	??_oled_putChar+4,tblptrl
 13407  004912  C06A  FFF7         	movff	??_oled_putChar+5,tblptrh
 13408  004916                     	if	0	;tblptru may be non-zero
 13409  004916                     	endif
 13410  004916                     	if	0	;tblptru may be non-zero
 13411  004916                     	endif
 13412  004916  0008               	tblrd		*
 13413  004918  50F5               	movf	tablat,w,c
 13414  00491A  ECA6  F01D         	call	_oled_writeData
 13415  00491E  0100               	movlb	0	; () banked
 13416  004920  2B6C               	incf	oled_putChar@index& (0+255),f,b
 13417                           
 13418                           ; BSR set to: 0
 13419  004922  0E07               	movlw	7
 13420  004924  656C               	cpfsgt	oled_putChar@index& (0+255),b
 13421  004926  D7D5               	goto	l9237
 13422                           
 13423                           ; BSR set to: 0
 13424                           ;SSD1306oLED.c: 269: }
 13425                           ;SSD1306oLED.c: 270: LATBbits.LATB4 = 1;
 13426  004928  888A               	bsf	3978,4,c	;volatile
 13427                           
 13428                           ; BSR set to: 0
 13429  00492A  0C07               	retlw	7	;funcret
 13430  00492C                     __end_of_oled_putChar:
 13431                           	opt stack 0
 13432                           tblptru	equ	0xFF8
 13433                           tblptrh	equ	0xFF7
 13434                           tblptrl	equ	0xFF6
 13435                           tablat	equ	0xFF5
 13436                           prodh	equ	0xFF4
 13437                           prodl	equ	0xFF3
 13438                           intcon	equ	0xFF2
 13439                           postinc0	equ	0xFEE
 13440                           wreg	equ	0xFE8
 13441                           indf1	equ	0xFE7
 13442                           fsr1h	equ	0xFE2
 13443                           fsr1l	equ	0xFE1
 13444                           indf2	equ	0xFDF
 13445                           postinc2	equ	0xFDE
 13446                           postdec2	equ	0xFDD
 13447                           fsr2h	equ	0xFDA
 13448                           fsr2l	equ	0xFD9
 13449                           status	equ	0xFD8
 13450                           
 13451 ;; *************** function _oled_writeData *****************
 13452 ;; Defined at:
 13453 ;;		line 407 in file "../Includes/Drivers/SSD1306oLED.c"
 13454 ;; Parameters:    Size  Location     Type
 13455 ;;  data            1    wreg     unsigned char 
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;  data            1    1[BANK0 ] unsigned char 
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  1    wreg      void 
 13460 ;; Registers used:
 13461 ;;		wreg, status,2, cstack
 13462 ;; Tracked objects:
 13463 ;;		On entry : F/0
 13464 ;;		On exit  : 0/0
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13467 ;;      Params:         0       0       0       0       0       0       0       0       0
 13468 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13469 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13470 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13471 ;;Total ram usage:        1 bytes
 13472 ;; Hardware stack levels used:    1
 13473 ;; Hardware stack levels required when called:   12
 13474 ;; This function calls:
 13475 ;;		_SPI_Exchange8bit
 13476 ;; This function is called by:
 13477 ;;		_oled_putChar
 13478 ;; This function uses a non-reentrant model
 13479 ;;
 13480                           
 13481                           	psect	text52
 13482  003B4C                     __ptext52:
 13483                           	opt stack 0
 13484  003B4C                     _oled_writeData:
 13485                           	opt stack 16
 13486                           
 13487                           ; BSR set to: 0
 13488                           ;incstack = 0
 13489                           ;oled_writeData@data stored from wreg
 13490  003B4C  6F61               	movwf	oled_writeData@data& (0+255),b
 13491                           
 13492                           ;SSD1306oLED.c: 409: LATBbits.LATB5 = 1;
 13493  003B4E  8A8A               	bsf	3978,5,c	;volatile
 13494                           
 13495                           ;SSD1306oLED.c: 410: SPI_Exchange8bit(data);
 13496  003B50  0100               	movlb	0	; () banked
 13497  003B52  5161               	movf	oled_writeData@data& (0+255),w,b
 13498  003B54  EFC1  F01D         	goto	_SPI_Exchange8bit
 13499  003B58                     __end_of_oled_writeData:
 13500                           	opt stack 0
 13501                           tblptru	equ	0xFF8
 13502                           tblptrh	equ	0xFF7
 13503                           tblptrl	equ	0xFF6
 13504                           tablat	equ	0xFF5
 13505                           prodh	equ	0xFF4
 13506                           prodl	equ	0xFF3
 13507                           intcon	equ	0xFF2
 13508                           postinc0	equ	0xFEE
 13509                           wreg	equ	0xFE8
 13510                           indf1	equ	0xFE7
 13511                           fsr1h	equ	0xFE2
 13512                           fsr1l	equ	0xFE1
 13513                           indf2	equ	0xFDF
 13514                           postinc2	equ	0xFDE
 13515                           postdec2	equ	0xFDD
 13516                           fsr2h	equ	0xFDA
 13517                           fsr2l	equ	0xFD9
 13518                           status	equ	0xFD8
 13519                           
 13520 ;; *************** function _Set_Page_Address *****************
 13521 ;; Defined at:
 13522 ;;		line 201 in file "../Includes/Drivers/SSD1306oLED.c"
 13523 ;; Parameters:    Size  Location     Type
 13524 ;;  address         1    wreg     unsigned char 
 13525 ;; Auto vars:     Size  Location     Type
 13526 ;;  address         1    2[BANK0 ] unsigned char 
 13527 ;; Return value:  Size  Location     Type
 13528 ;;                  1    wreg      void 
 13529 ;; Registers used:
 13530 ;;		wreg, status,2, status,0, cstack
 13531 ;; Tracked objects:
 13532 ;;		On entry : F/0
 13533 ;;		On exit  : 0/0
 13534 ;;		Unchanged: 0/0
 13535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13536 ;;      Params:         0       0       0       0       0       0       0       0       0
 13537 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13538 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13539 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13540 ;;Total ram usage:        1 bytes
 13541 ;; Hardware stack levels used:    1
 13542 ;; Hardware stack levels required when called:   13
 13543 ;; This function calls:
 13544 ;;		_oled_writeCommand
 13545 ;; This function is called by:
 13546 ;;		_oled_putChar
 13547 ;; This function uses a non-reentrant model
 13548 ;;
 13549                           
 13550                           	psect	text53
 13551  003BDC                     __ptext53:
 13552                           	opt stack 0
 13553  003BDC                     _Set_Page_Address:
 13554                           	opt stack 15
 13555                           
 13556                           ;incstack = 0
 13557                           ;Set_Page_Address@address stored from wreg
 13558  003BDC  6F62               	movwf	Set_Page_Address@address& (0+255),b
 13559                           
 13560                           ;SSD1306oLED.c: 203: address = 0xB0 | address;
 13561  003BDE  0EB0               	movlw	176
 13562  003BE0  0100               	movlb	0	; () banked
 13563  003BE2  1362               	iorwf	Set_Page_Address@address& (0+255),f,b
 13564                           
 13565                           ; BSR set to: 0
 13566                           ;SSD1306oLED.c: 204: LATBbits.LATB4 = 0;
 13567  003BE4  988A               	bcf	3978,4,c	;volatile
 13568                           
 13569                           ; BSR set to: 0
 13570                           ;SSD1306oLED.c: 205: oled_writeCommand(address);
 13571  003BE6  5162               	movf	Set_Page_Address@address& (0+255),w,b
 13572  003BE8  ECA0  F01D         	call	_oled_writeCommand
 13573                           
 13574                           ;SSD1306oLED.c: 206: LATBbits.LATB4 = 1;
 13575  003BEC  888A               	bsf	3978,4,c	;volatile
 13576  003BEE  0012               	return		;funcret
 13577  003BF0                     __end_of_Set_Page_Address:
 13578                           	opt stack 0
 13579                           tblptru	equ	0xFF8
 13580                           tblptrh	equ	0xFF7
 13581                           tblptrl	equ	0xFF6
 13582                           tablat	equ	0xFF5
 13583                           prodh	equ	0xFF4
 13584                           prodl	equ	0xFF3
 13585                           intcon	equ	0xFF2
 13586                           postinc0	equ	0xFEE
 13587                           wreg	equ	0xFE8
 13588                           indf1	equ	0xFE7
 13589                           fsr1h	equ	0xFE2
 13590                           fsr1l	equ	0xFE1
 13591                           indf2	equ	0xFDF
 13592                           postinc2	equ	0xFDE
 13593                           postdec2	equ	0xFDD
 13594                           fsr2h	equ	0xFDA
 13595                           fsr2l	equ	0xFD9
 13596                           status	equ	0xFD8
 13597                           
 13598 ;; *************** function _Set_Column_Address *****************
 13599 ;; Defined at:
 13600 ;;		line 210 in file "../Includes/Drivers/SSD1306oLED.c"
 13601 ;; Parameters:    Size  Location     Type
 13602 ;;  address         1    wreg     unsigned char 
 13603 ;; Auto vars:     Size  Location     Type
 13604 ;;  address         1    2[BANK0 ] unsigned char 
 13605 ;; Return value:  Size  Location     Type
 13606 ;;                  1    wreg      void 
 13607 ;; Registers used:
 13608 ;;		wreg, status,2, status,0, cstack
 13609 ;; Tracked objects:
 13610 ;;		On entry : F/0
 13611 ;;		On exit  : 0/0
 13612 ;;		Unchanged: 0/0
 13613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13614 ;;      Params:         0       0       0       0       0       0       0       0       0
 13615 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13616 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13617 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13618 ;;Total ram usage:        1 bytes
 13619 ;; Hardware stack levels used:    1
 13620 ;; Hardware stack levels required when called:   13
 13621 ;; This function calls:
 13622 ;;		_oled_writeCommand
 13623 ;; This function is called by:
 13624 ;;		_oled_putChar
 13625 ;; This function uses a non-reentrant model
 13626 ;;
 13627                           
 13628                           	psect	text54
 13629  003C98                     __ptext54:
 13630                           	opt stack 0
 13631  003C98                     _Set_Column_Address:
 13632                           	opt stack 15
 13633                           
 13634                           ;incstack = 0
 13635                           ;Set_Column_Address@address stored from wreg
 13636  003C98  6F62               	movwf	Set_Column_Address@address& (0+255),b
 13637                           
 13638                           ;SSD1306oLED.c: 212: LATBbits.LATB4 = 0;
 13639  003C9A  988A               	bcf	3978,4,c	;volatile
 13640                           
 13641                           ;SSD1306oLED.c: 213: oled_writeCommand(0x10 | (address >> 4) );
 13642  003C9C  0100               	movlb	0	; () banked
 13643  003C9E  3962               	swapf	Set_Column_Address@address& (0+255),w,b
 13644  003CA0  0B0F               	andlw	15
 13645  003CA2  0910               	iorlw	16
 13646  003CA4  ECA0  F01D         	call	_oled_writeCommand
 13647                           
 13648                           ;SSD1306oLED.c: 214: oled_writeCommand(0x0F & address);
 13649  003CA8  0100               	movlb	0	; () banked
 13650  003CAA  5162               	movf	Set_Column_Address@address& (0+255),w,b
 13651  003CAC  0B0F               	andlw	15
 13652  003CAE  ECA0  F01D         	call	_oled_writeCommand
 13653                           
 13654                           ;SSD1306oLED.c: 215: LATBbits.LATB4 = 1;
 13655  003CB2  888A               	bsf	3978,4,c	;volatile
 13656  003CB4  0012               	return		;funcret
 13657  003CB6                     __end_of_Set_Column_Address:
 13658                           	opt stack 0
 13659                           tblptru	equ	0xFF8
 13660                           tblptrh	equ	0xFF7
 13661                           tblptrl	equ	0xFF6
 13662                           tablat	equ	0xFF5
 13663                           prodh	equ	0xFF4
 13664                           prodl	equ	0xFF3
 13665                           intcon	equ	0xFF2
 13666                           postinc0	equ	0xFEE
 13667                           wreg	equ	0xFE8
 13668                           indf1	equ	0xFE7
 13669                           fsr1h	equ	0xFE2
 13670                           fsr1l	equ	0xFE1
 13671                           indf2	equ	0xFDF
 13672                           postinc2	equ	0xFDE
 13673                           postdec2	equ	0xFDD
 13674                           fsr2h	equ	0xFDA
 13675                           fsr2l	equ	0xFD9
 13676                           status	equ	0xFD8
 13677                           
 13678 ;; *************** function _oled_writeCommand *****************
 13679 ;; Defined at:
 13680 ;;		line 401 in file "../Includes/Drivers/SSD1306oLED.c"
 13681 ;; Parameters:    Size  Location     Type
 13682 ;;  command         1    wreg     unsigned char 
 13683 ;; Auto vars:     Size  Location     Type
 13684 ;;  command         1    1[BANK0 ] unsigned char 
 13685 ;; Return value:  Size  Location     Type
 13686 ;;                  1    wreg      void 
 13687 ;; Registers used:
 13688 ;;		wreg, status,2, cstack
 13689 ;; Tracked objects:
 13690 ;;		On entry : 0/0
 13691 ;;		On exit  : 0/0
 13692 ;;		Unchanged: 0/0
 13693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13694 ;;      Params:         0       0       0       0       0       0       0       0       0
 13695 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13696 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13697 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13698 ;;Total ram usage:        1 bytes
 13699 ;; Hardware stack levels used:    1
 13700 ;; Hardware stack levels required when called:   12
 13701 ;; This function calls:
 13702 ;;		_SPI_Exchange8bit
 13703 ;; This function is called by:
 13704 ;;		_Set_Page_Address
 13705 ;;		_Set_Column_Address
 13706 ;;		_oled_devInit
 13707 ;;		_oled_setDisplay
 13708 ;;		_oled_displayOff
 13709 ;; This function uses a non-reentrant model
 13710 ;;
 13711                           
 13712                           	psect	text55
 13713  003B40                     __ptext55:
 13714                           	opt stack 0
 13715  003B40                     _oled_writeCommand:
 13716                           	opt stack 15
 13717                           
 13718                           ;incstack = 0
 13719                           ;oled_writeCommand@command stored from wreg
 13720  003B40  0100               	movlb	0	; () banked
 13721  003B42  6F61               	movwf	oled_writeCommand@command& (0+255),b
 13722                           
 13723                           ;SSD1306oLED.c: 403: LATBbits.LATB5 = 0;
 13724  003B44  9A8A               	bcf	3978,5,c	;volatile
 13725                           
 13726                           ;SSD1306oLED.c: 404: SPI_Exchange8bit(command);
 13727  003B46  5161               	movf	oled_writeCommand@command& (0+255),w,b
 13728  003B48  EFC1  F01D         	goto	_SPI_Exchange8bit
 13729  003B4C                     __end_of_oled_writeCommand:
 13730                           	opt stack 0
 13731                           tblptru	equ	0xFF8
 13732                           tblptrh	equ	0xFF7
 13733                           tblptrl	equ	0xFF6
 13734                           tablat	equ	0xFF5
 13735                           prodh	equ	0xFF4
 13736                           prodl	equ	0xFF3
 13737                           intcon	equ	0xFF2
 13738                           postinc0	equ	0xFEE
 13739                           wreg	equ	0xFE8
 13740                           indf1	equ	0xFE7
 13741                           fsr1h	equ	0xFE2
 13742                           fsr1l	equ	0xFE1
 13743                           indf2	equ	0xFDF
 13744                           postinc2	equ	0xFDE
 13745                           postdec2	equ	0xFDD
 13746                           fsr2h	equ	0xFDA
 13747                           fsr2l	equ	0xFD9
 13748                           status	equ	0xFD8
 13749                           
 13750 ;; *************** function _SPI_Exchange8bit *****************
 13751 ;; Defined at:
 13752 ;;		line 81 in file "../Includes/MccGenerated/spi.c"
 13753 ;; Parameters:    Size  Location     Type
 13754 ;;  data            1    wreg     unsigned char 
 13755 ;; Auto vars:     Size  Location     Type
 13756 ;;  data            1    0[BANK0 ] unsigned char 
 13757 ;; Return value:  Size  Location     Type
 13758 ;;                  1    wreg      unsigned char 
 13759 ;; Registers used:
 13760 ;;		wreg, status,2
 13761 ;; Tracked objects:
 13762 ;;		On entry : F/0
 13763 ;;		On exit  : 0/0
 13764 ;;		Unchanged: 0/0
 13765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13766 ;;      Params:         0       0       0       0       0       0       0       0       0
 13767 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13768 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13769 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13770 ;;Total ram usage:        1 bytes
 13771 ;; Hardware stack levels used:    1
 13772 ;; Hardware stack levels required when called:   11
 13773 ;; This function calls:
 13774 ;;		Nothing
 13775 ;; This function is called by:
 13776 ;;		_oled_writeCommand
 13777 ;;		_oled_writeData
 13778 ;; This function uses a non-reentrant model
 13779 ;;
 13780                           
 13781                           	psect	text56
 13782  003B82                     __ptext56:
 13783                           	opt stack 0
 13784  003B82                     _SPI_Exchange8bit:
 13785                           	opt stack 16
 13786                           
 13787                           ;incstack = 0
 13788                           ;SPI_Exchange8bit@data stored from wreg
 13789  003B82  6F60               	movwf	SPI_Exchange8bit@data& (0+255),b
 13790                           
 13791                           ;spi.c: 84: SSP1CON1bits.WCOL = 0;
 13792  003B84  9EC6               	bcf	4038,7,c	;volatile
 13793                           
 13794                           ;spi.c: 86: SSPBUF = data;
 13795  003B86  C060  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 13796  003B8A                     l1085:
 13797  003B8A  A0C7               	btfss	4039,0,c	;volatile
 13798  003B8C  D7FE               	goto	l1085
 13799                           
 13800                           ;spi.c: 90: }
 13801                           ;spi.c: 92: return (SSPBUF);
 13802  003B8E  50C9               	movf	4041,w,c	;volatile
 13803  003B90  0012               	return		;funcret
 13804  003B92                     __end_of_SPI_Exchange8bit:
 13805                           	opt stack 0
 13806                           tblptru	equ	0xFF8
 13807                           tblptrh	equ	0xFF7
 13808                           tblptrl	equ	0xFF6
 13809                           tablat	equ	0xFF5
 13810                           prodh	equ	0xFF4
 13811                           prodl	equ	0xFF3
 13812                           intcon	equ	0xFF2
 13813                           postinc0	equ	0xFEE
 13814                           wreg	equ	0xFE8
 13815                           indf1	equ	0xFE7
 13816                           fsr1h	equ	0xFE2
 13817                           fsr1l	equ	0xFE1
 13818                           indf2	equ	0xFDF
 13819                           postinc2	equ	0xFDE
 13820                           postdec2	equ	0xFDD
 13821                           fsr2h	equ	0xFDA
 13822                           fsr2l	equ	0xFD9
 13823                           status	equ	0xFD8
 13824                           
 13825 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 13826 ;; Defined at:
 13827 ;;		line 125 in file "../Includes/Board/USBapp.c"
 13828 ;; Parameters:    Size  Location     Type
 13829 ;;		None
 13830 ;; Auto vars:     Size  Location     Type
 13831 ;;		None
 13832 ;; Return value:  Size  Location     Type
 13833 ;;                  1    wreg      void 
 13834 ;; Registers used:
 13835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13836 ;; Tracked objects:
 13837 ;;		On entry : F/1
 13838 ;;		On exit  : F/0
 13839 ;;		Unchanged: 0/0
 13840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13841 ;;      Params:         0       0       0       0       0       0       0       0       0
 13842 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13843 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13844 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13845 ;;Total ram usage:        1 bytes
 13846 ;; Hardware stack levels used:    1
 13847 ;; Hardware stack levels required when called:   13
 13848 ;; This function calls:
 13849 ;;		_CDCTxService
 13850 ;;		_EUSART_Read
 13851 ;;		_EUSART_Write
 13852 ;;		_MOTEapp_setResponseReady
 13853 ;;		_USBapp_getrxByteFlag
 13854 ;;		_getsUSBUSART
 13855 ;;		_putUSBUSART
 13856 ;; This function is called by:
 13857 ;;		_USBapp_Handler
 13858 ;; This function uses a non-reentrant model
 13859 ;;
 13860                           
 13861                           	psect	text57
 13862  00519E                     __ptext57:
 13863                           	opt stack 0
 13864  00519E                     _USBapp_DeviceCdcEmulatorHandler:
 13865                           	opt stack 16
 13866                           
 13867                           ; BSR set to: 1
 13868                           ;USBapp.c: 128: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13869                           
 13870                           ;incstack = 0
 13871  00519E  0E1F               	movlw	31
 13872  0051A0  0100               	movlb	0	; () banked
 13873  0051A2  65F4               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 13874  0051A4  0C1F               	retlw	31
 13875                           
 13876                           ; BSR set to: 0
 13877  0051A6  B260               	btfsc	3936,1,c	;volatile
 13878  0051A8  0C1F               	retlw	31
 13879                           
 13880                           ; BSR set to: 0
 13881                           ;USBapp.c: 131: if (RS232_Out_Data_Rdy == 0)
 13882  0051AA  501B               	movf	_RS232_Out_Data_Rdy,w,c
 13883  0051AC  E10E               	bnz	l712
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;USBapp.c: 132: {
 13887                           ;USBapp.c: 133: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 13888  0051AE  0E56               	movlw	low _USB_Buffer
 13889  0051B0  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 13890  0051B2  0E01               	movlw	high _USB_Buffer
 13891  0051B4  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 13892  0051B6  0E40               	movlw	64
 13893  0051B8  6F69               	movwf	getsUSBUSART@len& (0+255),b
 13894  0051BA  EC7D  F026         	call	_getsUSBUSART	;wreg free
 13895  0051BE  6E19               	movwf	_LastRS232Out,c
 13896                           
 13897                           ; BSR set to: 0
 13898                           ;USBapp.c: 134: if(LastRS232Out > 0)
 13899  0051C0  5019               	movf	_LastRS232Out,w,c
 13900  0051C2  E003               	bz	l712
 13901                           
 13902                           ; BSR set to: 0
 13903                           ;USBapp.c: 135: {
 13904                           ;USBapp.c: 136: RS232_Out_Data_Rdy = 1;
 13905  0051C4  0E01               	movlw	1
 13906  0051C6  6E1B               	movwf	_RS232_Out_Data_Rdy,c
 13907                           
 13908                           ; BSR set to: 0
 13909                           ;USBapp.c: 137: RS232cp = 0;
 13910  0051C8  6A1C               	clrf	_RS232cp,c
 13911  0051CA                     l712:
 13912                           
 13913                           ; BSR set to: 0
 13914                           ;USBapp.c: 138: }
 13915                           ;USBapp.c: 139: }
 13916                           ;USBapp.c: 142: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 13917  0051CA  501B               	movf	_RS232_Out_Data_Rdy,w,c
 13918  0051CC  E010               	bz	l11075
 13919                           
 13920                           ; BSR set to: 0
 13921  0051CE  A2AC               	btfss	4012,1,c	;volatile
 13922  0051D0  D00E               	goto	l11075
 13923                           
 13924                           ; BSR set to: 0
 13925                           ;USBapp.c: 143: {
 13926                           ;USBapp.c: 145: EUSART_Write(USB_Buffer[RS232cp]);
 13927  0051D2  0E56               	movlw	low _USB_Buffer
 13928  0051D4  241C               	addwf	_RS232cp,w,c
 13929  0051D6  6ED9               	movwf	fsr2l,c
 13930  0051D8  6ADA               	clrf	fsr2h,c
 13931  0051DA  0E01               	movlw	high _USB_Buffer
 13932  0051DC  22DA               	addwfc	fsr2h,f,c
 13933  0051DE  50DF               	movf	indf2,w,c
 13934  0051E0  ECFB  F01F         	call	_EUSART_Write
 13935                           
 13936                           ;USBapp.c: 146: ++RS232cp;
 13937  0051E4  2A1C               	incf	_RS232cp,f,c
 13938                           
 13939                           ;USBapp.c: 147: if (RS232cp == LastRS232Out)
 13940  0051E6  5019               	movf	_LastRS232Out,w,c
 13941  0051E8  181C               	xorwf	_RS232cp,w,c
 13942  0051EA  E101               	bnz	l11075
 13943                           
 13944                           ;USBapp.c: 148: RS232_Out_Data_Rdy = 0;
 13945  0051EC  6A1B               	clrf	_RS232_Out_Data_Rdy,c
 13946  0051EE                     l11075:
 13947                           
 13948                           ;USBapp.c: 149: }
 13949                           ;USBapp.c: 152: if ((eusartRxCount))
 13950  0051EE  5022               	movf	_eusartRxCount,w,c	;volatile
 13951  0051F0  E01C               	bz	l11091
 13952                           
 13953                           ;USBapp.c: 153: {
 13954                           ;USBapp.c: 154: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 13955  0051F2  EC82  F01D         	call	_USBapp_getrxByteFlag	;wreg free
 13956  0051F6  0900               	iorlw	0
 13957  0051F8  E018               	bz	l11091
 13958  0051FA  0E3F               	movlw	63
 13959  0051FC  601A               	cpfslt	_NextUSBOut,c
 13960  0051FE  D015               	goto	l11091
 13961                           
 13962                           ;USBapp.c: 155: {
 13963                           ;USBapp.c: 156: __nop();
 13964  005200  F000               	nop	
 13965                           
 13966                           ;USBapp.c: 157: USB_Buffer[NextUSBOut] = EUSART_Read();
 13967  005202  ECE1  F01F         	call	_EUSART_Read	;wreg free
 13968  005206  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 13969  005208  0E56               	movlw	low _USB_Buffer
 13970  00520A  241A               	addwf	_NextUSBOut,w,c
 13971  00520C  6ED9               	movwf	fsr2l,c
 13972  00520E  6ADA               	clrf	fsr2h,c
 13973  005210  0E01               	movlw	high _USB_Buffer
 13974  005212  22DA               	addwfc	fsr2h,f,c
 13975  005214  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 13976                           
 13977                           ; BSR set to: 0
 13978                           ;USBapp.c: 158: ++NextUSBOut;
 13979  005218  2A1A               	incf	_NextUSBOut,f,c
 13980                           
 13981                           ; BSR set to: 0
 13982                           ;USBapp.c: 159: USB_Buffer[NextUSBOut] = 0;
 13983  00521A  0E56               	movlw	low _USB_Buffer
 13984  00521C  241A               	addwf	_NextUSBOut,w,c
 13985  00521E  6ED9               	movwf	fsr2l,c
 13986  005220  6ADA               	clrf	fsr2h,c
 13987  005222  0E01               	movlw	high _USB_Buffer
 13988  005224  22DA               	addwfc	fsr2h,f,c
 13989  005226  6ADF               	clrf	indf2,c
 13990                           
 13991                           ; BSR set to: 0
 13992                           ;USBapp.c: 160: rxByteFlag = 0;
 13993  005228  6A28               	clrf	_rxByteFlag,c	;volatile
 13994  00522A                     l11091:
 13995                           
 13996                           ;USBapp.c: 161: }
 13997                           ;USBapp.c: 162: }
 13998                           ;USBapp.c: 166: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 13999  00522A  501F               	movf	_cdc_trf_state,w,c
 14000  00522C  E002 EF66  F02E    	bnz	_CDCTxService
 14001  005232  501A               	movf	_NextUSBOut,w,c
 14002  005234  E102 EF66  F02E    	bz	_CDCTxService
 14003                           
 14004                           ;USBapp.c: 167: {
 14005                           ;USBapp.c: 168: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 14006  00523A  0E56               	movlw	low _USB_Buffer
 14007  00523C  0100               	movlb	0	; () banked
 14008  00523E  6F60               	movwf	putUSBUSART@data& (0+255),b
 14009  005240  0E01               	movlw	high _USB_Buffer
 14010  005242  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 14011  005244  C01A  F062         	movff	_NextUSBOut,putUSBUSART@length
 14012  005248  EC3D  F01E         	call	_putUSBUSART	;wreg free
 14013                           
 14014                           ;USBapp.c: 169: MOTEapp_setResponseReady();
 14015  00524C  EC7A  F01D         	call	_MOTEapp_setResponseReady	;wreg free
 14016                           
 14017                           ;USBapp.c: 170: NextUSBOut = 0;
 14018  005250  6A1A               	clrf	_NextUSBOut,c
 14019                           
 14020                           ;USBapp.c: 171: }
 14021                           ;USBapp.c: 173: CDCTxService();
 14022  005252  EF66  F02E         	goto	_CDCTxService	;wreg free
 14023  005256                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 14024                           	opt stack 0
 14025                           tblptru	equ	0xFF8
 14026                           tblptrh	equ	0xFF7
 14027                           tblptrl	equ	0xFF6
 14028                           tablat	equ	0xFF5
 14029                           prodh	equ	0xFF4
 14030                           prodl	equ	0xFF3
 14031                           intcon	equ	0xFF2
 14032                           postinc0	equ	0xFEE
 14033                           wreg	equ	0xFE8
 14034                           indf1	equ	0xFE7
 14035                           fsr1h	equ	0xFE2
 14036                           fsr1l	equ	0xFE1
 14037                           indf2	equ	0xFDF
 14038                           postinc2	equ	0xFDE
 14039                           postdec2	equ	0xFDD
 14040                           fsr2h	equ	0xFDA
 14041                           fsr2l	equ	0xFD9
 14042                           status	equ	0xFD8
 14043                           
 14044 ;; *************** function _putUSBUSART *****************
 14045 ;; Defined at:
 14046 ;;		line 503 in file "../Includes/Usb/framework/usb_device_cdc.c"
 14047 ;; Parameters:    Size  Location     Type
 14048 ;;  data            2    0[BANK0 ] PTR unsigned char 
 14049 ;;		 -> USB_Buffer(64), 
 14050 ;;  length          1    2[BANK0 ] unsigned char 
 14051 ;; Auto vars:     Size  Location     Type
 14052 ;;		None
 14053 ;; Return value:  Size  Location     Type
 14054 ;;                  1    wreg      void 
 14055 ;; Registers used:
 14056 ;;		wreg, status,2, status,0
 14057 ;; Tracked objects:
 14058 ;;		On entry : F/0
 14059 ;;		On exit  : E/0
 14060 ;;		Unchanged: 0/0
 14061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14062 ;;      Params:         0       3       0       0       0       0       0       0       0
 14063 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14064 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14065 ;;      Totals:         0       3       0       0       0       0       0       0       0
 14066 ;;Total ram usage:        3 bytes
 14067 ;; Hardware stack levels used:    1
 14068 ;; Hardware stack levels required when called:   11
 14069 ;; This function calls:
 14070 ;;		Nothing
 14071 ;; This function is called by:
 14072 ;;		_USBapp_DeviceCdcEmulatorHandler
 14073 ;; This function uses a non-reentrant model
 14074 ;;
 14075                           
 14076                           	psect	text58
 14077  003C7A                     __ptext58:
 14078                           	opt stack 0
 14079  003C7A                     _putUSBUSART:
 14080                           	opt stack 17
 14081                           
 14082                           ; BSR set to: 0
 14083                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;incstack = 0
 14087  003C7A  94A3               	bcf	4003,2,c	;volatile
 14088                           
 14089                           ; BSR set to: 0
 14090                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 14091  003C7C  501F               	movf	_cdc_trf_state,w,c
 14092  003C7E  E10A               	bnz	l10135
 14093                           
 14094                           ; BSR set to: 0
 14095                           ;usb_device_cdc.c: 530: {
 14096                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 14097  003C80  C060  F12B         	movff	putUSBUSART@data,_pCDCSrc
 14098  003C84  C061  F12C         	movff	putUSBUSART@data+1,_pCDCSrc+1
 14099                           
 14100                           ; BSR set to: 0
 14101  003C88  C062  F0F7         	movff	putUSBUSART@length,_cdc_tx_len
 14102                           
 14103                           ; BSR set to: 0
 14104  003C8C  0E01               	movlw	1
 14105  003C8E  0101               	movlb	1	; () banked
 14106  003C90  6F4D               	movwf	_cdc_mem_type& (0+255),b
 14107                           
 14108                           ; BSR set to: 1
 14109  003C92  6E1F               	movwf	_cdc_trf_state,c
 14110  003C94                     l10135:
 14111                           
 14112                           ;usb_device_cdc.c: 532: }
 14113                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 14114  003C94  84A3               	bsf	4003,2,c	;volatile
 14115  003C96  0012               	return		;funcret
 14116  003C98                     __end_of_putUSBUSART:
 14117                           	opt stack 0
 14118                           tblptru	equ	0xFF8
 14119                           tblptrh	equ	0xFF7
 14120                           tblptrl	equ	0xFF6
 14121                           tablat	equ	0xFF5
 14122                           prodh	equ	0xFF4
 14123                           prodl	equ	0xFF3
 14124                           intcon	equ	0xFF2
 14125                           postinc0	equ	0xFEE
 14126                           wreg	equ	0xFE8
 14127                           indf1	equ	0xFE7
 14128                           fsr1h	equ	0xFE2
 14129                           fsr1l	equ	0xFE1
 14130                           indf2	equ	0xFDF
 14131                           postinc2	equ	0xFDE
 14132                           postdec2	equ	0xFDD
 14133                           fsr2h	equ	0xFDA
 14134                           fsr2l	equ	0xFD9
 14135                           status	equ	0xFD8
 14136                           
 14137 ;; *************** function _getsUSBUSART *****************
 14138 ;; Defined at:
 14139 ;;		line 432 in file "../Includes/Usb/framework/usb_device_cdc.c"
 14140 ;; Parameters:    Size  Location     Type
 14141 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 14142 ;;		 -> USB_Buffer(64), 
 14143 ;;  len             1    9[BANK0 ] unsigned char 
 14144 ;; Auto vars:     Size  Location     Type
 14145 ;;		None
 14146 ;; Return value:  Size  Location     Type
 14147 ;;                  1    wreg      unsigned char 
 14148 ;; Registers used:
 14149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14150 ;; Tracked objects:
 14151 ;;		On entry : F/0
 14152 ;;		On exit  : F/0
 14153 ;;		Unchanged: 0/0
 14154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14155 ;;      Params:         0       3       0       0       0       0       0       0       0
 14156 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14157 ;;      Temps:          0       1       0       0       0       0       0       0       0
 14158 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14159 ;;Total ram usage:        6 bytes
 14160 ;; Hardware stack levels used:    1
 14161 ;; Hardware stack levels required when called:   12
 14162 ;; This function calls:
 14163 ;;		_USBTransferOnePacket
 14164 ;; This function is called by:
 14165 ;;		_USBapp_DeviceCdcEmulatorHandler
 14166 ;; This function uses a non-reentrant model
 14167 ;;
 14168                           
 14169                           	psect	text59
 14170  004CFA                     __ptext59:
 14171                           	opt stack 0
 14172  004CFA                     _getsUSBUSART:
 14173                           	opt stack 16
 14174                           
 14175                           ; BSR set to: 0
 14176                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 14177                           
 14178                           ;incstack = 0
 14179  004CFA  6BF6               	clrf	_cdc_rx_len& (0+255),b
 14180                           
 14181                           ; BSR set to: 0
 14182                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 14183  004CFC  0101               	movlb	1	; () banked
 14184  004CFE  5133               	movf	_CDCDataOutHandle& (0+255),w,b
 14185  004D00  1134               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 14186  004D02  E00A               	bz	l1768
 14187                           
 14188                           ; BSR set to: 1
 14189  004D04  C133  FFD9         	movff	_CDCDataOutHandle,fsr2l
 14190  004D08  C134  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 14191  004D0C  0E01               	movlw	1
 14192  004D0E  AEDF               	btfss	indf2,7,c
 14193  004D10  0E00               	movlw	0
 14194  004D12  0100               	movlb	0	; () banked
 14195  004D14  6F6B               	movwf	_getsUSBUSART$5651& (0+255),b
 14196  004D16  D002               	goto	L22
 14197  004D18                     l1768:
 14198                           
 14199                           ; BSR set to: 1
 14200  004D18  0100               	movlb	0	; () banked
 14201  004D1A  6B6B               	clrf	_getsUSBUSART$5651& (0+255),b
 14202  004D1C                     L22:
 14203  004D1C  6B6C               	clrf	(_getsUSBUSART$5651+1)& (0+255),b
 14204                           
 14205                           ; BSR set to: 0
 14206  004D1E  516B               	movf	_getsUSBUSART$5651& (0+255),w,b
 14207  004D20  116C               	iorwf	(_getsUSBUSART$5651+1)& (0+255),w,b
 14208  004D22  E138               	bnz	l10115
 14209                           
 14210                           ; BSR set to: 0
 14211                           ;usb_device_cdc.c: 437: {
 14212                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 14213  004D24  0101               	movlb	1	; () banked
 14214  004D26  EE20 F001          	lfsr	2,1
 14215  004D2A  5133               	movf	_CDCDataOutHandle& (0+255),w,b
 14216  004D2C  26D9               	addwf	fsr2l,f,c
 14217  004D2E  5134               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 14218  004D30  22DA               	addwfc	fsr2h,f,c
 14219  004D32  0100               	movlb	0	; () banked
 14220  004D34  5169               	movf	getsUSBUSART@len& (0+255),w,b
 14221  004D36  5CDE               	subwf	postinc2,w,c
 14222  004D38  E20A               	bc	l10105
 14223                           
 14224                           ; BSR set to: 0
 14225                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 14226  004D3A  0101               	movlb	1	; () banked
 14227  004D3C  EE20 F001          	lfsr	2,1
 14228  004D40  5133               	movf	_CDCDataOutHandle& (0+255),w,b
 14229  004D42  26D9               	addwf	fsr2l,f,c
 14230  004D44  5134               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 14231  004D46  22DA               	addwfc	fsr2h,f,c
 14232  004D48  50DF               	movf	indf2,w,c
 14233  004D4A  0100               	movlb	0	; () banked
 14234  004D4C  6F69               	movwf	getsUSBUSART@len& (0+255),b
 14235  004D4E                     l10105:
 14236                           
 14237                           ; BSR set to: 0
 14238                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 14239  004D4E  6BF6               	clrf	_cdc_rx_len& (0+255),b
 14240  004D50  D00F               	goto	l10111
 14241  004D52                     l10107:
 14242                           
 14243                           ; BSR set to: 0
 14244                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 14245  004D52  0E40               	movlw	64
 14246  004D54  25F6               	addwf	_cdc_rx_len& (0+255),w,b
 14247  004D56  6ED9               	movwf	fsr2l,c
 14248  004D58  6ADA               	clrf	fsr2h,c
 14249  004D5A  0E05               	movlw	5
 14250  004D5C  22DA               	addwfc	fsr2h,f,c
 14251  004D5E  51F6               	movf	_cdc_rx_len& (0+255),w,b
 14252  004D60  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 14253  004D62  6EE1               	movwf	fsr1l,c
 14254  004D64  0E00               	movlw	0
 14255  004D66  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 14256  004D68  6EE2               	movwf	fsr1h,c
 14257  004D6A  CFDF FFE7          	movff	indf2,indf1
 14258                           
 14259                           ; BSR set to: 0
 14260  004D6E  2BF6               	incf	_cdc_rx_len& (0+255),f,b
 14261  004D70                     l10111:
 14262                           
 14263                           ; BSR set to: 0
 14264  004D70  5169               	movf	getsUSBUSART@len& (0+255),w,b
 14265  004D72  5DF6               	subwf	_cdc_rx_len& (0+255),w,b
 14266  004D74  E3EE               	bnc	l10107
 14267                           
 14268                           ; BSR set to: 0
 14269                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 14270  004D76  0E00               	movlw	0
 14271  004D78  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 14272  004D7A  0E40               	movlw	64
 14273  004D7C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 14274  004D7E  0E05               	movlw	5
 14275  004D80  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14276  004D82  0E40               	movlw	64
 14277  004D84  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 14278  004D86  0E02               	movlw	2
 14279  004D88  ECC5  F027         	call	_USBTransferOnePacket
 14280  004D8C  C060  F133         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 14281  004D90  C061  F134         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 14282  004D94                     l10115:
 14283                           
 14284                           ; BSR set to: 0
 14285                           ;usb_device_cdc.c: 457: }
 14286                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 14287  004D94  51F6               	movf	_cdc_rx_len& (0+255),w,b
 14288                           
 14289                           ; BSR set to: 0
 14290  004D96  0012               	return		;funcret
 14291  004D98                     __end_of_getsUSBUSART:
 14292                           	opt stack 0
 14293                           tblptru	equ	0xFF8
 14294                           tblptrh	equ	0xFF7
 14295                           tblptrl	equ	0xFF6
 14296                           tablat	equ	0xFF5
 14297                           prodh	equ	0xFF4
 14298                           prodl	equ	0xFF3
 14299                           intcon	equ	0xFF2
 14300                           postinc0	equ	0xFEE
 14301                           wreg	equ	0xFE8
 14302                           indf1	equ	0xFE7
 14303                           fsr1h	equ	0xFE2
 14304                           fsr1l	equ	0xFE1
 14305                           indf2	equ	0xFDF
 14306                           postinc2	equ	0xFDE
 14307                           postdec2	equ	0xFDD
 14308                           fsr2h	equ	0xFDA
 14309                           fsr2l	equ	0xFD9
 14310                           status	equ	0xFD8
 14311                           
 14312 ;; *************** function _USBapp_getrxByteFlag *****************
 14313 ;; Defined at:
 14314 ;;		line 231 in file "../Includes/Board/USBapp.c"
 14315 ;; Parameters:    Size  Location     Type
 14316 ;;		None
 14317 ;; Auto vars:     Size  Location     Type
 14318 ;;		None
 14319 ;; Return value:  Size  Location     Type
 14320 ;;                  1    wreg      unsigned char 
 14321 ;; Registers used:
 14322 ;;		wreg, status,2
 14323 ;; Tracked objects:
 14324 ;;		On entry : 0/0
 14325 ;;		On exit  : 0/0
 14326 ;;		Unchanged: 0/0
 14327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14328 ;;      Params:         0       0       0       0       0       0       0       0       0
 14329 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14330 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14331 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14332 ;;Total ram usage:        0 bytes
 14333 ;; Hardware stack levels used:    1
 14334 ;; Hardware stack levels required when called:   11
 14335 ;; This function calls:
 14336 ;;		Nothing
 14337 ;; This function is called by:
 14338 ;;		_USBapp_DeviceCdcEmulatorHandler
 14339 ;; This function uses a non-reentrant model
 14340 ;;
 14341                           
 14342                           	psect	text60
 14343  003B04                     __ptext60:
 14344                           	opt stack 0
 14345  003B04                     _USBapp_getrxByteFlag:
 14346                           	opt stack 17
 14347                           
 14348                           ;USBapp.c: 233: return rxByteFlag;
 14349                           
 14350                           ; BSR set to: 0
 14351                           ;incstack = 0
 14352  003B04  5028               	movf	_rxByteFlag,w,c	;volatile
 14353  003B06  0012               	return		;funcret
 14354  003B08                     __end_of_USBapp_getrxByteFlag:
 14355                           	opt stack 0
 14356                           tblptru	equ	0xFF8
 14357                           tblptrh	equ	0xFF7
 14358                           tblptrl	equ	0xFF6
 14359                           tablat	equ	0xFF5
 14360                           prodh	equ	0xFF4
 14361                           prodl	equ	0xFF3
 14362                           intcon	equ	0xFF2
 14363                           postinc0	equ	0xFEE
 14364                           wreg	equ	0xFE8
 14365                           indf1	equ	0xFE7
 14366                           fsr1h	equ	0xFE2
 14367                           fsr1l	equ	0xFE1
 14368                           indf2	equ	0xFDF
 14369                           postinc2	equ	0xFDE
 14370                           postdec2	equ	0xFDD
 14371                           fsr2h	equ	0xFDA
 14372                           fsr2l	equ	0xFD9
 14373                           status	equ	0xFD8
 14374                           
 14375 ;; *************** function _MOTEapp_setResponseReady *****************
 14376 ;; Defined at:
 14377 ;;		line 949 in file "../Includes/Board/MOTEapp.c"
 14378 ;; Parameters:    Size  Location     Type
 14379 ;;		None
 14380 ;; Auto vars:     Size  Location     Type
 14381 ;;		None
 14382 ;; Return value:  Size  Location     Type
 14383 ;;                  1    wreg      void 
 14384 ;; Registers used:
 14385 ;;		None
 14386 ;; Tracked objects:
 14387 ;;		On entry : E/0
 14388 ;;		On exit  : E/0
 14389 ;;		Unchanged: E/0
 14390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14391 ;;      Params:         0       0       0       0       0       0       0       0       0
 14392 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14393 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14394 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14395 ;;Total ram usage:        0 bytes
 14396 ;; Hardware stack levels used:    1
 14397 ;; Hardware stack levels required when called:   11
 14398 ;; This function calls:
 14399 ;;		Nothing
 14400 ;; This function is called by:
 14401 ;;		_USBapp_DeviceCdcEmulatorHandler
 14402 ;; This function uses a non-reentrant model
 14403 ;;
 14404                           
 14405                           	psect	text61
 14406  003AF4                     __ptext61:
 14407                           	opt stack 0
 14408  003AF4                     _MOTEapp_setResponseReady:
 14409                           	opt stack 17
 14410                           
 14411                           ;incstack = 0
 14412  003AF4  0012               	return		;funcret
 14413  003AF6                     __end_of_MOTEapp_setResponseReady:
 14414                           	opt stack 0
 14415                           tblptru	equ	0xFF8
 14416                           tblptrh	equ	0xFF7
 14417                           tblptrl	equ	0xFF6
 14418                           tablat	equ	0xFF5
 14419                           prodh	equ	0xFF4
 14420                           prodl	equ	0xFF3
 14421                           intcon	equ	0xFF2
 14422                           postinc0	equ	0xFEE
 14423                           wreg	equ	0xFE8
 14424                           indf1	equ	0xFE7
 14425                           fsr1h	equ	0xFE2
 14426                           fsr1l	equ	0xFE1
 14427                           indf2	equ	0xFDF
 14428                           postinc2	equ	0xFDE
 14429                           postdec2	equ	0xFDD
 14430                           fsr2h	equ	0xFDA
 14431                           fsr2l	equ	0xFD9
 14432                           status	equ	0xFD8
 14433                           
 14434 ;; *************** function _EUSART_Write *****************
 14435 ;; Defined at:
 14436 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 14437 ;; Parameters:    Size  Location     Type
 14438 ;;  txData          1    wreg     unsigned char 
 14439 ;; Auto vars:     Size  Location     Type
 14440 ;;  txData          1    0[BANK0 ] unsigned char 
 14441 ;; Return value:  Size  Location     Type
 14442 ;;                  1    wreg      void 
 14443 ;; Registers used:
 14444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14445 ;; Tracked objects:
 14446 ;;		On entry : 0/0
 14447 ;;		On exit  : 0/0
 14448 ;;		Unchanged: 0/0
 14449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14450 ;;      Params:         0       0       0       0       0       0       0       0       0
 14451 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14452 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14453 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14454 ;;Total ram usage:        1 bytes
 14455 ;; Hardware stack levels used:    1
 14456 ;; Hardware stack levels required when called:   11
 14457 ;; This function calls:
 14458 ;;		Nothing
 14459 ;; This function is called by:
 14460 ;;		_EndLine
 14461 ;;		_sendCommand
 14462 ;;		_sendDataCommand
 14463 ;;		_USBapp_DeviceCdcEmulatorHandler
 14464 ;; This function uses a non-reentrant model
 14465 ;;
 14466                           
 14467                           	psect	text62
 14468  003FF6                     __ptext62:
 14469                           	opt stack 0
 14470  003FF6                     _EUSART_Write:
 14471                           	opt stack 15
 14472                           
 14473                           ;incstack = 0
 14474                           ;EUSART_Write@txData stored from wreg
 14475  003FF6  0100               	movlb	0	; () banked
 14476  003FF8  6F60               	movwf	EUSART_Write@txData& (0+255),b
 14477  003FFA                     l9245:
 14478  003FFA  5023               	movf	_eusartTxBufferRemaining,w,c	;volatile
 14479  003FFC  E0FE               	bz	l9245
 14480                           
 14481                           ;eusart.c: 143: }
 14482                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 14483  003FFE  B89D               	btfsc	3997,4,c	;volatile
 14484  004000  D003               	goto	l936
 14485                           
 14486                           ;eusart.c: 146: {
 14487                           ;eusart.c: 147: TXREG = txData;
 14488  004002  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 14489                           
 14490                           ;eusart.c: 148: }
 14491  004006  D00F               	goto	l9259
 14492  004008                     l936:
 14493                           
 14494                           ;eusart.c: 149: else
 14495                           ;eusart.c: 150: {
 14496                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 14497  004008  989D               	bcf	3997,4,c	;volatile
 14498                           
 14499                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 14500  00400A  0E40               	movlw	low _eusartTxBuffer
 14501  00400C  2424               	addwf	_eusartTxHead,w,c
 14502  00400E  6ED9               	movwf	fsr2l,c
 14503  004010  6ADA               	clrf	fsr2h,c
 14504  004012  0E02               	movlw	high _eusartTxBuffer
 14505  004014  22DA               	addwfc	fsr2h,f,c
 14506  004016  C060  FFDF         	movff	EUSART_Write@txData,indf2
 14507  00401A  2A24               	incf	_eusartTxHead,f,c
 14508                           
 14509                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 14510  00401C  0E3F               	movlw	63
 14511  00401E  6424               	cpfsgt	_eusartTxHead,c
 14512  004020  D001               	goto	l9257
 14513                           
 14514                           ;eusart.c: 154: {
 14515                           ;eusart.c: 155: eusartTxHead = 0;
 14516  004022  6A24               	clrf	_eusartTxHead,c
 14517  004024                     l9257:
 14518                           
 14519                           ;eusart.c: 156: }
 14520                           ;eusart.c: 157: eusartTxBufferRemaining--;
 14521  004024  0623               	decf	_eusartTxBufferRemaining,f,c	;volatile
 14522  004026                     l9259:
 14523                           
 14524                           ;eusart.c: 158: }
 14525                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 14526  004026  889D               	bsf	3997,4,c	;volatile
 14527  004028  0012               	return		;funcret
 14528  00402A                     __end_of_EUSART_Write:
 14529                           	opt stack 0
 14530                           tblptru	equ	0xFF8
 14531                           tblptrh	equ	0xFF7
 14532                           tblptrl	equ	0xFF6
 14533                           tablat	equ	0xFF5
 14534                           prodh	equ	0xFF4
 14535                           prodl	equ	0xFF3
 14536                           intcon	equ	0xFF2
 14537                           postinc0	equ	0xFEE
 14538                           wreg	equ	0xFE8
 14539                           indf1	equ	0xFE7
 14540                           fsr1h	equ	0xFE2
 14541                           fsr1l	equ	0xFE1
 14542                           indf2	equ	0xFDF
 14543                           postinc2	equ	0xFDE
 14544                           postdec2	equ	0xFDD
 14545                           fsr2h	equ	0xFDA
 14546                           fsr2l	equ	0xFD9
 14547                           status	equ	0xFD8
 14548                           
 14549 ;; *************** function _EUSART_Read *****************
 14550 ;; Defined at:
 14551 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;		None
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;  readValue       1    0[BANK0 ] unsigned char 
 14556 ;; Return value:  Size  Location     Type
 14557 ;;                  1    wreg      unsigned char 
 14558 ;; Registers used:
 14559 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : F/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14565 ;;      Params:         0       0       0       0       0       0       0       0       0
 14566 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14567 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14568 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14569 ;;Total ram usage:        1 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; Hardware stack levels required when called:   11
 14572 ;; This function calls:
 14573 ;;		Nothing
 14574 ;; This function is called by:
 14575 ;;		_MOTEapp_getModemResponse
 14576 ;;		_USBapp_DeviceCdcEmulatorHandler
 14577 ;; This function uses a non-reentrant model
 14578 ;;
 14579                           
 14580                           	psect	text63
 14581  003FC2                     __ptext63:
 14582                           	opt stack 0
 14583  003FC2                     _EUSART_Read:
 14584                           	opt stack 14
 14585                           
 14586                           ;eusart.c: 121: while(0 == eusartRxCount)
 14587                           
 14588                           ;incstack = 0
 14589  003FC2  D001               	goto	l9263
 14590  003FC4                     l927:
 14591                           
 14592                           ;eusart.c: 122: {
 14593                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 14594  003FC4  8E89               	bsf	3977,7,c	;volatile
 14595  003FC6                     l9263:
 14596  003FC6  5022               	movf	_eusartRxCount,w,c	;volatile
 14597  003FC8  E0FD               	bz	l927
 14598                           
 14599                           ;eusart.c: 124: }
 14600                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 14601  003FCA  9A9D               	bcf	3997,5,c	;volatile
 14602                           
 14603                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 14604  003FCC  0E00               	movlw	low _eusartRxBuffer
 14605  003FCE  0101               	movlb	1	; () banked
 14606  003FD0  254F               	addwf	_eusartRxTail& (0+255),w,b
 14607  003FD2  6ED9               	movwf	fsr2l,c
 14608  003FD4  6ADA               	clrf	fsr2h,c
 14609  003FD6  0E02               	movlw	high _eusartRxBuffer
 14610  003FD8  22DA               	addwfc	fsr2h,f,c
 14611  003FDA  50DF               	movf	indf2,w,c
 14612  003FDC  0100               	movlb	0	; () banked
 14613  003FDE  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 14614                           
 14615                           ; BSR set to: 0
 14616  003FE0  0101               	movlb	1	; () banked
 14617  003FE2  2B4F               	incf	_eusartRxTail& (0+255),f,b
 14618                           
 14619                           ; BSR set to: 1
 14620                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 14621  003FE4  0E3F               	movlw	63
 14622  003FE6  654F               	cpfsgt	_eusartRxTail& (0+255),b
 14623  003FE8  D001               	goto	l9273
 14624                           
 14625                           ; BSR set to: 1
 14626                           ;eusart.c: 130: {
 14627                           ;eusart.c: 131: eusartRxTail = 0;
 14628  003FEA  6B4F               	clrf	_eusartRxTail& (0+255),b
 14629  003FEC                     l9273:
 14630                           
 14631                           ; BSR set to: 1
 14632                           ;eusart.c: 132: }
 14633                           ;eusart.c: 133: eusartRxCount--;
 14634  003FEC  0622               	decf	_eusartRxCount,f,c	;volatile
 14635                           
 14636                           ; BSR set to: 1
 14637                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 14638  003FEE  8A9D               	bsf	3997,5,c	;volatile
 14639                           
 14640                           ; BSR set to: 1
 14641                           ;eusart.c: 136: return readValue;
 14642  003FF0  0100               	movlb	0	; () banked
 14643  003FF2  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 14644                           
 14645                           ; BSR set to: 0
 14646  003FF4  0012               	return		;funcret
 14647  003FF6                     __end_of_EUSART_Read:
 14648                           	opt stack 0
 14649                           tblptru	equ	0xFF8
 14650                           tblptrh	equ	0xFF7
 14651                           tblptrl	equ	0xFF6
 14652                           tablat	equ	0xFF5
 14653                           prodh	equ	0xFF4
 14654                           prodl	equ	0xFF3
 14655                           intcon	equ	0xFF2
 14656                           postinc0	equ	0xFEE
 14657                           wreg	equ	0xFE8
 14658                           indf1	equ	0xFE7
 14659                           fsr1h	equ	0xFE2
 14660                           fsr1l	equ	0xFE1
 14661                           indf2	equ	0xFDF
 14662                           postinc2	equ	0xFDE
 14663                           postdec2	equ	0xFDD
 14664                           fsr2h	equ	0xFDA
 14665                           fsr2l	equ	0xFD9
 14666                           status	equ	0xFD8
 14667                           
 14668 ;; *************** function _CDCTxService *****************
 14669 ;; Defined at:
 14670 ;;		line 783 in file "../Includes/Usb/framework/usb_device_cdc.c"
 14671 ;; Parameters:    Size  Location     Type
 14672 ;;		None
 14673 ;; Auto vars:     Size  Location     Type
 14674 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
 14675 ;;  i               1    9[BANK0 ] unsigned char 
 14676 ;; Return value:  Size  Location     Type
 14677 ;;                  1    wreg      void 
 14678 ;; Registers used:
 14679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14680 ;; Tracked objects:
 14681 ;;		On entry : 0/0
 14682 ;;		On exit  : F/0
 14683 ;;		Unchanged: 0/0
 14684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14685 ;;      Params:         0       0       0       0       0       0       0       0       0
 14686 ;;      Locals:         0       4       0       0       0       0       0       0       0
 14687 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14688 ;;      Totals:         0       4       0       0       0       0       0       0       0
 14689 ;;Total ram usage:        4 bytes
 14690 ;; Hardware stack levels used:    1
 14691 ;; Hardware stack levels required when called:   12
 14692 ;; This function calls:
 14693 ;;		_USBTransferOnePacket
 14694 ;; This function is called by:
 14695 ;;		_USBapp_DeviceCdcEmulatorHandler
 14696 ;; This function uses a non-reentrant model
 14697 ;;
 14698                           
 14699                           	psect	text64
 14700  005CCC                     __ptext64:
 14701                           	opt stack 0
 14702  005CCC                     _CDCTxService:
 14703                           	opt stack 16
 14704                           
 14705                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 14706                           ;usb_device_cdc.c: 786: uint8_t i;
 14707                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 14708                           
 14709                           ; BSR set to: 0
 14710                           ;incstack = 0
 14711  005CCC  94A3               	bcf	4003,2,c	;volatile
 14712                           
 14713                           ;usb_device_cdc.c: 790: {};
 14714                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 14715  005CCE  0101               	movlb	1	; () banked
 14716  005CD0  5131               	movf	_CDCDataInHandle& (0+255),w,b
 14717  005CD2  1132               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 14718  005CD4  E00A               	bz	l1798
 14719                           
 14720                           ; BSR set to: 1
 14721  005CD6  C131  FFD9         	movff	_CDCDataInHandle,fsr2l
 14722  005CDA  C132  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 14723  005CDE  0E01               	movlw	1
 14724  005CE0  AEDF               	btfss	indf2,7,c
 14725  005CE2  0E00               	movlw	0
 14726  005CE4  0100               	movlb	0	; () banked
 14727  005CE6  6F67               	movwf	_CDCTxService$5699& (0+255),b
 14728  005CE8  D002               	goto	L23
 14729  005CEA                     l1798:
 14730                           
 14731                           ; BSR set to: 1
 14732  005CEA  0100               	movlb	0	; () banked
 14733  005CEC  6B67               	clrf	_CDCTxService$5699& (0+255),b
 14734  005CEE                     L23:
 14735  005CEE  6B68               	clrf	(_CDCTxService$5699+1)& (0+255),b
 14736                           
 14737                           ; BSR set to: 0
 14738  005CF0  5167               	movf	_CDCTxService$5699& (0+255),w,b
 14739  005CF2  1168               	iorwf	(_CDCTxService$5699+1)& (0+255),w,b
 14740  005CF4  E002               	bz	l10147
 14741                           
 14742                           ; BSR set to: 0
 14743                           ;usb_device_cdc.c: 793: {
 14744                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 14745  005CF6  84A3               	bsf	4003,2,c	;volatile
 14746                           
 14747                           ;usb_device_cdc.c: 795: return;
 14748  005CF8  0012               	return	
 14749  005CFA                     l10147:
 14750                           
 14751                           ; BSR set to: 0
 14752                           ;usb_device_cdc.c: 796: }
 14753                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 14754  005CFA  0E03               	movlw	3
 14755  005CFC  181F               	xorwf	_cdc_trf_state,w,c
 14756  005CFE  E101               	bnz	l10151
 14757                           
 14758                           ; BSR set to: 0
 14759                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 14760  005D00  6A1F               	clrf	_cdc_trf_state,c
 14761  005D02                     l10151:
 14762                           
 14763                           ; BSR set to: 0
 14764                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 14765  005D02  501F               	movf	_cdc_trf_state,w,c
 14766  005D04  E102               	bnz	l10155
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;usb_device_cdc.c: 810: {
 14770                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 14771  005D06  84A3               	bsf	4003,2,c	;volatile
 14772                           
 14773                           ;usb_device_cdc.c: 812: return;
 14774  005D08  0012               	return	
 14775  005D0A                     l10155:
 14776                           
 14777                           ; BSR set to: 0
 14778                           ;usb_device_cdc.c: 813: }
 14779                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 14780  005D0A  0E02               	movlw	2
 14781  005D0C  181F               	xorwf	_cdc_trf_state,w,c
 14782  005D0E  E110               	bnz	l10161
 14783                           
 14784                           ; BSR set to: 0
 14785                           ;usb_device_cdc.c: 819: {
 14786                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 14787  005D10  0E01               	movlw	1
 14788  005D12  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 14789  005D14  0E00               	movlw	0
 14790  005D16  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 14791  005D18  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14792  005D1A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 14793  005D1C  0E02               	movlw	2
 14794  005D1E  ECC5  F027         	call	_USBTransferOnePacket
 14795  005D22  C060  F131         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 14796  005D26  C061  F132         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 14797                           
 14798                           ; BSR set to: 0
 14799                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 14800  005D2A  0E03               	movlw	3
 14801  005D2C  6E1F               	movwf	_cdc_trf_state,c
 14802                           
 14803                           ;usb_device_cdc.c: 823: }
 14804  005D2E  D055               	goto	l10205
 14805  005D30                     l10161:
 14806                           
 14807                           ; BSR set to: 0
 14808                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 14809  005D30  041F               	decf	_cdc_trf_state,w,c
 14810  005D32  E153               	bnz	l10205
 14811                           
 14812                           ; BSR set to: 0
 14813                           ;usb_device_cdc.c: 825: {
 14814                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 14815  005D34  0E40               	movlw	64
 14816  005D36  65F7               	cpfsgt	_cdc_tx_len& (0+255),b
 14817  005D38  D002               	goto	l1807
 14818                           
 14819                           ; BSR set to: 0
 14820                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 14821  005D3A  6F6A               	movwf	CDCTxService@byte_to_send& (0+255),b
 14822  005D3C  D002               	goto	l10167
 14823  005D3E                     l1807:
 14824                           
 14825                           ; BSR set to: 0
 14826                           ;usb_device_cdc.c: 831: else
 14827                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 14828  005D3E  C0F7  F06A         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 14829  005D42                     l10167:
 14830                           
 14831                           ; BSR set to: 0
 14832                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 14833  005D42  516A               	movf	CDCTxService@byte_to_send& (0+255),w,b
 14834  005D44  5FF7               	subwf	_cdc_tx_len& (0+255),f,b
 14835                           
 14836                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 14837  005D46  0E00               	movlw	0
 14838  005D48  0101               	movlb	1	; () banked
 14839  005D4A  6F28               	movwf	_pCDCDst& (0+255),b
 14840  005D4C  0E05               	movlw	5
 14841  005D4E  6F29               	movwf	(_pCDCDst+1)& (0+255),b
 14842                           
 14843                           ; BSR set to: 1
 14844                           ;usb_device_cdc.c: 841: i = byte_to_send;
 14845  005D50  C06A  F069         	movff	CDCTxService@byte_to_send,CDCTxService@i
 14846                           
 14847                           ; BSR set to: 1
 14848                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 14849  005D54  514D               	movf	_cdc_mem_type& (0+255),w,b
 14850  005D56  E012               	bz	l10183
 14851  005D58  D026               	goto	l10193
 14852  005D5A                     l10175:
 14853                           
 14854                           ; BSR set to: 0
 14855                           ;usb_device_cdc.c: 845: {
 14856                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 14857  005D5A  C12B  FFD9         	movff	_pCDCSrc,fsr2l
 14858  005D5E  C12C  FFDA         	movff	_pCDCSrc+1,fsr2h
 14859  005D62  C128  FFE1         	movff	_pCDCDst,fsr1l
 14860  005D66  C129  FFE2         	movff	_pCDCDst+1,fsr1h
 14861  005D6A  CFDF FFE7          	movff	indf2,indf1
 14862                           
 14863                           ; BSR set to: 0
 14864                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 14865  005D6E  0101               	movlb	1	; () banked
 14866  005D70  4B28               	infsnz	_pCDCDst& (0+255),f,b
 14867  005D72  2B29               	incf	(_pCDCDst+1)& (0+255),f,b
 14868                           
 14869                           ; BSR set to: 1
 14870                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 14871  005D74  4B2B               	infsnz	_pCDCSrc& (0+255),f,b
 14872  005D76  2B2C               	incf	(_pCDCSrc+1)& (0+255),f,b
 14873                           
 14874                           ; BSR set to: 1
 14875                           ;usb_device_cdc.c: 849: i--;
 14876  005D78  0100               	movlb	0	; () banked
 14877  005D7A  0769               	decf	CDCTxService@i& (0+255),f,b
 14878  005D7C                     l10183:
 14879  005D7C  0100               	movlb	0	; () banked
 14880  005D7E  5169               	movf	CDCTxService@i& (0+255),w,b
 14881  005D80  E015               	bz	l10195
 14882  005D82  D7EB               	goto	l10175
 14883  005D84                     l10185:
 14884                           
 14885                           ; BSR set to: 0
 14886                           ;usb_device_cdc.c: 855: {
 14887                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 14888  005D84  C12B  FFD9         	movff	_pCDCSrc,fsr2l
 14889  005D88  C12C  FFDA         	movff	_pCDCSrc+1,fsr2h
 14890  005D8C  C128  FFE1         	movff	_pCDCDst,fsr1l
 14891  005D90  C129  FFE2         	movff	_pCDCDst+1,fsr1h
 14892  005D94  CFDF FFE7          	movff	indf2,indf1
 14893                           
 14894                           ; BSR set to: 0
 14895                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 14896  005D98  0101               	movlb	1	; () banked
 14897  005D9A  4B28               	infsnz	_pCDCDst& (0+255),f,b
 14898  005D9C  2B29               	incf	(_pCDCDst+1)& (0+255),f,b
 14899                           
 14900                           ; BSR set to: 1
 14901                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 14902  005D9E  4B2B               	infsnz	_pCDCSrc& (0+255),f,b
 14903  005DA0  2B2C               	incf	(_pCDCSrc+1)& (0+255),f,b
 14904                           
 14905                           ; BSR set to: 1
 14906                           ;usb_device_cdc.c: 859: i--;
 14907  005DA2  0100               	movlb	0	; () banked
 14908  005DA4  0769               	decf	CDCTxService@i& (0+255),f,b
 14909  005DA6                     l10193:
 14910  005DA6  0100               	movlb	0	; () banked
 14911  005DA8  5169               	movf	CDCTxService@i& (0+255),w,b
 14912  005DAA  E1EC               	bnz	l10185
 14913  005DAC                     l10195:
 14914                           
 14915                           ; BSR set to: 0
 14916                           ;usb_device_cdc.c: 860: }
 14917                           ;usb_device_cdc.c: 861: }
 14918                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 14919  005DAC  51F7               	movf	_cdc_tx_len& (0+255),w,b
 14920  005DAE  E106               	bnz	l10203
 14921                           
 14922                           ; BSR set to: 0
 14923                           ;usb_device_cdc.c: 868: {
 14924                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 14925  005DB0  0E40               	movlw	64
 14926  005DB2  196A               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 14927                           
 14928                           ; BSR set to: 0
 14929                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 14930  005DB4  0E02               	movlw	2
 14931  005DB6  A4D8               	btfss	status,2,c
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;usb_device_cdc.c: 871: else
 14935                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 14936  005DB8  0E03               	movlw	3
 14937  005DBA  6E1F               	movwf	_cdc_trf_state,c
 14938  005DBC                     l10203:
 14939                           
 14940                           ; BSR set to: 0
 14941                           ;usb_device_cdc.c: 873: }
 14942                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 14943  005DBC  0E01               	movlw	1
 14944  005DBE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 14945  005DC0  0E00               	movlw	0
 14946  005DC2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 14947  005DC4  0E05               	movlw	5
 14948  005DC6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14949  005DC8  C06A  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 14950  005DCC  0E02               	movlw	2
 14951  005DCE  ECC5  F027         	call	_USBTransferOnePacket
 14952  005DD2  C060  F131         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 14953  005DD6  C061  F132         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 14954  005DDA                     l10205:
 14955                           
 14956                           ; BSR set to: 0
 14957                           ;usb_device_cdc.c: 876: }
 14958                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 14959  005DDA  84A3               	bsf	4003,2,c	;volatile
 14960                           
 14961                           ; BSR set to: 0
 14962  005DDC  0012               	return		;funcret
 14963  005DDE                     __end_of_CDCTxService:
 14964                           	opt stack 0
 14965                           tblptru	equ	0xFF8
 14966                           tblptrh	equ	0xFF7
 14967                           tblptrl	equ	0xFF6
 14968                           tablat	equ	0xFF5
 14969                           prodh	equ	0xFF4
 14970                           prodl	equ	0xFF3
 14971                           intcon	equ	0xFF2
 14972                           postinc0	equ	0xFEE
 14973                           wreg	equ	0xFE8
 14974                           indf1	equ	0xFE7
 14975                           fsr1h	equ	0xFE2
 14976                           fsr1l	equ	0xFE1
 14977                           indf2	equ	0xFDF
 14978                           postinc2	equ	0xFDE
 14979                           postdec2	equ	0xFDD
 14980                           fsr2h	equ	0xFDA
 14981                           fsr2l	equ	0xFD9
 14982                           status	equ	0xFD8
 14983                           
 14984 ;; *************** function _USBTransferOnePacket *****************
 14985 ;; Defined at:
 14986 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;  ep              1    wreg     unsigned char 
 14989 ;;  dir             1    0[BANK0 ] unsigned char 
 14990 ;;  data            2    1[BANK0 ] PTR unsigned char 
 14991 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 14992 ;;  len             1    3[BANK0 ] unsigned char 
 14993 ;; Auto vars:     Size  Location     Type
 14994 ;;  ep              1    4[BANK0 ] unsigned char 
 14995 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 14996 ;;		 -> BDT(48), NULL(0), 
 14997 ;; Return value:  Size  Location     Type
 14998 ;;                  2    0[BANK0 ] PTR void 
 14999 ;; Registers used:
 15000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15001 ;; Tracked objects:
 15002 ;;		On entry : F/0
 15003 ;;		On exit  : F/0
 15004 ;;		Unchanged: 0/0
 15005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15006 ;;      Params:         0       4       0       0       0       0       0       0       0
 15007 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15008 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15009 ;;      Totals:         0       7       0       0       0       0       0       0       0
 15010 ;;Total ram usage:        7 bytes
 15011 ;; Hardware stack levels used:    1
 15012 ;; Hardware stack levels required when called:   11
 15013 ;; This function calls:
 15014 ;;		Nothing
 15015 ;; This function is called by:
 15016 ;;		_getsUSBUSART
 15017 ;;		_CDCTxService
 15018 ;; This function uses a non-reentrant model
 15019 ;;
 15020                           
 15021                           	psect	text65
 15022  004F8A                     __ptext65:
 15023                           	opt stack 0
 15024  004F8A                     _USBTransferOnePacket:
 15025                           	opt stack 16
 15026                           
 15027                           ; BSR set to: 0
 15028                           ;incstack = 0
 15029                           ;USBTransferOnePacket@ep stored from wreg
 15030  004F8A  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 15031                           
 15032                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 15033                           ;usb_device.c: 762: if(dir != 0)
 15034  004F8C  0100               	movlb	0	; () banked
 15035  004F8E  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 15036  004F90  E007               	bz	l9529
 15037                           
 15038                           ; BSR set to: 0
 15039                           ;usb_device.c: 763: {
 15040                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 15041  004F92  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15042  004F94  0D02               	mullw	2
 15043  004F96  50F3               	movf	prodl,w,c
 15044  004F98  0F0F               	addlw	low _pBDTEntryIn
 15045  004F9A  6ED9               	movwf	fsr2l,c
 15046  004F9C  6ADA               	clrf	fsr2h,c
 15047  004F9E  D008               	goto	L25
 15048  004FA0                     l9529:
 15049                           
 15050                           ; BSR set to: 0
 15051                           ;usb_device.c: 767: else
 15052                           ;usb_device.c: 768: {
 15053                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 15054  004FA0  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15055  004FA2  0D02               	mullw	2
 15056  004FA4  0E18               	movlw	low _pBDTEntryOut
 15057  004FA6  24F3               	addwf	prodl,w,c
 15058  004FA8  6ED9               	movwf	fsr2l,c
 15059  004FAA  0E01               	movlw	high _pBDTEntryOut
 15060  004FAC  20F4               	addwfc	prodh,w,c
 15061  004FAE  6EDA               	movwf	fsr2h,c
 15062  004FB0                     L25:
 15063  004FB0  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 15064  004FB4  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 15065                           
 15066                           ; BSR set to: 0
 15067                           ;usb_device.c: 771: }
 15068                           ;usb_device.c: 775: if(handle == 0)
 15069  004FB8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15070  004FBA  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15071  004FBC  E103               	bnz	l9535
 15072                           
 15073                           ; BSR set to: 0
 15074                           ;usb_device.c: 776: {
 15075                           ;usb_device.c: 777: return 0;
 15076  004FBE  6B60               	clrf	?_USBTransferOnePacket& (0+255),b
 15077  004FC0  6B61               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
 15078  004FC2  0012               	return	
 15079  004FC4                     l9535:
 15080                           
 15081                           ; BSR set to: 0
 15082                           ;usb_device.c: 778: }
 15083                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 15084  004FC4  EE20 F002          	lfsr	2,2
 15085  004FC8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15086  004FCA  26D9               	addwf	fsr2l,f,c
 15087  004FCC  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15088  004FCE  22DA               	addwfc	fsr2h,f,c
 15089  004FD0  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 15090  004FD4  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 15091                           
 15092                           ;usb_device.c: 781: handle->CNT = len;
 15093  004FD8  EE20 F001          	lfsr	2,1
 15094  004FDC  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15095  004FDE  26D9               	addwf	fsr2l,f,c
 15096  004FE0  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15097  004FE2  22DA               	addwfc	fsr2h,f,c
 15098  004FE4  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 15099                           
 15100                           ; BSR set to: 0
 15101                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 15102  004FE8  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15103  004FEC  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15104  004FF0  0E40               	movlw	64
 15105  004FF2  16DF               	andwf	indf2,f,c
 15106                           
 15107                           ; BSR set to: 0
 15108                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 15109  004FF4  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15110  004FF8  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15111  004FFC  0E00               	movlw	0
 15112  004FFE  86DB               	bsf	plusw2,3,c
 15113                           
 15114                           ; BSR set to: 0
 15115                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 15116  005000  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15117  005004  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15118  005008  8EDB               	bsf	plusw2,7,c
 15119                           
 15120                           ; BSR set to: 0
 15121                           ;usb_device.c: 787: if(dir != 0)
 15122  00500A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 15123  00500C  E007               	bz	l9547
 15124                           
 15125                           ; BSR set to: 0
 15126                           ;usb_device.c: 788: {
 15127                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 15128  00500E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15129  005010  0D02               	mullw	2
 15130  005012  50F3               	movf	prodl,w,c
 15131  005014  0F0F               	addlw	low _pBDTEntryIn
 15132  005016  6ED9               	movwf	fsr2l,c
 15133  005018  6ADA               	clrf	fsr2h,c
 15134  00501A  D008               	goto	L26
 15135  00501C                     l9547:
 15136                           
 15137                           ; BSR set to: 0
 15138                           ;usb_device.c: 792: else
 15139                           ;usb_device.c: 793: {
 15140                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 15141  00501C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15142  00501E  0D02               	mullw	2
 15143  005020  0E18               	movlw	low _pBDTEntryOut
 15144  005022  24F3               	addwf	prodl,w,c
 15145  005024  6ED9               	movwf	fsr2l,c
 15146  005026  0E01               	movlw	high _pBDTEntryOut
 15147  005028  20F4               	addwfc	prodh,w,c
 15148  00502A  6EDA               	movwf	fsr2h,c
 15149  00502C                     L26:
 15150  00502C  0E04               	movlw	4
 15151  00502E  1ADF               	xorwf	indf2,f,c
 15152                           
 15153                           ; BSR set to: 0
 15154                           ;usb_device.c: 796: }
 15155                           ;usb_device.c: 797: return (void*)handle;
 15156  005030  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 15157  005034  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 15158                           
 15159                           ; BSR set to: 0
 15160  005038  0C04               	retlw	4	;funcret
 15161  00503A                     __end_of_USBTransferOnePacket:
 15162                           	opt stack 0
 15163                           tblptru	equ	0xFF8
 15164                           tblptrh	equ	0xFF7
 15165                           tblptrl	equ	0xFF6
 15166                           tablat	equ	0xFF5
 15167                           prodh	equ	0xFF4
 15168                           prodl	equ	0xFF3
 15169                           intcon	equ	0xFF2
 15170                           postinc0	equ	0xFEE
 15171                           wreg	equ	0xFE8
 15172                           indf1	equ	0xFE7
 15173                           fsr1h	equ	0xFE2
 15174                           fsr1l	equ	0xFE1
 15175                           indf2	equ	0xFDF
 15176                           postinc2	equ	0xFDE
 15177                           postdec2	equ	0xFDD
 15178                           plusw2	equ	0xFDB
 15179                           fsr2h	equ	0xFDA
 15180                           fsr2l	equ	0xFD9
 15181                           status	equ	0xFD8
 15182                           
 15183 ;; *************** function _USBDeviceInit *****************
 15184 ;; Defined at:
 15185 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 15186 ;; Parameters:    Size  Location     Type
 15187 ;;		None
 15188 ;; Auto vars:     Size  Location     Type
 15189 ;;  i               1    8[BANK0 ] unsigned char 
 15190 ;; Return value:  Size  Location     Type
 15191 ;;                  1    wreg      void 
 15192 ;; Registers used:
 15193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15194 ;; Tracked objects:
 15195 ;;		On entry : F/0
 15196 ;;		On exit  : F/0
 15197 ;;		Unchanged: 0/0
 15198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15199 ;;      Params:         0       0       0       0       0       0       0       0       0
 15200 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15201 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15202 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15203 ;;Total ram usage:        1 bytes
 15204 ;; Hardware stack levels used:    1
 15205 ;; Hardware stack levels required when called:   12
 15206 ;; This function calls:
 15207 ;;		_memset
 15208 ;; This function is called by:
 15209 ;;		_main
 15210 ;; This function uses a non-reentrant model
 15211 ;;
 15212                           
 15213                           	psect	text66
 15214  005800                     __ptext66:
 15215                           	opt stack 0
 15216  005800                     _USBDeviceInit:
 15217                           	opt stack 18
 15218                           
 15219                           ; BSR set to: 0
 15220                           ;usb_device.c: 239: uint8_t i;
 15221                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 15222                           
 15223                           ; BSR set to: 0
 15224                           ;incstack = 0
 15225  005800  94A3               	bcf	4003,2,c	;volatile
 15226                           
 15227                           ;usb_device.c: 244: {UEIR = 0;};
 15228  005802  6A67               	clrf	3943,c	;volatile
 15229                           
 15230                           ;usb_device.c: 247: {UIR = 0;};
 15231  005804  6A65               	clrf	3941,c	;volatile
 15232                           
 15233                           ;usb_device.c: 250: UEP0 = 0;
 15234  005806  6A6A               	clrf	3946,c	;volatile
 15235                           
 15236                           ; BSR set to: 0
 15237                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 15238  005808  0E6B               	movlw	107
 15239  00580A  6F60               	movwf	memset@p1& (0+255),b
 15240  00580C  0E0F               	movlw	15
 15241  00580E  6F61               	movwf	(memset@p1+1)& (0+255),b
 15242  005810  6B63               	clrf	(memset@c+1)& (0+255),b
 15243  005812  6B62               	clrf	memset@c& (0+255),b
 15244  005814  6B65               	clrf	(memset@n+1)& (0+255),b
 15245  005816  0E02               	movlw	2
 15246  005818  6F64               	movwf	memset@n& (0+255),b
 15247  00581A  EC58  F01F         	call	_memset	;wreg free
 15248                           
 15249                           ; BSR set to: 0
 15250                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 15251  00581E  0E16               	movlw	22
 15252  005820  6E62               	movwf	3938,c	;volatile
 15253                           
 15254                           ; BSR set to: 0
 15255  005822  0E9F               	movlw	159
 15256  005824  6E66               	movwf	3942,c	;volatile
 15257                           
 15258                           ; BSR set to: 0
 15259  005826  0E7B               	movlw	123
 15260  005828  6E64               	movwf	3940,c	;volatile
 15261                           
 15262                           ; BSR set to: 0
 15263                           ;usb_device.c: 257: ;
 15264                           ;usb_device.c: 260: ;
 15265                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 15266  00582A  6B68               	clrf	USBDeviceInit@i& (0+255),b
 15267  00582C                     l11197:
 15268                           
 15269                           ; BSR set to: 0
 15270                           ;usb_device.c: 264: {
 15271                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 15272  00582C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 15273  00582E  0D04               	mullw	4
 15274  005830  0E00               	movlw	0
 15275  005832  24F3               	addwf	prodl,w,c
 15276  005834  6ED9               	movwf	fsr2l,c
 15277  005836  0E04               	movlw	4
 15278  005838  20F4               	addwfc	prodh,w,c
 15279  00583A  6EDA               	movwf	fsr2h,c
 15280  00583C  6ADE               	clrf	postinc2,c
 15281  00583E  6ADE               	clrf	postinc2,c
 15282  005840  6ADE               	clrf	postinc2,c
 15283  005842  6ADD               	clrf	postdec2,c
 15284                           
 15285                           ; BSR set to: 0
 15286  005844  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 15287                           
 15288                           ; BSR set to: 0
 15289  005846  0E0B               	movlw	11
 15290  005848  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 15291  00584A  D7F0               	goto	l11197
 15292                           
 15293                           ; BSR set to: 0
 15294                           ;usb_device.c: 266: }
 15295                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 15296  00584C  8C60               	bsf	3936,6,c	;volatile
 15297                           
 15298                           ;usb_device.c: 272: UADDR = 0x00;
 15299  00584E  6A63               	clrf	3939,c	;volatile
 15300                           
 15301                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 15302  005850  9860               	bcf	3936,4,c	;volatile
 15303                           
 15304                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 15305  005852  9C60               	bcf	3936,6,c	;volatile
 15306                           
 15307                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 15308  005854  D005               	goto	l11211
 15309  005856                     l11203:
 15310                           
 15311                           ; BSR set to: 0
 15312                           ;usb_device.c: 282: {
 15313                           ;usb_device.c: 283: (UIR &= 0xF7);
 15314  005856  9665               	bcf	3941,3,c	;volatile
 15315                           
 15316                           ; BSR set to: 0
 15317                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 15318  005858  6A0C               	clrf	_inPipes+3,c	;volatile
 15319                           
 15320                           ; BSR set to: 0
 15321                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 15322  00585A  6A04               	clrf	_outPipes+3,c	;volatile
 15323                           
 15324                           ; BSR set to: 0
 15325                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 15326  00585C  6A05               	clrf	_outPipes+4,c	;volatile
 15327  00585E  6A06               	clrf	_outPipes+5,c	;volatile
 15328  005860                     l11211:
 15329                           
 15330                           ; BSR set to: 0
 15331  005860  B665               	btfsc	3941,3,c	;volatile
 15332  005862  D7F9               	goto	l11203
 15333                           
 15334                           ; BSR set to: 0
 15335                           ;usb_device.c: 288: }
 15336                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 15337  005864  0E01               	movlw	1
 15338  005866  0101               	movlb	1	; () banked
 15339  005868  6F4A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 15340                           
 15341                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 15342  00586A  6F4B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 15343                           
 15344                           ; BSR set to: 1
 15345                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 15346  00586C  6B48               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 15347                           
 15348                           ; BSR set to: 1
 15349                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 15350  00586E  6B49               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 15351                           
 15352                           ; BSR set to: 1
 15353                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 15354  005870  6B47               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 15355                           
 15356                           ; BSR set to: 1
 15357                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 15358  005872  0100               	movlb	0	; () banked
 15359  005874  6B68               	clrf	USBDeviceInit@i& (0+255),b
 15360  005876                     l11227:
 15361                           
 15362                           ; BSR set to: 0
 15363                           ;usb_device.c: 302: {
 15364                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 15365  005876  5168               	movf	USBDeviceInit@i& (0+255),w,b
 15366  005878  0D02               	mullw	2
 15367  00587A  50F3               	movf	prodl,w,c
 15368  00587C  0F0F               	addlw	low _pBDTEntryIn
 15369  00587E  6ED9               	movwf	fsr2l,c
 15370  005880  6ADA               	clrf	fsr2h,c
 15371  005882  6ADE               	clrf	postinc2,c
 15372  005884  6ADD               	clrf	postdec2,c
 15373                           
 15374                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 15375  005886  5168               	movf	USBDeviceInit@i& (0+255),w,b
 15376  005888  0D02               	mullw	2
 15377  00588A  0E18               	movlw	low _pBDTEntryOut
 15378  00588C  24F3               	addwf	prodl,w,c
 15379  00588E  6ED9               	movwf	fsr2l,c
 15380  005890  0E01               	movlw	high _pBDTEntryOut
 15381  005892  20F4               	addwfc	prodh,w,c
 15382  005894  6EDA               	movwf	fsr2h,c
 15383  005896  6ADE               	clrf	postinc2,c
 15384  005898  6ADD               	clrf	postdec2,c
 15385                           
 15386                           ; BSR set to: 0
 15387                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 15388  00589A  0E22               	movlw	low _ep_data_in
 15389  00589C  2568               	addwf	USBDeviceInit@i& (0+255),w,b
 15390  00589E  6ED9               	movwf	fsr2l,c
 15391  0058A0  6ADA               	clrf	fsr2h,c
 15392  0058A2  0E01               	movlw	high _ep_data_in
 15393  0058A4  22DA               	addwfc	fsr2h,f,c
 15394  0058A6  6ADF               	clrf	indf2,c
 15395                           
 15396                           ; BSR set to: 0
 15397                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 15398  0058A8  0E25               	movlw	low _ep_data_out
 15399  0058AA  2568               	addwf	USBDeviceInit@i& (0+255),w,b
 15400  0058AC  6ED9               	movwf	fsr2l,c
 15401  0058AE  6ADA               	clrf	fsr2h,c
 15402  0058B0  0E01               	movlw	high _ep_data_out
 15403  0058B2  22DA               	addwfc	fsr2h,f,c
 15404  0058B4  6ADF               	clrf	indf2,c
 15405                           
 15406                           ; BSR set to: 0
 15407  0058B6  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 15408                           
 15409                           ; BSR set to: 0
 15410  0058B8  0E02               	movlw	2
 15411  0058BA  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 15412  0058BC  D7DC               	goto	l11227
 15413                           
 15414                           ; BSR set to: 0
 15415                           ;usb_device.c: 307: }
 15416                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15417  0058BE  0E08               	movlw	8
 15418  0058C0  6E0F               	movwf	_pBDTEntryIn,c
 15419  0058C2  0E04               	movlw	4
 15420  0058C4  6E10               	movwf	_pBDTEntryIn+1,c
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 15424  0058C6  0E16               	movlw	22
 15425  0058C8  6E6A               	movwf	3946,c	;volatile
 15426                           
 15427                           ; BSR set to: 0
 15428                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 15429  0058CA  0E04               	movlw	4
 15430  0058CC  0104               	movlb	4	; () banked
 15431  0058CE  6F03               	movwf	3,b	;volatile
 15432  0058D0  0E30               	movlw	48
 15433  0058D2  6F02               	movwf	2,b	;volatile
 15434                           
 15435                           ; BSR set to: 4
 15436                           ;usb_device.c: 315: BDT[0].CNT = 8;
 15437  0058D4  0E08               	movlw	8
 15438  0058D6  6F01               	movwf	1,b	;volatile
 15439                           
 15440                           ; BSR set to: 4
 15441                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 15442  0058D8  0E04               	movlw	4
 15443  0058DA  6F00               	movwf	0,b	;volatile
 15444                           
 15445                           ; BSR set to: 4
 15446                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 15447  0058DC  8F00               	bsf	0,7,b	;volatile
 15448                           
 15449                           ; BSR set to: 4
 15450                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 15451  0058DE  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 15452                           
 15453                           ; BSR set to: 4
 15454                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 15455  0058E0  0100               	movlb	0	; () banked
 15456  0058E2  6BF4               	clrf	_USBDeviceState& (0+255),b	;volatile
 15457                           
 15458                           ; BSR set to: 0
 15459  0058E4  0012               	return		;funcret
 15460  0058E6                     __end_of_USBDeviceInit:
 15461                           	opt stack 0
 15462                           tblptru	equ	0xFF8
 15463                           tblptrh	equ	0xFF7
 15464                           tblptrl	equ	0xFF6
 15465                           tablat	equ	0xFF5
 15466                           prodh	equ	0xFF4
 15467                           prodl	equ	0xFF3
 15468                           intcon	equ	0xFF2
 15469                           postinc0	equ	0xFEE
 15470                           wreg	equ	0xFE8
 15471                           indf1	equ	0xFE7
 15472                           fsr1h	equ	0xFE2
 15473                           fsr1l	equ	0xFE1
 15474                           indf2	equ	0xFDF
 15475                           postinc2	equ	0xFDE
 15476                           postdec2	equ	0xFDD
 15477                           plusw2	equ	0xFDB
 15478                           fsr2h	equ	0xFDA
 15479                           fsr2l	equ	0xFD9
 15480                           status	equ	0xFD8
 15481                           
 15482 ;; *************** function _memset *****************
 15483 ;; Defined at:
 15484 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 15485 ;; Parameters:    Size  Location     Type
 15486 ;;  p1              2    0[BANK0 ] PTR void 
 15487 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15488 ;;  c               2    2[BANK0 ] int 
 15489 ;;  n               2    4[BANK0 ] unsigned int 
 15490 ;; Auto vars:     Size  Location     Type
 15491 ;;  p               2    6[BANK0 ] PTR unsigned char 
 15492 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15493 ;; Return value:  Size  Location     Type
 15494 ;;                  2    0[BANK0 ] PTR void 
 15495 ;; Registers used:
 15496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15497 ;; Tracked objects:
 15498 ;;		On entry : F/0
 15499 ;;		On exit  : F/0
 15500 ;;		Unchanged: 0/0
 15501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15502 ;;      Params:         0       6       0       0       0       0       0       0       0
 15503 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15504 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15505 ;;      Totals:         0       8       0       0       0       0       0       0       0
 15506 ;;Total ram usage:        8 bytes
 15507 ;; Hardware stack levels used:    1
 15508 ;; Hardware stack levels required when called:   11
 15509 ;; This function calls:
 15510 ;;		Nothing
 15511 ;; This function is called by:
 15512 ;;		_USBDeviceInit
 15513 ;; This function uses a non-reentrant model
 15514 ;;
 15515                           
 15516                           	psect	text67
 15517  003EB0                     __ptext67:
 15518                           	opt stack 0
 15519  003EB0                     _memset:
 15520                           	opt stack 18
 15521                           
 15522                           ; BSR set to: 0
 15523                           
 15524                           ; BSR set to: 0
 15525                           ;incstack = 0
 15526  003EB0  C060  F066         	movff	memset@p1,memset@p
 15527  003EB4  C061  F067         	movff	memset@p1+1,memset@p+1
 15528  003EB8  D008               	goto	l11163
 15529  003EBA                     l11159:
 15530                           
 15531                           ; BSR set to: 0
 15532  003EBA  C066  FFD9         	movff	memset@p,fsr2l
 15533  003EBE  C067  FFDA         	movff	memset@p+1,fsr2h
 15534  003EC2  C062  FFDF         	movff	memset@c,indf2
 15535                           
 15536                           ; BSR set to: 0
 15537  003EC6  4B66               	infsnz	memset@p& (0+255),f,b
 15538  003EC8  2B67               	incf	(memset@p+1)& (0+255),f,b
 15539  003ECA                     l11163:
 15540                           
 15541                           ; BSR set to: 0
 15542  003ECA  0764               	decf	memset@n& (0+255),f,b
 15543  003ECC  A0D8               	btfss	status,0,c
 15544  003ECE  0765               	decf	(memset@n+1)& (0+255),f,b
 15545  003ED0  2964               	incf	memset@n& (0+255),w,b
 15546  003ED2  E1F3               	bnz	l11159
 15547  003ED4  2965               	incf	(memset@n+1)& (0+255),w,b
 15548  003ED6  E1F1               	bnz	l11159
 15549                           
 15550                           ; BSR set to: 0
 15551  003ED8  0012               	return		;funcret
 15552  003EDA                     __end_of_memset:
 15553                           	opt stack 0
 15554                           tblptru	equ	0xFF8
 15555                           tblptrh	equ	0xFF7
 15556                           tblptrl	equ	0xFF6
 15557                           tablat	equ	0xFF5
 15558                           prodh	equ	0xFF4
 15559                           prodl	equ	0xFF3
 15560                           intcon	equ	0xFF2
 15561                           postinc0	equ	0xFEE
 15562                           wreg	equ	0xFE8
 15563                           indf1	equ	0xFE7
 15564                           fsr1h	equ	0xFE2
 15565                           fsr1l	equ	0xFE1
 15566                           indf2	equ	0xFDF
 15567                           postinc2	equ	0xFDE
 15568                           postdec2	equ	0xFDD
 15569                           plusw2	equ	0xFDB
 15570                           fsr2h	equ	0xFDA
 15571                           fsr2l	equ	0xFD9
 15572                           status	equ	0xFD8
 15573                           
 15574 ;; *************** function _USBDeviceAttach *****************
 15575 ;; Defined at:
 15576 ;;		line 1046 in file "../Includes/Usb/framework/usb_device.c"
 15577 ;; Parameters:    Size  Location     Type
 15578 ;;		None
 15579 ;; Auto vars:     Size  Location     Type
 15580 ;;		None
 15581 ;; Return value:  Size  Location     Type
 15582 ;;                  1    wreg      void 
 15583 ;; Registers used:
 15584 ;;		wreg, status,2
 15585 ;; Tracked objects:
 15586 ;;		On entry : F/0
 15587 ;;		On exit  : F/0
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15590 ;;      Params:         0       0       0       0       0       0       0       0       0
 15591 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15592 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15593 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15594 ;;Total ram usage:        0 bytes
 15595 ;; Hardware stack levels used:    1
 15596 ;; Hardware stack levels required when called:   11
 15597 ;; This function calls:
 15598 ;;		Nothing
 15599 ;; This function is called by:
 15600 ;;		_main
 15601 ;; This function uses a non-reentrant model
 15602 ;;
 15603                           
 15604                           	psect	text68
 15605  003EDA                     __ptext68:
 15606                           	opt stack 0
 15607  003EDA                     _USBDeviceAttach:
 15608                           	opt stack 19
 15609                           
 15610                           ; BSR set to: 0
 15611                           ;usb_device.c: 1050: {
 15612                           ;usb_device.c: 1051: if(1 == 1)
 15613                           
 15614                           ; BSR set to: 0
 15615                           ;incstack = 0
 15616  003EDA  51F4               	movf	_USBDeviceState& (0+255),w,b	;volatile
 15617  003EDC  A4D8               	btfss	status,2,c
 15618  003EDE  0012               	return	
 15619                           
 15620                           ; BSR set to: 0
 15621                           ;usb_device.c: 1052: {
 15622                           ;usb_device.c: 1054: UCON = 0;
 15623  003EE0  6A60               	clrf	3936,c	;volatile
 15624                           
 15625                           ;usb_device.c: 1057: UIE = 0;
 15626  003EE2  6A64               	clrf	3940,c	;volatile
 15627                           
 15628                           ; BSR set to: 0
 15629                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 15630  003EE4  0E16               	movlw	22
 15631  003EE6  6E62               	movwf	3938,c	;volatile
 15632  003EE8  0E9F               	movlw	159
 15633  003EEA  6E66               	movwf	3942,c	;volatile
 15634  003EEC  0E7B               	movlw	123
 15635  003EEE  6E64               	movwf	3940,c	;volatile
 15636                           
 15637                           ; BSR set to: 0
 15638                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 15639  003EF0  8ED0               	bsf	4048,7,c	;volatile
 15640                           
 15641                           ; BSR set to: 0
 15642  003EF2  84A5               	bsf	4005,2,c	;volatile
 15643                           
 15644                           ; BSR set to: 0
 15645  003EF4  84A3               	bsf	4003,2,c	;volatile
 15646                           
 15647                           ; BSR set to: 0
 15648  003EF6  8EF2               	bsf	intcon,7,c	;volatile
 15649                           
 15650                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 15651  003EF8  D001               	goto	l1503
 15652  003EFA                     l1504:
 15653                           
 15654                           ; BSR set to: 0
 15655  003EFA  8660               	bsf	3936,3,c	;volatile
 15656  003EFC                     l1503:
 15657                           
 15658                           ; BSR set to: 0
 15659  003EFC  A660               	btfss	3936,3,c	;volatile
 15660  003EFE  D7FD               	goto	l1504
 15661                           
 15662                           ; BSR set to: 0
 15663                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 15664  003F00  0E01               	movlw	1
 15665  003F02  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 15666                           
 15667                           ; BSR set to: 0
 15668  003F04  0C01               	retlw	1	;funcret
 15669  003F06                     __end_of_USBDeviceAttach:
 15670                           	opt stack 0
 15671                           tblptru	equ	0xFF8
 15672                           tblptrh	equ	0xFF7
 15673                           tblptrl	equ	0xFF6
 15674                           tablat	equ	0xFF5
 15675                           prodh	equ	0xFF4
 15676                           prodl	equ	0xFF3
 15677                           intcon	equ	0xFF2
 15678                           postinc0	equ	0xFEE
 15679                           wreg	equ	0xFE8
 15680                           indf1	equ	0xFE7
 15681                           fsr1h	equ	0xFE2
 15682                           fsr1l	equ	0xFE1
 15683                           indf2	equ	0xFDF
 15684                           postinc2	equ	0xFDE
 15685                           postdec2	equ	0xFDD
 15686                           plusw2	equ	0xFDB
 15687                           fsr2h	equ	0xFDA
 15688                           fsr2l	equ	0xFD9
 15689                           status	equ	0xFD8
 15690                           
 15691 ;; *************** function _SYSTEM_Initialize *****************
 15692 ;; Defined at:
 15693 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 15694 ;; Parameters:    Size  Location     Type
 15695 ;;		None
 15696 ;; Auto vars:     Size  Location     Type
 15697 ;;		None
 15698 ;; Return value:  Size  Location     Type
 15699 ;;                  1    wreg      void 
 15700 ;; Registers used:
 15701 ;;		wreg, status,2, status,0, cstack
 15702 ;; Tracked objects:
 15703 ;;		On entry : 0/0
 15704 ;;		On exit  : F/1
 15705 ;;		Unchanged: 0/0
 15706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15707 ;;      Params:         0       0       0       0       0       0       0       0       0
 15708 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15709 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15710 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15711 ;;Total ram usage:        0 bytes
 15712 ;; Hardware stack levels used:    1
 15713 ;; Hardware stack levels required when called:   13
 15714 ;; This function calls:
 15715 ;;		_ADC_Initialize
 15716 ;;		_CMP1_Initialize
 15717 ;;		_EUSART_Initialize
 15718 ;;		_OSCILLATOR_Initialize
 15719 ;;		_PIN_MANAGER_Initialize
 15720 ;;		_SPI_Initialize
 15721 ;;		_TMR1_Initialize
 15722 ;;		_TMR2_Initialize
 15723 ;; This function is called by:
 15724 ;;		_main
 15725 ;; This function uses a non-reentrant model
 15726 ;;
 15727                           
 15728                           	psect	text69
 15729  003D10                     __ptext69:
 15730                           	opt stack 0
 15731  003D10                     _SYSTEM_Initialize:
 15732                           	opt stack 17
 15733                           
 15734                           ;mcc.c: 95: OSCILLATOR_Initialize();
 15735                           
 15736                           ; BSR set to: 0
 15737                           ;incstack = 0
 15738  003D10  EC17  F01E         	call	_OSCILLATOR_Initialize	;wreg free
 15739                           
 15740                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 15741  003D14  EC91  F021         	call	_PIN_MANAGER_Initialize	;wreg free
 15742                           
 15743                           ; BSR set to: 15
 15744                           ;mcc.c: 97: SPI_Initialize();
 15745  003D18  ECB2  F01D         	call	_SPI_Initialize	;wreg free
 15746                           
 15747                           ; BSR set to: 15
 15748                           ;mcc.c: 98: TMR1_Initialize();
 15749  003D1C  ECC8  F01F         	call	_TMR1_Initialize	;wreg free
 15750                           
 15751                           ; BSR set to: 1
 15752                           ;mcc.c: 99: TMR2_Initialize();
 15753  003D20  ECB9  F01D         	call	_TMR2_Initialize	;wreg free
 15754                           
 15755                           ; BSR set to: 1
 15756                           ;mcc.c: 100: EUSART_Initialize();
 15757  003D24  EC9A  F01F         	call	_EUSART_Initialize	;wreg free
 15758                           
 15759                           ; BSR set to: 1
 15760                           ;mcc.c: 101: ADC_Initialize();
 15761  003D28  EC0C  F01E         	call	_ADC_Initialize	;wreg free
 15762                           
 15763                           ; BSR set to: 1
 15764                           ;mcc.c: 102: CMP1_Initialize();
 15765  003D2C  EFC9  F01D         	goto	_CMP1_Initialize	;wreg free
 15766  003D30                     __end_of_SYSTEM_Initialize:
 15767                           	opt stack 0
 15768                           tblptru	equ	0xFF8
 15769                           tblptrh	equ	0xFF7
 15770                           tblptrl	equ	0xFF6
 15771                           tablat	equ	0xFF5
 15772                           prodh	equ	0xFF4
 15773                           prodl	equ	0xFF3
 15774                           intcon	equ	0xFF2
 15775                           postinc0	equ	0xFEE
 15776                           wreg	equ	0xFE8
 15777                           indf1	equ	0xFE7
 15778                           fsr1h	equ	0xFE2
 15779                           fsr1l	equ	0xFE1
 15780                           indf2	equ	0xFDF
 15781                           postinc2	equ	0xFDE
 15782                           postdec2	equ	0xFDD
 15783                           plusw2	equ	0xFDB
 15784                           fsr2h	equ	0xFDA
 15785                           fsr2l	equ	0xFD9
 15786                           status	equ	0xFD8
 15787                           
 15788 ;; *************** function _TMR2_Initialize *****************
 15789 ;; Defined at:
 15790 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 15791 ;; Parameters:    Size  Location     Type
 15792 ;;		None
 15793 ;; Auto vars:     Size  Location     Type
 15794 ;;		None
 15795 ;; Return value:  Size  Location     Type
 15796 ;;                  1    wreg      void 
 15797 ;; Registers used:
 15798 ;;		wreg, status,2, cstack
 15799 ;; Tracked objects:
 15800 ;;		On entry : F/1
 15801 ;;		On exit  : F/1
 15802 ;;		Unchanged: F/0
 15803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15804 ;;      Params:         0       0       0       0       0       0       0       0       0
 15805 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15806 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15807 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15808 ;;Total ram usage:        0 bytes
 15809 ;; Hardware stack levels used:    1
 15810 ;; Hardware stack levels required when called:   12
 15811 ;; This function calls:
 15812 ;;		_TMR2_StartTimer
 15813 ;; This function is called by:
 15814 ;;		_SYSTEM_Initialize
 15815 ;; This function uses a non-reentrant model
 15816 ;;
 15817                           
 15818                           	psect	text70
 15819  003B72                     __ptext70:
 15820                           	opt stack 0
 15821  003B72                     _TMR2_Initialize:
 15822                           	opt stack 17
 15823                           
 15824                           ; BSR set to: 1
 15825                           ;tmr2.c: 62: T2CON = 0x7A;
 15826                           
 15827                           ; BSR set to: 1
 15828                           ;incstack = 0
 15829  003B72  0E7A               	movlw	122
 15830  003B74  6EBA               	movwf	4026,c	;volatile
 15831                           
 15832                           ;tmr2.c: 65: PR2 = 0x9B;
 15833  003B76  0E9B               	movlw	155
 15834  003B78  6EBB               	movwf	4027,c	;volatile
 15835                           
 15836                           ; BSR set to: 1
 15837                           ;tmr2.c: 68: TMR2 = 0x00;
 15838  003B7A  6ABC               	clrf	4028,c	;volatile
 15839                           
 15840                           ; BSR set to: 1
 15841                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 15842  003B7C  929E               	bcf	3998,1,c	;volatile
 15843                           
 15844                           ; BSR set to: 1
 15845                           ;tmr2.c: 74: TMR2_StartTimer();
 15846  003B7E  EF80  F01D         	goto	_TMR2_StartTimer	;wreg free
 15847  003B82                     __end_of_TMR2_Initialize:
 15848                           	opt stack 0
 15849                           tblptru	equ	0xFF8
 15850                           tblptrh	equ	0xFF7
 15851                           tblptrl	equ	0xFF6
 15852                           tablat	equ	0xFF5
 15853                           prodh	equ	0xFF4
 15854                           prodl	equ	0xFF3
 15855                           intcon	equ	0xFF2
 15856                           postinc0	equ	0xFEE
 15857                           wreg	equ	0xFE8
 15858                           indf1	equ	0xFE7
 15859                           fsr1h	equ	0xFE2
 15860                           fsr1l	equ	0xFE1
 15861                           indf2	equ	0xFDF
 15862                           postinc2	equ	0xFDE
 15863                           postdec2	equ	0xFDD
 15864                           plusw2	equ	0xFDB
 15865                           fsr2h	equ	0xFDA
 15866                           fsr2l	equ	0xFD9
 15867                           status	equ	0xFD8
 15868                           
 15869 ;; *************** function _TMR2_StartTimer *****************
 15870 ;; Defined at:
 15871 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 15872 ;; Parameters:    Size  Location     Type
 15873 ;;		None
 15874 ;; Auto vars:     Size  Location     Type
 15875 ;;		None
 15876 ;; Return value:  Size  Location     Type
 15877 ;;                  1    wreg      void 
 15878 ;; Registers used:
 15879 ;;		None
 15880 ;; Tracked objects:
 15881 ;;		On entry : F/1
 15882 ;;		On exit  : F/1
 15883 ;;		Unchanged: F/0
 15884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15885 ;;      Params:         0       0       0       0       0       0       0       0       0
 15886 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15887 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15888 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15889 ;;Total ram usage:        0 bytes
 15890 ;; Hardware stack levels used:    1
 15891 ;; Hardware stack levels required when called:   11
 15892 ;; This function calls:
 15893 ;;		Nothing
 15894 ;; This function is called by:
 15895 ;;		_TMR2_Initialize
 15896 ;; This function uses a non-reentrant model
 15897 ;;
 15898                           
 15899                           	psect	text71
 15900  003B00                     __ptext71:
 15901                           	opt stack 0
 15902  003B00                     _TMR2_StartTimer:
 15903                           	opt stack 17
 15904                           
 15905                           ; BSR set to: 1
 15906                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 15907                           
 15908                           ; BSR set to: 1
 15909                           ;incstack = 0
 15910  003B00  84BA               	bsf	4026,2,c	;volatile
 15911                           
 15912                           ; BSR set to: 1
 15913  003B02  0012               	return		;funcret
 15914  003B04                     __end_of_TMR2_StartTimer:
 15915                           	opt stack 0
 15916                           tblptru	equ	0xFF8
 15917                           tblptrh	equ	0xFF7
 15918                           tblptrl	equ	0xFF6
 15919                           tablat	equ	0xFF5
 15920                           prodh	equ	0xFF4
 15921                           prodl	equ	0xFF3
 15922                           intcon	equ	0xFF2
 15923                           postinc0	equ	0xFEE
 15924                           wreg	equ	0xFE8
 15925                           indf1	equ	0xFE7
 15926                           fsr1h	equ	0xFE2
 15927                           fsr1l	equ	0xFE1
 15928                           indf2	equ	0xFDF
 15929                           postinc2	equ	0xFDE
 15930                           postdec2	equ	0xFDD
 15931                           plusw2	equ	0xFDB
 15932                           fsr2h	equ	0xFDA
 15933                           fsr2l	equ	0xFD9
 15934                           status	equ	0xFD8
 15935                           
 15936 ;; *************** function _TMR1_Initialize *****************
 15937 ;; Defined at:
 15938 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 15939 ;; Parameters:    Size  Location     Type
 15940 ;;		None
 15941 ;; Auto vars:     Size  Location     Type
 15942 ;;		None
 15943 ;; Return value:  Size  Location     Type
 15944 ;;                  1    wreg      void 
 15945 ;; Registers used:
 15946 ;;		wreg, status,2, status,0, cstack
 15947 ;; Tracked objects:
 15948 ;;		On entry : F/F
 15949 ;;		On exit  : F/1
 15950 ;;		Unchanged: 0/0
 15951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15952 ;;      Params:         0       0       0       0       0       0       0       0       0
 15953 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15954 ;;      Temps:          0       2       0       0       0       0       0       0       0
 15955 ;;      Totals:         0       2       0       0       0       0       0       0       0
 15956 ;;Total ram usage:        2 bytes
 15957 ;; Hardware stack levels used:    1
 15958 ;; Hardware stack levels required when called:   12
 15959 ;; This function calls:
 15960 ;;		_TMR1_StartTimer
 15961 ;; This function is called by:
 15962 ;;		_SYSTEM_Initialize
 15963 ;; This function uses a non-reentrant model
 15964 ;;
 15965                           
 15966                           	psect	text72
 15967  003F90                     __ptext72:
 15968                           	opt stack 0
 15969  003F90                     _TMR1_Initialize:
 15970                           	opt stack 17
 15971                           
 15972                           ; BSR set to: 15
 15973                           ;tmr1.c: 68: T1CON = 0x00;
 15974                           
 15975                           ; BSR set to: 1
 15976                           ;incstack = 0
 15977  003F90  6ACD               	clrf	4045,c	;volatile
 15978                           
 15979                           ;tmr1.c: 71: T1GCON = 0x00;
 15980  003F92  6ACC               	clrf	4044,c	;volatile
 15981                           
 15982                           ; BSR set to: 15
 15983                           ;tmr1.c: 74: TMR1H = 0xD0;
 15984  003F94  0ED0               	movlw	208
 15985  003F96  6ECF               	movwf	4047,c	;volatile
 15986                           
 15987                           ;tmr1.c: 77: TMR1L = 0x20;
 15988  003F98  0E20               	movlw	32
 15989  003F9A  6ECE               	movwf	4046,c	;volatile
 15990                           
 15991                           ; BSR set to: 15
 15992                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 15993  003F9C  50CE               	movf	4046,w,c	;volatile
 15994  003F9E  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 15995  003FA2  0100               	movlb	0	; () banked
 15996  003FA4  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 15997  003FA6  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 15998  003FAA  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 15999  003FAC  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 16000  003FAE  0101               	movlb	1	; () banked
 16001  003FB0  6F3B               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 16002  003FB2  0100               	movlb	0	; () banked
 16003  003FB4  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 16004  003FB6  0101               	movlb	1	; () banked
 16005  003FB8  6F3C               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 16006                           
 16007                           ; BSR set to: 1
 16008                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 16009  003FBA  909E               	bcf	3998,0,c	;volatile
 16010                           
 16011                           ; BSR set to: 1
 16012                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 16013  003FBC  809D               	bsf	3997,0,c	;volatile
 16014                           
 16015                           ; BSR set to: 1
 16016                           ;tmr1.c: 89: TMR1_StartTimer();
 16017  003FBE  EF7E  F01D         	goto	_TMR1_StartTimer	;wreg free
 16018  003FC2                     __end_of_TMR1_Initialize:
 16019                           	opt stack 0
 16020                           tblptru	equ	0xFF8
 16021                           tblptrh	equ	0xFF7
 16022                           tblptrl	equ	0xFF6
 16023                           tablat	equ	0xFF5
 16024                           prodh	equ	0xFF4
 16025                           prodl	equ	0xFF3
 16026                           intcon	equ	0xFF2
 16027                           postinc0	equ	0xFEE
 16028                           wreg	equ	0xFE8
 16029                           indf1	equ	0xFE7
 16030                           fsr1h	equ	0xFE2
 16031                           fsr1l	equ	0xFE1
 16032                           indf2	equ	0xFDF
 16033                           postinc2	equ	0xFDE
 16034                           postdec2	equ	0xFDD
 16035                           plusw2	equ	0xFDB
 16036                           fsr2h	equ	0xFDA
 16037                           fsr2l	equ	0xFD9
 16038                           status	equ	0xFD8
 16039                           
 16040 ;; *************** function _TMR1_StartTimer *****************
 16041 ;; Defined at:
 16042 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 16043 ;; Parameters:    Size  Location     Type
 16044 ;;		None
 16045 ;; Auto vars:     Size  Location     Type
 16046 ;;		None
 16047 ;; Return value:  Size  Location     Type
 16048 ;;                  1    wreg      void 
 16049 ;; Registers used:
 16050 ;;		None
 16051 ;; Tracked objects:
 16052 ;;		On entry : F/1
 16053 ;;		On exit  : F/1
 16054 ;;		Unchanged: F/0
 16055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16056 ;;      Params:         0       0       0       0       0       0       0       0       0
 16057 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16058 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16059 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16060 ;;Total ram usage:        0 bytes
 16061 ;; Hardware stack levels used:    1
 16062 ;; Hardware stack levels required when called:   11
 16063 ;; This function calls:
 16064 ;;		Nothing
 16065 ;; This function is called by:
 16066 ;;		_TMR1_Initialize
 16067 ;; This function uses a non-reentrant model
 16068 ;;
 16069                           
 16070                           	psect	text73
 16071  003AFC                     __ptext73:
 16072                           	opt stack 0
 16073  003AFC                     _TMR1_StartTimer:
 16074                           	opt stack 17
 16075                           
 16076                           ; BSR set to: 1
 16077                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 16078                           
 16079                           ; BSR set to: 1
 16080                           ;incstack = 0
 16081  003AFC  80CD               	bsf	4045,0,c	;volatile
 16082                           
 16083                           ; BSR set to: 1
 16084  003AFE  0012               	return		;funcret
 16085  003B00                     __end_of_TMR1_StartTimer:
 16086                           	opt stack 0
 16087                           tblptru	equ	0xFF8
 16088                           tblptrh	equ	0xFF7
 16089                           tblptrl	equ	0xFF6
 16090                           tablat	equ	0xFF5
 16091                           prodh	equ	0xFF4
 16092                           prodl	equ	0xFF3
 16093                           intcon	equ	0xFF2
 16094                           postinc0	equ	0xFEE
 16095                           wreg	equ	0xFE8
 16096                           indf1	equ	0xFE7
 16097                           fsr1h	equ	0xFE2
 16098                           fsr1l	equ	0xFE1
 16099                           indf2	equ	0xFDF
 16100                           postinc2	equ	0xFDE
 16101                           postdec2	equ	0xFDD
 16102                           plusw2	equ	0xFDB
 16103                           fsr2h	equ	0xFDA
 16104                           fsr2l	equ	0xFD9
 16105                           status	equ	0xFD8
 16106                           
 16107 ;; *************** function _SPI_Initialize *****************
 16108 ;; Defined at:
 16109 ;;		line 64 in file "../Includes/MccGenerated/spi.c"
 16110 ;; Parameters:    Size  Location     Type
 16111 ;;		None
 16112 ;; Auto vars:     Size  Location     Type
 16113 ;;		None
 16114 ;; Return value:  Size  Location     Type
 16115 ;;                  1    wreg      void 
 16116 ;; Registers used:
 16117 ;;		wreg, status,2
 16118 ;; Tracked objects:
 16119 ;;		On entry : F/F
 16120 ;;		On exit  : F/F
 16121 ;;		Unchanged: E/0
 16122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16123 ;;      Params:         0       0       0       0       0       0       0       0       0
 16124 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16125 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16126 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16127 ;;Total ram usage:        0 bytes
 16128 ;; Hardware stack levels used:    1
 16129 ;; Hardware stack levels required when called:   11
 16130 ;; This function calls:
 16131 ;;		Nothing
 16132 ;; This function is called by:
 16133 ;;		_SYSTEM_Initialize
 16134 ;; This function uses a non-reentrant model
 16135 ;;
 16136                           
 16137                           	psect	text74
 16138  003B64                     __ptext74:
 16139                           	opt stack 0
 16140  003B64                     _SPI_Initialize:
 16141                           	opt stack 18
 16142                           
 16143                           ; BSR set to: 15
 16144                           ;spi.c: 69: SSP1STAT = 0x00;
 16145                           
 16146                           ; BSR set to: 1
 16147                           ;incstack = 0
 16148  003B64  6AC7               	clrf	4039,c	;volatile
 16149                           
 16150                           ; BSR set to: 15
 16151                           ;spi.c: 72: SSP1CON1 = 0x21;
 16152  003B66  0E21               	movlw	33
 16153  003B68  6EC6               	movwf	4038,c	;volatile
 16154                           
 16155                           ; BSR set to: 15
 16156                           ;spi.c: 75: SSP1ADD = 0x00;
 16157  003B6A  6AC8               	clrf	4040,c	;volatile
 16158                           
 16159                           ; BSR set to: 15
 16160                           ;spi.c: 77: CKP = 1;
 16161  003B6C  88C6               	bsf	4038,4,c	;volatile
 16162                           
 16163                           ; BSR set to: 15
 16164                           ;spi.c: 78: CKE = 0;
 16165  003B6E  9CC7               	bcf	4039,6,c	;volatile
 16166                           
 16167                           ; BSR set to: 15
 16168  003B70  0012               	return		;funcret
 16169  003B72                     __end_of_SPI_Initialize:
 16170                           	opt stack 0
 16171                           tblptru	equ	0xFF8
 16172                           tblptrh	equ	0xFF7
 16173                           tblptrl	equ	0xFF6
 16174                           tablat	equ	0xFF5
 16175                           prodh	equ	0xFF4
 16176                           prodl	equ	0xFF3
 16177                           intcon	equ	0xFF2
 16178                           postinc0	equ	0xFEE
 16179                           wreg	equ	0xFE8
 16180                           indf1	equ	0xFE7
 16181                           fsr1h	equ	0xFE2
 16182                           fsr1l	equ	0xFE1
 16183                           indf2	equ	0xFDF
 16184                           postinc2	equ	0xFDE
 16185                           postdec2	equ	0xFDD
 16186                           plusw2	equ	0xFDB
 16187                           fsr2h	equ	0xFDA
 16188                           fsr2l	equ	0xFD9
 16189                           status	equ	0xFD8
 16190                           
 16191 ;; *************** function _PIN_MANAGER_Initialize *****************
 16192 ;; Defined at:
 16193 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 16194 ;; Parameters:    Size  Location     Type
 16195 ;;		None
 16196 ;; Auto vars:     Size  Location     Type
 16197 ;;		None
 16198 ;; Return value:  Size  Location     Type
 16199 ;;                  1    wreg      void 
 16200 ;; Registers used:
 16201 ;;		None
 16202 ;; Tracked objects:
 16203 ;;		On entry : 0/1
 16204 ;;		On exit  : F/F
 16205 ;;		Unchanged: 0/0
 16206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16207 ;;      Params:         0       0       0       0       0       0       0       0       0
 16208 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16209 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16210 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16211 ;;Total ram usage:        0 bytes
 16212 ;; Hardware stack levels used:    1
 16213 ;; Hardware stack levels required when called:   11
 16214 ;; This function calls:
 16215 ;;		Nothing
 16216 ;; This function is called by:
 16217 ;;		_moteApp_GoToSleep
 16218 ;;		_SYSTEM_Initialize
 16219 ;; This function uses a non-reentrant model
 16220 ;;
 16221                           
 16222                           	psect	text75
 16223  004322                     __ptext75:
 16224                           	opt stack 0
 16225  004322                     _PIN_MANAGER_Initialize:
 16226                           	opt stack 16
 16227                           
 16228                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 16229                           
 16230                           ; BSR set to: 15
 16231                           ;incstack = 0
 16232  004322  8092               	bsf	3986,0,c	;volatile
 16233                           
 16234                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 16235  004324  8292               	bsf	3986,1,c	;volatile
 16236                           
 16237                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 16238  004326  8492               	bsf	3986,2,c	;volatile
 16239                           
 16240                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 16241  004328  8692               	bsf	3986,3,c	;volatile
 16242                           
 16243                           ;pin_manager.c: 59: TRISAbits.TRISA4 = 0;
 16244  00432A  9892               	bcf	3986,4,c	;volatile
 16245                           
 16246                           ;pin_manager.c: 60: TRISAbits.TRISA5 = 0;
 16247  00432C  9A92               	bcf	3986,5,c	;volatile
 16248                           
 16249                           ;pin_manager.c: 61: TRISAbits.TRISA6 = 0;
 16250  00432E  9C92               	bcf	3986,6,c	;volatile
 16251                           
 16252                           ;pin_manager.c: 62: TRISAbits.TRISA7 = 0;
 16253  004330  9E92               	bcf	3986,7,c	;volatile
 16254                           
 16255                           ;pin_manager.c: 64: TRISBbits.TRISB0 = 0;
 16256  004332  9093               	bcf	3987,0,c	;volatile
 16257                           
 16258                           ;pin_manager.c: 65: TRISBbits.TRISB1 = 0;
 16259  004334  9293               	bcf	3987,1,c	;volatile
 16260                           
 16261                           ;pin_manager.c: 66: TRISBbits.TRISB2 = 0;
 16262  004336  9493               	bcf	3987,2,c	;volatile
 16263                           
 16264                           ;pin_manager.c: 67: TRISBbits.TRISB3 = 0;
 16265  004338  9693               	bcf	3987,3,c	;volatile
 16266                           
 16267                           ;pin_manager.c: 68: TRISBbits.TRISB5 = 0;
 16268  00433A  9A93               	bcf	3987,5,c	;volatile
 16269                           
 16270                           ;pin_manager.c: 70: TRISCbits.TRISC0 = 1;
 16271  00433C  8094               	bsf	3988,0,c	;volatile
 16272                           
 16273                           ;pin_manager.c: 71: TRISCbits.TRISC1 = 1;
 16274  00433E  8294               	bsf	3988,1,c	;volatile
 16275                           
 16276                           ;pin_manager.c: 72: TRISCbits.TRISC2 = 1;
 16277  004340  8494               	bsf	3988,2,c	;volatile
 16278                           
 16279                           ;pin_manager.c: 73: TRISCbits.TRISC6 = 0;
 16280  004342  9C94               	bcf	3988,6,c	;volatile
 16281                           
 16282                           ;pin_manager.c: 74: TRISCbits.TRISC7 = 1;
 16283  004344  8E94               	bsf	3988,7,c	;volatile
 16284                           
 16285                           ;pin_manager.c: 75: TRISBbits.TRISB6 = 0;
 16286  004346  9C93               	bcf	3987,6,c	;volatile
 16287                           
 16288                           ;pin_manager.c: 76: TRISBbits.TRISB7 = 1;
 16289  004348  8E93               	bsf	3987,7,c	;volatile
 16290                           
 16291                           ;pin_manager.c: 79: LATAbits.LATA4 = 1;
 16292  00434A  8889               	bsf	3977,4,c	;volatile
 16293                           
 16294                           ;pin_manager.c: 80: LATAbits.LATA5 = 0;
 16295  00434C  9A89               	bcf	3977,5,c	;volatile
 16296                           
 16297                           ;pin_manager.c: 81: LATAbits.LATA6 = 0;
 16298  00434E  9C89               	bcf	3977,6,c	;volatile
 16299                           
 16300                           ;pin_manager.c: 82: LATAbits.LATA7 = 0;
 16301  004350  9E89               	bcf	3977,7,c	;volatile
 16302                           
 16303                           ;pin_manager.c: 84: LATBbits.LATB2 = 0;
 16304  004352  948A               	bcf	3978,2,c	;volatile
 16305                           
 16306                           ;pin_manager.c: 85: LATBbits.LATB0 = 0;
 16307  004354  908A               	bcf	3978,0,c	;volatile
 16308                           
 16309                           ;pin_manager.c: 86: LATBbits.LATB5 = 0;
 16310  004356  9A8A               	bcf	3978,5,c	;volatile
 16311                           
 16312                           ;pin_manager.c: 87: LATBbits.LATB6 = 0;
 16313  004358  9C8A               	bcf	3978,6,c	;volatile
 16314                           
 16315                           ;pin_manager.c: 88: LATBbits.LATB7 = 0;
 16316  00435A  9E8A               	bcf	3978,7,c	;volatile
 16317                           
 16318                           ;pin_manager.c: 90: LATCbits.LATC2 = 0;
 16319  00435C  948B               	bcf	3979,2,c	;volatile
 16320                           
 16321                           ;pin_manager.c: 91: LATCbits.LATC6 = 0;
 16322  00435E  9C8B               	bcf	3979,6,c	;volatile
 16323                           
 16324                           ;pin_manager.c: 93: ANSELAbits.ANSA0 = 0;
 16325  004360  010F               	movlb	15	; () banked
 16326  004362  915B               	bcf	91,0,b	;volatile
 16327                           
 16328                           ;pin_manager.c: 94: ANSELAbits.ANSA1 = 1;
 16329  004364  835B               	bsf	91,1,b	;volatile
 16330                           
 16331                           ;pin_manager.c: 95: ANSELAbits.ANSA2 = 1;
 16332  004366  855B               	bsf	91,2,b	;volatile
 16333                           
 16334                           ;pin_manager.c: 96: ANSELAbits.ANSA3 = 1;
 16335  004368  875B               	bsf	91,3,b	;volatile
 16336                           
 16337                           ;pin_manager.c: 97: ANSELCbits.ANSC7 = 0;
 16338  00436A  9F5D               	bcf	93,7,b	;volatile
 16339                           
 16340                           ;pin_manager.c: 98: ANSELCbits.ANSC6 = 0;
 16341  00436C  9D5D               	bcf	93,6,b	;volatile
 16342                           
 16343                           ; BSR set to: 15
 16344  00436E  0012               	return		;funcret
 16345  004370                     __end_of_PIN_MANAGER_Initialize:
 16346                           	opt stack 0
 16347                           tblptru	equ	0xFF8
 16348                           tblptrh	equ	0xFF7
 16349                           tblptrl	equ	0xFF6
 16350                           tablat	equ	0xFF5
 16351                           prodh	equ	0xFF4
 16352                           prodl	equ	0xFF3
 16353                           intcon	equ	0xFF2
 16354                           postinc0	equ	0xFEE
 16355                           wreg	equ	0xFE8
 16356                           indf1	equ	0xFE7
 16357                           fsr1h	equ	0xFE2
 16358                           fsr1l	equ	0xFE1
 16359                           indf2	equ	0xFDF
 16360                           postinc2	equ	0xFDE
 16361                           postdec2	equ	0xFDD
 16362                           plusw2	equ	0xFDB
 16363                           fsr2h	equ	0xFDA
 16364                           fsr2l	equ	0xFD9
 16365                           status	equ	0xFD8
 16366                           
 16367 ;; *************** function _OSCILLATOR_Initialize *****************
 16368 ;; Defined at:
 16369 ;;		line 105 in file "../Includes/MccGenerated/mcc.c"
 16370 ;; Parameters:    Size  Location     Type
 16371 ;;		None
 16372 ;; Auto vars:     Size  Location     Type
 16373 ;;		None
 16374 ;; Return value:  Size  Location     Type
 16375 ;;                  1    wreg      void 
 16376 ;; Registers used:
 16377 ;;		wreg, status,2
 16378 ;; Tracked objects:
 16379 ;;		On entry : 0/0
 16380 ;;		On exit  : 0/0
 16381 ;;		Unchanged: 0/0
 16382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16383 ;;      Params:         0       0       0       0       0       0       0       0       0
 16384 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16385 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16386 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16387 ;;Total ram usage:        0 bytes
 16388 ;; Hardware stack levels used:    1
 16389 ;; Hardware stack levels required when called:   11
 16390 ;; This function calls:
 16391 ;;		Nothing
 16392 ;; This function is called by:
 16393 ;;		_SYSTEM_Initialize
 16394 ;; This function uses a non-reentrant model
 16395 ;;
 16396                           
 16397                           	psect	text76
 16398  003C2E                     __ptext76:
 16399                           	opt stack 0
 16400  003C2E                     _OSCILLATOR_Initialize:
 16401                           	opt stack 18
 16402                           
 16403                           ;mcc.c: 107: OSCTUNE = 0x80;
 16404                           
 16405                           ; BSR set to: 15
 16406                           ;incstack = 0
 16407  003C2E  0E80               	movlw	128
 16408  003C30  6E9B               	movwf	3995,c	;volatile
 16409                           
 16410                           ;mcc.c: 108: OSCCON = 0x70;
 16411  003C32  0E70               	movlw	112
 16412  003C34  6ED3               	movwf	4051,c	;volatile
 16413                           
 16414                           ;mcc.c: 109: OSCCON2 = 0x10;
 16415  003C36  0E10               	movlw	16
 16416  003C38  6ED2               	movwf	4050,c	;volatile
 16417  003C3A                     l1023:
 16418  003C3A  AED2               	btfss	4050,7,c	;volatile
 16419  003C3C  D7FE               	goto	l1023
 16420                           
 16421                           ;mcc.c: 111: ACTCON = 0x90;
 16422  003C3E  0E90               	movlw	144
 16423  003C40  6EB5               	movwf	4021,c	;volatile
 16424  003C42  0C90               	retlw	144	;funcret
 16425  003C44                     __end_of_OSCILLATOR_Initialize:
 16426                           	opt stack 0
 16427                           tblptru	equ	0xFF8
 16428                           tblptrh	equ	0xFF7
 16429                           tblptrl	equ	0xFF6
 16430                           tablat	equ	0xFF5
 16431                           prodh	equ	0xFF4
 16432                           prodl	equ	0xFF3
 16433                           intcon	equ	0xFF2
 16434                           postinc0	equ	0xFEE
 16435                           wreg	equ	0xFE8
 16436                           indf1	equ	0xFE7
 16437                           fsr1h	equ	0xFE2
 16438                           fsr1l	equ	0xFE1
 16439                           indf2	equ	0xFDF
 16440                           postinc2	equ	0xFDE
 16441                           postdec2	equ	0xFDD
 16442                           plusw2	equ	0xFDB
 16443                           fsr2h	equ	0xFDA
 16444                           fsr2l	equ	0xFD9
 16445                           status	equ	0xFD8
 16446                           
 16447 ;; *************** function _EUSART_Initialize *****************
 16448 ;; Defined at:
 16449 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 16450 ;; Parameters:    Size  Location     Type
 16451 ;;		None
 16452 ;; Auto vars:     Size  Location     Type
 16453 ;;		None
 16454 ;; Return value:  Size  Location     Type
 16455 ;;                  1    wreg      void 
 16456 ;; Registers used:
 16457 ;;		wreg, status,2
 16458 ;; Tracked objects:
 16459 ;;		On entry : 1/F
 16460 ;;		On exit  : F/1
 16461 ;;		Unchanged: 0/0
 16462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16463 ;;      Params:         0       0       0       0       0       0       0       0       0
 16464 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16465 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16466 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16467 ;;Total ram usage:        0 bytes
 16468 ;; Hardware stack levels used:    1
 16469 ;; Hardware stack levels required when called:   11
 16470 ;; This function calls:
 16471 ;;		Nothing
 16472 ;; This function is called by:
 16473 ;;		_moteApp_GoToSleep
 16474 ;;		_SYSTEM_Initialize
 16475 ;; This function uses a non-reentrant model
 16476 ;;
 16477                           
 16478                           	psect	text77
 16479  003F34                     __ptext77:
 16480                           	opt stack 0
 16481  003F34                     _EUSART_Initialize:
 16482                           	opt stack 16
 16483                           
 16484                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 16485                           
 16486                           ;incstack = 0
 16487  003F34  9A9D               	bcf	3997,5,c	;volatile
 16488                           
 16489                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 16490  003F36  989D               	bcf	3997,4,c	;volatile
 16491                           
 16492                           ;eusart.c: 85: BAUDCON = 0x48;
 16493  003F38  0E48               	movlw	72
 16494  003F3A  6EB8               	movwf	4024,c	;volatile
 16495                           
 16496                           ;eusart.c: 88: RCSTA = 0x90;
 16497  003F3C  0E90               	movlw	144
 16498  003F3E  6EAB               	movwf	4011,c	;volatile
 16499                           
 16500                           ;eusart.c: 91: TXSTA = 0x26;
 16501  003F40  0E26               	movlw	38
 16502  003F42  6EAC               	movwf	4012,c	;volatile
 16503                           
 16504                           ;eusart.c: 95: SPBRG = 0x71;
 16505  003F44  0E71               	movlw	113
 16506  003F46  6EAF               	movwf	4015,c	;volatile
 16507                           
 16508                           ;eusart.c: 100: SPBRGH = 0x02;
 16509  003F48  0E02               	movlw	2
 16510  003F4A  6EB0               	movwf	4016,c	;volatile
 16511                           
 16512                           ;eusart.c: 103: eusartTxHead = 0;
 16513  003F4C  6A24               	clrf	_eusartTxHead,c
 16514                           
 16515                           ;eusart.c: 104: eusartTxTail = 0;
 16516  003F4E  6A25               	clrf	_eusartTxTail,c
 16517                           
 16518                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 16519  003F50  0E40               	movlw	64
 16520  003F52  6E23               	movwf	_eusartTxBufferRemaining,c	;volatile
 16521                           
 16522                           ;eusart.c: 107: eusartRxHead = 0;
 16523  003F54  0101               	movlb	1	; () banked
 16524  003F56  6B4E               	clrf	_eusartRxHead& (0+255),b
 16525                           
 16526                           ; BSR set to: 1
 16527                           ;eusart.c: 108: eusartRxTail = 0;
 16528  003F58  6B4F               	clrf	_eusartRxTail& (0+255),b
 16529                           
 16530                           ; BSR set to: 1
 16531                           ;eusart.c: 109: eusartRxCount = 0;
 16532  003F5A  6A22               	clrf	_eusartRxCount,c	;volatile
 16533                           
 16534                           ; BSR set to: 1
 16535                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 16536  003F5C  8A9D               	bsf	3997,5,c	;volatile
 16537                           
 16538                           ; BSR set to: 1
 16539                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 16540  003F5E  88AB               	bsf	4011,4,c	;volatile
 16541                           
 16542                           ; BSR set to: 1
 16543  003F60  0012               	return		;funcret
 16544  003F62                     __end_of_EUSART_Initialize:
 16545                           	opt stack 0
 16546                           tblptru	equ	0xFF8
 16547                           tblptrh	equ	0xFF7
 16548                           tblptrl	equ	0xFF6
 16549                           tablat	equ	0xFF5
 16550                           prodh	equ	0xFF4
 16551                           prodl	equ	0xFF3
 16552                           intcon	equ	0xFF2
 16553                           postinc0	equ	0xFEE
 16554                           wreg	equ	0xFE8
 16555                           indf1	equ	0xFE7
 16556                           fsr1h	equ	0xFE2
 16557                           fsr1l	equ	0xFE1
 16558                           indf2	equ	0xFDF
 16559                           postinc2	equ	0xFDE
 16560                           postdec2	equ	0xFDD
 16561                           plusw2	equ	0xFDB
 16562                           fsr2h	equ	0xFDA
 16563                           fsr2l	equ	0xFD9
 16564                           status	equ	0xFD8
 16565                           
 16566 ;; *************** function _CMP1_Initialize *****************
 16567 ;; Defined at:
 16568 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 16569 ;; Parameters:    Size  Location     Type
 16570 ;;		None
 16571 ;; Auto vars:     Size  Location     Type
 16572 ;;		None
 16573 ;; Return value:  Size  Location     Type
 16574 ;;                  1    wreg      void 
 16575 ;; Registers used:
 16576 ;;		wreg, status,2
 16577 ;; Tracked objects:
 16578 ;;		On entry : F/1
 16579 ;;		On exit  : F/1
 16580 ;;		Unchanged: F/0
 16581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16582 ;;      Params:         0       0       0       0       0       0       0       0       0
 16583 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16584 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16585 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16586 ;;Total ram usage:        0 bytes
 16587 ;; Hardware stack levels used:    1
 16588 ;; Hardware stack levels required when called:   11
 16589 ;; This function calls:
 16590 ;;		Nothing
 16591 ;; This function is called by:
 16592 ;;		_SYSTEM_Initialize
 16593 ;; This function uses a non-reentrant model
 16594 ;;
 16595                           
 16596                           	psect	text78
 16597  003B92                     __ptext78:
 16598                           	opt stack 0
 16599  003B92                     _CMP1_Initialize:
 16600                           	opt stack 18
 16601                           
 16602                           ; BSR set to: 1
 16603                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 16604                           
 16605                           ; BSR set to: 1
 16606                           ;incstack = 0
 16607  003B92  9CA0               	bcf	4000,6,c	;volatile
 16608                           
 16609                           ; BSR set to: 1
 16610                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 16611  003B94  0E9C               	movlw	156
 16612  003B96  6E98               	movwf	3992,c	;volatile
 16613                           
 16614                           ; BSR set to: 1
 16615                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 16616  003B98  8A9A               	bsf	3994,5,c	;volatile
 16617                           
 16618                           ; BSR set to: 1
 16619                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 16620  003B9A  929A               	bcf	3994,1,c	;volatile
 16621                           
 16622                           ; BSR set to: 1
 16623                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 16624  003B9C  969A               	bcf	3994,3,c	;volatile
 16625                           
 16626                           ; BSR set to: 1
 16627                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 16628  003B9E  9CA1               	bcf	4001,6,c	;volatile
 16629                           
 16630                           ; BSR set to: 1
 16631                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 16632  003BA0  9CA0               	bcf	4000,6,c	;volatile
 16633                           
 16634                           ; BSR set to: 1
 16635  003BA2  0C9C               	retlw	156	;funcret
 16636  003BA4                     __end_of_CMP1_Initialize:
 16637                           	opt stack 0
 16638                           tblptru	equ	0xFF8
 16639                           tblptrh	equ	0xFF7
 16640                           tblptrl	equ	0xFF6
 16641                           tablat	equ	0xFF5
 16642                           prodh	equ	0xFF4
 16643                           prodl	equ	0xFF3
 16644                           intcon	equ	0xFF2
 16645                           postinc0	equ	0xFEE
 16646                           wreg	equ	0xFE8
 16647                           indf1	equ	0xFE7
 16648                           fsr1h	equ	0xFE2
 16649                           fsr1l	equ	0xFE1
 16650                           indf2	equ	0xFDF
 16651                           postinc2	equ	0xFDE
 16652                           postdec2	equ	0xFDD
 16653                           plusw2	equ	0xFDB
 16654                           fsr2h	equ	0xFDA
 16655                           fsr2l	equ	0xFD9
 16656                           status	equ	0xFD8
 16657                           
 16658 ;; *************** function _ADC_Initialize *****************
 16659 ;; Defined at:
 16660 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 16661 ;; Parameters:    Size  Location     Type
 16662 ;;		None
 16663 ;; Auto vars:     Size  Location     Type
 16664 ;;		None
 16665 ;; Return value:  Size  Location     Type
 16666 ;;                  1    wreg      void 
 16667 ;; Registers used:
 16668 ;;		wreg, status,2
 16669 ;; Tracked objects:
 16670 ;;		On entry : F/1
 16671 ;;		On exit  : F/1
 16672 ;;		Unchanged: F/0
 16673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16674 ;;      Params:         0       0       0       0       0       0       0       0       0
 16675 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16676 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16677 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16678 ;;Total ram usage:        0 bytes
 16679 ;; Hardware stack levels used:    1
 16680 ;; Hardware stack levels required when called:   11
 16681 ;; This function calls:
 16682 ;;		Nothing
 16683 ;; This function is called by:
 16684 ;;		_SYSTEM_Initialize
 16685 ;; This function uses a non-reentrant model
 16686 ;;
 16687                           
 16688                           	psect	text79
 16689  003C18                     __ptext79:
 16690                           	opt stack 0
 16691  003C18                     _ADC_Initialize:
 16692                           	opt stack 18
 16693                           
 16694                           ; BSR set to: 1
 16695                           ;adc.c: 68: VREFCON0 = 0b10100000;
 16696                           
 16697                           ; BSR set to: 1
 16698                           ;incstack = 0
 16699  003C18  0EA0               	movlw	160
 16700  003C1A  6E7D               	movwf	3965,c	;volatile
 16701                           
 16702                           ;adc.c: 70: ADCON0 = 0x01;
 16703  003C1C  0E01               	movlw	1
 16704  003C1E  6EC2               	movwf	4034,c	;volatile
 16705                           
 16706                           ;adc.c: 73: ADCON1 = 0x08;
 16707  003C20  0E08               	movlw	8
 16708  003C22  6EC1               	movwf	4033,c	;volatile
 16709                           
 16710                           ;adc.c: 76: ADCON2 = 0b10001110;
 16711  003C24  0E8E               	movlw	142
 16712  003C26  6EC0               	movwf	4032,c	;volatile
 16713                           
 16714                           ; BSR set to: 1
 16715                           ;adc.c: 79: ADRESL = 0x00;
 16716  003C28  6AC3               	clrf	4035,c	;volatile
 16717                           
 16718                           ; BSR set to: 1
 16719                           ;adc.c: 82: ADRESH = 0x00;
 16720  003C2A  6AC4               	clrf	4036,c	;volatile
 16721                           
 16722                           ; BSR set to: 1
 16723  003C2C  0012               	return		;funcret
 16724  003C2E                     __end_of_ADC_Initialize:
 16725                           	opt stack 0
 16726                           tblptru	equ	0xFF8
 16727                           tblptrh	equ	0xFF7
 16728                           tblptrl	equ	0xFF6
 16729                           tablat	equ	0xFF5
 16730                           prodh	equ	0xFF4
 16731                           prodl	equ	0xFF3
 16732                           intcon	equ	0xFF2
 16733                           postinc0	equ	0xFEE
 16734                           wreg	equ	0xFE8
 16735                           indf1	equ	0xFE7
 16736                           fsr1h	equ	0xFE2
 16737                           fsr1l	equ	0xFE1
 16738                           indf2	equ	0xFDF
 16739                           postinc2	equ	0xFDE
 16740                           postdec2	equ	0xFDD
 16741                           plusw2	equ	0xFDB
 16742                           fsr2h	equ	0xFDA
 16743                           fsr2l	equ	0xFD9
 16744                           status	equ	0xFD8
 16745                           
 16746 ;; *************** function _MOTEapp_handlerState *****************
 16747 ;; Defined at:
 16748 ;;		line 168 in file "../Includes/Board/MOTEapp.c"
 16749 ;; Parameters:    Size  Location     Type
 16750 ;;  state           1    wreg     enum E6355
 16751 ;; Auto vars:     Size  Location     Type
 16752 ;;  state           1    0[BANK0 ] enum E6355
 16753 ;; Return value:  Size  Location     Type
 16754 ;;                  1    wreg      void 
 16755 ;; Registers used:
 16756 ;;		wreg
 16757 ;; Tracked objects:
 16758 ;;		On entry : F/1
 16759 ;;		On exit  : 0/0
 16760 ;;		Unchanged: 0/0
 16761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16762 ;;      Params:         0       0       0       0       0       0       0       0       0
 16763 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16764 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16765 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16766 ;;Total ram usage:        1 bytes
 16767 ;; Hardware stack levels used:    1
 16768 ;; Hardware stack levels required when called:   11
 16769 ;; This function calls:
 16770 ;;		Nothing
 16771 ;; This function is called by:
 16772 ;;		_main
 16773 ;; This function uses a non-reentrant model
 16774 ;;
 16775                           
 16776                           	psect	text80
 16777  003B20                     __ptext80:
 16778                           	opt stack 0
 16779  003B20                     _MOTEapp_handlerState:
 16780                           	opt stack 19
 16781                           
 16782                           ; BSR set to: 1
 16783                           ;incstack = 0
 16784                           ;MOTEapp_handlerState@state stored from wreg
 16785  003B20  0100               	movlb	0	; () banked
 16786  003B22  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 16787                           
 16788                           ;MOTEapp.c: 170: moteState = state;
 16789  003B24  C060  F0F9         	movff	MOTEapp_handlerState@state,_moteState
 16790  003B28  0012               	return		;funcret
 16791  003B2A                     __end_of_MOTEapp_handlerState:
 16792                           	opt stack 0
 16793                           tblptru	equ	0xFF8
 16794                           tblptrh	equ	0xFF7
 16795                           tblptrl	equ	0xFF6
 16796                           tablat	equ	0xFF5
 16797                           prodh	equ	0xFF4
 16798                           prodl	equ	0xFF3
 16799                           intcon	equ	0xFF2
 16800                           postinc0	equ	0xFEE
 16801                           wreg	equ	0xFE8
 16802                           indf1	equ	0xFE7
 16803                           fsr1h	equ	0xFE2
 16804                           fsr1l	equ	0xFE1
 16805                           indf2	equ	0xFDF
 16806                           postinc2	equ	0xFDE
 16807                           postdec2	equ	0xFDD
 16808                           plusw2	equ	0xFDB
 16809                           fsr2h	equ	0xFDA
 16810                           fsr2l	equ	0xFD9
 16811                           status	equ	0xFD8
 16812                           
 16813 ;; *************** function _DATAEE_ReadByte *****************
 16814 ;; Defined at:
 16815 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 16816 ;; Parameters:    Size  Location     Type
 16817 ;;  bAdd            1    wreg     unsigned char 
 16818 ;; Auto vars:     Size  Location     Type
 16819 ;;  bAdd            1    0[BANK0 ] unsigned char 
 16820 ;; Return value:  Size  Location     Type
 16821 ;;                  1    wreg      unsigned char 
 16822 ;; Registers used:
 16823 ;;		wreg, status,2
 16824 ;; Tracked objects:
 16825 ;;		On entry : F/0
 16826 ;;		On exit  : 0/0
 16827 ;;		Unchanged: 0/0
 16828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16829 ;;      Params:         0       0       0       0       0       0       0       0       0
 16830 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16831 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16832 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16833 ;;Total ram usage:        1 bytes
 16834 ;; Hardware stack levels used:    1
 16835 ;; Hardware stack levels required when called:   11
 16836 ;; This function calls:
 16837 ;;		Nothing
 16838 ;; This function is called by:
 16839 ;;		_main
 16840 ;; This function uses a non-reentrant model
 16841 ;;
 16842                           
 16843                           	psect	text81
 16844  003BC8                     __ptext81:
 16845                           	opt stack 0
 16846  003BC8                     _DATAEE_ReadByte:
 16847                           	opt stack 19
 16848                           
 16849                           ;incstack = 0
 16850                           ;DATAEE_ReadByte@bAdd stored from wreg
 16851  003BC8  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 16852                           
 16853                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 16854  003BCA  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 16855                           
 16856                           ;memory.c: 191: EECON1bits.CFGS = 0;
 16857  003BCE  9CA6               	bcf	4006,6,c	;volatile
 16858                           
 16859                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 16860  003BD0  9EA6               	bcf	4006,7,c	;volatile
 16861                           
 16862                           ;memory.c: 193: EECON1bits.RD = 1;
 16863  003BD2  80A6               	bsf	4006,0,c	;volatile
 16864                           
 16865                           ;memory.c: 194: __nop();
 16866  003BD4  F000               	nop	
 16867                           
 16868                           ;memory.c: 195: __nop();
 16869  003BD6  F000               	nop	
 16870                           
 16871                           ;memory.c: 197: return (EEDATA);
 16872  003BD8  50A8               	movf	4008,w,c	;volatile
 16873  003BDA  0012               	return		;funcret
 16874  003BDC                     __end_of_DATAEE_ReadByte:
 16875                           	opt stack 0
 16876                           tblptru	equ	0xFF8
 16877                           tblptrh	equ	0xFF7
 16878                           tblptrl	equ	0xFF6
 16879                           tablat	equ	0xFF5
 16880                           prodh	equ	0xFF4
 16881                           prodl	equ	0xFF3
 16882                           intcon	equ	0xFF2
 16883                           postinc0	equ	0xFEE
 16884                           wreg	equ	0xFE8
 16885                           indf1	equ	0xFE7
 16886                           fsr1h	equ	0xFE2
 16887                           fsr1l	equ	0xFE1
 16888                           indf2	equ	0xFDF
 16889                           postinc2	equ	0xFDE
 16890                           postdec2	equ	0xFDD
 16891                           plusw2	equ	0xFDB
 16892                           fsr2h	equ	0xFDA
 16893                           fsr2l	equ	0xFD9
 16894                           status	equ	0xFD8
 16895                           
 16896 ;; *************** function _INTERRUPT_InterruptManager *****************
 16897 ;; Defined at:
 16898 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 16899 ;; Parameters:    Size  Location     Type
 16900 ;;		None
 16901 ;; Auto vars:     Size  Location     Type
 16902 ;;		None
 16903 ;; Return value:  Size  Location     Type
 16904 ;;                  1    wreg      void 
 16905 ;; Registers used:
 16906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16907 ;; Tracked objects:
 16908 ;;		On entry : 0/0
 16909 ;;		On exit  : 0/0
 16910 ;;		Unchanged: 0/0
 16911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16912 ;;      Params:         0       0       0       0       0       0       0       0       0
 16913 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16914 ;;      Temps:         12       0       0       0       0       0       0       0       0
 16915 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16916 ;;Total ram usage:       12 bytes
 16917 ;; Hardware stack levels used:    1
 16918 ;; Hardware stack levels required when called:   10
 16919 ;; This function calls:
 16920 ;;		_CMP1_ISR
 16921 ;;		_EUSART_Receive_ISR
 16922 ;;		_EUSART_Transmit_ISR
 16923 ;;		_TMR1_ISR
 16924 ;;		_TMRapp_Tick
 16925 ;;		_USBDeviceTasks
 16926 ;;		_USBapp_setrxByteFlag
 16927 ;; This function is called by:
 16928 ;;		Interrupt level 2
 16929 ;; This function uses a non-reentrant model
 16930 ;;
 16931                           
 16932                           	psect	intcode
 16933  001008                     __pintcode:
 16934                           	opt stack 0
 16935  001008                     _INTERRUPT_InterruptManager:
 16936                           	opt stack 10
 16937                           
 16938                           ;incstack = 0
 16939  001008  825A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16940  00100A  CFFA F04E          	movff	pclath,??_INTERRUPT_InterruptManager
 16941  00100E  CFFB F04F          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 16942  001012  CFE1 F050          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 16943  001016  CFE2 F051          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 16944  00101A  CFD9 F052          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 16945  00101E  CFDA F053          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 16946  001022  CFF3 F054          	movff	prodl,??_INTERRUPT_InterruptManager+6
 16947  001026  CFF4 F055          	movff	prodh,??_INTERRUPT_InterruptManager+7
 16948  00102A  CFF6 F056          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 16949  00102E  CFF7 F057          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 16950  001032  CFF8 F058          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 16951  001036  CFF5 F059          	movff	tablat,??_INTERRUPT_InterruptManager+11
 16952                           
 16953                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 16954  00103A  B09D               	btfsc	3997,0,c	;volatile
 16955  00103C  A09E               	btfss	3998,0,c	;volatile
 16956  00103E  D005               	goto	i2l983
 16957                           
 16958                           ;interrupt_manager.c: 59: {
 16959                           ;interrupt_manager.c: 60: TMR1_ISR();
 16960  001040  EC9A  F01D         	call	_TMR1_ISR	;wreg free
 16961                           
 16962                           ;interrupt_manager.c: 62: TMRapp_Tick();
 16963  001044  EC86  F01D         	call	_TMRapp_Tick	;wreg free
 16964                           
 16965                           ;interrupt_manager.c: 63: }
 16966  001048  D016               	goto	i2l991
 16967  00104A                     i2l983:
 16968                           
 16969                           ;interrupt_manager.c: 64: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 16970  00104A  BA9D               	btfsc	3997,5,c	;volatile
 16971  00104C  AA9E               	btfss	3998,5,c	;volatile
 16972  00104E  D005               	goto	i2l985
 16973                           
 16974                           ;interrupt_manager.c: 65: {
 16975                           ;interrupt_manager.c: 66: USBapp_setrxByteFlag();
 16976  001050  EC89  F01D         	call	_USBapp_setrxByteFlag	;wreg free
 16977                           
 16978                           ;interrupt_manager.c: 67: EUSART_Receive_ISR();
 16979  001054  EC2E  F01F         	call	_EUSART_Receive_ISR	;wreg free
 16980                           
 16981                           ;interrupt_manager.c: 68: }
 16982  001058  D00E               	goto	i2l991
 16983  00105A                     i2l985:
 16984                           
 16985                           ;interrupt_manager.c: 69: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 16986  00105A  B89D               	btfsc	3997,4,c	;volatile
 16987  00105C  A89E               	btfss	3998,4,c	;volatile
 16988  00105E  D003               	goto	i2l987
 16989                           
 16990                           ;interrupt_manager.c: 70: {
 16991                           ;interrupt_manager.c: 71: EUSART_Transmit_ISR();
 16992  001060  ECF2  F01E         	call	_EUSART_Transmit_ISR	;wreg free
 16993                           
 16994                           ;interrupt_manager.c: 72: }
 16995  001064  D008               	goto	i2l991
 16996  001066                     i2l987:
 16997                           
 16998                           ;interrupt_manager.c: 73: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 16999  001066  BCA0               	btfsc	4000,6,c	;volatile
 17000  001068  ACA1               	btfss	4001,6,c	;volatile
 17001  00106A  D003               	goto	i2l9157
 17002                           
 17003                           ;interrupt_manager.c: 74: {
 17004                           ;interrupt_manager.c: 75: CMP1_ISR();
 17005  00106C  EC7C  F01D         	call	_CMP1_ISR	;wreg free
 17006                           
 17007                           ;interrupt_manager.c: 76: }
 17008  001070  D002               	goto	i2l991
 17009  001072                     i2l9157:
 17010                           
 17011                           ;interrupt_manager.c: 77: else
 17012                           ;interrupt_manager.c: 78: {
 17013                           ;interrupt_manager.c: 80: USBDeviceTasks();
 17014  001072  ECE2  F02D         	call	_USBDeviceTasks	;wreg free
 17015  001076                     i2l991:
 17016  001076  C059  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 17017  00107A  C058  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 17018  00107E  C057  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 17019  001082  C056  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 17020  001086  C055  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 17021  00108A  C054  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 17022  00108E  C053  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 17023  001092  C052  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 17024  001096  C051  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 17025  00109A  C050  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 17026  00109E  C04F  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17027  0010A2  C04E  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 17028  0010A6  925A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17029  0010A8  0011               	retfie		f
 17030  0010AA                     __end_of_INTERRUPT_InterruptManager:
 17031                           	opt stack 0
 17032                           pclatu	equ	0xFFB
 17033                           pclath	equ	0xFFA
 17034                           tblptru	equ	0xFF8
 17035                           tblptrh	equ	0xFF7
 17036                           tblptrl	equ	0xFF6
 17037                           tablat	equ	0xFF5
 17038                           prodh	equ	0xFF4
 17039                           prodl	equ	0xFF3
 17040                           intcon	equ	0xFF2
 17041                           postinc0	equ	0xFEE
 17042                           wreg	equ	0xFE8
 17043                           indf1	equ	0xFE7
 17044                           fsr1h	equ	0xFE2
 17045                           fsr1l	equ	0xFE1
 17046                           indf2	equ	0xFDF
 17047                           postinc2	equ	0xFDE
 17048                           postdec2	equ	0xFDD
 17049                           plusw2	equ	0xFDB
 17050                           fsr2h	equ	0xFDA
 17051                           fsr2l	equ	0xFD9
 17052                           status	equ	0xFD8
 17053                           
 17054 ;; *************** function _USBapp_setrxByteFlag *****************
 17055 ;; Defined at:
 17056 ;;		line 226 in file "../Includes/Board/USBapp.c"
 17057 ;; Parameters:    Size  Location     Type
 17058 ;;		None
 17059 ;; Auto vars:     Size  Location     Type
 17060 ;;		None
 17061 ;; Return value:  Size  Location     Type
 17062 ;;                  1    wreg      void 
 17063 ;; Registers used:
 17064 ;;		wreg, status,2
 17065 ;; Tracked objects:
 17066 ;;		On entry : 0/0
 17067 ;;		On exit  : 0/0
 17068 ;;		Unchanged: 0/0
 17069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17070 ;;      Params:         0       0       0       0       0       0       0       0       0
 17071 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17072 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17073 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17074 ;;Total ram usage:        0 bytes
 17075 ;; Hardware stack levels used:    1
 17076 ;; This function calls:
 17077 ;;		Nothing
 17078 ;; This function is called by:
 17079 ;;		_INTERRUPT_InterruptManager
 17080 ;; This function uses a non-reentrant model
 17081 ;;
 17082                           
 17083                           	psect	text83
 17084  003B12                     __ptext83:
 17085                           	opt stack 0
 17086  003B12                     _USBapp_setrxByteFlag:
 17087                           	opt stack 19
 17088                           
 17089                           ;USBapp.c: 228: rxByteFlag = 1;
 17090                           
 17091                           ;incstack = 0
 17092  003B12  0E01               	movlw	1
 17093  003B14  6E28               	movwf	_rxByteFlag,c	;volatile
 17094  003B16  0C01               	retlw	1	;funcret
 17095  003B18                     __end_of_USBapp_setrxByteFlag:
 17096                           	opt stack 0
 17097                           pclatu	equ	0xFFB
 17098                           pclath	equ	0xFFA
 17099                           tblptru	equ	0xFF8
 17100                           tblptrh	equ	0xFF7
 17101                           tblptrl	equ	0xFF6
 17102                           tablat	equ	0xFF5
 17103                           prodh	equ	0xFF4
 17104                           prodl	equ	0xFF3
 17105                           intcon	equ	0xFF2
 17106                           postinc0	equ	0xFEE
 17107                           wreg	equ	0xFE8
 17108                           indf1	equ	0xFE7
 17109                           fsr1h	equ	0xFE2
 17110                           fsr1l	equ	0xFE1
 17111                           indf2	equ	0xFDF
 17112                           postinc2	equ	0xFDE
 17113                           postdec2	equ	0xFDD
 17114                           plusw2	equ	0xFDB
 17115                           fsr2h	equ	0xFDA
 17116                           fsr2l	equ	0xFD9
 17117                           status	equ	0xFD8
 17118                           
 17119 ;; *************** function _USBDeviceTasks *****************
 17120 ;; Defined at:
 17121 ;;		line 428 in file "../Includes/Usb/framework/usb_device.c"
 17122 ;; Parameters:    Size  Location     Type
 17123 ;;		None
 17124 ;; Auto vars:     Size  Location     Type
 17125 ;;  i               1   31[COMRAM] unsigned char 
 17126 ;; Return value:  Size  Location     Type
 17127 ;;                  1    wreg      void 
 17128 ;; Registers used:
 17129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17130 ;; Tracked objects:
 17131 ;;		On entry : 0/0
 17132 ;;		On exit  : 0/0
 17133 ;;		Unchanged: 0/0
 17134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17135 ;;      Params:         0       0       0       0       0       0       0       0       0
 17136 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17137 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17138 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17139 ;;Total ram usage:        1 bytes
 17140 ;; Hardware stack levels used:    1
 17141 ;; Hardware stack levels required when called:    9
 17142 ;; This function calls:
 17143 ;;		_USBCtrlEPAllowStatusStage
 17144 ;;		_USBCtrlEPService
 17145 ;;		_USBStallHandler
 17146 ;;		_USBSuspend
 17147 ;;		_USBWakeFromSuspend
 17148 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17149 ;;		i2_USBDeviceInit
 17150 ;; This function is called by:
 17151 ;;		_INTERRUPT_InterruptManager
 17152 ;; This function uses a non-reentrant model
 17153 ;;
 17154                           
 17155                           	psect	text84
 17156  005BC4                     __ptext84:
 17157                           	opt stack 0
 17158  005BC4                     _USBDeviceTasks:
 17159                           	opt stack 10
 17160                           
 17161                           ;usb_device.c: 430: uint8_t i;
 17162                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 17163                           
 17164                           ;incstack = 0
 17165  005BC4  0100               	movlb	0	; () banked
 17166  005BC6  05F4               	decf	_USBDeviceState& (0+255),w,b	;volatile
 17167  005BC8  E107               	bnz	i2l8995
 17168                           
 17169                           ; BSR set to: 0
 17170                           ;usb_device.c: 433: {
 17171                           ;usb_device.c: 443: if(!UCONbits.SE0)
 17172  005BCA  BA60               	btfsc	3936,5,c	;volatile
 17173  005BCC  D005               	goto	i2l8995
 17174                           
 17175                           ; BSR set to: 0
 17176                           ;usb_device.c: 444: {
 17177                           ;usb_device.c: 445: {UIR = 0;};
 17178  005BCE  6A65               	clrf	3941,c	;volatile
 17179                           
 17180                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 17181  005BD0  8064               	bsf	3940,0,c	;volatile
 17182                           
 17183                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 17184  005BD2  8864               	bsf	3940,4,c	;volatile
 17185                           
 17186                           ; BSR set to: 0
 17187                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 17188  005BD4  0E02               	movlw	2
 17189  005BD6  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 17190  005BD8                     i2l8995:
 17191                           
 17192                           ; BSR set to: 0
 17193                           ;usb_device.c: 449: }
 17194                           ;usb_device.c: 450: }
 17195                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 17196  005BD8  B465               	btfsc	3941,2,c	;volatile
 17197                           
 17198                           ; BSR set to: 0
 17199  005BDA  A464               	btfss	3940,2,c	;volatile
 17200  005BDC  D003               	goto	i2l9003
 17201                           
 17202                           ; BSR set to: 0
 17203                           ;usb_device.c: 455: {
 17204                           ;usb_device.c: 456: (UIR &= 0xFB);
 17205  005BDE  9465               	bcf	3941,2,c	;volatile
 17206                           
 17207                           ; BSR set to: 0
 17208                           ;usb_device.c: 457: USBWakeFromSuspend();
 17209  005BE0  ECBA  F01E         	call	_USBWakeFromSuspend	;wreg free
 17210  005BE4                     i2l9003:
 17211                           
 17212                           ;usb_device.c: 458: }
 17213                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 17214  005BE4  A260               	btfss	3936,1,c	;volatile
 17215  005BE6  D002               	goto	i2l1454
 17216                           
 17217                           ;usb_device.c: 464: {
 17218                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 17219  005BE8  94A4               	bcf	4004,2,c	;volatile
 17220                           
 17221                           ;usb_device.c: 466: return;
 17222  005BEA  0012               	return	
 17223  005BEC                     i2l1454:
 17224                           
 17225                           ;usb_device.c: 467: }
 17226                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 17227  005BEC  B065               	btfsc	3941,0,c	;volatile
 17228  005BEE  A064               	btfss	3940,0,c	;volatile
 17229  005BF0  D006               	goto	i2l9017
 17230                           
 17231                           ;usb_device.c: 480: {
 17232                           ;usb_device.c: 481: USBDeviceInit();
 17233  005BF2  EC8E  F02B         	call	i2_USBDeviceInit	;wreg free
 17234                           
 17235                           ; BSR set to: 0
 17236                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 17237  005BF6  84A3               	bsf	4003,2,c	;volatile
 17238                           
 17239                           ; BSR set to: 0
 17240                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 17241  005BF8  0E04               	movlw	4
 17242  005BFA  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 17243                           
 17244                           ; BSR set to: 0
 17245                           ;usb_device.c: 489: (UIR &= 0xFE);
 17246  005BFC  9065               	bcf	3941,0,c	;volatile
 17247  005BFE                     i2l9017:
 17248                           
 17249                           ;usb_device.c: 490: }
 17250                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 17251  005BFE  B865               	btfsc	3941,4,c	;volatile
 17252  005C00  A864               	btfss	3940,4,c	;volatile
 17253  005C02  D003               	goto	i2l9025
 17254                           
 17255                           ;usb_device.c: 496: {
 17256                           ;usb_device.c: 497: USBSuspend();
 17257  005C04  EC2E  F01E         	call	_USBSuspend	;wreg free
 17258                           
 17259                           ;usb_device.c: 498: (UIR &= 0xEF);
 17260  005C08  9865               	bcf	3941,4,c	;volatile
 17261  005C0A                     i2l9025:
 17262                           
 17263                           ;usb_device.c: 499: }
 17264                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 17265  005C0A  AC65               	btfss	3941,6,c	;volatile
 17266  005C0C  D014               	goto	i2l9041
 17267                           
 17268                           ;usb_device.c: 502: {
 17269                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 17270  005C0E  AC64               	btfss	3940,6,c	;volatile
 17271  005C10  D00A               	goto	i2l9031
 17272                           
 17273                           ;usb_device.c: 504: {
 17274                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 17275  005C12  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17276  005C14  0E73               	movlw	115
 17277  005C16  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17278  005C18  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17279  005C1A  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17280  005C1C  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17281  005C1E  0E01               	movlw	1
 17282  005C20  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17283  005C22  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17284  005C26                     i2l9031:
 17285                           
 17286                           ;usb_device.c: 506: }
 17287                           ;usb_device.c: 507: (UIR &= 0xBF);
 17288  005C26  9C65               	bcf	3941,6,c	;volatile
 17289                           
 17290                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 17291  005C28  501E               	movf	_USBStatusStageTimeoutCounter,w,c
 17292  005C2A  E001               	bz	i2l9037
 17293                           
 17294                           ;usb_device.c: 513: {
 17295                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 17296  005C2C  061E               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 17297  005C2E                     i2l9037:
 17298                           
 17299                           ;usb_device.c: 515: }
 17300                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 17301  005C2E  501E               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 17302  005C30  E102               	bnz	i2l9041
 17303                           
 17304                           ;usb_device.c: 522: {
 17305                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 17306  005C32  EC2B  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17307  005C36                     i2l9041:
 17308                           
 17309                           ;usb_device.c: 524: }
 17310                           ;usb_device.c: 525: }
 17311                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 17312  005C36  BA65               	btfsc	3941,5,c	;volatile
 17313  005C38  AA64               	btfss	3940,5,c	;volatile
 17314  005C3A  D002               	goto	i2l9047
 17315                           
 17316                           ;usb_device.c: 528: {
 17317                           ;usb_device.c: 529: USBStallHandler();
 17318  005C3C  ECBE  F020         	call	_USBStallHandler	;wreg free
 17319  005C40                     i2l9047:
 17320                           
 17321                           ;usb_device.c: 530: }
 17322                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 17323  005C40  B265               	btfsc	3941,1,c	;volatile
 17324  005C42  A264               	btfss	3940,1,c	;volatile
 17325  005C44  D00B               	goto	i2l9055
 17326                           
 17327                           ;usb_device.c: 533: {
 17328                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 17329  005C46  0E7F               	movlw	127
 17330  005C48  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17331  005C4A  683B               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17332  005C4C  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17333  005C4E  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17334  005C50  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17335  005C52  0E01               	movlw	1
 17336  005C54  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17337  005C56  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17338                           
 17339                           ;usb_device.c: 535: {UEIR = 0;};
 17340  005C5A  6A67               	clrf	3943,c	;volatile
 17341  005C5C                     i2l9055:
 17342                           
 17343                           ;usb_device.c: 536: }
 17344                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 17345  005C5C  0E04               	movlw	4
 17346  005C5E  0100               	movlb	0	; () banked
 17347  005C60  61F4               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 17348  005C62  D002               	goto	i2l1464
 17349                           
 17350                           ; BSR set to: 0
 17351                           ;usb_device.c: 544: {
 17352                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 17353  005C64  94A4               	bcf	4004,2,c	;volatile
 17354                           
 17355                           ;usb_device.c: 546: return;
 17356  005C66  0C04               	retlw	4
 17357  005C68                     i2l1464:
 17358                           
 17359                           ; BSR set to: 0
 17360                           ;usb_device.c: 547: }
 17361                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 17362  005C68  A664               	btfss	3940,3,c	;volatile
 17363  005C6A  D02E               	goto	i2l1465
 17364                           
 17365                           ; BSR set to: 0
 17366                           ;usb_device.c: 553: {
 17367                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 17368  005C6C  6A4D               	clrf	USBDeviceTasks@i,c
 17369  005C6E                     i2l1466:
 17370                           
 17371                           ;usb_device.c: 555: {
 17372                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 17373  005C6E  A665               	btfss	3941,3,c	;volatile
 17374  005C70  D02B               	goto	i2l1465
 17375                           
 17376                           ;usb_device.c: 557: {
 17377                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 17378  005C72  CF61 F02D          	movff	3937,_USTATcopy	;volatile
 17379                           
 17380                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 17381  005C76  302D               	rrcf	_USTATcopy,w,c	;volatile
 17382  005C78  32E8               	rrcf	wreg,f,c
 17383  005C7A  32E8               	rrcf	wreg,f,c
 17384  005C7C  0B0F               	andlw	15
 17385  005C7E  6E21               	movwf	_endpoint_number,c	;volatile
 17386                           
 17387                           ;usb_device.c: 562: (UIR &= 0xF7);
 17388  005C80  9665               	bcf	3941,3,c	;volatile
 17389                           
 17390                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 17391  005C82  B42D               	btfsc	_USTATcopy,2,c	;volatile
 17392  005C84  D006               	goto	i2l9075
 17393                           
 17394                           ;usb_device.c: 567: {
 17395                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 17396  005C86  0E25               	movlw	low _ep_data_out
 17397  005C88  2421               	addwf	_endpoint_number,w,c	;volatile
 17398  005C8A  6ED9               	movwf	fsr2l,c
 17399  005C8C  6ADA               	clrf	fsr2h,c
 17400  005C8E  0E01               	movlw	high _ep_data_out
 17401  005C90  D005               	goto	L27
 17402  005C92                     i2l9075:
 17403                           
 17404                           ;usb_device.c: 570: else
 17405                           ;usb_device.c: 571: {
 17406                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 17407  005C92  0E22               	movlw	low _ep_data_in
 17408  005C94  2421               	addwf	_endpoint_number,w,c	;volatile
 17409  005C96  6ED9               	movwf	fsr2l,c
 17410  005C98  6ADA               	clrf	fsr2h,c
 17411  005C9A  0E01               	movlw	high _ep_data_in
 17412  005C9C                     L27:
 17413  005C9C  22DA               	addwfc	fsr2h,f,c
 17414  005C9E  0101               	movlb	1	; () banked
 17415  005CA0  70DF               	btg	indf2,0,c
 17416                           
 17417                           ; BSR set to: 1
 17418                           ;usb_device.c: 573: }
 17419                           ;usb_device.c: 577: if(endpoint_number == 0)
 17420  005CA2  5021               	movf	_endpoint_number,w,c	;volatile
 17421  005CA4  E103               	bnz	i2l9081
 17422                           
 17423                           ; BSR set to: 1
 17424                           ;usb_device.c: 578: {
 17425                           ;usb_device.c: 579: USBCtrlEPService();
 17426  005CA6  EC76  F028         	call	_USBCtrlEPService	;wreg free
 17427                           
 17428                           ;usb_device.c: 580: }
 17429  005CAA  D00A               	goto	i2l9083
 17430  005CAC                     i2l9081:
 17431                           
 17432                           ; BSR set to: 1
 17433                           ;usb_device.c: 581: else
 17434                           ;usb_device.c: 582: {
 17435                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 17436  005CAC  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17437  005CAE  0E72               	movlw	114
 17438  005CB0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17439  005CB2  0E2D               	movlw	low _USTATcopy
 17440  005CB4  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17441  005CB6  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17442  005CB8  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17443  005CBA  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17444  005CBC  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17445  005CC0                     i2l9083:
 17446  005CC0  2A4D               	incf	USBDeviceTasks@i,f,c
 17447  005CC2  0E03               	movlw	3
 17448  005CC4  644D               	cpfsgt	USBDeviceTasks@i,c
 17449  005CC6  D7D3               	goto	i2l1466
 17450  005CC8                     i2l1465:
 17451                           
 17452                           ;usb_device.c: 589: }
 17453                           ;usb_device.c: 590: }
 17454                           ;usb_device.c: 591: }
 17455                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 17456  005CC8  94A4               	bcf	4004,2,c	;volatile
 17457  005CCA  0012               	return		;funcret
 17458  005CCC                     __end_of_USBDeviceTasks:
 17459                           	opt stack 0
 17460                           pclatu	equ	0xFFB
 17461                           pclath	equ	0xFFA
 17462                           tblptru	equ	0xFF8
 17463                           tblptrh	equ	0xFF7
 17464                           tblptrl	equ	0xFF6
 17465                           tablat	equ	0xFF5
 17466                           prodh	equ	0xFF4
 17467                           prodl	equ	0xFF3
 17468                           intcon	equ	0xFF2
 17469                           postinc0	equ	0xFEE
 17470                           wreg	equ	0xFE8
 17471                           indf1	equ	0xFE7
 17472                           fsr1h	equ	0xFE2
 17473                           fsr1l	equ	0xFE1
 17474                           indf2	equ	0xFDF
 17475                           postinc2	equ	0xFDE
 17476                           postdec2	equ	0xFDD
 17477                           plusw2	equ	0xFDB
 17478                           fsr2h	equ	0xFDA
 17479                           fsr2l	equ	0xFD9
 17480                           status	equ	0xFD8
 17481                           
 17482 ;; *************** function i2_USBDeviceInit *****************
 17483 ;; Defined at:
 17484 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 17485 ;; Parameters:    Size  Location     Type
 17486 ;;		None
 17487 ;; Auto vars:     Size  Location     Type
 17488 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 17489 ;; Return value:  Size  Location     Type
 17490 ;;                  1    wreg      void 
 17491 ;; Registers used:
 17492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17493 ;; Tracked objects:
 17494 ;;		On entry : 0/0
 17495 ;;		On exit  : F/0
 17496 ;;		Unchanged: 0/0
 17497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17498 ;;      Params:         0       0       0       0       0       0       0       0       0
 17499 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17500 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17501 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17502 ;;Total ram usage:        1 bytes
 17503 ;; Hardware stack levels used:    1
 17504 ;; Hardware stack levels required when called:    1
 17505 ;; This function calls:
 17506 ;;		i2_memset
 17507 ;; This function is called by:
 17508 ;;		_USBDeviceTasks
 17509 ;; This function uses a non-reentrant model
 17510 ;;
 17511                           
 17512                           	psect	text85
 17513  00571C                     __ptext85:
 17514                           	opt stack 0
 17515  00571C                     i2_USBDeviceInit:
 17516                           	opt stack 17
 17517                           
 17518                           ;usb_device.c: 239: uint8_t i;
 17519                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 17520                           
 17521                           ;incstack = 0
 17522  00571C  94A3               	bcf	4003,2,c	;volatile
 17523                           
 17524                           ;usb_device.c: 244: {UEIR = 0;};
 17525  00571E  6A67               	clrf	3943,c	;volatile
 17526                           
 17527                           ;usb_device.c: 247: {UIR = 0;};
 17528  005720  6A65               	clrf	3941,c	;volatile
 17529                           
 17530                           ;usb_device.c: 250: UEP0 = 0;
 17531  005722  6A6A               	clrf	3946,c	;volatile
 17532                           
 17533                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 17534  005724  0E6B               	movlw	107
 17535  005726  6E2E               	movwf	i2memset@p1,c
 17536  005728  0E0F               	movlw	15
 17537  00572A  6E2F               	movwf	i2memset@p1+1,c
 17538  00572C  6A31               	clrf	i2memset@c+1,c
 17539  00572E  6A30               	clrf	i2memset@c,c
 17540  005730  6A33               	clrf	i2memset@n+1,c
 17541  005732  0E02               	movlw	2
 17542  005734  6E32               	movwf	i2memset@n,c
 17543  005736  EC43  F01F         	call	i2_memset	;wreg free
 17544                           
 17545                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 17546  00573A  0E16               	movlw	22
 17547  00573C  6E62               	movwf	3938,c	;volatile
 17548  00573E  0E9F               	movlw	159
 17549  005740  6E66               	movwf	3942,c	;volatile
 17550  005742  0E7B               	movlw	123
 17551  005744  6E64               	movwf	3940,c	;volatile
 17552                           
 17553                           ;usb_device.c: 257: ;
 17554                           ;usb_device.c: 260: ;
 17555                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 17556  005746  6A36               	clrf	i2USBDeviceInit@i,c
 17557  005748                     i2l8639:
 17558                           
 17559                           ;usb_device.c: 264: {
 17560                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 17561  005748  5036               	movf	i2USBDeviceInit@i,w,c
 17562  00574A  0D04               	mullw	4
 17563  00574C  0E00               	movlw	0
 17564  00574E  24F3               	addwf	prodl,w,c
 17565  005750  6ED9               	movwf	fsr2l,c
 17566  005752  0E04               	movlw	4
 17567  005754  20F4               	addwfc	prodh,w,c
 17568  005756  6EDA               	movwf	fsr2h,c
 17569  005758  6ADE               	clrf	postinc2,c
 17570  00575A  6ADE               	clrf	postinc2,c
 17571  00575C  6ADE               	clrf	postinc2,c
 17572  00575E  6ADD               	clrf	postdec2,c
 17573  005760  2A36               	incf	i2USBDeviceInit@i,f,c
 17574  005762  0E0B               	movlw	11
 17575  005764  6436               	cpfsgt	i2USBDeviceInit@i,c
 17576  005766  D7F0               	goto	i2l8639
 17577                           
 17578                           ;usb_device.c: 266: }
 17579                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 17580  005768  8C60               	bsf	3936,6,c	;volatile
 17581                           
 17582                           ;usb_device.c: 272: UADDR = 0x00;
 17583  00576A  6A63               	clrf	3939,c	;volatile
 17584                           
 17585                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 17586  00576C  9860               	bcf	3936,4,c	;volatile
 17587                           
 17588                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 17589  00576E  9C60               	bcf	3936,6,c	;volatile
 17590                           
 17591                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 17592  005770  D005               	goto	i2l8653
 17593  005772                     i2l8645:
 17594                           
 17595                           ;usb_device.c: 282: {
 17596                           ;usb_device.c: 283: (UIR &= 0xF7);
 17597  005772  9665               	bcf	3941,3,c	;volatile
 17598                           
 17599                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 17600  005774  6A0C               	clrf	_inPipes+3,c	;volatile
 17601                           
 17602                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 17603  005776  6A04               	clrf	_outPipes+3,c	;volatile
 17604                           
 17605                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 17606  005778  6A05               	clrf	_outPipes+4,c	;volatile
 17607  00577A  6A06               	clrf	_outPipes+5,c	;volatile
 17608  00577C                     i2l8653:
 17609  00577C  B665               	btfsc	3941,3,c	;volatile
 17610  00577E  D7F9               	goto	i2l8645
 17611                           
 17612                           ;usb_device.c: 288: }
 17613                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 17614  005780  0E01               	movlw	1
 17615  005782  0101               	movlb	1	; () banked
 17616  005784  6F4A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17617                           
 17618                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 17619  005786  6F4B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17620                           
 17621                           ; BSR set to: 1
 17622                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 17623  005788  6B48               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17624                           
 17625                           ; BSR set to: 1
 17626                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 17627  00578A  6B49               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17628                           
 17629                           ; BSR set to: 1
 17630                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 17631  00578C  6B47               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 17632                           
 17633                           ; BSR set to: 1
 17634                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 17635  00578E  6A36               	clrf	i2USBDeviceInit@i,c
 17636  005790                     i2l8669:
 17637                           
 17638                           ;usb_device.c: 302: {
 17639                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 17640  005790  5036               	movf	i2USBDeviceInit@i,w,c
 17641  005792  0D02               	mullw	2
 17642  005794  50F3               	movf	prodl,w,c
 17643  005796  0F0F               	addlw	low _pBDTEntryIn
 17644  005798  6ED9               	movwf	fsr2l,c
 17645  00579A  6ADA               	clrf	fsr2h,c
 17646  00579C  6ADE               	clrf	postinc2,c
 17647  00579E  6ADD               	clrf	postdec2,c
 17648                           
 17649                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 17650  0057A0  5036               	movf	i2USBDeviceInit@i,w,c
 17651  0057A2  0D02               	mullw	2
 17652  0057A4  0E18               	movlw	low _pBDTEntryOut
 17653  0057A6  24F3               	addwf	prodl,w,c
 17654  0057A8  6ED9               	movwf	fsr2l,c
 17655  0057AA  0E01               	movlw	high _pBDTEntryOut
 17656  0057AC  20F4               	addwfc	prodh,w,c
 17657  0057AE  6EDA               	movwf	fsr2h,c
 17658  0057B0  6ADE               	clrf	postinc2,c
 17659  0057B2  6ADD               	clrf	postdec2,c
 17660                           
 17661                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 17662  0057B4  0E22               	movlw	low _ep_data_in
 17663  0057B6  2436               	addwf	i2USBDeviceInit@i,w,c
 17664  0057B8  6ED9               	movwf	fsr2l,c
 17665  0057BA  6ADA               	clrf	fsr2h,c
 17666  0057BC  0E01               	movlw	high _ep_data_in
 17667  0057BE  22DA               	addwfc	fsr2h,f,c
 17668  0057C0  6ADF               	clrf	indf2,c
 17669                           
 17670                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 17671  0057C2  0E25               	movlw	low _ep_data_out
 17672  0057C4  2436               	addwf	i2USBDeviceInit@i,w,c
 17673  0057C6  6ED9               	movwf	fsr2l,c
 17674  0057C8  6ADA               	clrf	fsr2h,c
 17675  0057CA  0E01               	movlw	high _ep_data_out
 17676  0057CC  22DA               	addwfc	fsr2h,f,c
 17677  0057CE  6ADF               	clrf	indf2,c
 17678  0057D0  2A36               	incf	i2USBDeviceInit@i,f,c
 17679  0057D2  0E02               	movlw	2
 17680  0057D4  6436               	cpfsgt	i2USBDeviceInit@i,c
 17681  0057D6  D7DC               	goto	i2l8669
 17682                           
 17683                           ;usb_device.c: 307: }
 17684                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17685  0057D8  0E08               	movlw	8
 17686  0057DA  6E0F               	movwf	_pBDTEntryIn,c
 17687  0057DC  0E04               	movlw	4
 17688  0057DE  6E10               	movwf	_pBDTEntryIn+1,c
 17689                           
 17690                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 17691  0057E0  0E16               	movlw	22
 17692  0057E2  6E6A               	movwf	3946,c	;volatile
 17693                           
 17694                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 17695  0057E4  0E04               	movlw	4
 17696  0057E6  0104               	movlb	4	; () banked
 17697  0057E8  6F03               	movwf	3,b	;volatile
 17698  0057EA  0E30               	movlw	48
 17699  0057EC  6F02               	movwf	2,b	;volatile
 17700                           
 17701                           ; BSR set to: 4
 17702                           ;usb_device.c: 315: BDT[0].CNT = 8;
 17703  0057EE  0E08               	movlw	8
 17704  0057F0  6F01               	movwf	1,b	;volatile
 17705                           
 17706                           ; BSR set to: 4
 17707                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 17708  0057F2  0E04               	movlw	4
 17709  0057F4  6F00               	movwf	0,b	;volatile
 17710                           
 17711                           ; BSR set to: 4
 17712                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 17713  0057F6  8F00               	bsf	0,7,b	;volatile
 17714                           
 17715                           ; BSR set to: 4
 17716                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 17717  0057F8  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 17718                           
 17719                           ; BSR set to: 4
 17720                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 17721  0057FA  0100               	movlb	0	; () banked
 17722  0057FC  6BF4               	clrf	_USBDeviceState& (0+255),b	;volatile
 17723                           
 17724                           ; BSR set to: 0
 17725  0057FE  0012               	return		;funcret
 17726  005800                     __end_ofi2_USBDeviceInit:
 17727                           	opt stack 0
 17728                           pclatu	equ	0xFFB
 17729                           pclath	equ	0xFFA
 17730                           tblptru	equ	0xFF8
 17731                           tblptrh	equ	0xFF7
 17732                           tblptrl	equ	0xFF6
 17733                           tablat	equ	0xFF5
 17734                           prodh	equ	0xFF4
 17735                           prodl	equ	0xFF3
 17736                           intcon	equ	0xFF2
 17737                           postinc0	equ	0xFEE
 17738                           wreg	equ	0xFE8
 17739                           indf1	equ	0xFE7
 17740                           fsr1h	equ	0xFE2
 17741                           fsr1l	equ	0xFE1
 17742                           indf2	equ	0xFDF
 17743                           postinc2	equ	0xFDE
 17744                           postdec2	equ	0xFDD
 17745                           plusw2	equ	0xFDB
 17746                           fsr2h	equ	0xFDA
 17747                           fsr2l	equ	0xFD9
 17748                           status	equ	0xFD8
 17749                           
 17750 ;; *************** function _USBWakeFromSuspend *****************
 17751 ;; Defined at:
 17752 ;;		line 1944 in file "../Includes/Usb/framework/usb_device.c"
 17753 ;; Parameters:    Size  Location     Type
 17754 ;;		None
 17755 ;; Auto vars:     Size  Location     Type
 17756 ;;		None
 17757 ;; Return value:  Size  Location     Type
 17758 ;;                  1    wreg      void 
 17759 ;; Registers used:
 17760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17761 ;; Tracked objects:
 17762 ;;		On entry : F/0
 17763 ;;		On exit  : 0/0
 17764 ;;		Unchanged: 0/0
 17765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17766 ;;      Params:         0       0       0       0       0       0       0       0       0
 17767 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17768 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17769 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17770 ;;Total ram usage:        0 bytes
 17771 ;; Hardware stack levels used:    1
 17772 ;; Hardware stack levels required when called:    5
 17773 ;; This function calls:
 17774 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17775 ;; This function is called by:
 17776 ;;		_USBDeviceTasks
 17777 ;; This function uses a non-reentrant model
 17778 ;;
 17779                           
 17780                           	psect	text86
 17781  003D74                     __ptext86:
 17782                           	opt stack 0
 17783  003D74                     _USBWakeFromSuspend:
 17784                           	opt stack 13
 17785                           
 17786                           ; BSR set to: 0
 17787                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 17788                           
 17789                           ; BSR set to: 0
 17790                           ;incstack = 0
 17791  003D74  0101               	movlb	1	; () banked
 17792  003D76  6B47               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 17793                           
 17794                           ; BSR set to: 1
 17795                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 17796  003D78  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17797  003D7A  0E74               	movlw	116
 17798  003D7C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17799  003D7E  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17800  003D80  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17801  003D82  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17802  003D84  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17803  003D86  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17804                           
 17805                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 17806  003D8A  9260               	bcf	3936,1,c	;volatile
 17807                           
 17808                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 17809  003D8C  9464               	bcf	3940,2,c	;volatile
 17810                           
 17811                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 17812  003D8E  D001               	goto	i2l8563
 17813  003D90                     i2l8561:
 17814                           
 17815                           ;usb_device.c: 1977: {
 17816                           ;usb_device.c: 1978: (UIR &= 0xFB);
 17817  003D90  9465               	bcf	3941,2,c	;volatile
 17818  003D92                     i2l8563:
 17819  003D92  A465               	btfss	3941,2,c	;volatile
 17820  003D94  0012               	return		;funcret
 17821  003D96  D7FC               	goto	i2l8561
 17822  003D98                     __end_of_USBWakeFromSuspend:
 17823                           	opt stack 0
 17824                           pclatu	equ	0xFFB
 17825                           pclath	equ	0xFFA
 17826                           tblptru	equ	0xFF8
 17827                           tblptrh	equ	0xFF7
 17828                           tblptrl	equ	0xFF6
 17829                           tablat	equ	0xFF5
 17830                           prodh	equ	0xFF4
 17831                           prodl	equ	0xFF3
 17832                           intcon	equ	0xFF2
 17833                           postinc0	equ	0xFEE
 17834                           wreg	equ	0xFE8
 17835                           indf1	equ	0xFE7
 17836                           fsr1h	equ	0xFE2
 17837                           fsr1l	equ	0xFE1
 17838                           indf2	equ	0xFDF
 17839                           postinc2	equ	0xFDE
 17840                           postdec2	equ	0xFDD
 17841                           plusw2	equ	0xFDB
 17842                           fsr2h	equ	0xFDA
 17843                           fsr2l	equ	0xFD9
 17844                           status	equ	0xFD8
 17845                           
 17846 ;; *************** function _USBSuspend *****************
 17847 ;; Defined at:
 17848 ;;		line 1889 in file "../Includes/Usb/framework/usb_device.c"
 17849 ;; Parameters:    Size  Location     Type
 17850 ;;		None
 17851 ;; Auto vars:     Size  Location     Type
 17852 ;;		None
 17853 ;; Return value:  Size  Location     Type
 17854 ;;                  1    wreg      void 
 17855 ;; Registers used:
 17856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17857 ;; Tracked objects:
 17858 ;;		On entry : 0/0
 17859 ;;		On exit  : 0/0
 17860 ;;		Unchanged: 0/0
 17861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17862 ;;      Params:         0       0       0       0       0       0       0       0       0
 17863 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17864 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17865 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17866 ;;Total ram usage:        0 bytes
 17867 ;; Hardware stack levels used:    1
 17868 ;; Hardware stack levels required when called:    5
 17869 ;; This function calls:
 17870 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17871 ;; This function is called by:
 17872 ;;		_USBDeviceTasks
 17873 ;; This function uses a non-reentrant model
 17874 ;;
 17875                           
 17876                           	psect	text87
 17877  003C5C                     __ptext87:
 17878                           	opt stack 0
 17879  003C5C                     _USBSuspend:
 17880                           	opt stack 13
 17881                           
 17882                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 17883                           
 17884                           ;incstack = 0
 17885  003C5C  8464               	bsf	3940,2,c	;volatile
 17886                           
 17887                           ;usb_device.c: 1915: (UIR &= 0xEF);
 17888  003C5E  9865               	bcf	3941,4,c	;volatile
 17889                           
 17890                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 17891  003C60  8260               	bsf	3936,1,c	;volatile
 17892                           
 17893                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 17894  003C62  0E01               	movlw	1
 17895  003C64  0101               	movlb	1	; () banked
 17896  003C66  6F47               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 17897                           
 17898                           ; BSR set to: 1
 17899                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 17900  003C68  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17901  003C6A  0E75               	movlw	117
 17902  003C6C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17903  003C6E  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17904  003C70  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17905  003C72  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17906  003C74  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17907  003C76  EFFC  F020         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17908  003C7A                     __end_of_USBSuspend:
 17909                           	opt stack 0
 17910                           pclatu	equ	0xFFB
 17911                           pclath	equ	0xFFA
 17912                           tblptru	equ	0xFF8
 17913                           tblptrh	equ	0xFF7
 17914                           tblptrl	equ	0xFF6
 17915                           tablat	equ	0xFF5
 17916                           prodh	equ	0xFF4
 17917                           prodl	equ	0xFF3
 17918                           intcon	equ	0xFF2
 17919                           postinc0	equ	0xFEE
 17920                           wreg	equ	0xFE8
 17921                           indf1	equ	0xFE7
 17922                           fsr1h	equ	0xFE2
 17923                           fsr1l	equ	0xFE1
 17924                           indf2	equ	0xFDF
 17925                           postinc2	equ	0xFDE
 17926                           postdec2	equ	0xFDD
 17927                           plusw2	equ	0xFDB
 17928                           fsr2h	equ	0xFDA
 17929                           fsr2l	equ	0xFD9
 17930                           status	equ	0xFD8
 17931                           
 17932 ;; *************** function _USBStallHandler *****************
 17933 ;; Defined at:
 17934 ;;		line 1846 in file "../Includes/Usb/framework/usb_device.c"
 17935 ;; Parameters:    Size  Location     Type
 17936 ;;		None
 17937 ;; Auto vars:     Size  Location     Type
 17938 ;;		None
 17939 ;; Return value:  Size  Location     Type
 17940 ;;                  1    wreg      void 
 17941 ;; Registers used:
 17942 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17943 ;; Tracked objects:
 17944 ;;		On entry : 0/0
 17945 ;;		On exit  : 0/0
 17946 ;;		Unchanged: 0/0
 17947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17948 ;;      Params:         0       0       0       0       0       0       0       0       0
 17949 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17950 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17951 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17952 ;;Total ram usage:        1 bytes
 17953 ;; Hardware stack levels used:    1
 17954 ;; This function calls:
 17955 ;;		Nothing
 17956 ;; This function is called by:
 17957 ;;		_USBDeviceTasks
 17958 ;; This function uses a non-reentrant model
 17959 ;;
 17960                           
 17961                           	psect	text88
 17962  00417C                     __ptext88:
 17963                           	opt stack 0
 17964  00417C                     _USBStallHandler:
 17965                           	opt stack 18
 17966                           
 17967                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 17968                           
 17969                           ;incstack = 0
 17970  00417C  A06A               	btfss	3946,0,c	;volatile
 17971  00417E  D01B               	goto	i2l1604
 17972                           
 17973                           ;usb_device.c: 1859: {
 17974                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 17975  004180  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17976  004184  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17977  004188  0E80               	movlw	128
 17978  00418A  18DE               	xorwf	postinc2,w,c
 17979  00418C  E113               	bnz	i2l8585
 17980  00418E  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 17981  004192  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17982  004196  0E84               	movlw	132
 17983  004198  18DE               	xorwf	postinc2,w,c
 17984  00419A  E10C               	bnz	i2l8585
 17985                           
 17986                           ;usb_device.c: 1862: {
 17987                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17988  00419C  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17989  0041A0  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17990  0041A4  0E0C               	movlw	12
 17991  0041A6  6EDF               	movwf	indf2,c
 17992                           
 17993                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 17994  0041A8  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17995  0041AC  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17996  0041B0  0E00               	movlw	0
 17997  0041B2  8EDB               	bsf	plusw2,7,c
 17998  0041B4                     i2l8585:
 17999                           
 18000                           ;usb_device.c: 1866: }
 18001                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 18002  0041B4  906A               	bcf	3946,0,c	;volatile
 18003  0041B6                     i2l1604:
 18004                           
 18005                           ;usb_device.c: 1868: }
 18006                           ;usb_device.c: 1870: (UIR &= 0xDF);
 18007  0041B6  9A65               	bcf	3941,5,c	;volatile
 18008  0041B8  0012               	return		;funcret
 18009  0041BA                     __end_of_USBStallHandler:
 18010                           	opt stack 0
 18011                           pclatu	equ	0xFFB
 18012                           pclath	equ	0xFFA
 18013                           tblptru	equ	0xFF8
 18014                           tblptrh	equ	0xFF7
 18015                           tblptrl	equ	0xFF6
 18016                           tablat	equ	0xFF5
 18017                           prodh	equ	0xFF4
 18018                           prodl	equ	0xFF3
 18019                           intcon	equ	0xFF2
 18020                           postinc0	equ	0xFEE
 18021                           wreg	equ	0xFE8
 18022                           indf1	equ	0xFE7
 18023                           fsr1h	equ	0xFE2
 18024                           fsr1l	equ	0xFE1
 18025                           indf2	equ	0xFDF
 18026                           postinc2	equ	0xFDE
 18027                           postdec2	equ	0xFDD
 18028                           plusw2	equ	0xFDB
 18029                           fsr2h	equ	0xFDA
 18030                           fsr2l	equ	0xFD9
 18031                           status	equ	0xFD8
 18032                           
 18033 ;; *************** function _USBCtrlEPService *****************
 18034 ;; Defined at:
 18035 ;;		line 2004 in file "../Includes/Usb/framework/usb_device.c"
 18036 ;; Parameters:    Size  Location     Type
 18037 ;;		None
 18038 ;; Auto vars:     Size  Location     Type
 18039 ;;  setup_cnt       1   30[COMRAM] unsigned char 
 18040 ;; Return value:  Size  Location     Type
 18041 ;;                  1    wreg      void 
 18042 ;; Registers used:
 18043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18044 ;; Tracked objects:
 18045 ;;		On entry : F/1
 18046 ;;		On exit  : 0/0
 18047 ;;		Unchanged: 0/0
 18048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18049 ;;      Params:         0       0       0       0       0       0       0       0       0
 18050 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18051 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18052 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18053 ;;Total ram usage:        3 bytes
 18054 ;; Hardware stack levels used:    1
 18055 ;; Hardware stack levels required when called:    8
 18056 ;; This function calls:
 18057 ;;		_USBCtrlTrfInHandler
 18058 ;;		_USBCtrlTrfOutHandler
 18059 ;;		_USBCtrlTrfSetupHandler
 18060 ;; This function is called by:
 18061 ;;		_USBDeviceTasks
 18062 ;; This function uses a non-reentrant model
 18063 ;;
 18064                           
 18065                           	psect	text89
 18066  0050EC                     __ptext89:
 18067                           	opt stack 0
 18068  0050EC                     _USBCtrlEPService:
 18069                           	opt stack 10
 18070                           
 18071                           ; BSR set to: 1
 18072                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 18073                           
 18074                           ;incstack = 0
 18075  0050EC  0E2D               	movlw	45
 18076  0050EE  6E1E               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 18077                           
 18078                           ; BSR set to: 1
 18079                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 18080  0050F0  C02D  F04A         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 18081  0050F4  0EFD               	movlw	253
 18082  0050F6  164A               	andwf	??_USBCtrlEPService,f,c
 18083  0050F8  E14B               	bnz	i2l8619
 18084                           
 18085                           ; BSR set to: 1
 18086                           ;usb_device.c: 2013: {
 18087                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 18088  0050FA  90D8               	bcf	status,0,c
 18089  0050FC  302D               	rrcf	_USTATcopy,w,c	;volatile
 18090  0050FE  0B3F               	andlw	63
 18091  005100  0D04               	mullw	4
 18092  005102  0E00               	movlw	0
 18093  005104  24F3               	addwf	prodl,w,c
 18094  005106  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 18095  005108  0E04               	movlw	4
 18096  00510A  20F4               	addwfc	prodh,w,c
 18097  00510C  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 18098                           
 18099                           ; BSR set to: 1
 18100                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 18101  00510E  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 18102  005112  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 18103                           
 18104                           ; BSR set to: 1
 18105                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 18106  005116  0E04               	movlw	4
 18107  005118  1A17               	xorwf	_pBDTEntryEP0OutNext,f,c
 18108                           
 18109                           ; BSR set to: 1
 18110                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 18111  00511A  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18112  00511E  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18113  005122  30DF               	rrcf	indf2,w,c
 18114  005124  32E8               	rrcf	wreg,f,c
 18115  005126  0B0F               	andlw	15
 18116  005128  0A0D               	xorlw	13
 18117  00512A  E002 EFB8  F021    	bnz	_USBCtrlTrfOutHandler
 18118                           
 18119                           ; BSR set to: 1
 18120                           ;usb_device.c: 2025: {
 18121                           ;usb_device.c: 2026: unsigned char setup_cnt;
 18122                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 18123  005130  6A4C               	clrf	USBCtrlEPService@setup_cnt,c
 18124  005132                     i2l8605:
 18125                           
 18126                           ; BSR set to: 1
 18127                           ;usb_device.c: 2033: {
 18128                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 18129  005132  EE20 F002          	lfsr	2,2
 18130  005136  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 18131  005138  26D9               	addwf	fsr2l,f,c
 18132  00513A  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18133  00513C  22DA               	addwfc	fsr2h,f,c
 18134  00513E  CFDE F04A          	movff	postinc2,??_USBCtrlEPService
 18135  005142  CFDD F04B          	movff	postdec2,??_USBCtrlEPService+1
 18136  005146  C04A  FFD9         	movff	??_USBCtrlEPService,fsr2l
 18137  00514A  C04B  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 18138  00514E  0E30               	movlw	48
 18139  005150  244C               	addwf	USBCtrlEPService@setup_cnt,w,c
 18140  005152  6EE1               	movwf	fsr1l,c
 18141  005154  6AE2               	clrf	fsr1h,c
 18142  005156  0E04               	movlw	4
 18143  005158  22E2               	addwfc	fsr1h,f,c
 18144  00515A  CFDF FFE7          	movff	indf2,indf1
 18145                           
 18146                           ; BSR set to: 1
 18147                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 18148  00515E  EE20 F002          	lfsr	2,2
 18149  005162  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 18150  005164  26D9               	addwf	fsr2l,f,c
 18151  005166  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18152  005168  22DA               	addwfc	fsr2h,f,c
 18153  00516A  2ADE               	incf	postinc2,f,c
 18154  00516C  0E00               	movlw	0
 18155  00516E  22DD               	addwfc	postdec2,f,c
 18156                           
 18157                           ; BSR set to: 1
 18158  005170  2A4C               	incf	USBCtrlEPService@setup_cnt,f,c
 18159                           
 18160                           ; BSR set to: 1
 18161  005172  0E07               	movlw	7
 18162  005174  644C               	cpfsgt	USBCtrlEPService@setup_cnt,c
 18163  005176  D7DD               	goto	i2l8605
 18164                           
 18165                           ; BSR set to: 1
 18166                           ;usb_device.c: 2036: }
 18167                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 18168  005178  EE20 F002          	lfsr	2,2
 18169  00517C  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 18170  00517E  26D9               	addwf	fsr2l,f,c
 18171  005180  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18172  005182  22DA               	addwfc	fsr2h,f,c
 18173  005184  0E30               	movlw	48
 18174  005186  6EDE               	movwf	postinc2,c
 18175  005188  0E04               	movlw	4
 18176  00518A  6EDD               	movwf	postdec2,c
 18177                           
 18178                           ; BSR set to: 1
 18179                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 18180  00518C  EFB6  F022         	goto	_USBCtrlTrfSetupHandler	;wreg free
 18181  005190                     i2l8619:
 18182                           
 18183                           ; BSR set to: 1
 18184                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 18185  005190  502D               	movf	_USTATcopy,w,c	;volatile
 18186  005192  0BFD               	andlw	253
 18187  005194  0A04               	xorlw	4
 18188  005196  B4D8               	btfsc	status,2,c
 18189                           
 18190                           ; BSR set to: 1
 18191                           ;usb_device.c: 2049: {
 18192                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 18193  005198  EC48  F02A         	call	_USBCtrlTrfInHandler	;wreg free
 18194  00519C  0012               	return		;funcret
 18195  00519E                     __end_of_USBCtrlEPService:
 18196                           	opt stack 0
 18197                           pclatu	equ	0xFFB
 18198                           pclath	equ	0xFFA
 18199                           tblptru	equ	0xFF8
 18200                           tblptrh	equ	0xFF7
 18201                           tblptrl	equ	0xFF6
 18202                           tablat	equ	0xFF5
 18203                           prodh	equ	0xFF4
 18204                           prodl	equ	0xFF3
 18205                           intcon	equ	0xFF2
 18206                           postinc0	equ	0xFEE
 18207                           wreg	equ	0xFE8
 18208                           indf1	equ	0xFE7
 18209                           fsr1h	equ	0xFE2
 18210                           fsr1l	equ	0xFE1
 18211                           indf2	equ	0xFDF
 18212                           postinc2	equ	0xFDE
 18213                           postdec2	equ	0xFDD
 18214                           plusw2	equ	0xFDB
 18215                           fsr2h	equ	0xFDA
 18216                           fsr2l	equ	0xFD9
 18217                           status	equ	0xFD8
 18218                           
 18219 ;; *************** function _USBCtrlTrfSetupHandler *****************
 18220 ;; Defined at:
 18221 ;;		line 2097 in file "../Includes/Usb/framework/usb_device.c"
 18222 ;; Parameters:    Size  Location     Type
 18223 ;;		None
 18224 ;; Auto vars:     Size  Location     Type
 18225 ;;		None
 18226 ;; Return value:  Size  Location     Type
 18227 ;;                  1    wreg      void 
 18228 ;; Registers used:
 18229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18230 ;; Tracked objects:
 18231 ;;		On entry : F/1
 18232 ;;		On exit  : 0/0
 18233 ;;		Unchanged: 0/0
 18234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18235 ;;      Params:         0       0       0       0       0       0       0       0       0
 18236 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18237 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18238 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18239 ;;Total ram usage:        0 bytes
 18240 ;; Hardware stack levels used:    1
 18241 ;; Hardware stack levels required when called:    7
 18242 ;; This function calls:
 18243 ;;		_USBCheckStdRequest
 18244 ;;		_USBCtrlEPServiceComplete
 18245 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18246 ;; This function is called by:
 18247 ;;		_USBCtrlEPService
 18248 ;; This function uses a non-reentrant model
 18249 ;;
 18250                           
 18251                           	psect	text90
 18252  00456C                     __ptext90:
 18253                           	opt stack 0
 18254  00456C                     _USBCtrlTrfSetupHandler:
 18255                           	opt stack 10
 18256                           
 18257                           ; BSR set to: 1
 18258                           ;usb_device.c: 2102: shortPacketStatus = 0;
 18259                           
 18260                           ;incstack = 0
 18261  00456C  6A2A               	clrf	_shortPacketStatus,c	;volatile
 18262                           
 18263                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 18264  00456E  6A1D               	clrf	_USBDeferStatusStagePacket,c	;volatile
 18265                           
 18266                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 18267  004570  6B48               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 18268                           
 18269                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 18270  004572  6B49               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 18271                           
 18272                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 18273  004574  6B45               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 18274                           
 18275                           ;usb_device.c: 2107: controlTransferState = 0;
 18276  004576  6A20               	clrf	_controlTransferState,c	;volatile
 18277                           
 18278                           ; BSR set to: 1
 18279                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 18280  004578  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18281  00457C  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18282  004580  0E7F               	movlw	127
 18283  004582  16DF               	andwf	indf2,f,c
 18284                           
 18285                           ; BSR set to: 1
 18286                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 18287  004584  0E04               	movlw	4
 18288  004586  1A0F               	xorwf	_pBDTEntryIn,f,c
 18289                           
 18290                           ; BSR set to: 1
 18291                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 18292  004588  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18293  00458C  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18294  004590  0E7F               	movlw	127
 18295  004592  16DF               	andwf	indf2,f,c
 18296                           
 18297                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 18298  004594  0E04               	movlw	4
 18299  004596  1A0F               	xorwf	_pBDTEntryIn,f,c
 18300                           
 18301                           ; BSR set to: 1
 18302                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 18303  004598  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18304  00459C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18305  0045A0  0E7F               	movlw	127
 18306  0045A2  16DF               	andwf	indf2,f,c
 18307                           
 18308                           ; BSR set to: 1
 18309                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 18310  0045A4  6A0C               	clrf	_inPipes+3,c	;volatile
 18311                           
 18312                           ; BSR set to: 1
 18313                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 18314  0045A6  6A0D               	clrf	_inPipes+4,c	;volatile
 18315  0045A8  6A0E               	clrf	_inPipes+5,c	;volatile
 18316                           
 18317                           ; BSR set to: 1
 18318                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 18319  0045AA  6A04               	clrf	_outPipes+3,c	;volatile
 18320                           
 18321                           ; BSR set to: 1
 18322                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 18323  0045AC  6A05               	clrf	_outPipes+4,c	;volatile
 18324  0045AE  6A06               	clrf	_outPipes+5,c	;volatile
 18325                           
 18326                           ; BSR set to: 1
 18327                           ;usb_device.c: 2131: USBCheckStdRequest();
 18328  0045B0  ECCC  F026         	call	_USBCheckStdRequest	;wreg free
 18329                           
 18330                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 18331  0045B4  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18332  0045B6  0E03               	movlw	3
 18333  0045B8  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18334  0045BA  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18335  0045BC  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18336  0045BE  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18337  0045C0  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18338  0045C2  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18339                           
 18340                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 18341  0045C6  EF1C  F02B         	goto	_USBCtrlEPServiceComplete	;wreg free
 18342  0045CA                     __end_of_USBCtrlTrfSetupHandler:
 18343                           	opt stack 0
 18344                           pclatu	equ	0xFFB
 18345                           pclath	equ	0xFFA
 18346                           tblptru	equ	0xFF8
 18347                           tblptrh	equ	0xFF7
 18348                           tblptrl	equ	0xFF6
 18349                           tablat	equ	0xFF5
 18350                           prodh	equ	0xFF4
 18351                           prodl	equ	0xFF3
 18352                           intcon	equ	0xFF2
 18353                           postinc0	equ	0xFEE
 18354                           wreg	equ	0xFE8
 18355                           indf1	equ	0xFE7
 18356                           fsr1h	equ	0xFE2
 18357                           fsr1l	equ	0xFE1
 18358                           indf2	equ	0xFDF
 18359                           postinc2	equ	0xFDE
 18360                           postdec2	equ	0xFDD
 18361                           plusw2	equ	0xFDB
 18362                           fsr2h	equ	0xFDA
 18363                           fsr2l	equ	0xFD9
 18364                           status	equ	0xFD8
 18365                           
 18366 ;; *************** function _USBCtrlEPServiceComplete *****************
 18367 ;; Defined at:
 18368 ;;		line 1282 in file "../Includes/Usb/framework/usb_device.c"
 18369 ;; Parameters:    Size  Location     Type
 18370 ;;		None
 18371 ;; Auto vars:     Size  Location     Type
 18372 ;;		None
 18373 ;; Return value:  Size  Location     Type
 18374 ;;                  1    wreg      void 
 18375 ;; Registers used:
 18376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18377 ;; Tracked objects:
 18378 ;;		On entry : 0/1
 18379 ;;		On exit  : 0/0
 18380 ;;		Unchanged: 0/0
 18381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18382 ;;      Params:         0       0       0       0       0       0       0       0       0
 18383 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18384 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18385 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18386 ;;Total ram usage:        0 bytes
 18387 ;; Hardware stack levels used:    1
 18388 ;; Hardware stack levels required when called:    2
 18389 ;; This function calls:
 18390 ;;		_USBCtrlEPAllowDataStage
 18391 ;;		_USBCtrlEPAllowStatusStage
 18392 ;; This function is called by:
 18393 ;;		_USBCtrlTrfSetupHandler
 18394 ;; This function uses a non-reentrant model
 18395 ;;
 18396                           
 18397                           	psect	text91
 18398  005638                     __ptext91:
 18399                           	opt stack 0
 18400  005638                     _USBCtrlEPServiceComplete:
 18401                           	opt stack 14
 18402                           
 18403                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 18404                           
 18405                           ;incstack = 0
 18406  005638  9860               	bcf	3936,4,c	;volatile
 18407                           
 18408                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 18409  00563A  BE0C               	btfsc	_inPipes+3,7,c	;volatile
 18410  00563C  D037               	goto	i2l1528
 18411                           
 18412                           ;usb_device.c: 1295: {
 18413                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 18414  00563E  AE04               	btfss	_outPipes+3,7,c	;volatile
 18415  005640  D00A               	goto	i2l6737
 18416                           
 18417                           ;usb_device.c: 1297: {
 18418                           ;usb_device.c: 1298: controlTransferState = 2;
 18419  005642  0E02               	movlw	2
 18420  005644  6E20               	movwf	_controlTransferState,c	;volatile
 18421                           
 18422                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 18423  005646  0101               	movlb	1	; () banked
 18424  005648  5149               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 18425  00564A  E102               	bnz	i2l6733
 18426                           
 18427                           ; BSR set to: 1
 18428                           ;usb_device.c: 1310: {
 18429                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 18430  00564C  ECA0  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
 18431  005650                     i2l6733:
 18432                           
 18433                           ; BSR set to: 1
 18434                           ;usb_device.c: 1312: }
 18435                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 18436  005650  6B4B               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18437                           
 18438                           ; BSR set to: 1
 18439                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 18440  005652  6B4A               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18441                           
 18442                           ;usb_device.c: 1318: }
 18443  005654  0012               	return	
 18444  005656                     i2l6737:
 18445                           
 18446                           ;usb_device.c: 1319: else
 18447                           ;usb_device.c: 1320: {
 18448                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 18449  005656  EE20 F001          	lfsr	2,1
 18450  00565A  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18451  00565C  26D9               	addwf	fsr2l,f,c
 18452  00565E  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18453  005660  22DA               	addwfc	fsr2h,f,c
 18454  005662  0E08               	movlw	8
 18455  005664  6EDF               	movwf	indf2,c
 18456                           
 18457                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18458  005666  EE20 F002          	lfsr	2,2
 18459  00566A  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18460  00566C  26D9               	addwf	fsr2l,f,c
 18461  00566E  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18462  005670  22DA               	addwfc	fsr2h,f,c
 18463  005672  0E30               	movlw	48
 18464  005674  6EDE               	movwf	postinc2,c
 18465  005676  0E04               	movlw	4
 18466  005678  6EDD               	movwf	postdec2,c
 18467                           
 18468                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 18469  00567A  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18470  00567E  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18471  005682  0E0C               	movlw	12
 18472  005684  6EDF               	movwf	indf2,c
 18473                           
 18474                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18475  005686  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18476  00568A  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18477  00568E  0E00               	movlw	0
 18478  005690  8EDB               	bsf	plusw2,7,c
 18479                           
 18480                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 18481  005692  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18482  005696  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18483  00569A  0E04               	movlw	4
 18484  00569C  6EDF               	movwf	indf2,c
 18485                           
 18486                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18487  00569E  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18488  0056A2  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18489  0056A6  0E00               	movlw	0
 18490  0056A8  8EDB               	bsf	plusw2,7,c
 18491  0056AA  0C00               	retlw	0
 18492  0056AC                     i2l1528:
 18493                           
 18494                           ;usb_device.c: 1333: else
 18495                           ;usb_device.c: 1334: {
 18496                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 18497  0056AC  0104               	movlb	4	; () banked
 18498  0056AE  AF30               	btfss	48,7,b	;volatile
 18499  0056B0  D00E               	goto	i2l6757
 18500                           
 18501                           ; BSR set to: 4
 18502                           ;usb_device.c: 1336: {
 18503                           ;usb_device.c: 1337: controlTransferState = 1;
 18504  0056B2  0E01               	movlw	1
 18505  0056B4  6E20               	movwf	_controlTransferState,c	;volatile
 18506                           
 18507                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 18508  0056B6  0101               	movlb	1	; () banked
 18509  0056B8  5148               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 18510  0056BA  E102               	bnz	i2l6749
 18511                           
 18512                           ; BSR set to: 1
 18513                           ;usb_device.c: 1352: {
 18514                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 18515  0056BC  ECA0  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
 18516  0056C0                     i2l6749:
 18517                           
 18518                           ; BSR set to: 1
 18519                           ;usb_device.c: 1354: }
 18520                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 18521  0056C0  6B4B               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18522                           
 18523                           ; BSR set to: 1
 18524                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 18525  0056C2  6B4A               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18526                           
 18527                           ; BSR set to: 1
 18528                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 18529  0056C4  501D               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 18530  0056C6  A4D8               	btfss	status,2,c
 18531  0056C8  0012               	return	
 18532                           
 18533                           ; BSR set to: 1
 18534                           ;usb_device.c: 1379: {
 18535                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 18536  0056CA  EF2B  F029         	goto	_USBCtrlEPAllowStatusStage	;wreg free
 18537  0056CE                     i2l6757:
 18538                           
 18539                           ; BSR set to: 4
 18540                           ;usb_device.c: 1383: else
 18541                           ;usb_device.c: 1384: {
 18542                           ;usb_device.c: 1395: controlTransferState = 2;
 18543  0056CE  0E02               	movlw	2
 18544  0056D0  6E20               	movwf	_controlTransferState,c	;volatile
 18545                           
 18546                           ; BSR set to: 4
 18547                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 18548  0056D2  EE20 F001          	lfsr	2,1
 18549  0056D6  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18550  0056D8  26D9               	addwf	fsr2l,f,c
 18551  0056DA  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18552  0056DC  22DA               	addwfc	fsr2h,f,c
 18553  0056DE  0E08               	movlw	8
 18554  0056E0  6EDF               	movwf	indf2,c
 18555                           
 18556                           ; BSR set to: 4
 18557                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18558  0056E2  EE20 F002          	lfsr	2,2
 18559  0056E6  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18560  0056E8  26D9               	addwf	fsr2l,f,c
 18561  0056EA  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18562  0056EC  22DA               	addwfc	fsr2h,f,c
 18563  0056EE  0E30               	movlw	48
 18564  0056F0  6EDE               	movwf	postinc2,c
 18565  0056F2  0E04               	movlw	4
 18566  0056F4  6EDD               	movwf	postdec2,c
 18567                           
 18568                           ; BSR set to: 4
 18569                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 18570  0056F6  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18571  0056FA  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18572  0056FE  6EDF               	movwf	indf2,c
 18573                           
 18574                           ; BSR set to: 4
 18575                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18576  005700  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18577  005704  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18578  005708  0E00               	movlw	0
 18579  00570A  8EDB               	bsf	plusw2,7,c
 18580                           
 18581                           ; BSR set to: 4
 18582                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 18583  00570C  0101               	movlb	1	; () banked
 18584  00570E  6B4B               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18585                           
 18586                           ; BSR set to: 1
 18587                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 18588  005710  6B4A               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18589                           
 18590                           ; BSR set to: 1
 18591                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 18592  005712  501D               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 18593  005714  E102 EF2B  F029    	bz	_USBCtrlEPAllowStatusStage
 18594  00571A  0012               	return	
 18595  00571C                     __end_of_USBCtrlEPServiceComplete:
 18596                           	opt stack 0
 18597                           pclatu	equ	0xFFB
 18598                           pclath	equ	0xFFA
 18599                           tblptru	equ	0xFF8
 18600                           tblptrh	equ	0xFF7
 18601                           tblptrl	equ	0xFF6
 18602                           tablat	equ	0xFF5
 18603                           prodh	equ	0xFF4
 18604                           prodl	equ	0xFF3
 18605                           intcon	equ	0xFF2
 18606                           postinc0	equ	0xFEE
 18607                           wreg	equ	0xFE8
 18608                           indf1	equ	0xFE7
 18609                           fsr1h	equ	0xFE2
 18610                           fsr1l	equ	0xFE1
 18611                           indf2	equ	0xFDF
 18612                           postinc2	equ	0xFDE
 18613                           postdec2	equ	0xFDD
 18614                           plusw2	equ	0xFDB
 18615                           fsr2h	equ	0xFDA
 18616                           fsr2l	equ	0xFD9
 18617                           status	equ	0xFD8
 18618                           
 18619 ;; *************** function _USBCtrlEPAllowDataStage *****************
 18620 ;; Defined at:
 18621 ;;		line 1173 in file "../Includes/Usb/framework/usb_device.c"
 18622 ;; Parameters:    Size  Location     Type
 18623 ;;		None
 18624 ;; Auto vars:     Size  Location     Type
 18625 ;;		None
 18626 ;; Return value:  Size  Location     Type
 18627 ;;                  1    wreg      void 
 18628 ;; Registers used:
 18629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18630 ;; Tracked objects:
 18631 ;;		On entry : F/1
 18632 ;;		On exit  : F/1
 18633 ;;		Unchanged: 0/0
 18634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18635 ;;      Params:         0       0       0       0       0       0       0       0       0
 18636 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18637 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18638 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18639 ;;Total ram usage:        0 bytes
 18640 ;; Hardware stack levels used:    1
 18641 ;; Hardware stack levels required when called:    1
 18642 ;; This function calls:
 18643 ;;		_USBCtrlTrfTxService
 18644 ;; This function is called by:
 18645 ;;		_USBCtrlEPServiceComplete
 18646 ;; This function uses a non-reentrant model
 18647 ;;
 18648                           
 18649                           	psect	text92
 18650  004B40                     __ptext92:
 18651                           	opt stack 0
 18652  004B40                     _USBCtrlEPAllowDataStage:
 18653                           	opt stack 14
 18654                           
 18655                           ; BSR set to: 1
 18656                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 18657                           
 18658                           ;incstack = 0
 18659  004B40  6B48               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 18660                           
 18661                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 18662  004B42  6B49               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 18663                           
 18664                           ; BSR set to: 1
 18665                           ;usb_device.c: 1178: if(controlTransferState == 2)
 18666  004B44  0E02               	movlw	2
 18667  004B46  1820               	xorwf	_controlTransferState,w,c	;volatile
 18668  004B48  E11F               	bnz	i2l6397
 18669                           
 18670                           ; BSR set to: 1
 18671                           ;usb_device.c: 1179: {
 18672                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 18673  004B4A  EE20 F001          	lfsr	2,1
 18674  004B4E  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18675  004B50  26D9               	addwf	fsr2l,f,c
 18676  004B52  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18677  004B54  22DA               	addwfc	fsr2h,f,c
 18678  004B56  0E08               	movlw	8
 18679  004B58  6EDF               	movwf	indf2,c
 18680                           
 18681                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18682  004B5A  EE20 F002          	lfsr	2,2
 18683  004B5E  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18684  004B60  26D9               	addwf	fsr2l,f,c
 18685  004B62  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18686  004B64  22DA               	addwfc	fsr2h,f,c
 18687  004B66  0E38               	movlw	56
 18688  004B68  6EDE               	movwf	postinc2,c
 18689  004B6A  0E04               	movlw	4
 18690  004B6C  6EDD               	movwf	postdec2,c
 18691                           
 18692                           ; BSR set to: 1
 18693                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 18694  004B6E  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18695  004B72  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18696  004B76  0E48               	movlw	72
 18697  004B78  6EDF               	movwf	indf2,c
 18698                           
 18699                           ; BSR set to: 1
 18700                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18701  004B7A  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18702  004B7E  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18703  004B82  0E00               	movlw	0
 18704  004B84  8EDB               	bsf	plusw2,7,c
 18705                           
 18706                           ;usb_device.c: 1185: }
 18707  004B86  0C00               	retlw	0
 18708  004B88                     i2l6397:
 18709                           
 18710                           ; BSR set to: 1
 18711                           ;usb_device.c: 1186: else
 18712                           ;usb_device.c: 1187: {
 18713                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 18714  004B88  500D               	movf	_inPipes+4,w,c	;volatile
 18715  004B8A  0104               	movlb	4	; () banked
 18716  004B8C  5D36               	subwf	54,w,b	;volatile
 18717  004B8E  500E               	movf	_inPipes+5,w,c	;volatile
 18718  004B90  5937               	subwfb	55,w,b	;volatile
 18719  004B92  E204               	bc	i2l6401
 18720                           
 18721                           ; BSR set to: 4
 18722                           ;usb_device.c: 1191: {
 18723                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 18724  004B94  C436 F00D          	movff	1078,_inPipes+4	;volatile
 18725  004B98  C437 F00E          	movff	1079,_inPipes+5	;volatile
 18726  004B9C                     i2l6401:
 18727                           
 18728                           ; BSR set to: 4
 18729                           ;usb_device.c: 1193: }
 18730                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 18731  004B9C  ECE7  F029         	call	_USBCtrlTrfTxService	;wreg free
 18732                           
 18733                           ; BSR set to: 1
 18734                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 18735  004BA0  EE20 F002          	lfsr	2,2
 18736  004BA4  500F               	movf	_pBDTEntryIn,w,c
 18737  004BA6  26D9               	addwf	fsr2l,f,c
 18738  004BA8  5010               	movf	_pBDTEntryIn+1,w,c
 18739  004BAA  22DA               	addwfc	fsr2h,f,c
 18740  004BAC  0E38               	movlw	56
 18741  004BAE  6EDE               	movwf	postinc2,c
 18742  004BB0  0E04               	movlw	4
 18743  004BB2  6EDD               	movwf	postdec2,c
 18744                           
 18745                           ; BSR set to: 1
 18746                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18747  004BB4  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18748  004BB8  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18749  004BBC  0E48               	movlw	72
 18750  004BBE  6EDF               	movwf	indf2,c
 18751                           
 18752                           ; BSR set to: 1
 18753                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18754  004BC0  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18755  004BC4  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18756  004BC8  0E00               	movlw	0
 18757  004BCA  8EDB               	bsf	plusw2,7,c
 18758                           
 18759                           ; BSR set to: 1
 18760  004BCC  0C00               	retlw	0	;funcret
 18761  004BCE                     __end_of_USBCtrlEPAllowDataStage:
 18762                           	opt stack 0
 18763                           pclatu	equ	0xFFB
 18764                           pclath	equ	0xFFA
 18765                           tblptru	equ	0xFF8
 18766                           tblptrh	equ	0xFF7
 18767                           tblptrl	equ	0xFF6
 18768                           tablat	equ	0xFF5
 18769                           prodh	equ	0xFF4
 18770                           prodl	equ	0xFF3
 18771                           intcon	equ	0xFF2
 18772                           postinc0	equ	0xFEE
 18773                           wreg	equ	0xFE8
 18774                           indf1	equ	0xFE7
 18775                           fsr1h	equ	0xFE2
 18776                           fsr1l	equ	0xFE1
 18777                           indf2	equ	0xFDF
 18778                           postinc2	equ	0xFDE
 18779                           postdec2	equ	0xFDD
 18780                           plusw2	equ	0xFDB
 18781                           fsr2h	equ	0xFDA
 18782                           fsr2l	equ	0xFD9
 18783                           status	equ	0xFD8
 18784                           
 18785 ;; *************** function _USBCheckStdRequest *****************
 18786 ;; Defined at:
 18787 ;;		line 2317 in file "../Includes/Usb/framework/usb_device.c"
 18788 ;; Parameters:    Size  Location     Type
 18789 ;;		None
 18790 ;; Auto vars:     Size  Location     Type
 18791 ;;		None
 18792 ;; Return value:  Size  Location     Type
 18793 ;;                  1    wreg      void 
 18794 ;; Registers used:
 18795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18796 ;; Tracked objects:
 18797 ;;		On entry : F/1
 18798 ;;		On exit  : 0/0
 18799 ;;		Unchanged: 0/0
 18800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18801 ;;      Params:         0       0       0       0       0       0       0       0       0
 18802 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18803 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18804 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18805 ;;Total ram usage:        0 bytes
 18806 ;; Hardware stack levels used:    1
 18807 ;; Hardware stack levels required when called:    6
 18808 ;; This function calls:
 18809 ;;		_USBStdFeatureReqHandler
 18810 ;;		_USBStdGetDscHandler
 18811 ;;		_USBStdGetStatusHandler
 18812 ;;		_USBStdSetCfgHandler
 18813 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18814 ;; This function is called by:
 18815 ;;		_USBCtrlTrfSetupHandler
 18816 ;; This function uses a non-reentrant model
 18817 ;;
 18818                           
 18819                           	psect	text93
 18820  004D98                     __ptext93:
 18821                           	opt stack 0
 18822  004D98                     _USBCheckStdRequest:
 18823                           	opt stack 10
 18824                           
 18825                           ; BSR set to: 1
 18826                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 18827                           
 18828                           ; BSR set to: 1
 18829                           ;incstack = 0
 18830  004D98  0104               	movlb	4	; () banked
 18831  004D9A  3930               	swapf	48,w,b	;volatile
 18832  004D9C  32E8               	rrcf	wreg,f,c
 18833  004D9E  0B03               	andlw	3
 18834  004DA0  E02C               	bz	i2l6859
 18835  004DA2  0012               	return	
 18836  004DA4                     i2l1655:
 18837                           
 18838                           ; BSR set to: 4
 18839                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 18840  004DA4  8E0C               	bsf	_inPipes+3,7,c	;volatile
 18841                           
 18842                           ; BSR set to: 4
 18843                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 18844  004DA6  0E08               	movlw	8
 18845  004DA8  0100               	movlb	0	; () banked
 18846  004DAA  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 18847                           
 18848                           ;usb_device.c: 2327: break;
 18849  004DAC  0C08               	retlw	8
 18850  004DAE                     i2l6833:
 18851                           
 18852                           ; BSR set to: 4
 18853                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 18854  004DAE  0E2C               	movlw	low _USBActiveConfiguration
 18855  004DB0  6E09               	movwf	_inPipes,c	;volatile
 18856  004DB2  6A0A               	clrf	_inPipes+1,c	;volatile
 18857                           
 18858                           ; BSR set to: 4
 18859                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18860  004DB4  800C               	bsf	_inPipes+3,0,c	;volatile
 18861                           
 18862                           ; BSR set to: 4
 18863                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 18864  004DB6  0E01               	movlw	1
 18865  004DB8  6E0D               	movwf	_inPipes+4,c	;volatile
 18866                           
 18867                           ; BSR set to: 4
 18868                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 18869  004DBA  8E0C               	bsf	_inPipes+3,7,c	;volatile
 18870                           
 18871                           ;usb_device.c: 2339: break;
 18872  004DBC  0C01               	retlw	1
 18873  004DBE                     i2l6845:
 18874                           
 18875                           ; BSR set to: 4
 18876                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 18877  004DBE  0EFB               	movlw	low _USBAlternateInterface
 18878  004DC0  2534               	addwf	52,w,b	;volatile
 18879  004DC2  6E09               	movwf	_inPipes,c	;volatile
 18880  004DC4  6A0A               	clrf	_inPipes+1,c	;volatile
 18881  004DC6  0E01               	movlw	high _USBAlternateInterface
 18882  004DC8  220A               	addwfc	_inPipes+1,f,c	;volatile
 18883                           
 18884                           ; BSR set to: 4
 18885                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18886  004DCA  800C               	bsf	_inPipes+3,0,c	;volatile
 18887                           
 18888                           ; BSR set to: 4
 18889                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 18890  004DCC  0E01               	movlw	1
 18891  004DCE  6E0D               	movwf	_inPipes+4,c	;volatile
 18892                           
 18893                           ; BSR set to: 4
 18894                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 18895  004DD0  8E0C               	bsf	_inPipes+3,7,c	;volatile
 18896                           
 18897                           ;usb_device.c: 2352: break;
 18898  004DD2  0C01               	retlw	1
 18899  004DD4                     i2l1664:
 18900                           
 18901                           ; BSR set to: 4
 18902                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 18903  004DD4  8E0C               	bsf	_inPipes+3,7,c	;volatile
 18904                           
 18905                           ; BSR set to: 4
 18906                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 18907  004DD6  0EFB               	movlw	low _USBAlternateInterface
 18908  004DD8  2534               	addwf	52,w,b	;volatile
 18909  004DDA  6ED9               	movwf	fsr2l,c
 18910  004DDC  6ADA               	clrf	fsr2h,c
 18911  004DDE  0E01               	movlw	high _USBAlternateInterface
 18912  004DE0  22DA               	addwfc	fsr2h,f,c
 18913  004DE2  C432 FFDF          	movff	1074,indf2	;volatile
 18914                           
 18915                           ;usb_device.c: 2356: break;
 18916  004DE6  0012               	return	
 18917  004DE8                     i2l6855:
 18918                           
 18919                           ; BSR set to: 4
 18920                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 18921  004DE8  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18922  004DEA  0E02               	movlw	2
 18923  004DEC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18924  004DEE  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18925  004DF0  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18926  004DF2  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18927  004DF4  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18928  004DF6  EFFC  F020         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18929  004DFA                     i2l6859:
 18930                           
 18931                           ; BSR set to: 4
 18932  004DFA  5131               	movf	49,w,b	;volatile
 18933                           
 18934                           ; Switch size 1, requested type "speed"
 18935                           ; Number of cases is 11, Range of values is 0 to 12
 18936                           ; switch strategies available:
 18937                           ; Name         Instructions Cycles
 18938                           ; simple_byte           34    18 (average)
 18939                           ;	Chosen strategy is simple_byte
 18940  004DFC  E102 EF14  F025    	bz	_USBStdGetStatusHandler
 18941  004E02  0A01               	xorlw	1	; case 1
 18942  004E04  E102 EF56  F033    	bz	_USBStdFeatureReqHandler
 18943  004E0A  0A02               	xorlw	2	; case 3
 18944  004E0C  E102 EF56  F033    	bz	_USBStdFeatureReqHandler
 18945  004E12  0A06               	xorlw	6	; case 5
 18946  004E14  E0C7               	bz	i2l1655
 18947  004E16  0A03               	xorlw	3	; case 6
 18948  004E18  E102 EF61  F02D    	bz	_USBStdGetDscHandler
 18949  004E1E  0A01               	xorlw	1	; case 7
 18950  004E20  E0E3               	bz	i2l6855
 18951  004E22  0A0F               	xorlw	15	; case 8
 18952  004E24  E0C4               	bz	i2l6833
 18953  004E26  0A01               	xorlw	1	; case 9
 18954  004E28  E102 EF1D  F028    	bz	_USBStdSetCfgHandler
 18955  004E2E  0A03               	xorlw	3	; case 10
 18956  004E30  E0C6               	bz	i2l6845
 18957  004E32  0A01               	xorlw	1	; case 11
 18958  004E34  E0CF               	bz	i2l1664
 18959  004E36  0A07               	xorlw	7	; case 12
 18960  004E38  0012               	return	
 18961  004E3A                     __end_of_USBCheckStdRequest:
 18962                           	opt stack 0
 18963                           pclatu	equ	0xFFB
 18964                           pclath	equ	0xFFA
 18965                           tblptru	equ	0xFF8
 18966                           tblptrh	equ	0xFF7
 18967                           tblptrl	equ	0xFF6
 18968                           tablat	equ	0xFF5
 18969                           prodh	equ	0xFF4
 18970                           prodl	equ	0xFF3
 18971                           intcon	equ	0xFF2
 18972                           postinc0	equ	0xFEE
 18973                           wreg	equ	0xFE8
 18974                           indf1	equ	0xFE7
 18975                           fsr1h	equ	0xFE2
 18976                           fsr1l	equ	0xFE1
 18977                           indf2	equ	0xFDF
 18978                           postinc2	equ	0xFDE
 18979                           postdec2	equ	0xFDD
 18980                           plusw2	equ	0xFDB
 18981                           fsr2h	equ	0xFDA
 18982                           fsr2l	equ	0xFD9
 18983                           status	equ	0xFD8
 18984                           
 18985 ;; *************** function _USBStdSetCfgHandler *****************
 18986 ;; Defined at:
 18987 ;;		line 1629 in file "../Includes/Usb/framework/usb_device.c"
 18988 ;; Parameters:    Size  Location     Type
 18989 ;;		None
 18990 ;; Auto vars:     Size  Location     Type
 18991 ;;  i               1   21[COMRAM] unsigned char 
 18992 ;; Return value:  Size  Location     Type
 18993 ;;                  1    wreg      void 
 18994 ;; Registers used:
 18995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18996 ;; Tracked objects:
 18997 ;;		On entry : A/4
 18998 ;;		On exit  : F/0
 18999 ;;		Unchanged: 0/0
 19000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19001 ;;      Params:         0       0       0       0       0       0       0       0       0
 19002 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19003 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19004 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19005 ;;Total ram usage:        1 bytes
 19006 ;; Hardware stack levels used:    1
 19007 ;; Hardware stack levels required when called:    5
 19008 ;; This function calls:
 19009 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19010 ;;		i2_memset
 19011 ;; This function is called by:
 19012 ;;		_USBCheckStdRequest
 19013 ;; This function uses a non-reentrant model
 19014 ;;
 19015                           
 19016                           	psect	text94
 19017  00503A                     __ptext94:
 19018                           	opt stack 0
 19019  00503A                     _USBStdSetCfgHandler:
 19020                           	opt stack 10
 19021                           
 19022                           ;usb_device.c: 1631: uint8_t i;
 19023                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 19024                           
 19025                           ;incstack = 0
 19026  00503A  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19027                           
 19028                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 19029  00503C  0E6B               	movlw	107
 19030  00503E  6E2E               	movwf	i2memset@p1,c
 19031  005040  0E0F               	movlw	15
 19032  005042  6E2F               	movwf	i2memset@p1+1,c
 19033  005044  6A31               	clrf	i2memset@c+1,c
 19034  005046  6A30               	clrf	i2memset@c,c
 19035  005048  6A33               	clrf	i2memset@n+1,c
 19036  00504A  0E02               	movlw	2
 19037  00504C  6E32               	movwf	i2memset@n,c
 19038  00504E  EC43  F01F         	call	i2_memset	;wreg free
 19039                           
 19040                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 19041  005052  6A2E               	clrf	i2memset@p1,c
 19042  005054  0E04               	movlw	4
 19043  005056  6E2F               	movwf	i2memset@p1+1,c
 19044  005058  6A31               	clrf	i2memset@c+1,c
 19045  00505A  6A30               	clrf	i2memset@c,c
 19046  00505C  6A33               	clrf	i2memset@n+1,c
 19047  00505E  0E30               	movlw	48
 19048  005060  6E32               	movwf	i2memset@n,c
 19049  005062  EC43  F01F         	call	i2_memset	;wreg free
 19050                           
 19051                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 19052  005066  8C60               	bsf	3936,6,c	;volatile
 19053                           
 19054                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 19055  005068  6A43               	clrf	USBStdSetCfgHandler@i,c
 19056  00506A                     i2l6421:
 19057                           
 19058                           ;usb_device.c: 1649: {
 19059                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 19060  00506A  0E22               	movlw	low _ep_data_in
 19061  00506C  2443               	addwf	USBStdSetCfgHandler@i,w,c
 19062  00506E  6ED9               	movwf	fsr2l,c
 19063  005070  6ADA               	clrf	fsr2h,c
 19064  005072  0E01               	movlw	high _ep_data_in
 19065  005074  22DA               	addwfc	fsr2h,f,c
 19066  005076  6ADF               	clrf	indf2,c
 19067                           
 19068                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 19069  005078  0E25               	movlw	low _ep_data_out
 19070  00507A  2443               	addwf	USBStdSetCfgHandler@i,w,c
 19071  00507C  6ED9               	movwf	fsr2l,c
 19072  00507E  6ADA               	clrf	fsr2h,c
 19073  005080  0E01               	movlw	high _ep_data_out
 19074  005082  22DA               	addwfc	fsr2h,f,c
 19075  005084  6ADF               	clrf	indf2,c
 19076  005086  2A43               	incf	USBStdSetCfgHandler@i,f,c
 19077  005088  0E02               	movlw	2
 19078  00508A  6443               	cpfsgt	USBStdSetCfgHandler@i,c
 19079  00508C  D7EE               	goto	i2l6421
 19080                           
 19081                           ;usb_device.c: 1652: }
 19082                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 19083  00508E  0EFB               	movlw	low _USBAlternateInterface
 19084  005090  6E2E               	movwf	i2memset@p1,c
 19085  005092  0E01               	movlw	high _USBAlternateInterface
 19086  005094  6E2F               	movwf	i2memset@p1+1,c
 19087  005096  6A31               	clrf	i2memset@c+1,c
 19088  005098  6A30               	clrf	i2memset@c,c
 19089  00509A  6A33               	clrf	i2memset@n+1,c
 19090  00509C  0E02               	movlw	2
 19091  00509E  6E32               	movwf	i2memset@n,c
 19092  0050A0  EC43  F01F         	call	i2_memset	;wreg free
 19093                           
 19094                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 19095  0050A4  9C60               	bcf	3936,6,c	;volatile
 19096                           
 19097                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 19098  0050A6  0E08               	movlw	8
 19099  0050A8  6E0F               	movwf	_pBDTEntryIn,c
 19100  0050AA  0E04               	movlw	4
 19101  0050AC  6E10               	movwf	_pBDTEntryIn+1,c
 19102                           
 19103                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 19104  0050AE  0E00               	movlw	0
 19105  0050B0  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 19106  0050B2  0E04               	movlw	4
 19107  0050B4  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 19108                           
 19109                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 19110  0050B6  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 19111  0050BA  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 19112                           
 19113                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 19114  0050BE  C432 F02C          	movff	1074,_USBActiveConfiguration	;volatile
 19115                           
 19116                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 19117  0050C2  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 19118  0050C4  E104               	bnz	i2l6443
 19119                           
 19120                           ;usb_device.c: 1671: {
 19121                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 19122  0050C6  0E10               	movlw	16
 19123  0050C8  0100               	movlb	0	; () banked
 19124  0050CA  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 19125                           
 19126                           ;usb_device.c: 1674: }
 19127  0050CC  0C10               	retlw	16
 19128  0050CE                     i2l6443:
 19129                           
 19130                           ;usb_device.c: 1675: else
 19131                           ;usb_device.c: 1676: {
 19132                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 19133  0050CE  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19134  0050D0  0E01               	movlw	1
 19135  0050D2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19136  0050D4  0E2C               	movlw	low _USBActiveConfiguration
 19137  0050D6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19138  0050D8  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19139  0050DA  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19140  0050DC  0E01               	movlw	1
 19141  0050DE  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19142  0050E0  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19143                           
 19144                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 19145  0050E4  0E20               	movlw	32
 19146  0050E6  0100               	movlb	0	; () banked
 19147  0050E8  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 19148                           
 19149                           ; BSR set to: 0
 19150  0050EA  0C20               	retlw	32	;funcret
 19151  0050EC                     __end_of_USBStdSetCfgHandler:
 19152                           	opt stack 0
 19153                           pclatu	equ	0xFFB
 19154                           pclath	equ	0xFFA
 19155                           tblptru	equ	0xFF8
 19156                           tblptrh	equ	0xFF7
 19157                           tblptrl	equ	0xFF6
 19158                           tablat	equ	0xFF5
 19159                           prodh	equ	0xFF4
 19160                           prodl	equ	0xFF3
 19161                           intcon	equ	0xFF2
 19162                           postinc0	equ	0xFEE
 19163                           wreg	equ	0xFE8
 19164                           indf1	equ	0xFE7
 19165                           fsr1h	equ	0xFE2
 19166                           fsr1l	equ	0xFE1
 19167                           indf2	equ	0xFDF
 19168                           postinc2	equ	0xFDE
 19169                           postdec2	equ	0xFDD
 19170                           plusw2	equ	0xFDB
 19171                           fsr2h	equ	0xFDA
 19172                           fsr2l	equ	0xFD9
 19173                           status	equ	0xFD8
 19174                           
 19175 ;; *************** function i2_memset *****************
 19176 ;; Defined at:
 19177 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 19178 ;; Parameters:    Size  Location     Type
 19179 ;;  p1              2    0[COMRAM] PTR void 
 19180 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 19181 ;;  c               2    2[COMRAM] int 
 19182 ;;  n               2    4[COMRAM] unsigned int 
 19183 ;; Auto vars:     Size  Location     Type
 19184 ;;  memset          2    6[COMRAM] PTR unsigned char 
 19185 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 19186 ;; Return value:  Size  Location     Type
 19187 ;;                  2    0[COMRAM] PTR void 
 19188 ;; Registers used:
 19189 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19190 ;; Tracked objects:
 19191 ;;		On entry : 0/0
 19192 ;;		On exit  : 0/0
 19193 ;;		Unchanged: 0/0
 19194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19195 ;;      Params:         6       0       0       0       0       0       0       0       0
 19196 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19197 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19198 ;;      Totals:         8       0       0       0       0       0       0       0       0
 19199 ;;Total ram usage:        8 bytes
 19200 ;; Hardware stack levels used:    1
 19201 ;; This function calls:
 19202 ;;		Nothing
 19203 ;; This function is called by:
 19204 ;;		_USBStdSetCfgHandler
 19205 ;;		i2_USBDeviceInit
 19206 ;; This function uses a non-reentrant model
 19207 ;;
 19208                           
 19209                           	psect	text95
 19210  003E86                     __ptext95:
 19211                           	opt stack 0
 19212  003E86                     i2_memset:
 19213                           	opt stack 17
 19214                           
 19215                           ; BSR set to: 0
 19216                           ;incstack = 0
 19217  003E86  C02E  F034         	movff	i2memset@p1,i2memset@p
 19218  003E8A  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 19219  003E8E  D008               	goto	i2l6225
 19220  003E90                     i2l6221:
 19221  003E90  C034  FFD9         	movff	i2memset@p,fsr2l
 19222  003E94  C035  FFDA         	movff	i2memset@p+1,fsr2h
 19223  003E98  C030  FFDF         	movff	i2memset@c,indf2
 19224  003E9C  4A34               	infsnz	i2memset@p,f,c
 19225  003E9E  2A35               	incf	i2memset@p+1,f,c
 19226  003EA0                     i2l6225:
 19227  003EA0  0632               	decf	i2memset@n,f,c
 19228  003EA2  A0D8               	btfss	status,0,c
 19229  003EA4  0633               	decf	i2memset@n+1,f,c
 19230  003EA6  2832               	incf	i2memset@n,w,c
 19231  003EA8  E1F3               	bnz	i2l6221
 19232  003EAA  2833               	incf	i2memset@n+1,w,c
 19233  003EAC  E1F1               	bnz	i2l6221
 19234  003EAE  0012               	return		;funcret
 19235  003EB0                     __end_ofi2_memset:
 19236                           	opt stack 0
 19237                           pclatu	equ	0xFFB
 19238                           pclath	equ	0xFFA
 19239                           tblptru	equ	0xFF8
 19240                           tblptrh	equ	0xFF7
 19241                           tblptrl	equ	0xFF6
 19242                           tablat	equ	0xFF5
 19243                           prodh	equ	0xFF4
 19244                           prodl	equ	0xFF3
 19245                           intcon	equ	0xFF2
 19246                           postinc0	equ	0xFEE
 19247                           wreg	equ	0xFE8
 19248                           indf1	equ	0xFE7
 19249                           fsr1h	equ	0xFE2
 19250                           fsr1l	equ	0xFE1
 19251                           indf2	equ	0xFDF
 19252                           postinc2	equ	0xFDE
 19253                           postdec2	equ	0xFDD
 19254                           plusw2	equ	0xFDB
 19255                           fsr2h	equ	0xFDA
 19256                           fsr2l	equ	0xFD9
 19257                           status	equ	0xFD8
 19258                           
 19259 ;; *************** function _USBStdGetStatusHandler *****************
 19260 ;; Defined at:
 19261 ;;		line 1773 in file "../Includes/Usb/framework/usb_device.c"
 19262 ;; Parameters:    Size  Location     Type
 19263 ;;		None
 19264 ;; Auto vars:     Size  Location     Type
 19265 ;;  p               2    0[COMRAM] PTR struct __BDT
 19266 ;;		 -> BDT(48), NULL(0), 
 19267 ;; Return value:  Size  Location     Type
 19268 ;;                  1    wreg      void 
 19269 ;; Registers used:
 19270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19271 ;; Tracked objects:
 19272 ;;		On entry : A/4
 19273 ;;		On exit  : A/0
 19274 ;;		Unchanged: 0/0
 19275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19276 ;;      Params:         0       0       0       0       0       0       0       0       0
 19277 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19278 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19279 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19280 ;;Total ram usage:        2 bytes
 19281 ;; Hardware stack levels used:    1
 19282 ;; This function calls:
 19283 ;;		Nothing
 19284 ;; This function is called by:
 19285 ;;		_USBCheckStdRequest
 19286 ;; This function uses a non-reentrant model
 19287 ;;
 19288                           
 19289                           	psect	text96
 19290  004A28                     __ptext96:
 19291                           	opt stack 0
 19292  004A28                     _USBStdGetStatusHandler:
 19293                           	opt stack 15
 19294                           
 19295                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 19296                           
 19297                           ;incstack = 0
 19298  004A28  0104               	movlb	4	; () banked
 19299  004A2A  6B38               	clrf	56,b	;volatile
 19300                           
 19301                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 19302  004A2C  6B39               	clrf	57,b	;volatile
 19303                           
 19304                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 19305  004A2E  D030               	goto	i2l6493
 19306  004A30                     i2l1591:
 19307                           
 19308                           ; BSR set to: 4
 19309                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 19310  004A30  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19311                           
 19312                           ; BSR set to: 4
 19313                           ;usb_device.c: 1789: }
 19314                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 19315                           
 19316                           ;usb_device.c: 1786: if(0 == 1)
 19317  004A32  0101               	movlb	1	; () banked
 19318  004A34  0546               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 19319  004A36  E133               	bnz	i2l1594
 19320                           
 19321                           ; BSR set to: 1
 19322                           ;usb_device.c: 1792: {
 19323                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 19324  004A38  0104               	movlb	4	; () banked
 19325  004A3A  8338               	bsf	56,1,b	;volatile
 19326  004A3C  D030               	goto	i2l1594
 19327  004A3E                     i2l1595:
 19328                           
 19329                           ; BSR set to: 4
 19330                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 19331  004A3E  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19332                           
 19333                           ;usb_device.c: 1798: break;
 19334  004A40  D02E               	goto	i2l1594
 19335  004A42                     i2l1596:
 19336                           
 19337                           ; BSR set to: 4
 19338                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 19339  004A42  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19340                           
 19341                           ;usb_device.c: 1804: {
 19342                           ;usb_device.c: 1805: BDT_ENTRY *p;
 19343                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 19344  004A44  BF34               	btfsc	52,7,b	;volatile
 19345  004A46  D00A               	goto	i2l6483
 19346                           
 19347                           ; BSR set to: 4
 19348                           ;usb_device.c: 1808: {
 19349                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 19350  004A48  5134               	movf	52,w,b	;volatile
 19351  004A4A  0B0F               	andlw	15
 19352  004A4C  0D02               	mullw	2
 19353  004A4E  0E18               	movlw	low _pBDTEntryOut
 19354  004A50  24F3               	addwf	prodl,w,c
 19355  004A52  6ED9               	movwf	fsr2l,c
 19356  004A54  0E01               	movlw	high _pBDTEntryOut
 19357  004A56  20F4               	addwfc	prodh,w,c
 19358  004A58  6EDA               	movwf	fsr2h,c
 19359  004A5A  D007               	goto	L28
 19360  004A5C                     i2l6483:
 19361                           
 19362                           ; BSR set to: 4
 19363                           ;usb_device.c: 1811: else
 19364                           ;usb_device.c: 1812: {
 19365                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 19366  004A5C  5134               	movf	52,w,b	;volatile
 19367  004A5E  0B0F               	andlw	15
 19368  004A60  0D02               	mullw	2
 19369  004A62  50F3               	movf	prodl,w,c
 19370  004A64  0F0F               	addlw	low _pBDTEntryIn
 19371  004A66  6ED9               	movwf	fsr2l,c
 19372  004A68  6ADA               	clrf	fsr2h,c
 19373  004A6A                     L28:
 19374  004A6A  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 19375  004A6E  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 19376                           
 19377                           ; BSR set to: 4
 19378                           ;usb_device.c: 1814: }
 19379                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 19380  004A72  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 19381  004A76  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 19382  004A7A  AEDF               	btfss	indf2,7,c
 19383  004A7C  D010               	goto	i2l1594
 19384                           
 19385                           ; BSR set to: 4
 19386  004A7E  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 19387  004A82  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 19388  004A86  A4DF               	btfss	indf2,2,c
 19389  004A88  D00A               	goto	i2l1594
 19390                           
 19391                           ; BSR set to: 4
 19392                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 19393  004A8A  0E01               	movlw	1
 19394  004A8C  6F38               	movwf	56,b	;volatile
 19395  004A8E  D007               	goto	i2l1594
 19396  004A90                     i2l6493:
 19397                           
 19398                           ; BSR set to: 4
 19399  004A90  5130               	movf	48,w,b	;volatile
 19400  004A92  0B1F               	andlw	31
 19401                           
 19402                           ; Switch size 1, requested type "speed"
 19403                           ; Number of cases is 3, Range of values is 0 to 2
 19404                           ; switch strategies available:
 19405                           ; Name         Instructions Cycles
 19406                           ; simple_byte           10     6 (average)
 19407                           ;	Chosen strategy is simple_byte
 19408  004A94  E0CD               	bz	i2l1591
 19409  004A96  0A01               	xorlw	1	; case 1
 19410  004A98  E0D2               	bz	i2l1595
 19411  004A9A  0A03               	xorlw	3	; case 2
 19412  004A9C  E0D2               	bz	i2l1596
 19413  004A9E                     i2l1594:
 19414                           
 19415                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 19416  004A9E  AE0C               	btfss	_inPipes+3,7,c	;volatile
 19417  004AA0  0012               	return	
 19418                           
 19419                           ;usb_device.c: 1823: {
 19420                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 19421  004AA2  0E38               	movlw	56
 19422  004AA4  6E09               	movwf	_inPipes,c	;volatile
 19423  004AA6  0E04               	movlw	4
 19424  004AA8  6E0A               	movwf	_inPipes+1,c	;volatile
 19425                           
 19426                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 19427  004AAA  800C               	bsf	_inPipes+3,0,c	;volatile
 19428                           
 19429                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 19430  004AAC  0E02               	movlw	2
 19431  004AAE  6E0D               	movwf	_inPipes+4,c	;volatile
 19432  004AB0  0C02               	retlw	2	;funcret
 19433  004AB2                     __end_of_USBStdGetStatusHandler:
 19434                           	opt stack 0
 19435                           pclatu	equ	0xFFB
 19436                           pclath	equ	0xFFA
 19437                           tblptru	equ	0xFF8
 19438                           tblptrh	equ	0xFF7
 19439                           tblptrl	equ	0xFF6
 19440                           tablat	equ	0xFF5
 19441                           prodh	equ	0xFF4
 19442                           prodl	equ	0xFF3
 19443                           intcon	equ	0xFF2
 19444                           postinc0	equ	0xFEE
 19445                           wreg	equ	0xFE8
 19446                           indf1	equ	0xFE7
 19447                           fsr1h	equ	0xFE2
 19448                           fsr1l	equ	0xFE1
 19449                           indf2	equ	0xFDF
 19450                           postinc2	equ	0xFDE
 19451                           postdec2	equ	0xFDD
 19452                           plusw2	equ	0xFDB
 19453                           fsr2h	equ	0xFDA
 19454                           fsr2l	equ	0xFD9
 19455                           status	equ	0xFD8
 19456                           
 19457 ;; *************** function _USBStdGetDscHandler *****************
 19458 ;; Defined at:
 19459 ;;		line 1704 in file "../Includes/Usb/framework/usb_device.c"
 19460 ;; Parameters:    Size  Location     Type
 19461 ;;		None
 19462 ;; Auto vars:     Size  Location     Type
 19463 ;;		None
 19464 ;; Return value:  Size  Location     Type
 19465 ;;                  1    wreg      void 
 19466 ;; Registers used:
 19467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19468 ;; Tracked objects:
 19469 ;;		On entry : A/4
 19470 ;;		On exit  : 0/0
 19471 ;;		Unchanged: 0/0
 19472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19473 ;;      Params:         0       0       0       0       0       0       0       0       0
 19474 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19475 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19476 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19477 ;;Total ram usage:        2 bytes
 19478 ;; Hardware stack levels used:    1
 19479 ;; This function calls:
 19480 ;;		Nothing
 19481 ;; This function is called by:
 19482 ;;		_USBCheckStdRequest
 19483 ;; This function uses a non-reentrant model
 19484 ;;
 19485                           
 19486                           	psect	text97
 19487  005AC2                     __ptext97:
 19488                           	opt stack 0
 19489  005AC2                     _USBStdGetDscHandler:
 19490                           	opt stack 15
 19491                           
 19492                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 19493                           
 19494                           ;incstack = 0
 19495  005AC2  0E80               	movlw	128
 19496  005AC4  0104               	movlb	4	; () banked
 19497  005AC6  1930               	xorwf	48,w,b	;volatile
 19498  005AC8  A4D8               	btfss	status,2,c
 19499  005ACA  0012               	return	
 19500                           
 19501                           ; BSR set to: 4
 19502                           ;usb_device.c: 1707: {
 19503                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 19504  005ACC  0EC0               	movlw	192
 19505  005ACE  6E0C               	movwf	_inPipes+3,c	;volatile
 19506                           
 19507                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 19508  005AD0  D071               	goto	i2l6471
 19509  005AD2                     i2l6451:
 19510                           
 19511                           ; BSR set to: 4
 19512                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 19513  005AD2  0E44               	movlw	low _device_dsc
 19514  005AD4  6E09               	movwf	_inPipes,c	;volatile
 19515  005AD6  0E7B               	movlw	high _device_dsc
 19516  005AD8  6E0A               	movwf	_inPipes+1,c	;volatile
 19517                           
 19518                           ; BSR set to: 4
 19519                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 19520  005ADA  6A0E               	clrf	_inPipes+5,c	;volatile
 19521  005ADC  0E12               	movlw	18
 19522  005ADE  6E0D               	movwf	_inPipes+4,c	;volatile
 19523                           
 19524                           ;usb_device.c: 1715: break;
 19525  005AE0  0C12               	retlw	18
 19526  005AE2                     i2l6455:
 19527                           
 19528                           ; BSR set to: 4
 19529                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 19530  005AE2  5132               	movf	50,w,b	;volatile
 19531  005AE4  E13D               	bnz	i2l1581
 19532                           
 19533                           ; BSR set to: 4
 19534                           ;usb_device.c: 1721: {
 19535                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 19536  005AE6  5132               	movf	50,w,b	;volatile
 19537  005AE8  0D02               	mullw	2
 19538  005AEA  0E97               	movlw	low _USB_CD_Ptr
 19539  005AEC  24F3               	addwf	prodl,w,c
 19540  005AEE  6EF6               	movwf	tblptrl,c
 19541  005AF0  0E77               	movlw	high _USB_CD_Ptr
 19542  005AF2  20F4               	addwfc	prodh,w,c
 19543  005AF4  6EF7               	movwf	tblptrh,c
 19544  005AF6                     	if	0	;There are less than 3 active tblptr bytes
 19545  005AF6                     	endif
 19546  005AF6  0009               	tblrd		*+
 19547  005AF8  CFF5 F009          	movff	tablat,_inPipes	;volatile
 19548  005AFC  000A               	tblrd		*-
 19549  005AFE  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 19550                           
 19551                           ; BSR set to: 4
 19552                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 19553  005B02  0E02               	movlw	2
 19554  005B04  2409               	addwf	_inPipes,w,c	;volatile
 19555  005B06  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 19556  005B08  0E00               	movlw	0
 19557  005B0A  200A               	addwfc	_inPipes+1,w,c	;volatile
 19558  005B0C  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 19559  005B0E  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 19560  005B12  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 19561  005B16  6AF8               	clrf	tblptru,c
 19562  005B18  0E07               	movlw	(high __ramtop+-1)
 19563  005B1A  64F7               	cpfsgt	tblptrh,c
 19564  005B1C  D003               	bra	i2u450_47
 19565  005B1E  0008               	tblrd		*
 19566  005B20  50F5               	movf	tablat,w,c
 19567  005B22  D005               	bra	i2u450_40
 19568  005B24                     i2u450_47:
 19569  005B24  CFF6 FFE1          	movff	tblptrl,fsr1l
 19570  005B28  CFF7 FFE2          	movff	tblptrh,fsr1h
 19571  005B2C  50E7               	movf	indf1,w,c
 19572  005B2E                     i2u450_40:
 19573  005B2E  6E0D               	movwf	_inPipes+4,c	;volatile
 19574                           
 19575                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 19576  005B30  0E03               	movlw	3
 19577  005B32  2409               	addwf	_inPipes,w,c	;volatile
 19578  005B34  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 19579  005B36  0E00               	movlw	0
 19580  005B38  200A               	addwfc	_inPipes+1,w,c	;volatile
 19581  005B3A  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 19582  005B3C  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 19583  005B40  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 19584  005B44  6AF8               	clrf	tblptru,c
 19585  005B46  0E07               	movlw	(high __ramtop+-1)
 19586  005B48  64F7               	cpfsgt	tblptrh,c
 19587  005B4A  D003               	bra	i2u451_47
 19588  005B4C  0008               	tblrd		*
 19589  005B4E  50F5               	movf	tablat,w,c
 19590  005B50  D005               	bra	i2u451_40
 19591  005B52                     i2u451_47:
 19592  005B52  CFF6 FFE1          	movff	tblptrl,fsr1l
 19593  005B56  CFF7 FFE2          	movff	tblptrh,fsr1h
 19594  005B5A  50E7               	movf	indf1,w,c
 19595  005B5C                     i2u451_40:
 19596  005B5C  6E0E               	movwf	_inPipes+5,c	;volatile
 19597                           
 19598                           ;usb_device.c: 1729: }
 19599  005B5E  0012               	return	
 19600  005B60                     i2l1581:
 19601                           
 19602                           ; BSR set to: 4
 19603                           ;usb_device.c: 1730: else
 19604                           ;usb_device.c: 1731: {
 19605                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 19606  005B60  6A0C               	clrf	_inPipes+3,c	;volatile
 19607  005B62  0012               	return	
 19608  005B64                     i2l6463:
 19609                           
 19610                           ; BSR set to: 4
 19611                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 19612  005B64  0E03               	movlw	3
 19613  005B66  6132               	cpfslt	50,b	;volatile
 19614  005B68  D021               	goto	i2l1584
 19615                           
 19616                           ; BSR set to: 4
 19617                           ;usb_device.c: 1740: {
 19618                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 19619  005B6A  5132               	movf	50,w,b	;volatile
 19620  005B6C  0D02               	mullw	2
 19621  005B6E  0E91               	movlw	low _USB_SD_Ptr
 19622  005B70  24F3               	addwf	prodl,w,c
 19623  005B72  6EF6               	movwf	tblptrl,c
 19624  005B74  0E77               	movlw	high _USB_SD_Ptr
 19625  005B76  20F4               	addwfc	prodh,w,c
 19626  005B78  6EF7               	movwf	tblptrh,c
 19627  005B7A                     	if	0	;There are less than 3 active tblptr bytes
 19628  005B7A                     	endif
 19629  005B7A  0009               	tblrd		*+
 19630  005B7C  CFF5 F009          	movff	tablat,_inPipes	;volatile
 19631  005B80  000A               	tblrd		*-
 19632  005B82  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 19633                           
 19634                           ; BSR set to: 4
 19635                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 19636  005B86  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 19637  005B8A  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19638  005B8E  6AF8               	clrf	tblptru,c
 19639  005B90  0E07               	movlw	(high __ramtop+-1)
 19640  005B92  64F7               	cpfsgt	tblptrh,c
 19641  005B94  D003               	bra	i2u453_47
 19642  005B96  0008               	tblrd		*
 19643  005B98  50F5               	movf	tablat,w,c
 19644  005B9A  D005               	bra	i2u453_40
 19645  005B9C                     i2u453_47:
 19646  005B9C  CFF6 FFE1          	movff	tblptrl,fsr1l
 19647  005BA0  CFF7 FFE2          	movff	tblptrh,fsr1h
 19648  005BA4  50E7               	movf	indf1,w,c
 19649  005BA6                     i2u453_40:
 19650  005BA6  6E0D               	movwf	_inPipes+4,c	;volatile
 19651  005BA8  6A0E               	clrf	_inPipes+5,c	;volatile
 19652                           
 19653                           ;usb_device.c: 1745: }
 19654  005BAA  0012               	return	
 19655  005BAC                     i2l1584:
 19656                           
 19657                           ; BSR set to: 4
 19658                           ;usb_device.c: 1746: else
 19659                           ;usb_device.c: 1747: {
 19660                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 19661  005BAC  6A0C               	clrf	_inPipes+3,c	;volatile
 19662  005BAE  0012               	return	
 19663  005BB0                     i2l1586:
 19664                           
 19665                           ; BSR set to: 4
 19666                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 19667  005BB0  6A0C               	clrf	_inPipes+3,c	;volatile
 19668                           
 19669                           ;usb_device.c: 1753: break;
 19670  005BB2  0012               	return	
 19671  005BB4                     i2l6471:
 19672                           
 19673                           ; BSR set to: 4
 19674  005BB4  5133               	movf	51,w,b	;volatile
 19675                           
 19676                           ; Switch size 1, requested type "speed"
 19677                           ; Number of cases is 3, Range of values is 1 to 3
 19678                           ; switch strategies available:
 19679                           ; Name         Instructions Cycles
 19680                           ; simple_byte           10     6 (average)
 19681                           ;	Chosen strategy is simple_byte
 19682  005BB6  0A01               	xorlw	1	; case 1
 19683  005BB8  E08C               	bz	i2l6451
 19684  005BBA  0A03               	xorlw	3	; case 2
 19685  005BBC  E092               	bz	i2l6455
 19686  005BBE  0A01               	xorlw	1	; case 3
 19687  005BC0  E0D1               	bz	i2l6463
 19688  005BC2  D7F6               	goto	i2l1586
 19689  005BC4                     __end_of_USBStdGetDscHandler:
 19690                           	opt stack 0
 19691                           pclatu	equ	0xFFB
 19692                           pclath	equ	0xFFA
 19693                           tblptru	equ	0xFF8
 19694                           tblptrh	equ	0xFF7
 19695                           tblptrl	equ	0xFF6
 19696                           tablat	equ	0xFF5
 19697                           prodh	equ	0xFF4
 19698                           prodl	equ	0xFF3
 19699                           intcon	equ	0xFF2
 19700                           postinc0	equ	0xFEE
 19701                           wreg	equ	0xFE8
 19702                           indf1	equ	0xFE7
 19703                           fsr1h	equ	0xFE2
 19704                           fsr1l	equ	0xFE1
 19705                           indf2	equ	0xFDF
 19706                           postinc2	equ	0xFDE
 19707                           postdec2	equ	0xFDD
 19708                           plusw2	equ	0xFDB
 19709                           fsr2h	equ	0xFDA
 19710                           fsr2l	equ	0xFD9
 19711                           status	equ	0xFD8
 19712                           
 19713 ;; *************** function _USBStdFeatureReqHandler *****************
 19714 ;; Defined at:
 19715 ;;		line 2385 in file "../Includes/Usb/framework/usb_device.c"
 19716 ;; Parameters:    Size  Location     Type
 19717 ;;		None
 19718 ;; Auto vars:     Size  Location     Type
 19719 ;;  p               2   26[COMRAM] PTR struct __BDT
 19720 ;;		 -> BDT(48), NULL(0), 
 19721 ;;  pUEP            2   23[COMRAM] PTR unsigned char 
 19722 ;;		 -> UEP0(1), 
 19723 ;;  current_ep_d    1   25[COMRAM] struct .
 19724 ;; Return value:  Size  Location     Type
 19725 ;;                  1    wreg      void 
 19726 ;; Registers used:
 19727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19728 ;; Tracked objects:
 19729 ;;		On entry : A/4
 19730 ;;		On exit  : A/0
 19731 ;;		Unchanged: 0/0
 19732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19733 ;;      Params:         0       0       0       0       0       0       0       0       0
 19734 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19735 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19736 ;;      Totals:         7       0       0       0       0       0       0       0       0
 19737 ;;Total ram usage:        7 bytes
 19738 ;; Hardware stack levels used:    1
 19739 ;; Hardware stack levels required when called:    5
 19740 ;; This function calls:
 19741 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19742 ;; This function is called by:
 19743 ;;		_USBCheckStdRequest
 19744 ;; This function uses a non-reentrant model
 19745 ;;
 19746                           
 19747                           	psect	text98
 19748  0066AC                     __ptext98:
 19749                           	opt stack 0
 19750  0066AC                     _USBStdFeatureReqHandler:
 19751                           	opt stack 10
 19752                           
 19753                           ;usb_device.c: 2387: BDT_ENTRY *p;
 19754                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 19755                           ;usb_device.c: 2390: unsigned char* pUEP;
 19756                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 19757                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 19758                           
 19759                           ;incstack = 0
 19760  0066AC  0104               	movlb	4	; () banked
 19761  0066AE  0532               	decf	50,w,b	;volatile
 19762  0066B0  E10D               	bnz	i2l6511
 19763                           
 19764                           ; BSR set to: 4
 19765  0066B2  5130               	movf	48,w,b	;volatile
 19766  0066B4  0B1F               	andlw	31
 19767  0066B6  E10A               	bnz	i2l6511
 19768                           
 19769                           ; BSR set to: 4
 19770                           ;usb_device.c: 2395: {
 19771                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 19772  0066B8  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19773                           
 19774                           ; BSR set to: 4
 19775                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 19776  0066BA  0E03               	movlw	3
 19777  0066BC  1931               	xorwf	49,w,b	;volatile
 19778  0066BE  E104               	bnz	i2l1671
 19779                           
 19780                           ; BSR set to: 4
 19781                           ;usb_device.c: 2398: RemoteWakeup = 1;
 19782  0066C0  0E01               	movlw	1
 19783  0066C2  0101               	movlb	1	; () banked
 19784  0066C4  6F46               	movwf	_RemoteWakeup& (0+255),b	;volatile
 19785  0066C6  D002               	goto	i2l6511
 19786  0066C8                     i2l1671:
 19787                           
 19788                           ; BSR set to: 4
 19789                           ;usb_device.c: 2399: else
 19790                           ;usb_device.c: 2400: RemoteWakeup = 0;
 19791  0066C8  0101               	movlb	1	; () banked
 19792  0066CA  6B46               	clrf	_RemoteWakeup& (0+255),b	;volatile
 19793  0066CC                     i2l6511:
 19794                           
 19795                           ;usb_device.c: 2401: }
 19796                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 19797                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 19798                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 19799                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 19800  0066CC  0104               	movlb	4	; () banked
 19801  0066CE  5132               	movf	50,w,b	;volatile
 19802  0066D0  A4D8               	btfss	status,2,c
 19803  0066D2  0012               	return	
 19804                           
 19805                           ; BSR set to: 4
 19806  0066D4  5130               	movf	48,w,b	;volatile
 19807  0066D6  0B1F               	andlw	31
 19808  0066D8  0A02               	xorlw	2
 19809  0066DA  A4D8               	btfss	status,2,c
 19810  0066DC  0012               	return	
 19811                           
 19812                           ; BSR set to: 4
 19813  0066DE  5134               	movf	52,w,b	;volatile
 19814  0066E0  0B0F               	andlw	15
 19815  0066E2  B4D8               	btfsc	status,2,c
 19816  0066E4  0012               	return	
 19817                           
 19818                           ; BSR set to: 4
 19819  0066E6  5134               	movf	52,w,b	;volatile
 19820  0066E8  0B0F               	andlw	15
 19821  0066EA  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19822  0066EC  0E03               	movlw	3
 19823  0066EE  6043               	cpfslt	??_USBStdFeatureReqHandler,c
 19824  0066F0  0C03               	retlw	3
 19825                           
 19826                           ; BSR set to: 4
 19827  0066F2  0E20               	movlw	32
 19828  0066F4  0100               	movlb	0	; () banked
 19829  0066F6  19F4               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 19830  0066F8  A4D8               	btfss	status,2,c
 19831  0066FA  0012               	return	
 19832                           
 19833                           ; BSR set to: 0
 19834                           ;usb_device.c: 2408: {
 19835                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 19836  0066FC  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19837                           
 19838                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 19839  0066FE  0104               	movlb	4	; () banked
 19840  006700  BF34               	btfsc	52,7,b	;volatile
 19841  006702  D016               	goto	i2l6527
 19842                           
 19843                           ; BSR set to: 4
 19844                           ;usb_device.c: 2415: {
 19845                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 19846  006704  5134               	movf	52,w,b	;volatile
 19847  006706  0B0F               	andlw	15
 19848  006708  0D02               	mullw	2
 19849  00670A  0E18               	movlw	low _pBDTEntryOut
 19850  00670C  24F3               	addwf	prodl,w,c
 19851  00670E  6ED9               	movwf	fsr2l,c
 19852  006710  0E01               	movlw	high _pBDTEntryOut
 19853  006712  20F4               	addwfc	prodh,w,c
 19854  006714  6EDA               	movwf	fsr2h,c
 19855  006716  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 19856  00671A  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19857                           
 19858                           ; BSR set to: 4
 19859                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 19860  00671E  5134               	movf	52,w,b	;volatile
 19861  006720  0B0F               	andlw	15
 19862  006722  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19863  006724  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 19864  006726  0E25               	movlw	low _ep_data_out
 19865  006728  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 19866  00672A  6ED9               	movwf	fsr2l,c
 19867  00672C  0E01               	movlw	high _ep_data_out
 19868  00672E  D013               	goto	L29
 19869  006730                     i2l6527:
 19870                           
 19871                           ; BSR set to: 4
 19872                           ;usb_device.c: 2419: else
 19873                           ;usb_device.c: 2420: {
 19874                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 19875  006730  5134               	movf	52,w,b	;volatile
 19876  006732  0B0F               	andlw	15
 19877  006734  0D02               	mullw	2
 19878  006736  50F3               	movf	prodl,w,c
 19879  006738  0F0F               	addlw	low _pBDTEntryIn
 19880  00673A  6ED9               	movwf	fsr2l,c
 19881  00673C  6ADA               	clrf	fsr2h,c
 19882  00673E  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 19883  006742  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19884                           
 19885                           ; BSR set to: 4
 19886                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 19887  006746  5134               	movf	52,w,b	;volatile
 19888  006748  0B0F               	andlw	15
 19889  00674A  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19890  00674C  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 19891  00674E  0E22               	movlw	low _ep_data_in
 19892  006750  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 19893  006752  6ED9               	movwf	fsr2l,c
 19894  006754  0E01               	movlw	high _ep_data_in
 19895  006756                     L29:
 19896  006756  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 19897  006758  6EDA               	movwf	fsr2h,c
 19898  00675A  50DF               	movf	indf2,w,c
 19899  00675C  6E47               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 19900                           
 19901                           ; BSR set to: 4
 19902                           ;usb_device.c: 2423: }
 19903                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 19904  00675E  B047               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 19905  006760  D002               	goto	i2l6535
 19906                           
 19907                           ; BSR set to: 4
 19908                           ;usb_device.c: 2429: {
 19909                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 19910  006762  9448               	bcf	USBStdFeatureReqHandler@p,2,c
 19911                           
 19912                           ;usb_device.c: 2431: }
 19913  006764  D001               	goto	i2l6537
 19914  006766                     i2l6535:
 19915                           
 19916                           ; BSR set to: 4
 19917                           ;usb_device.c: 2432: else
 19918                           ;usb_device.c: 2433: {
 19919                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 19920  006766  8448               	bsf	USBStdFeatureReqHandler@p,2,c
 19921  006768                     i2l6537:
 19922                           
 19923                           ; BSR set to: 4
 19924                           ;usb_device.c: 2435: }
 19925                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 19926  006768  BF34               	btfsc	52,7,b	;volatile
 19927  00676A  D00A               	goto	i2l6541
 19928                           
 19929                           ; BSR set to: 4
 19930                           ;usb_device.c: 2440: {
 19931                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 19932  00676C  5134               	movf	52,w,b	;volatile
 19933  00676E  0B0F               	andlw	15
 19934  006770  0D02               	mullw	2
 19935  006772  0E18               	movlw	low _pBDTEntryOut
 19936  006774  24F3               	addwf	prodl,w,c
 19937  006776  6ED9               	movwf	fsr2l,c
 19938  006778  0E01               	movlw	high _pBDTEntryOut
 19939  00677A  20F4               	addwfc	prodh,w,c
 19940  00677C  6EDA               	movwf	fsr2h,c
 19941  00677E  D007               	goto	L30
 19942  006780                     i2l6541:
 19943                           
 19944                           ; BSR set to: 4
 19945                           ;usb_device.c: 2443: else
 19946                           ;usb_device.c: 2444: {
 19947                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 19948  006780  5134               	movf	52,w,b	;volatile
 19949  006782  0B0F               	andlw	15
 19950  006784  0D02               	mullw	2
 19951  006786  50F3               	movf	prodl,w,c
 19952  006788  0F0F               	addlw	low _pBDTEntryIn
 19953  00678A  6ED9               	movwf	fsr2l,c
 19954  00678C  6ADA               	clrf	fsr2h,c
 19955  00678E                     L30:
 19956  00678E  C048  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 19957  006792  C049  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 19958                           
 19959                           ; BSR set to: 4
 19960                           ;usb_device.c: 2446: }
 19961                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 19962  006796  0E03               	movlw	3
 19963  006798  1931               	xorwf	49,w,b	;volatile
 19964  00679A  E129               	bnz	i2l6553
 19965                           
 19966                           ; BSR set to: 4
 19967                           ;usb_device.c: 2450: {
 19968                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 19969  00679C  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19970  0067A0  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19971  0067A4  AEDF               	btfss	indf2,7,c
 19972  0067A6  D017               	goto	i2l1681
 19973                           
 19974                           ; BSR set to: 4
 19975                           ;usb_device.c: 2452: {
 19976                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 19977  0067A8  BF34               	btfsc	52,7,b	;volatile
 19978  0067AA  D009               	goto	i2l6551
 19979                           
 19980                           ; BSR set to: 4
 19981                           ;usb_device.c: 2456: {
 19982                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 19983  0067AC  5134               	movf	52,w,b	;volatile
 19984  0067AE  0B0F               	andlw	15
 19985  0067B0  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19986  0067B2  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 19987  0067B4  0E25               	movlw	low _ep_data_out
 19988  0067B6  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 19989  0067B8  6ED9               	movwf	fsr2l,c
 19990  0067BA  0E01               	movlw	high _ep_data_out
 19991  0067BC  D008               	goto	L31
 19992  0067BE                     i2l6551:
 19993                           
 19994                           ; BSR set to: 4
 19995                           ;usb_device.c: 2459: else
 19996                           ;usb_device.c: 2460: {
 19997                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 19998  0067BE  5134               	movf	52,w,b	;volatile
 19999  0067C0  0B0F               	andlw	15
 20000  0067C2  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20001  0067C4  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 20002  0067C6  0E22               	movlw	low _ep_data_in
 20003  0067C8  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 20004  0067CA  6ED9               	movwf	fsr2l,c
 20005  0067CC  0E01               	movlw	high _ep_data_in
 20006  0067CE                     L31:
 20007  0067CE  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 20008  0067D0  6EDA               	movwf	fsr2h,c
 20009  0067D2  0101               	movlb	1	; () banked
 20010  0067D4  82DF               	bsf	indf2,1,c
 20011  0067D6                     i2l1681:
 20012                           
 20013                           ;usb_device.c: 2462: }
 20014                           ;usb_device.c: 2463: }
 20015                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 20016  0067D6  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20017  0067DA  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20018  0067DE  0E00               	movlw	0
 20019  0067E0  84DB               	bsf	plusw2,2,c
 20020                           
 20021                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 20022  0067E2  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20023  0067E6  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20024  0067EA  8EDB               	bsf	plusw2,7,c
 20025                           
 20026                           ;usb_device.c: 2468: }
 20027  0067EC  0C00               	retlw	0
 20028  0067EE                     i2l6553:
 20029                           
 20030                           ; BSR set to: 4
 20031                           ;usb_device.c: 2469: else
 20032                           ;usb_device.c: 2470: {
 20033                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 20034  0067EE  0E04               	movlw	4
 20035  0067F0  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 20036                           
 20037                           ; BSR set to: 4
 20038                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 20039  0067F2  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20040  0067F6  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20041  0067FA  AEDF               	btfss	indf2,7,c
 20042  0067FC  D019               	goto	i2l6563
 20043                           
 20044                           ; BSR set to: 4
 20045                           ;usb_device.c: 2476: {
 20046                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 20047  0067FE  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20048  006802  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20049  006806  0E7F               	movlw	127
 20050  006808  16DF               	andwf	indf2,f,c
 20051                           
 20052                           ; BSR set to: 4
 20053                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 20054  00680A  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20055  00680E  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20056  006812  0E00               	movlw	0
 20057  006814  8CDB               	bsf	plusw2,6,c
 20058                           
 20059                           ; BSR set to: 4
 20060                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 20061  006816  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20062  006818  0E05               	movlw	5
 20063  00681A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20064  00681C  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 20065  006820  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 20066  006824  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20067  006826  0E02               	movlw	2
 20068  006828  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20069  00682A  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20070                           
 20071                           ;usb_device.c: 2482: }
 20072  00682E  D006               	goto	i2l6565
 20073  006830                     i2l6563:
 20074                           
 20075                           ; BSR set to: 4
 20076                           ;usb_device.c: 2483: else
 20077                           ;usb_device.c: 2484: {
 20078                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 20079  006830  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20080  006834  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20081  006838  0E00               	movlw	0
 20082  00683A  8CDB               	bsf	plusw2,6,c
 20083  00683C                     i2l6565:
 20084                           
 20085                           ;usb_device.c: 2487: }
 20086                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 20087  00683C  0E04               	movlw	4
 20088  00683E  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 20089                           
 20090                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 20091  006840  B247               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 20092  006842  D006               	goto	i2l1689
 20093  006844  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20094  006848  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20095  00684C  AEDF               	btfss	indf2,7,c
 20096  00684E  D02B               	goto	i2l6579
 20097  006850                     i2l1689:
 20098                           
 20099                           ;usb_device.c: 2498: {
 20100                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 20101  006850  0104               	movlb	4	; () banked
 20102  006852  BF34               	btfsc	52,7,b	;volatile
 20103  006854  D009               	goto	i2l6573
 20104                           
 20105                           ; BSR set to: 4
 20106                           ;usb_device.c: 2500: {
 20107                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 20108  006856  5134               	movf	52,w,b	;volatile
 20109  006858  0B0F               	andlw	15
 20110  00685A  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20111  00685C  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 20112  00685E  0E25               	movlw	low _ep_data_out
 20113  006860  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 20114  006862  6ED9               	movwf	fsr2l,c
 20115  006864  0E01               	movlw	high _ep_data_out
 20116  006866  D008               	goto	L32
 20117  006868                     i2l6573:
 20118                           
 20119                           ; BSR set to: 4
 20120                           ;usb_device.c: 2503: else
 20121                           ;usb_device.c: 2504: {
 20122                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 20123  006868  5134               	movf	52,w,b	;volatile
 20124  00686A  0B0F               	andlw	15
 20125  00686C  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20126  00686E  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 20127  006870  0E22               	movlw	low _ep_data_in
 20128  006872  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 20129  006874  6ED9               	movwf	fsr2l,c
 20130  006876  0E01               	movlw	high _ep_data_in
 20131  006878                     L32:
 20132  006878  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 20133  00687A  6EDA               	movwf	fsr2h,c
 20134  00687C  0101               	movlb	1	; () banked
 20135  00687E  92DF               	bcf	indf2,1,c
 20136                           
 20137                           ; BSR set to: 1
 20138                           ;usb_device.c: 2506: }
 20139                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 20140  006880  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20141  006884  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20142  006888  0E3B               	movlw	59
 20143  00688A  16DF               	andwf	indf2,f,c
 20144                           
 20145                           ; BSR set to: 1
 20146                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 20147  00688C  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20148  00688E  0E05               	movlw	5
 20149  006890  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20150  006892  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 20151  006896  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 20152  00689A  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20153  00689C  0E02               	movlw	2
 20154  00689E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20155  0068A0  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20156                           
 20157                           ;usb_device.c: 2512: }
 20158  0068A4  D006               	goto	i2l6581
 20159  0068A6                     i2l6579:
 20160                           
 20161                           ;usb_device.c: 2513: else
 20162                           ;usb_device.c: 2514: {
 20163                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 20164  0068A6  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20165  0068AA  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20166  0068AE  0E3B               	movlw	59
 20167  0068B0  16DF               	andwf	indf2,f,c
 20168  0068B2                     i2l6581:
 20169                           
 20170                           ;usb_device.c: 2517: }
 20171                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 20172  0068B2  0104               	movlb	4	; () banked
 20173  0068B4  5134               	movf	52,w,b	;volatile
 20174  0068B6  0B0F               	andlw	15
 20175  0068B8  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20176  0068BA  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 20177  0068BC  0E6A               	movlw	106
 20178  0068BE  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 20179  0068C0  6E45               	movwf	USBStdFeatureReqHandler@pUEP,c
 20180  0068C2  0E0F               	movlw	15
 20181  0068C4  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 20182  0068C6  6E46               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 20183                           
 20184                           ; BSR set to: 4
 20185                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 20186  0068C8  C045  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 20187  0068CC  C046  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 20188  0068D0  0EFE               	movlw	254
 20189  0068D2  16DF               	andwf	indf2,f,c
 20190  0068D4  0CFE               	retlw	254	;funcret
 20191  0068D6                     __end_of_USBStdFeatureReqHandler:
 20192                           	opt stack 0
 20193                           pclatu	equ	0xFFB
 20194                           pclath	equ	0xFFA
 20195                           tblptru	equ	0xFF8
 20196                           tblptrh	equ	0xFF7
 20197                           tblptrl	equ	0xFF6
 20198                           tablat	equ	0xFF5
 20199                           prodh	equ	0xFF4
 20200                           prodl	equ	0xFF3
 20201                           intcon	equ	0xFF2
 20202                           postinc0	equ	0xFEE
 20203                           wreg	equ	0xFE8
 20204                           indf1	equ	0xFE7
 20205                           fsr1h	equ	0xFE2
 20206                           fsr1l	equ	0xFE1
 20207                           indf2	equ	0xFDF
 20208                           postinc2	equ	0xFDE
 20209                           postdec2	equ	0xFDD
 20210                           plusw2	equ	0xFDB
 20211                           fsr2h	equ	0xFDA
 20212                           fsr2l	equ	0xFD9
 20213                           status	equ	0xFD8
 20214                           
 20215 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 20216 ;; Defined at:
 20217 ;;		line 271 in file "../Includes/Board/USBapp.c"
 20218 ;; Parameters:    Size  Location     Type
 20219 ;;  event           2   13[COMRAM] enum E6400
 20220 ;;  pdata           2   15[COMRAM] PTR void 
 20221 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 20222 ;;  size            2   17[COMRAM] unsigned int 
 20223 ;; Auto vars:     Size  Location     Type
 20224 ;;		None
 20225 ;; Return value:  Size  Location     Type
 20226 ;;                  1    wreg      unsigned char 
 20227 ;; Registers used:
 20228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20229 ;; Tracked objects:
 20230 ;;		On entry : 0/0
 20231 ;;		On exit  : 0/0
 20232 ;;		Unchanged: 0/0
 20233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20234 ;;      Params:         6       0       0       0       0       0       0       0       0
 20235 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20236 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20237 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20238 ;;Total ram usage:        8 bytes
 20239 ;; Hardware stack levels used:    1
 20240 ;; Hardware stack levels required when called:    4
 20241 ;; This function calls:
 20242 ;;		_USBCheckCDCRequest
 20243 ;;		_USBapp_CdcEmulatorInitialize
 20244 ;; This function is called by:
 20245 ;;		_USBDeviceTasks
 20246 ;;		_USBStdSetCfgHandler
 20247 ;;		_USBSuspend
 20248 ;;		_USBWakeFromSuspend
 20249 ;;		_USBCtrlTrfSetupHandler
 20250 ;;		_USBCheckStdRequest
 20251 ;;		_USBStdFeatureReqHandler
 20252 ;; This function uses a non-reentrant model
 20253 ;;
 20254                           
 20255                           	psect	text99
 20256  0041F8                     __ptext99:
 20257                           	opt stack 0
 20258  0041F8                     _USER_USB_CALLBACK_EVENT_HANDLER:
 20259                           	opt stack 14
 20260                           
 20261                           ;USBapp.c: 307: break;
 20262                           
 20263                           ;USBapp.c: 306: USBCheckCDCRequest();
 20264                           
 20265                           ;USBapp.c: 298: break;
 20266                           
 20267                           ;USBapp.c: 297: USBapp_CdcEmulatorInitialize();
 20268                           
 20269                           ;USBapp.c: 273: switch( (int) event )
 20270                           
 20271                           ;incstack = 0
 20272  0041F8  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 20273  0041FC  C03C  F042         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 20274                           
 20275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 20276                           ; Switch size 1, requested type "speed"
 20277                           ; Number of cases is 2, Range of values is 0 to 127
 20278                           ; switch strategies available:
 20279                           ; Name         Instructions Cycles
 20280                           ; simple_byte            7     4 (average)
 20281                           ;	Chosen strategy is simple_byte
 20282  004200  5042               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 20283  004202  E004               	bz	i2l11517
 20284  004204  0A7F               	xorlw	127	; case 127
 20285  004206  A4D8               	btfss	status,2,c
 20286  004208  0012               	return	
 20287  00420A  D019               	goto	i2l11519
 20288  00420C                     i2l11517:
 20289                           
 20290                           ; Switch size 1, requested type "speed"
 20291                           ; Number of cases is 8, Range of values is 1 to 117
 20292                           ; switch strategies available:
 20293                           ; Name         Instructions Cycles
 20294                           ; simple_byte           25    13 (average)
 20295                           ;	Chosen strategy is simple_byte
 20296  00420C  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 20297  00420E  0A01               	xorlw	1	; case 1
 20298  004210  E102 EF4B  F020    	bz	_USBapp_CdcEmulatorInitialize
 20299  004216  0A03               	xorlw	3	; case 2
 20300  004218  B4D8               	btfsc	status,2,c
 20301  00421A  0012               	return	
 20302  00421C  0A01               	xorlw	1	; case 3
 20303  00421E  E102 EF59  F025    	bz	_USBCheckCDCRequest
 20304  004224  0A06               	xorlw	6	; case 5
 20305  004226  B4D8               	btfsc	status,2,c
 20306  004228  0012               	return	
 20307  00422A  0A77               	xorlw	119	; case 114
 20308  00422C  B4D8               	btfsc	status,2,c
 20309  00422E  0012               	return	
 20310  004230  0A01               	xorlw	1	; case 115
 20311  004232  B4D8               	btfsc	status,2,c
 20312  004234  0012               	return	
 20313  004236  0A07               	xorlw	7	; case 116
 20314  004238  A4D8               	btfss	status,2,c
 20315  00423A  0A01               	xorlw	1	; case 117
 20316  00423C  0012               	return	
 20317  00423E                     i2l11519:
 20318                           
 20319                           ; Switch size 1, requested type "speed"
 20320                           ; Number of cases is 1, Range of values is 255 to 255
 20321                           ; switch strategies available:
 20322                           ; Name         Instructions Cycles
 20323                           ; simple_byte            4     3 (average)
 20324                           ;	Chosen strategy is simple_byte
 20325  00423E  1C41               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 20326  004240  0012               	return	
 20327  004242                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 20328                           	opt stack 0
 20329                           pclatu	equ	0xFFB
 20330                           pclath	equ	0xFFA
 20331                           tblptru	equ	0xFF8
 20332                           tblptrh	equ	0xFF7
 20333                           tblptrl	equ	0xFF6
 20334                           tablat	equ	0xFF5
 20335                           prodh	equ	0xFF4
 20336                           prodl	equ	0xFF3
 20337                           intcon	equ	0xFF2
 20338                           postinc0	equ	0xFEE
 20339                           wreg	equ	0xFE8
 20340                           indf1	equ	0xFE7
 20341                           fsr1h	equ	0xFE2
 20342                           fsr1l	equ	0xFE1
 20343                           indf2	equ	0xFDF
 20344                           postinc2	equ	0xFDE
 20345                           postdec2	equ	0xFDD
 20346                           plusw2	equ	0xFDB
 20347                           fsr2h	equ	0xFDA
 20348                           fsr2l	equ	0xFD9
 20349                           status	equ	0xFD8
 20350                           
 20351 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 20352 ;; Defined at:
 20353 ;;		line 107 in file "../Includes/Board/USBapp.c"
 20354 ;; Parameters:    Size  Location     Type
 20355 ;;		None
 20356 ;; Auto vars:     Size  Location     Type
 20357 ;;  i               1   12[COMRAM] unsigned char 
 20358 ;; Return value:  Size  Location     Type
 20359 ;;                  1    wreg      void 
 20360 ;; Registers used:
 20361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20362 ;; Tracked objects:
 20363 ;;		On entry : 0/0
 20364 ;;		On exit  : 0/0
 20365 ;;		Unchanged: 0/0
 20366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20367 ;;      Params:         0       0       0       0       0       0       0       0       0
 20368 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20369 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20370 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20371 ;;Total ram usage:        1 bytes
 20372 ;; Hardware stack levels used:    1
 20373 ;; Hardware stack levels required when called:    3
 20374 ;; This function calls:
 20375 ;;		_CDCInitEP
 20376 ;;		i2_EUSART_Initialize
 20377 ;; This function is called by:
 20378 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20379 ;; This function uses a non-reentrant model
 20380 ;;
 20381                           
 20382                           	psect	text100
 20383  004096                     __ptext100:
 20384                           	opt stack 0
 20385  004096                     _USBapp_CdcEmulatorInitialize:
 20386                           	opt stack 14
 20387                           
 20388                           ;USBapp.c: 110: CDCInitEP();
 20389                           
 20390                           ;incstack = 0
 20391  004096  EC0B  F022         	call	_CDCInitEP	;wreg free
 20392                           
 20393                           ; BSR set to: 1
 20394                           ;USBapp.c: 111: line_coding.bCharFormat = 0;
 20395  00409A  6BF8               	clrf	(_line_coding+4)& (0+255),b
 20396                           
 20397                           ; BSR set to: 1
 20398                           ;USBapp.c: 112: line_coding.bDataBits = 8;
 20399  00409C  0E08               	movlw	8
 20400  00409E  6FFA               	movwf	(_line_coding+6)& (0+255),b
 20401                           
 20402                           ; BSR set to: 1
 20403                           ;USBapp.c: 113: line_coding.bParityType = 0;
 20404  0040A0  6BF9               	clrf	(_line_coding+5)& (0+255),b
 20405                           
 20406                           ; BSR set to: 1
 20407                           ;USBapp.c: 114: line_coding.dwDTERate = 19200;
 20408  0040A2  6BF4               	clrf	_line_coding& (0+255),b
 20409  0040A4  0E4B               	movlw	75
 20410  0040A6  6FF5               	movwf	(_line_coding+1)& (0+255),b
 20411  0040A8  6BF6               	clrf	(_line_coding+2)& (0+255),b
 20412  0040AA  6BF7               	clrf	(_line_coding+3)& (0+255),b
 20413                           
 20414                           ; BSR set to: 1
 20415                           ;USBapp.c: 115: EUSART_Initialize();
 20416  0040AC  EC83  F01F         	call	i2_EUSART_Initialize	;wreg free
 20417                           
 20418                           ; BSR set to: 1
 20419                           ;USBapp.c: 117: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 20420  0040B0  6A3A               	clrf	USBapp_CdcEmulatorInitialize@i,c
 20421  0040B2                     i2l6051:
 20422                           
 20423                           ;USBapp.c: 118: {
 20424                           ;USBapp.c: 119: USB_Buffer[i] = 0;
 20425  0040B2  0E56               	movlw	low _USB_Buffer
 20426  0040B4  243A               	addwf	USBapp_CdcEmulatorInitialize@i,w,c
 20427  0040B6  6ED9               	movwf	fsr2l,c
 20428  0040B8  6ADA               	clrf	fsr2h,c
 20429  0040BA  0E01               	movlw	high _USB_Buffer
 20430  0040BC  22DA               	addwfc	fsr2h,f,c
 20431  0040BE  6ADF               	clrf	indf2,c
 20432  0040C0  2A3A               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 20433  0040C2  0E3F               	movlw	63
 20434  0040C4  643A               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 20435  0040C6  D7F5               	goto	i2l6051
 20436                           
 20437                           ;USBapp.c: 120: }
 20438                           ;USBapp.c: 121: NextUSBOut = 0;
 20439  0040C8  6A1A               	clrf	_NextUSBOut,c
 20440                           
 20441                           ;USBapp.c: 122: LastRS232Out = 0;
 20442  0040CA  6A19               	clrf	_LastRS232Out,c
 20443  0040CC  0012               	return		;funcret
 20444  0040CE                     __end_of_USBapp_CdcEmulatorInitialize:
 20445                           	opt stack 0
 20446                           pclatu	equ	0xFFB
 20447                           pclath	equ	0xFFA
 20448                           tblptru	equ	0xFF8
 20449                           tblptrh	equ	0xFF7
 20450                           tblptrl	equ	0xFF6
 20451                           tablat	equ	0xFF5
 20452                           prodh	equ	0xFF4
 20453                           prodl	equ	0xFF3
 20454                           intcon	equ	0xFF2
 20455                           postinc0	equ	0xFEE
 20456                           wreg	equ	0xFE8
 20457                           indf1	equ	0xFE7
 20458                           fsr1h	equ	0xFE2
 20459                           fsr1l	equ	0xFE1
 20460                           indf2	equ	0xFDF
 20461                           postinc2	equ	0xFDE
 20462                           postdec2	equ	0xFDD
 20463                           plusw2	equ	0xFDB
 20464                           fsr2h	equ	0xFDA
 20465                           fsr2l	equ	0xFD9
 20466                           status	equ	0xFD8
 20467                           
 20468 ;; *************** function _CDCInitEP *****************
 20469 ;; Defined at:
 20470 ;;		line 296 in file "../Includes/Usb/framework/usb_device_cdc.c"
 20471 ;; Parameters:    Size  Location     Type
 20472 ;;		None
 20473 ;; Auto vars:     Size  Location     Type
 20474 ;;		None
 20475 ;; Return value:  Size  Location     Type
 20476 ;;                  1    wreg      void 
 20477 ;; Registers used:
 20478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20479 ;; Tracked objects:
 20480 ;;		On entry : 0/0
 20481 ;;		On exit  : F/1
 20482 ;;		Unchanged: 0/0
 20483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20484 ;;      Params:         0       0       0       0       0       0       0       0       0
 20485 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20486 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20487 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20488 ;;Total ram usage:        0 bytes
 20489 ;; Hardware stack levels used:    1
 20490 ;; Hardware stack levels required when called:    2
 20491 ;; This function calls:
 20492 ;;		_USBEnableEndpoint
 20493 ;;		i2_USBTransferOnePacket
 20494 ;; This function is called by:
 20495 ;;		_USBapp_CdcEmulatorInitialize
 20496 ;; This function uses a non-reentrant model
 20497 ;;
 20498                           
 20499                           	psect	text101
 20500  004416                     __ptext101:
 20501                           	opt stack 0
 20502  004416                     _CDCInitEP:
 20503                           	opt stack 14
 20504                           
 20505                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 20506                           
 20507                           ;incstack = 0
 20508  004416  0101               	movlb	1	; () banked
 20509  004418  6BF4               	clrf	_line_coding& (0+255),b
 20510  00441A  0E4B               	movlw	75
 20511  00441C  6FF5               	movwf	(_line_coding+1)& (0+255),b
 20512  00441E  6BF6               	clrf	(_line_coding+2)& (0+255),b
 20513  004420  6BF7               	clrf	(_line_coding+3)& (0+255),b
 20514                           
 20515                           ; BSR set to: 1
 20516                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 20517  004422  6BF8               	clrf	(_line_coding+4)& (0+255),b
 20518                           
 20519                           ; BSR set to: 1
 20520                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 20521  004424  6BF9               	clrf	(_line_coding+5)& (0+255),b
 20522                           
 20523                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 20524  004426  0E08               	movlw	8
 20525  004428  6FFA               	movwf	(_line_coding+6)& (0+255),b
 20526                           
 20527                           ; BSR set to: 1
 20528                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 20529  00442A  0100               	movlb	0	; () banked
 20530  00442C  6BF6               	clrf	_cdc_rx_len& (0+255),b
 20531                           
 20532                           ; BSR set to: 0
 20533                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 20534  00442E  0E1A               	movlw	26
 20535  004430  6E36               	movwf	USBEnableEndpoint@options,c
 20536  004432  0E01               	movlw	1
 20537  004434  EC15  F020         	call	_USBEnableEndpoint
 20538                           
 20539                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 20540  004438  0E1E               	movlw	30
 20541  00443A  6E36               	movwf	USBEnableEndpoint@options,c
 20542  00443C  0E02               	movlw	2
 20543  00443E  EC15  F020         	call	_USBEnableEndpoint
 20544                           
 20545                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 20546  004442  0E00               	movlw	0
 20547  004444  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 20548  004446  0E40               	movlw	64
 20549  004448  6E2F               	movwf	i2USBTransferOnePacket@data,c
 20550  00444A  0E05               	movlw	5
 20551  00444C  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 20552  00444E  0E40               	movlw	64
 20553  004450  6E31               	movwf	i2USBTransferOnePacket@len,c
 20554  004452  0E02               	movlw	2
 20555  004454  EC6E  F027         	call	i2_USBTransferOnePacket
 20556  004458  C02E  F133         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 20557  00445C  C02F  F134         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 20558                           
 20559                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 20560  004460  0101               	movlb	1	; () banked
 20561  004462  6B31               	clrf	_CDCDataInHandle& (0+255),b
 20562  004464  6B32               	clrf	(_CDCDataInHandle+1)& (0+255),b
 20563                           
 20564                           ; BSR set to: 1
 20565                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 20566  004466  6A1F               	clrf	_cdc_trf_state,c
 20567                           
 20568                           ; BSR set to: 1
 20569  004468  0012               	return		;funcret
 20570  00446A                     __end_of_CDCInitEP:
 20571                           	opt stack 0
 20572                           pclatu	equ	0xFFB
 20573                           pclath	equ	0xFFA
 20574                           tblptru	equ	0xFF8
 20575                           tblptrh	equ	0xFF7
 20576                           tblptrl	equ	0xFF6
 20577                           tablat	equ	0xFF5
 20578                           prodh	equ	0xFF4
 20579                           prodl	equ	0xFF3
 20580                           intcon	equ	0xFF2
 20581                           postinc0	equ	0xFEE
 20582                           wreg	equ	0xFE8
 20583                           indf1	equ	0xFE7
 20584                           fsr1h	equ	0xFE2
 20585                           fsr1l	equ	0xFE1
 20586                           indf2	equ	0xFDF
 20587                           postinc2	equ	0xFDE
 20588                           postdec2	equ	0xFDD
 20589                           plusw2	equ	0xFDB
 20590                           fsr2h	equ	0xFDA
 20591                           fsr2l	equ	0xFD9
 20592                           status	equ	0xFD8
 20593                           
 20594 ;; *************** function i2_USBTransferOnePacket *****************
 20595 ;; Defined at:
 20596 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 20597 ;; Parameters:    Size  Location     Type
 20598 ;;  ep              1    wreg     unsigned char 
 20599 ;;  dir             1    0[COMRAM] unsigned char 
 20600 ;;  data            2    1[COMRAM] PTR unsigned char 
 20601 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 20602 ;;  len             1    3[COMRAM] unsigned char 
 20603 ;; Auto vars:     Size  Location     Type
 20604 ;;  ep              1    4[COMRAM] unsigned char 
 20605 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 20606 ;;		 -> BDT(48), NULL(0), 
 20607 ;; Return value:  Size  Location     Type
 20608 ;;                  2    0[COMRAM] PTR void 
 20609 ;; Registers used:
 20610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20611 ;; Tracked objects:
 20612 ;;		On entry : 0/0
 20613 ;;		On exit  : 0/0
 20614 ;;		Unchanged: 0/0
 20615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20616 ;;      Params:         4       0       0       0       0       0       0       0       0
 20617 ;;      Locals:         3       0       0       0       0       0       0       0       0
 20618 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20619 ;;      Totals:         7       0       0       0       0       0       0       0       0
 20620 ;;Total ram usage:        7 bytes
 20621 ;; Hardware stack levels used:    1
 20622 ;; This function calls:
 20623 ;;		Nothing
 20624 ;; This function is called by:
 20625 ;;		_CDCInitEP
 20626 ;; This function uses a non-reentrant model
 20627 ;;
 20628                           
 20629                           	psect	text102
 20630  004EDC                     __ptext102:
 20631                           	opt stack 0
 20632  004EDC                     i2_USBTransferOnePacket:
 20633                           	opt stack 15
 20634                           
 20635                           ; BSR set to: 1
 20636                           ;incstack = 0
 20637                           ;i2USBTransferOnePacket@ep stored from wreg
 20638  004EDC  6E32               	movwf	i2USBTransferOnePacket@ep,c
 20639                           
 20640                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 20641                           ;usb_device.c: 762: if(dir != 0)
 20642  004EDE  502E               	movf	i2USBTransferOnePacket@dir,w,c
 20643  004EE0  E007               	bz	i2l5919
 20644                           
 20645                           ;usb_device.c: 763: {
 20646                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 20647  004EE2  5032               	movf	i2USBTransferOnePacket@ep,w,c
 20648  004EE4  0D02               	mullw	2
 20649  004EE6  50F3               	movf	prodl,w,c
 20650  004EE8  0F0F               	addlw	low _pBDTEntryIn
 20651  004EEA  6ED9               	movwf	fsr2l,c
 20652  004EEC  6ADA               	clrf	fsr2h,c
 20653  004EEE  D008               	goto	L33
 20654  004EF0                     i2l5919:
 20655                           
 20656                           ;usb_device.c: 767: else
 20657                           ;usb_device.c: 768: {
 20658                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 20659  004EF0  5032               	movf	i2USBTransferOnePacket@ep,w,c
 20660  004EF2  0D02               	mullw	2
 20661  004EF4  0E18               	movlw	low _pBDTEntryOut
 20662  004EF6  24F3               	addwf	prodl,w,c
 20663  004EF8  6ED9               	movwf	fsr2l,c
 20664  004EFA  0E01               	movlw	high _pBDTEntryOut
 20665  004EFC  20F4               	addwfc	prodh,w,c
 20666  004EFE  6EDA               	movwf	fsr2h,c
 20667  004F00                     L33:
 20668  004F00  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 20669  004F04  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 20670                           
 20671                           ;usb_device.c: 771: }
 20672                           ;usb_device.c: 775: if(handle == 0)
 20673  004F08  5033               	movf	i2USBTransferOnePacket@handle,w,c
 20674  004F0A  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 20675  004F0C  E103               	bnz	i2l5925
 20676                           
 20677                           ;usb_device.c: 776: {
 20678                           ;usb_device.c: 777: return 0;
 20679  004F0E  6A2E               	clrf	?i2_USBTransferOnePacket,c
 20680  004F10  6A2F               	clrf	?i2_USBTransferOnePacket+1,c
 20681  004F12  0012               	return	
 20682  004F14                     i2l5925:
 20683                           
 20684                           ;usb_device.c: 778: }
 20685                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 20686  004F14  EE20 F002          	lfsr	2,2
 20687  004F18  5033               	movf	i2USBTransferOnePacket@handle,w,c
 20688  004F1A  26D9               	addwf	fsr2l,f,c
 20689  004F1C  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 20690  004F1E  22DA               	addwfc	fsr2h,f,c
 20691  004F20  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 20692  004F24  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 20693                           
 20694                           ;usb_device.c: 781: handle->CNT = len;
 20695  004F28  EE20 F001          	lfsr	2,1
 20696  004F2C  5033               	movf	i2USBTransferOnePacket@handle,w,c
 20697  004F2E  26D9               	addwf	fsr2l,f,c
 20698  004F30  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 20699  004F32  22DA               	addwfc	fsr2h,f,c
 20700  004F34  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 20701                           
 20702                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 20703  004F38  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 20704  004F3C  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 20705  004F40  0E40               	movlw	64
 20706  004F42  16DF               	andwf	indf2,f,c
 20707                           
 20708                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 20709  004F44  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 20710  004F48  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 20711  004F4C  0E00               	movlw	0
 20712  004F4E  86DB               	bsf	plusw2,3,c
 20713                           
 20714                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 20715  004F50  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 20716  004F54  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 20717  004F58  8EDB               	bsf	plusw2,7,c
 20718                           
 20719                           ;usb_device.c: 787: if(dir != 0)
 20720  004F5A  502E               	movf	i2USBTransferOnePacket@dir,w,c
 20721  004F5C  E007               	bz	i2l5937
 20722                           
 20723                           ;usb_device.c: 788: {
 20724                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 20725  004F5E  5032               	movf	i2USBTransferOnePacket@ep,w,c
 20726  004F60  0D02               	mullw	2
 20727  004F62  50F3               	movf	prodl,w,c
 20728  004F64  0F0F               	addlw	low _pBDTEntryIn
 20729  004F66  6ED9               	movwf	fsr2l,c
 20730  004F68  6ADA               	clrf	fsr2h,c
 20731  004F6A  D008               	goto	L34
 20732  004F6C                     i2l5937:
 20733                           
 20734                           ;usb_device.c: 792: else
 20735                           ;usb_device.c: 793: {
 20736                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 20737  004F6C  5032               	movf	i2USBTransferOnePacket@ep,w,c
 20738  004F6E  0D02               	mullw	2
 20739  004F70  0E18               	movlw	low _pBDTEntryOut
 20740  004F72  24F3               	addwf	prodl,w,c
 20741  004F74  6ED9               	movwf	fsr2l,c
 20742  004F76  0E01               	movlw	high _pBDTEntryOut
 20743  004F78  20F4               	addwfc	prodh,w,c
 20744  004F7A  6EDA               	movwf	fsr2h,c
 20745  004F7C                     L34:
 20746  004F7C  0E04               	movlw	4
 20747  004F7E  1ADF               	xorwf	indf2,f,c
 20748                           
 20749                           ;usb_device.c: 796: }
 20750                           ;usb_device.c: 797: return (void*)handle;
 20751  004F80  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 20752  004F84  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 20753  004F88  0C04               	retlw	4	;funcret
 20754  004F8A                     __end_ofi2_USBTransferOnePacket:
 20755                           	opt stack 0
 20756                           pclatu	equ	0xFFB
 20757                           pclath	equ	0xFFA
 20758                           tblptru	equ	0xFF8
 20759                           tblptrh	equ	0xFF7
 20760                           tblptrl	equ	0xFF6
 20761                           tablat	equ	0xFF5
 20762                           prodh	equ	0xFF4
 20763                           prodl	equ	0xFF3
 20764                           intcon	equ	0xFF2
 20765                           postinc0	equ	0xFEE
 20766                           wreg	equ	0xFE8
 20767                           indf1	equ	0xFE7
 20768                           fsr1h	equ	0xFE2
 20769                           fsr1l	equ	0xFE1
 20770                           indf2	equ	0xFDF
 20771                           postinc2	equ	0xFDE
 20772                           postdec2	equ	0xFDD
 20773                           plusw2	equ	0xFDB
 20774                           fsr2h	equ	0xFDA
 20775                           fsr2l	equ	0xFD9
 20776                           status	equ	0xFD8
 20777                           
 20778 ;; *************** function _USBEnableEndpoint *****************
 20779 ;; Defined at:
 20780 ;;		line 645 in file "../Includes/Usb/framework/usb_device.c"
 20781 ;; Parameters:    Size  Location     Type
 20782 ;;  ep              1    wreg     unsigned char 
 20783 ;;  options         1    8[COMRAM] unsigned char 
 20784 ;; Auto vars:     Size  Location     Type
 20785 ;;  ep              1   11[COMRAM] unsigned char 
 20786 ;;  p               2    9[COMRAM] PTR unsigned char 
 20787 ;;		 -> UEP0(1), 
 20788 ;; Return value:  Size  Location     Type
 20789 ;;                  1    wreg      void 
 20790 ;; Registers used:
 20791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20792 ;; Tracked objects:
 20793 ;;		On entry : 0/0
 20794 ;;		On exit  : 0/0
 20795 ;;		Unchanged: 0/0
 20796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20797 ;;      Params:         1       0       0       0       0       0       0       0       0
 20798 ;;      Locals:         3       0       0       0       0       0       0       0       0
 20799 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20800 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20801 ;;Total ram usage:        4 bytes
 20802 ;; Hardware stack levels used:    1
 20803 ;; Hardware stack levels required when called:    1
 20804 ;; This function calls:
 20805 ;;		_USBConfigureEndpoint
 20806 ;; This function is called by:
 20807 ;;		_CDCInitEP
 20808 ;; This function uses a non-reentrant model
 20809 ;;
 20810                           
 20811                           	psect	text103
 20812  00402A                     __ptext103:
 20813                           	opt stack 0
 20814  00402A                     _USBEnableEndpoint:
 20815                           	opt stack 14
 20816                           
 20817                           ;incstack = 0
 20818                           ;USBEnableEndpoint@ep stored from wreg
 20819  00402A  6E39               	movwf	USBEnableEndpoint@ep,c
 20820                           
 20821                           ;usb_device.c: 647: unsigned char* p;
 20822                           ;usb_device.c: 651: if(options & 0x04)
 20823  00402C  A436               	btfss	USBEnableEndpoint@options,2,c
 20824  00402E  D004               	goto	i2l5907
 20825                           
 20826                           ;usb_device.c: 652: {
 20827                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 20828  004030  6A2E               	clrf	USBConfigureEndpoint@direction,c
 20829  004032  5039               	movf	USBEnableEndpoint@ep,w,c
 20830  004034  ECE7  F025         	call	_USBConfigureEndpoint
 20831  004038                     i2l5907:
 20832                           
 20833                           ;usb_device.c: 654: }
 20834                           ;usb_device.c: 655: if(options & 0x02)
 20835  004038  A236               	btfss	USBEnableEndpoint@options,1,c
 20836  00403A  D005               	goto	i2l5911
 20837                           
 20838                           ;usb_device.c: 656: {
 20839                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 20840  00403C  0E01               	movlw	1
 20841  00403E  6E2E               	movwf	USBConfigureEndpoint@direction,c
 20842  004040  5039               	movf	USBEnableEndpoint@ep,w,c
 20843  004042  ECE7  F025         	call	_USBConfigureEndpoint
 20844  004046                     i2l5911:
 20845                           
 20846                           ;usb_device.c: 658: }
 20847                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 20848  004046  0E6A               	movlw	106
 20849  004048  2439               	addwf	USBEnableEndpoint@ep,w,c
 20850  00404A  6E37               	movwf	USBEnableEndpoint@p,c
 20851  00404C  6A38               	clrf	USBEnableEndpoint@p+1,c
 20852  00404E  0E0F               	movlw	15
 20853  004050  2238               	addwfc	USBEnableEndpoint@p+1,f,c
 20854                           
 20855                           ;usb_device.c: 664: *p = options;
 20856  004052  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 20857  004056  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 20858  00405A  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 20859  00405E  0C0F               	retlw	15	;funcret
 20860  004060                     __end_of_USBEnableEndpoint:
 20861                           	opt stack 0
 20862                           pclatu	equ	0xFFB
 20863                           pclath	equ	0xFFA
 20864                           tblptru	equ	0xFF8
 20865                           tblptrh	equ	0xFF7
 20866                           tblptrl	equ	0xFF6
 20867                           tablat	equ	0xFF5
 20868                           prodh	equ	0xFF4
 20869                           prodl	equ	0xFF3
 20870                           intcon	equ	0xFF2
 20871                           postinc0	equ	0xFEE
 20872                           wreg	equ	0xFE8
 20873                           indf1	equ	0xFE7
 20874                           fsr1h	equ	0xFE2
 20875                           fsr1l	equ	0xFE1
 20876                           indf2	equ	0xFDF
 20877                           postinc2	equ	0xFDE
 20878                           postdec2	equ	0xFDD
 20879                           plusw2	equ	0xFDB
 20880                           fsr2h	equ	0xFDA
 20881                           fsr2l	equ	0xFD9
 20882                           status	equ	0xFD8
 20883                           
 20884 ;; *************** function _USBConfigureEndpoint *****************
 20885 ;; Defined at:
 20886 ;;		line 1228 in file "../Includes/Usb/framework/usb_device.c"
 20887 ;; Parameters:    Size  Location     Type
 20888 ;;  EPNum           1    wreg     unsigned char 
 20889 ;;  direction       1    0[COMRAM] unsigned char 
 20890 ;; Auto vars:     Size  Location     Type
 20891 ;;  EPNum           1    5[COMRAM] unsigned char 
 20892 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 20893 ;;		 -> BDT(48), 
 20894 ;; Return value:  Size  Location     Type
 20895 ;;                  1    wreg      void 
 20896 ;; Registers used:
 20897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20898 ;; Tracked objects:
 20899 ;;		On entry : 0/0
 20900 ;;		On exit  : 0/0
 20901 ;;		Unchanged: 0/0
 20902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20903 ;;      Params:         1       0       0       0       0       0       0       0       0
 20904 ;;      Locals:         3       0       0       0       0       0       0       0       0
 20905 ;;      Temps:          4       0       0       0       0       0       0       0       0
 20906 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20907 ;;Total ram usage:        8 bytes
 20908 ;; Hardware stack levels used:    1
 20909 ;; This function calls:
 20910 ;;		Nothing
 20911 ;; This function is called by:
 20912 ;;		_USBEnableEndpoint
 20913 ;; This function uses a non-reentrant model
 20914 ;;
 20915                           
 20916                           	psect	text104
 20917  004BCE                     __ptext104:
 20918                           	opt stack 0
 20919  004BCE                     _USBConfigureEndpoint:
 20920                           	opt stack 14
 20921                           
 20922                           ;incstack = 0
 20923                           ;USBConfigureEndpoint@EPNum stored from wreg
 20924  004BCE  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 20925                           
 20926                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 20927                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 20928  004BD0  6A34               	clrf	USBConfigureEndpoint@handle,c
 20929  004BD2  0E04               	movlw	4
 20930  004BD4  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 20931                           
 20932                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 20933  004BD6  502E               	movf	USBConfigureEndpoint@direction,w,c
 20934  004BD8  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 20935  004BDA  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 20936  004BDC  90D8               	bcf	status,0,c
 20937  004BDE  362F               	rlcf	??_USBConfigureEndpoint,f,c
 20938  004BE0  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 20939  004BE2  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 20940  004BE4  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 20941  004BE6  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 20942  004BE8  90D8               	bcf	status,0,c
 20943  004BEA  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 20944  004BEC  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 20945  004BEE  90D8               	bcf	status,0,c
 20946  004BF0  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 20947  004BF2  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 20948  004BF4  502F               	movf	??_USBConfigureEndpoint,w,c
 20949  004BF6  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 20950  004BF8  5030               	movf	??_USBConfigureEndpoint+1,w,c
 20951  004BFA  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 20952  004BFC  90D8               	bcf	status,0,c
 20953  004BFE  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 20954  004C00  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 20955  004C02  90D8               	bcf	status,0,c
 20956  004C04  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 20957  004C06  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 20958  004C08  5031               	movf	??_USBConfigureEndpoint+2,w,c
 20959  004C0A  2634               	addwf	USBConfigureEndpoint@handle,f,c
 20960  004C0C  5032               	movf	??_USBConfigureEndpoint+3,w,c
 20961  004C0E  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 20962                           
 20963                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 20964  004C10  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 20965  004C14  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 20966  004C18  9EDF               	bcf	indf2,7,c
 20967                           
 20968                           ;usb_device.c: 1242: if(direction == 0)
 20969  004C1A  502E               	movf	USBConfigureEndpoint@direction,w,c
 20970  004C1C  E109               	bnz	i2l5893
 20971                           
 20972                           ;usb_device.c: 1243: {
 20973                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 20974  004C1E  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 20975  004C20  0D02               	mullw	2
 20976  004C22  0E18               	movlw	low _pBDTEntryOut
 20977  004C24  24F3               	addwf	prodl,w,c
 20978  004C26  6ED9               	movwf	fsr2l,c
 20979  004C28  0E01               	movlw	high _pBDTEntryOut
 20980  004C2A  20F4               	addwfc	prodh,w,c
 20981  004C2C  6EDA               	movwf	fsr2h,c
 20982  004C2E  D006               	goto	L35
 20983  004C30                     i2l5893:
 20984                           
 20985                           ;usb_device.c: 1246: else
 20986                           ;usb_device.c: 1247: {
 20987                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 20988  004C30  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 20989  004C32  0D02               	mullw	2
 20990  004C34  50F3               	movf	prodl,w,c
 20991  004C36  0F0F               	addlw	low _pBDTEntryIn
 20992  004C38  6ED9               	movwf	fsr2l,c
 20993  004C3A  6ADA               	clrf	fsr2h,c
 20994  004C3C                     L35:
 20995  004C3C  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 20996  004C40  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 20997                           
 20998                           ;usb_device.c: 1249: }
 20999                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 21000  004C44  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 21001  004C48  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 21002  004C4C  9CDF               	bcf	indf2,6,c
 21003                           
 21004                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 21005  004C4E  EE20 F004          	lfsr	2,4
 21006  004C52  5034               	movf	USBConfigureEndpoint@handle,w,c
 21007  004C54  26D9               	addwf	fsr2l,f,c
 21008  004C56  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 21009  004C58  22DA               	addwfc	fsr2h,f,c
 21010  004C5A  8CDF               	bsf	indf2,6,c
 21011  004C5C  0012               	return		;funcret
 21012  004C5E                     __end_of_USBConfigureEndpoint:
 21013                           	opt stack 0
 21014                           pclatu	equ	0xFFB
 21015                           pclath	equ	0xFFA
 21016                           tblptru	equ	0xFF8
 21017                           tblptrh	equ	0xFF7
 21018                           tblptrl	equ	0xFF6
 21019                           tablat	equ	0xFF5
 21020                           prodh	equ	0xFF4
 21021                           prodl	equ	0xFF3
 21022                           intcon	equ	0xFF2
 21023                           postinc0	equ	0xFEE
 21024                           wreg	equ	0xFE8
 21025                           indf1	equ	0xFE7
 21026                           fsr1h	equ	0xFE2
 21027                           fsr1l	equ	0xFE1
 21028                           indf2	equ	0xFDF
 21029                           postinc2	equ	0xFDE
 21030                           postdec2	equ	0xFDD
 21031                           plusw2	equ	0xFDB
 21032                           fsr2h	equ	0xFDA
 21033                           fsr2l	equ	0xFD9
 21034                           status	equ	0xFD8
 21035                           
 21036 ;; *************** function _USBCheckCDCRequest *****************
 21037 ;; Defined at:
 21038 ;;		line 184 in file "../Includes/Usb/framework/usb_device_cdc.c"
 21039 ;; Parameters:    Size  Location     Type
 21040 ;;		None
 21041 ;; Auto vars:     Size  Location     Type
 21042 ;;		None
 21043 ;; Return value:  Size  Location     Type
 21044 ;;                  1    wreg      void 
 21045 ;; Registers used:
 21046 ;;		wreg, status,2, status,0
 21047 ;; Tracked objects:
 21048 ;;		On entry : 0/0
 21049 ;;		On exit  : F/4
 21050 ;;		Unchanged: 0/0
 21051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21052 ;;      Params:         0       0       0       0       0       0       0       0       0
 21053 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21054 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21055 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21056 ;;Total ram usage:        0 bytes
 21057 ;; Hardware stack levels used:    1
 21058 ;; This function calls:
 21059 ;;		Nothing
 21060 ;; This function is called by:
 21061 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21062 ;; This function uses a non-reentrant model
 21063 ;;
 21064                           
 21065                           	psect	text105
 21066  004AB2                     __ptext105:
 21067                           	opt stack 0
 21068  004AB2                     _USBCheckCDCRequest:
 21069                           	opt stack 17
 21070                           
 21071                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 21072                           
 21073                           ;incstack = 0
 21074  004AB2  0104               	movlb	4	; () banked
 21075  004AB4  5130               	movf	48,w,b	;volatile
 21076  004AB6  0B1F               	andlw	31
 21077  004AB8  06E8               	decf	wreg,f,c
 21078  004ABA  E001               	bz	i2l6061
 21079  004ABC  0012               	return	
 21080  004ABE                     i2l6061:
 21081                           
 21082                           ; BSR set to: 4
 21083                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 21084  004ABE  3930               	swapf	48,w,b	;volatile
 21085  004AC0  32E8               	rrcf	wreg,f,c
 21086  004AC2  0B03               	andlw	3
 21087  004AC4  06E8               	decf	wreg,f,c
 21088  004AC6  E001               	bz	i2l6065
 21089  004AC8  0012               	return	
 21090  004ACA                     i2l6065:
 21091                           
 21092                           ; BSR set to: 4
 21093                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 21094                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 21095  004ACA  5134               	movf	52,w,b	;volatile
 21096  004ACC  E02E               	bz	i2l6099
 21097                           
 21098                           ; BSR set to: 4
 21099  004ACE  0534               	decf	52,w,b	;volatile
 21100  004AD0  E02C               	bz	i2l6099
 21101  004AD2  0012               	return	
 21102  004AD4                     i2l6071:
 21103                           
 21104                           ; BSR set to: 4
 21105                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 21106  004AD4  0EEC               	movlw	low _dummy_encapsulated_cmd_response
 21107  004AD6  6E09               	movwf	_inPipes,c	;volatile
 21108  004AD8  0E01               	movlw	high _dummy_encapsulated_cmd_response
 21109  004ADA  6E0A               	movwf	_inPipes+1,c	;volatile
 21110                           
 21111                           ; BSR set to: 4
 21112                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 21113  004ADC  6A0E               	clrf	_inPipes+5,c	;volatile
 21114  004ADE  0E08               	movlw	8
 21115  004AE0  6E0D               	movwf	_inPipes+4,c	;volatile
 21116                           
 21117                           ; BSR set to: 4
 21118                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21119  004AE2  800C               	bsf	_inPipes+3,0,c	;volatile
 21120                           
 21121                           ; BSR set to: 4
 21122                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 21123  004AE4  8E0C               	bsf	_inPipes+3,7,c	;volatile
 21124                           
 21125                           ;usb_device_cdc.c: 212: break;
 21126  004AE6  0C08               	retlw	8
 21127  004AE8                     i2l6079:
 21128                           
 21129                           ; BSR set to: 4
 21130                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 21131  004AE8  0EEC               	movlw	low _dummy_encapsulated_cmd_response
 21132  004AEA  6E09               	movwf	_inPipes,c	;volatile
 21133  004AEC  0E01               	movlw	high _dummy_encapsulated_cmd_response
 21134  004AEE  6E0A               	movwf	_inPipes+1,c	;volatile
 21135                           
 21136                           ; BSR set to: 4
 21137                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 21138  004AF0  8E0C               	bsf	_inPipes+3,7,c	;volatile
 21139                           
 21140                           ;usb_device_cdc.c: 217: break;
 21141  004AF2  0012               	return	
 21142  004AF4                     i2l1748:
 21143                           
 21144                           ; BSR set to: 4
 21145                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 21146  004AF4  C436 F005          	movff	1078,_outPipes+4	;volatile
 21147  004AF8  C437 F006          	movff	1079,_outPipes+5	;volatile
 21148                           
 21149                           ; BSR set to: 4
 21150                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 21151  004AFC  0EE2               	movlw	low _cdc_notice
 21152  004AFE  6E01               	movwf	_outPipes,c	;volatile
 21153  004B00  0E01               	movlw	high _cdc_notice
 21154  004B02  6E02               	movwf	_outPipes+1,c	;volatile
 21155                           
 21156                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 21157  004B04  0EC2               	movlw	low _USART_mySetLineCodingHandler
 21158  004B06  6E07               	movwf	_outPipes+6,c	;volatile
 21159  004B08  0E43               	movlw	high _USART_mySetLineCodingHandler
 21160  004B0A  6E08               	movwf	_outPipes+7,c	;volatile
 21161                           
 21162                           ; BSR set to: 4
 21163                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 21164  004B0C  8E04               	bsf	_outPipes+3,7,c	;volatile
 21165                           
 21166                           ;usb_device_cdc.c: 224: break;
 21167  004B0E  0012               	return	
 21168  004B10                     i2l6087:
 21169                           
 21170                           ; BSR set to: 4
 21171                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 21172  004B10  0EF4               	movlw	low _line_coding
 21173  004B12  6E09               	movwf	_inPipes,c	;volatile
 21174  004B14  0E01               	movlw	high _line_coding
 21175  004B16  6E0A               	movwf	_inPipes+1,c	;volatile
 21176                           
 21177                           ; BSR set to: 4
 21178  004B18  6A0E               	clrf	_inPipes+5,c	;volatile
 21179  004B1A  0E07               	movlw	7
 21180  004B1C  6E0D               	movwf	_inPipes+4,c	;volatile
 21181                           
 21182                           ; BSR set to: 4
 21183  004B1E  0EC1               	movlw	193
 21184  004B20  6E0C               	movwf	_inPipes+3,c	;volatile
 21185                           
 21186                           ;usb_device_cdc.c: 231: break;
 21187  004B22  0CC1               	retlw	193
 21188  004B24                     i2l6093:
 21189                           
 21190                           ; BSR set to: 4
 21191                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 21192  004B24  5132               	movf	50,w,b	;volatile
 21193                           
 21194                           ; BSR set to: 4
 21195                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 21196  004B26  8E0C               	bsf	_inPipes+3,7,c	;volatile
 21197                           
 21198                           ;usb_device_cdc.c: 256: break;
 21199  004B28  0012               	return	
 21200  004B2A                     i2l6099:
 21201                           
 21202                           ; BSR set to: 4
 21203  004B2A  5131               	movf	49,w,b	;volatile
 21204                           
 21205                           ; Switch size 1, requested type "speed"
 21206                           ; Number of cases is 5, Range of values is 0 to 34
 21207                           ; switch strategies available:
 21208                           ; Name         Instructions Cycles
 21209                           ; simple_byte           16     9 (average)
 21210                           ;	Chosen strategy is simple_byte
 21211  004B2C  E0D3               	bz	i2l6071
 21212  004B2E  0A01               	xorlw	1	; case 1
 21213  004B30  E0DB               	bz	i2l6079
 21214  004B32  0A21               	xorlw	33	; case 32
 21215  004B34  E0DF               	bz	i2l1748
 21216  004B36  0A01               	xorlw	1	; case 33
 21217  004B38  E0EB               	bz	i2l6087
 21218  004B3A  0A03               	xorlw	3	; case 34
 21219  004B3C  E0F3               	bz	i2l6093
 21220                           
 21221                           ; BSR set to: 4
 21222  004B3E  0012               	return		;funcret
 21223  004B40                     __end_of_USBCheckCDCRequest:
 21224                           	opt stack 0
 21225                           pclatu	equ	0xFFB
 21226                           pclath	equ	0xFFA
 21227                           tblptru	equ	0xFF8
 21228                           tblptrh	equ	0xFF7
 21229                           tblptrl	equ	0xFF6
 21230                           tablat	equ	0xFF5
 21231                           prodh	equ	0xFF4
 21232                           prodl	equ	0xFF3
 21233                           intcon	equ	0xFF2
 21234                           postinc0	equ	0xFEE
 21235                           wreg	equ	0xFE8
 21236                           indf1	equ	0xFE7
 21237                           fsr1h	equ	0xFE2
 21238                           fsr1l	equ	0xFE1
 21239                           indf2	equ	0xFDF
 21240                           postinc2	equ	0xFDE
 21241                           postdec2	equ	0xFDD
 21242                           plusw2	equ	0xFDB
 21243                           fsr2h	equ	0xFDA
 21244                           fsr2l	equ	0xFD9
 21245                           status	equ	0xFD8
 21246                           
 21247 ;; *************** function _USBCtrlTrfOutHandler *****************
 21248 ;; Defined at:
 21249 ;;		line 2169 in file "../Includes/Usb/framework/usb_device.c"
 21250 ;; Parameters:    Size  Location     Type
 21251 ;;		None
 21252 ;; Auto vars:     Size  Location     Type
 21253 ;;		None
 21254 ;; Return value:  Size  Location     Type
 21255 ;;                  1    wreg      void 
 21256 ;; Registers used:
 21257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 21258 ;; Tracked objects:
 21259 ;;		On entry : F/1
 21260 ;;		On exit  : F/1
 21261 ;;		Unchanged: 0/0
 21262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21263 ;;      Params:         0       0       0       0       0       0       0       0       0
 21264 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21265 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21266 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21267 ;;Total ram usage:        0 bytes
 21268 ;; Hardware stack levels used:    1
 21269 ;; Hardware stack levels required when called:    3
 21270 ;; This function calls:
 21271 ;;		_USBCtrlTrfRxService
 21272 ;; This function is called by:
 21273 ;;		_USBCtrlEPService
 21274 ;; This function uses a non-reentrant model
 21275 ;;
 21276                           
 21277                           	psect	text106
 21278  004370                     __ptext106:
 21279                           	opt stack 0
 21280  004370                     _USBCtrlTrfOutHandler:
 21281                           	opt stack 14
 21282                           
 21283                           ; BSR set to: 1
 21284                           ;usb_device.c: 2171: if(controlTransferState == 2)
 21285                           
 21286                           ; BSR set to: 4
 21287                           ;incstack = 0
 21288  004370  0E02               	movlw	2
 21289  004372  1820               	xorwf	_controlTransferState,w,c	;volatile
 21290  004374  E102               	bnz	i2l1631
 21291                           
 21292                           ; BSR set to: 1
 21293                           ;usb_device.c: 2172: {
 21294                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 21295  004376  EF0B  F030         	goto	_USBCtrlTrfRxService	;wreg free
 21296  00437A                     i2l1631:
 21297                           
 21298                           ; BSR set to: 1
 21299                           ;usb_device.c: 2175: else
 21300                           ;usb_device.c: 2176: {
 21301                           ;usb_device.c: 2179: controlTransferState = 0;
 21302  00437A  6A20               	clrf	_controlTransferState,c	;volatile
 21303                           
 21304                           ; BSR set to: 1
 21305                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 21306  00437C  5145               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 21307  00437E  E11F               	bnz	i2l1633
 21308                           
 21309                           ; BSR set to: 1
 21310                           ;usb_device.c: 2187: {
 21311                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 21312  004380  EE20 F001          	lfsr	2,1
 21313  004384  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21314  004386  26D9               	addwf	fsr2l,f,c
 21315  004388  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21316  00438A  22DA               	addwfc	fsr2h,f,c
 21317  00438C  0E08               	movlw	8
 21318  00438E  6EDF               	movwf	indf2,c
 21319                           
 21320                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21321  004390  EE20 F002          	lfsr	2,2
 21322  004394  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21323  004396  26D9               	addwf	fsr2l,f,c
 21324  004398  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21325  00439A  22DA               	addwfc	fsr2h,f,c
 21326  00439C  0E30               	movlw	48
 21327  00439E  6EDE               	movwf	postinc2,c
 21328  0043A0  0E04               	movlw	4
 21329  0043A2  6EDD               	movwf	postdec2,c
 21330                           
 21331                           ; BSR set to: 1
 21332                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21333  0043A4  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21334  0043A8  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21335  0043AC  0E0C               	movlw	12
 21336  0043AE  6EDF               	movwf	indf2,c
 21337                           
 21338                           ; BSR set to: 1
 21339                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21340  0043B0  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21341  0043B4  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21342  0043B8  0E00               	movlw	0
 21343  0043BA  8EDB               	bsf	plusw2,7,c
 21344                           
 21345                           ;usb_device.c: 2192: }
 21346  0043BC  0C00               	retlw	0
 21347  0043BE                     i2l1633:
 21348                           
 21349                           ; BSR set to: 1
 21350                           ;usb_device.c: 2193: else
 21351                           ;usb_device.c: 2194: {
 21352                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 21353  0043BE  6B45               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 21354                           
 21355                           ; BSR set to: 1
 21356  0043C0  0012               	return		;funcret
 21357  0043C2                     __end_of_USBCtrlTrfOutHandler:
 21358                           	opt stack 0
 21359                           pclatu	equ	0xFFB
 21360                           pclath	equ	0xFFA
 21361                           tblptru	equ	0xFF8
 21362                           tblptrh	equ	0xFF7
 21363                           tblptrl	equ	0xFF6
 21364                           tablat	equ	0xFF5
 21365                           prodh	equ	0xFF4
 21366                           prodl	equ	0xFF3
 21367                           intcon	equ	0xFF2
 21368                           postinc0	equ	0xFEE
 21369                           wreg	equ	0xFE8
 21370                           indf1	equ	0xFE7
 21371                           fsr1h	equ	0xFE2
 21372                           fsr1l	equ	0xFE1
 21373                           indf2	equ	0xFDF
 21374                           postinc2	equ	0xFDE
 21375                           postdec2	equ	0xFDD
 21376                           plusw2	equ	0xFDB
 21377                           fsr2h	equ	0xFDA
 21378                           fsr2l	equ	0xFD9
 21379                           status	equ	0xFD8
 21380                           
 21381 ;; *************** function _USBCtrlTrfRxService *****************
 21382 ;; Defined at:
 21383 ;;		line 1518 in file "../Includes/Usb/framework/usb_device.c"
 21384 ;; Parameters:    Size  Location     Type
 21385 ;;		None
 21386 ;; Auto vars:     Size  Location     Type
 21387 ;;  byteToRead      1   18[COMRAM] unsigned char 
 21388 ;;  i               1   17[COMRAM] unsigned char 
 21389 ;; Return value:  Size  Location     Type
 21390 ;;                  1    wreg      void 
 21391 ;; Registers used:
 21392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 21393 ;; Tracked objects:
 21394 ;;		On entry : F/1
 21395 ;;		On exit  : F/1
 21396 ;;		Unchanged: 0/0
 21397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21398 ;;      Params:         0       0       0       0       0       0       0       0       0
 21399 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21400 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21401 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21402 ;;Total ram usage:        2 bytes
 21403 ;; Hardware stack levels used:    1
 21404 ;; Hardware stack levels required when called:    2
 21405 ;; This function calls:
 21406 ;;		_USART_mySetLineCodingHandler
 21407 ;;		_USBCtrlEPAllowStatusStage
 21408 ;; This function is called by:
 21409 ;;		_USBCtrlTrfOutHandler
 21410 ;; This function uses a non-reentrant model
 21411 ;;
 21412                           
 21413                           	psect	text107
 21414  006016                     __ptext107:
 21415                           	opt stack 0
 21416  006016                     _USBCtrlTrfRxService:
 21417                           	opt stack 14
 21418                           
 21419                           ; BSR set to: 1
 21420                           ;usb_device.c: 1520: uint8_t byteToRead;
 21421                           ;usb_device.c: 1521: uint8_t i;
 21422                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 21423                           
 21424                           ; BSR set to: 1
 21425                           ;incstack = 0
 21426  006016  EE20 F001          	lfsr	2,1
 21427  00601A  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 21428  00601C  26D9               	addwf	fsr2l,f,c
 21429  00601E  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21430  006020  22DA               	addwfc	fsr2h,f,c
 21431  006022  50DF               	movf	indf2,w,c
 21432  006024  6E40               	movwf	USBCtrlTrfRxService@byteToRead,c
 21433                           
 21434                           ; BSR set to: 1
 21435                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 21436  006026  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21437  006028  5C05               	subwf	_outPipes+4,w,c	;volatile
 21438  00602A  0E00               	movlw	0
 21439  00602C  5806               	subwfb	_outPipes+5,w,c	;volatile
 21440  00602E  E202               	bc	i2l6781
 21441                           
 21442                           ; BSR set to: 1
 21443                           ;usb_device.c: 1532: {
 21444                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 21445  006030  C005  F040         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 21446  006034                     i2l6781:
 21447                           
 21448                           ; BSR set to: 1
 21449                           ;usb_device.c: 1534: }
 21450                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 21451  006034  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21452  006036  5E05               	subwf	_outPipes+4,f,c	;volatile
 21453  006038  0E00               	movlw	0
 21454  00603A  5A06               	subwfb	_outPipes+5,f,c	;volatile
 21455                           
 21456                           ; BSR set to: 1
 21457                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 21458  00603C  6A3F               	clrf	USBCtrlTrfRxService@i,c
 21459  00603E  D00F               	goto	i2l6791
 21460  006040                     i2l6785:
 21461                           
 21462                           ; BSR set to: 1
 21463                           ;usb_device.c: 1541: {
 21464                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 21465  006040  0E38               	movlw	56
 21466  006042  243F               	addwf	USBCtrlTrfRxService@i,w,c
 21467  006044  6ED9               	movwf	fsr2l,c
 21468  006046  6ADA               	clrf	fsr2h,c
 21469  006048  0E04               	movlw	4
 21470  00604A  22DA               	addwfc	fsr2h,f,c
 21471  00604C  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 21472  006050  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 21473  006054  CFDF FFE7          	movff	indf2,indf1
 21474                           
 21475                           ; BSR set to: 1
 21476  006058  4A01               	infsnz	_outPipes,f,c	;volatile
 21477  00605A  2A02               	incf	_outPipes+1,f,c	;volatile
 21478                           
 21479                           ; BSR set to: 1
 21480  00605C  2A3F               	incf	USBCtrlTrfRxService@i,f,c
 21481  00605E                     i2l6791:
 21482                           
 21483                           ; BSR set to: 1
 21484  00605E  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21485  006060  5C3F               	subwf	USBCtrlTrfRxService@i,w,c
 21486  006062  E3EE               	bnc	i2l6785
 21487                           
 21488                           ; BSR set to: 1
 21489                           ;usb_device.c: 1543: }
 21490                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 21491  006064  5005               	movf	_outPipes+4,w,c	;volatile
 21492  006066  1006               	iorwf	_outPipes+5,w,c	;volatile
 21493  006068  E032               	bz	i2l6807
 21494                           
 21495                           ; BSR set to: 1
 21496                           ;usb_device.c: 1548: {
 21497                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 21498  00606A  EE20 F001          	lfsr	2,1
 21499  00606E  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21500  006070  26D9               	addwf	fsr2l,f,c
 21501  006072  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21502  006074  22DA               	addwfc	fsr2h,f,c
 21503  006076  0E08               	movlw	8
 21504  006078  6EDF               	movwf	indf2,c
 21505                           
 21506                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 21507  00607A  EE20 F002          	lfsr	2,2
 21508  00607E  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21509  006080  26D9               	addwf	fsr2l,f,c
 21510  006082  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21511  006084  22DA               	addwfc	fsr2h,f,c
 21512  006086  0E38               	movlw	56
 21513  006088  6EDE               	movwf	postinc2,c
 21514  00608A  0E04               	movlw	4
 21515  00608C  6EDD               	movwf	postdec2,c
 21516                           
 21517                           ; BSR set to: 1
 21518                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 21519  00608E  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21520  006092  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21521  006096  BCDF               	btfsc	indf2,6,c
 21522  006098  D00D               	goto	i2l6803
 21523                           
 21524                           ; BSR set to: 1
 21525                           ;usb_device.c: 1552: {
 21526                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 21527  00609A  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21528  00609E  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21529  0060A2  0E48               	movlw	72
 21530  0060A4  6EDF               	movwf	indf2,c
 21531                           
 21532                           ; BSR set to: 1
 21533                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21534  0060A6  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21535  0060AA  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21536  0060AE  0E00               	movlw	0
 21537  0060B0  8EDB               	bsf	plusw2,7,c
 21538                           
 21539                           ;usb_device.c: 1555: }
 21540  0060B2  0C00               	retlw	0
 21541  0060B4                     i2l6803:
 21542                           
 21543                           ; BSR set to: 1
 21544                           ;usb_device.c: 1556: else
 21545                           ;usb_device.c: 1557: {
 21546                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 21547  0060B4  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21548  0060B8  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21549  0060BC  0E08               	movlw	8
 21550  0060BE  6EDF               	movwf	indf2,c
 21551                           
 21552                           ; BSR set to: 1
 21553                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21554  0060C0  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21555  0060C4  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21556  0060C8  0E00               	movlw	0
 21557  0060CA  8EDB               	bsf	plusw2,7,c
 21558  0060CC  0C00               	retlw	0
 21559  0060CE                     i2l6807:
 21560                           
 21561                           ; BSR set to: 1
 21562                           ;usb_device.c: 1562: else
 21563                           ;usb_device.c: 1563: {
 21564                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 21565  0060CE  EE20 F001          	lfsr	2,1
 21566  0060D2  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21567  0060D4  26D9               	addwf	fsr2l,f,c
 21568  0060D6  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21569  0060D8  22DA               	addwfc	fsr2h,f,c
 21570  0060DA  0E08               	movlw	8
 21571  0060DC  6EDF               	movwf	indf2,c
 21572                           
 21573                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21574  0060DE  EE20 F002          	lfsr	2,2
 21575  0060E2  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21576  0060E4  26D9               	addwf	fsr2l,f,c
 21577  0060E6  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21578  0060E8  22DA               	addwfc	fsr2h,f,c
 21579  0060EA  0E30               	movlw	48
 21580  0060EC  6EDE               	movwf	postinc2,c
 21581  0060EE  0E04               	movlw	4
 21582  0060F0  6EDD               	movwf	postdec2,c
 21583                           
 21584                           ; BSR set to: 1
 21585                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 21586  0060F2  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21587  0060F6  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21588  0060FA  6EDF               	movwf	indf2,c
 21589                           
 21590                           ; BSR set to: 1
 21591                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21592  0060FC  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21593  006100  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21594  006104  0E00               	movlw	0
 21595  006106  8EDB               	bsf	plusw2,7,c
 21596                           
 21597                           ; BSR set to: 1
 21598                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 21599  006108  5007               	movf	_outPipes+6,w,c	;volatile
 21600  00610A  1008               	iorwf	_outPipes+7,w,c	;volatile
 21601  00610C  E00E               	bz	i2l6817
 21602                           
 21603                           ; BSR set to: 1
 21604                           ;usb_device.c: 1581: {
 21605                           ;usb_device.c: 1586: outPipes[0].pFunc();
 21606  00610E  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 21607  006112  D801               	call	i2u505_48
 21608  006114  D00A               	goto	i2l6817
 21609  006116                     i2u505_48:
 21610  006116  0005               	push	
 21611  006118  6EFA               	movwf	pclath,c
 21612  00611A  50DE               	movf	postinc2,w,c
 21613  00611C  6EFD               	movwf	tosl,c
 21614  00611E  50DE               	movf	postinc2,w,c
 21615  006120  6EFE               	movwf	tosh,c
 21616  006122  50F8               	movf	tblptru,w,c
 21617  006124  6EFF               	movwf	tosu,c
 21618  006126  50FA               	movf	pclath,w,c
 21619  006128  0012               	return		;indir
 21620  00612A                     i2l6817:
 21621                           
 21622                           ; BSR set to: 1
 21623                           ;usb_device.c: 1588: }
 21624                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 21625  00612A  9E04               	bcf	_outPipes+3,7,c	;volatile
 21626                           
 21627                           ; BSR set to: 1
 21628                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 21629  00612C  501D               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 21630  00612E  B4D8               	btfsc	status,2,c
 21631                           
 21632                           ; BSR set to: 1
 21633                           ;usb_device.c: 1604: {
 21634                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 21635  006130  EC2B  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21636                           
 21637                           ; BSR set to: 1
 21638  006134  0012               	return		;funcret
 21639  006136                     __end_of_USBCtrlTrfRxService:
 21640                           	opt stack 0
 21641                           tosu	equ	0xFFF
 21642                           tosh	equ	0xFFE
 21643                           tosl	equ	0xFFD
 21644                           pclatu	equ	0xFFB
 21645                           pclath	equ	0xFFA
 21646                           tblptru	equ	0xFF8
 21647                           tblptrh	equ	0xFF7
 21648                           tblptrl	equ	0xFF6
 21649                           tablat	equ	0xFF5
 21650                           prodh	equ	0xFF4
 21651                           prodl	equ	0xFF3
 21652                           intcon	equ	0xFF2
 21653                           postinc0	equ	0xFEE
 21654                           wreg	equ	0xFE8
 21655                           indf1	equ	0xFE7
 21656                           fsr1h	equ	0xFE2
 21657                           fsr1l	equ	0xFE1
 21658                           indf2	equ	0xFDF
 21659                           postinc2	equ	0xFDE
 21660                           postdec2	equ	0xFDD
 21661                           plusw2	equ	0xFDB
 21662                           fsr2h	equ	0xFDA
 21663                           fsr2l	equ	0xFD9
 21664                           status	equ	0xFD8
 21665                           
 21666 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 21667 ;; Defined at:
 21668 ;;		line 1104 in file "../Includes/Usb/framework/usb_device.c"
 21669 ;; Parameters:    Size  Location     Type
 21670 ;;		None
 21671 ;; Auto vars:     Size  Location     Type
 21672 ;;		None
 21673 ;; Return value:  Size  Location     Type
 21674 ;;                  1    wreg      void 
 21675 ;; Registers used:
 21676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21677 ;; Tracked objects:
 21678 ;;		On entry : 0/0
 21679 ;;		On exit  : F/1
 21680 ;;		Unchanged: 0/0
 21681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21682 ;;      Params:         0       0       0       0       0       0       0       0       0
 21683 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21684 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21685 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21686 ;;Total ram usage:        0 bytes
 21687 ;; Hardware stack levels used:    1
 21688 ;; This function calls:
 21689 ;;		Nothing
 21690 ;; This function is called by:
 21691 ;;		_USBDeviceTasks
 21692 ;;		_USBCtrlEPServiceComplete
 21693 ;;		_USBCtrlTrfRxService
 21694 ;; This function uses a non-reentrant model
 21695 ;;
 21696                           
 21697                           	psect	text108
 21698  005256                     __ptext108:
 21699                           	opt stack 0
 21700  005256                     _USBCtrlEPAllowStatusStage:
 21701                           	opt stack 15
 21702                           
 21703                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 21704                           
 21705                           ; BSR set to: 1
 21706                           ;incstack = 0
 21707  005256  0101               	movlb	1	; () banked
 21708  005258  514A               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 21709  00525A  A4D8               	btfss	status,2,c
 21710  00525C  0012               	return	
 21711                           
 21712                           ; BSR set to: 1
 21713                           ;usb_device.c: 1112: {
 21714                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 21715  00525E  0E01               	movlw	1
 21716  005260  6F4A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21717                           
 21718                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 21719  005262  514B               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 21720  005264  A4D8               	btfss	status,2,c
 21721  005266  0012               	return	
 21722                           
 21723                           ; BSR set to: 1
 21724                           ;usb_device.c: 1115: {
 21725                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 21726  005268  0E01               	movlw	1
 21727  00526A  6F4B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21728                           
 21729                           ; BSR set to: 1
 21730                           ;usb_device.c: 1120: if(controlTransferState == 2)
 21731  00526C  0E02               	movlw	2
 21732  00526E  1820               	xorwf	_controlTransferState,w,c	;volatile
 21733  005270  E114               	bnz	i2l6369
 21734                           
 21735                           ; BSR set to: 1
 21736                           ;usb_device.c: 1121: {
 21737                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 21738  005272  EE20 F001          	lfsr	2,1
 21739  005276  500F               	movf	_pBDTEntryIn,w,c
 21740  005278  26D9               	addwf	fsr2l,f,c
 21741  00527A  5010               	movf	_pBDTEntryIn+1,w,c
 21742  00527C  22DA               	addwfc	fsr2h,f,c
 21743  00527E  6ADF               	clrf	indf2,c
 21744                           
 21745                           ; BSR set to: 1
 21746                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 21747  005280  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 21748  005284  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21749  005288  0E48               	movlw	72
 21750  00528A  6EDF               	movwf	indf2,c
 21751                           
 21752                           ; BSR set to: 1
 21753                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21754  00528C  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 21755  005290  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21756  005294  0E00               	movlw	0
 21757  005296  8EDB               	bsf	plusw2,7,c
 21758                           
 21759                           ;usb_device.c: 1125: }
 21760  005298  0C00               	retlw	0
 21761  00529A                     i2l6369:
 21762                           
 21763                           ; BSR set to: 1
 21764                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 21765  00529A  0420               	decf	_controlTransferState,w,c	;volatile
 21766  00529C  A4D8               	btfss	status,2,c
 21767  00529E  0012               	return	
 21768                           
 21769                           ; BSR set to: 1
 21770                           ;usb_device.c: 1127: {
 21771                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 21772  0052A0  6B45               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 21773                           
 21774                           ; BSR set to: 1
 21775                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 21776  0052A2  EE20 F001          	lfsr	2,1
 21777  0052A6  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 21778  0052A8  26D9               	addwf	fsr2l,f,c
 21779  0052AA  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21780  0052AC  22DA               	addwfc	fsr2h,f,c
 21781  0052AE  0E08               	movlw	8
 21782  0052B0  6EDF               	movwf	indf2,c
 21783                           
 21784                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 21785  0052B2  EE20 F002          	lfsr	2,2
 21786  0052B6  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 21787  0052B8  26D9               	addwf	fsr2l,f,c
 21788  0052BA  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21789  0052BC  22DA               	addwfc	fsr2h,f,c
 21790  0052BE  0E30               	movlw	48
 21791  0052C0  6EDE               	movwf	postinc2,c
 21792  0052C2  0E04               	movlw	4
 21793  0052C4  6EDD               	movwf	postdec2,c
 21794                           
 21795                           ; BSR set to: 1
 21796                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 21797  0052C6  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21798  0052CA  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21799  0052CE  6EDF               	movwf	indf2,c
 21800                           
 21801                           ; BSR set to: 1
 21802                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 21803  0052D0  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21804  0052D4  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21805  0052D8  0E00               	movlw	0
 21806  0052DA  8EDB               	bsf	plusw2,7,c
 21807                           
 21808                           ; BSR set to: 1
 21809                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 21810  0052DC  0E01               	movlw	1
 21811  0052DE  6F45               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 21812                           
 21813                           ; BSR set to: 1
 21814                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 21815  0052E0  EE20 F001          	lfsr	2,1
 21816  0052E4  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21817  0052E6  26D9               	addwf	fsr2l,f,c
 21818  0052E8  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21819  0052EA  22DA               	addwfc	fsr2h,f,c
 21820  0052EC  0E08               	movlw	8
 21821  0052EE  6EDF               	movwf	indf2,c
 21822                           
 21823                           ; BSR set to: 1
 21824                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21825  0052F0  EE20 F002          	lfsr	2,2
 21826  0052F4  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21827  0052F6  26D9               	addwf	fsr2l,f,c
 21828  0052F8  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21829  0052FA  22DA               	addwfc	fsr2h,f,c
 21830  0052FC  0E30               	movlw	48
 21831  0052FE  6EDE               	movwf	postinc2,c
 21832  005300  0E04               	movlw	4
 21833  005302  6EDD               	movwf	postdec2,c
 21834                           
 21835                           ; BSR set to: 1
 21836                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 21837  005304  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21838  005308  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21839  00530C  0E80               	movlw	128
 21840  00530E  6EDF               	movwf	indf2,c
 21841  005310  0C80               	retlw	128
 21842  005312                     __end_of_USBCtrlEPAllowStatusStage:
 21843                           	opt stack 0
 21844                           tosu	equ	0xFFF
 21845                           tosh	equ	0xFFE
 21846                           tosl	equ	0xFFD
 21847                           pclatu	equ	0xFFB
 21848                           pclath	equ	0xFFA
 21849                           tblptru	equ	0xFF8
 21850                           tblptrh	equ	0xFF7
 21851                           tblptrl	equ	0xFF6
 21852                           tablat	equ	0xFF5
 21853                           prodh	equ	0xFF4
 21854                           prodl	equ	0xFF3
 21855                           intcon	equ	0xFF2
 21856                           postinc0	equ	0xFEE
 21857                           wreg	equ	0xFE8
 21858                           indf1	equ	0xFE7
 21859                           fsr1h	equ	0xFE2
 21860                           fsr1l	equ	0xFE1
 21861                           indf2	equ	0xFDF
 21862                           postinc2	equ	0xFDE
 21863                           postdec2	equ	0xFDD
 21864                           plusw2	equ	0xFDB
 21865                           fsr2h	equ	0xFDA
 21866                           fsr2l	equ	0xFD9
 21867                           status	equ	0xFD8
 21868                           
 21869 ;; *************** function _USBCtrlTrfInHandler *****************
 21870 ;; Defined at:
 21871 ;;		line 2223 in file "../Includes/Usb/framework/usb_device.c"
 21872 ;; Parameters:    Size  Location     Type
 21873 ;;		None
 21874 ;; Auto vars:     Size  Location     Type
 21875 ;;  lastDTS         1   17[COMRAM] unsigned char 
 21876 ;; Return value:  Size  Location     Type
 21877 ;;                  1    wreg      void 
 21878 ;; Registers used:
 21879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 21880 ;; Tracked objects:
 21881 ;;		On entry : F/1
 21882 ;;		On exit  : E/0
 21883 ;;		Unchanged: 0/0
 21884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21885 ;;      Params:         0       0       0       0       0       0       0       0       0
 21886 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21887 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21888 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21889 ;;Total ram usage:        1 bytes
 21890 ;; Hardware stack levels used:    1
 21891 ;; Hardware stack levels required when called:    2
 21892 ;; This function calls:
 21893 ;;		_USART_mySetLineCodingHandler
 21894 ;;		_USBCtrlTrfTxService
 21895 ;; This function is called by:
 21896 ;;		_USBCtrlEPService
 21897 ;; This function uses a non-reentrant model
 21898 ;;
 21899                           
 21900                           	psect	text109
 21901  005490                     __ptext109:
 21902                           	opt stack 0
 21903  005490                     _USBCtrlTrfInHandler:
 21904                           	opt stack 15
 21905                           
 21906                           ; BSR set to: 1
 21907                           ;usb_device.c: 2225: uint8_t lastDTS;
 21908                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 21909                           
 21910                           ; BSR set to: 1
 21911                           ;incstack = 0
 21912  005490  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 21913  005494  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21914  005498  0E00               	movlw	0
 21915  00549A  BCDF               	btfsc	indf2,6,c
 21916  00549C  0E01               	movlw	1
 21917  00549E  6E3F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 21918                           
 21919                           ; BSR set to: 1
 21920                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 21921  0054A0  0E04               	movlw	4
 21922  0054A2  1A0F               	xorwf	_pBDTEntryIn,f,c
 21923                           
 21924                           ; BSR set to: 1
 21925                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 21926  0054A4  0E08               	movlw	8
 21927  0054A6  0100               	movlb	0	; () banked
 21928  0054A8  19F4               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 21929  0054AA  E10A               	bnz	i2l7569
 21930                           
 21931                           ; BSR set to: 0
 21932                           ;usb_device.c: 2236: {
 21933                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 21934  0054AC  0104               	movlb	4	; () banked
 21935  0054AE  5132               	movf	50,w,b	;volatile
 21936  0054B0  0B7F               	andlw	127
 21937  0054B2  6E63               	movwf	3939,c	;volatile
 21938                           
 21939                           ; BSR set to: 4
 21940                           ;usb_device.c: 2238: if(UADDR != 0u)
 21941  0054B4  5063               	movf	3939,w,c
 21942                           
 21943                           ; BSR set to: 4
 21944                           ;usb_device.c: 2239: {
 21945                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 21946  0054B6  0E10               	movlw	16
 21947  0054B8  B4D8               	btfsc	status,2,c
 21948                           
 21949                           ; BSR set to: 4
 21950                           ;usb_device.c: 2242: else
 21951                           ;usb_device.c: 2243: {
 21952                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 21953  0054BA  0E04               	movlw	4
 21954                           
 21955                           ;usb_device.c: 2241: }
 21956  0054BC  0100               	movlb	0	; () banked
 21957  0054BE  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 21958  0054C0                     i2l7569:
 21959                           
 21960                           ; BSR set to: 0
 21961                           ;usb_device.c: 2245: }
 21962                           ;usb_device.c: 2246: }
 21963                           ;usb_device.c: 2249: if(controlTransferState == 1)
 21964  0054C0  0420               	decf	_controlTransferState,w,c	;volatile
 21965  0054C2  E138               	bnz	i2l1641
 21966                           
 21967                           ; BSR set to: 0
 21968                           ;usb_device.c: 2250: {
 21969                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 21970  0054C4  EE20 F002          	lfsr	2,2
 21971  0054C8  500F               	movf	_pBDTEntryIn,w,c
 21972  0054CA  26D9               	addwf	fsr2l,f,c
 21973  0054CC  5010               	movf	_pBDTEntryIn+1,w,c
 21974  0054CE  22DA               	addwfc	fsr2h,f,c
 21975  0054D0  0E38               	movlw	56
 21976  0054D2  6EDE               	movwf	postinc2,c
 21977  0054D4  0E04               	movlw	4
 21978  0054D6  6EDD               	movwf	postdec2,c
 21979                           
 21980                           ; BSR set to: 0
 21981                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 21982  0054D8  ECE7  F029         	call	_USBCtrlTrfTxService	;wreg free
 21983                           
 21984                           ; BSR set to: 1
 21985                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 21986  0054DC  0E02               	movlw	2
 21987  0054DE  182A               	xorwf	_shortPacketStatus,w,c	;volatile
 21988  0054E0  E10D               	bnz	i2l7581
 21989                           
 21990                           ; BSR set to: 1
 21991                           ;usb_device.c: 2259: {
 21992                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 21993  0054E2  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 21994  0054E6  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21995  0054EA  0E04               	movlw	4
 21996  0054EC  6EDF               	movwf	indf2,c
 21997                           
 21998                           ; BSR set to: 1
 21999                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22000  0054EE  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 22001  0054F2  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22002  0054F6  0E00               	movlw	0
 22003  0054F8  8EDB               	bsf	plusw2,7,c
 22004                           
 22005                           ;usb_device.c: 2264: }
 22006  0054FA  0C00               	retlw	0
 22007  0054FC                     i2l7581:
 22008                           
 22009                           ; BSR set to: 1
 22010                           ;usb_device.c: 2265: else
 22011                           ;usb_device.c: 2266: {
 22012                           ;usb_device.c: 2267: if(lastDTS == 0)
 22013  0054FC  503F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 22014  0054FE  E10D               	bnz	i2l7587
 22015                           
 22016                           ; BSR set to: 1
 22017                           ;usb_device.c: 2268: {
 22018                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 22019  005500  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 22020  005504  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22021  005508  0E48               	movlw	72
 22022  00550A  6EDF               	movwf	indf2,c
 22023                           
 22024                           ; BSR set to: 1
 22025                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22026  00550C  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 22027  005510  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22028  005514  0E00               	movlw	0
 22029  005516  8EDB               	bsf	plusw2,7,c
 22030                           
 22031                           ;usb_device.c: 2271: }
 22032  005518  0C00               	retlw	0
 22033  00551A                     i2l7587:
 22034                           
 22035                           ; BSR set to: 1
 22036                           ;usb_device.c: 2272: else
 22037                           ;usb_device.c: 2273: {
 22038                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 22039  00551A  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 22040  00551E  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22041  005522  0E08               	movlw	8
 22042  005524  6EDF               	movwf	indf2,c
 22043                           
 22044                           ; BSR set to: 1
 22045                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22046  005526  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 22047  00552A  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22048  00552E  0E00               	movlw	0
 22049  005530  8EDB               	bsf	plusw2,7,c
 22050  005532  0C00               	retlw	0
 22051  005534                     i2l1641:
 22052                           
 22053                           ; BSR set to: 0
 22054                           ;usb_device.c: 2279: else
 22055                           ;usb_device.c: 2280: {
 22056                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 22057  005534  AE04               	btfss	_outPipes+3,7,c	;volatile
 22058  005536  D012               	goto	i2l7597
 22059                           
 22060                           ; BSR set to: 0
 22061                           ;usb_device.c: 2285: {
 22062                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 22063  005538  5007               	movf	_outPipes+6,w,c	;volatile
 22064  00553A  1008               	iorwf	_outPipes+7,w,c	;volatile
 22065  00553C  E00E               	bz	i2l7595
 22066                           
 22067                           ; BSR set to: 0
 22068                           ;usb_device.c: 2287: {
 22069                           ;usb_device.c: 2288: outPipes[0].pFunc();
 22070  00553E  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 22071  005542  D801               	call	i2u593_48
 22072  005544  D00A               	goto	i2l7595
 22073  005546                     i2u593_48:
 22074  005546  0005               	push	
 22075  005548  6EFA               	movwf	pclath,c
 22076  00554A  50DE               	movf	postinc2,w,c
 22077  00554C  6EFD               	movwf	tosl,c
 22078  00554E  50DE               	movf	postinc2,w,c
 22079  005550  6EFE               	movwf	tosh,c
 22080  005552  50F8               	movf	tblptru,w,c
 22081  005554  6EFF               	movwf	tosu,c
 22082  005556  50FA               	movf	pclath,w,c
 22083  005558  0012               	return		;indir
 22084  00555A                     i2l7595:
 22085                           
 22086                           ;usb_device.c: 2289: }
 22087                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 22088  00555A  9E04               	bcf	_outPipes+3,7,c	;volatile
 22089  00555C                     i2l7597:
 22090                           
 22091                           ;usb_device.c: 2291: }
 22092                           ;usb_device.c: 2293: controlTransferState = 0;
 22093  00555C  6A20               	clrf	_controlTransferState,c	;volatile
 22094  00555E  0012               	return		;funcret
 22095  005560                     __end_of_USBCtrlTrfInHandler:
 22096                           	opt stack 0
 22097                           tosu	equ	0xFFF
 22098                           tosh	equ	0xFFE
 22099                           tosl	equ	0xFFD
 22100                           pclatu	equ	0xFFB
 22101                           pclath	equ	0xFFA
 22102                           tblptru	equ	0xFF8
 22103                           tblptrh	equ	0xFF7
 22104                           tblptrl	equ	0xFF6
 22105                           tablat	equ	0xFF5
 22106                           prodh	equ	0xFF4
 22107                           prodl	equ	0xFF3
 22108                           intcon	equ	0xFF2
 22109                           postinc0	equ	0xFEE
 22110                           wreg	equ	0xFE8
 22111                           indf1	equ	0xFE7
 22112                           fsr1h	equ	0xFE2
 22113                           fsr1l	equ	0xFE1
 22114                           indf2	equ	0xFDF
 22115                           postinc2	equ	0xFDE
 22116                           postdec2	equ	0xFDD
 22117                           plusw2	equ	0xFDB
 22118                           fsr2h	equ	0xFDA
 22119                           fsr2l	equ	0xFD9
 22120                           status	equ	0xFD8
 22121                           
 22122 ;; *************** function _USBCtrlTrfTxService *****************
 22123 ;; Defined at:
 22124 ;;		line 1437 in file "../Includes/Usb/framework/usb_device.c"
 22125 ;; Parameters:    Size  Location     Type
 22126 ;;		None
 22127 ;; Auto vars:     Size  Location     Type
 22128 ;;  byteToSend      1    0[COMRAM] unsigned char 
 22129 ;; Return value:  Size  Location     Type
 22130 ;;                  1    wreg      void 
 22131 ;; Registers used:
 22132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22133 ;; Tracked objects:
 22134 ;;		On entry : B/4
 22135 ;;		On exit  : F/1
 22136 ;;		Unchanged: 0/0
 22137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22138 ;;      Params:         0       0       0       0       0       0       0       0       0
 22139 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22140 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22141 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22142 ;;Total ram usage:        1 bytes
 22143 ;; Hardware stack levels used:    1
 22144 ;; This function calls:
 22145 ;;		Nothing
 22146 ;; This function is called by:
 22147 ;;		_USBCtrlEPAllowDataStage
 22148 ;;		_USBCtrlTrfInHandler
 22149 ;; This function uses a non-reentrant model
 22150 ;;
 22151                           
 22152                           	psect	text110
 22153  0053CE                     __ptext110:
 22154                           	opt stack 0
 22155  0053CE                     _USBCtrlTrfTxService:
 22156                           	opt stack 14
 22157                           
 22158                           ;usb_device.c: 1439: uint8_t byteToSend;
 22159                           ;usb_device.c: 1443: byteToSend = 8;
 22160                           
 22161                           ;incstack = 0
 22162  0053CE  0E08               	movlw	8
 22163  0053D0  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 22164                           
 22165                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 22166  0053D2  500E               	movf	_inPipes+5,w,c	;volatile
 22167  0053D4  E10D               	bnz	i2l6167
 22168  0053D6  0E08               	movlw	8
 22169  0053D8  5C0D               	subwf	_inPipes+4,w,c	;volatile
 22170  0053DA  E20A               	bc	i2l6167
 22171                           
 22172                           ;usb_device.c: 1445: {
 22173                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 22174  0053DC  C00D  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 22175                           
 22176                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 22177  0053E0  502A               	movf	_shortPacketStatus,w,c	;volatile
 22178  0053E2  E102               	bnz	i2l6163
 22179                           
 22180                           ;usb_device.c: 1454: {
 22181                           ;usb_device.c: 1455: shortPacketStatus = 1;
 22182  0053E4  0E01               	movlw	1
 22183  0053E6  D003               	goto	L37
 22184  0053E8                     i2l6163:
 22185                           
 22186                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 22187  0053E8  042A               	decf	_shortPacketStatus,w,c	;volatile
 22188  0053EA  E102               	bnz	i2l6167
 22189                           
 22190                           ;usb_device.c: 1458: {
 22191                           ;usb_device.c: 1459: shortPacketStatus = 2;
 22192  0053EC  0E02               	movlw	2
 22193  0053EE                     L37:
 22194  0053EE  6E2A               	movwf	_shortPacketStatus,c	;volatile
 22195  0053F0                     i2l6167:
 22196                           
 22197                           ;usb_device.c: 1460: }
 22198                           ;usb_device.c: 1461: }
 22199                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 22200  0053F0  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22201  0053F2  5E0D               	subwf	_inPipes+4,f,c	;volatile
 22202  0053F4  0E00               	movlw	0
 22203  0053F6  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 22204                           
 22205                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 22206  0053F8  EE20 F001          	lfsr	2,1
 22207  0053FC  500F               	movf	_pBDTEntryIn,w,c
 22208  0053FE  26D9               	addwf	fsr2l,f,c
 22209  005400  5010               	movf	_pBDTEntryIn+1,w,c
 22210  005402  22DA               	addwfc	fsr2h,f,c
 22211  005404  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 22212                           
 22213                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 22214  005408  0E38               	movlw	56
 22215  00540A  0101               	movlb	1	; () banked
 22216  00540C  6F37               	movwf	_pDst& (0+255),b
 22217  00540E  0E04               	movlw	4
 22218  005410  6F38               	movwf	(_pDst+1)& (0+255),b
 22219                           
 22220                           ; BSR set to: 1
 22221                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 22222  005412  B00C               	btfsc	_inPipes+3,0,c	;volatile
 22223  005414  D03A               	goto	i2l6195
 22224  005416  D01B               	goto	i2l6185
 22225  005418                     i2l6177:
 22226                           
 22227                           ; BSR set to: 1
 22228                           ;usb_device.c: 1478: {
 22229                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 22230  005418  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 22231  00541C  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 22232  005420  6AF8               	clrf	tblptru,c
 22233  005422  C137  FFD9         	movff	_pDst,fsr2l
 22234  005426  C138  FFDA         	movff	_pDst+1,fsr2h
 22235  00542A  0E07               	movlw	(high __ramtop+-1)
 22236  00542C  64F7               	cpfsgt	tblptrh,c
 22237  00542E  D003               	bra	i2u423_47
 22238  005430  0008               	tblrd		*
 22239  005432  50F5               	movf	tablat,w,c
 22240  005434  D005               	bra	i2u423_40
 22241  005436                     i2u423_47:
 22242  005436  CFF6 FFE1          	movff	tblptrl,fsr1l
 22243  00543A  CFF7 FFE2          	movff	tblptrh,fsr1h
 22244  00543E  50E7               	movf	indf1,w,c
 22245  005440                     i2u423_40:
 22246  005440  6EDF               	movwf	indf2,c
 22247  005442  4A09               	infsnz	_inPipes,f,c	;volatile
 22248  005444  2A0A               	incf	_inPipes+1,f,c	;volatile
 22249  005446  0101               	movlb	1	; () banked
 22250  005448  4B37               	infsnz	_pDst& (0+255),f,b
 22251  00544A  2B38               	incf	(_pDst+1)& (0+255),f,b
 22252                           
 22253                           ; BSR set to: 1
 22254                           ;usb_device.c: 1480: byteToSend--;
 22255  00544C  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22256  00544E                     i2l6185:
 22257                           
 22258                           ; BSR set to: 1
 22259  00544E  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22260  005450  E1E3               	bnz	i2l6177
 22261  005452  0012               	return	
 22262  005454                     i2l6187:
 22263                           
 22264                           ; BSR set to: 1
 22265                           ;usb_device.c: 1486: {
 22266                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 22267  005454  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 22268  005458  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 22269  00545C  6AF8               	clrf	tblptru,c
 22270  00545E  C137  FFD9         	movff	_pDst,fsr2l
 22271  005462  C138  FFDA         	movff	_pDst+1,fsr2h
 22272  005466  0E07               	movlw	(high __ramtop+-1)
 22273  005468  64F7               	cpfsgt	tblptrh,c
 22274  00546A  D003               	bra	i2u425_47
 22275  00546C  0008               	tblrd		*
 22276  00546E  50F5               	movf	tablat,w,c
 22277  005470  D005               	bra	i2u425_40
 22278  005472                     i2u425_47:
 22279  005472  CFF6 FFE1          	movff	tblptrl,fsr1l
 22280  005476  CFF7 FFE2          	movff	tblptrh,fsr1h
 22281  00547A  50E7               	movf	indf1,w,c
 22282  00547C                     i2u425_40:
 22283  00547C  6EDF               	movwf	indf2,c
 22284  00547E  4A09               	infsnz	_inPipes,f,c	;volatile
 22285  005480  2A0A               	incf	_inPipes+1,f,c	;volatile
 22286  005482  0101               	movlb	1	; () banked
 22287  005484  4B37               	infsnz	_pDst& (0+255),f,b
 22288  005486  2B38               	incf	(_pDst+1)& (0+255),f,b
 22289                           
 22290                           ; BSR set to: 1
 22291                           ;usb_device.c: 1488: byteToSend--;
 22292  005488  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22293  00548A                     i2l6195:
 22294                           
 22295                           ; BSR set to: 1
 22296  00548A  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22297  00548C  E1E3               	bnz	i2l6187
 22298                           
 22299                           ; BSR set to: 1
 22300  00548E  0012               	return		;funcret
 22301  005490                     __end_of_USBCtrlTrfTxService:
 22302                           	opt stack 0
 22303                           tosu	equ	0xFFF
 22304                           tosh	equ	0xFFE
 22305                           tosl	equ	0xFFD
 22306                           pclatu	equ	0xFFB
 22307                           pclath	equ	0xFFA
 22308                           tblptru	equ	0xFF8
 22309                           tblptrh	equ	0xFF7
 22310                           tblptrl	equ	0xFF6
 22311                           tablat	equ	0xFF5
 22312                           prodh	equ	0xFF4
 22313                           prodl	equ	0xFF3
 22314                           intcon	equ	0xFF2
 22315                           postinc0	equ	0xFEE
 22316                           wreg	equ	0xFE8
 22317                           indf1	equ	0xFE7
 22318                           fsr1h	equ	0xFE2
 22319                           fsr1l	equ	0xFE1
 22320                           indf2	equ	0xFDF
 22321                           postinc2	equ	0xFDE
 22322                           postdec2	equ	0xFDD
 22323                           plusw2	equ	0xFDB
 22324                           fsr2h	equ	0xFDA
 22325                           fsr2l	equ	0xFD9
 22326                           status	equ	0xFD8
 22327                           
 22328 ;; *************** function _USART_mySetLineCodingHandler *****************
 22329 ;; Defined at:
 22330 ;;		line 236 in file "../Includes/Board/USBapp.c"
 22331 ;; Parameters:    Size  Location     Type
 22332 ;;		None
 22333 ;; Auto vars:     Size  Location     Type
 22334 ;;  dwBaud          4   13[COMRAM] unsigned long 
 22335 ;; Return value:  Size  Location     Type
 22336 ;;                  1    wreg      void 
 22337 ;; Registers used:
 22338 ;;		wreg, status,2, status,0, cstack
 22339 ;; Tracked objects:
 22340 ;;		On entry : E/1
 22341 ;;		On exit  : F/1
 22342 ;;		Unchanged: 0/0
 22343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22344 ;;      Params:         0       0       0       0       0       0       0       0       0
 22345 ;;      Locals:         4       0       0       0       0       0       0       0       0
 22346 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22347 ;;      Totals:         4       0       0       0       0       0       0       0       0
 22348 ;;Total ram usage:        4 bytes
 22349 ;; Hardware stack levels used:    1
 22350 ;; Hardware stack levels required when called:    1
 22351 ;; This function calls:
 22352 ;;		___lldiv
 22353 ;;		i2_EUSART_Initialize
 22354 ;; This function is called by:
 22355 ;;		_USBCheckCDCRequest
 22356 ;;		_USBCtrlTrfRxService
 22357 ;;		_USBCtrlTrfInHandler
 22358 ;; This function uses a non-reentrant model
 22359 ;;
 22360                           
 22361                           	psect	text111
 22362  0043C2                     __ptext111:
 22363                           	opt stack 0
 22364  0043C2                     _USART_mySetLineCodingHandler:
 22365                           	opt stack 14
 22366                           
 22367                           ;USBapp.c: 239: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 22368                           
 22369                           ; BSR set to: 1
 22370                           ;incstack = 0
 22371  0043C2  C1E2  F1F4         	movff	_cdc_notice,_line_coding
 22372  0043C6  C1E3  F1F5         	movff	_cdc_notice+1,_line_coding+1
 22373  0043CA  C1E4  F1F6         	movff	_cdc_notice+2,_line_coding+2
 22374  0043CE  C1E5  F1F7         	movff	_cdc_notice+3,_line_coding+3
 22375                           
 22376                           ;USBapp.c: 241: uint32_t dwBaud;
 22377                           ;USBapp.c: 242: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 22378  0043D2  6A2E               	clrf	___lldiv@dividend,c
 22379  0043D4  0E1B               	movlw	27
 22380  0043D6  6E2F               	movwf	___lldiv@dividend+1,c
 22381  0043D8  0EB7               	movlw	183
 22382  0043DA  6E30               	movwf	___lldiv@dividend+2,c
 22383  0043DC  6A31               	clrf	___lldiv@dividend+3,c
 22384  0043DE  C1F4  F032         	movff	_line_coding,___lldiv@divisor
 22385  0043E2  C1F5  F033         	movff	_line_coding+1,___lldiv@divisor+1
 22386  0043E6  C1F6  F034         	movff	_line_coding+2,___lldiv@divisor+2
 22387  0043EA  C1F7  F035         	movff	_line_coding+3,___lldiv@divisor+3
 22388  0043EE  EC20  F024         	call	___lldiv	;wreg free
 22389  0043F2  0EFF               	movlw	255
 22390  0043F4  242E               	addwf	?___lldiv,w,c
 22391  0043F6  6E3B               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 22392  0043F8  0EFF               	movlw	255
 22393  0043FA  202F               	addwfc	?___lldiv+1,w,c
 22394  0043FC  6E3C               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 22395  0043FE  0EFF               	movlw	255
 22396  004400  2030               	addwfc	?___lldiv+2,w,c
 22397  004402  6E3D               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 22398  004404  0EFF               	movlw	255
 22399  004406  2031               	addwfc	?___lldiv+3,w,c
 22400  004408  6E3E               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 22401                           
 22402                           ;USBapp.c: 243: SPBRG = (uint8_t) dwBaud;
 22403  00440A  C03B  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 22404                           
 22405                           ;USBapp.c: 244: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 22406  00440E  C03C  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 22407                           
 22408                           ;USBapp.c: 246: EUSART_Initialize();
 22409  004412  EF83  F01F         	goto	i2_EUSART_Initialize	;wreg free
 22410  004416                     __end_of_USART_mySetLineCodingHandler:
 22411                           	opt stack 0
 22412                           tosu	equ	0xFFF
 22413                           tosh	equ	0xFFE
 22414                           tosl	equ	0xFFD
 22415                           pclatu	equ	0xFFB
 22416                           pclath	equ	0xFFA
 22417                           tblptru	equ	0xFF8
 22418                           tblptrh	equ	0xFF7
 22419                           tblptrl	equ	0xFF6
 22420                           tablat	equ	0xFF5
 22421                           prodh	equ	0xFF4
 22422                           prodl	equ	0xFF3
 22423                           intcon	equ	0xFF2
 22424                           postinc0	equ	0xFEE
 22425                           wreg	equ	0xFE8
 22426                           indf1	equ	0xFE7
 22427                           fsr1h	equ	0xFE2
 22428                           fsr1l	equ	0xFE1
 22429                           indf2	equ	0xFDF
 22430                           postinc2	equ	0xFDE
 22431                           postdec2	equ	0xFDD
 22432                           plusw2	equ	0xFDB
 22433                           fsr2h	equ	0xFDA
 22434                           fsr2l	equ	0xFD9
 22435                           status	equ	0xFD8
 22436                           
 22437 ;; *************** function i2_EUSART_Initialize *****************
 22438 ;; Defined at:
 22439 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 22440 ;; Parameters:    Size  Location     Type
 22441 ;;		None
 22442 ;; Auto vars:     Size  Location     Type
 22443 ;;		None
 22444 ;; Return value:  Size  Location     Type
 22445 ;;                  1    wreg      void 
 22446 ;; Registers used:
 22447 ;;		wreg, status,2
 22448 ;; Tracked objects:
 22449 ;;		On entry : E/1
 22450 ;;		On exit  : F/1
 22451 ;;		Unchanged: 0/0
 22452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22453 ;;      Params:         0       0       0       0       0       0       0       0       0
 22454 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22455 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22456 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22457 ;;Total ram usage:        0 bytes
 22458 ;; Hardware stack levels used:    1
 22459 ;; This function calls:
 22460 ;;		Nothing
 22461 ;; This function is called by:
 22462 ;;		_USBapp_CdcEmulatorInitialize
 22463 ;;		_USART_mySetLineCodingHandler
 22464 ;; This function uses a non-reentrant model
 22465 ;;
 22466                           
 22467                           	psect	text112
 22468  003F06                     __ptext112:
 22469                           	opt stack 0
 22470  003F06                     i2_EUSART_Initialize:
 22471                           	opt stack 16
 22472                           
 22473                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 22474                           
 22475                           ; BSR set to: 1
 22476                           ;incstack = 0
 22477  003F06  9A9D               	bcf	3997,5,c	;volatile
 22478                           
 22479                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 22480  003F08  989D               	bcf	3997,4,c	;volatile
 22481                           
 22482                           ;eusart.c: 85: BAUDCON = 0x48;
 22483  003F0A  0E48               	movlw	72
 22484  003F0C  6EB8               	movwf	4024,c	;volatile
 22485                           
 22486                           ;eusart.c: 88: RCSTA = 0x90;
 22487  003F0E  0E90               	movlw	144
 22488  003F10  6EAB               	movwf	4011,c	;volatile
 22489                           
 22490                           ;eusart.c: 91: TXSTA = 0x26;
 22491  003F12  0E26               	movlw	38
 22492  003F14  6EAC               	movwf	4012,c	;volatile
 22493                           
 22494                           ;eusart.c: 95: SPBRG = 0x71;
 22495  003F16  0E71               	movlw	113
 22496  003F18  6EAF               	movwf	4015,c	;volatile
 22497                           
 22498                           ;eusart.c: 100: SPBRGH = 0x02;
 22499  003F1A  0E02               	movlw	2
 22500  003F1C  6EB0               	movwf	4016,c	;volatile
 22501                           
 22502                           ;eusart.c: 103: eusartTxHead = 0;
 22503  003F1E  6A24               	clrf	_eusartTxHead,c
 22504                           
 22505                           ;eusart.c: 104: eusartTxTail = 0;
 22506  003F20  6A25               	clrf	_eusartTxTail,c
 22507                           
 22508                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 22509  003F22  0E40               	movlw	64
 22510  003F24  6E23               	movwf	_eusartTxBufferRemaining,c	;volatile
 22511                           
 22512                           ;eusart.c: 107: eusartRxHead = 0;
 22513  003F26  0101               	movlb	1	; () banked
 22514  003F28  6B4E               	clrf	_eusartRxHead& (0+255),b
 22515                           
 22516                           ; BSR set to: 1
 22517                           ;eusart.c: 108: eusartRxTail = 0;
 22518  003F2A  6B4F               	clrf	_eusartRxTail& (0+255),b
 22519                           
 22520                           ; BSR set to: 1
 22521                           ;eusart.c: 109: eusartRxCount = 0;
 22522  003F2C  6A22               	clrf	_eusartRxCount,c	;volatile
 22523                           
 22524                           ; BSR set to: 1
 22525                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 22526  003F2E  8A9D               	bsf	3997,5,c	;volatile
 22527                           
 22528                           ; BSR set to: 1
 22529                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 22530  003F30  88AB               	bsf	4011,4,c	;volatile
 22531                           
 22532                           ; BSR set to: 1
 22533  003F32  0012               	return		;funcret
 22534  003F34                     __end_ofi2_EUSART_Initialize:
 22535                           	opt stack 0
 22536                           tosu	equ	0xFFF
 22537                           tosh	equ	0xFFE
 22538                           tosl	equ	0xFFD
 22539                           pclatu	equ	0xFFB
 22540                           pclath	equ	0xFFA
 22541                           tblptru	equ	0xFF8
 22542                           tblptrh	equ	0xFF7
 22543                           tblptrl	equ	0xFF6
 22544                           tablat	equ	0xFF5
 22545                           prodh	equ	0xFF4
 22546                           prodl	equ	0xFF3
 22547                           intcon	equ	0xFF2
 22548                           postinc0	equ	0xFEE
 22549                           wreg	equ	0xFE8
 22550                           indf1	equ	0xFE7
 22551                           fsr1h	equ	0xFE2
 22552                           fsr1l	equ	0xFE1
 22553                           indf2	equ	0xFDF
 22554                           postinc2	equ	0xFDE
 22555                           postdec2	equ	0xFDD
 22556                           plusw2	equ	0xFDB
 22557                           fsr2h	equ	0xFDA
 22558                           fsr2l	equ	0xFD9
 22559                           status	equ	0xFD8
 22560                           
 22561 ;; *************** function ___lldiv *****************
 22562 ;; Defined at:
 22563 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lldiv.c"
 22564 ;; Parameters:    Size  Location     Type
 22565 ;;  dividend        4    0[COMRAM] unsigned long 
 22566 ;;  divisor         4    4[COMRAM] unsigned long 
 22567 ;; Auto vars:     Size  Location     Type
 22568 ;;  quotient        4    8[COMRAM] unsigned long 
 22569 ;;  counter         1   12[COMRAM] unsigned char 
 22570 ;; Return value:  Size  Location     Type
 22571 ;;                  4    0[COMRAM] unsigned long 
 22572 ;; Registers used:
 22573 ;;		wreg, status,2, status,0
 22574 ;; Tracked objects:
 22575 ;;		On entry : E/1
 22576 ;;		On exit  : E/0
 22577 ;;		Unchanged: E/0
 22578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22579 ;;      Params:         8       0       0       0       0       0       0       0       0
 22580 ;;      Locals:         5       0       0       0       0       0       0       0       0
 22581 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22582 ;;      Totals:        13       0       0       0       0       0       0       0       0
 22583 ;;Total ram usage:       13 bytes
 22584 ;; Hardware stack levels used:    1
 22585 ;; This function calls:
 22586 ;;		Nothing
 22587 ;; This function is called by:
 22588 ;;		_USART_mySetLineCodingHandler
 22589 ;; This function uses a non-reentrant model
 22590 ;;
 22591                           
 22592                           	psect	text113
 22593  004840                     __ptext113:
 22594                           	opt stack 0
 22595  004840                     ___lldiv:
 22596                           	opt stack 14
 22597                           
 22598                           ; BSR set to: 1
 22599                           ;incstack = 0
 22600  004840  6A36               	clrf	___lldiv@quotient,c
 22601  004842  6A37               	clrf	___lldiv@quotient+1,c
 22602  004844  6A38               	clrf	___lldiv@quotient+2,c
 22603  004846  6A39               	clrf	___lldiv@quotient+3,c
 22604  004848  5032               	movf	___lldiv@divisor,w,c
 22605  00484A  1033               	iorwf	___lldiv@divisor+1,w,c
 22606  00484C  1034               	iorwf	___lldiv@divisor+2,w,c
 22607  00484E  1035               	iorwf	___lldiv@divisor+3,w,c
 22608  004850  E029               	bz	i2l2250
 22609  004852  0E01               	movlw	1
 22610  004854  6E3A               	movwf	___lldiv@counter,c
 22611  004856  D006               	goto	i2l6205
 22612  004858                     i2l6203:
 22613  004858  90D8               	bcf	status,0,c
 22614  00485A  3632               	rlcf	___lldiv@divisor,f,c
 22615  00485C  3633               	rlcf	___lldiv@divisor+1,f,c
 22616  00485E  3634               	rlcf	___lldiv@divisor+2,f,c
 22617  004860  3635               	rlcf	___lldiv@divisor+3,f,c
 22618  004862  2A3A               	incf	___lldiv@counter,f,c
 22619  004864                     i2l6205:
 22620  004864  AE35               	btfss	___lldiv@divisor+3,7,c
 22621  004866  D7F8               	goto	i2l6203
 22622  004868                     i2l6207:
 22623  004868  90D8               	bcf	status,0,c
 22624  00486A  3636               	rlcf	___lldiv@quotient,f,c
 22625  00486C  3637               	rlcf	___lldiv@quotient+1,f,c
 22626  00486E  3638               	rlcf	___lldiv@quotient+2,f,c
 22627  004870  3639               	rlcf	___lldiv@quotient+3,f,c
 22628  004872  5032               	movf	___lldiv@divisor,w,c
 22629  004874  5C2E               	subwf	___lldiv@dividend,w,c
 22630  004876  5033               	movf	___lldiv@divisor+1,w,c
 22631  004878  582F               	subwfb	___lldiv@dividend+1,w,c
 22632  00487A  5034               	movf	___lldiv@divisor+2,w,c
 22633  00487C  5830               	subwfb	___lldiv@dividend+2,w,c
 22634  00487E  5035               	movf	___lldiv@divisor+3,w,c
 22635  004880  5831               	subwfb	___lldiv@dividend+3,w,c
 22636  004882  E309               	bnc	i2l6215
 22637  004884  5032               	movf	___lldiv@divisor,w,c
 22638  004886  5E2E               	subwf	___lldiv@dividend,f,c
 22639  004888  5033               	movf	___lldiv@divisor+1,w,c
 22640  00488A  5A2F               	subwfb	___lldiv@dividend+1,f,c
 22641  00488C  5034               	movf	___lldiv@divisor+2,w,c
 22642  00488E  5A30               	subwfb	___lldiv@dividend+2,f,c
 22643  004890  5035               	movf	___lldiv@divisor+3,w,c
 22644  004892  5A31               	subwfb	___lldiv@dividend+3,f,c
 22645  004894  8036               	bsf	___lldiv@quotient,0,c
 22646  004896                     i2l6215:
 22647  004896  90D8               	bcf	status,0,c
 22648  004898  3235               	rrcf	___lldiv@divisor+3,f,c
 22649  00489A  3234               	rrcf	___lldiv@divisor+2,f,c
 22650  00489C  3233               	rrcf	___lldiv@divisor+1,f,c
 22651  00489E  3232               	rrcf	___lldiv@divisor,f,c
 22652  0048A0  2E3A               	decfsz	___lldiv@counter,f,c
 22653  0048A2  D7E2               	goto	i2l6207
 22654  0048A4                     i2l2250:
 22655  0048A4  C036  F02E         	movff	___lldiv@quotient,?___lldiv
 22656  0048A8  C037  F02F         	movff	___lldiv@quotient+1,?___lldiv+1
 22657  0048AC  C038  F030         	movff	___lldiv@quotient+2,?___lldiv+2
 22658  0048B0  C039  F031         	movff	___lldiv@quotient+3,?___lldiv+3
 22659  0048B4  0012               	return		;funcret
 22660  0048B6                     __end_of___lldiv:
 22661                           	opt stack 0
 22662                           tosu	equ	0xFFF
 22663                           tosh	equ	0xFFE
 22664                           tosl	equ	0xFFD
 22665                           pclatu	equ	0xFFB
 22666                           pclath	equ	0xFFA
 22667                           tblptru	equ	0xFF8
 22668                           tblptrh	equ	0xFF7
 22669                           tblptrl	equ	0xFF6
 22670                           tablat	equ	0xFF5
 22671                           prodh	equ	0xFF4
 22672                           prodl	equ	0xFF3
 22673                           intcon	equ	0xFF2
 22674                           postinc0	equ	0xFEE
 22675                           wreg	equ	0xFE8
 22676                           indf1	equ	0xFE7
 22677                           fsr1h	equ	0xFE2
 22678                           fsr1l	equ	0xFE1
 22679                           indf2	equ	0xFDF
 22680                           postinc2	equ	0xFDE
 22681                           postdec2	equ	0xFDD
 22682                           plusw2	equ	0xFDB
 22683                           fsr2h	equ	0xFDA
 22684                           fsr2l	equ	0xFD9
 22685                           status	equ	0xFD8
 22686                           
 22687 ;; *************** function _TMRapp_Tick *****************
 22688 ;; Defined at:
 22689 ;;		line 10 in file "../Includes/Drivers/TMRapp.c"
 22690 ;; Parameters:    Size  Location     Type
 22691 ;;		None
 22692 ;; Auto vars:     Size  Location     Type
 22693 ;;		None
 22694 ;; Return value:  Size  Location     Type
 22695 ;;                  1    wreg      void 
 22696 ;; Registers used:
 22697 ;;		None
 22698 ;; Tracked objects:
 22699 ;;		On entry : 0/0
 22700 ;;		On exit  : F/0
 22701 ;;		Unchanged: 0/0
 22702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22703 ;;      Params:         0       0       0       0       0       0       0       0       0
 22704 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22705 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22706 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22707 ;;Total ram usage:        0 bytes
 22708 ;; Hardware stack levels used:    1
 22709 ;; This function calls:
 22710 ;;		Nothing
 22711 ;; This function is called by:
 22712 ;;		_INTERRUPT_InterruptManager
 22713 ;; This function uses a non-reentrant model
 22714 ;;
 22715                           
 22716                           	psect	text114
 22717  003B0C                     __ptext114:
 22718                           	opt stack 0
 22719  003B0C                     _TMRapp_Tick:
 22720                           	opt stack 19
 22721                           
 22722                           ;TMRapp.c: 13: appTimer.mSecTick = 1;
 22723                           
 22724                           ;incstack = 0
 22725  003B0C  0100               	movlb	0	; () banked
 22726  003B0E  81F5               	bsf	_appTimer& (0+255),0,b
 22727                           
 22728                           ; BSR set to: 0
 22729  003B10  0012               	return		;funcret
 22730  003B12                     __end_of_TMRapp_Tick:
 22731                           	opt stack 0
 22732                           tosu	equ	0xFFF
 22733                           tosh	equ	0xFFE
 22734                           tosl	equ	0xFFD
 22735                           pclatu	equ	0xFFB
 22736                           pclath	equ	0xFFA
 22737                           tblptru	equ	0xFF8
 22738                           tblptrh	equ	0xFF7
 22739                           tblptrl	equ	0xFF6
 22740                           tablat	equ	0xFF5
 22741                           prodh	equ	0xFF4
 22742                           prodl	equ	0xFF3
 22743                           intcon	equ	0xFF2
 22744                           postinc0	equ	0xFEE
 22745                           wreg	equ	0xFE8
 22746                           indf1	equ	0xFE7
 22747                           fsr1h	equ	0xFE2
 22748                           fsr1l	equ	0xFE1
 22749                           indf2	equ	0xFDF
 22750                           postinc2	equ	0xFDE
 22751                           postdec2	equ	0xFDD
 22752                           plusw2	equ	0xFDB
 22753                           fsr2h	equ	0xFDA
 22754                           fsr2l	equ	0xFD9
 22755                           status	equ	0xFD8
 22756                           
 22757 ;; *************** function _TMR1_ISR *****************
 22758 ;; Defined at:
 22759 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 22760 ;; Parameters:    Size  Location     Type
 22761 ;;		None
 22762 ;; Auto vars:     Size  Location     Type
 22763 ;;		None
 22764 ;; Return value:  Size  Location     Type
 22765 ;;                  1    wreg      void 
 22766 ;; Registers used:
 22767 ;;		None
 22768 ;; Tracked objects:
 22769 ;;		On entry : 0/0
 22770 ;;		On exit  : 0/0
 22771 ;;		Unchanged: 0/0
 22772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22773 ;;      Params:         0       0       0       0       0       0       0       0       0
 22774 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22775 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22776 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22777 ;;Total ram usage:        0 bytes
 22778 ;; Hardware stack levels used:    1
 22779 ;; This function calls:
 22780 ;;		Nothing
 22781 ;; This function is called by:
 22782 ;;		_INTERRUPT_InterruptManager
 22783 ;; This function uses a non-reentrant model
 22784 ;;
 22785                           
 22786                           	psect	text115
 22787  003B34                     __ptext115:
 22788                           	opt stack 0
 22789  003B34                     _TMR1_ISR:
 22790                           	opt stack 19
 22791                           
 22792                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 22793                           
 22794                           ; BSR set to: 0
 22795                           ;incstack = 0
 22796  003B34  909E               	bcf	3998,0,c	;volatile
 22797                           
 22798                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 22799  003B36  C13C  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 22800                           
 22801                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 22802  003B3A  C13B  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 22803  003B3E  0012               	return		;funcret
 22804  003B40                     __end_of_TMR1_ISR:
 22805                           	opt stack 0
 22806                           tosu	equ	0xFFF
 22807                           tosh	equ	0xFFE
 22808                           tosl	equ	0xFFD
 22809                           pclatu	equ	0xFFB
 22810                           pclath	equ	0xFFA
 22811                           tblptru	equ	0xFF8
 22812                           tblptrh	equ	0xFF7
 22813                           tblptrl	equ	0xFF6
 22814                           tablat	equ	0xFF5
 22815                           prodh	equ	0xFF4
 22816                           prodl	equ	0xFF3
 22817                           intcon	equ	0xFF2
 22818                           postinc0	equ	0xFEE
 22819                           wreg	equ	0xFE8
 22820                           indf1	equ	0xFE7
 22821                           fsr1h	equ	0xFE2
 22822                           fsr1l	equ	0xFE1
 22823                           indf2	equ	0xFDF
 22824                           postinc2	equ	0xFDE
 22825                           postdec2	equ	0xFDD
 22826                           plusw2	equ	0xFDB
 22827                           fsr2h	equ	0xFDA
 22828                           fsr2l	equ	0xFD9
 22829                           status	equ	0xFD8
 22830                           
 22831 ;; *************** function _EUSART_Transmit_ISR *****************
 22832 ;; Defined at:
 22833 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 22834 ;; Parameters:    Size  Location     Type
 22835 ;;		None
 22836 ;; Auto vars:     Size  Location     Type
 22837 ;;		None
 22838 ;; Return value:  Size  Location     Type
 22839 ;;                  1    wreg      void 
 22840 ;; Registers used:
 22841 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22842 ;; Tracked objects:
 22843 ;;		On entry : 0/0
 22844 ;;		On exit  : 0/0
 22845 ;;		Unchanged: 0/0
 22846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22847 ;;      Params:         0       0       0       0       0       0       0       0       0
 22848 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22849 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22850 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22851 ;;Total ram usage:        0 bytes
 22852 ;; Hardware stack levels used:    1
 22853 ;; This function calls:
 22854 ;;		Nothing
 22855 ;; This function is called by:
 22856 ;;		_INTERRUPT_InterruptManager
 22857 ;; This function uses a non-reentrant model
 22858 ;;
 22859                           
 22860                           	psect	text116
 22861  003DE4                     __ptext116:
 22862                           	opt stack 0
 22863  003DE4                     _EUSART_Transmit_ISR:
 22864                           	opt stack 19
 22865                           
 22866                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 22867                           
 22868                           ;incstack = 0
 22869  003DE4  0E40               	movlw	64
 22870  003DE6  6023               	cpfslt	_eusartTxBufferRemaining,c
 22871  003DE8  D00F               	goto	i2l942
 22872                           
 22873                           ;eusart.c: 167: {
 22874                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 22875  003DEA  0E40               	movlw	low _eusartTxBuffer
 22876  003DEC  2425               	addwf	_eusartTxTail,w,c
 22877  003DEE  6ED9               	movwf	fsr2l,c
 22878  003DF0  6ADA               	clrf	fsr2h,c
 22879  003DF2  0E02               	movlw	high _eusartTxBuffer
 22880  003DF4  22DA               	addwfc	fsr2h,f,c
 22881  003DF6  50DF               	movf	indf2,w,c
 22882  003DF8  6EAD               	movwf	4013,c	;volatile
 22883  003DFA  2A25               	incf	_eusartTxTail,f,c
 22884                           
 22885                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 22886  003DFC  0E3F               	movlw	63
 22887  003DFE  6425               	cpfsgt	_eusartTxTail,c
 22888  003E00  D001               	goto	i2l8969
 22889                           
 22890                           ;eusart.c: 170: {
 22891                           ;eusart.c: 171: eusartTxTail = 0;
 22892  003E02  6A25               	clrf	_eusartTxTail,c
 22893  003E04                     i2l8969:
 22894                           
 22895                           ;eusart.c: 172: }
 22896                           ;eusart.c: 173: eusartTxBufferRemaining++;
 22897  003E04  2A23               	incf	_eusartTxBufferRemaining,f,c	;volatile
 22898                           
 22899                           ;eusart.c: 174: }
 22900  003E06  0012               	return	
 22901  003E08                     i2l942:
 22902                           
 22903                           ;eusart.c: 175: else
 22904                           ;eusart.c: 176: {
 22905                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 22906  003E08  989D               	bcf	3997,4,c	;volatile
 22907  003E0A  0012               	return		;funcret
 22908  003E0C                     __end_of_EUSART_Transmit_ISR:
 22909                           	opt stack 0
 22910                           tosu	equ	0xFFF
 22911                           tosh	equ	0xFFE
 22912                           tosl	equ	0xFFD
 22913                           pclatu	equ	0xFFB
 22914                           pclath	equ	0xFFA
 22915                           tblptru	equ	0xFF8
 22916                           tblptrh	equ	0xFF7
 22917                           tblptrl	equ	0xFF6
 22918                           tablat	equ	0xFF5
 22919                           prodh	equ	0xFF4
 22920                           prodl	equ	0xFF3
 22921                           intcon	equ	0xFF2
 22922                           postinc0	equ	0xFEE
 22923                           wreg	equ	0xFE8
 22924                           indf1	equ	0xFE7
 22925                           fsr1h	equ	0xFE2
 22926                           fsr1l	equ	0xFE1
 22927                           indf2	equ	0xFDF
 22928                           postinc2	equ	0xFDE
 22929                           postdec2	equ	0xFDD
 22930                           plusw2	equ	0xFDB
 22931                           fsr2h	equ	0xFDA
 22932                           fsr2l	equ	0xFD9
 22933                           status	equ	0xFD8
 22934                           
 22935 ;; *************** function _EUSART_Receive_ISR *****************
 22936 ;; Defined at:
 22937 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 22938 ;; Parameters:    Size  Location     Type
 22939 ;;		None
 22940 ;; Auto vars:     Size  Location     Type
 22941 ;;		None
 22942 ;; Return value:  Size  Location     Type
 22943 ;;                  1    wreg      void 
 22944 ;; Registers used:
 22945 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22946 ;; Tracked objects:
 22947 ;;		On entry : 0/0
 22948 ;;		On exit  : 0/0
 22949 ;;		Unchanged: 0/0
 22950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22951 ;;      Params:         0       0       0       0       0       0       0       0       0
 22952 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22953 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22954 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22955 ;;Total ram usage:        0 bytes
 22956 ;; Hardware stack levels used:    1
 22957 ;; This function calls:
 22958 ;;		Nothing
 22959 ;; This function is called by:
 22960 ;;		_INTERRUPT_InterruptManager
 22961 ;; This function uses a non-reentrant model
 22962 ;;
 22963                           
 22964                           	psect	text117
 22965  003E5C                     __ptext117:
 22966                           	opt stack 0
 22967  003E5C                     _EUSART_Receive_ISR:
 22968                           	opt stack 19
 22969                           
 22970                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 22971                           
 22972                           ;incstack = 0
 22973  003E5C  A2AB               	btfss	4011,1,c	;volatile
 22974  003E5E  D003               	goto	i2l8975
 22975                           
 22976                           ;eusart.c: 184: {
 22977                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 22978  003E60  98AB               	bcf	4011,4,c	;volatile
 22979                           
 22980                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 22981  003E62  88AB               	bsf	4011,4,c	;volatile
 22982                           
 22983                           ;eusart.c: 189: }
 22984  003E64  0012               	return	
 22985  003E66                     i2l8975:
 22986                           
 22987                           ;eusart.c: 190: else
 22988                           ;eusart.c: 191: {
 22989                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 22990  003E66  0E00               	movlw	low _eusartRxBuffer
 22991  003E68  0101               	movlb	1	; () banked
 22992  003E6A  254E               	addwf	_eusartRxHead& (0+255),w,b
 22993  003E6C  6ED9               	movwf	fsr2l,c
 22994  003E6E  6ADA               	clrf	fsr2h,c
 22995  003E70  0E02               	movlw	high _eusartRxBuffer
 22996  003E72  22DA               	addwfc	fsr2h,f,c
 22997  003E74  CFAE FFDF          	movff	4014,indf2	;volatile
 22998                           
 22999                           ; BSR set to: 1
 23000  003E78  2B4E               	incf	_eusartRxHead& (0+255),f,b
 23001                           
 23002                           ; BSR set to: 1
 23003                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 23004  003E7A  0E3F               	movlw	63
 23005  003E7C  654E               	cpfsgt	_eusartRxHead& (0+255),b
 23006  003E7E  D001               	goto	i2l8983
 23007                           
 23008                           ; BSR set to: 1
 23009                           ;eusart.c: 195: {
 23010                           ;eusart.c: 196: eusartRxHead = 0;
 23011  003E80  6B4E               	clrf	_eusartRxHead& (0+255),b
 23012  003E82                     i2l8983:
 23013                           
 23014                           ; BSR set to: 1
 23015                           ;eusart.c: 197: }
 23016                           ;eusart.c: 198: eusartRxCount++;
 23017  003E82  2A22               	incf	_eusartRxCount,f,c	;volatile
 23018  003E84  0012               	return		;funcret
 23019  003E86                     __end_of_EUSART_Receive_ISR:
 23020                           	opt stack 0
 23021                           tosu	equ	0xFFF
 23022                           tosh	equ	0xFFE
 23023                           tosl	equ	0xFFD
 23024                           pclatu	equ	0xFFB
 23025                           pclath	equ	0xFFA
 23026                           tblptru	equ	0xFF8
 23027                           tblptrh	equ	0xFF7
 23028                           tblptrl	equ	0xFF6
 23029                           tablat	equ	0xFF5
 23030                           prodh	equ	0xFF4
 23031                           prodl	equ	0xFF3
 23032                           intcon	equ	0xFF2
 23033                           postinc0	equ	0xFEE
 23034                           wreg	equ	0xFE8
 23035                           indf1	equ	0xFE7
 23036                           fsr1h	equ	0xFE2
 23037                           fsr1l	equ	0xFE1
 23038                           indf2	equ	0xFDF
 23039                           postinc2	equ	0xFDE
 23040                           postdec2	equ	0xFDD
 23041                           plusw2	equ	0xFDB
 23042                           fsr2h	equ	0xFDA
 23043                           fsr2l	equ	0xFD9
 23044                           status	equ	0xFD8
 23045                           
 23046 ;; *************** function _CMP1_ISR *****************
 23047 ;; Defined at:
 23048 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 23049 ;; Parameters:    Size  Location     Type
 23050 ;;		None
 23051 ;; Auto vars:     Size  Location     Type
 23052 ;;		None
 23053 ;; Return value:  Size  Location     Type
 23054 ;;                  1    wreg      void 
 23055 ;; Registers used:
 23056 ;;		None
 23057 ;; Tracked objects:
 23058 ;;		On entry : 0/0
 23059 ;;		On exit  : 0/0
 23060 ;;		Unchanged: 0/0
 23061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23062 ;;      Params:         0       0       0       0       0       0       0       0       0
 23063 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23064 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23065 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23066 ;;Total ram usage:        0 bytes
 23067 ;; Hardware stack levels used:    1
 23068 ;; This function calls:
 23069 ;;		Nothing
 23070 ;; This function is called by:
 23071 ;;		_INTERRUPT_InterruptManager
 23072 ;; This function uses a non-reentrant model
 23073 ;;
 23074                           
 23075                           	psect	text118
 23076  003AF8                     __ptext118:
 23077                           	opt stack 0
 23078  003AF8                     _CMP1_ISR:
 23079                           	opt stack 19
 23080                           
 23081                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 23082                           
 23083                           ;incstack = 0
 23084  003AF8  9CA1               	bcf	4001,6,c	;volatile
 23085  003AFA  0012               	return		;funcret
 23086  003AFC                     __end_of_CMP1_ISR:
 23087                           	opt stack 0
 23088                           tosu	equ	0xFFF
 23089                           tosh	equ	0xFFE
 23090                           tosl	equ	0xFFD
 23091                           pclatu	equ	0xFFB
 23092                           pclath	equ	0xFFA
 23093                           tblptru	equ	0xFF8
 23094                           tblptrh	equ	0xFF7
 23095                           tblptrl	equ	0xFF6
 23096                           tablat	equ	0xFF5
 23097                           prodh	equ	0xFF4
 23098                           prodl	equ	0xFF3
 23099                           intcon	equ	0xFF2
 23100                           postinc0	equ	0xFEE
 23101                           wreg	equ	0xFE8
 23102                           indf1	equ	0xFE7
 23103                           fsr1h	equ	0xFE2
 23104                           fsr1l	equ	0xFE1
 23105                           indf2	equ	0xFDF
 23106                           postinc2	equ	0xFDE
 23107                           postdec2	equ	0xFDD
 23108                           plusw2	equ	0xFDB
 23109                           fsr2h	equ	0xFDA
 23110                           fsr2l	equ	0xFD9
 23111                           status	equ	0xFD8
 23112                           tosu	equ	0xFFF
 23113                           tosh	equ	0xFFE
 23114                           tosl	equ	0xFFD
 23115                           pclatu	equ	0xFFB
 23116                           pclath	equ	0xFFA
 23117                           tblptru	equ	0xFF8
 23118                           tblptrh	equ	0xFF7
 23119                           tblptrl	equ	0xFF6
 23120                           tablat	equ	0xFF5
 23121                           prodh	equ	0xFF4
 23122                           prodl	equ	0xFF3
 23123                           intcon	equ	0xFF2
 23124                           postinc0	equ	0xFEE
 23125                           wreg	equ	0xFE8
 23126                           indf1	equ	0xFE7
 23127                           fsr1h	equ	0xFE2
 23128                           fsr1l	equ	0xFE1
 23129                           indf2	equ	0xFDF
 23130                           postinc2	equ	0xFDE
 23131                           postdec2	equ	0xFDD
 23132                           plusw2	equ	0xFDB
 23133                           fsr2h	equ	0xFDA
 23134                           fsr2l	equ	0xFD9
 23135                           status	equ	0xFD8
 23136                           
 23137                           	psect	text119
 23138  000000                     __ptext119:
 23139                           	opt stack 0
 23140                           tosu	equ	0xFFF
 23141                           tosh	equ	0xFFE
 23142                           tosl	equ	0xFFD
 23143                           pclatu	equ	0xFFB
 23144                           pclath	equ	0xFFA
 23145                           tblptru	equ	0xFF8
 23146                           tblptrh	equ	0xFF7
 23147                           tblptrl	equ	0xFF6
 23148                           tablat	equ	0xFF5
 23149                           prodh	equ	0xFF4
 23150                           prodl	equ	0xFF3
 23151                           intcon	equ	0xFF2
 23152                           postinc0	equ	0xFEE
 23153                           wreg	equ	0xFE8
 23154                           indf1	equ	0xFE7
 23155                           fsr1h	equ	0xFE2
 23156                           fsr1l	equ	0xFE1
 23157                           indf2	equ	0xFDF
 23158                           postinc2	equ	0xFDE
 23159                           postdec2	equ	0xFDD
 23160                           plusw2	equ	0xFDB
 23161                           fsr2h	equ	0xFDA
 23162                           fsr2l	equ	0xFD9
 23163                           status	equ	0xFD8
 23164                           
 23165                           	psect	rparam
 23166  0000                     tosu	equ	0xFFF
 23167                           tosh	equ	0xFFE
 23168                           tosl	equ	0xFFD
 23169                           pclatu	equ	0xFFB
 23170                           pclath	equ	0xFFA
 23171                           tblptru	equ	0xFF8
 23172                           tblptrh	equ	0xFF7
 23173                           tblptrl	equ	0xFF6
 23174                           tablat	equ	0xFF5
 23175                           prodh	equ	0xFF4
 23176                           prodl	equ	0xFF3
 23177                           intcon	equ	0xFF2
 23178                           postinc0	equ	0xFEE
 23179                           wreg	equ	0xFE8
 23180                           indf1	equ	0xFE7
 23181                           fsr1h	equ	0xFE2
 23182                           fsr1l	equ	0xFE1
 23183                           indf2	equ	0xFDF
 23184                           postinc2	equ	0xFDE
 23185                           postdec2	equ	0xFDD
 23186                           plusw2	equ	0xFDB
 23187                           fsr2h	equ	0xFDA
 23188                           fsr2l	equ	0xFD9
 23189                           status	equ	0xFD8
 23190                           
 23191                           	psect	temp
 23192  00005A                     btemp:
 23193                           	opt stack 0
 23194  00005A                     	ds	1
 23195  0000                     int$flags	set	btemp
 23196                           tosu	equ	0xFFF
 23197                           tosh	equ	0xFFE
 23198                           tosl	equ	0xFFD
 23199                           pclatu	equ	0xFFB
 23200                           pclath	equ	0xFFA
 23201                           tblptru	equ	0xFF8
 23202                           tblptrh	equ	0xFF7
 23203                           tblptrl	equ	0xFF6
 23204                           tablat	equ	0xFF5
 23205                           prodh	equ	0xFF4
 23206                           prodl	equ	0xFF3
 23207                           intcon	equ	0xFF2
 23208                           postinc0	equ	0xFEE
 23209                           wreg	equ	0xFE8
 23210                           indf1	equ	0xFE7
 23211                           fsr1h	equ	0xFE2
 23212                           fsr1l	equ	0xFE1
 23213                           indf2	equ	0xFDF
 23214                           postinc2	equ	0xFDE
 23215                           postdec2	equ	0xFDD
 23216                           plusw2	equ	0xFDB
 23217                           fsr2h	equ	0xFDA
 23218                           fsr2l	equ	0xFD9
 23219                           status	equ	0xFD8


Data Sizes:
    Strings     1189
    Constant    987
    Data        4
    BSS         431
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      89
    BANK0           160    148     155
    BANK1           256      0     255
    BANK2           256      9     137
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_79(CODE[12]), STR_78(CODE[3]), STR_66(CODE[3]), STR_63(CODE[3]), 
		 -> STR_60(CODE[3]), STR_57(CODE[3]), STR_54(CODE[3]), STR_51(CODE[3]), 
		 -> STR_48(CODE[3]), STR_45(CODE[3]), STR_42(CODE[3]), STR_39(CODE[3]), 
		 -> STR_36(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_76(CODE[6]), STR_73(CODE[24]), STR_70(CODE[32]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> moteJoiningProcess@buf(BANK0[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5283_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5283_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5283_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5283_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4006$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S3996$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3996$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3972$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3972$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3972$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3972$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> oled_putUint16@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_107(CODE[12]), STR_106(CODE[8]), 
		 -> STR_105(CODE[9]), STR_87(CODE[2]), STR_86(CODE[16]), STR_85(CODE[13]), 
		 -> STR_84(CODE[12]), STR_83(CODE[17]), STR_82(CODE[9]), STR_81(CODE[1]), 
		 -> STR_77(CODE[16]), STR_75(CODE[11]), STR_74(CODE[12]), STR_71(CODE[11]), 
		 -> moteJoiningProcess@buf(BANK0[50]), STR_69(CODE[15]), STR_68(CODE[16]), STR_65(CODE[7]), 
		 -> STR_62(CODE[9]), STR_59(CODE[8]), STR_56(CODE[7]), STR_53(CODE[8]), 
		 -> STR_50(CODE[10]), STR_47(CODE[9]), STR_44(CODE[10]), STR_41(CODE[7]), 
		 -> STR_38(CODE[8]), STR_35(CODE[8]), modemResonseBuffer(BANK1[64]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[8]), STR_28(CODE[17]), STR_27(CODE[17]), 
		 -> STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[9]), STR_23(CODE[10]), 
		 -> STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), 
		 -> STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), 
		 -> STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 12
		 -> dataBuffer(BANK1[12]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_88(CODE[10]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_104(CODE[26]), STR_103(CODE[26]), STR_102(CODE[26]), STR_101(CODE[26]), 
		 -> STR_100(CODE[1]), STR_99(CODE[9]), STR_98(CODE[13]), STR_97(CODE[13]), 
		 -> STR_96(CODE[13]), STR_95(CODE[13]), STR_94(CODE[13]), STR_93(CODE[13]), 
		 -> STR_92(CODE[13]), STR_91(CODE[13]), STR_90(CODE[16]), STR_89(CODE[15]), 
		 -> STR_80(CODE[10]), STR_72(CODE[11]), moteJoiningProcess@buf(BANK0[50]), STR_67(CODE[10]), 
		 -> STR_64(CODE[17]), STR_61(CODE[18]), STR_58(CODE[16]), STR_55(CODE[17]), 
		 -> STR_52(CODE[17]), STR_49(CODE[18]), STR_46(CODE[20]), STR_43(CODE[20]), 
		 -> STR_40(CODE[18]), STR_37(CODE[17]), STR_34(CODE[19]), STR_29(CODE[12]), 
		 -> STR_22(CODE[20]), STR_21(CODE[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _moteHandler->_moteJoiningProcess
    _moteRunningProcess->_oled_putUint16
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _oled_putUint16->_oled_putString
    _moteApp_add8bToDataBuffer->___lbdiv
    _moteApp_add8bToDataBuffer->___lbmod
    _moteApp_add16bToDataBuffer->___lwmod
    _oled_displayOff->_oled_writeCommand
    _modemSleep->_moteApp_delayms
    _modemResync->_moteApp_delayms
    _MOTEapp_getModemResponse->_EUSART_Read
    _ADC_TempConversion->___lwdiv
    _moteJoiningProcess->___fltol
    _sprintf->___lwmod
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_writeCommand
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _TMRapp_Handler->___lwmod
    ___lwmod->___lwdiv
    _USBapp_Handler->_oled_putString
    _oled_putString->_oled_putChar
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _oled_writeData->_SPI_Exchange8bit
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _oled_writeCommand->_SPI_Exchange8bit
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  257033
                    _DATAEE_ReadByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                        _modemResync
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                         11    11      0  193346
                                            146 BANK0      2     2      0
                                              0 BANK2      9     9      0
                  _ADC_GetConversion
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
           _MOTEapp_getModemResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                    _moteApp_delayms
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  11     8      3  108983
                                             28 BANK0      9     6      3
                  _ADC_GetConversion
                 _ADC_TempConversion
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
                    _sendDataCommand
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1012
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     158
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   21767
                                             18 BANK0      9     7      2
                            ___lbdiv
                            ___lbmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint16                                      10     6      4   26943
                                             18 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 3     3      0     297
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            2     1      1    1975
                                              4 BANK0      2     1      1
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     856
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     657
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           3     0      3    7159
                                             12 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   20433
                                             15 BANK0      1     1      0
                 _EUSART_FlushBuffer
                  _EUSART_Initialize
             _PIN_MANAGER_Initialize
                        _modemResync
                         _modemSleep
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      93
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _modemSleep                                           0     0      0    9213
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _modemResync                                          3     3      0    9491
                                              5 BANK0      3     3      0
           _MOTEapp_getModemResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (5) _MOTEapp_getModemResponse                             2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   2     2      0    2594
                                              7 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                  72    71      1   50622
                                             74 BANK0     72    71      1
                  _ADC_GetConversion
                   _DATAEE_WriteByte
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _moteApp_delayms
                         _nibble2int
                         _oled_clear
                          _oled_init
                     _oled_putString
                        _sendCommand
                            _sprintf
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     1      6     443
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               9     5      4    2459
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             35    23     12    9159
                                             12 BANK0     26    14     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     440
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    2529
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _sendCommand                                          2     0      2    3509
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (4) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1512
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0      62
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _nibble2int                                           1     1      0     279
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_delayms                                      5     3      2    5704
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     580
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     441
                                             64 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2749
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1960
                                             39 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     200
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3976
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3976
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       0     0      0   25042
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _oled_putString                                       5     1      4   19296
                                             13 BANK0      5     1      4
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_clear                                           0     0      0    1188
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (3) _oled_clearRow                                        2     2      0    1188
                                             13 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_putChar                                        10     8      2    1058
                                              3 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (3) _oled_writeData                                       1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _Set_Page_Address                                     1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _Set_Column_Address                                   1     1      0     124
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_writeCommand                                    1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bit                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4558
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     209
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2146
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         4     4      0    2104
                                              7 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1866
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   30065
                                             32 COMRAM    12    12      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (12) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   30065
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   17700
                                             28 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             7     7      0    4286
                                             21 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (14) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     500
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     500
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     501
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _USART_mySetLineCodingHandler                        4     4      0     386
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (12) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _USBapp_handlerState
   _modemResync
     _MOTEapp_getModemResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_GetConversion
     _ADC_TempConversion
       ___lwdiv
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModemResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___lwmod
         ___lwdiv (ARG)
     _moteApp_delayms
     _moteJoiningProcess
       _ADC_GetConversion
       _DATAEE_WriteByte
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _moteApp_delayms
       _nibble2int
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_init
         _oled_clear
           _oled_clearRow
             _oled_putChar
               _Set_Column_Address
                 _oled_writeCommand
                   _SPI_Exchange8bit
               _Set_Page_Address
                 _oled_writeCommand
                   _SPI_Exchange8bit
               _oled_writeData
                 _SPI_Exchange8bit
         _oled_devInit
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_setDisplay
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_setFont
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _EUSART_Initialize
         _PIN_MANAGER_Initialize
         _modemResync
           _MOTEapp_getModemResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _modemSleep
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_displayOff
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _Set_Page_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _oled_writeData
                   _SPI_Exchange8bit
           _oled_devInit
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setDisplay
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _moteApp_add8bToDataBuffer
         ___lbdiv
         ___lbmod
       _moteApp_clearBuffers
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_devInit
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setDisplay
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setFont
   _oled_putString
     _oled_putChar
       _Set_Column_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _Set_Page_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _oled_writeData
         _SPI_Exchange8bit

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      9      89       9       53.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     94      9B       5       96.9%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      59       1       94.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     27C      14        0.0%
DATA                 0      0     27C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri Apr 22 22:01:27 2016

                            _SPI_Initialize 3B64                                  _USB_SD_Ptr 7791  
                              ___fldiv@aexp 009F                                ___fldiv@bexp 009E  
                              ___fldiv@sign 0093                 ?_moteApp_add16bToDataBuffer 006C  
                                        l50 539E                           ??_CMP1_Initialize 0060  
                                _USB_Buffer 0156                         moteRunningProcess@i 0083  
                             _USBDeviceInit 5800                         ___wmul@multiplicand 0062  
                   EUSART_FlushBuffer@index 0060                      __end_of_oled_writeData 3B58  
                        __size_of_CDCInitEP 0054                    USBapp_handlerState@state 0060  
                              __CFG_CP0$OFF 000000                      moteJoiningProcess@batt 00EF  
                              __CFG_CP1$OFF 000000                                __CFG_CP2$OFF 000000  
                              __CFG_CP3$OFF 000000                      moteJoiningProcess@mode 0141  
      USER_USB_CALLBACK_EVENT_HANDLER@event 003B        USER_USB_CALLBACK_EVENT_HANDLER@pdata 003D  
                                       l302 45EE                                         l305 4628  
                                       l314 3D00                 __end_of_USBStdGetDscHandler 5BC4  
                                       l342 63F4                                         l432 736E  
                                       l328 6336                                         l370 6E78  
                                       l365 6E70                                         l606 3E28  
                                       l454 76F0                                         l439 7494  
                                       l712 51CA                                         l379 6F4E  
                                       l574 46FC                                         l488 62DC  
                                       l690 492E                                         _BDT 000400  
                                       l774 44EC                                         l927 3FC4  
                                       _CKE 007E3E                                         l936 4008  
                                       l697 499C                                         _CKP 007E34  
                                       _GIE 007F97                                __CFG_CPB$OFF 000000  
                                       _PR2 000FBB                                __CFG_CPD$OFF 000000  
                        _moteJoiningProcess 6E5C                                         _UIE 000F64  
                                       _UIR 000F65                             _timer1ReloadVal 013B  
                                _USBSuspend 3C5C                __end_of_moteApp_clearBuffers 4322  
                      USBStdSetCfgHandler@i 0043                             _TMR2_Initialize 3B72  
                                       prod 000FF3                                         tosl 000FFD  
                                       wreg 000FE8                              _USBDeviceTasks 5BC4  
                            _USBDeviceState 00F4                                ___flmul@aexp 007B  
                              ___flmul@bexp 007C                                ___flmul@sign 007A  
                              ___flmul@temp 0085                                ___flmul@prod 0081  
                     moteApp_delayms@length 0060                       ??_USBCtrlTrfRxService 003F  
                  __size_ofi2_USBDeviceInit 00E4                              ??_getsUSBUSART 006A  
                              ?_EUSART_Read 002E                    USBEnableEndpoint@options 0036  
                              __CFG_LVP$OFF 000000                         ?_moteJoiningProcess 00AA  
                              ___fltol@exp1 00A9                                        l1023 3C3A  
                                      l1057 40EE                                        l1085 3B8A  
                                      l1229 412E                                        l1503 3EFC  
                                      l2303 4282                                        l1504 3EFA  
                                      l2313 41EE                                        l2402 65E0  
                                      l2420 6694                                        l2413 6642  
                                      l2414 663E                                        l2430 6926  
                                      l2441 6B00                                        l2442 6AFC  
                                      l2426 68FA                                        l2435 6936  
                USBConfigureEndpoint@handle 0034                                        l1807 5D3E  
                                      l2392 64E8                                        l2480 5E82  
                                      l2449 6B50                                        l2473 5E1E  
                                      l2396 6514                                        l2487 5EAE  
                                      l1863 6C52                                        l1768 4D18  
                                      l2488 5EB6                                        l1848 6B98  
                                      l1881 6D28                                        l1882 6D2C  
                                      l1798 5CEA                                        l9305 446C  
                                      l9245 3FFA                                        l9237 48D2  
                                      l9309 4496                                        l9263 3FC6  
                                      l9273 3FEC                                        l9257 4024  
                                      l9329 42B6                                        l9337 42D2  
                                      l9601 3E3E                                        l9259 4026  
                                      l9435 460C                                        l9445 4632  
                                      l9621 4252                                        l9437 4614  
                                      l9535 4FC4                                        l9703 416A  
                                      l9623 425A                                        l9439 461A  
                                      l9471 3DD2                                        l9529 4FA0  
                                      l9289 3CBC                                        l9449 463A  
                                      l9641 41C6                                        l9297 3E12  
                                      l9633 4278                                        l9625 425E  
                                      l9561 3CEA                                        l9609 3E54  
                                      l9547 501C                                        l9643 41CE  
                                      l9811 6C8E                                        l9731 49A4  
                                      l9723 46BC                                        l9645 41D2  
                                      l9901 6E52                                        l9581 4076  
                                      l9831 6CBE                                        l9807 6C7A  
                                      l9727 46E0                                        l9719 4696  
                                      l9583 407A                                        l9649 41E4  
                                      l9825 6CBA                                        l9817 6C92  
                                      l9841 6CE6                                        l9753 4A0A  
                                      l9761 4A1A                                        l9729 46E8  
                                      l9497 3F66                                        l9577 4070  
                                      l9593 4092                                        l9843 6CF0  
                                      l9931 42DA                                        l9693 4158  
                                      l9773 6BA0                                        l9749 49FC  
                                      l9589 408A                                        l9941 42F2  
                                      l9791 6C24                                        l9783 6BCC  
                                      l9767 6B84                                        l9951 430A  
                                      STR_1 7DB6                                        STR_2 7DA7  
                                      l9881 6D94                                        l9849 6D06  
                                      l9777 6BA6                                        STR_3 7DC5  
                                      STR_4 7F81                                        l9891 6E1E  
                                      l9883 6D9A                                        l9875 6D7E  
                                      l9859 6D46                                        l9867 6D60  
                                      l9795 6C28                                        l9885 6DDC  
                                      l9893 6E28                                        l9869 6D66  
                                      STR_7 7D79                                        STR_8 7EB9  
                                      l9991 4E52                                        STR_9 7F8A  
                                      l9897 6E34                                        l9899 6E3A  
                                      l9987 4E3C                                        l9997 4E62  
           __size_of_MOTEapp_TimerBasedTask 0014                                        _PEIE 007F96  
                                      u8210 465A                                        u8230 4688  
                     ??_USBCtrlTrfTxService 002E                                        u8080 448C  
                                      u8217 4650                                        u8090 44B6  
                                      u8237 467E                                        u8087 4482  
                                      _UCFG 000F62                                        u8097 44AC  
                                      u9500 4C90                                        _UEP0 000F6A  
                                      _UEP1 000F6B                                        u9280 666E  
                                      u9505 4C86                                        _UEIE 000F66  
                                      u9460 6B2C                                        u8805 413E  
                                      u8806 4140                                        _UEIR 000F67  
                                      _UCON 000F60                                        _TMR2 000FBC  
                           _CDCDataInHandle 0131      USBStdFeatureReqHandler@current_ep_data 0047  
                                      _pDst 0137                                        _main 5312  
                  ??i2_USBTransferOnePacket 0032           __end_of_moteApp_add8bToDataBuffer 47D2  
                                      fsr1h 000FE2                                        fsr2h 000FDA  
                                      indf1 000FE7                                        fsr1l 000FE1  
                                      indf2 000FDF                                        fsr2l 000FD9  
                           _USBDeviceAttach 3EDA                                        btemp 005A  
                             __CFG_BORV$190 000000                                        pclat 000FFA  
                                      prodh 000FF4                                        prodl 000FF3  
                      _USBapp_setrxByteFlag 3B12                                        start 10AA  
                           ?_oled_putUint16 0072                               __CFG_IESO$OFF 000000  
                           ___fldiv@new_exp 0098                             __end_of_EndLine 3B64  
                    __end_of_SPI_Initialize 3B72                            __end_of_CMP1_ISR 3AFC  
                           ?_oled_putString 006D                  __end_of_USBCheckStdRequest 4E3A  
                    ??_USBCtrlTrfOutHandler 0041                 __size_of_moteRunningProcess 01A8  
                          ?_oled_setDisplay 002E                               __CFG_MCLRE$ON 000000  
                          _modemBufferIndex 0026                                ___param_bank 000010  
                 ??_USBStdFeatureReqHandler 0043                                 _TMRapp_Tick 3B0C  
                      ??_moteJoiningProcess 00AB                      moteApp_delayms@counter 0063  
             ?_USART_mySetLineCodingHandler 002E                      sendDataCommand@appData 0063  
                         sendCommand@string 0061                    ??_USBStdGetStatusHandler 002E  
              __end_of_USBapp_getrxByteFlag 3B08                   __size_of_DATAEE_WriteByte 003A  
                            ?_USBDeviceInit 002E                               ?_EUSART_Write 002E  
                      oled_putUint16@number 0072              __size_of_OSCILLATOR_Initialize 0016  
                           ?_oled_writeData 002E               __end_of_OSCILLATOR_Initialize 3C44  
                                     l10011 4ED2                                       l10111 4D70  
                                     l10007 4E98                                       l10105 4D4E  
                                     l10203 5DBC                                       l10107 4D52  
                                     l10115 4D94                                       l10205 5DDA  
                                     l10151 5D02                                       l10135 3C94  
                                     l10223 64E4                                       l11023 626C  
                                     l10161 5D30                                       l10321 66A0  
                                     l11041 62D2                                       l11203 5856  
                                     l11211 5860                                       l10155 5D0A  
                                     l10147 5CFA                                       l10323 66A2  
                                     l10315 667A                                       l10411 6AD0  
                                     l10083 4754                                       l11019 6262  
                                     l11301 497E                                       l10317 6686  
                                     l10309 6662                                       l10253 6548  
                                     l10405 6AB2                                       l10501 5E54  
                                     l10175 5D5A                                       l10183 5D7C  
                                     l10167 5D42                                       l11303 4986  
                                     l10239 6510                                       l10431 6B38  
                                     l10415 6AF6                                       l10343 68F6  
                                     l10511 5EA4                                       l10503 5E6C  
                                     l10079 4750                                       l11047 62D8  
                                     l10185 5D84                                       l10193 5DA6  
                                     l10281 65DE                                       l10257 6556  
                                     l10433 6B44                                       l10345 6902  
                                     l11163 3ECA                                       l11227 5876  
                                     l10195 5DAC                                       l11091 522A  
                                     l11075 51EE                                       l11307 498C  
                                     l10275 65BA                                       l10267 6594  
                                     l10443 6B64                                       l10427 6B20  
                                     l10363 6940                                       l10451 4C68  
                                     l10523 5EE6                                       l11403 643E  
                                     l10293 6612                                       l10357 6922  
                                     l10453 4C72                                       l10509 5E98  
                                     l10701 70A2                                       l11421 64AA  
                                     l11333 631A                                       l11159 3EBA  
                                     l10287 65F4                                       l10359 692E  
                                     l10471 4CBC                                       l10631 6EF4  
                                     l10623 6EC8                                       l11423 64BE  
                                     l11343 633A                                       l11327 6306  
                                     l11319 62F0                                       l10297 6638  
                                     l10801 7302                                       l10609 6E7A  
                                     l11417 6494                                       l10483 4CE8  
                                     l10475 4CC4                                       l10467 4CAC  
                                     l10715 70F6                                       l10627 6EE2  
                                     l11347 6346                                       l11339 6326  
                                     l11197 582C                                       l10477 4CD0  
                                     l10493 5E2E                                       l10901 7608  
                                     l10645 6F56                                       l11373 63A6  
                                     l11461 53A0                                       l11287 4930  
                                     l10567 3BFC                                       l10479 4CD4  
                                     l10807 7324                                       l10743 719E  
                                     l10591 44F2                                       l10583 44C6  
                                     l11391 63F6                                       l11359 6366  
                                     l11383 63E0                                       l11297 4974  
                                     l10497 5E42                                       l10905 761C  
                                     l10841 73F0                                       l10729 714A  
                                     l10673 6FFC                                       l10499 5E48  
                                     l10923 766E                                       l10771 7246  
                                     l10659 6FAA                                       l10595 4506  
                                     l11467 53B0                                       l11475 53C2  
                                     l10909 762C                                       l10853 7438  
                                     l10845 7404                                       l10757 71F2  
                                     l10597 4508                                       l10589 44E8  
                                     l10943 76E6                                       l10687 704E  
                                     l10951 7708                                       l10599 450E  
                                     l10881 74B2                                       l10785 729A  
                                     l10953 7778                                       l10947 76F8  
                                     l10939 76D4                                       l10971 615A  
                                     l10797 72F2                                       l10799 72FE  
                                     l10985 6196                               ___fltol@sign1 00A8  
                                     ?_main 002E                             __end_of___fldiv 66AC  
                           __end_of___lbdiv 4096                                       _EEADR 000FA9  
                                     STR_10 7E49                                       STR_11 7EC5  
                                     STR_20 7F93                                       STR_12 7E70  
                                     STR_21 7FFD                                       STR_13 7E56  
                                     STR_30 7EB1                                       STR_14 7E63  
                                     STR_22 7C22                                       STR_31 7F4B  
                                     STR_23 7F07                                       STR_15 7EF2  
                                     STR_24 7F6F                                       STR_32 7F54  
                                     STR_16 7F2F                                       STR_40 7C5B  
                                     STR_33 7FF8                                       STR_41 7FDD  
                                     STR_17 7F9C                                       STR_25 7CD4  
                                     STR_42 7EAA                                       STR_18 7FCD  
                                     STR_50 7F1B                                       STR_26 7D07  
                                     STR_34 7C36                                       STR_51 7EAA  
                                     STR_19 7FD5                                       STR_35 7FB5  
                                     STR_27 7D18                                       STR_43 7C0E  
                                     STR_60 7EAA                                       STR_36 7EAA  
                                     STR_44 7F25                                       STR_52 7CF6  
                                     STR_28 7C90                                       STR_45 7EAA  
                                     STR_53 7FAD                                       STR_29 7EAD  
                                     STR_37 7CA1                                       STR_61 7C49  
                                     STR_54 7EAA                                       STR_38 7FBD  
                                     STR_62 7F5D                                       STR_46 7BFA  
                                     STR_70 7B5A                                       STR_63 7EAA  
                                     STR_39 7EAA                                       STR_47 7F78  
                                     STR_71 7ED1                                       STR_55 7CB2  
                                     STR_80 7F11                                       STR_48 7EAA  
                                     STR_56 7FE4                                       STR_72 7EDC  
                                     STR_64 7CC3                                       STR_81 7B93  
                                     STR_57 7EAA                                       STR_65 7FEB  
                                     STR_49 7C6D                                       STR_73 7BE2  
                                     STR_66 7EAA                                       STR_82 7F42  
                                     STR_74 7E95                                       STR_90 7D69  
                                     STR_58 7D39                                       STR_59 7FC5  
                                     STR_67 7F11                                       STR_75 7EE7  
                                     STR_91 7DE1                                       STR_83 7CE5  
                                     STR_76 7FF2                                       STR_84 7E89  
                                     STR_92 7DEE                                       STR_68 7D59  
                           __end_of___lbmod 3E5C                                       STR_93 7DFB  
                                     STR_85 7DD4                                       STR_69 7D89  
                                     STR_77 7D49                                       STR_78 7EAA  
                                     STR_94 7E08                                       STR_86 7D29  
                                     STR_87 7FFB                                       STR_79 7EA1  
                                     STR_95 7E15                                       STR_88 7EFD  
                                     STR_96 7E22                             __end_of___flmul 6B7A  
                                     STR_97 7E2F                                       STR_89 7D98  
                                     STR_98 7E3C                                       STR_99 7F66  
         __size_of_USBCtrlEPServiceComplete 00E4                             __end_of___fltol 4CFA  
                           _TMR1_StartTimer 3AFC                             __end_of___lldiv 48B6  
                                     u10100 736E           __size_of_MOTEapp_setResponseReady 0002  
                                     _T1CON 000FCD                      __end_of_USBDeviceTasks 5CCC  
                                     u10707 55A0                                       u10717 3E18  
                                     u10727 40E8                                       _T2CON 000FBA  
                                     u10677 5568                                       u10687 5576  
                   __end_of_sendDataCommand 4EDC                                       u10697 558C  
                 ?_USBCtrlEPServiceComplete 002E                             __end_of___lwdiv 428C  
                           __end_of___lwmod 41F8                   ?_MOTEapp_setResponseReady 002E  
                       oled_putUint8@number 0074                                       i2l942 3E08  
                                     _UADDR 000F63                                       i2l991 1076  
                                     i2l983 104A                                       i2l985 105A  
                                     i2l987 1066                                       _RCREG 000FAE  
                                     _RCSTA 000FAB                                       _TMR1H 000FCF  
                                     _TMR1L 000FCE                                       _SPBRG 000FAF  
  moteApp_add16bToDataBuffer@bufferLocation 006E     moteApp_add8bToDataBuffer@bufferLocation 0064  
                                     _USTAT 000F61                                       _TXREG 000FAD  
                                     _TXSTA 000FAC                               __CFG_WRT0$OFF 000000  
        __size_of_USBCtrlEPAllowStatusStage 00BC                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                               __CFG_WRT3$OFF 000000  
                         moteHandler@i_1488 0287                              __CFG_EBTR0$OFF 000000  
                            __CFG_FCMEN$OFF 000000                              __CFG_EBTR1$OFF 000000  
                            __CFG_EBTR2$OFF 000000                              __CFG_EBTR3$OFF 000000  
           __end_of_USBCtrlEPAllowDataStage 4BCE                           oled_putChar@index 006C  
                          __end_of_TMR1_ISR 3B40                                       _sd000 7B56  
                                     _sd001 7ADC             service_pushbutton@Release_Timer 0155  
                                     _sd002 7B10                               __CFG_WRTB$OFF 000000  
                    moteRunningProcess@Traw 0081                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                             _DATAEE_ReadByte 3BC8  
                            __CFG_EBTRB$OFF 000000                                  i2memset@p1 002E  
                           __end_of_dpowers 7789                                       _light 0135  
                           __end_of_isdigit 3CF2                     __end_of_TMR1_Initialize 3FC2  
                              _runningState 0027                                       pclath 000FFA  
                                     tablat 000FF5                                       plusw2 000FDB  
                         __end_of_CDCInitEP 446A                  oled_setDisplay@displayType 0062  
                              ?_modemResync 002E                                       status 000FD8  
                            __CFG_T3CMX$RC0 000000                             __end_of_sprintf 6E5C  
                           _TMR2_StartTimer 3B00                             __end_of_strncmp 46FC  
                           ___lbdiv@divisor 0060                              __CFG_ICPRT$OFF 000000  
                     ?_USBapp_setrxByteFlag 002E                            __end_ofi2_memset 3EB0  
                           ___lbdiv@counter 0062                                _m10SecTicker 0150  
                           ?_SPI_Initialize 002E                             putUSBUSART@data 0060  
        USART_mySetLineCodingHandler@dwBaud 003B                __size_of_USBStdSetCfgHandler 00B2  
                           __initialization 47D2                       TMR2_ReadTimer@readVal 0060  
             __size_of_TMRapp_ClearBitFlags 0004                                __end_of_main 53CE  
             __size_of_MOTEapp_handlerState 000A                      _MOTEapp_TimerBasedTask 3BF0  
                            ??_EUSART_Write 0060                     __end_of_TMR2_Initialize 3B82  
                              ?_sendCommand 0061                 ?_INTERRUPT_InterruptManager 002E  
               moteJoiningProcess@float_val 00FA                   __size_of_USBCtrlEPService 00B2  
                                    ??_main 00F4                                ?_moteHandler 002E  
                             __activetblptr 000002                          _modemResonseBuffer 0196  
                           ?_USBDeviceTasks 002E                         i2_EUSART_Initialize 3F06  
                     oled_putUint16@numData 0076                   sendDataCommand@dataLength 0065  
                               ?_USBSuspend 002E                                  _NextUSBOut 001A  
                               nibble2int@c 0060                              __CFG_SDOMX$RB3 000000  
                           __CFG_CCP2MX$RC1 000000                                _cdc_mem_type 014D  
                  __end_of_SPI_Exchange8bit 3B92                     __end_of_USBDeviceAttach 3F06  
                                    _ADCON0 000FC2                                      _ADCON1 000FC1  
                                    _ADCON2 000FC0                            _CDCDataOutHandle 0133  
               moteJoiningProcess@old_float 00E8                           _getsUSBUSART$5651 006B  
                                    _ACTCON 000FB5                                      STR_101 7BAE  
                                    STR_102 7BC8                                      STR_103 7B7A  
                                    STR_104 7B94                                      STR_105 7F39  
                                    STR_106 7FA5                                      _ADRESH 000FC4  
                                    STR_107 7E7D                                      STR_108 7C7F  
                                    _ADRESL 000FC3                                      _EEDATA 000FA8  
                                    _EECON2 000FA7           __size_of_MOTEapp_getModemResponse 004A  
                           getsUSBUSART@len 0069                                      _T1GCON 000FCC  
                      oled_putUint8@numData 0075                   ?_MOTEapp_getModemResponse 002E  
                     __size_of_CDCTxService 0112                                      i2l2250 48A4  
                                    i2l1604 41B6                                      i2l1454 5BEC  
                                    i2l1631 437A                                      i2l1528 56AC  
                                    i2l1464 5C68                                      i2l1641 5534  
                                    i2l1633 43BE                                      i2l1465 5CC8  
                                    i2l1466 5C6E                                      i2l1581 5B60  
                                    i2l1671 66C8                                      i2l1591 4A30  
                                    i2l1655 4DA4                                      i2l1584 5BAC  
                                    i2l1664 4DD4                                      i2l1681 67D6  
                                    i2l1586 5BB0                                      i2l1594 4A9E  
                                    i2l1595 4A3E                                      i2l1748 4AF4  
                                    i2l1596 4A42                                      i2l1689 6850  
                                    i2l6203 4858                                      i2l6051 40B2  
                                    i2l6205 4864                                      i2l6061 4ABE  
                                    i2l6221 3E90                                      i2l6215 4896  
                                    i2l6207 4868                                      i2l6071 4AD4  
                                    i2l6065 4ACA                                      i2l6225 3EA0  
                                    i2l6401 4B9C                                      i2l6163 53E8  
                                    i2l6093 4B24                                      i2l6421 506A  
                                    i2l6167 53F0                                      i2l6087 4B10  
                                    i2l6079 4AE8                                      i2l6511 66CC  
                                    i2l6177 5418                                      i2l6185 544E  
                                    i2l6187 5454                                      i2l6195 548A  
                                    i2l6099 4B2A                                      i2l6451 5AD2  
                                    i2l6443 50CE                                      i2l9003 5BE4  
                                    i2l6541 6780                                      i2l5911 4046  
                                    i2l6551 67BE                                      i2l6535 6766  
                                    i2l6527 6730                                      i2l6463 5B64  
                                    i2l6455 5AE2                                      i2l6471 5BB4  
                                    i2l9031 5C26                                      i2l6369 529A  
                                    i2l6553 67EE                                      i2l6537 6768  
                                    i2l9041 5C36                                      i2l9025 5C0A  
                                    i2l9017 5BFE                                      i2l6803 60B4  
                                    i2l5907 4038                                      i2l6563 6830  
                                    i2l6483 4A5C                                      i2l5925 4F14  
                                    i2l6581 68B2                                      i2l6573 6868  
                                    i2l6565 683C                                      i2l6493 4A90  
                                    i2l6397 4B88                                      i2l6733 5650  
                                    i2l9037 5C2E                                      i2l6807 60CE  
                                    i2l5919 4EF0                                      i2l9055 5C5C  
                                    i2l9047 5C40                                      i2l6817 612A  
                                    i2l5937 4F6C                                      i2l6833 4DAE  
                                    i2l6737 5656                                      i2l9081 5CAC  
                                    i2l6579 68A6                                      i2l9083 5CC0  
                                    i2l9075 5C92                                      i2l7581 54FC  
                                    i2l6781 6034                                      i2l5893 4C30  
                                    i2l6845 4DBE                                      i2l6749 56C0  
                                    i2l6757 56CE                                      i2l8605 5132  
                                    i2l9157 1072                                      i2l6791 605E  
                                    i2l6855 4DE8                                      i2l7569 54C0  
                                    i2l6785 6040                                      i2l8561 3D90  
                                    i2l7595 555A                                      i2l7587 551A  
                                    i2l6859 4DFA                                      i2l8619 5190  
                                    i2l8563 3D92                                      i2l7597 555C  
                                    i2l8645 5772                                      i2l8653 577C  
                                    i2l8639 5748                                      i2l8585 41B4  
                                    i2l8669 5790                                      i2l8983 3E82  
                                    i2l8975 3E66                                      i2l8969 3E04  
                                    i2l8995 5BD8                                   ??_EndLine 0061  
                                    _OSCCON 000FD3                               CDCTxService@i 0069  
                                    _SPBRGH 000FB0                                      _SSPBUF 000FC9  
                          __end_of___xxtofl 5EF8                    i2USBTransferOnePacket@ep 0032  
                         ??i2_USBDeviceInit 0036             __size_ofi2_USBTransferOnePacket 00AE  
                      ?i2_EUSART_Initialize 002E                        oled_displayOff@state 0062  
                             oled_putChar@k 006B                           _shortPacketStatus 002A  
            moteRunningProcess@changeStates 002E                              __CFG_XINST$OFF 000000  
                      _moteApp_clearBuffers 42D6                             USBDeviceTasks@i 004D  
                __end_of_Set_Column_Address 3CB6                 USBStdFeatureReqHandler@pUEP 0045  
                          __end_of_hexToStr 3DE4                    USBTransferOnePacket@data 0061  
                USBCtrlTrfInHandler@lastDTS 003F                             ??_USBDeviceInit 0068  
                 __size_of_Set_Page_Address 0014                     __end_of_TMR1_StartTimer 3B00  
                              ?_putUSBUSART 0060                                      ___wmul 3D98  
                                 ??___fldiv 008F                                   ??___lbdiv 0061  
                            __CFG_STVREN$ON 000000                      modemResync@escapeEvent 0067  
                                 ??___lbmod 0061                                   ??___flmul 0076  
                                 ??___fltol 00A4                                   ??___lldiv 0036  
                      __end_of_getsUSBUSART 4D98                                   ??___lwdiv 0064  
                                 ??___lwmod 006B                           _USBEnableEndpoint 402A  
           __size_of_USBStdGetStatusHandler 008A                         _EUSART_Transmit_ISR 3DE4  
                                    _memset 3EB0                                      clear_0 47D8  
                                    clear_1 47E4                                      clear_2 47FC  
                        ?_USBEnableEndpoint 0036              ??_USART_mySetLineCodingHandler 003B  
                   __end_of_DATAEE_ReadByte 3BDC                                      _strcmp 49A4  
                __end_of_ADC_TempConversion 3D74               __size_of_USBTransferOnePacket 00B0  
                          ?_sendDataCommand 0061                             _moteApp_delayms 3E0C  
               __size_of_service_pushbutton 0054                                   ??_isdigit 0060  
                              _CDCTxService 5CCC                                __mediumconst 777E  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                         ??_USBEnableEndpoint 0037  
                  ADC_GetConversion@channel 0064                                   ?_CMP1_ISR 002E  
                   __end_of_TMR2_StartTimer 3B04                                   ??_sprintf 0078  
                               _CtrlTrfData 000438                                   ??_strncmp 0066  
                          ___lbdiv@dividend 0061                               ?_oled_devInit 002E  
                      ?_EUSART_Transmit_ISR 002E                        _controlTransferState 0020  
                      _USBapp_getrxByteFlag 3B04                            ?_TMR1_Initialize 002E  
                      __CFG_LS48MHZ$SYS48X8 000000                                ___xxtofl@arg 006A  
                      __size_of_EUSART_Read 0034                                ___xxtofl@exp 0069  
                         _SYSTEM_Initialize 3D10                                ___xxtofl@val 0060  
              __size_of_USBapp_handlerState 000A                             ___lbmod@divisor 0060  
                                __accesstop 0060                     __end_of__initialization 4832  
                    ??_USBapp_setrxByteFlag 002E                             ___lbmod@counter 0062  
                           __CFG_PBADEN$OFF 000000                       ??i2_EUSART_Initialize 002E  
                           _CMP1_Initialize 3B92                          ?_SYSTEM_Initialize 002E  
                        oled_writeData@data 0061                               ___rparam_used 000001  
                             ?_oled_setFont 0060                    __size_of_USBStallHandler 003E  
                                ___fltol@f1 00A0                               ?_oled_putChar 0063  
                     ?_moteApp_clearBuffers 002E                         __size_of_USBSuspend 001E  
               __size_of_EUSART_FlushBuffer 002E                              __pcstackCOMRAM 002E  
                 __end_of_USBEnableEndpoint 4060                            __CFG_nPWRTEN$OFF 000000  
                             __end_of_sd000 7B5A                               __end_of_sd001 7B10  
                             __end_of_sd002 7B44                                __pidataBANK0 1004  
                              __pidataBANK1 3AF6                         ??_SYSTEM_Initialize 0062  
                 oled_putUint16@station_dot 0074                                   ?_TMR1_ISR 002E  
          __size_of_USBCtrlEPAllowDataStage 008E                            _DATAEE_WriteByte 4108  
             __size_of_USBConfigureEndpoint 0090                 __end_of_USBCtrlTrfInHandler 5560  
                          ?_TMR2_Initialize 002E                            ___lbdiv@quotient 0063  
                    i2_USBTransferOnePacket 4EDC                             __CFG_PCLKEN$OFF 000000  
                            __CFG_nLPBOR$ON 000000                           __end_of_OledFont0 7A99  
                         _CDCTxService$5699 0067                                  _cdc_notice 01E2  
                                 ?i2_memset 002E                                  _cdc_rx_len 00F6  
                                _cdc_tx_len 00F7                                  ??_CMP1_ISR 002E  
                           _responsePortNum 012E                    ??_USBCtrlTrfSetupHandler 004A  
                                _dataBuffer 01D6                              ??_oled_devInit 0062  
                          ?_USBDeviceAttach 002E                   __end_of_SYSTEM_Initialize 3D30  
                     ??_EUSART_Transmit_ISR 002E                      _USBStdGetStatusHandler 4A28  
                              sprintf@width 0082                       ?_USBapp_getrxByteFlag 002E  
                      service_pushbutton@bs 0060                            ??_oled_putUint16 0076  
                                __pbssBANK0 00F4                                  __pbssBANK1 0100  
                                __pbssBANK2 0200           moteJoiningProcess@pending_confirm 0154  
                      __end_of_EUSART_Write 402A                     __size_of_TMR2_ReadTimer 0008  
                          ??_oled_putString 0071                              ??_oled_setFont 0062  
               __size_of_EUSART_Receive_ISR 002A                         oled_putString@index 0071  
                            ??_oled_putChar 0065                 __size_of_USBWakeFromSuspend 0024  
                               _pBDTEntryIn 000F                      __size_of_oled_clearRow 001E  
                      __size_of_modemResync 0064                    sendDataCommand@byteCount 0067  
          __end_of_USBCtrlEPServiceComplete 571C            __end_of_MOTEapp_setResponseReady 3AF6  
                    oled_putChar@start_page 0064                 __size_of_USBCheckCDCRequest 008E  
                         __CFG_PLLSEL$PLL3X 000000                          __size_of_oled_init 0022  
                          ??_oled_writeData 0061                        USBCtrlTrfRxService@i 003F  
                              ?_TMRapp_Tick 002E                                     ?___wmul 0060  
                          ?_TMR1_StartTimer 002E                                  ??_TMR1_ISR 002E  
                  oled_putUint16@start_page 0075                     __end_of_moteApp_delayms 3E34  
                                   _CM1CON0 000F98          MOTEapp_getModemResponse@bufferByte 0062  
                   __size_of_USBapp_Handler 0078                     __size_of_TMRapp_Handler 00E8  
                                   _BAUDCON 000FB8                                     ?_memset 0060  
                                _device_dsc 7B44                   Set_Column_Address@address 0062  
                  __size_of_oled_displayOff 0012                            _USBCtrlEPService 50EC  
                                _ep_data_in 0122                     __size_of_ADC_Initialize 0016  
                                   ?_strcmp 0060                            ?_DATAEE_ReadByte 002E  
               __end_of_USBCtrlTrfRxService 6136                        __size_of_sendCommand 0054  
                        _USBCheckStdRequest 4D98                               _eusartRxCount 0022  
                         _configDescriptor1 7A99                                     i2l11517 420C  
                                   i2l11519 423E                                   ?___xxtofl 0060  
                                   _RS232cp 001C                             __CFG_WDTEN$SWON 000000  
                                ??i2_memset 0034                 __end_of_USBCtrlTrfTxService 5490  
                      __size_of_moteHandler 01E6                         _USBStdSetCfgHandler 503A  
                                   _OSCCON2 000FD2                                     _OSCTUNE 000F9B  
                    __size_of_oled_putUint8 005A                                     _SSP1ADD 000FC8  
                   __end_of_CMP1_Initialize 3BA4                         ?_USBCheckStdRequest 002E  
                          ?_TMR2_StartTimer 002E                __size_of_USBStdGetDscHandler 0102  
                                   _UIEbits 000F64                                   ?_hexToStr 002E  
                                   _UIRbits 000F65                            ??_SPI_Initialize 0060  
                                   _EndLine 3B58                               _cdc_trf_state 001F  
                      DATAEE_WriteByte@bAdd 0061                  __end_of_moteRunningProcess 62DE  
                    ??_moteApp_clearBuffers 0060                  ?_moteApp_add8bToDataBuffer 0064  
                                   _pCDCDst 0128                                     _pCDCSrc 012B  
                     __size_of_getsUSBUSART 009E                                     __Hparam 0000  
                      ?_USBStdSetCfgHandler 002E                                   _CDCInitEP 4416  
                   ?_MOTEapp_TimerBasedTask 002E                                     __Lparam 0000  
                                _nibble2int 4142                    moteRunningProcess@i_1611 0084  
                __size_of_USBEnableEndpoint 0036                         moteHandler@s2Button 0284  
                          _Set_Page_Address 3BDC                        ??_USBCheckStdRequest 004A  
              moteRunningProcess@sleepEvent 007E                           _timerMinTickCount 013D  
             __size_of_USBCtrlTrfOutHandler 0052                 __size_of_moteJoiningProcess 0922  
                                   ___fldiv 64C4                                     ___lbdiv 4060  
                                   ___lbmod 3E34                                     ___flmul 68D6  
                                   ___fltol 4C5E                                     ___lldiv 4840  
                          ??_USBDeviceTasks 004D                             __size_of___wmul 0026  
                                   ___lwdiv 4242                           ??_USBStallHandler 002E  
                                   ___lwmod 41BA                        __size_of_putUSBUSART 001E  
                                   __pcinit 47D2                          getsUSBUSART@buffer 0067  
                           __size_of_memset 002A                   __end_of_configDescriptor1 7ADC  
                                   __ramtop 0800                           hexToStr@character 0060  
          __end_of_MOTEapp_getModemResponse 42D6                                     __ptext0 5312  
                                   __ptext1 62DE                                     __ptext2 44BE  
                                   __ptext3 6136                                     __ptext4 4E3A  
                                   __ptext5 3DBE                                     __ptext6 4512  
                                   __ptext7 59CE                                     __ptext8 42D6  
                                   __ptext9 4766                    __size_of_oled_setDisplay 0014  
                                   _inPipes 0009                 _USBDeferOUTDataStagePackets 0149  
                           __size_of_strcmp 0084                            oled_setFont@font 0060  
                         __end_of_hexpowers 7791                                   _T1CONbits 000FCD  
                                   _dpowers 777F                       _OSCILLATOR_Initialize 3C2E  
                              ??_USBSuspend 0043                               _oled_clearRow 3CB6  
                                 _T2CONbits 000FBA                                  _modemSleep 3CF2  
           moteApp_add8bToDataBuffer@number 0065                                     _isdigit 3CD4  
                                ??___xxtofl 0064                                  _oled_clear 3C44  
                  ??_PIN_MANAGER_Initialize 0060                __end_of_TMRapp_ClearBitFlags 3B0C  
                              _LastRS232Out 0019                             i2_USBDeviceInit 571C  
                          i2USBDeviceInit@i 0036                           __end_of_oled_init 3D52  
                         ?_SPI_Exchange8bit 002E                __end_of_MOTEapp_handlerState 3B2A  
                    ??_USBapp_getrxByteFlag 0060                          __end_of_USB_CD_Ptr 7799  
                __size_of_SYSTEM_Initialize 0020                                     _sprintf 6B7A  
           __size_of_USBCtrlTrfSetupHandler 005E                                  ??_hexToStr 0060  
                                   _strncmp 4694                        end_of_initialization 4832  
                              _getsUSBUSART 4CFA               sendDataCommand@byteCount_1669 0068  
                        ??_SPI_Exchange8bit 0060                        SPI_Exchange8bit@data 0060  
                        __end_of_USB_SD_Ptr 7797                         _pBDTEntryEP0OutNext 0017  
                                   memset@c 0062                                     memset@n 0064  
                                   memset@p 0066                               __Lmediumconst 777E  
           _dummy_encapsulated_cmd_response 01EC                    ?_USBStdFeatureReqHandler 002E  
            __end_of_MOTEapp_TimerBasedTask 3C04                           _EUSART_Initialize 3F34  
                                _rxByteFlag 0028                       ??_USBStdSetCfgHandler 0043  
                           ___lldiv@divisor 0032                                  ?_CDCInitEP 002E  
                           ___lldiv@counter 003A                          ?_EUSART_Initialize 002E  
                             _oled_putUint8 4512                          __end_of_USBSuspend 3C7A  
            ??_USBapp_CdcEmulatorInitialize 003A                     _USBCtrlEPAllowDataStage 4B40  
                                 _RCSTAbits 000FAB                                     postdec2 000FDD  
                                   postinc0 000FEE                                     postinc2 000FDE  
                      __end_of_oled_devInit 5638                    _USBCtrlEPServiceComplete 5638  
                                _responseId 0100                            ?_moteApp_delayms 0060  
                             _randomPortNum 00F8                    _MOTEapp_setResponseReady 3AF4  
                _USBStatusStageEnabledFlag1 014A                  _USBStatusStageEnabledFlag2 014B  
                       _USBapp_handlerState 3B2A                         ??_EUSART_Initialize 0060  
                        USBEnableEndpoint@p 0037                                   _PORTAbits 000F80  
                                 _PORTBbits 000F81                                   _PORTCbits 000F82  
                   oled_putUint8@start_page 0073                              ?_oled_clearRow 002E  
                      __end_of_oled_setFont 3BB6                          _Set_Column_Address 3C98  
                      __end_of_oled_putChar 492C                            ___lbmod@dividend 0061  
                             ___xxtofl@sign 0068                                   _TRISAbits 000F92  
                                 _TRISBbits 000F93                                   _TRISCbits 000F94  
                         ??_oled_displayOff 0062                       __size_of_EUSART_Write 0034  
                        _BothEP0OutUOWNsSet 0145                                 ___fldiv@grs 009A  
                               ___fldiv@rem 0094                            ?_CMP1_Initialize 002E  
                 USBConfigureEndpoint@EPNum 0033                       moteJoiningProcess@ana 00EA  
                     moteJoiningProcess@buf 00B2                  ?_USBCtrlEPAllowStatusStage 002E  
                  __end_of_DATAEE_WriteByte 4142                         ?_Set_Column_Address 002E  
       USER_USB_CALLBACK_EVENT_HANDLER@size 003F                              _TMR2_ReadTimer 3B18  
                                 _USTATcopy 002D                           __size_of_CMP1_ISR 0004  
                      ?_USBapp_handlerState 002E                          _ADC_TempConversion 3D52  
                  oled_putString@start_page 0070                                 ___lbmod@rem 0063  
                               ___flmul@grs 007D                   __end_of_EUSART_Initialize 3F62  
              __end_of_USBTransferOnePacket 503A                                 _CM2CON1bits 000F9A  
                                 _TXSTAbits 000FAC                             moteHandler@Traw 0282  
                            ?_oled_putUint8 0072                           putUSBUSART@length 0062  
                       ?_ADC_TempConversion 002E                                 ?_nibble2int 002E  
                    _USBCtrlTrfSetupHandler 456C                        ??_Set_Column_Address 0062  
                   ?i2_USBTransferOnePacket 002E                       __end_of_USBDeviceInit 58E6  
                            _TMRapp_Handler 58E6                              _USBapp_Handler 492C  
                      __size_of_TMRapp_Tick 0006                ??_moteApp_add16bToDataBuffer 006F  
                            __end_of___wmul 3DBE                                _EUSART_Write 3FF6  
                     sendDataCommand@string 0061                     __end_ofi2_USBDeviceInit 5800  
                         __size_of_TMR1_ISR 000C                  __end_of_service_pushbutton 4512  
                            _ADC_Initialize 3C18                 moteApp_clearBuffers@counter 0060  
                                 i2memset@c 0030                                   i2memset@n 0032  
                                 i2memset@p 0034                      ?_OSCILLATOR_Initialize 002E  
                            __end_of_memset 3EDA                           _USBBusIsSuspended 0147  
                  oled_writeCommand@command 0061                                 ?_modemSleep 002E  
                            __end_of_strcmp 4A28                                 ?_oled_clear 002E  
                       start_initialization 47D2                        ??_ADC_TempConversion 0067  
                   ?_USBStdGetStatusHandler 002E               USBCtrlTrfRxService@byteToRead 0040  
                  _MOTEapp_getModemResponse 428C             __size_of_PIN_MANAGER_Initialize 004E  
                         ??_oled_setDisplay 0062                               ??_EUSART_Read 0060  
                    __end_of_TMR2_ReadTimer 3B20                                 _cdc_data_rx 000540  
                               _cdc_data_tx 000500                 __end_ofi2_EUSART_Initialize 3F34  
                         __size_ofi2_memset 002A                                   _OledFont0 7799  
              __end_of_USBConfigureEndpoint 4C5E             __end_of_USBStdFeatureReqHandler 68D6  
                  __size_of_sendDataCommand 00A2                       ??_USBapp_handlerState 0060  
         __end_of_USBCtrlEPAllowStatusStage 5312                    __end_of_USBCtrlEPService 519E  
      __end_of_USART_mySetLineCodingHandler 4416       __size_of_USART_mySetLineCodingHandler 0054  
              _USART_mySetLineCodingHandler 43C2                  __end_of_EUSART_FlushBuffer 3F90  
                       DATAEE_ReadByte@bAdd 0060               __size_of_USBapp_setrxByteFlag 0006  
       __size_of_moteApp_add16bToDataBuffer 011E                   ??_USBCtrlEPAllowDataStage 002F  
                               ??_CDCInitEP 003A                              USBDeviceInit@i 0068  
                    _pBDTEntryEP0OutCurrent 0015                    __size_of_TMR1_Initialize 0032  
                   USBTransferOnePacket@dir 0060                     USBTransferOnePacket@len 0063  
                    __end_of_USBapp_Handler 49A4                      __end_of_TMRapp_Handler 59CE  
            __end_ofi2_USBTransferOnePacket 4F8A                        _TMRapp_ClearBitFlags 3B08  
                                  ??___wmul 0064                         _USBStdGetDscHandler 5AC2  
                      _MOTEapp_handlerState 3B20                      __end_of_ADC_Initialize 3C2E  
                               __pdataBANK0 00F9                                 __pdataBANK1 01FD  
                                  ??_memset 0066                             ??_oled_clearRow 006D  
MOTEapp_getModemResponse@terminatorReceived 0061             MOTEapp_TimerBasedTask@timerTask 0060  
                                  ??_strcmp 0064                   oled_putString@station_dot 006F  
                    _USBActiveConfiguration 002C              __end_of_USBStdGetStatusHandler 4AB2  
                                 ___fldiv@a 008B                                   ___fldiv@b 0087  
               __end_of_EUSART_Transmit_ISR 3E0C                                   ___flmul@a 0072  
                                 ___flmul@b 006E                                 __pbssCOMRAM 0001  
                service_pushbutton@PB_Timer 011E                               __pcstackBANK0 0060  
                             __pcstackBANK2 0280                __size_of_USBCtrlTrfInHandler 00D0  
                  __size_of_TMR2_Initialize 0010                         __size_of_nibble2int 003A  
                  __end_of_Set_Page_Address 3BF0                           __size_of___xxtofl 011A  
                           ?_TMR2_ReadTimer 002E                                 _activeState 014C  
                              _isdigit$6028 0061                        ?_USBStdGetDscHandler 002E  
                 ADC_TempConversion@tempRaw 0067                  __end_of_EUSART_Receive_ISR 3E86  
            moteRunningProcess@messageReady 007D                                    ?_EndLine 002E  
                __end_of_USBWakeFromSuspend 3D98                               ??_modemResync 0065  
                __size_of_EUSART_Initialize 002E                           __size_of_hexToStr 0026  
                               sprintf@flag 0081                                 sprintf@prec 007E  
                           _USBStallHandler 417C                                _pBDTEntryOut 0118  
                       __end_of_EUSART_Read 3FF6                  __end_of_USBCheckCDCRequest 4B40  
                           ??_oled_putUint8 0074                        oled_putString@string 006D  
                  __size_of_USBDeviceAttach 002C                 ??_moteApp_add8bToDataBuffer 0065  
                         _oled_writeCommand 3B40                       __size_of_oled_devInit 00D8  
                   oled_putChar@station_dot 0063                         __size_of_modemSleep 001E  
                          ___lwdiv@dividend 0060                      _PIN_MANAGER_Initialize 4322  
                       __size_of_oled_clear 0018                       ?_TMRapp_ClearBitFlags 002E  
                      EUSART_Read@readValue 0060                             ?_TMRapp_Handler 002E  
                           ?_USBapp_Handler 002E                                   __pintcode 1008  
                        ?_oled_writeCommand 002E                               __pmediumconst 777E  
             moteJoiningProcess@switchEvent 00AA                       ?_MOTEapp_handlerState 002E  
                                  ?___fldiv 0087                                   __ptext100 4096  
                                 __ptext101 4416                                    ?___lbdiv 0060  
                                 __ptext110 53CE                                   __ptext102 4EDC  
                                 __ptext111 43C2                                   __ptext103 402A  
                                 __ptext112 3F06                                   __ptext104 4BCE  
                                 __ptext113 4840                                   __ptext105 4AB2  
                                 __ptext114 3B0C                                   __ptext106 4370  
                                 __ptext115 3B34                                   __ptext107 6016  
                                 __ptext116 3DE4                                   __ptext108 5256  
                                 __ptext117 3E5C                                   __ptext109 5490  
                                 __ptext118 3AF8                                   __ptext119 0000  
                                  ?___lbmod 0060                                    ?___flmul 006E  
                                  ?___fltol 00A0                                    ?___lldiv 002E  
                                  ?___lwdiv 0060                                    ?___lwmod 0067  
                           ?_ADC_Initialize 002E                       __size_of_oled_setFont 0012  
                              _eusartRxHead 014E                               ??_sendCommand 0063  
                              _eusartTxHead 0024                                _eusartRxTail 014F  
                              _eusartTxTail 0025                       __size_of_oled_putChar 0076  
                        _moteRunningProcess 6136                ??_INTERRUPT_InterruptManager 004E  
                          ?i2_USBDeviceInit 002E                      moteHandler@readMessage 0288  
                       ??_oled_writeCommand 0061                               ??_moteHandler 00F2  
                   _eusartTxBufferRemaining 0023                        _USBTransferOnePacket 4F8A  
                              moteHandler@i 0286            moteApp_add16bToDataBuffer@number 006C  
                  __size_of_TMR1_StartTimer 0004                                    ?_isdigit 002E  
                    moteHandler@buttonPress 0285                         ?_moteRunningProcess 007C  
              __end_of_USBCtrlTrfOutHandler 43C2                                   _hexpowers 7789  
                     ??_USBStdGetDscHandler 002E                                    _CMP1_ISR 3AF8  
                               _ep_data_out 0125                            ___lwdiv@quotient 0065  
                                  ?_sprintf 006C                __size_of_USBCtrlTrfRxService 0120  
                                 _secTicker 0029               USBConfigureEndpoint@direction 002E  
                  __size_of_DATAEE_ReadByte 0014                                    ?_strncmp 0060  
                              _oled_devInit 5560                              _eusartRxBuffer 0200  
                          _timerMsTickCount 013F                                   _oled_init 3D30  
              __size_of_USBCtrlTrfTxService 00C2                     _moteJoiningProcess$6539 00E4  
                            _eusartTxBuffer 0240                              ___wmul@product 0064  
                                  _LATAbits 000F89                                    _IOCCbits 000F87  
                 __end_of_oled_writeCommand 3B4C                                    _LATBbits 000F8A  
                                  _LATCbits 000F8B                  ??_USBCtrlEPServiceComplete 002F  
                ??_MOTEapp_setResponseReady 0060                                    _PIE1bits 000F9D  
                                  _IPR3bits 000FA5                                    _PIE2bits 000FA0  
                                  _PIE3bits 000FA3                    __size_of_TMR2_StartTimer 0004  
                              _oled_setFont 3BA4                                   _moteState 00F9  
                         ??_sendDataCommand 0066                               _operationType 0151  
                      ??_moteRunningProcess 007F                  __end_of_moteJoiningProcess 777E  
       __size_of_INTERRUPT_InterruptManager 00A2                                _oled_putChar 48B6  
                                  i2u423_40 5440                                    i2u423_47 5436  
                                  i2u425_40 547C                                    _PIR1bits 000F9E  
                                  i2u425_47 5472                                    i2u505_48 6116  
                                  i2u450_40 5B2E                                    i2u450_47 5B24  
                                  i2u451_40 5B5C                                    _PIR2bits 000FA1  
                                  i2u451_47 5B52               __size_of_moteApp_clearBuffers 004C  
                                  i2u453_40 5BA6                                    _PIR3bits 000FA4  
                                  i2u453_47 5B9C                   USBCtrlEPService@setup_cnt 004C  
                                  i2u593_48 5546                   __size_of_SPI_Exchange8bit 0010  
                       __end_of_modemResync 462E                                    _RCONbits 000FD0  
                   __size_of_oled_putUint16 00F4                               ??_putUSBUSART 0063  
                          __CFG_WDTPS$32768 000000                                    _UEP0bits 000F6A  
                _USBDeferINDataStagePackets 0148                                    _SSP1CON1 000FC6  
        __end_of_moteApp_add16bToDataBuffer 6016                  _moteApp_add16bToDataBuffer 5EF8  
               __size_of_USBCheckStdRequest 00A2                                    _TMR1_ISR 3B34  
                   __size_of_oled_putString 0066                                    _SSP1STAT 000FC7  
                                  _UCONbits 000F60                             _oled_displayOff 3BB6  
                                  _VREFCON0 000F7D              moteRunningProcess@selectButton 007C  
                      _USBConfigureEndpoint 4BCE            __size_of_USBStdFeatureReqHandler 022A  
                         ??_TMR1_Initialize 0060                   moteJoiningProcess@pkt_cnt 002B  
                                _ADCON0bits 000FC2                     Set_Page_Address@address 0062  
                         ___wmul@multiplier 0060                       ?_USBTransferOnePacket 0060  
                      moteJoiningProcess@cV 00EC                      ADC_TempConversion@temp 0068  
                 _moteApp_add8bToDataBuffer 4766                     __size_of_oled_writeData 000C  
                             ?_CDCTxService 002E                    moteHandler@gotoNextState 0281  
                              _RemoteWakeup 0146                         __end_of_sendCommand 44BE  
                                  i2_memset 3E86                           __CFG_CFGPLLEN$OFF 000000  
                     DATAEE_WriteByte@bData 0060                          _RS232_Out_Data_Rdy 001B  
                   __end_of_USBStallHandler 41BA                         __end_of_moteHandler 64C4  
                               _EUSART_Read 3FC2                           _moteApp_GoToSleep 46FC  
               ??_USBCtrlEPAllowStatusStage 002E                 __end_of_USBStdSetCfgHandler 50EC  
                         ?_DATAEE_WriteByte 0060               __size_of_USBapp_getrxByteFlag 0004  
                        ?_moteApp_GoToSleep 002E                                  ?_oled_init 002E  
                         ??_TMR2_Initialize 0060                            __size_of_EndLine 000C  
                        ??_DATAEE_WriteByte 0061                          __end_of_device_dsc 7B56  
                                _EECON1bits 000FA6                     ?_USBCtrlTrfSetupHandler 002E  
             USBapp_CdcEmulatorInitialize@i 003A                      ??_TMRapp_ClearBitFlags 0060  
                   USBStdGetStatusHandler@p 002E                                    __Hrparam 0000  
                       ??_moteApp_GoToSleep 006F                                ??_nibble2int 0060  
                                  __Lrparam 0000                      USBTransferOnePacket@ep 0064  
                    ??_MOTEapp_handlerState 0060                           _ADC_GetConversion 40CE  
                        __CFG_BOREN$SBORDIS 000000                                    _SetupPkt 000430  
                   __size_of_SPI_Initialize 000E                     ??_OSCILLATOR_Initialize 0060  
                     ?_USBConfigureEndpoint 002E                          ?_ADC_GetConversion 0060  
                         ??_USBDeviceAttach 0060                            __size_of___fldiv 01E8  
                          __size_of___lbdiv 0036                            __size_of___lbmod 0028  
                          __size_of___flmul 02A4                            __size_of___fltol 009C  
                ??_MOTEapp_getModemResponse 0061                                _selectedFont 01FD  
                          __size_of___lldiv 0076                             _oled_setDisplay 3C04  
          moteApp_clearBuffers@counter_1736 0061            moteApp_clearBuffers@counter_1737 0062  
                          __size_of___lwdiv 004A                            __size_of___lwmod 003E  
                 MOTEapp_handlerState@state 0060                                  _ANSELAbits 000F5B  
                       __end_of_putUSBUSART 3C98                                 _line_coding 01F4  
                                _ANSELCbits 000F5D                              ??_CDCTxService 0067  
                              ??_modemSleep 0065                         ??_ADC_GetConversion 0062  
                                sprintf@idx 007C                                  sprintf@val 007F  
                              ??_oled_clear 006F                    modemResync@escapeCounter 0065  
                                  ___xxtofl 5DDE                    __size_of_moteApp_delayms 0028  
                          __size_of_isdigit 001E                   __end_of_moteApp_GoToSleep 4766  
                   __size_of_USBDeviceTasks 0108                             ___lwdiv@divisor 0062  
                                  _appTimer 00F5                             ___lwdiv@counter 0064  
                                  __ptext10 3E34                                    __ptext11 4060  
                                  __ptext20 3D52                                    __ptext12 5EF8  
                                  __ptext21 6E5C                                    __ptext13 46FC  
                                  __ptext30 3D30                                    __ptext22 4694  
                                  __ptext14 3BB6                                    __ptext31 3BA4  
                                  __ptext23 49A4                                    __ptext15 3CF2  
                                  __ptext40 4108                                    __ptext32 3C04  
                                  __ptext24 6B7A                                    __ptext16 45CA  
                                  __ptext41 40CE                                    __ptext33 5560  
                                  __ptext25 3CD4                                    __ptext17 428C  
                                  __ptext50 3CB6                                    __ptext42 58E6  
                                  __ptext34 4142                                    __ptext26 3D98  
                                  __ptext18 3F62                                    __ptext51 48B6  
                                  __ptext43 41BA                                    __ptext35 3E0C  
                                  __ptext27 4242                                    __ptext19 3B18  
                                  __ptext60 3B04                                    __ptext52 3B4C  
                                  __ptext44 3B08                                    __ptext36 5DDE  
                                  __ptext28 446A                                    __ptext61 3AF4  
                                  __ptext53 3BDC                                    __ptext45 3BF0  
                                  __ptext37 4C5E                                    __ptext29 3B58  
                                  __ptext70 3B72                                    __ptext62 3FF6  
                                  __ptext54 3C98                                    __ptext46 3B2A  
                                  __ptext38 68D6                                    __ptext71 3B00  
                                  __ptext63 3FC2                                    __ptext55 3B40  
                                  __ptext47 492C                                    __ptext39 64C4  
                                  __ptext80 3B20                                    __ptext72 3F90  
                                  __ptext64 5CCC                                    __ptext56 3B82  
                                  __ptext48 462E                                    __ptext81 3BC8  
                                  __ptext73 3AFC                                    __ptext65 4F8A  
                                  __ptext57 519E                                    __ptext49 3C44  
                                  __ptext90 456C                                    __ptext74 3B64  
                                  __ptext66 5800                                    __ptext58 3C7A  
                                  __ptext91 5638                                    __ptext83 3B12  
                                  __ptext75 4322                                    __ptext67 3EB0  
                                  __ptext59 4CFA                                    __ptext92 4B40  
                                  __ptext84 5BC4                                    __ptext76 3C2E  
                                  __ptext68 3EDA                                    __ptext93 4D98  
                                  __ptext85 571C                                    __ptext77 3F34  
                                  __ptext69 3D10                                    __ptext94 503A  
                                  __ptext86 3D74                                    __ptext78 3B92  
                                  __ptext95 3E86                                    __ptext87 3C5C  
                                  __ptext79 3C18                                    __ptext96 4A28  
                                  __ptext88 417C                                    __ptext97 5AC2  
                                  __ptext89 50EC                                    __ptext98 66AC  
                                  __ptext99 41F8        __end_of_USBapp_CdcEmulatorInitialize 40CE  
     __size_of_USBapp_CdcEmulatorInitialize 0038                _USBapp_CdcEmulatorInitialize 4096  
                              _SSP1CON1bits 000FC6                          __end_of_nibble2int 417C  
                                  _hexToStr 3DBE                          _service_pushbutton 44BE  
                         ??_TMR1_StartTimer 0060                            __size_of_sprintf 02E2  
               DATAEE_WriteByte@GIEBitValue 0062                                 _OSCCON2bits 000FD2  
                          __size_of_strncmp 0068                                 _modemResync 45CA  
            __end_of_USBCtrlTrfSetupHandler 45CA                               __size_of_main 00BC  
                         ?_USBCtrlEPService 002E                  __size_of_oled_writeCommand 000C  
                                strncmp@len 0064                         ?_service_pushbutton 002E  
                         ??_DATAEE_ReadByte 0060                   __end_of_ADC_GetConversion 4108  
                  __size_of_CMP1_Initialize 0012                     __end_of_oled_displayOff 3BC8  
                        ??_USBCtrlEPService 004A                         _USBCtrlTrfInHandler 5490  
                             ??_TMRapp_Tick 002E                          __end_of_modemSleep 3D10  
                        __end_of_oled_clear 3C5C                                    _outPipes 0001  
                      _USBCtrlTrfOutHandler 4370                                    int$flags 005A  
                                  _usbState 0153                   _USBCtrlEPAllowStatusStage 5256  
               __size_of_Set_Column_Address 001E                           ??_TMR2_StartTimer 0060  
        __end_of_INTERRUPT_InterruptManager 10AA                  _INTERRUPT_InterruptManager 1008  
                              _SSP1STATbits 000FC7                                 _sendCommand 446A  
                    ??_USBTransferOnePacket 0064                          oled_clearRow@index 006E  
                        _EUSART_FlushBuffer 3F62                __end_of_USBapp_setrxByteFlag 3B18  
                               _moteHandler 62DE                            ??_TMR2_ReadTimer 0060  
                      ??_service_pushbutton 0060                   _USBDeferStatusStagePacket 001D  
                  CDCTxService@byte_to_send 006A                                  _INTCONbits 000FF2  
               __end_of_USBapp_handlerState 3B34                        ?_USBCtrlTrfInHandler 002E  
                       ?_EUSART_FlushBuffer 002E                 __size_of_ADC_TempConversion 0022  
             USBCtrlTrfTxService@byteToSend 002E                                    isdigit@c 0062  
                                  memset@p1 0060                            ?_USBStallHandler 002E  
                  USBStdFeatureReqHandler@p 0048                           ?_Set_Page_Address 002E  
                  ??_MOTEapp_TimerBasedTask 0060                                _responseData 0110  
             ?_USBapp_CdcEmulatorInitialize 002E                                    intlevel2 0000  
                                 sprintf@ap 007D                                   sprintf@sp 0084  
                               ??_oled_init 006F                          ??_Set_Page_Address 0062  
                    __size_of_USBDeviceInit 00E6     __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4242  
  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 004A           ??_USER_USB_CALLBACK_EVENT_HANDLER 0041  
          ?_USER_USB_CALLBACK_EVENT_HANDLER 003B             _USER_USB_CALLBACK_EVENT_HANDLER 41F8  
            moteJoiningProcess@messageReady 00F1                            ___lwmod@dividend 0067  
              i2USBTransferOnePacket@handle 0033                            ___lldiv@dividend 002E  
                   ?_PIN_MANAGER_Initialize 002E                            ??_USBapp_Handler 0072  
                          ??_TMRapp_Handler 006C                        moteHandler@gotoSleep 0280  
              __size_ofi2_EUSART_Initialize 002E                                   strncmp@s1 0060  
                                 strncmp@s2 0062                            ??_ADC_Initialize 0060  
                      ??_EUSART_FlushBuffer 0060                     __end_of_oled_setDisplay 3C18  
                            _oled_putUint16 59CE                            _SPI_Exchange8bit 3B82  
                i2USBTransferOnePacket@data 002F                                 _sleepTicker 0152  
                    ??_USBConfigureEndpoint 002F                       ?_USBCtrlTrfOutHandler 002E  
                            _oled_putString 462E                                 _putUSBUSART 3C7A  
                        _EUSART_Receive_ISR 3E5C                           oled_clearRow@page 006D  
                      __CFG_CPUDIV$NOCLKDIV 000000                         _USBCtrlTrfRxService 6016  
                        _USBWakeFromSuspend 3D74                     _USBStdFeatureReqHandler 66AC  
   __end_of_USBapp_DeviceCdcEmulatorHandler 5256    __size_of_USBapp_DeviceCdcEmulatorHandler 00B8  
          ?_USBapp_DeviceCdcEmulatorHandler 002E           ??_USBapp_DeviceCdcEmulatorHandler 006D  
           _USBapp_DeviceCdcEmulatorHandler 519E                          _USBCheckCDCRequest 4AB2  
                       _USBCtrlTrfTxService 53CE                         __end_of_TMRapp_Tick 3B12  
                     __end_of_oled_clearRow 3CD4                                 _temperature 0139  
                                  sprintf@c 0085                                    sprintf@f 006C  
                       ?_EUSART_Receive_ISR 002E                              _oled_writeData 3B4C  
                       ?_USBWakeFromSuspend 002E                                    strcmp@s1 0060  
                                  strcmp@t0 0066                                    strcmp@s2 0062  
                                  strcmp@t1 0068                                    strcmp@t2 0067  
                          ___lldiv@quotient 0036                             ___lwmod@divisor 0069  
                     ??_USBCtrlTrfInHandler 003F                       _USBAlternateInterface 01FB  
                           ___lwmod@counter 006B                         ?_USBCheckCDCRequest 002E  
                __size_of_moteApp_GoToSleep 006A                   i2USBTransferOnePacket@dir 002E  
                 i2USBTransferOnePacket@len 0031                         USBEnableEndpoint@ep 0039  
                           _endpoint_number 0021                             _sendDataCommand 4E3A  
                      ?_USBCtrlTrfRxService 002E                               ?_getsUSBUSART 0067  
                  oled_putUint8@station_dot 0072                          __CFG_FOSC$INTOSCIO 000000  
                        EUSART_Write@txData 0060                __size_of_EUSART_Transmit_ISR 0028  
            __end_of_PIN_MANAGER_Initialize 4370                    ?_USBCtrlEPAllowDataStage 002E  
        __size_of_moteApp_add8bToDataBuffer 006C                        ?_USBCtrlTrfTxService 002E  
                         ??_moteApp_delayms 0062                _USBStatusStageTimeoutCounter 001E  
              moteJoiningProcess@skip_count 0143                        ??_EUSART_Receive_ISR 002E  
                      ??_USBWakeFromSuspend 0043                      __end_of_oled_putUint16 5AC2  
                USBTransferOnePacket@handle 0065                  __size_of_ADC_GetConversion 003A  
                      __end_of_CDCTxService 5DDE                             _TMR1_Initialize 3F90  
         moteJoiningProcess@joiningComplete 00EE                            ?_oled_displayOff 002E  
                     __end_of_oled_putUint8 456C                      __end_of_oled_putString 4694  
                      ??_USBCheckCDCRequest 002E                                  _USB_CD_Ptr 7797  
