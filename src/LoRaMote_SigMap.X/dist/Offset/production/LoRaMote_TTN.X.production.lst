

Microchip Technology PIC18 PRO Macro Assembler V1.36 build -262312587 
                                                                                               Tue May 17 14:17:41 2016

Microchip Technology Omniscient Code Generator v1.36 (PRO mode) build 201601150325
     1                           	processor	18LF25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1
   110                           	psect	text95,global,reloc=2,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=2,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	text104,global,reloc=2,class=CODE,delta=1
   120                           	psect	text105,global,reloc=2,class=CODE,delta=1
   121                           	psect	text106,global,reloc=2,class=CODE,delta=1
   122                           	psect	text107,global,reloc=2,class=CODE,delta=1
   123                           	psect	text108,global,reloc=2,class=CODE,delta=1
   124                           	psect	text109,global,reloc=2,class=CODE,delta=1
   125                           	psect	text110,global,reloc=2,class=CODE,delta=1
   126                           	psect	text111,global,reloc=2,class=CODE,delta=1
   127                           	psect	text112,global,reloc=2,class=CODE,delta=1
   128                           	psect	text113,global,reloc=2,class=CODE,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   130                           	psect	text114,global,reloc=2,class=CODE,delta=1
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   132                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   133                           	dabs	1,0x400,48,_BDT
   134                           	dabs	1,0x500,64,_cdc_data_tx
   135                           	dabs	1,0x438,8,_CtrlTrfData
   136                           	dabs	1,0x430,8,_SetupPkt
   137                           	dabs	1,0x540,64,_cdc_data_rx
   138  0000                     
   139                           	psect	idataBANK0
   140  004315                     __pidataBANK0:
   141                           	opt stack 0
   142                           
   143                           ;initializer for _selectedFont
   144  004315  A1                 	db	low _OledFont0
   145  004316  77                 	db	high _OledFont0
   146                           
   147                           ;initializer for _S1
   148  004317  01                 	db	1
   149                           
   150                           ;initializer for _S2
   151  004318  01                 	db	1
   152                           
   153                           ;initializer for _moteState
   154  004319  01                 	db	1
   155                           
   156                           ;initializer for _prevS1
   157  00431A  01                 	db	1
   158                           
   159                           ;initializer for _prevS2
   160  00431B  01                 	db	1
   161                           
   162                           	psect	mediumconst
   163  007786                     __pmediumconst:
   164                           	opt stack 0
   165  007786  00                 	db	0
   166  007787                     _dpowers:
   167                           	opt stack 0
   168  007787  0001               	dw	1
   169  007789  000A               	dw	10
   170  00778B  0064               	dw	100
   171  00778D  03E8               	dw	1000
   172  00778F  2710               	dw	10000
   173  007791                     __end_of_dpowers:
   174                           	opt stack 0
   175  007791                     _hexpowers:
   176                           	opt stack 0
   177  007791  0001               	dw	1
   178  007793  0010               	dw	16
   179  007795  0100               	dw	256
   180  007797  1000               	dw	4096
   181  007799                     __end_of_hexpowers:
   182                           	opt stack 0
   183  007799                     _USB_SD_Ptr:
   184                           	opt stack 0
   185  007799  5E                 	db	low _sd000
   186  00779A  7B                 	db	high _sd000
   187  00779B  E4                 	db	low _sd001
   188  00779C  7A                 	db	high _sd001
   189  00779D  18                 	db	low _sd002
   190  00779E  7B                 	db	high _sd002
   191  00779F                     __end_of_USB_SD_Ptr:
   192                           	opt stack 0
   193  00779F                     _USB_CD_Ptr:
   194                           	opt stack 0
   195  00779F  A1                 	db	low _configDescriptor1
   196  0077A0  7A                 	db	high _configDescriptor1
   197  0077A1                     __end_of_USB_CD_Ptr:
   198                           	opt stack 0
   199  0077A1                     _OledFont0:
   200                           	opt stack 0
   201  0077A1  00                 	db	0
   202  0077A2  00                 	db	0
   203  0077A3  00                 	db	0
   204  0077A4  00                 	db	0
   205  0077A5  00                 	db	0
   206  0077A6  00                 	db	0
   207  0077A7  00                 	db	0
   208  0077A8  00                 	db	0
   209  0077A9  00                 	db	0
   210  0077AA  00                 	db	0
   211  0077AB  00                 	db	0
   212  0077AC  5F                 	db	95
   213  0077AD  00                 	db	0
   214  0077AE  00                 	db	0
   215  0077AF  00                 	db	0
   216  0077B0  00                 	db	0
   217  0077B1  00                 	db	0
   218  0077B2  00                 	db	0
   219  0077B3  03                 	db	3
   220  0077B4  00                 	db	0
   221  0077B5  03                 	db	3
   222  0077B6  00                 	db	0
   223  0077B7  00                 	db	0
   224  0077B8  00                 	db	0
   225  0077B9  64                 	db	100
   226  0077BA  3C                 	db	60
   227  0077BB  26                 	db	38
   228  0077BC  64                 	db	100
   229  0077BD  3C                 	db	60
   230  0077BE  26                 	db	38
   231  0077BF  24                 	db	36
   232  0077C0  00                 	db	0
   233  0077C1  26                 	db	38
   234  0077C2  49                 	db	73
   235  0077C3  49                 	db	73
   236  0077C4  7F                 	db	127
   237  0077C5  49                 	db	73
   238  0077C6  49                 	db	73
   239  0077C7  32                 	db	50
   240  0077C8  00                 	db	0
   241  0077C9  42                 	db	66
   242  0077CA  25                 	db	37
   243  0077CB  12                 	db	18
   244  0077CC  08                 	db	8
   245  0077CD  24                 	db	36
   246  0077CE  52                 	db	82
   247  0077CF  21                 	db	33
   248  0077D0  00                 	db	0
   249  0077D1  20                 	db	32
   250  0077D2  50                 	db	80
   251  0077D3  4E                 	db	78
   252  0077D4  55                 	db	85
   253  0077D5  22                 	db	34
   254  0077D6  58                 	db	88
   255  0077D7  28                 	db	40
   256  0077D8  00                 	db	0
   257  0077D9  00                 	db	0
   258  0077DA  00                 	db	0
   259  0077DB  00                 	db	0
   260  0077DC  03                 	db	3
   261  0077DD  00                 	db	0
   262  0077DE  00                 	db	0
   263  0077DF  00                 	db	0
   264  0077E0  00                 	db	0
   265  0077E1  00                 	db	0
   266  0077E2  00                 	db	0
   267  0077E3  1C                 	db	28
   268  0077E4  22                 	db	34
   269  0077E5  41                 	db	65
   270  0077E6  00                 	db	0
   271  0077E7  00                 	db	0
   272  0077E8  00                 	db	0
   273  0077E9  00                 	db	0
   274  0077EA  00                 	db	0
   275  0077EB  00                 	db	0
   276  0077EC  41                 	db	65
   277  0077ED  22                 	db	34
   278  0077EE  1C                 	db	28
   279  0077EF  00                 	db	0
   280  0077F0  00                 	db	0
   281  0077F1  00                 	db	0
   282  0077F2  15                 	db	21
   283  0077F3  15                 	db	21
   284  0077F4  0E                 	db	14
   285  0077F5  0E                 	db	14
   286  0077F6  15                 	db	21
   287  0077F7  15                 	db	21
   288  0077F8  00                 	db	0
   289  0077F9  00                 	db	0
   290  0077FA  08                 	db	8
   291  0077FB  08                 	db	8
   292  0077FC  3E                 	db	62
   293  0077FD  08                 	db	8
   294  0077FE  08                 	db	8
   295  0077FF  00                 	db	0
   296  007800  00                 	db	0
   297  007801  00                 	db	0
   298  007802  00                 	db	0
   299  007803  00                 	db	0
   300  007804  50                 	db	80
   301  007805  30                 	db	48
   302  007806  00                 	db	0
   303  007807  00                 	db	0
   304  007808  00                 	db	0
   305  007809  00                 	db	0
   306  00780A  08                 	db	8
   307  00780B  08                 	db	8
   308  00780C  08                 	db	8
   309  00780D  08                 	db	8
   310  00780E  08                 	db	8
   311  00780F  00                 	db	0
   312  007810  00                 	db	0
   313  007811  00                 	db	0
   314  007812  00                 	db	0
   315  007813  00                 	db	0
   316  007814  40                 	db	64
   317  007815  00                 	db	0
   318  007816  00                 	db	0
   319  007817  00                 	db	0
   320  007818  00                 	db	0
   321  007819  40                 	db	64
   322  00781A  20                 	db	32
   323  00781B  10                 	db	16
   324  00781C  08                 	db	8
   325  00781D  04                 	db	4
   326  00781E  02                 	db	2
   327  00781F  01                 	db	1
   328  007820  00                 	db	0
   329  007821  00                 	db	0
   330  007822  3E                 	db	62
   331  007823  41                 	db	65
   332  007824  41                 	db	65
   333  007825  41                 	db	65
   334  007826  3E                 	db	62
   335  007827  00                 	db	0
   336  007828  00                 	db	0
   337  007829  00                 	db	0
   338  00782A  00                 	db	0
   339  00782B  41                 	db	65
   340  00782C  7F                 	db	127
   341  00782D  40                 	db	64
   342  00782E  00                 	db	0
   343  00782F  00                 	db	0
   344  007830  00                 	db	0
   345  007831  00                 	db	0
   346  007832  42                 	db	66
   347  007833  61                 	db	97
   348  007834  51                 	db	81
   349  007835  49                 	db	73
   350  007836  6E                 	db	110
   351  007837  00                 	db	0
   352  007838  00                 	db	0
   353  007839  00                 	db	0
   354  00783A  22                 	db	34
   355  00783B  41                 	db	65
   356  00783C  49                 	db	73
   357  00783D  49                 	db	73
   358  00783E  36                 	db	54
   359  00783F  00                 	db	0
   360  007840  00                 	db	0
   361  007841  00                 	db	0
   362  007842  18                 	db	24
   363  007843  14                 	db	20
   364  007844  12                 	db	18
   365  007845  7F                 	db	127
   366  007846  10                 	db	16
   367  007847  00                 	db	0
   368  007848  00                 	db	0
   369  007849  00                 	db	0
   370  00784A  27                 	db	39
   371  00784B  49                 	db	73
   372  00784C  49                 	db	73
   373  00784D  49                 	db	73
   374  00784E  71                 	db	113
   375  00784F  00                 	db	0
   376  007850  00                 	db	0
   377  007851  00                 	db	0
   378  007852  3C                 	db	60
   379  007853  4A                 	db	74
   380  007854  49                 	db	73
   381  007855  48                 	db	72
   382  007856  70                 	db	112
   383  007857  00                 	db	0
   384  007858  00                 	db	0
   385  007859  00                 	db	0
   386  00785A  43                 	db	67
   387  00785B  21                 	db	33
   388  00785C  11                 	db	17
   389  00785D  0D                 	db	13
   390  00785E  03                 	db	3
   391  00785F  00                 	db	0
   392  007860  00                 	db	0
   393  007861  00                 	db	0
   394  007862  36                 	db	54
   395  007863  49                 	db	73
   396  007864  49                 	db	73
   397  007865  49                 	db	73
   398  007866  36                 	db	54
   399  007867  00                 	db	0
   400  007868  00                 	db	0
   401  007869  00                 	db	0
   402  00786A  06                 	db	6
   403  00786B  09                 	db	9
   404  00786C  49                 	db	73
   405  00786D  29                 	db	41
   406  00786E  1E                 	db	30
   407  00786F  00                 	db	0
   408  007870  00                 	db	0
   409  007871  00                 	db	0
   410  007872  00                 	db	0
   411  007873  00                 	db	0
   412  007874  12                 	db	18
   413  007875  00                 	db	0
   414  007876  00                 	db	0
   415  007877  00                 	db	0
   416  007878  00                 	db	0
   417  007879  00                 	db	0
   418  00787A  00                 	db	0
   419  00787B  00                 	db	0
   420  00787C  52                 	db	82
   421  00787D  30                 	db	48
   422  00787E  00                 	db	0
   423  00787F  00                 	db	0
   424  007880  00                 	db	0
   425  007881  00                 	db	0
   426  007882  00                 	db	0
   427  007883  08                 	db	8
   428  007884  14                 	db	20
   429  007885  14                 	db	20
   430  007886  22                 	db	34
   431  007887  00                 	db	0
   432  007888  00                 	db	0
   433  007889  00                 	db	0
   434  00788A  14                 	db	20
   435  00788B  14                 	db	20
   436  00788C  14                 	db	20
   437  00788D  14                 	db	20
   438  00788E  14                 	db	20
   439  00788F  14                 	db	20
   440  007890  00                 	db	0
   441  007891  00                 	db	0
   442  007892  00                 	db	0
   443  007893  22                 	db	34
   444  007894  14                 	db	20
   445  007895  14                 	db	20
   446  007896  08                 	db	8
   447  007897  00                 	db	0
   448  007898  00                 	db	0
   449  007899  00                 	db	0
   450  00789A  02                 	db	2
   451  00789B  01                 	db	1
   452  00789C  59                 	db	89
   453  00789D  05                 	db	5
   454  00789E  02                 	db	2
   455  00789F  00                 	db	0
   456  0078A0  00                 	db	0
   457  0078A1  3E                 	db	62
   458  0078A2  41                 	db	65
   459  0078A3  5D                 	db	93
   460  0078A4  55                 	db	85
   461  0078A5  4D                 	db	77
   462  0078A6  51                 	db	81
   463  0078A7  2E                 	db	46
   464  0078A8  00                 	db	0
   465  0078A9  40                 	db	64
   466  0078AA  7C                 	db	124
   467  0078AB  4A                 	db	74
   468  0078AC  09                 	db	9
   469  0078AD  4A                 	db	74
   470  0078AE  7C                 	db	124
   471  0078AF  40                 	db	64
   472  0078B0  00                 	db	0
   473  0078B1  41                 	db	65
   474  0078B2  7F                 	db	127
   475  0078B3  49                 	db	73
   476  0078B4  49                 	db	73
   477  0078B5  49                 	db	73
   478  0078B6  49                 	db	73
   479  0078B7  36                 	db	54
   480  0078B8  00                 	db	0
   481  0078B9  1C                 	db	28
   482  0078BA  22                 	db	34
   483  0078BB  41                 	db	65
   484  0078BC  41                 	db	65
   485  0078BD  41                 	db	65
   486  0078BE  41                 	db	65
   487  0078BF  22                 	db	34
   488  0078C0  00                 	db	0
   489  0078C1  41                 	db	65
   490  0078C2  7F                 	db	127
   491  0078C3  41                 	db	65
   492  0078C4  41                 	db	65
   493  0078C5  41                 	db	65
   494  0078C6  22                 	db	34
   495  0078C7  1C                 	db	28
   496  0078C8  00                 	db	0
   497  0078C9  41                 	db	65
   498  0078CA  7F                 	db	127
   499  0078CB  49                 	db	73
   500  0078CC  49                 	db	73
   501  0078CD  5D                 	db	93
   502  0078CE  41                 	db	65
   503  0078CF  63                 	db	99
   504  0078D0  00                 	db	0
   505  0078D1  41                 	db	65
   506  0078D2  7F                 	db	127
   507  0078D3  49                 	db	73
   508  0078D4  09                 	db	9
   509  0078D5  1D                 	db	29
   510  0078D6  01                 	db	1
   511  0078D7  03                 	db	3
   512  0078D8  00                 	db	0
   513  0078D9  1C                 	db	28
   514  0078DA  22                 	db	34
   515  0078DB  41                 	db	65
   516  0078DC  49                 	db	73
   517  0078DD  49                 	db	73
   518  0078DE  3A                 	db	58
   519  0078DF  08                 	db	8
   520  0078E0  00                 	db	0
   521  0078E1  41                 	db	65
   522  0078E2  7F                 	db	127
   523  0078E3  08                 	db	8
   524  0078E4  08                 	db	8
   525  0078E5  08                 	db	8
   526  0078E6  7F                 	db	127
   527  0078E7  41                 	db	65
   528  0078E8  00                 	db	0
   529  0078E9  00                 	db	0
   530  0078EA  41                 	db	65
   531  0078EB  41                 	db	65
   532  0078EC  7F                 	db	127
   533  0078ED  41                 	db	65
   534  0078EE  41                 	db	65
   535  0078EF  00                 	db	0
   536  0078F0  00                 	db	0
   537  0078F1  30                 	db	48
   538  0078F2  40                 	db	64
   539  0078F3  41                 	db	65
   540  0078F4  41                 	db	65
   541  0078F5  3F                 	db	63
   542  0078F6  01                 	db	1
   543  0078F7  01                 	db	1
   544  0078F8  00                 	db	0
   545  0078F9  41                 	db	65
   546  0078FA  7F                 	db	127
   547  0078FB  08                 	db	8
   548  0078FC  0C                 	db	12
   549  0078FD  12                 	db	18
   550  0078FE  61                 	db	97
   551  0078FF  41                 	db	65
   552  007900  00                 	db	0
   553  007901  41                 	db	65
   554  007902  7F                 	db	127
   555  007903  41                 	db	65
   556  007904  40                 	db	64
   557  007905  40                 	db	64
   558  007906  40                 	db	64
   559  007907  60                 	db	96
   560  007908  00                 	db	0
   561  007909  41                 	db	65
   562  00790A  7F                 	db	127
   563  00790B  42                 	db	66
   564  00790C  0C                 	db	12
   565  00790D  42                 	db	66
   566  00790E  7F                 	db	127
   567  00790F  41                 	db	65
   568  007910  00                 	db	0
   569  007911  41                 	db	65
   570  007912  7F                 	db	127
   571  007913  42                 	db	66
   572  007914  0C                 	db	12
   573  007915  11                 	db	17
   574  007916  7F                 	db	127
   575  007917  01                 	db	1
   576  007918  00                 	db	0
   577  007919  1C                 	db	28
   578  00791A  22                 	db	34
   579  00791B  41                 	db	65
   580  00791C  41                 	db	65
   581  00791D  41                 	db	65
   582  00791E  22                 	db	34
   583  00791F  1C                 	db	28
   584  007920  00                 	db	0
   585  007921  41                 	db	65
   586  007922  7F                 	db	127
   587  007923  49                 	db	73
   588  007924  09                 	db	9
   589  007925  09                 	db	9
   590  007926  09                 	db	9
   591  007927  06                 	db	6
   592  007928  00                 	db	0
   593  007929  0C                 	db	12
   594  00792A  12                 	db	18
   595  00792B  21                 	db	33
   596  00792C  21                 	db	33
   597  00792D  61                 	db	97
   598  00792E  52                 	db	82
   599  00792F  4C                 	db	76
   600  007930  00                 	db	0
   601  007931  41                 	db	65
   602  007932  7F                 	db	127
   603  007933  09                 	db	9
   604  007934  09                 	db	9
   605  007935  19                 	db	25
   606  007936  69                 	db	105
   607  007937  46                 	db	70
   608  007938  00                 	db	0
   609  007939  66                 	db	102
   610  00793A  49                 	db	73
   611  00793B  49                 	db	73
   612  00793C  49                 	db	73
   613  00793D  49                 	db	73
   614  00793E  49                 	db	73
   615  00793F  33                 	db	51
   616  007940  00                 	db	0
   617  007941  03                 	db	3
   618  007942  01                 	db	1
   619  007943  41                 	db	65
   620  007944  7F                 	db	127
   621  007945  41                 	db	65
   622  007946  01                 	db	1
   623  007947  03                 	db	3
   624  007948  00                 	db	0
   625  007949  01                 	db	1
   626  00794A  3F                 	db	63
   627  00794B  41                 	db	65
   628  00794C  40                 	db	64
   629  00794D  41                 	db	65
   630  00794E  3F                 	db	63
   631  00794F  01                 	db	1
   632  007950  00                 	db	0
   633  007951  01                 	db	1
   634  007952  0F                 	db	15
   635  007953  31                 	db	49
   636  007954  40                 	db	64
   637  007955  31                 	db	49
   638  007956  0F                 	db	15
   639  007957  01                 	db	1
   640  007958  00                 	db	0
   641  007959  01                 	db	1
   642  00795A  1F                 	db	31
   643  00795B  61                 	db	97
   644  00795C  14                 	db	20
   645  00795D  61                 	db	97
   646  00795E  1F                 	db	31
   647  00795F  01                 	db	1
   648  007960  00                 	db	0
   649  007961  41                 	db	65
   650  007962  41                 	db	65
   651  007963  36                 	db	54
   652  007964  08                 	db	8
   653  007965  36                 	db	54
   654  007966  41                 	db	65
   655  007967  41                 	db	65
   656  007968  00                 	db	0
   657  007969  01                 	db	1
   658  00796A  03                 	db	3
   659  00796B  44                 	db	68
   660  00796C  78                 	db	120
   661  00796D  44                 	db	68
   662  00796E  03                 	db	3
   663  00796F  01                 	db	1
   664  007970  00                 	db	0
   665  007971  43                 	db	67
   666  007972  61                 	db	97
   667  007973  51                 	db	81
   668  007974  49                 	db	73
   669  007975  45                 	db	69
   670  007976  43                 	db	67
   671  007977  61                 	db	97
   672  007978  00                 	db	0
   673  007979  00                 	db	0
   674  00797A  00                 	db	0
   675  00797B  7F                 	db	127
   676  00797C  41                 	db	65
   677  00797D  41                 	db	65
   678  00797E  00                 	db	0
   679  00797F  00                 	db	0
   680  007980  00                 	db	0
   681  007981  01                 	db	1
   682  007982  02                 	db	2
   683  007983  04                 	db	4
   684  007984  08                 	db	8
   685  007985  10                 	db	16
   686  007986  20                 	db	32
   687  007987  40                 	db	64
   688  007988  00                 	db	0
   689  007989  00                 	db	0
   690  00798A  00                 	db	0
   691  00798B  41                 	db	65
   692  00798C  41                 	db	65
   693  00798D  7F                 	db	127
   694  00798E  00                 	db	0
   695  00798F  00                 	db	0
   696  007990  00                 	db	0
   697  007991  00                 	db	0
   698  007992  04                 	db	4
   699  007993  02                 	db	2
   700  007994  01                 	db	1
   701  007995  01                 	db	1
   702  007996  02                 	db	2
   703  007997  04                 	db	4
   704  007998  00                 	db	0
   705  007999  00                 	db	0
   706  00799A  40                 	db	64
   707  00799B  40                 	db	64
   708  00799C  40                 	db	64
   709  00799D  40                 	db	64
   710  00799E  40                 	db	64
   711  00799F  40                 	db	64
   712  0079A0  00                 	db	0
   713  0079A1  00                 	db	0
   714  0079A2  01                 	db	1
   715  0079A3  02                 	db	2
   716  0079A4  00                 	db	0
   717  0079A5  00                 	db	0
   718  0079A6  00                 	db	0
   719  0079A7  00                 	db	0
   720  0079A8  00                 	db	0
   721  0079A9  00                 	db	0
   722  0079AA  34                 	db	52
   723  0079AB  4A                 	db	74
   724  0079AC  4A                 	db	74
   725  0079AD  4A                 	db	74
   726  0079AE  3C                 	db	60
   727  0079AF  40                 	db	64
   728  0079B0  00                 	db	0
   729  0079B1  00                 	db	0
   730  0079B2  41                 	db	65
   731  0079B3  3F                 	db	63
   732  0079B4  48                 	db	72
   733  0079B5  48                 	db	72
   734  0079B6  48                 	db	72
   735  0079B7  30                 	db	48
   736  0079B8  00                 	db	0
   737  0079B9  00                 	db	0
   738  0079BA  3C                 	db	60
   739  0079BB  42                 	db	66
   740  0079BC  42                 	db	66
   741  0079BD  42                 	db	66
   742  0079BE  24                 	db	36
   743  0079BF  00                 	db	0
   744  0079C0  00                 	db	0
   745  0079C1  00                 	db	0
   746  0079C2  30                 	db	48
   747  0079C3  48                 	db	72
   748  0079C4  48                 	db	72
   749  0079C5  49                 	db	73
   750  0079C6  3F                 	db	63
   751  0079C7  40                 	db	64
   752  0079C8  00                 	db	0
   753  0079C9  00                 	db	0
   754  0079CA  3C                 	db	60
   755  0079CB  4A                 	db	74
   756  0079CC  4A                 	db	74
   757  0079CD  4A                 	db	74
   758  0079CE  2C                 	db	44
   759  0079CF  00                 	db	0
   760  0079D0  00                 	db	0
   761  0079D1  00                 	db	0
   762  0079D2  00                 	db	0
   763  0079D3  48                 	db	72
   764  0079D4  7E                 	db	126
   765  0079D5  49                 	db	73
   766  0079D6  09                 	db	9
   767  0079D7  00                 	db	0
   768  0079D8  00                 	db	0
   769  0079D9  00                 	db	0
   770  0079DA  26                 	db	38
   771  0079DB  49                 	db	73
   772  0079DC  49                 	db	73
   773  0079DD  49                 	db	73
   774  0079DE  3F                 	db	63
   775  0079DF  01                 	db	1
   776  0079E0  00                 	db	0
   777  0079E1  41                 	db	65
   778  0079E2  7F                 	db	127
   779  0079E3  48                 	db	72
   780  0079E4  04                 	db	4
   781  0079E5  44                 	db	68
   782  0079E6  78                 	db	120
   783  0079E7  40                 	db	64
   784  0079E8  00                 	db	0
   785  0079E9  00                 	db	0
   786  0079EA  00                 	db	0
   787  0079EB  44                 	db	68
   788  0079EC  7D                 	db	125
   789  0079ED  40                 	db	64
   790  0079EE  00                 	db	0
   791  0079EF  00                 	db	0
   792  0079F0  00                 	db	0
   793  0079F1  00                 	db	0
   794  0079F2  00                 	db	0
   795  0079F3  40                 	db	64
   796  0079F4  44                 	db	68
   797  0079F5  3D                 	db	61
   798  0079F6  00                 	db	0
   799  0079F7  00                 	db	0
   800  0079F8  00                 	db	0
   801  0079F9  41                 	db	65
   802  0079FA  7F                 	db	127
   803  0079FB  10                 	db	16
   804  0079FC  18                 	db	24
   805  0079FD  24                 	db	36
   806  0079FE  42                 	db	66
   807  0079FF  42                 	db	66
   808  007A00  00                 	db	0
   809  007A01  00                 	db	0
   810  007A02  40                 	db	64
   811  007A03  41                 	db	65
   812  007A04  7F                 	db	127
   813  007A05  40                 	db	64
   814  007A06  40                 	db	64
   815  007A07  00                 	db	0
   816  007A08  00                 	db	0
   817  007A09  42                 	db	66
   818  007A0A  7E                 	db	126
   819  007A0B  02                 	db	2
   820  007A0C  7C                 	db	124
   821  007A0D  02                 	db	2
   822  007A0E  7E                 	db	126
   823  007A0F  40                 	db	64
   824  007A10  00                 	db	0
   825  007A11  42                 	db	66
   826  007A12  7E                 	db	126
   827  007A13  44                 	db	68
   828  007A14  02                 	db	2
   829  007A15  42                 	db	66
   830  007A16  7C                 	db	124
   831  007A17  40                 	db	64
   832  007A18  00                 	db	0
   833  007A19  00                 	db	0
   834  007A1A  3C                 	db	60
   835  007A1B  42                 	db	66
   836  007A1C  42                 	db	66
   837  007A1D  42                 	db	66
   838  007A1E  3C                 	db	60
   839  007A1F  00                 	db	0
   840  007A20  00                 	db	0
   841  007A21  00                 	db	0
   842  007A22  41                 	db	65
   843  007A23  7F                 	db	127
   844  007A24  49                 	db	73
   845  007A25  09                 	db	9
   846  007A26  09                 	db	9
   847  007A27  06                 	db	6
   848  007A28  00                 	db	0
   849  007A29  00                 	db	0
   850  007A2A  06                 	db	6
   851  007A2B  09                 	db	9
   852  007A2C  09                 	db	9
   853  007A2D  49                 	db	73
   854  007A2E  7F                 	db	127
   855  007A2F  41                 	db	65
   856  007A30  00                 	db	0
   857  007A31  00                 	db	0
   858  007A32  42                 	db	66
   859  007A33  7E                 	db	126
   860  007A34  44                 	db	68
   861  007A35  02                 	db	2
   862  007A36  02                 	db	2
   863  007A37  04                 	db	4
   864  007A38  00                 	db	0
   865  007A39  00                 	db	0
   866  007A3A  64                 	db	100
   867  007A3B  4A                 	db	74
   868  007A3C  4A                 	db	74
   869  007A3D  4A                 	db	74
   870  007A3E  36                 	db	54
   871  007A3F  00                 	db	0
   872  007A40  00                 	db	0
   873  007A41  00                 	db	0
   874  007A42  04                 	db	4
   875  007A43  3F                 	db	63
   876  007A44  44                 	db	68
   877  007A45  44                 	db	68
   878  007A46  20                 	db	32
   879  007A47  00                 	db	0
   880  007A48  00                 	db	0
   881  007A49  00                 	db	0
   882  007A4A  02                 	db	2
   883  007A4B  3E                 	db	62
   884  007A4C  40                 	db	64
   885  007A4D  40                 	db	64
   886  007A4E  22                 	db	34
   887  007A4F  7E                 	db	126
   888  007A50  40                 	db	64
   889  007A51  02                 	db	2
   890  007A52  0E                 	db	14
   891  007A53  32                 	db	50
   892  007A54  40                 	db	64
   893  007A55  32                 	db	50
   894  007A56  0E                 	db	14
   895  007A57  02                 	db	2
   896  007A58  00                 	db	0
   897  007A59  02                 	db	2
   898  007A5A  1E                 	db	30
   899  007A5B  62                 	db	98
   900  007A5C  18                 	db	24
   901  007A5D  62                 	db	98
   902  007A5E  1E                 	db	30
   903  007A5F  02                 	db	2
   904  007A60  00                 	db	0
   905  007A61  42                 	db	66
   906  007A62  62                 	db	98
   907  007A63  14                 	db	20
   908  007A64  08                 	db	8
   909  007A65  14                 	db	20
   910  007A66  62                 	db	98
   911  007A67  42                 	db	66
   912  007A68  00                 	db	0
   913  007A69  01                 	db	1
   914  007A6A  43                 	db	67
   915  007A6B  45                 	db	69
   916  007A6C  38                 	db	56
   917  007A6D  05                 	db	5
   918  007A6E  03                 	db	3
   919  007A6F  01                 	db	1
   920  007A70  00                 	db	0
   921  007A71  00                 	db	0
   922  007A72  46                 	db	70
   923  007A73  62                 	db	98
   924  007A74  52                 	db	82
   925  007A75  4A                 	db	74
   926  007A76  46                 	db	70
   927  007A77  62                 	db	98
   928  007A78  00                 	db	0
   929  007A79  00                 	db	0
   930  007A7A  00                 	db	0
   931  007A7B  08                 	db	8
   932  007A7C  36                 	db	54
   933  007A7D  41                 	db	65
   934  007A7E  00                 	db	0
   935  007A7F  00                 	db	0
   936  007A80  00                 	db	0
   937  007A81  00                 	db	0
   938  007A82  00                 	db	0
   939  007A83  00                 	db	0
   940  007A84  7F                 	db	127
   941  007A85  00                 	db	0
   942  007A86  00                 	db	0
   943  007A87  00                 	db	0
   944  007A88  00                 	db	0
   945  007A89  00                 	db	0
   946  007A8A  00                 	db	0
   947  007A8B  00                 	db	0
   948  007A8C  41                 	db	65
   949  007A8D  36                 	db	54
   950  007A8E  08                 	db	8
   951  007A8F  00                 	db	0
   952  007A90  00                 	db	0
   953  007A91  00                 	db	0
   954  007A92  18                 	db	24
   955  007A93  08                 	db	8
   956  007A94  08                 	db	8
   957  007A95  10                 	db	16
   958  007A96  10                 	db	16
   959  007A97  18                 	db	24
   960  007A98  00                 	db	0
   961  007A99  AA                 	db	170
   962  007A9A  55                 	db	85
   963  007A9B  AA                 	db	170
   964  007A9C  55                 	db	85
   965  007A9D  AA                 	db	170
   966  007A9E  55                 	db	85
   967  007A9F  AA                 	db	170
   968  007AA0  55                 	db	85
   969  007AA1                     __end_of_OledFont0:
   970                           	opt stack 0
   971  007AA1                     _configDescriptor1:
   972                           	opt stack 0
   973  007AA1  09                 	db	9
   974  007AA2  02                 	db	2
   975  007AA3  43                 	db	67
   976  007AA4  00                 	db	0
   977  007AA5  02                 	db	2
   978  007AA6  01                 	db	1
   979  007AA7  00                 	db	0
   980  007AA8  C0                 	db	192
   981  007AA9  32                 	db	50
   982  007AAA  09                 	db	9
   983  007AAB  04                 	db	4
   984  007AAC  00                 	db	0
   985  007AAD  00                 	db	0
   986  007AAE  01                 	db	1
   987  007AAF  02                 	db	2
   988  007AB0  02                 	db	2
   989  007AB1  01                 	db	1
   990  007AB2  00                 	db	0
   991  007AB3  05                 	db	5
   992  007AB4  24                 	db	36
   993  007AB5  00                 	db	0
   994  007AB6  10                 	db	16
   995  007AB7  01                 	db	1
   996  007AB8  04                 	db	4
   997  007AB9  24                 	db	36
   998  007ABA  02                 	db	2
   999  007ABB  02                 	db	2
  1000  007ABC  05                 	db	5
  1001  007ABD  24                 	db	36
  1002  007ABE  06                 	db	6
  1003  007ABF  00                 	db	0
  1004  007AC0  01                 	db	1
  1005  007AC1  05                 	db	5
  1006  007AC2  24                 	db	36
  1007  007AC3  01                 	db	1
  1008  007AC4  00                 	db	0
  1009  007AC5  01                 	db	1
  1010  007AC6  07                 	db	7
  1011  007AC7  05                 	db	5
  1012  007AC8  81                 	db	129
  1013  007AC9  03                 	db	3
  1014  007ACA  08                 	db	8
  1015  007ACB  00                 	db	0
  1016  007ACC  02                 	db	2
  1017  007ACD  09                 	db	9
  1018  007ACE  04                 	db	4
  1019  007ACF  01                 	db	1
  1020  007AD0  00                 	db	0
  1021  007AD1  02                 	db	2
  1022  007AD2  0A                 	db	10
  1023  007AD3  00                 	db	0
  1024  007AD4  00                 	db	0
  1025  007AD5  00                 	db	0
  1026  007AD6  07                 	db	7
  1027  007AD7  05                 	db	5
  1028  007AD8  02                 	db	2
  1029  007AD9  02                 	db	2
  1030  007ADA  40                 	db	64
  1031  007ADB  00                 	db	0
  1032  007ADC  00                 	db	0
  1033  007ADD  07                 	db	7
  1034  007ADE  05                 	db	5
  1035  007ADF  82                 	db	130
  1036  007AE0  02                 	db	2
  1037  007AE1  40                 	db	64
  1038  007AE2  00                 	db	0
  1039  007AE3  00                 	db	0
  1040  007AE4                     __end_of_configDescriptor1:
  1041                           	opt stack 0
  1042  007AE4                     _sd001:
  1043                           	opt stack 0
  1044  007AE4  34                 	db	52
  1045  007AE5  03                 	db	3
  1046  007AE6  004D               	dw	77
  1047  007AE8  0069               	dw	105
  1048  007AEA  0063               	dw	99
  1049  007AEC  0072               	dw	114
  1050  007AEE  006F               	dw	111
  1051  007AF0  0063               	dw	99
  1052  007AF2  0068               	dw	104
  1053  007AF4  0069               	dw	105
  1054  007AF6  0070               	dw	112
  1055  007AF8  0020               	dw	32
  1056  007AFA  0054               	dw	84
  1057  007AFC  0065               	dw	101
  1058  007AFE  0063               	dw	99
  1059  007B00  0068               	dw	104
  1060  007B02  006E               	dw	110
  1061  007B04  006F               	dw	111
  1062  007B06  006C               	dw	108
  1063  007B08  006F               	dw	111
  1064  007B0A  0067               	dw	103
  1065  007B0C  0079               	dw	121
  1066  007B0E  0020               	dw	32
  1067  007B10  0049               	dw	73
  1068  007B12  006E               	dw	110
  1069  007B14  0063               	dw	99
  1070  007B16  002E               	dw	46
  1071  007B18                     __end_of_sd001:
  1072                           	opt stack 0
  1073  007B18                     _sd002:
  1074                           	opt stack 0
  1075  007B18  34                 	db	52
  1076  007B19  03                 	db	3
  1077  007B1A  0043               	dw	67
  1078  007B1C  0044               	dw	68
  1079  007B1E  0043               	dw	67
  1080  007B20  0020               	dw	32
  1081  007B22  0052               	dw	82
  1082  007B24  0053               	dw	83
  1083  007B26  002D               	dw	45
  1084  007B28  0032               	dw	50
  1085  007B2A  0033               	dw	51
  1086  007B2C  0032               	dw	50
  1087  007B2E  0020               	dw	32
  1088  007B30  0045               	dw	69
  1089  007B32  006D               	dw	109
  1090  007B34  0075               	dw	117
  1091  007B36  006C               	dw	108
  1092  007B38  0061               	dw	97
  1093  007B3A  0074               	dw	116
  1094  007B3C  0069               	dw	105
  1095  007B3E  006F               	dw	111
  1096  007B40  006E               	dw	110
  1097  007B42  0020               	dw	32
  1098  007B44  0044               	dw	68
  1099  007B46  0065               	dw	101
  1100  007B48  006D               	dw	109
  1101  007B4A  006F               	dw	111
  1102  007B4C                     __end_of_sd002:
  1103                           	opt stack 0
  1104  007B4C                     _device_dsc:
  1105                           	opt stack 0
  1106  007B4C  12                 	db	18
  1107  007B4D  01                 	db	1
  1108  007B4E  0200               	dw	512
  1109  007B50  02                 	db	2
  1110  007B51  00                 	db	0
  1111  007B52  00                 	db	0
  1112  007B53  08                 	db	8
  1113  007B54  04D8               	dw	1240
  1114  007B56  000A               	dw	10
  1115  007B58  0100               	dw	256
  1116  007B5A  01                 	db	1
  1117  007B5B  02                 	db	2
  1118  007B5C  00                 	db	0
  1119  007B5D  01                 	db	1
  1120  007B5E                     __end_of_device_dsc:
  1121                           	opt stack 0
  1122  007B5E                     _sd000:
  1123                           	opt stack 0
  1124  007B5E  04                 	db	4
  1125  007B5F  03                 	db	3
  1126  007B60  0409               	dw	1033
  1127  007B62                     __end_of_sd000:
  1128                           	opt stack 0
  1129  0000                     _ANSELAbits	set	3931
  1130  0000                     _ANSELCbits	set	3933
  1131  0000                     _ACTCON	set	4021
  1132  0000                     _ADCON0	set	4034
  1133  0000                     _ADCON0bits	set	4034
  1134  0000                     _ADCON1	set	4033
  1135  0000                     _ADCON2	set	4032
  1136  0000                     _ADRESH	set	4036
  1137  0000                     _ADRESL	set	4035
  1138  0000                     _BAUDCON	set	4024
  1139  0000                     _CM1CON0	set	3992
  1140  0000                     _CM2CON1bits	set	3994
  1141  0000                     _EEADR	set	4009
  1142  0000                     _EECON1bits	set	4006
  1143  0000                     _EECON2	set	4007
  1144  0000                     _EEDATA	set	4008
  1145  0000                     _INTCONbits	set	4082
  1146  0000                     _IOCCbits	set	3975
  1147  0000                     _IPR3bits	set	4005
  1148  0000                     _LATAbits	set	3977
  1149  0000                     _LATBbits	set	3978
  1150  0000                     _LATCbits	set	3979
  1151  0000                     _OSCCON	set	4051
  1152  0000                     _OSCCON2	set	4050
  1153  0000                     _OSCCON2bits	set	4050
  1154  0000                     _OSCTUNE	set	3995
  1155  0000                     _PIE1bits	set	3997
  1156  0000                     _PIE2bits	set	4000
  1157  0000                     _PIE3bits	set	4003
  1158  0000                     _PIR1bits	set	3998
  1159  0000                     _PIR2bits	set	4001
  1160  0000                     _PIR3bits	set	4004
  1161  0000                     _PORTAbits	set	3968
  1162  0000                     _PORTCbits	set	3970
  1163  0000                     _PR2	set	4027
  1164  0000                     _RCONbits	set	4048
  1165  0000                     _RCREG	set	4014
  1166  0000                     _RCSTA	set	4011
  1167  0000                     _RCSTAbits	set	4011
  1168  0000                     _SPBRG	set	4015
  1169  0000                     _SPBRGH	set	4016
  1170  0000                     _SSP1ADD	set	4040
  1171  0000                     _SSP1CON1	set	4038
  1172  0000                     _SSP1CON1bits	set	4038
  1173  0000                     _SSP1STAT	set	4039
  1174  0000                     _SSP1STATbits	set	4039
  1175  0000                     _SSPBUF	set	4041
  1176  0000                     _T1CON	set	4045
  1177  0000                     _T1CONbits	set	4045
  1178  0000                     _T1GCON	set	4044
  1179  0000                     _T2CON	set	4026
  1180  0000                     _T2CONbits	set	4026
  1181  0000                     _TMR1H	set	4047
  1182  0000                     _TMR1L	set	4046
  1183  0000                     _TMR2	set	4028
  1184  0000                     _TRISAbits	set	3986
  1185  0000                     _TRISBbits	set	3987
  1186  0000                     _TRISCbits	set	3988
  1187  0000                     _TXREG	set	4013
  1188  0000                     _TXSTA	set	4012
  1189  0000                     _TXSTAbits	set	4012
  1190  0000                     _UADDR	set	3939
  1191  0000                     _UCFG	set	3938
  1192  0000                     _UCON	set	3936
  1193  0000                     _UCONbits	set	3936
  1194  0000                     _UEIE	set	3942
  1195  0000                     _UEIR	set	3943
  1196  0000                     _UEP0bits	set	3946
  1197  0000                     _UIE	set	3940
  1198  0000                     _UIEbits	set	3940
  1199  0000                     _UIR	set	3941
  1200  0000                     _UIRbits	set	3941
  1201  0000                     _USTAT	set	3937
  1202  0000                     _VREFCON0	set	3965
  1203  0000                     _UEP0	set	3946
  1204  0000                     _UEP1	set	3947
  1205  0000                     _CKE	set	32318
  1206  0000                     _CKP	set	32308
  1207  0000                     _GIE	set	32663
  1208  0000                     _PEIE	set	32662
  1209  007B62                     STR_38:
  1210  007B62  6D                 	db	109	;'m'
  1211  007B63  61                 	db	97	;'a'
  1212  007B64  63                 	db	99	;'c'
  1213  007B65  20                 	db	32
  1214  007B66  73                 	db	115	;'s'
  1215  007B67  65                 	db	101	;'e'
  1216  007B68  74                 	db	116	;'t'
  1217  007B69  20                 	db	32
  1218  007B6A  6E                 	db	110	;'n'
  1219  007B6B  77                 	db	119	;'w'
  1220  007B6C  6B                 	db	107	;'k'
  1221  007B6D  73                 	db	115	;'s'
  1222  007B6E  6B                 	db	107	;'k'
  1223  007B6F  65                 	db	101	;'e'
  1224  007B70  79                 	db	121	;'y'
  1225  007B71  20                 	db	32
  1226  007B72  32                 	db	50	;'2'
  1227  007B73  42                 	db	66	;'B'
  1228  007B74  37                 	db	55	;'7'
  1229  007B75  45                 	db	69	;'E'
  1230  007B76  31                 	db	49	;'1'
  1231  007B77  35                 	db	53	;'5'
  1232  007B78  31                 	db	49	;'1'
  1233  007B79  36                 	db	54	;'6'
  1234  007B7A  32                 	db	50	;'2'
  1235  007B7B  38                 	db	56	;'8'
  1236  007B7C  41                 	db	65	;'A'
  1237  007B7D  45                 	db	69	;'E'
  1238  007B7E  44                 	db	68	;'D'
  1239  007B7F  32                 	db	50	;'2'
  1240  007B80  41                 	db	65	;'A'
  1241  007B81  36                 	db	54	;'6'
  1242  007B82  41                 	db	65	;'A'
  1243  007B83  42                 	db	66	;'B'
  1244  007B84  46                 	db	70	;'F'
  1245  007B85  37                 	db	55	;'7'
  1246  007B86  31                 	db	49	;'1'
  1247  007B87  35                 	db	53	;'5'
  1248  007B88  38                 	db	56	;'8'
  1249  007B89  38                 	db	56	;'8'
  1250  007B8A  30                 	db	48	;'0'
  1251  007B8B  39                 	db	57	;'9'
  1252  007B8C  43                 	db	67	;'C'
  1253  007B8D  46                 	db	70	;'F'
  1254  007B8E  34                 	db	52	;'4'
  1255  007B8F  46                 	db	70	;'F'
  1256  007B90  33                 	db	51	;'3'
  1257  007B91  43                 	db	67	;'C'
  1258  007B92  00                 	db	0
  1259  007B93                     STR_35:
  1260  007B93  6D                 	db	109	;'m'
  1261  007B94  61                 	db	97	;'a'
  1262  007B95  63                 	db	99	;'c'
  1263  007B96  20                 	db	32
  1264  007B97  73                 	db	115	;'s'
  1265  007B98  65                 	db	101	;'e'
  1266  007B99  74                 	db	116	;'t'
  1267  007B9A  20                 	db	32
  1268  007B9B  61                 	db	97	;'a'
  1269  007B9C  70                 	db	112	;'p'
  1270  007B9D  70                 	db	112	;'p'
  1271  007B9E  73                 	db	115	;'s'
  1272  007B9F  6B                 	db	107	;'k'
  1273  007BA0  65                 	db	101	;'e'
  1274  007BA1  79                 	db	121	;'y'
  1275  007BA2  20                 	db	32
  1276  007BA3  32                 	db	50	;'2'
  1277  007BA4  42                 	db	66	;'B'
  1278  007BA5  37                 	db	55	;'7'
  1279  007BA6  45                 	db	69	;'E'
  1280  007BA7  31                 	db	49	;'1'
  1281  007BA8  35                 	db	53	;'5'
  1282  007BA9  31                 	db	49	;'1'
  1283  007BAA  36                 	db	54	;'6'
  1284  007BAB  32                 	db	50	;'2'
  1285  007BAC  38                 	db	56	;'8'
  1286  007BAD  41                 	db	65	;'A'
  1287  007BAE  45                 	db	69	;'E'
  1288  007BAF  44                 	db	68	;'D'
  1289  007BB0  32                 	db	50	;'2'
  1290  007BB1  41                 	db	65	;'A'
  1291  007BB2  36                 	db	54	;'6'
  1292  007BB3  41                 	db	65	;'A'
  1293  007BB4  42                 	db	66	;'B'
  1294  007BB5  46                 	db	70	;'F'
  1295  007BB6  37                 	db	55	;'7'
  1296  007BB7  31                 	db	49	;'1'
  1297  007BB8  35                 	db	53	;'5'
  1298  007BB9  38                 	db	56	;'8'
  1299  007BBA  38                 	db	56	;'8'
  1300  007BBB  30                 	db	48	;'0'
  1301  007BBC  39                 	db	57	;'9'
  1302  007BBD  43                 	db	67	;'C'
  1303  007BBE  46                 	db	70	;'F'
  1304  007BBF  34                 	db	52	;'4'
  1305  007BC0  46                 	db	70	;'F'
  1306  007BC1  33                 	db	51	;'3'
  1307  007BC2  43                 	db	67	;'C'
  1308  007BC3  00                 	db	0
  1309  007BC4                     STR_105:
  1310  007BC4  73                 	db	115	;'s'
  1311  007BC5  79                 	db	121	;'y'
  1312  007BC6  73                 	db	115	;'s'
  1313  007BC7  20                 	db	32
  1314  007BC8  73                 	db	115	;'s'
  1315  007BC9  65                 	db	101	;'e'
  1316  007BCA  74                 	db	116	;'t'
  1317  007BCB  20                 	db	32
  1318  007BCC  70                 	db	112	;'p'
  1319  007BCD  69                 	db	105	;'i'
  1320  007BCE  6E                 	db	110	;'n'
  1321  007BCF  64                 	db	100	;'d'
  1322  007BD0  69                 	db	105	;'i'
  1323  007BD1  67                 	db	103	;'g'
  1324  007BD2  20                 	db	32
  1325  007BD3  47                 	db	71	;'G'
  1326  007BD4  50                 	db	80	;'P'
  1327  007BD5  49                 	db	73	;'I'
  1328  007BD6  4F                 	db	79	;'O'
  1329  007BD7  31                 	db	49	;'1'
  1330  007BD8  30                 	db	48	;'0'
  1331  007BD9  20                 	db	32
  1332  007BDA  30                 	db	48	;'0'
  1333  007BDB  0D                 	db	13
  1334  007BDC  0A                 	db	10
  1335  007BDD  00                 	db	0
  1336  007BDE  73                 	db	115	;'s'
  1337  007BDF  79                 	db	121	;'y'
  1338  007BE0  73                 	db	115	;'s'
  1339  007BE1  20                 	db	32
  1340  007BE2  73                 	db	115	;'s'
  1341  007BE3  65                 	db	101	;'e'
  1342  007BE4  74                 	db	116	;'t'
  1343  007BE5  20                 	db	32
  1344  007BE6  70                 	db	112	;'p'
  1345  007BE7  69                 	db	105	;'i'
  1346  007BE8  6E                 	db	110	;'n'
  1347  007BE9  64                 	db	100	;'d'
  1348  007BEA  69                 	db	105	;'i'
  1349  007BEB  67                 	db	103	;'g'
  1350  007BEC  20                 	db	32
  1351  007BED  47                 	db	71	;'G'
  1352  007BEE  50                 	db	80	;'P'
  1353  007BEF  49                 	db	73	;'I'
  1354  007BF0  4F                 	db	79	;'O'
  1355  007BF1  31                 	db	49	;'1'
  1356  007BF2  31                 	db	49	;'1'
  1357  007BF3  20                 	db	32
  1358  007BF4  30                 	db	48	;'0'
  1359  007BF5  0D                 	db	13
  1360  007BF6  0A                 	db	10
  1361  007BF7  00                 	db	0
  1362  007BF8  73                 	db	115	;'s'
  1363  007BF9  79                 	db	121	;'y'
  1364  007BFA  73                 	db	115	;'s'
  1365  007BFB  20                 	db	32
  1366  007BFC  73                 	db	115	;'s'
  1367  007BFD  65                 	db	101	;'e'
  1368  007BFE  74                 	db	116	;'t'
  1369  007BFF  20                 	db	32
  1370  007C00  70                 	db	112	;'p'
  1371  007C01  69                 	db	105	;'i'
  1372  007C02  6E                 	db	110	;'n'
  1373  007C03  64                 	db	100	;'d'
  1374  007C04  69                 	db	105	;'i'
  1375  007C05  67                 	db	103	;'g'
  1376  007C06  20                 	db	32
  1377  007C07  47                 	db	71	;'G'
  1378  007C08  50                 	db	80	;'P'
  1379  007C09  49                 	db	73	;'I'
  1380  007C0A  4F                 	db	79	;'O'
  1381  007C0B  31                 	db	49	;'1'
  1382  007C0C  30                 	db	48	;'0'
  1383  007C0D  20                 	db	32
  1384  007C0E  31                 	db	49	;'1'
  1385  007C0F  0D                 	db	13
  1386  007C10  0A                 	db	10
  1387  007C11  00                 	db	0
  1388  007C12  73                 	db	115	;'s'
  1389  007C13  79                 	db	121	;'y'
  1390  007C14  73                 	db	115	;'s'
  1391  007C15  20                 	db	32
  1392  007C16  73                 	db	115	;'s'
  1393  007C17  65                 	db	101	;'e'
  1394  007C18  74                 	db	116	;'t'
  1395  007C19  20                 	db	32
  1396  007C1A  70                 	db	112	;'p'
  1397  007C1B  69                 	db	105	;'i'
  1398  007C1C  6E                 	db	110	;'n'
  1399  007C1D  64                 	db	100	;'d'
  1400  007C1E  69                 	db	105	;'i'
  1401  007C1F  67                 	db	103	;'g'
  1402  007C20  20                 	db	32
  1403  007C21  47                 	db	71	;'G'
  1404  007C22  50                 	db	80	;'P'
  1405  007C23  49                 	db	73	;'I'
  1406  007C24  4F                 	db	79	;'O'
  1407  007C25  31                 	db	49	;'1'
  1408  007C26  31                 	db	49	;'1'
  1409  007C27  20                 	db	32
  1410  007C28  31                 	db	49	;'1'
  1411  007C29  0D                 	db	13
  1412  007C2A  0A                 	db	10
  1413  007C2B  00                 	db	0
  1414  007C2C                     STR_32:
  1415  007C2C  6D                 	db	109	;'m'
  1416  007C2D  61                 	db	97	;'a'
  1417  007C2E  63                 	db	99	;'c'
  1418  007C2F  20                 	db	32
  1419  007C30  73                 	db	115	;'s'
  1420  007C31  65                 	db	101	;'e'
  1421  007C32  74                 	db	116	;'t'
  1422  007C33  20                 	db	32
  1423  007C34  64                 	db	100	;'d'
  1424  007C35  65                 	db	101	;'e'
  1425  007C36  76                 	db	118	;'v'
  1426  007C37  61                 	db	97	;'a'
  1427  007C38  64                 	db	100	;'d'
  1428  007C39  64                 	db	100	;'d'
  1429  007C3A  72                 	db	114	;'r'
  1430  007C3B  20                 	db	32
  1431  007C3C  41                 	db	65	;'A'
  1432  007C3D  42                 	db	66	;'B'
  1433  007C3E  43                 	db	67	;'C'
  1434  007C3F  44                 	db	68	;'D'
  1435  007C40  30                 	db	48	;'0'
  1436  007C41  30                 	db	48	;'0'
  1437  007C42  30                 	db	48	;'0'
  1438  007C43  32                 	db	50	;'2'
  1439  007C44  00                 	db	0
  1440  007C45                     STR_60:
  1441  007C45  6D                 	db	109	;'m'
  1442  007C46  61                 	db	97	;'a'
  1443  007C47  63                 	db	99	;'c'
  1444  007C48  20                 	db	32
  1445  007C49  74                 	db	116	;'t'
  1446  007C4A  78                 	db	120	;'x'
  1447  007C4B  20                 	db	32
  1448  007C4C  75                 	db	117	;'u'
  1449  007C4D  6E                 	db	110	;'n'
  1450  007C4E  63                 	db	99	;'c'
  1451  007C4F  6E                 	db	110	;'n'
  1452  007C50  66                 	db	102	;'f'
  1453  007C51  20                 	db	32
  1454  007C52  31                 	db	49	;'1'
  1455  007C53  20                 	db	32
  1456  007C54  30                 	db	48	;'0'
  1457  007C55  30                 	db	48	;'0'
  1458  007C56  30                 	db	48	;'0'
  1459  007C57  30                 	db	48	;'0'
  1460  007C58  30                 	db	48	;'0'
  1461  007C59  30                 	db	48	;'0'
  1462  007C5A  30                 	db	48	;'0'
  1463  007C5B  30                 	db	48	;'0'
  1464  007C5C  00                 	db	0
  1465  007C5D                     STR_47:
  1466  007C5D  6D                 	db	109	;'m'
  1467  007C5E  61                 	db	97	;'a'
  1468  007C5F  63                 	db	99	;'c'
  1469  007C60  20                 	db	32
  1470  007C61  73                 	db	115	;'s'
  1471  007C62  65                 	db	101	;'e'
  1472  007C63  74                 	db	116	;'t'
  1473  007C64  20                 	db	32
  1474  007C65  72                 	db	114	;'r'
  1475  007C66  78                 	db	120	;'x'
  1476  007C67  32                 	db	50	;'2'
  1477  007C68  20                 	db	32
  1478  007C69  38                 	db	56	;'8'
  1479  007C6A  20                 	db	32
  1480  007C6B  39                 	db	57	;'9'
  1481  007C6C  32                 	db	50	;'2'
  1482  007C6D  33                 	db	51	;'3'
  1483  007C6E  33                 	db	51	;'3'
  1484  007C6F  30                 	db	48	;'0'
  1485  007C70  30                 	db	48	;'0'
  1486  007C71  30                 	db	48	;'0'
  1487  007C72  30                 	db	48	;'0'
  1488  007C73  30                 	db	48	;'0'
  1489  007C74  00                 	db	0
  1490  007C75                     STR_81:
  1491  007C75  6D                 	db	109	;'m'
  1492  007C76  61                 	db	97	;'a'
  1493  007C77  63                 	db	99	;'c'
  1494  007C78  20                 	db	32
  1495  007C79  74                 	db	116	;'t'
  1496  007C7A  78                 	db	120	;'x'
  1497  007C7B  20                 	db	32
  1498  007C7C  75                 	db	117	;'u'
  1499  007C7D  6E                 	db	110	;'n'
  1500  007C7E  63                 	db	99	;'c'
  1501  007C7F  6E                 	db	110	;'n'
  1502  007C80  66                 	db	102	;'f'
  1503  007C81  20                 	db	32
  1504  007C82  31                 	db	49	;'1'
  1505  007C83  20                 	db	32
  1506  007C84  25                 	db	37
  1507  007C85  30                 	db	48	;'0'
  1508  007C86  34                 	db	52	;'4'
  1509  007C87  58                 	db	88	;'X'
  1510  007C88  25                 	db	37
  1511  007C89  30                 	db	48	;'0'
  1512  007C8A  34                 	db	52	;'4'
  1513  007C8B  58                 	db	88	;'X'
  1514  007C8C  00                 	db	0
  1515  007C8D                     STR_50:
  1516  007C8D  6D                 	db	109	;'m'
  1517  007C8E  61                 	db	97	;'a'
  1518  007C8F  63                 	db	99	;'c'
  1519  007C90  20                 	db	32
  1520  007C91  73                 	db	115	;'s'
  1521  007C92  65                 	db	101	;'e'
  1522  007C93  74                 	db	116	;'t'
  1523  007C94  20                 	db	32
  1524  007C95  63                 	db	99	;'c'
  1525  007C96  68                 	db	104	;'h'
  1526  007C97  20                 	db	32
  1527  007C98  73                 	db	115	;'s'
  1528  007C99  74                 	db	116	;'t'
  1529  007C9A  61                 	db	97	;'a'
  1530  007C9B  74                 	db	116	;'t'
  1531  007C9C  75                 	db	117	;'u'
  1532  007C9D  73                 	db	115	;'s'
  1533  007C9E  20                 	db	32
  1534  007C9F  25                 	db	37
  1535  007CA0  64                 	db	100	;'d'
  1536  007CA1  20                 	db	32
  1537  007CA2  25                 	db	37
  1538  007CA3  73                 	db	115	;'s'
  1539  007CA4  00                 	db	0
  1540  007CA5                     STR_22:
  1541  007CA5  73                 	db	115	;'s'
  1542  007CA6  79                 	db	121	;'y'
  1543  007CA7  73                 	db	115	;'s'
  1544  007CA8  20                 	db	32
  1545  007CA9  73                 	db	115	;'s'
  1546  007CAA  6C                 	db	108	;'l'
  1547  007CAB  65                 	db	101	;'e'
  1548  007CAC  65                 	db	101	;'e'
  1549  007CAD  70                 	db	112	;'p'
  1550  007CAE  20                 	db	32
  1551  007CAF  39                 	db	57	;'9'
  1552  007CB0  39                 	db	57	;'9'
  1553  007CB1  39                 	db	57	;'9'
  1554  007CB2  39                 	db	57	;'9'
  1555  007CB3  39                 	db	57	;'9'
  1556  007CB4  39                 	db	57	;'9'
  1557  007CB5  39                 	db	57	;'9'
  1558  007CB6  39                 	db	57	;'9'
  1559  007CB7  39                 	db	57	;'9'
  1560  007CB8  00                 	db	0
  1561  007CB9                     STR_111:
  1562  007CB9  30                 	db	48	;'0'
  1563  007CBA  31                 	db	49	;'1'
  1564  007CBB  32                 	db	50	;'2'
  1565  007CBC  33                 	db	51	;'3'
  1566  007CBD  34                 	db	52	;'4'
  1567  007CBE  35                 	db	53	;'5'
  1568  007CBF  36                 	db	54	;'6'
  1569  007CC0  37                 	db	55	;'7'
  1570  007CC1  38                 	db	56	;'8'
  1571  007CC2  39                 	db	57	;'9'
  1572  007CC3  41                 	db	65	;'A'
  1573  007CC4  42                 	db	66	;'B'
  1574  007CC5  43                 	db	67	;'C'
  1575  007CC6  44                 	db	68	;'D'
  1576  007CC7  45                 	db	69	;'E'
  1577  007CC8  46                 	db	70	;'F'
  1578  007CC9  00                 	db	0
  1579  007CCA                     STR_28:
  1580  007CCA  20                 	db	32
  1581  007CCB  28                 	db	40
  1582  007CCC  53                 	db	83	;'S'
  1583  007CCD  31                 	db	49	;'1'
  1584  007CCE  29                 	db	41
  1585  007CCF  20                 	db	32
  1586  007CD0  20                 	db	32
  1587  007CD1  20                 	db	32
  1588  007CD2  20                 	db	32
  1589  007CD3  20                 	db	32
  1590  007CD4  20                 	db	32
  1591  007CD5  28                 	db	40
  1592  007CD6  53                 	db	83	;'S'
  1593  007CD7  32                 	db	50	;'2'
  1594  007CD8  29                 	db	41
  1595  007CD9  20                 	db	32
  1596  007CDA  00                 	db	0
  1597  007CDB                     STR_58:
  1598  007CDB  57                 	db	87	;'W'
  1599  007CDC  61                 	db	97	;'a'
  1600  007CDD  69                 	db	105	;'i'
  1601  007CDE  74                 	db	116	;'t'
  1602  007CDF  20                 	db	32
  1603  007CE0  61                 	db	97	;'a'
  1604  007CE1  63                 	db	99	;'c'
  1605  007CE2  63                 	db	99	;'c'
  1606  007CE3  65                 	db	101	;'e'
  1607  007CE4  70                 	db	112	;'p'
  1608  007CE5  74                 	db	116	;'t'
  1609  007CE6  65                 	db	101	;'e'
  1610  007CE7  64                 	db	100	;'d'
  1611  007CE8  2E                 	db	46
  1612  007CE9  2E                 	db	46
  1613  007CEA  2E                 	db	46
  1614  007CEB  00                 	db	0
  1615  007CEC                     STR_25:
  1616  007CEC  52                 	db	82	;'R'
  1617  007CED  65                 	db	101	;'e'
  1618  007CEE  52                 	db	82	;'R'
  1619  007CEF  75                 	db	117	;'u'
  1620  007CF0  6E                 	db	110	;'n'
  1621  007CF1  20                 	db	32
  1622  007CF2  50                 	db	80	;'P'
  1623  007CF3  77                 	db	119	;'w'
  1624  007CF4  72                 	db	114	;'r'
  1625  007CF5  54                 	db	84	;'T'
  1626  007CF6  73                 	db	115	;'s'
  1627  007CF7  74                 	db	116	;'t'
  1628  007CF8  3C                 	db	60	;'<'
  1629  007CF9  53                 	db	83	;'S'
  1630  007CFA  32                 	db	50	;'2'
  1631  007CFB  3E                 	db	62	;'>'
  1632  007CFC  00                 	db	0
  1633  007CFD                     STR_85:
  1634  007CFD  49                 	db	73	;'I'
  1635  007CFE  73                 	db	115	;'s'
  1636  007CFF  73                 	db	115	;'s'
  1637  007D00  75                 	db	117	;'u'
  1638  007D01  65                 	db	101	;'e'
  1639  007D02  20                 	db	32
  1640  007D03  50                 	db	80	;'P'
  1641  007D04  65                 	db	101	;'e'
  1642  007D05  72                 	db	114	;'r'
  1643  007D06  6F                 	db	111	;'o'
  1644  007D07  64                 	db	100	;'d'
  1645  007D08  69                 	db	105	;'i'
  1646  007D09  63                 	db	99	;'c'
  1647  007D0A  20                 	db	32
  1648  007D0B  54                 	db	84	;'T'
  1649  007D0C  58                 	db	88	;'X'
  1650  007D0D  00                 	db	0
  1651  007D0E                     STR_62:
  1652  007D0E  6D                 	db	109	;'m'
  1653  007D0F  6F                 	db	111	;'o'
  1654  007D10  74                 	db	116	;'t'
  1655  007D11  65                 	db	101	;'e'
  1656  007D12  57                 	db	87	;'W'
  1657  007D13  61                 	db	97	;'a'
  1658  007D14  69                 	db	105	;'i'
  1659  007D15  74                 	db	116	;'t'
  1660  007D16  41                 	db	65	;'A'
  1661  007D17  63                 	db	99	;'c'
  1662  007D18  63                 	db	99	;'c'
  1663  007D19  65                 	db	101	;'e'
  1664  007D1A  70                 	db	112	;'p'
  1665  007D1B  74                 	db	116	;'t'
  1666  007D1C  65                 	db	101	;'e'
  1667  007D1D  64                 	db	100	;'d'
  1668  007D1E  00                 	db	0
  1669  007D1F                     STR_70:
  1670  007D1F  53                 	db	83	;'S'
  1671  007D20  32                 	db	50	;'2'
  1672  007D21  20                 	db	32
  1673  007D22  3D                 	db	61	;'='
  1674  007D23  20                 	db	32
  1675  007D24  6D                 	db	109	;'m'
  1676  007D25  61                 	db	97	;'a'
  1677  007D26  6E                 	db	110	;'n'
  1678  007D27  75                 	db	117	;'u'
  1679  007D28  61                 	db	97	;'a'
  1680  007D29  6C                 	db	108	;'l'
  1681  007D2A  20                 	db	32
  1682  007D2B  73                 	db	115	;'s'
  1683  007D2C  65                 	db	101	;'e'
  1684  007D2D  6E                 	db	110	;'n'
  1685  007D2E  64                 	db	100	;'d'
  1686  007D2F  00                 	db	0
  1687  007D30                     STR_69:
  1688  007D30  53                 	db	83	;'S'
  1689  007D31  31                 	db	49	;'1'
  1690  007D32  20                 	db	32
  1691  007D33  3D                 	db	61	;'='
  1692  007D34  20                 	db	32
  1693  007D35  61                 	db	97	;'a'
  1694  007D36  75                 	db	117	;'u'
  1695  007D37  74                 	db	116	;'t'
  1696  007D38  6F                 	db	111	;'o'
  1697  007D39  20                 	db	32
  1698  007D3A  6F                 	db	111	;'o'
  1699  007D3B  6E                 	db	110	;'n'
  1700  007D3C  2F                 	db	47
  1701  007D3D  6F                 	db	111	;'o'
  1702  007D3E  66                 	db	102	;'f'
  1703  007D3F  66                 	db	102	;'f'
  1704  007D40  00                 	db	0
  1705  007D41                     STR_26:
  1706  007D41  4D                 	db	77	;'M'
  1707  007D42  6F                 	db	111	;'o'
  1708  007D43  62                 	db	98	;'b'
  1709  007D44  69                 	db	105	;'i'
  1710  007D45  6C                 	db	108	;'l'
  1711  007D46  65                 	db	101	;'e'
  1712  007D47  20                 	db	32
  1713  007D48  4D                 	db	77	;'M'
  1714  007D49  6F                 	db	111	;'o'
  1715  007D4A  74                 	db	116	;'t'
  1716  007D4B  65                 	db	101	;'e'
  1717  007D4C  20                 	db	32
  1718  007D4D  2D                 	db	45
  1719  007D4E  41                 	db	65	;'A'
  1720  007D4F  70                 	db	112	;'p'
  1721  007D50  70                 	db	112	;'p'
  1722  007D51  00                 	db	0
  1723  007D52                     STR_27:
  1724  007D52  4E                 	db	78	;'N'
  1725  007D53  61                 	db	97	;'a'
  1726  007D54  76                 	db	118	;'v'
  1727  007D55  69                 	db	105	;'i'
  1728  007D56  67                 	db	103	;'g'
  1729  007D57  61                 	db	97	;'a'
  1730  007D58  74                 	db	116	;'t'
  1731  007D59  65                 	db	101	;'e'
  1732  007D5A  20                 	db	32
  1733  007D5B  20                 	db	32
  1734  007D5C  53                 	db	83	;'S'
  1735  007D5D  65                 	db	101	;'e'
  1736  007D5E  6C                 	db	108	;'l'
  1737  007D5F  65                 	db	101	;'e'
  1738  007D60  63                 	db	99	;'c'
  1739  007D61  74                 	db	116	;'t'
  1740  007D62  00                 	db	0
  1741  007D63                     STR_88:
  1742  007D63  28                 	db	40
  1743  007D64  4E                 	db	78	;'N'
  1744  007D65  41                 	db	65	;'A'
  1745  007D66  56                 	db	86	;'V'
  1746  007D67  29                 	db	41
  1747  007D68  20                 	db	32
  1748  007D69  20                 	db	32
  1749  007D6A  20                 	db	32
  1750  007D6B  20                 	db	32
  1751  007D6C  28                 	db	40
  1752  007D6D  53                 	db	83	;'S'
  1753  007D6E  45                 	db	69	;'E'
  1754  007D6F  4C                 	db	76	;'L'
  1755  007D70  29                 	db	41
  1756  007D71  20                 	db	32
  1757  007D72  00                 	db	0
  1758  007D73                     STR_44:
  1759  007D73  6D                 	db	109	;'m'
  1760  007D74  61                 	db	97	;'a'
  1761  007D75  63                 	db	99	;'c'
  1762  007D76  20                 	db	32
  1763  007D77  73                 	db	115	;'s'
  1764  007D78  65                 	db	101	;'e'
  1765  007D79  74                 	db	116	;'t'
  1766  007D7A  20                 	db	32
  1767  007D7B  73                 	db	115	;'s'
  1768  007D7C  79                 	db	121	;'y'
  1769  007D7D  6E                 	db	110	;'n'
  1770  007D7E  63                 	db	99	;'c'
  1771  007D7F  20                 	db	32
  1772  007D80  33                 	db	51	;'3'
  1773  007D81  34                 	db	52	;'4'
  1774  007D82  00                 	db	0
  1775  007D83                     STR_41:
  1776  007D83  6D                 	db	109	;'m'
  1777  007D84  61                 	db	97	;'a'
  1778  007D85  63                 	db	99	;'c'
  1779  007D86  20                 	db	32
  1780  007D87  73                 	db	115	;'s'
  1781  007D88  65                 	db	101	;'e'
  1782  007D89  74                 	db	116	;'t'
  1783  007D8A  20                 	db	32
  1784  007D8B  61                 	db	97	;'a'
  1785  007D8C  64                 	db	100	;'d'
  1786  007D8D  72                 	db	114	;'r'
  1787  007D8E  20                 	db	32
  1788  007D8F  6F                 	db	111	;'o'
  1789  007D90  66                 	db	102	;'f'
  1790  007D91  66                 	db	102	;'f'
  1791  007D92  00                 	db	0
  1792  007D93  42                 	db	66	;'B'
  1793  007D94  75                 	db	117	;'u'
  1794  007D95  69                 	db	105	;'i'
  1795  007D96  6C                 	db	108	;'l'
  1796  007D97  64                 	db	100	;'d'
  1797  007D98  20                 	db	32
  1798  007D99  44                 	db	68	;'D'
  1799  007D9A  61                 	db	97	;'a'
  1800  007D9B  74                 	db	116	;'t'
  1801  007D9C  65                 	db	101	;'e'
  1802  007D9D  2F                 	db	47
  1803  007D9E  54                 	db	84	;'T'
  1804  007D9F  69                 	db	105	;'i'
  1805  007DA0  6D                 	db	109	;'m'
  1806  007DA1  65                 	db	101	;'e'
  1807  007DA2  00                 	db	0
  1808  007DA3                     STR_3:
  1809  007DA3  20                 	db	32
  1810  007DA4  20                 	db	32
  1811  007DA5  20                 	db	32
  1812  007DA6  62                 	db	98	;'b'
  1813  007DA7  75                 	db	117	;'u'
  1814  007DA8  69                 	db	105	;'i'
  1815  007DA9  6C                 	db	108	;'l'
  1816  007DAA  64                 	db	100	;'d'
  1817  007DAB  20                 	db	32
  1818  007DAC  30                 	db	48	;'0'
  1819  007DAD  31                 	db	49	;'1'
  1820  007DAE  31                 	db	49	;'1'
  1821  007DAF  20                 	db	32
  1822  007DB0  20                 	db	32
  1823  007DB1  20                 	db	32
  1824  007DB2  00                 	db	0
  1825  007DB3                     STR_64:
  1826  007DB3  77                 	db	119	;'w'
  1827  007DB4  61                 	db	97	;'a'
  1828  007DB5  69                 	db	105	;'i'
  1829  007DB6  74                 	db	116	;'t'
  1830  007DB7  20                 	db	32
  1831  007DB8  6D                 	db	109	;'m'
  1832  007DB9  61                 	db	97	;'a'
  1833  007DBA  63                 	db	99	;'c'
  1834  007DBB  5F                 	db	95	;'_'
  1835  007DBC  74                 	db	116	;'t'
  1836  007DBD  78                 	db	120	;'x'
  1837  007DBE  5F                 	db	95	;'_'
  1838  007DBF  6F                 	db	111	;'o'
  1839  007DC0  6B                 	db	107	;'k'
  1840  007DC1  00                 	db	0
  1841  007DC2                     STR_91:
  1842  007DC2  6D                 	db	109	;'m'
  1843  007DC3  61                 	db	97	;'a'
  1844  007DC4  63                 	db	99	;'c'
  1845  007DC5  20                 	db	32
  1846  007DC6  73                 	db	115	;'s'
  1847  007DC7  65                 	db	101	;'e'
  1848  007DC8  74                 	db	116	;'t'
  1849  007DC9  20                 	db	32
  1850  007DCA  61                 	db	97	;'a'
  1851  007DCB  64                 	db	100	;'d'
  1852  007DCC  72                 	db	114	;'r'
  1853  007DCD  20                 	db	32
  1854  007DCE  6F                 	db	111	;'o'
  1855  007DCF  6E                 	db	110	;'n'
  1856  007DD0  00                 	db	0
  1857  007DD1                     STR_1:
  1858  007DD1  53                 	db	83	;'S'
  1859  007DD2  63                 	db	99	;'c'
  1860  007DD3  72                 	db	114	;'r'
  1861  007DD4  69                 	db	105	;'i'
  1862  007DD5  70                 	db	112	;'p'
  1863  007DD6  74                 	db	116	;'t'
  1864  007DD7  72                 	db	114	;'r'
  1865  007DD8  20                 	db	32
  1866  007DD9  49                 	db	73	;'I'
  1867  007DDA  6F                 	db	111	;'o'
  1868  007DDB  54                 	db	84	;'T'
  1869  007DDC  2D                 	db	45
  1870  007DDD  58                 	db	88	;'X'
  1871  007DDE  00                 	db	0
  1872  007DDF                     STR_87:
  1873  007DDF  4C                 	db	76	;'L'
  1874  007DE0  3A                 	db	58	;':'
  1875  007DE1  20                 	db	32
  1876  007DE2  20                 	db	32
  1877  007DE3  20                 	db	32
  1878  007DE4  20                 	db	32
  1879  007DE5  20                 	db	32
  1880  007DE6  20                 	db	32
  1881  007DE7  20                 	db	32
  1882  007DE8  54                 	db	84	;'T'
  1883  007DE9  3A                 	db	58	;':'
  1884  007DEA  20                 	db	32
  1885  007DEB  00                 	db	0
  1886  007DEC                     STR_93:
  1887  007DEC  6D                 	db	109	;'m'
  1888  007DED  61                 	db	97	;'a'
  1889  007DEE  63                 	db	99	;'c'
  1890  007DEF  20                 	db	32
  1891  007DF0  73                 	db	115	;'s'
  1892  007DF1  65                 	db	101	;'e'
  1893  007DF2  74                 	db	116	;'t'
  1894  007DF3  20                 	db	32
  1895  007DF4  64                 	db	100	;'d'
  1896  007DF5  72                 	db	114	;'r'
  1897  007DF6  20                 	db	32
  1898  007DF7  30                 	db	48	;'0'
  1899  007DF8  00                 	db	0
  1900  007DF9                     STR_94:
  1901  007DF9  6D                 	db	109	;'m'
  1902  007DFA  61                 	db	97	;'a'
  1903  007DFB  63                 	db	99	;'c'
  1904  007DFC  20                 	db	32
  1905  007DFD  73                 	db	115	;'s'
  1906  007DFE  65                 	db	101	;'e'
  1907  007DFF  74                 	db	116	;'t'
  1908  007E00  20                 	db	32
  1909  007E01  64                 	db	100	;'d'
  1910  007E02  72                 	db	114	;'r'
  1911  007E03  20                 	db	32
  1912  007E04  31                 	db	49	;'1'
  1913  007E05  00                 	db	0
  1914  007E06  6D                 	db	109	;'m'
  1915  007E07  61                 	db	97	;'a'
  1916  007E08  63                 	db	99	;'c'
  1917  007E09  20                 	db	32
  1918  007E0A  73                 	db	115	;'s'
  1919  007E0B  65                 	db	101	;'e'
  1920  007E0C  74                 	db	116	;'t'
  1921  007E0D  20                 	db	32
  1922  007E0E  64                 	db	100	;'d'
  1923  007E0F  72                 	db	114	;'r'
  1924  007E10  20                 	db	32
  1925  007E11  32                 	db	50	;'2'
  1926  007E12  00                 	db	0
  1927  007E13  6D                 	db	109	;'m'
  1928  007E14  61                 	db	97	;'a'
  1929  007E15  63                 	db	99	;'c'
  1930  007E16  20                 	db	32
  1931  007E17  73                 	db	115	;'s'
  1932  007E18  65                 	db	101	;'e'
  1933  007E19  74                 	db	116	;'t'
  1934  007E1A  20                 	db	32
  1935  007E1B  64                 	db	100	;'d'
  1936  007E1C  72                 	db	114	;'r'
  1937  007E1D  20                 	db	32
  1938  007E1E  33                 	db	51	;'3'
  1939  007E1F  00                 	db	0
  1940  007E20  6D                 	db	109	;'m'
  1941  007E21  61                 	db	97	;'a'
  1942  007E22  63                 	db	99	;'c'
  1943  007E23  20                 	db	32
  1944  007E24  73                 	db	115	;'s'
  1945  007E25  65                 	db	101	;'e'
  1946  007E26  74                 	db	116	;'t'
  1947  007E27  20                 	db	32
  1948  007E28  64                 	db	100	;'d'
  1949  007E29  72                 	db	114	;'r'
  1950  007E2A  20                 	db	32
  1951  007E2B  34                 	db	52	;'4'
  1952  007E2C  00                 	db	0
  1953  007E2D  6D                 	db	109	;'m'
  1954  007E2E  61                 	db	97	;'a'
  1955  007E2F  63                 	db	99	;'c'
  1956  007E30  20                 	db	32
  1957  007E31  73                 	db	115	;'s'
  1958  007E32  65                 	db	101	;'e'
  1959  007E33  74                 	db	116	;'t'
  1960  007E34  20                 	db	32
  1961  007E35  64                 	db	100	;'d'
  1962  007E36  72                 	db	114	;'r'
  1963  007E37  20                 	db	32
  1964  007E38  35                 	db	53	;'5'
  1965  007E39  00                 	db	0
  1966  007E3A  6D                 	db	109	;'m'
  1967  007E3B  61                 	db	97	;'a'
  1968  007E3C  63                 	db	99	;'c'
  1969  007E3D  20                 	db	32
  1970  007E3E  73                 	db	115	;'s'
  1971  007E3F  65                 	db	101	;'e'
  1972  007E40  74                 	db	116	;'t'
  1973  007E41  20                 	db	32
  1974  007E42  64                 	db	100	;'d'
  1975  007E43  72                 	db	114	;'r'
  1976  007E44  20                 	db	32
  1977  007E45  36                 	db	54	;'6'
  1978  007E46  00                 	db	0
  1979  007E47  6D                 	db	109	;'m'
  1980  007E48  61                 	db	97	;'a'
  1981  007E49  63                 	db	99	;'c'
  1982  007E4A  20                 	db	32
  1983  007E4B  73                 	db	115	;'s'
  1984  007E4C  65                 	db	101	;'e'
  1985  007E4D  74                 	db	116	;'t'
  1986  007E4E  20                 	db	32
  1987  007E4F  64                 	db	100	;'d'
  1988  007E50  72                 	db	114	;'r'
  1989  007E51  20                 	db	32
  1990  007E52  37                 	db	55	;'7'
  1991  007E53  00                 	db	0
  1992  007E54                     STR_55:
  1993  007E54  6D                 	db	109	;'m'
  1994  007E55  61                 	db	97	;'a'
  1995  007E56  63                 	db	99	;'c'
  1996  007E57  20                 	db	32
  1997  007E58  6A                 	db	106	;'j'
  1998  007E59  6F                 	db	111	;'o'
  1999  007E5A  69                 	db	105	;'i'
  2000  007E5B  6E                 	db	110	;'n'
  2001  007E5C  20                 	db	32
  2002  007E5D  61                 	db	97	;'a'
  2003  007E5E  62                 	db	98	;'b'
  2004  007E5F  70                 	db	112	;'p'
  2005  007E60  00                 	db	0
  2006  007E61  42                 	db	66	;'B'
  2007  007E62  75                 	db	117	;'u'
  2008  007E63  74                 	db	116	;'t'
  2009  007E64  74                 	db	116	;'t'
  2010  007E65  6F                 	db	111	;'o'
  2011  007E66  6E                 	db	110	;'n'
  2012  007E67  20                 	db	32
  2013  007E68  54                 	db	84	;'T'
  2014  007E69  65                 	db	101	;'e'
  2015  007E6A  73                 	db	115	;'s'
  2016  007E6B  74                 	db	116	;'t'
  2017  007E6C  3A                 	db	58	;':'
  2018  007E6D  00                 	db	0
  2019  007E6E  42                 	db	66	;'B'
  2020  007E6F  75                 	db	117	;'u'
  2021  007E70  74                 	db	116	;'t'
  2022  007E71  74                 	db	116	;'t'
  2023  007E72  6F                 	db	111	;'o'
  2024  007E73  6E                 	db	110	;'n'
  2025  007E74  31                 	db	49	;'1'
  2026  007E75  20                 	db	32
  2027  007E76  50                 	db	80	;'P'
  2028  007E77  41                 	db	65	;'A'
  2029  007E78  53                 	db	83	;'S'
  2030  007E79  53                 	db	83	;'S'
  2031  007E7A  00                 	db	0
  2032  007E7B  42                 	db	66	;'B'
  2033  007E7C  75                 	db	117	;'u'
  2034  007E7D  74                 	db	116	;'t'
  2035  007E7E  74                 	db	116	;'t'
  2036  007E7F  6F                 	db	111	;'o'
  2037  007E80  6E                 	db	110	;'n'
  2038  007E81  32                 	db	50	;'2'
  2039  007E82  20                 	db	32
  2040  007E83  50                 	db	80	;'P'
  2041  007E84  41                 	db	65	;'A'
  2042  007E85  53                 	db	83	;'S'
  2043  007E86  53                 	db	83	;'S'
  2044  007E87  00                 	db	0
  2045  007E88  50                 	db	80	;'P'
  2046  007E89  72                 	db	114	;'r'
  2047  007E8A  65                 	db	101	;'e'
  2048  007E8B  73                 	db	115	;'s'
  2049  007E8C  73                 	db	115	;'s'
  2050  007E8D  20                 	db	32
  2051  007E8E  42                 	db	66	;'B'
  2052  007E8F  75                 	db	117	;'u'
  2053  007E90  74                 	db	116	;'t'
  2054  007E91  74                 	db	116	;'t'
  2055  007E92  6F                 	db	111	;'o'
  2056  007E93  6E                 	db	110	;'n'
  2057  007E94  00                 	db	0
  2058  007E95                     STR_109:
  2059  007E95  55                 	db	85	;'U'
  2060  007E96  53                 	db	83	;'S'
  2061  007E97  42                 	db	66	;'B'
  2062  007E98  20                 	db	32
  2063  007E99  48                 	db	72	;'H'
  2064  007E9A  61                 	db	97	;'a'
  2065  007E9B  6E                 	db	110	;'n'
  2066  007E9C  64                 	db	100	;'d'
  2067  007E9D  6C                 	db	108	;'l'
  2068  007E9E  65                 	db	101	;'e'
  2069  007E9F  72                 	db	114	;'r'
  2070  007EA0  00                 	db	0
  2071  007EA1                     STR_86:
  2072  007EA1  4F                 	db	79	;'O'
  2073  007EA2  6E                 	db	110	;'n'
  2074  007EA3  20                 	db	32
  2075  007EA4  50                 	db	80	;'P'
  2076  007EA5  6F                 	db	111	;'o'
  2077  007EA6  72                 	db	114	;'r'
  2078  007EA7  74                 	db	116	;'t'
  2079  007EA8  20                 	db	32
  2080  007EA9  23                 	db	35
  2081  007EAA  3A                 	db	58	;':'
  2082  007EAB  20                 	db	32
  2083  007EAC  00                 	db	0
  2084  007EAD                     STR_33:
  2085  007EAD  73                 	db	115	;'s'
  2086  007EAE  65                 	db	101	;'e'
  2087  007EAF  74                 	db	116	;'t'
  2088  007EB0  20                 	db	32
  2089  007EB1  64                 	db	100	;'d'
  2090  007EB2  65                 	db	101	;'e'
  2091  007EB3  76                 	db	118	;'v'
  2092  007EB4  61                 	db	97	;'a'
  2093  007EB5  64                 	db	100	;'d'
  2094  007EB6  64                 	db	100	;'d'
  2095  007EB7  72                 	db	114	;'r'
  2096  007EB8  00                 	db	0
  2097  007EB9                     STR_29:
  2098  007EB9  73                 	db	115	;'s'
  2099  007EBA  79                 	db	121	;'y'
  2100  007EBB  73                 	db	115	;'s'
  2101  007EBC  20                 	db	32
  2102  007EBD  67                 	db	103	;'g'
  2103  007EBE  65                 	db	101	;'e'
  2104  007EBF  74                 	db	116	;'t'
  2105  007EC0  20                 	db	32
  2106  007EC1  76                 	db	118	;'v'
  2107  007EC2  65                 	db	101	;'e'
  2108  007EC3  72                 	db	114	;'r'
  2109  007EC4  00                 	db	0
  2110  007EC5                     STR_39:
  2111  007EC5  73                 	db	115	;'s'
  2112  007EC6  65                 	db	101	;'e'
  2113  007EC7  74                 	db	116	;'t'
  2114  007EC8  20                 	db	32
  2115  007EC9  6E                 	db	110	;'n'
  2116  007ECA  77                 	db	119	;'w'
  2117  007ECB  6B                 	db	107	;'k'
  2118  007ECC  73                 	db	115	;'s'
  2119  007ECD  6B                 	db	107	;'k'
  2120  007ECE  65                 	db	101	;'e'
  2121  007ECF  79                 	db	121	;'y'
  2122  007ED0  00                 	db	0
  2123  007ED1                     STR_36:
  2124  007ED1  73                 	db	115	;'s'
  2125  007ED2  65                 	db	101	;'e'
  2126  007ED3  74                 	db	116	;'t'
  2127  007ED4  20                 	db	32
  2128  007ED5  61                 	db	97	;'a'
  2129  007ED6  70                 	db	112	;'p'
  2130  007ED7  70                 	db	112	;'p'
  2131  007ED8  73                 	db	115	;'s'
  2132  007ED9  6B                 	db	107	;'k'
  2133  007EDA  65                 	db	101	;'e'
  2134  007EDB  79                 	db	121	;'y'
  2135  007EDC  00                 	db	0
  2136  007EDD  4D                 	db	77	;'M'
  2137  007EDE  61                 	db	97	;'a'
  2138  007EDF  79                 	db	121	;'y'
  2139  007EE0  20                 	db	32
  2140  007EE1  31                 	db	49	;'1'
  2141  007EE2  37                 	db	55	;'7'
  2142  007EE3  20                 	db	32
  2143  007EE4  32                 	db	50	;'2'
  2144  007EE5  30                 	db	48	;'0'
  2145  007EE6  31                 	db	49	;'1'
  2146  007EE7  36                 	db	54	;'6'
  2147  007EE8  00                 	db	0
  2148  007EE9  42                 	db	66	;'B'
  2149  007EEA  75                 	db	117	;'u'
  2150  007EEB  74                 	db	116	;'t'
  2151  007EEC  74                 	db	116	;'t'
  2152  007EED  6F                 	db	111	;'o'
  2153  007EEE  6E                 	db	110	;'n'
  2154  007EEF  20                 	db	32
  2155  007EF0  46                 	db	70	;'F'
  2156  007EF1  41                 	db	65	;'A'
  2157  007EF2  49                 	db	73	;'I'
  2158  007EF3  4C                 	db	76	;'L'
  2159  007EF4  00                 	db	0
  2160  007EF5  43                 	db	67	;'C'
  2161  007EF6  6F                 	db	111	;'o'
  2162  007EF7  6D                 	db	109	;'m'
  2163  007EF8  6D                 	db	109	;'m'
  2164  007EF9  20                 	db	32
  2165  007EFA  54                 	db	84	;'T'
  2166  007EFB  65                 	db	101	;'e'
  2167  007EFC  73                 	db	115	;'s'
  2168  007EFD  74                 	db	116	;'t'
  2169  007EFE  3A                 	db	58	;':'
  2170  007EFF  00                 	db	0
  2171  007F00                     STR_90:
  2172  007F00  72                 	db	114	;'r'
  2173  007F01  61                 	db	97	;'a'
  2174  007F02  64                 	db	100	;'d'
  2175  007F03  69                 	db	105	;'i'
  2176  007F04  6F                 	db	111	;'o'
  2177  007F05  20                 	db	32
  2178  007F06  74                 	db	116	;'t'
  2179  007F07  78                 	db	120	;'x'
  2180  007F08  20                 	db	32
  2181  007F09  00                 	db	0
  2182  007F0A                     STR_23:
  2183  007F0A  4D                 	db	77	;'M'
  2184  007F0B  4F                 	db	79	;'O'
  2185  007F0C  54                 	db	84	;'T'
  2186  007F0D  45                 	db	69	;'E'
  2187  007F0E  20                 	db	32
  2188  007F0F  4D                 	db	77	;'M'
  2189  007F10  6F                 	db	111	;'o'
  2190  007F11  64                 	db	100	;'d'
  2191  007F12  65                 	db	101	;'e'
  2192  007F13  00                 	db	0
  2193  007F14                     STR_65:
  2194  007F14  6D                 	db	109	;'m'
  2195  007F15  6F                 	db	111	;'o'
  2196  007F16  74                 	db	116	;'t'
  2197  007F17  65                 	db	101	;'e'
  2198  007F18  49                 	db	73	;'I'
  2199  007F19  6E                 	db	110	;'n'
  2200  007F1A  69                 	db	105	;'i'
  2201  007F1B  54                 	db	84	;'T'
  2202  007F1C  78                 	db	120	;'x'
  2203  007F1D  00                 	db	0
  2204  007F1E  4C                 	db	76	;'L'
  2205  007F1F  45                 	db	69	;'E'
  2206  007F20  44                 	db	68	;'D'
  2207  007F21  20                 	db	32
  2208  007F22  54                 	db	84	;'T'
  2209  007F23  65                 	db	101	;'e'
  2210  007F24  73                 	db	115	;'s'
  2211  007F25  74                 	db	116	;'t'
  2212  007F26  3A                 	db	58	;':'
  2213  007F27  00                 	db	0
  2214  007F28                     STR_2:
  2215  007F28  20                 	db	32
  2216  007F29  44                 	db	68	;'D'
  2217  007F2A  65                 	db	101	;'e'
  2218  007F2B  76                 	db	118	;'v'
  2219  007F2C  3A                 	db	58	;':'
  2220  007F2D  20                 	db	32
  2221  007F2E  53                 	db	83	;'S'
  2222  007F2F  32                 	db	50	;'2'
  2223  007F30  20                 	db	32
  2224  007F31  00                 	db	0
  2225  007F32                     STR_107:
  2226  007F32  43                 	db	67	;'C'
  2227  007F33  44                 	db	68	;'D'
  2228  007F34  43                 	db	67	;'C'
  2229  007F35  20                 	db	32
  2230  007F36  4D                 	db	77	;'M'
  2231  007F37  6F                 	db	111	;'o'
  2232  007F38  64                 	db	100	;'d'
  2233  007F39  65                 	db	101	;'e'
  2234  007F3A  00                 	db	0
  2235  007F3B                     STR_45:
  2236  007F3B  73                 	db	115	;'s'
  2237  007F3C  65                 	db	101	;'e'
  2238  007F3D  74                 	db	116	;'t'
  2239  007F3E  20                 	db	32
  2240  007F3F  73                 	db	115	;'s'
  2241  007F40  79                 	db	121	;'y'
  2242  007F41  6E                 	db	110	;'n'
  2243  007F42  63                 	db	99	;'c'
  2244  007F43  00                 	db	0
  2245  007F44                     STR_59:
  2246  007F44  61                 	db	97	;'a'
  2247  007F45  63                 	db	99	;'c'
  2248  007F46  63                 	db	99	;'c'
  2249  007F47  65                 	db	101	;'e'
  2250  007F48  70                 	db	112	;'p'
  2251  007F49  74                 	db	116	;'t'
  2252  007F4A  65                 	db	101	;'e'
  2253  007F4B  64                 	db	100	;'d'
  2254  007F4C  00                 	db	0
  2255  007F4D  6D                 	db	109	;'m'
  2256  007F4E  61                 	db	97	;'a'
  2257  007F4F  63                 	db	99	;'c'
  2258  007F50  20                 	db	32
  2259  007F51  73                 	db	115	;'s'
  2260  007F52  61                 	db	97	;'a'
  2261  007F53  76                 	db	118	;'v'
  2262  007F54  65                 	db	101	;'e'
  2263  007F55  00                 	db	0
  2264  007F56                     STR_24:
  2265  007F56  53                 	db	83	;'S'
  2266  007F57  74                 	db	116	;'t'
  2267  007F58  61                 	db	97	;'a'
  2268  007F59  72                 	db	114	;'r'
  2269  007F5A  74                 	db	116	;'t'
  2270  007F5B  69                 	db	105	;'i'
  2271  007F5C  6E                 	db	110	;'n'
  2272  007F5D  67                 	db	103	;'g'
  2273  007F5E  00                 	db	0
  2274  007F5F  4D                 	db	77	;'M'
  2275  007F60  6F                 	db	111	;'o'
  2276  007F61  54                 	db	84	;'T'
  2277  007F62  65                 	db	101	;'e'
  2278  007F63  20                 	db	32
  2279  007F64  76                 	db	118	;'v'
  2280  007F65  20                 	db	32
  2281  007F66  2E                 	db	46
  2282  007F67  00                 	db	0
  2283  007F68  31                 	db	49	;'1'
  2284  007F69  33                 	db	51	;'3'
  2285  007F6A  3A                 	db	58	;':'
  2286  007F6B  32                 	db	50	;'2'
  2287  007F6C  34                 	db	52	;'4'
  2288  007F6D  3A                 	db	58	;':'
  2289  007F6E  30                 	db	48	;'0'
  2290  007F6F  37                 	db	55	;'7'
  2291  007F70  00                 	db	0
  2292  007F71  52                 	db	82	;'R'
  2293  007F72  46                 	db	70	;'F'
  2294  007F73  20                 	db	32
  2295  007F74  54                 	db	84	;'T'
  2296  007F75  65                 	db	101	;'e'
  2297  007F76  73                 	db	115	;'s'
  2298  007F77  74                 	db	116	;'t'
  2299  007F78  3A                 	db	58	;':'
  2300  007F79  00                 	db	0
  2301  007F7A  41                 	db	65	;'A'
  2302  007F7B  44                 	db	68	;'D'
  2303  007F7C  43                 	db	67	;'C'
  2304  007F7D  20                 	db	32
  2305  007F7E  54                 	db	84	;'T'
  2306  007F7F  65                 	db	101	;'e'
  2307  007F80  73                 	db	115	;'s'
  2308  007F81  74                 	db	116	;'t'
  2309  007F82  00                 	db	0
  2310  007F83                     STR_108:
  2311  007F83  43                 	db	67	;'C'
  2312  007F84  6F                 	db	111	;'o'
  2313  007F85  6D                 	db	109	;'m'
  2314  007F86  6D                 	db	109	;'m'
  2315  007F87  61                 	db	97	;'a'
  2316  007F88  6E                 	db	110	;'n'
  2317  007F89  64                 	db	100	;'d'
  2318  007F8A  00                 	db	0
  2319  007F8B                     STR_48:
  2320  007F8B  73                 	db	115	;'s'
  2321  007F8C  65                 	db	101	;'e'
  2322  007F8D  74                 	db	116	;'t'
  2323  007F8E  20                 	db	32
  2324  007F8F  72                 	db	114	;'r'
  2325  007F90  78                 	db	120	;'x'
  2326  007F91  32                 	db	50	;'2'
  2327  007F92  00                 	db	0
  2328  007F93                     STR_42:
  2329  007F93  73                 	db	115	;'s'
  2330  007F94  65                 	db	101	;'e'
  2331  007F95  74                 	db	116	;'t'
  2332  007F96  20                 	db	32
  2333  007F97  61                 	db	97	;'a'
  2334  007F98  64                 	db	100	;'d'
  2335  007F99  72                 	db	114	;'r'
  2336  007F9A  00                 	db	0
  2337  007F9B  54                 	db	84	;'T'
  2338  007F9C  65                 	db	101	;'e'
  2339  007F9D  6D                 	db	109	;'m'
  2340  007F9E  70                 	db	112	;'p'
  2341  007F9F  20                 	db	32
  2342  007FA0  20                 	db	32
  2343  007FA1  3D                 	db	61	;'='
  2344  007FA2  00                 	db	0
  2345  007FA3  4C                 	db	76	;'L'
  2346  007FA4  69                 	db	105	;'i'
  2347  007FA5  67                 	db	103	;'g'
  2348  007FA6  68                 	db	104	;'h'
  2349  007FA7  74                 	db	116	;'t'
  2350  007FA8  20                 	db	32
  2351  007FA9  3D                 	db	61	;'='
  2352  007FAA  00                 	db	0
  2353  007FAB                     STR_110:
  2354  007FAB  28                 	db	40
  2355  007FAC  6E                 	db	110	;'n'
  2356  007FAD  75                 	db	117	;'u'
  2357  007FAE  6C                 	db	108	;'l'
  2358  007FAF  6C                 	db	108	;'l'
  2359  007FB0  29                 	db	41
  2360  007FB1  00                 	db	0
  2361  007FB2                     STR_67:
  2362  007FB2  41                 	db	65	;'A'
  2363  007FB3  55                 	db	85	;'U'
  2364  007FB4  54                 	db	84	;'T'
  2365  007FB5  4F                 	db	79	;'O'
  2366  007FB6  20                 	db	32
  2367  007FB7  20                 	db	32
  2368  007FB8  00                 	db	0
  2369  007FB9                     STR_66:
  2370  007FB9  4D                 	db	77	;'M'
  2371  007FBA  6F                 	db	111	;'o'
  2372  007FBB  64                 	db	100	;'d'
  2373  007FBC  65                 	db	101	;'e'
  2374  007FBD  3A                 	db	58	;':'
  2375  007FBE  20                 	db	32
  2376  007FBF  00                 	db	0
  2377  007FC0                     STR_78:
  2378  007FC0  54                 	db	84	;'T'
  2379  007FC1  65                 	db	101	;'e'
  2380  007FC2  6D                 	db	109	;'m'
  2381  007FC3  70                 	db	112	;'p'
  2382  007FC4  20                 	db	32
  2383  007FC5  3A                 	db	58	;':'
  2384  007FC6  00                 	db	0
  2385  007FC7                     STR_84:
  2386  007FC7  50                 	db	80	;'P'
  2387  007FC8  6B                 	db	107	;'k'
  2388  007FC9  74                 	db	116	;'t'
  2389  007FCA  73                 	db	115	;'s'
  2390  007FCB  2D                 	db	45
  2391  007FCC  3A                 	db	58	;':'
  2392  007FCD  00                 	db	0
  2393  007FCE                     STR_82:
  2394  007FCE  50                 	db	80	;'P'
  2395  007FCF  6B                 	db	107	;'k'
  2396  007FD0  74                 	db	116	;'t'
  2397  007FD1  73                 	db	115	;'s'
  2398  007FD2  2F                 	db	47
  2399  007FD3  3A                 	db	58	;':'
  2400  007FD4  00                 	db	0
  2401  007FD5                     STR_77:
  2402  007FD5  4C                 	db	76	;'L'
  2403  007FD6  69                 	db	105	;'i'
  2404  007FD7  67                 	db	103	;'g'
  2405  007FD8  68                 	db	104	;'h'
  2406  007FD9  74                 	db	116	;'t'
  2407  007FDA  3A                 	db	58	;':'
  2408  007FDB  00                 	db	0
  2409  007FDC                     STR_80:
  2410  007FDC  50                 	db	80	;'P'
  2411  007FDD  6B                 	db	107	;'k'
  2412  007FDE  74                 	db	116	;'t'
  2413  007FDF  73                 	db	115	;'s'
  2414  007FE0  7C                 	db	124
  2415  007FE1  3A                 	db	58	;':'
  2416  007FE2  00                 	db	0
  2417  007FE3                     STR_68:
  2418  007FE3  4D                 	db	77	;'M'
  2419  007FE4  41                 	db	65	;'A'
  2420  007FE5  4E                 	db	78	;'N'
  2421  007FE6  55                 	db	85	;'U'
  2422  007FE7  41                 	db	65	;'A'
  2423  007FE8  4C                 	db	76	;'L'
  2424  007FE9  00                 	db	0
  2425  007FEA                     STR_53:
  2426  007FEA  73                 	db	115	;'s'
  2427  007FEB  65                 	db	101	;'e'
  2428  007FEC  74                 	db	116	;'t'
  2429  007FED  20                 	db	32
  2430  007FEE  63                 	db	99	;'c'
  2431  007FEF  68                 	db	104	;'h'
  2432  007FF0  00                 	db	0
  2433  007FF1                     STR_61:
  2434  007FF1  69                 	db	105	;'i'
  2435  007FF2  6E                 	db	110	;'n'
  2436  007FF3  69                 	db	105	;'i'
  2437  007FF4  20                 	db	32
  2438  007FF5  74                 	db	116	;'t'
  2439  007FF6  78                 	db	120	;'x'
  2440  007FF7  00                 	db	0
  2441  007FF8                     STR_31:
  2442  007FF8  32                 	db	50	;'2'
  2443  007FF9  39                 	db	57	;'9'
  2444  007FFA  30                 	db	48	;'0'
  2445  007FFB  33                 	db	51	;'3'
  2446  007FFC  00                 	db	0
  2447  007FFD                     STR_21:
  2448  007FFD  7A                 	db	122	;'z'
  2449  007FFE  00                 	db	0
  2450  0000                     
  2451                           ; #config settings
  2452  007FFF  00                 	db	0	; dummy byte at the end
  2453  0000                     
  2454                           	psect	cinit
  2455  004D62                     __pcinit:
  2456                           	opt stack 0
  2457  004D62                     start_initialization:
  2458                           	opt stack 0
  2459  004D62                     __initialization:
  2460                           	opt stack 0
  2461                           
  2462                           ; Clear objects allocated to BANK2 (128 bytes)
  2463  004D62  EE02  F000         	lfsr	0,__pbssBANK2
  2464  004D66  0E80               	movlw	128
  2465  004D68                     clear_0:
  2466  004D68  6AEE               	clrf	postinc0,c
  2467  004D6A  06E8               	decf	wreg,f,c
  2468  004D6C  E1FD               	bnz	clear_0
  2469                           
  2470                           ; Clear objects allocated to BANK1 (234 bytes)
  2471  004D6E  EE01  F000         	lfsr	0,__pbssBANK1
  2472  004D72  0EEA               	movlw	234
  2473  004D74                     clear_1:
  2474  004D74  6AEE               	clrf	postinc0,c
  2475  004D76  06E8               	decf	wreg,f,c
  2476  004D78  E1FD               	bnz	clear_1
  2477                           
  2478                           ; Clear objects allocated to BANK0 (88 bytes)
  2479  004D7A  EE00  F060         	lfsr	0,__pbssBANK0
  2480  004D7E  0E58               	movlw	88
  2481  004D80                     clear_2:
  2482  004D80  6AEE               	clrf	postinc0,c
  2483  004D82  06E8               	decf	wreg,f,c
  2484  004D84  E1FD               	bnz	clear_2
  2485                           
  2486                           ; Clear objects allocated to COMRAM (45 bytes)
  2487  004D86  EE00  F001         	lfsr	0,__pbssCOMRAM
  2488  004D8A  0E2D               	movlw	45
  2489  004D8C                     clear_3:
  2490  004D8C  6AEE               	clrf	postinc0,c
  2491  004D8E  06E8               	decf	wreg,f,c
  2492  004D90  E1FD               	bnz	clear_3
  2493                           
  2494                           ; Initialize objects allocated to BANK0 (7 bytes)
  2495                           ; load TBLPTR registers with __pidataBANK0
  2496  004D92  0E15               	movlw	low __pidataBANK0
  2497  004D94  6EF6               	movwf	tblptrl,c
  2498  004D96  0E43               	movlw	high __pidataBANK0
  2499  004D98  6EF7               	movwf	tblptrh,c
  2500  004D9A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2501  004D9C  6EF8               	movwf	tblptru,c
  2502  004D9E  EE00  F0F9         	lfsr	0,__pdataBANK0
  2503  004DA2  EE10 F007          	lfsr	1,7
  2504  004DA6                     copy_data0:
  2505  004DA6  0009               	tblrd		*+
  2506  004DA8  CFF5 FFEE          	movff	tablat,postinc0
  2507  004DAC  50E5               	movf	postdec1,w,c
  2508  004DAE  50E1               	movf	fsr1l,w,c
  2509  004DB0  E1FA               	bnz	copy_data0
  2510  004DB2                     end_of_initialization:
  2511                           	opt stack 0
  2512  004DB2                     __end_of__initialization:
  2513                           	opt stack 0
  2514  004DB2  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2515  004DB4  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2516  004DB6  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2517  004DB8  6EF8               	movwf	tblptru,c
  2518  004DBA  0100               	movlb	0
  2519  004DBC  EF6A  F02C         	goto	_main	;jump to C main() function
  2520                           tblptru	equ	0xFF8
  2521                           tblptrh	equ	0xFF7
  2522                           tblptrl	equ	0xFF6
  2523                           tablat	equ	0xFF5
  2524                           postinc0	equ	0xFEE
  2525                           wreg	equ	0xFE8
  2526                           postdec1	equ	0xFE5
  2527                           fsr1l	equ	0xFE1
  2528                           
  2529                           	psect	bssCOMRAM
  2530  000001                     __pbssCOMRAM:
  2531                           	opt stack 0
  2532  000001                     _outPipes:
  2533                           	opt stack 0
  2534  000001                     	ds	8
  2535  000009                     _inPipes:
  2536                           	opt stack 0
  2537  000009                     	ds	6
  2538  00000F                     _pBDTEntryIn:
  2539                           	opt stack 0
  2540  00000F                     	ds	6
  2541  000015                     _pBDTEntryEP0OutCurrent:
  2542                           	opt stack 0
  2543  000015                     	ds	2
  2544  000017                     _pBDTEntryEP0OutNext:
  2545                           	opt stack 0
  2546  000017                     	ds	2
  2547  000019                     _LastRS232Out:
  2548                           	opt stack 0
  2549  000019                     	ds	1
  2550  00001A                     _NextUSBOut:
  2551                           	opt stack 0
  2552  00001A                     	ds	1
  2553  00001B                     _RS232_Out_Data_Rdy:
  2554                           	opt stack 0
  2555  00001B                     	ds	1
  2556  00001C                     _RS232cp:
  2557                           	opt stack 0
  2558  00001C                     	ds	1
  2559  00001D                     _RemoteWakeup:
  2560                           	opt stack 0
  2561  00001D                     	ds	1
  2562  00001E                     _USBDeferStatusStagePacket:
  2563                           	opt stack 0
  2564  00001E                     	ds	1
  2565  00001F                     _USBStatusStageTimeoutCounter:
  2566                           	opt stack 0
  2567  00001F                     	ds	1
  2568  000020                     _cdc_trf_state:
  2569                           	opt stack 0
  2570  000020                     	ds	1
  2571  000021                     _controlTransferState:
  2572                           	opt stack 0
  2573  000021                     	ds	1
  2574  000022                     _endpoint_number:
  2575                           	opt stack 0
  2576  000022                     	ds	1
  2577  000023                     _eusartRxCount:
  2578                           	opt stack 0
  2579  000023                     	ds	1
  2580  000024                     _eusartRxHead:
  2581                           	opt stack 0
  2582  000024                     	ds	1
  2583  000025                     _eusartRxTail:
  2584                           	opt stack 0
  2585  000025                     	ds	1
  2586  000026                     _eusartTxBufferRemaining:
  2587                           	opt stack 0
  2588  000026                     	ds	1
  2589  000027                     _eusartTxHead:
  2590                           	opt stack 0
  2591  000027                     	ds	1
  2592  000028                     _eusartTxTail:
  2593                           	opt stack 0
  2594  000028                     	ds	1
  2595  000029                     _modemBufferIndex:
  2596                           	opt stack 0
  2597  000029                     	ds	1
  2598  00002A                     _rxByteFlag:
  2599                           	opt stack 0
  2600  00002A                     	ds	1
  2601  00002B                     _shortPacketStatus:
  2602                           	opt stack 0
  2603  00002B                     	ds	1
  2604  00002C                     _USBActiveConfiguration:
  2605                           	opt stack 0
  2606  00002C                     	ds	1
  2607  00002D                     _USTATcopy:
  2608                           	opt stack 0
  2609  00002D                     	ds	1
  2610                           tblptru	equ	0xFF8
  2611                           tblptrh	equ	0xFF7
  2612                           tblptrl	equ	0xFF6
  2613                           tablat	equ	0xFF5
  2614                           postinc0	equ	0xFEE
  2615                           wreg	equ	0xFE8
  2616                           postdec1	equ	0xFE5
  2617                           fsr1l	equ	0xFE1
  2618                           
  2619                           	psect	bssBANK0
  2620  000060                     __pbssBANK0:
  2621                           	opt stack 0
  2622  000060                     _pBDTEntryOut:
  2623                           	opt stack 0
  2624  000060                     	ds	6
  2625  000066                     service_pushbutton@PB_Timer:
  2626                           	opt stack 0
  2627  000066                     	ds	4
  2628  00006A                     _ep_data_in:
  2629                           	opt stack 0
  2630  00006A                     	ds	3
  2631  00006D                     _ep_data_out:
  2632                           	opt stack 0
  2633  00006D                     	ds	3
  2634  000070                     _pCDCDst:
  2635                           	opt stack 0
  2636  000070                     	ds	3
  2637  000073                     _pCDCSrc:
  2638                           	opt stack 0
  2639  000073                     	ds	3
  2640  000076                     _responsePortNum:
  2641                           	opt stack 0
  2642  000076                     	ds	3
  2643  000079                     _CDCDataInHandle:
  2644                           	opt stack 0
  2645  000079                     	ds	2
  2646  00007B                     _CDCDataOutHandle:
  2647                           	opt stack 0
  2648  00007B                     	ds	2
  2649  00007D                     _light:
  2650                           	opt stack 0
  2651  00007D                     	ds	2
  2652  00007F                     _pDst:
  2653                           	opt stack 0
  2654  00007F                     	ds	2
  2655  000081                     _pkts:
  2656                           	opt stack 0
  2657  000081                     	ds	2
  2658  000083                     _temperature:
  2659                           	opt stack 0
  2660  000083                     	ds	2
  2661  000085                     _timer1ReloadVal:
  2662                           	opt stack 0
  2663  000085                     	ds	2
  2664  000087                     _timerMinTickCount:
  2665                           	opt stack 0
  2666  000087                     	ds	2
  2667  000089                     _timerMsTickCount:
  2668                           	opt stack 0
  2669  000089                     	ds	2
  2670  00008B                     moteJoiningProcess@ch:
  2671                           	opt stack 0
  2672  00008B                     	ds	2
  2673  00008D                     _BothEP0OutUOWNsSet:
  2674                           	opt stack 0
  2675  00008D                     	ds	1
  2676  00008E                     _USBBusIsSuspended:
  2677                           	opt stack 0
  2678  00008E                     	ds	1
  2679  00008F                     _USBDeferINDataStagePackets:
  2680                           	opt stack 0
  2681  00008F                     	ds	1
  2682  000090                     _USBDeferOUTDataStagePackets:
  2683                           	opt stack 0
  2684  000090                     	ds	1
  2685  000091                     _USBDeviceState:
  2686                           	opt stack 0
  2687  000091                     	ds	1
  2688  000092                     _USBStatusStageEnabledFlag1:
  2689                           	opt stack 0
  2690  000092                     	ds	1
  2691  000093                     _USBStatusStageEnabledFlag2:
  2692                           	opt stack 0
  2693  000093                     	ds	1
  2694  000094                     _activeState:
  2695                           	opt stack 0
  2696  000094                     	ds	1
  2697  000095                     _appTimer:
  2698                           	opt stack 0
  2699  000095                     	ds	1
  2700  000096                     _autoMode:
  2701                           	opt stack 0
  2702  000096                     	ds	1
  2703  000097                     _cdc_mem_type:
  2704                           	opt stack 0
  2705  000097                     	ds	1
  2706  000098                     _cdc_rx_len:
  2707                           	opt stack 0
  2708  000098                     	ds	1
  2709  000099                     _cdc_tx_len:
  2710                           	opt stack 0
  2711  000099                     	ds	1
  2712  00009A                     _m10SecTicker:
  2713                           	opt stack 0
  2714  00009A                     	ds	1
  2715  00009B                     _manualTrigger:
  2716                           	opt stack 0
  2717  00009B                     	ds	1
  2718  00009C                     _operationType:
  2719                           	opt stack 0
  2720  00009C                     	ds	1
  2721  00009D                     _randomPortNum:
  2722                           	opt stack 0
  2723  00009D                     	ds	1
  2724  00009E                     _runningState:
  2725                           	opt stack 0
  2726  00009E                     	ds	1
  2727  00009F                     _secTicker:
  2728                           	opt stack 0
  2729  00009F                     	ds	1
  2730  0000A0                     _sleepTicker:
  2731                           	opt stack 0
  2732  0000A0                     	ds	1
  2733  0000A1                     _usbState:
  2734                           	opt stack 0
  2735  0000A1                     	ds	1
  2736  0000A2                     service_pushbutton@Release_Timer:
  2737                           	opt stack 0
  2738  0000A2                     	ds	1
  2739  0000A3                     _dataBuffer:
  2740                           	opt stack 0
  2741  0000A3                     	ds	12
  2742  0000AF                     _line_coding:
  2743                           	opt stack 0
  2744  0000AF                     	ds	7
  2745  0000B6                     _USBAlternateInterface:
  2746                           	opt stack 0
  2747  0000B6                     	ds	2
  2748                           tblptru	equ	0xFF8
  2749                           tblptrh	equ	0xFF7
  2750                           tblptrl	equ	0xFF6
  2751                           tablat	equ	0xFF5
  2752                           postinc0	equ	0xFEE
  2753                           wreg	equ	0xFE8
  2754                           postdec1	equ	0xFE5
  2755                           fsr1l	equ	0xFE1
  2756                           
  2757                           	psect	dataBANK0
  2758  0000F9                     __pdataBANK0:
  2759                           	opt stack 0
  2760  0000F9                     _selectedFont:
  2761                           	opt stack 0
  2762  0000F9                     	ds	2
  2763  0000FB                     _S1:
  2764                           	opt stack 0
  2765  0000FB                     	ds	1
  2766  0000FC                     _S2:
  2767                           	opt stack 0
  2768  0000FC                     	ds	1
  2769  0000FD                     _moteState:
  2770                           	opt stack 0
  2771  0000FD                     	ds	1
  2772  0000FE                     _prevS1:
  2773                           	opt stack 0
  2774  0000FE                     	ds	1
  2775  0000FF                     _prevS2:
  2776                           	opt stack 0
  2777  0000FF                     	ds	1
  2778                           tblptru	equ	0xFF8
  2779                           tblptrh	equ	0xFF7
  2780                           tblptrl	equ	0xFF6
  2781                           tablat	equ	0xFF5
  2782                           postinc0	equ	0xFEE
  2783                           wreg	equ	0xFE8
  2784                           postdec1	equ	0xFE5
  2785                           fsr1l	equ	0xFE1
  2786                           
  2787                           	psect	bssBANK1
  2788  000100                     __pbssBANK1:
  2789                           	opt stack 0
  2790  000100                     _responseId:
  2791                           	opt stack 0
  2792  000100                     	ds	16
  2793  000110                     _responseData:
  2794                           	opt stack 0
  2795  000110                     	ds	8
  2796  000118                     _USB_Buffer:
  2797                           	opt stack 0
  2798  000118                     	ds	64
  2799  000158                     _cmd:
  2800                           	opt stack 0
  2801  000158                     	ds	64
  2802  000198                     _modemResonseBuffer:
  2803                           	opt stack 0
  2804  000198                     	ds	64
  2805  0001D8                     _cdc_notice:
  2806                           	opt stack 0
  2807  0001D8                     	ds	10
  2808  0001E2                     _dummy_encapsulated_cmd_response:
  2809                           	opt stack 0
  2810  0001E2                     	ds	8
  2811                           tblptru	equ	0xFF8
  2812                           tblptrh	equ	0xFF7
  2813                           tblptrl	equ	0xFF6
  2814                           tablat	equ	0xFF5
  2815                           postinc0	equ	0xFEE
  2816                           wreg	equ	0xFE8
  2817                           postdec1	equ	0xFE5
  2818                           fsr1l	equ	0xFE1
  2819                           
  2820                           	psect	bssBANK2
  2821  000200                     __pbssBANK2:
  2822                           	opt stack 0
  2823  000200                     _eusartRxBuffer:
  2824                           	opt stack 0
  2825  000200                     	ds	64
  2826  000240                     _eusartTxBuffer:
  2827                           	opt stack 0
  2828  000240                     	ds	64
  2829                           tblptru	equ	0xFF8
  2830                           tblptrh	equ	0xFF7
  2831                           tblptrl	equ	0xFF6
  2832                           tablat	equ	0xFF5
  2833                           postinc0	equ	0xFEE
  2834                           wreg	equ	0xFE8
  2835                           postdec1	equ	0xFE5
  2836                           fsr1l	equ	0xFE1
  2837                           
  2838                           	psect	cstackBANK0
  2839  0000B8                     __pcstackBANK0:
  2840                           	opt stack 0
  2841  0000B8                     ??_TMR1_Initialize:
  2842  0000B8                     ??_isdigit:
  2843  0000B8                     ?_ADC_GetConversion:
  2844                           	opt stack 0
  2845  0000B8                     ?_strncmp:
  2846                           	opt stack 0
  2847  0000B8                     ?_strcmp:
  2848                           	opt stack 0
  2849  0000B8                     ?_USBTransferOnePacket:
  2850                           	opt stack 0
  2851  0000B8                     ?___wmul:
  2852                           	opt stack 0
  2853  0000B8                     ?___lwdiv:
  2854                           	opt stack 0
  2855  0000B8                     MOTEapp_handlerState@state:
  2856                           	opt stack 0
  2857  0000B8                     MOTEapp_TimerBasedTask@timerTask:
  2858                           	opt stack 0
  2859  0000B8                     hexToStr@character:
  2860                           	opt stack 0
  2861  0000B8                     moteApp_clearBuffers@counter:
  2862                           	opt stack 0
  2863  0000B8                     USBapp_handlerState@state:
  2864                           	opt stack 0
  2865  0000B8                     service_pushbutton@bs:
  2866                           	opt stack 0
  2867  0000B8                     EUSART_Read@readValue:
  2868                           	opt stack 0
  2869  0000B8                     EUSART_Write@txData:
  2870                           	opt stack 0
  2871  0000B8                     EUSART_FlushBuffer@index:
  2872                           	opt stack 0
  2873  0000B8                     SPI_Exchange8bit@data:
  2874                           	opt stack 0
  2875  0000B8                     DATAEE_WriteByte@bData:
  2876                           	opt stack 0
  2877  0000B8                     DATAEE_ReadByte@bAdd:
  2878                           	opt stack 0
  2879  0000B8                     TMR2_ReadTimer@readVal:
  2880                           	opt stack 0
  2881  0000B8                     USBTransferOnePacket@dir:
  2882                           	opt stack 0
  2883  0000B8                     ___lbdiv@divisor:
  2884                           	opt stack 0
  2885  0000B8                     ___lbmod@divisor:
  2886                           	opt stack 0
  2887  0000B8                     moteApp_delayms@length:
  2888                           	opt stack 0
  2889  0000B8                     oled_setFont@font:
  2890                           	opt stack 0
  2891  0000B8                     putUSBUSART@data:
  2892                           	opt stack 0
  2893  0000B8                     ___wmul@multiplier:
  2894                           	opt stack 0
  2895  0000B8                     ___lwdiv@dividend:
  2896                           	opt stack 0
  2897  0000B8                     memset@p1:
  2898                           	opt stack 0
  2899  0000B8                     strcmp@s1:
  2900                           	opt stack 0
  2901  0000B8                     strncmp@s1:
  2902                           	opt stack 0
  2903                           
  2904                           ; 2 bytes @ 0x0
  2905  0000B8                     	ds	1
  2906  0000B9                     MOTEapp_getModemResponse@terminatorReceived:
  2907                           	opt stack 0
  2908  0000B9                     moteApp_clearBuffers@counter_1521:
  2909                           	opt stack 0
  2910  0000B9                     oled_writeCommand@command:
  2911                           	opt stack 0
  2912  0000B9                     oled_writeData@data:
  2913                           	opt stack 0
  2914  0000B9                     DATAEE_WriteByte@bAdd:
  2915                           	opt stack 0
  2916  0000B9                     _isdigit$5906:
  2917                           	opt stack 0
  2918  0000B9                     ___lbdiv@dividend:
  2919                           	opt stack 0
  2920  0000B9                     ___lbmod@dividend:
  2921                           	opt stack 0
  2922  0000B9                     sendCommand@string:
  2923                           	opt stack 0
  2924  0000B9                     sendDataCommand@string:
  2925                           	opt stack 0
  2926  0000B9                     USBTransferOnePacket@data:
  2927                           	opt stack 0
  2928                           
  2929                           ; 2 bytes @ 0x1
  2930  0000B9                     	ds	1
  2931  0000BA                     ??_moteApp_delayms:
  2932  0000BA                     ??_ADC_GetConversion:
  2933  0000BA                     ??_oled_devInit:
  2934  0000BA                     MOTEapp_getModemResponse@bufferByte:
  2935                           	opt stack 0
  2936  0000BA                     moteApp_clearBuffers@counter_1522:
  2937                           	opt stack 0
  2938  0000BA                     Set_Page_Address@address:
  2939                           	opt stack 0
  2940  0000BA                     Set_Column_Address@address:
  2941                           	opt stack 0
  2942  0000BA                     oled_setDisplay@displayType:
  2943                           	opt stack 0
  2944  0000BA                     oled_displayOff@state:
  2945                           	opt stack 0
  2946  0000BA                     DATAEE_WriteByte@GIEBitValue:
  2947                           	opt stack 0
  2948  0000BA                     putUSBUSART@length:
  2949                           	opt stack 0
  2950  0000BA                     isdigit@c:
  2951                           	opt stack 0
  2952  0000BA                     ___lbdiv@counter:
  2953                           	opt stack 0
  2954  0000BA                     ___lbmod@counter:
  2955                           	opt stack 0
  2956  0000BA                     ___wmul@multiplicand:
  2957                           	opt stack 0
  2958  0000BA                     ___lwdiv@divisor:
  2959                           	opt stack 0
  2960  0000BA                     memset@c:
  2961                           	opt stack 0
  2962  0000BA                     strcmp@s2:
  2963                           	opt stack 0
  2964  0000BA                     strncmp@s2:
  2965                           	opt stack 0
  2966                           
  2967                           ; 2 bytes @ 0x2
  2968  0000BA                     	ds	1
  2969  0000BB                     sendDataCommand@appData:
  2970                           	opt stack 0
  2971  0000BB                     oled_putChar@station_dot:
  2972                           	opt stack 0
  2973  0000BB                     USBTransferOnePacket@len:
  2974                           	opt stack 0
  2975  0000BB                     ___lbdiv@quotient:
  2976                           	opt stack 0
  2977  0000BB                     ___lbmod@rem:
  2978                           	opt stack 0
  2979  0000BB                     moteApp_delayms@counter:
  2980                           	opt stack 0
  2981                           
  2982                           ; 2 bytes @ 0x3
  2983  0000BB                     	ds	1
  2984  0000BC                     ??_strcmp:
  2985  0000BC                     sendDataCommand@dataLength:
  2986                           	opt stack 0
  2987  0000BC                     moteApp_add8bToDataBuffer@bufferLocation:
  2988                           	opt stack 0
  2989  0000BC                     oled_putChar@start_page:
  2990                           	opt stack 0
  2991  0000BC                     ADC_GetConversion@channel:
  2992                           	opt stack 0
  2993  0000BC                     USBTransferOnePacket@ep:
  2994                           	opt stack 0
  2995  0000BC                     ___lwdiv@counter:
  2996                           	opt stack 0
  2997  0000BC                     ___wmul@product:
  2998                           	opt stack 0
  2999  0000BC                     memset@n:
  3000                           	opt stack 0
  3001  0000BC                     strncmp@len:
  3002                           	opt stack 0
  3003                           
  3004                           ; 2 bytes @ 0x4
  3005  0000BC                     	ds	1
  3006  0000BD                     ??_oled_putChar:
  3007  0000BD                     ??_sendDataCommand:
  3008  0000BD                     moteApp_add8bToDataBuffer@number:
  3009                           	opt stack 0
  3010  0000BD                     modemResync@escapeCounter:
  3011                           	opt stack 0
  3012  0000BD                     USBTransferOnePacket@handle:
  3013                           	opt stack 0
  3014  0000BD                     ___lwdiv@quotient:
  3015                           	opt stack 0
  3016                           
  3017                           ; 2 bytes @ 0x5
  3018  0000BD                     	ds	1
  3019  0000BE                     ??_strncmp:
  3020  0000BE                     sendDataCommand@byteCount:
  3021                           	opt stack 0
  3022  0000BE                     strcmp@t0:
  3023                           	opt stack 0
  3024  0000BE                     memset@p:
  3025                           	opt stack 0
  3026                           
  3027                           ; 2 bytes @ 0x6
  3028  0000BE                     	ds	1
  3029  0000BF                     ?___lwmod:
  3030                           	opt stack 0
  3031  0000BF                     modemResync@escapeEvent:
  3032                           	opt stack 0
  3033  0000BF                     sendDataCommand@byteCount_1454:
  3034                           	opt stack 0
  3035  0000BF                     ADC_TempConversion@tempRaw:
  3036                           	opt stack 0
  3037  0000BF                     strcmp@t2:
  3038                           	opt stack 0
  3039  0000BF                     getsUSBUSART@buffer:
  3040                           	opt stack 0
  3041  0000BF                     _CDCTxService$5576:
  3042                           	opt stack 0
  3043  0000BF                     ___lwmod@dividend:
  3044                           	opt stack 0
  3045                           
  3046                           ; 2 bytes @ 0x7
  3047  0000BF                     	ds	1
  3048  0000C0                     ADC_TempConversion@temp:
  3049                           	opt stack 0
  3050  0000C0                     USBDeviceInit@i:
  3051                           	opt stack 0
  3052  0000C0                     strcmp@t1:
  3053                           	opt stack 0
  3054                           
  3055                           ; 1 bytes @ 0x8
  3056  0000C0                     	ds	1
  3057  0000C1                     getsUSBUSART@len:
  3058                           	opt stack 0
  3059  0000C1                     CDCTxService@i:
  3060                           	opt stack 0
  3061  0000C1                     ___lwmod@divisor:
  3062                           	opt stack 0
  3063                           
  3064                           ; 2 bytes @ 0x9
  3065  0000C1                     	ds	1
  3066  0000C2                     CDCTxService@byte_to_send:
  3067                           	opt stack 0
  3068                           
  3069                           ; 1 bytes @ 0xA
  3070  0000C2                     	ds	1
  3071  0000C3                     oled_putChar@k:
  3072                           	opt stack 0
  3073  0000C3                     ___lwmod@counter:
  3074                           	opt stack 0
  3075  0000C3                     _getsUSBUSART$5528:
  3076                           	opt stack 0
  3077                           
  3078                           ; 2 bytes @ 0xB
  3079  0000C3                     	ds	1
  3080  0000C4                     ?_sprintf:
  3081                           	opt stack 0
  3082  0000C4                     oled_putChar@index:
  3083                           	opt stack 0
  3084  0000C4                     moteApp_add16bToDataBuffer@number:
  3085                           	opt stack 0
  3086  0000C4                     sprintf@sp:
  3087                           	opt stack 0
  3088                           
  3089                           ; 2 bytes @ 0xC
  3090  0000C4                     	ds	1
  3091  0000C5                     ??_USBapp_DeviceCdcEmulatorHandler:
  3092  0000C5                     oled_clearRow@page:
  3093                           	opt stack 0
  3094  0000C5                     oled_putString@string:
  3095                           	opt stack 0
  3096                           
  3097                           ; 2 bytes @ 0xD
  3098  0000C5                     	ds	1
  3099  0000C6                     moteApp_add16bToDataBuffer@bufferLocation:
  3100                           	opt stack 0
  3101  0000C6                     oled_clearRow@index:
  3102                           	opt stack 0
  3103  0000C6                     sprintf@f:
  3104                           	opt stack 0
  3105                           
  3106                           ; 2 bytes @ 0xE
  3107  0000C6                     	ds	1
  3108  0000C7                     oled_putString@station_dot:
  3109                           	opt stack 0
  3110                           
  3111                           ; 1 bytes @ 0xF
  3112  0000C7                     	ds	1
  3113  0000C8                     oled_putString@start_page:
  3114                           	opt stack 0
  3115                           
  3116                           ; 1 bytes @ 0x10
  3117  0000C8                     	ds	1
  3118  0000C9                     oled_putString@index:
  3119                           	opt stack 0
  3120                           
  3121                           ; 1 bytes @ 0x11
  3122  0000C9                     	ds	1
  3123  0000CA                     oled_putUint8@station_dot:
  3124                           	opt stack 0
  3125  0000CA                     oled_putUint16@number:
  3126                           	opt stack 0
  3127                           
  3128                           ; 2 bytes @ 0x12
  3129  0000CA                     	ds	1
  3130  0000CB                     oled_putUint8@start_page:
  3131                           	opt stack 0
  3132                           
  3133                           ; 1 bytes @ 0x13
  3134  0000CB                     	ds	1
  3135  0000CC                     ??_sprintf:
  3136  0000CC                     oled_putUint8@number:
  3137                           	opt stack 0
  3138  0000CC                     oled_putUint16@station_dot:
  3139                           	opt stack 0
  3140                           
  3141                           ; 1 bytes @ 0x14
  3142  0000CC                     	ds	1
  3143  0000CD                     oled_putUint16@start_page:
  3144                           	opt stack 0
  3145  0000CD                     oled_putUint8@numData:
  3146                           	opt stack 0
  3147                           
  3148                           ; 6 bytes @ 0x15
  3149  0000CD                     	ds	1
  3150  0000CE                     oled_putUint16@numData:
  3151                           	opt stack 0
  3152                           
  3153                           ; 6 bytes @ 0x16
  3154  0000CE                     	ds	2
  3155  0000D0                     sprintf@idx:
  3156                           	opt stack 0
  3157                           
  3158                           ; 1 bytes @ 0x18
  3159  0000D0                     	ds	1
  3160  0000D1                     sprintf@prec:
  3161                           	opt stack 0
  3162                           
  3163                           ; 1 bytes @ 0x19
  3164  0000D1                     	ds	1
  3165  0000D2                     sprintf@cp:
  3166                           	opt stack 0
  3167                           
  3168                           ; 2 bytes @ 0x1A
  3169  0000D2                     	ds	2
  3170  0000D4                     moteRunningProcess@selectButton:
  3171                           	opt stack 0
  3172  0000D4                     sprintf@ap:
  3173                           	opt stack 0
  3174                           
  3175                           ; 1 bytes @ 0x1C
  3176  0000D4                     	ds	1
  3177  0000D5                     moteRunningProcess@messageReady:
  3178                           	opt stack 0
  3179  0000D5                     sprintf@len:
  3180                           	opt stack 0
  3181                           
  3182                           ; 2 bytes @ 0x1D
  3183  0000D5                     	ds	1
  3184  0000D6                     moteRunningProcess@sleepEvent:
  3185                           	opt stack 0
  3186                           
  3187                           ; 1 bytes @ 0x1E
  3188  0000D6                     	ds	1
  3189  0000D7                     ??_moteRunningProcess:
  3190  0000D7                     sprintf@val:
  3191                           	opt stack 0
  3192                           
  3193                           ; 2 bytes @ 0x1F
  3194  0000D7                     	ds	2
  3195  0000D9                     sprintf@flag:
  3196                           	opt stack 0
  3197  0000D9                     moteRunningProcess@Traw:
  3198                           	opt stack 0
  3199                           
  3200                           ; 2 bytes @ 0x21
  3201  0000D9                     	ds	1
  3202  0000DA                     sprintf@width:
  3203                           	opt stack 0
  3204                           
  3205                           ; 2 bytes @ 0x22
  3206  0000DA                     	ds	1
  3207  0000DB                     moteRunningProcess@i:
  3208                           	opt stack 0
  3209                           
  3210                           ; 1 bytes @ 0x23
  3211  0000DB                     	ds	1
  3212  0000DC                     moteRunningProcess@i_1396:
  3213                           	opt stack 0
  3214  0000DC                     sprintf@c:
  3215                           	opt stack 0
  3216                           
  3217                           ; 1 bytes @ 0x24
  3218  0000DC                     	ds	1
  3219  0000DD                     moteJoiningProcess@switchEvent:
  3220                           	opt stack 0
  3221                           
  3222                           ; 1 bytes @ 0x25
  3223  0000DD                     	ds	1
  3224  0000DE                     ??_moteJoiningProcess:
  3225                           
  3226                           ; 1 bytes @ 0x26
  3227  0000DE                     	ds	2
  3228  0000E0                     _moteJoiningProcess$1339:
  3229                           	opt stack 0
  3230                           
  3231                           ; 2 bytes @ 0x28
  3232  0000E0                     	ds	2
  3233  0000E2                     _moteJoiningProcess$1357:
  3234                           	opt stack 0
  3235                           
  3236                           ; 2 bytes @ 0x2A
  3237  0000E2                     	ds	2
  3238  0000E4                     _moteJoiningProcess$1364:
  3239                           	opt stack 0
  3240                           
  3241                           ; 2 bytes @ 0x2C
  3242  0000E4                     	ds	2
  3243  0000E6                     _moteJoiningProcess$1372:
  3244                           	opt stack 0
  3245                           
  3246                           ; 2 bytes @ 0x2E
  3247  0000E6                     	ds	2
  3248  0000E8                     moteJoiningProcess@joiningComplete:
  3249                           	opt stack 0
  3250                           
  3251                           ; 1 bytes @ 0x30
  3252  0000E8                     	ds	1
  3253  0000E9                     moteJoiningProcess@Traw:
  3254                           	opt stack 0
  3255                           
  3256                           ; 2 bytes @ 0x31
  3257  0000E9                     	ds	2
  3258  0000EB                     moteJoiningProcess@i:
  3259                           	opt stack 0
  3260                           
  3261                           ; 1 bytes @ 0x33
  3262  0000EB                     	ds	1
  3263  0000EC                     moteJoiningProcess@i_1367:
  3264                           	opt stack 0
  3265                           
  3266                           ; 1 bytes @ 0x34
  3267  0000EC                     	ds	1
  3268  0000ED                     moteJoiningProcess@messageReady:
  3269                           	opt stack 0
  3270                           
  3271                           ; 1 bytes @ 0x35
  3272  0000ED                     	ds	1
  3273  0000EE                     ??_moteHandler:
  3274                           
  3275                           ; 1 bytes @ 0x36
  3276  0000EE                     	ds	2
  3277  0000F0                     moteHandler@gotoSleep:
  3278                           	opt stack 0
  3279                           
  3280                           ; 1 bytes @ 0x38
  3281  0000F0                     	ds	1
  3282  0000F1                     moteHandler@gotoNextState:
  3283                           	opt stack 0
  3284                           
  3285                           ; 1 bytes @ 0x39
  3286  0000F1                     	ds	1
  3287  0000F2                     moteHandler@Traw:
  3288                           	opt stack 0
  3289                           
  3290                           ; 2 bytes @ 0x3A
  3291  0000F2                     	ds	2
  3292  0000F4                     moteHandler@s2Button:
  3293                           	opt stack 0
  3294                           
  3295                           ; 1 bytes @ 0x3C
  3296  0000F4                     	ds	1
  3297  0000F5                     moteHandler@buttonPress:
  3298                           	opt stack 0
  3299                           
  3300                           ; 1 bytes @ 0x3D
  3301  0000F5                     	ds	1
  3302  0000F6                     moteHandler@i:
  3303                           	opt stack 0
  3304                           
  3305                           ; 1 bytes @ 0x3E
  3306  0000F6                     	ds	1
  3307  0000F7                     moteHandler@i_1296:
  3308                           	opt stack 0
  3309                           
  3310                           ; 1 bytes @ 0x3F
  3311  0000F7                     	ds	1
  3312  0000F8                     moteHandler@readMessage:
  3313                           	opt stack 0
  3314                           
  3315                           ; 1 bytes @ 0x40
  3316  0000F8                     	ds	1
  3317  0000F9                     tblptru	equ	0xFF8
  3318                           tblptrh	equ	0xFF7
  3319                           tblptrl	equ	0xFF6
  3320                           tablat	equ	0xFF5
  3321                           postinc0	equ	0xFEE
  3322                           wreg	equ	0xFE8
  3323                           postdec1	equ	0xFE5
  3324                           fsr1l	equ	0xFE1
  3325                           
  3326                           ; 1 bytes @ 0x41
  3327                           
  3328                           	psect	cstackCOMRAM
  3329  00002E                     __pcstackCOMRAM:
  3330                           	opt stack 0
  3331  00002E                     ??_USBStdGetDscHandler:
  3332  00002E                     ?i2_USBTransferOnePacket:
  3333                           	opt stack 0
  3334  00002E                     ?___lldiv:
  3335                           	opt stack 0
  3336  00002E                     USBConfigureEndpoint@direction:
  3337                           	opt stack 0
  3338  00002E                     USBCtrlTrfTxService@byteToSend:
  3339                           	opt stack 0
  3340  00002E                     i2USBTransferOnePacket@dir:
  3341                           	opt stack 0
  3342  00002E                     USBStdGetStatusHandler@p:
  3343                           	opt stack 0
  3344  00002E                     i2memset@p1:
  3345                           	opt stack 0
  3346  00002E                     ___lldiv@dividend:
  3347                           	opt stack 0
  3348                           
  3349                           ; 4 bytes @ 0x0
  3350  00002E                     	ds	1
  3351  00002F                     ??_USBConfigureEndpoint:
  3352  00002F                     i2USBTransferOnePacket@data:
  3353                           	opt stack 0
  3354                           
  3355                           ; 2 bytes @ 0x1
  3356  00002F                     	ds	1
  3357  000030                     i2memset@c:
  3358                           	opt stack 0
  3359                           
  3360                           ; 2 bytes @ 0x2
  3361  000030                     	ds	1
  3362  000031                     i2USBTransferOnePacket@len:
  3363                           	opt stack 0
  3364                           
  3365                           ; 1 bytes @ 0x3
  3366  000031                     	ds	1
  3367  000032                     i2USBTransferOnePacket@ep:
  3368                           	opt stack 0
  3369  000032                     i2memset@n:
  3370                           	opt stack 0
  3371  000032                     ___lldiv@divisor:
  3372                           	opt stack 0
  3373                           
  3374                           ; 4 bytes @ 0x4
  3375  000032                     	ds	1
  3376  000033                     USBConfigureEndpoint@EPNum:
  3377                           	opt stack 0
  3378  000033                     i2USBTransferOnePacket@handle:
  3379                           	opt stack 0
  3380                           
  3381                           ; 2 bytes @ 0x5
  3382  000033                     	ds	1
  3383  000034                     USBConfigureEndpoint@handle:
  3384                           	opt stack 0
  3385  000034                     i2memset@p:
  3386                           	opt stack 0
  3387                           
  3388                           ; 2 bytes @ 0x6
  3389  000034                     	ds	2
  3390  000036                     USBEnableEndpoint@options:
  3391                           	opt stack 0
  3392  000036                     i2USBDeviceInit@i:
  3393                           	opt stack 0
  3394  000036                     ___lldiv@quotient:
  3395                           	opt stack 0
  3396                           
  3397                           ; 4 bytes @ 0x8
  3398  000036                     	ds	1
  3399  000037                     USBEnableEndpoint@p:
  3400                           	opt stack 0
  3401                           
  3402                           ; 2 bytes @ 0x9
  3403  000037                     	ds	2
  3404  000039                     USBEnableEndpoint@ep:
  3405                           	opt stack 0
  3406                           
  3407                           ; 1 bytes @ 0xB
  3408  000039                     	ds	1
  3409  00003A                     USBapp_CdcEmulatorInitialize@i:
  3410                           	opt stack 0
  3411  00003A                     ___lldiv@counter:
  3412                           	opt stack 0
  3413                           
  3414                           ; 1 bytes @ 0xC
  3415  00003A                     	ds	1
  3416  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3417                           	opt stack 0
  3418  00003B                     USART_mySetLineCodingHandler@dwBaud:
  3419                           	opt stack 0
  3420                           
  3421                           ; 4 bytes @ 0xD
  3422  00003B                     	ds	2
  3423  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3424                           	opt stack 0
  3425                           
  3426                           ; 2 bytes @ 0xF
  3427  00003D                     	ds	2
  3428  00003F                     USBCtrlTrfRxService@i:
  3429                           	opt stack 0
  3430  00003F                     USBCtrlTrfInHandler@lastDTS:
  3431                           	opt stack 0
  3432  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3433                           	opt stack 0
  3434                           
  3435                           ; 2 bytes @ 0x11
  3436  00003F                     	ds	1
  3437  000040                     USBCtrlTrfRxService@byteToRead:
  3438                           	opt stack 0
  3439                           
  3440                           ; 1 bytes @ 0x12
  3441  000040                     	ds	1
  3442  000041                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3443                           
  3444                           ; 1 bytes @ 0x13
  3445  000041                     	ds	2
  3446  000043                     ??_USBStdFeatureReqHandler:
  3447  000043                     USBStdSetCfgHandler@i:
  3448                           	opt stack 0
  3449                           
  3450                           ; 1 bytes @ 0x15
  3451  000043                     	ds	2
  3452  000045                     USBStdFeatureReqHandler@pUEP:
  3453                           	opt stack 0
  3454                           
  3455                           ; 2 bytes @ 0x17
  3456  000045                     	ds	2
  3457  000047                     USBStdFeatureReqHandler@current_ep_data:
  3458                           	opt stack 0
  3459                           
  3460                           ; 1 bytes @ 0x19
  3461  000047                     	ds	1
  3462  000048                     USBStdFeatureReqHandler@p:
  3463                           	opt stack 0
  3464                           
  3465                           ; 2 bytes @ 0x1A
  3466  000048                     	ds	2
  3467  00004A                     ??_USBCheckStdRequest:
  3468                           
  3469                           ; 1 bytes @ 0x1C
  3470  00004A                     	ds	1
  3471  00004B                     ??_USBCtrlEPService:
  3472  00004B                     
  3473                           ; 1 bytes @ 0x1D
  3474  00004B                     	ds	2
  3475  00004D                     USBCtrlEPService@setup_cnt:
  3476                           	opt stack 0
  3477                           
  3478                           ; 1 bytes @ 0x1F
  3479  00004D                     	ds	1
  3480  00004E                     USBDeviceTasks@i:
  3481                           	opt stack 0
  3482                           
  3483                           ; 1 bytes @ 0x20
  3484  00004E                     	ds	1
  3485  00004F                     ??_INTERRUPT_InterruptManager:
  3486                           
  3487                           ; 1 bytes @ 0x21
  3488  00004F                     	ds	12
  3489                           tblptru	equ	0xFF8
  3490                           tblptrh	equ	0xFF7
  3491                           tblptrl	equ	0xFF6
  3492                           tablat	equ	0xFF5
  3493                           postinc0	equ	0xFEE
  3494                           wreg	equ	0xFE8
  3495                           postdec1	equ	0xFE5
  3496                           fsr1l	equ	0xFE1
  3497                           
  3498 ;;
  3499 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3500 ;;
  3501 ;; *************** function _main *****************
  3502 ;; Defined at:
  3503 ;;		line 43 in file "main.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : F/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3517 ;;      Params:         0       0       0       0       0       0       0       0       0
  3518 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3520 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3521 ;;Total ram usage:        0 bytes
  3522 ;; Hardware stack levels required when called:   21
  3523 ;; This function calls:
  3524 ;;		_DATAEE_ReadByte
  3525 ;;		_MOTEapp_handlerState
  3526 ;;		_SYSTEM_Initialize
  3527 ;;		_USBDeviceAttach
  3528 ;;		_USBDeviceInit
  3529 ;;		_USBapp_Handler
  3530 ;;		_USBapp_handlerState
  3531 ;;		_modemResync
  3532 ;;		_moteApp_delayms
  3533 ;;		_moteHandler
  3534 ;;		_oled_clear
  3535 ;;		_oled_init
  3536 ;;		_oled_putString
  3537 ;; This function is called by:
  3538 ;;		Startup code after reset
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text0
  3543  0058D4                     __ptext0:
  3544                           	opt stack 0
  3545  0058D4                     _main:
  3546                           	opt stack 10
  3547                           
  3548                           ;main.c: 46: SYSTEM_Initialize();
  3549                           
  3550                           ;incstack = 0
  3551  0058D4  EC83  F022         	call	_SYSTEM_Initialize	;wreg free
  3552                           
  3553                           ;main.c: 61: oled_init();
  3554  0058D8  ECB5  F022         	call	_oled_init	;wreg free
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;main.c: 62: USBDeviceInit();
  3558  0058DC  ECED  F02D         	call	_USBDeviceInit	;wreg free
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;main.c: 68: USBDeviceAttach();
  3562  0058E0  ECA8  F023         	call	_USBDeviceAttach	;wreg free
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;main.c: 70: PEIE = 1;
  3566  0058E4  8CF2               	bsf	intcon,6,c	;volatile
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;main.c: 71: GIE = 1;
  3570  0058E6  8EF2               	bsf	intcon,7,c	;volatile
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;main.c: 74: moteApp_delayms(300);
  3574  0058E8  0E01               	movlw	1
  3575  0058EA  6FB9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3576  0058EC  0E2C               	movlw	44
  3577  0058EE  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  3578  0058F0  EC14  F023         	call	_moteApp_delayms	;wreg free
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;main.c: 75: modemResync();
  3582  0058F4  EC10  F027         	call	_modemResync	;wreg free
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;main.c: 76: moteApp_delayms(300);
  3586  0058F8  0E01               	movlw	1
  3587  0058FA  6FB9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3588  0058FC  0E2C               	movlw	44
  3589  0058FE  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  3590  005900  EC14  F023         	call	_moteApp_delayms	;wreg free
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;main.c: 80: powerOnStatus = DATAEE_ReadByte(0x00);
  3594  005904  0E00               	movlw	0
  3595  005906  ECEB  F021         	call	_DATAEE_ReadByte
  3596                           
  3597                           ;main.c: 90: operationType = USB;
  3598  00590A  0100               	movlb	0	; () banked
  3599  00590C  6B9C               	clrf	_operationType& (0+255),b
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;main.c: 91: USBapp_handlerState(USB_STARTUP);
  3603  00590E  0E00               	movlw	0
  3604  005910  EC92  F021         	call	_USBapp_handlerState
  3605                           
  3606                           ;main.c: 96: oled_clear();
  3607  005914  EC1F  F022         	call	_oled_clear	;wreg free
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;main.c: 97: oled_putString("Scriptr IoT-X",0,0);
  3611  005918  0ED1               	movlw	low STR_1
  3612  00591A  6FC5               	movwf	oled_putString@string& (0+255),b
  3613  00591C  0E7D               	movlw	high STR_1
  3614  00591E  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  3615  005920  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  3616  005922  6BC8               	clrf	oled_putString@start_page& (0+255),b
  3617  005924  EC42  F027         	call	_oled_putString	;wreg free
  3618                           
  3619                           ;main.c: 98: oled_putString(" Dev: S2 ",0,1);
  3620  005928  0E28               	movlw	low STR_2
  3621  00592A  0100               	movlb	0	; () banked
  3622  00592C  6FC5               	movwf	oled_putString@string& (0+255),b
  3623  00592E  0E7F               	movlw	high STR_2
  3624  005930  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  3625  005932  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  3626  005934  0E01               	movlw	1
  3627  005936  6FC8               	movwf	oled_putString@start_page& (0+255),b
  3628  005938  EC42  F027         	call	_oled_putString	;wreg free
  3629                           
  3630                           ;main.c: 99: oled_putString("   build 011   ",0,3);
  3631  00593C  0EA3               	movlw	low STR_3
  3632  00593E  0100               	movlb	0	; () banked
  3633  005940  6FC5               	movwf	oled_putString@string& (0+255),b
  3634  005942  0E7D               	movlw	high STR_3
  3635  005944  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  3636  005946  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  3637  005948  0E03               	movlw	3
  3638  00594A  6FC8               	movwf	oled_putString@start_page& (0+255),b
  3639  00594C  EC42  F027         	call	_oled_putString	;wreg free
  3640                           
  3641                           ;main.c: 100: moteApp_delayms(700);
  3642  005950  0E02               	movlw	2
  3643  005952  0100               	movlb	0	; () banked
  3644  005954  6FB9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3645  005956  0EBC               	movlw	188
  3646  005958  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  3647  00595A  EC14  F023         	call	_moteApp_delayms	;wreg free
  3648  00595E  D011               	goto	l10624
  3649  005960                     l50:
  3650  005960  D7FF               	goto	l50
  3651  005962                     l10610:
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;main.c: 112: USBapp_Handler();
  3655  005962  EC55  F028         	call	_USBapp_Handler	;wreg free
  3656                           
  3657                           ;main.c: 114: operationType = MOTE;
  3658  005966  0E01               	movlw	1
  3659  005968  0100               	movlb	0	; () banked
  3660  00596A  6F9C               	movwf	_operationType& (0+255),b
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;main.c: 115: MOTEapp_handlerState(MOTE_STARTUP);
  3664  00596C  EC8E  F021         	call	_MOTEapp_handlerState
  3665                           
  3666                           ;main.c: 116: break;
  3667  005970  D008               	goto	l10624
  3668  005972                     l10616:
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;main.c: 118: if (moteHandler() == MOTE_SWAP)
  3672  005972  ECE5  F033         	call	_moteHandler	;wreg free
  3673  005976  0A04               	xorlw	4
  3674  005978  E104               	bnz	l10624
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;main.c: 119: {
  3678                           ;main.c: 121: operationType = USB;
  3679  00597A  6B9C               	clrf	_operationType& (0+255),b
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;main.c: 122: USBapp_handlerState(USB_STARTUP);
  3683  00597C  0E00               	movlw	0
  3684  00597E  EC92  F021         	call	_USBapp_handlerState
  3685  005982                     l10624:
  3686  005982  0100               	movlb	0	; () banked
  3687  005984  519C               	movf	_operationType& (0+255),w,b
  3688                           
  3689                           ; Switch size 1, requested type "speed"
  3690                           ; Number of cases is 2, Range of values is 0 to 1
  3691                           ; switch strategies available:
  3692                           ; Name         Instructions Cycles
  3693                           ; simple_byte            7     4 (average)
  3694                           ;	Chosen strategy is simple_byte
  3695  005986  E0ED               	bz	l10610
  3696  005988  0A01               	xorlw	1	; case 1
  3697  00598A  E0F3               	bz	l10616
  3698  00598C  D7E9               	goto	l50
  3699  00598E                     __end_of_main:
  3700                           	opt stack 0
  3701                           tblptru	equ	0xFF8
  3702                           tblptrh	equ	0xFF7
  3703                           tblptrl	equ	0xFF6
  3704                           tablat	equ	0xFF5
  3705                           intcon	equ	0xFF2
  3706                           postinc0	equ	0xFEE
  3707                           wreg	equ	0xFE8
  3708                           postdec1	equ	0xFE5
  3709                           fsr1l	equ	0xFE1
  3710                           
  3711 ;; *************** function _moteHandler *****************
  3712 ;; Defined at:
  3713 ;;		line 183 in file "../Includes/Board/MOTEapp.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  i               1   63[BANK0 ] unsigned char 
  3718 ;;  i               1   62[BANK0 ] unsigned char 
  3719 ;;  Traw            2   58[BANK0 ] unsigned int 
  3720 ;;  readMessage     1   64[BANK0 ] unsigned char 
  3721 ;;  buttonPress     1   61[BANK0 ] enum E6327
  3722 ;;  s2Button        1   60[BANK0 ] unsigned char 
  3723 ;;  gotoNextStat    1   57[BANK0 ] unsigned char 
  3724 ;;  gotoSleep       1   56[BANK0 ] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      enum E7241
  3727 ;; Registers used:
  3728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : F/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3734 ;;      Params:         0       0       0       0       0       0       0       0       0
  3735 ;;      Locals:         0       9       0       0       0       0       0       0       0
  3736 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3737 ;;      Totals:         0      11       0       0       0       0       0       0       0
  3738 ;;Total ram usage:       11 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:   20
  3741 ;; This function calls:
  3742 ;;		_ADC_GetConversion
  3743 ;;		_ADC_TempConversion
  3744 ;;		_MOTEapp_TimerBasedTask
  3745 ;;		_MOTEapp_getModemResponse
  3746 ;;		_TMRapp_ClearBitFlags
  3747 ;;		_TMRapp_Handler
  3748 ;;		_moteApp_delayms
  3749 ;;		_moteJoiningProcess
  3750 ;;		_moteRunningProcess
  3751 ;;		_oled_clear
  3752 ;;		_oled_putString
  3753 ;;		_service_pushbutton
  3754 ;; This function is called by:
  3755 ;;		_main
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text1
  3760  0067CA                     __ptext1:
  3761                           	opt stack 0
  3762  0067CA                     _moteHandler:
  3763                           	opt stack 10
  3764                           
  3765                           ;MOTEapp.c: 185: bool gotoSleep = 0;
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;incstack = 0
  3769  0067CA  0100               	movlb	0	; () banked
  3770  0067CC  6BF0               	clrf	moteHandler@gotoSleep& (0+255),b
  3771                           
  3772                           ;MOTEapp.c: 186: bool gotoNextState = 0;
  3773  0067CE  6BF1               	clrf	moteHandler@gotoNextState& (0+255),b
  3774                           
  3775                           ;MOTEapp.c: 187: bool s2Button = 0;
  3776  0067D0  6BF4               	clrf	moteHandler@s2Button& (0+255),b
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;MOTEapp.c: 195: if (PORTAbits.RA0)
  3780                           
  3781                           ; BSR set to: 0
  3782  0067D2  A080               	btfss	3968,0,c	;volatile
  3783  0067D4  D002               	goto	l10468
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;MOTEapp.c: 196: moteState = MOTE_SWAP;
  3787  0067D6  0E04               	movlw	4
  3788  0067D8  6FFD               	movwf	_moteState& (0+255),b
  3789  0067DA                     l10468:
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;MOTEapp.c: 199: if ( appTimer.mSecTick )
  3793  0067DA  A195               	btfss	_appTimer& (0+255),0,b
  3794  0067DC  D007               	goto	l10476
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;MOTEapp.c: 200: {
  3798                           ;MOTEapp.c: 202: TMRapp_ClearBitFlags();
  3799  0067DE  EC82  F021         	call	_TMRapp_ClearBitFlags	;wreg free
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;MOTEapp.c: 204: TMRapp_Handler();
  3803  0067E2  EC30  F02F         	call	_TMRapp_Handler	;wreg free
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;MOTEapp.c: 205: MOTEapp_TimerBasedTask(appTimer);
  3807  0067E6  5195               	movf	_appTimer& (0+255),w,b
  3808  0067E8  ECB9  F021         	call	_MOTEapp_TimerBasedTask
  3809  0067EC                     l10476:
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;MOTEapp.c: 206: }
  3813                           ;MOTEapp.c: 209: buttonPress = service_pushbutton();
  3814  0067EC  EC62  F025         	call	_service_pushbutton	;wreg free
  3815  0067F0  6FF5               	movwf	moteHandler@buttonPress& (0+255),b
  3816                           
  3817                           ;MOTEapp.c: 210: if (buttonPress == ShortPress1)
  3818  0067F2  05F5               	decf	moteHandler@buttonPress& (0+255),w,b
  3819  0067F4  E104               	bnz	l10482
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;MOTEapp.c: 211: {
  3823                           ;MOTEapp.c: 212: secTicker = 0;
  3824  0067F6  6B9F               	clrf	_secTicker& (0+255),b
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;MOTEapp.c: 213: gotoNextState = 1;
  3828  0067F8  0E01               	movlw	1
  3829  0067FA  6FF1               	movwf	moteHandler@gotoNextState& (0+255),b
  3830                           
  3831                           ;MOTEapp.c: 214: }
  3832  0067FC  D006               	goto	l10488
  3833  0067FE                     l10482:
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;MOTEapp.c: 215: else if (buttonPress == ShortPress2)
  3837  0067FE  0E02               	movlw	2
  3838  006800  19F5               	xorwf	moteHandler@buttonPress& (0+255),w,b
  3839  006802  E103               	bnz	l10488
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;MOTEapp.c: 216: {
  3843                           ;MOTEapp.c: 217: secTicker = 0;
  3844  006804  6B9F               	clrf	_secTicker& (0+255),b
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;MOTEapp.c: 218: s2Button = 1;
  3848  006806  0E01               	movlw	1
  3849  006808  6FF4               	movwf	moteHandler@s2Button& (0+255),b
  3850  00680A                     l10488:
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;MOTEapp.c: 219: }
  3854                           ;MOTEapp.c: 222: if ( MOTEapp_getModemResponse() )
  3855  00680A  EC3D  F025         	call	_MOTEapp_getModemResponse	;wreg free
  3856  00680E  0900               	iorlw	0
  3857  006810  E003               	bz	l336
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;MOTEapp.c: 223: readMessage = 1;
  3861  006812  0E01               	movlw	1
  3862  006814  6FF8               	movwf	moteHandler@readMessage& (0+255),b
  3863  006816  D001               	goto	l10492
  3864  006818                     l336:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;MOTEapp.c: 224: else
  3868                           ;MOTEapp.c: 225: readMessage = 0;
  3869  006818  6BF8               	clrf	moteHandler@readMessage& (0+255),b
  3870  00681A                     l10492:
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;MOTEapp.c: 228: if ( (runningState == runningUplink) || (runningState == runningSensorM
      +                          enu) )
  3874  00681A  0E06               	movlw	6
  3875  00681C  199E               	xorwf	_runningState& (0+255),w,b
  3876  00681E  E003               	bz	l10496
  3877                           
  3878                           ; BSR set to: 0
  3879  006820  0E02               	movlw	2
  3880  006822  199E               	xorwf	_runningState& (0+255),w,b
  3881  006824  E13B               	bnz	l10532
  3882  006826                     l10496:
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;MOTEapp.c: 229: {
  3886                           ;MOTEapp.c: 231: if (m10SecTicker >= 5)
  3887  006826  0E04               	movlw	4
  3888  006828  659A               	cpfsgt	_m10SecTicker& (0+255),b
  3889  00682A  D038               	goto	l10532
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;MOTEapp.c: 232: {
  3893                           ;MOTEapp.c: 233: uint16_t Traw = 0;
  3894  00682C  6BF2               	clrf	moteHandler@Traw& (0+255),b
  3895  00682E  6BF3               	clrf	(moteHandler@Traw+1)& (0+255),b
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;MOTEapp.c: 234: moteApp_delayms(10);
  3899  006830  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  3900  006832  0E0A               	movlw	10
  3901  006834  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  3902  006836  EC14  F023         	call	_moteApp_delayms	;wreg free
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;MOTEapp.c: 235: for(uint8_t i = 32; i>0; i--)
  3906  00683A  0E20               	movlw	32
  3907  00683C  6FF6               	movwf	moteHandler@i& (0+255),b
  3908  00683E                     l10508:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;MOTEapp.c: 236: {
  3912                           ;MOTEapp.c: 237: light = (light + ADC_GetConversion(Light_channel)) / 2;
  3913  00683E  0E03               	movlw	3
  3914  006840  EC57  F024         	call	_ADC_GetConversion
  3915  006844  517D               	movf	_light& (0+255),w,b
  3916  006846  27B8               	addwf	?_ADC_GetConversion& (0+255),f,b
  3917  006848  517E               	movf	(_light+1)& (0+255),w,b
  3918  00684A  23B9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  3919  00684C  90D8               	bcf	status,0,c
  3920  00684E  31B9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  3921  006850  6FEE               	movwf	??_moteHandler& (0+255),b
  3922  006852  31B8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  3923  006854  6F7D               	movwf	_light& (0+255),b
  3924  006856  C0EE  F07E         	movff	??_moteHandler,_light+1
  3925                           
  3926                           ; BSR set to: 0
  3927  00685A  07F6               	decf	moteHandler@i& (0+255),f,b
  3928                           
  3929                           ; BSR set to: 0
  3930  00685C  51F6               	movf	moteHandler@i& (0+255),w,b
  3931  00685E  E1EF               	bnz	l10508
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;MOTEapp.c: 238: }
  3935                           ;MOTEapp.c: 239: moteApp_delayms(10);
  3936  006860  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  3937  006862  0E0A               	movlw	10
  3938  006864  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  3939  006866  EC14  F023         	call	_moteApp_delayms	;wreg free
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;MOTEapp.c: 240: for(uint8_t i = 32; i>0; i--)
  3943  00686A  0E20               	movlw	32
  3944  00686C  6FF7               	movwf	moteHandler@i_1296& (0+255),b
  3945  00686E                     l10522:
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;MOTEapp.c: 241: {
  3949                           ;MOTEapp.c: 242: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  3950  00686E  0E02               	movlw	2
  3951  006870  EC57  F024         	call	_ADC_GetConversion
  3952  006874  51F2               	movf	moteHandler@Traw& (0+255),w,b
  3953  006876  27B8               	addwf	?_ADC_GetConversion& (0+255),f,b
  3954  006878  51F3               	movf	(moteHandler@Traw+1)& (0+255),w,b
  3955  00687A  23B9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  3956  00687C  90D8               	bcf	status,0,c
  3957  00687E  31B9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  3958  006880  6FEE               	movwf	??_moteHandler& (0+255),b
  3959  006882  31B8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  3960  006884  6FF2               	movwf	moteHandler@Traw& (0+255),b
  3961  006886  C0EE  F0F3         	movff	??_moteHandler,moteHandler@Traw+1
  3962                           
  3963                           ; BSR set to: 0
  3964  00688A  07F7               	decf	moteHandler@i_1296& (0+255),f,b
  3965                           
  3966                           ; BSR set to: 0
  3967  00688C  51F7               	movf	moteHandler@i_1296& (0+255),w,b
  3968  00688E  E1EF               	bnz	l10522
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;MOTEapp.c: 243: }
  3972                           ;MOTEapp.c: 244: temperature = ADC_TempConversion(Traw);
  3973  006890  51F2               	movf	moteHandler@Traw& (0+255),w,b
  3974  006892  ECA4  F022         	call	_ADC_TempConversion
  3975  006896  6F83               	movwf	_temperature& (0+255),b
  3976  006898  6B84               	clrf	(_temperature+1)& (0+255),b
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;MOTEapp.c: 245: m10SecTicker = 0;
  3980  00689A  6B9A               	clrf	_m10SecTicker& (0+255),b
  3981  00689C                     l10532:
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;MOTEapp.c: 246: }
  3985                           ;MOTEapp.c: 247: }
  3986                           ;MOTEapp.c: 249: if(secTicker)
  3987  00689C  519F               	movf	_secTicker& (0+255),w,b
  3988  00689E  E060               	bz	l10570
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;MOTEapp.c: 250: {
  3992                           ;MOTEapp.c: 251: if (secTicker >= 10)
  3993  0068A0  0E09               	movlw	9
  3994  0068A2  659F               	cpfsgt	_secTicker& (0+255),b
  3995  0068A4  D05D               	goto	l10570
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;MOTEapp.c: 252: {
  3999                           ;MOTEapp.c: 253: gotoSleep = 1;
  4000  0068A6  0E01               	movlw	1
  4001  0068A8  6FF0               	movwf	moteHandler@gotoSleep& (0+255),b
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;MOTEapp.c: 254: secTicker = 0;
  4005  0068AA  6B9F               	clrf	_secTicker& (0+255),b
  4006  0068AC  D059               	goto	l10570
  4007  0068AE                     l350:
  4008                           
  4009                           ; BSR set to: 0
  4010  0068AE  D7FF               	goto	l350
  4011  0068B0                     l10540:
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;MOTEapp.c: 264: oled_clear();
  4015  0068B0  EC1F  F022         	call	_oled_clear	;wreg free
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;MOTEapp.c: 265: oled_putString("MOTE Mode",1,0);
  4019  0068B4  0E0A               	movlw	low STR_23
  4020  0068B6  6FC5               	movwf	oled_putString@string& (0+255),b
  4021  0068B8  0E7F               	movlw	high STR_23
  4022  0068BA  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  4023  0068BC  0E01               	movlw	1
  4024  0068BE  6FC7               	movwf	oled_putString@station_dot& (0+255),b
  4025  0068C0  6BC8               	clrf	oled_putString@start_page& (0+255),b
  4026  0068C2  EC42  F027         	call	_oled_putString	;wreg free
  4027                           
  4028                           ;MOTEapp.c: 266: oled_putString("Starting",2,1);
  4029  0068C6  0E56               	movlw	low STR_24
  4030  0068C8  0100               	movlb	0	; () banked
  4031  0068CA  6FC5               	movwf	oled_putString@string& (0+255),b
  4032  0068CC  0E7F               	movlw	high STR_24
  4033  0068CE  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  4034  0068D0  0E02               	movlw	2
  4035  0068D2  6FC7               	movwf	oled_putString@station_dot& (0+255),b
  4036  0068D4  0E01               	movlw	1
  4037  0068D6  6FC8               	movwf	oled_putString@start_page& (0+255),b
  4038  0068D8  EC42  F027         	call	_oled_putString	;wreg free
  4039                           
  4040                           ;MOTEapp.c: 267: oled_putString("ReRun PwrTst<S2>",0,3);
  4041  0068DC  0EEC               	movlw	low STR_25
  4042  0068DE  0100               	movlb	0	; () banked
  4043  0068E0  6FC5               	movwf	oled_putString@string& (0+255),b
  4044  0068E2  0E7C               	movlw	high STR_25
  4045  0068E4  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  4046  0068E6  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  4047  0068E8  0E03               	movlw	3
  4048  0068EA  6FC8               	movwf	oled_putString@start_page& (0+255),b
  4049  0068EC  EC42  F027         	call	_oled_putString	;wreg free
  4050                           
  4051                           ;MOTEapp.c: 268: activeState = moteStartup;
  4052  0068F0  0100               	movlb	0	; () banked
  4053  0068F2  6B94               	clrf	_activeState& (0+255),b
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;MOTEapp.c: 269: moteState = MOTE_JOINING;
  4057  0068F4  0E02               	movlw	2
  4058  0068F6  D028               	goto	L1
  4059  0068F8                     l10552:
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;MOTEapp.c: 272: if ( moteJoiningProcess(readMessage, s2Button) )
  4063  0068F8  C0F4  F0DD         	movff	moteHandler@s2Button,moteJoiningProcess@switchEvent
  4064  0068FC  51F8               	movf	moteHandler@readMessage& (0+255),w,b
  4065  0068FE  EC8B  F037         	call	_moteJoiningProcess
  4066  006902  0900               	iorlw	0
  4067  006904  E036               	bz	l10572
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;MOTEapp.c: 273: {
  4071                           ;MOTEapp.c: 274: oled_clear();
  4072  006906  EC1F  F022         	call	_oled_clear	;wreg free
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;MOTEapp.c: 275: oled_putString("Mobile Mote -App",0,0);
  4076  00690A  0E41               	movlw	low STR_26
  4077  00690C  6FC5               	movwf	oled_putString@string& (0+255),b
  4078  00690E  0E7D               	movlw	high STR_26
  4079  006910  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  4080  006912  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  4081  006914  6BC8               	clrf	oled_putString@start_page& (0+255),b
  4082  006916  EC42  F027         	call	_oled_putString	;wreg free
  4083                           
  4084                           ;MOTEapp.c: 276: oled_putString("Navigate  Select", 0,2);
  4085  00691A  0E52               	movlw	low STR_27
  4086  00691C  0100               	movlb	0	; () banked
  4087  00691E  6FC5               	movwf	oled_putString@string& (0+255),b
  4088  006920  0E7D               	movlw	high STR_27
  4089  006922  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  4090  006924  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  4091  006926  0E02               	movlw	2
  4092  006928  6FC8               	movwf	oled_putString@start_page& (0+255),b
  4093  00692A  EC42  F027         	call	_oled_putString	;wreg free
  4094                           
  4095                           ;MOTEapp.c: 277: oled_putString(" (S1)      (S2) ", 0,3);
  4096  00692E  0ECA               	movlw	low STR_28
  4097  006930  0100               	movlb	0	; () banked
  4098  006932  6FC5               	movwf	oled_putString@string& (0+255),b
  4099  006934  0E7C               	movlw	high STR_28
  4100  006936  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  4101  006938  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  4102  00693A  0E03               	movlw	3
  4103  00693C  6FC8               	movwf	oled_putString@start_page& (0+255),b
  4104  00693E  EC42  F027         	call	_oled_putString	;wreg free
  4105                           
  4106                           ;MOTEapp.c: 278: runningState = runningEnter;
  4107  006942  0100               	movlb	0	; () banked
  4108  006944  6B9E               	clrf	_runningState& (0+255),b
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;MOTEapp.c: 279: moteState = MOTE_RUNNING;
  4112  006946  0E03               	movlw	3
  4113  006948                     L1:
  4114  006948  6FFD               	movwf	_moteState& (0+255),b
  4115  00694A  D013               	goto	l10572
  4116  00694C                     l10566:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;MOTEapp.c: 283: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  4120  00694C  C0F4  F0D4         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  4121  006950  C0F8  F0D5         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  4122  006954  C0F0  F0D6         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  4123  006958  51F1               	movf	moteHandler@gotoNextState& (0+255),w,b
  4124  00695A  EC20  F033         	call	_moteRunningProcess
  4125                           
  4126                           ;MOTEapp.c: 284: break;
  4127  00695E  D009               	goto	l10572
  4128  006960                     l10570:
  4129                           
  4130                           ; BSR set to: 0
  4131  006960  51FD               	movf	_moteState& (0+255),w,b
  4132                           
  4133                           ; Switch size 1, requested type "speed"
  4134                           ; Number of cases is 4, Range of values is 1 to 4
  4135                           ; switch strategies available:
  4136                           ; Name         Instructions Cycles
  4137                           ; simple_byte           13     7 (average)
  4138                           ;	Chosen strategy is simple_byte
  4139  006962  0A01               	xorlw	1	; case 1
  4140  006964  E0A5               	bz	l10540
  4141  006966  0A03               	xorlw	3	; case 2
  4142  006968  E0C7               	bz	l10552
  4143  00696A  0A01               	xorlw	1	; case 3
  4144  00696C  E0EF               	bz	l10566
  4145  00696E  0A07               	xorlw	7	; case 4
  4146  006970  E19E               	bnz	l350
  4147  006972                     l10572:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;MOTEapp.c: 289: return moteState;
  4151  006972  51FD               	movf	_moteState& (0+255),w,b
  4152                           
  4153                           ; BSR set to: 0
  4154  006974  0012               	return		;funcret
  4155  006976                     __end_of_moteHandler:
  4156                           	opt stack 0
  4157                           tblptru	equ	0xFF8
  4158                           tblptrh	equ	0xFF7
  4159                           tblptrl	equ	0xFF6
  4160                           tablat	equ	0xFF5
  4161                           intcon	equ	0xFF2
  4162                           postinc0	equ	0xFEE
  4163                           wreg	equ	0xFE8
  4164                           postdec1	equ	0xFE5
  4165                           fsr1l	equ	0xFE1
  4166                           status	equ	0xFD8
  4167                           
  4168 ;; *************** function _service_pushbutton *****************
  4169 ;; Defined at:
  4170 ;;		line 14 in file "../Includes/Drivers/buttons.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  bs              1    0[BANK0 ] enum E6178
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      enum E6327
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0
  4179 ;; Tracked objects:
  4180 ;;		On entry : F/0
  4181 ;;		On exit  : F/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4184 ;;      Params:         0       0       0       0       0       0       0       0       0
  4185 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4187 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4188 ;;Total ram usage:        1 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:   11
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_moteHandler
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text2
  4199  004AC4                     __ptext2:
  4200                           	opt stack 0
  4201  004AC4                     _service_pushbutton:
  4202                           	opt stack 18
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;buttons.c: 20: if ((PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;incstack = 0
  4209  004AC4  A082               	btfss	3970,0,c	;volatile
  4210  004AC6  D002               	goto	l9706
  4211                           
  4212                           ; BSR set to: 0
  4213  004AC8  B282               	btfsc	3970,1,c	;volatile
  4214  004ACA  D014               	goto	l9714
  4215  004ACC                     l9706:
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;buttons.c: 21: {
  4219                           ;buttons.c: 22: ++PB_Timer;
  4220  004ACC  2B66               	incf	service_pushbutton@PB_Timer& (0+255),f,b
  4221  004ACE  0E00               	movlw	0
  4222  004AD0  2367               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
  4223  004AD2  2368               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
  4224  004AD4  2369               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
  4225                           
  4226                           ;buttons.c: 26: if (PB_Timer == 55)
  4227  004AD6  0E37               	movlw	55
  4228  004AD8  1966               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
  4229  004ADA  1167               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
  4230  004ADC  1168               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
  4231  004ADE  1169               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
  4232  004AE0  E107               	bnz	l786
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;buttons.c: 27: {
  4236                           ;buttons.c: 28: Release_Timer = 0;
  4237  004AE2  6BA2               	clrf	service_pushbutton@Release_Timer& (0+255),b
  4238                           
  4239                           ;buttons.c: 30: if (PORTCbits.RC0 == 0)
  4240  004AE4  B082               	btfsc	3970,0,c	;volatile
  4241  004AE6  D002               	goto	l9712
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;buttons.c: 31: {
  4245                           ;buttons.c: 32: bs = ShortPress1;
  4246  004AE8  0E01               	movlw	1
  4247  004AEA  D00F               	goto	L2
  4248  004AEC                     l9712:
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;buttons.c: 34: else
  4252                           ;buttons.c: 35: {
  4253                           ;buttons.c: 36: bs = ShortPress2;
  4254  004AEC  0E02               	movlw	2
  4255  004AEE  D00D               	goto	L2
  4256  004AF0                     l786:
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;buttons.c: 39: else
  4260                           ;buttons.c: 40: {
  4261                           ;buttons.c: 41: bs = NoButton;
  4262  004AF0  6BB8               	clrf	service_pushbutton@bs& (0+255),b
  4263  004AF2  D00C               	goto	l9722
  4264  004AF4                     l9714:
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;buttons.c: 44: else
  4268                           ;buttons.c: 45: {
  4269                           ;buttons.c: 46: if (Release_Timer == 20)
  4270  004AF4  0E14               	movlw	20
  4271  004AF6  19A2               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
  4272  004AF8  E106               	bnz	l9718
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;buttons.c: 47: {
  4276                           ;buttons.c: 48: PB_Timer = 0;
  4277  004AFA  6B66               	clrf	service_pushbutton@PB_Timer& (0+255),b
  4278  004AFC  6B67               	clrf	(service_pushbutton@PB_Timer+1)& (0+255),b
  4279  004AFE  6B68               	clrf	(service_pushbutton@PB_Timer+2)& (0+255),b
  4280  004B00  6B69               	clrf	(service_pushbutton@PB_Timer+3)& (0+255),b
  4281                           
  4282                           ;buttons.c: 49: Release_Timer = 0;
  4283  004B02  6BA2               	clrf	service_pushbutton@Release_Timer& (0+255),b
  4284                           
  4285                           ;buttons.c: 50: }
  4286  004B04  D001               	goto	l9720
  4287  004B06                     l9718:
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;buttons.c: 51: else
  4291                           ;buttons.c: 52: {
  4292                           ;buttons.c: 53: Release_Timer++;
  4293  004B06  2BA2               	incf	service_pushbutton@Release_Timer& (0+255),f,b
  4294  004B08                     l9720:
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;buttons.c: 54: }
  4298                           ;buttons.c: 55: bs = Released;
  4299  004B08  0E03               	movlw	3
  4300  004B0A                     L2:
  4301  004B0A  6FB8               	movwf	service_pushbutton@bs& (0+255),b
  4302  004B0C                     l9722:
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;buttons.c: 56: }
  4306                           ;buttons.c: 58: return bs;
  4307  004B0C  51B8               	movf	service_pushbutton@bs& (0+255),w,b
  4308                           
  4309                           ; BSR set to: 0
  4310  004B0E  0012               	return		;funcret
  4311  004B10                     __end_of_service_pushbutton:
  4312                           	opt stack 0
  4313                           tblptru	equ	0xFF8
  4314                           tblptrh	equ	0xFF7
  4315                           tblptrl	equ	0xFF6
  4316                           tablat	equ	0xFF5
  4317                           intcon	equ	0xFF2
  4318                           postinc0	equ	0xFEE
  4319                           wreg	equ	0xFE8
  4320                           postdec1	equ	0xFE5
  4321                           fsr1l	equ	0xFE1
  4322                           status	equ	0xFD8
  4323                           
  4324 ;; *************** function _moteRunningProcess *****************
  4325 ;; Defined at:
  4326 ;;		line 721 in file "../Includes/Board/MOTEapp.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  changeStates    1    wreg     unsigned char 
  4329 ;;  selectButton    1   28[BANK0 ] unsigned char 
  4330 ;;  messageReady    1   29[BANK0 ] unsigned char 
  4331 ;;  sleepEvent      1   30[BANK0 ] unsigned char 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  changeStates    1    0[COMRAM] unsigned char 
  4334 ;;  i               1   36[BANK0 ] unsigned char 
  4335 ;;  i               1   35[BANK0 ] unsigned char 
  4336 ;;  Traw            2   33[BANK0 ] unsigned int 
  4337 ;;  readByte        1    0        unsigned char 
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  1    wreg      enum E6577
  4340 ;; Registers used:
  4341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4342 ;; Tracked objects:
  4343 ;;		On entry : F/0
  4344 ;;		On exit  : F/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4347 ;;      Params:         0       3       0       0       0       0       0       0       0
  4348 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4349 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4350 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4351 ;;Total ram usage:        9 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:   19
  4354 ;; This function calls:
  4355 ;;		_ADC_GetConversion
  4356 ;;		_ADC_TempConversion
  4357 ;;		_TMR2_ReadTimer
  4358 ;;		_moteApp_GoToSleep
  4359 ;;		_moteApp_add16bToDataBuffer
  4360 ;;		_moteApp_add8bToDataBuffer
  4361 ;;		_moteApp_clearBuffers
  4362 ;;		_moteApp_delayms
  4363 ;;		_oled_clear
  4364 ;;		_oled_putString
  4365 ;;		_oled_putUint16
  4366 ;;		_oled_putUint8
  4367 ;;		_sendDataCommand
  4368 ;; This function is called by:
  4369 ;;		_moteHandler
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text3
  4374  006640                     __ptext3:
  4375                           	opt stack 0
  4376  006640                     _moteRunningProcess:
  4377                           	opt stack 10
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;MOTEapp.c: 725: if ((sleepEvent) && (periodicState))
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;incstack = 0
  4384  006640  51D6               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  4385  006642  E101 D0BF          	bz	l10196
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;MOTEapp.c: 726: {
  4389                           ;MOTEapp.c: 727: if (sleepTicker >= 33)
  4390  006646  0E20               	movlw	32
  4391  006648  65A0               	cpfsgt	_sleepTicker& (0+255),b
  4392  00664A  D0B9               	goto	l10190
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;MOTEapp.c: 728: {
  4396                           ;MOTEapp.c: 730: uint16_t Traw = 0;
  4397  00664C  6BD9               	clrf	moteRunningProcess@Traw& (0+255),b
  4398  00664E  6BDA               	clrf	(moteRunningProcess@Traw+1)& (0+255),b
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;MOTEapp.c: 731: moteApp_delayms(10);
  4402  006650  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4403  006652  0E0A               	movlw	10
  4404  006654  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  4405  006656  EC14  F023         	call	_moteApp_delayms	;wreg free
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;MOTEapp.c: 732: for(uint8_t i = 32; i>0; i--)
  4409  00665A  0E20               	movlw	32
  4410  00665C  6FDB               	movwf	moteRunningProcess@i& (0+255),b
  4411  00665E                     l10120:
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;MOTEapp.c: 733: {
  4415                           ;MOTEapp.c: 734: light = (light + ADC_GetConversion(Light_channel)) / 2;
  4416  00665E  0E03               	movlw	3
  4417  006660  EC57  F024         	call	_ADC_GetConversion
  4418  006664  517D               	movf	_light& (0+255),w,b
  4419  006666  27B8               	addwf	?_ADC_GetConversion& (0+255),f,b
  4420  006668  517E               	movf	(_light+1)& (0+255),w,b
  4421  00666A  23B9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4422  00666C  90D8               	bcf	status,0,c
  4423  00666E  31B9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4424  006670  6FD7               	movwf	??_moteRunningProcess& (0+255),b
  4425  006672  31B8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4426  006674  6F7D               	movwf	_light& (0+255),b
  4427  006676  C0D7  F07E         	movff	??_moteRunningProcess,_light+1
  4428                           
  4429                           ; BSR set to: 0
  4430  00667A  07DB               	decf	moteRunningProcess@i& (0+255),f,b
  4431                           
  4432                           ; BSR set to: 0
  4433  00667C  51DB               	movf	moteRunningProcess@i& (0+255),w,b
  4434  00667E  E1EF               	bnz	l10120
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;MOTEapp.c: 735: }
  4438                           ;MOTEapp.c: 736: moteApp_delayms(10);
  4439  006680  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4440  006682  0E0A               	movlw	10
  4441  006684  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  4442  006686  EC14  F023         	call	_moteApp_delayms	;wreg free
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;MOTEapp.c: 737: for(uint8_t i = 32; i>0; i--)
  4446  00668A  0E20               	movlw	32
  4447  00668C  6FDC               	movwf	moteRunningProcess@i_1396& (0+255),b
  4448  00668E                     l10134:
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;MOTEapp.c: 738: {
  4452                           ;MOTEapp.c: 739: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  4453  00668E  0E02               	movlw	2
  4454  006690  EC57  F024         	call	_ADC_GetConversion
  4455  006694  51D9               	movf	moteRunningProcess@Traw& (0+255),w,b
  4456  006696  27B8               	addwf	?_ADC_GetConversion& (0+255),f,b
  4457  006698  51DA               	movf	(moteRunningProcess@Traw+1)& (0+255),w,b
  4458  00669A  23B9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4459  00669C  90D8               	bcf	status,0,c
  4460  00669E  31B9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4461  0066A0  6FD7               	movwf	??_moteRunningProcess& (0+255),b
  4462  0066A2  31B8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4463  0066A4  6FD9               	movwf	moteRunningProcess@Traw& (0+255),b
  4464  0066A6  C0D7  F0DA         	movff	??_moteRunningProcess,moteRunningProcess@Traw+1
  4465                           
  4466                           ; BSR set to: 0
  4467  0066AA  07DC               	decf	moteRunningProcess@i_1396& (0+255),f,b
  4468                           
  4469                           ; BSR set to: 0
  4470  0066AC  51DC               	movf	moteRunningProcess@i_1396& (0+255),w,b
  4471  0066AE  E1EF               	bnz	l10134
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;MOTEapp.c: 740: }
  4475                           ;MOTEapp.c: 741: temperature = ADC_TempConversion(Traw);
  4476  0066B0  51D9               	movf	moteRunningProcess@Traw& (0+255),w,b
  4477  0066B2  ECA4  F022         	call	_ADC_TempConversion
  4478  0066B6  6F83               	movwf	_temperature& (0+255),b
  4479  0066B8  6B84               	clrf	(_temperature+1)& (0+255),b
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;MOTEapp.c: 743: sleepTicker = 0;
  4483  0066BA  6BA0               	clrf	_sleepTicker& (0+255),b
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;MOTEapp.c: 744: oled_clear();
  4487  0066BC  EC1F  F022         	call	_oled_clear	;wreg free
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;MOTEapp.c: 745: oled_putString("Issue Perodic TX",0,0);
  4491  0066C0  0EFD               	movlw	low STR_85
  4492  0066C2  6FC5               	movwf	oled_putString@string& (0+255),b
  4493  0066C4  0E7C               	movlw	high STR_85
  4494  0066C6  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  4495  0066C8  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  4496  0066CA  6BC8               	clrf	oled_putString@start_page& (0+255),b
  4497  0066CC  EC42  F027         	call	_oled_putString	;wreg free
  4498                           
  4499                           ;MOTEapp.c: 746: oled_putString("On Port #: ",0,1);
  4500  0066D0  0EA1               	movlw	low STR_86
  4501  0066D2  0100               	movlb	0	; () banked
  4502  0066D4  6FC5               	movwf	oled_putString@string& (0+255),b
  4503  0066D6  0E7E               	movlw	high STR_86
  4504  0066D8  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  4505  0066DA  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  4506  0066DC  0E01               	movlw	1
  4507  0066DE  6FC8               	movwf	oled_putString@start_page& (0+255),b
  4508  0066E0  EC42  F027         	call	_oled_putString	;wreg free
  4509                           
  4510                           ;MOTEapp.c: 747: oled_putUint8(randomPortNum,10,1);
  4511  0066E4  0E0A               	movlw	10
  4512  0066E6  0100               	movlb	0	; () banked
  4513  0066E8  6FCA               	movwf	oled_putUint8@station_dot& (0+255),b
  4514  0066EA  0E01               	movlw	1
  4515  0066EC  6FCB               	movwf	oled_putUint8@start_page& (0+255),b
  4516  0066EE  519D               	movf	_randomPortNum& (0+255),w,b
  4517  0066F0  EC55  F026         	call	_oled_putUint8
  4518                           
  4519                           ;MOTEapp.c: 748: oled_putString("L:       T: ",0,2);
  4520  0066F4  0EDF               	movlw	low STR_87
  4521  0066F6  0100               	movlb	0	; () banked
  4522  0066F8  6FC5               	movwf	oled_putString@string& (0+255),b
  4523  0066FA  0E7D               	movlw	high STR_87
  4524  0066FC  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  4525  0066FE  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  4526  006700  0E02               	movlw	2
  4527  006702  6FC8               	movwf	oled_putString@start_page& (0+255),b
  4528  006704  EC42  F027         	call	_oled_putString	;wreg free
  4529                           
  4530                           ;MOTEapp.c: 749: oled_putUint16(light,3,2);
  4531  006708  C07D  F0CA         	movff	_light,oled_putUint16@number
  4532  00670C  C07E  F0CB         	movff	_light+1,oled_putUint16@number+1
  4533  006710  0E03               	movlw	3
  4534  006712  0100               	movlb	0	; () banked
  4535  006714  6FCC               	movwf	oled_putUint16@station_dot& (0+255),b
  4536  006716  0E02               	movlw	2
  4537  006718  6FCD               	movwf	oled_putUint16@start_page& (0+255),b
  4538  00671A  EC11  F030         	call	_oled_putUint16	;wreg free
  4539                           
  4540                           ;MOTEapp.c: 750: oled_putUint8(temperature,12,2);
  4541  00671E  0E0C               	movlw	12
  4542  006720  0100               	movlb	0	; () banked
  4543  006722  6FCA               	movwf	oled_putUint8@station_dot& (0+255),b
  4544  006724  0E02               	movlw	2
  4545  006726  6FCB               	movwf	oled_putUint8@start_page& (0+255),b
  4546  006728  5183               	movf	_temperature& (0+255),w,b
  4547  00672A  EC55  F026         	call	_oled_putUint8
  4548                           
  4549                           ;MOTEapp.c: 751: oled_putString("(NAV)    (SEL) ",0,3);
  4550  00672E  0E63               	movlw	low STR_88
  4551  006730  0100               	movlb	0	; () banked
  4552  006732  6FC5               	movwf	oled_putString@string& (0+255),b
  4553  006734  0E7D               	movlw	high STR_88
  4554  006736  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  4555  006738  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  4556  00673A  0E03               	movlw	3
  4557  00673C  6FC8               	movwf	oled_putString@start_page& (0+255),b
  4558  00673E  EC42  F027         	call	_oled_putString	;wreg free
  4559                           
  4560                           ;MOTEapp.c: 753: moteApp_clearBuffers();
  4561  006742  ECCF  F024         	call	_moteApp_clearBuffers	;wreg free
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;MOTEapp.c: 754: randomPortNum = TMR2_ReadTimer();
  4565  006746  EC96  F021         	call	_TMR2_ReadTimer	;wreg free
  4566  00674A  6F9D               	movwf	_randomPortNum& (0+255),b
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;MOTEapp.c: 756: if (!randomPortNum)
  4570  00674C  519D               	movf	_randomPortNum& (0+255),w,b
  4571  00674E  E103               	bnz	l10168
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;MOTEapp.c: 757: randomPortNum = 5;
  4575  006750  0E05               	movlw	5
  4576  006752  6F9D               	movwf	_randomPortNum& (0+255),b
  4577  006754  D005               	goto	l10172
  4578  006756                     l10168:
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;MOTEapp.c: 758: else if (randomPortNum > 223)
  4582  006756  0EDF               	movlw	223
  4583  006758  659D               	cpfsgt	_randomPortNum& (0+255),b
  4584  00675A  D002               	goto	l10172
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;MOTEapp.c: 759: randomPortNum = randomPortNum - 50;
  4588  00675C  0ECE               	movlw	206
  4589  00675E  279D               	addwf	_randomPortNum& (0+255),f,b
  4590  006760                     l10172:
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;MOTEapp.c: 761: moteApp_add8bToDataBuffer(randomPortNum, 0);
  4594  006760  6BBC               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  4595  006762  519D               	movf	_randomPortNum& (0+255),w,b
  4596  006764  ECE0  F026         	call	_moteApp_add8bToDataBuffer
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;MOTEapp.c: 762: dataBuffer[3] = 0x20;
  4600  006768  0E20               	movlw	32
  4601  00676A  6FA6               	movwf	(_dataBuffer+3)& (0+255),b
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;MOTEapp.c: 763: moteApp_add16bToDataBuffer(light, 4);
  4605  00676C  C07D  F0C4         	movff	_light,moteApp_add16bToDataBuffer@number
  4606  006770  C07E  F0C5         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  4607  006774  0E04               	movlw	4
  4608  006776  6FC6               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  4609  006778  EC0B  F032         	call	_moteApp_add16bToDataBuffer	;wreg free
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;MOTEapp.c: 764: moteApp_add8bToDataBuffer(temperature, 9);
  4613  00677C  0E09               	movlw	9
  4614  00677E  6FBC               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  4615  006780  5183               	movf	_temperature& (0+255),w,b
  4616  006782  ECE0  F026         	call	_moteApp_add8bToDataBuffer
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;MOTEapp.c: 766: sleepTxOccurances = 0;
  4620  006786  F000               	nop	
  4621                           
  4622                           ;MOTEapp.c: 767: oled_putString("C",15,1);
  4623  006788  0E91               	movlw	low (STR_38+47)
  4624  00678A  0100               	movlb	0	; () banked
  4625  00678C  6FC5               	movwf	oled_putString@string& (0+255),b
  4626  00678E  0E7B               	movlw	high (STR_38+47)
  4627  006790  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  4628  006792  0E0F               	movlw	15
  4629  006794  6FC7               	movwf	oled_putString@station_dot& (0+255),b
  4630  006796  0E01               	movlw	1
  4631  006798  6FC8               	movwf	oled_putString@start_page& (0+255),b
  4632  00679A  EC42  F027         	call	_oled_putString	;wreg free
  4633                           
  4634                           ;MOTEapp.c: 768: sendDataCommand("radio tx ", dataBuffer, 12);
  4635  00679E  0E00               	movlw	low STR_90
  4636  0067A0  0100               	movlb	0	; () banked
  4637  0067A2  6FB9               	movwf	sendDataCommand@string& (0+255),b
  4638  0067A4  0E7F               	movlw	high STR_90
  4639  0067A6  6FBA               	movwf	(sendDataCommand@string+1)& (0+255),b
  4640  0067A8  0EA3               	movlw	low _dataBuffer
  4641  0067AA  6FBB               	movwf	sendDataCommand@appData& (0+255),b
  4642  0067AC  0E0C               	movlw	12
  4643  0067AE  6FBC               	movwf	sendDataCommand@dataLength& (0+255),b
  4644  0067B0  EC2A  F02A         	call	_sendDataCommand	;wreg free
  4645                           
  4646                           ;MOTEapp.c: 769: secTicker = 10 - (10 / 3);
  4647  0067B4  0E07               	movlw	7
  4648  0067B6  0100               	movlb	0	; () banked
  4649  0067B8  6F9F               	movwf	_secTicker& (0+255),b
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;MOTEapp.c: 770: runningState = runningUplinkTransmit;
  4653  0067BA  0E08               	movlw	8
  4654  0067BC  D002               	goto	L35
  4655  0067BE                     l10190:
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;MOTEapp.c: 772: else
  4659                           ;MOTEapp.c: 773: {
  4660                           ;MOTEapp.c: 774: sleepTicker++;
  4661  0067BE  2BA0               	incf	_sleepTicker& (0+255),f,b
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;MOTEapp.c: 775: runningState = runningSleep;
  4665  0067C0  0E0E               	movlw	14
  4666  0067C2                     L35:
  4667  0067C2  6F9E               	movwf	_runningState& (0+255),b
  4668  0067C4                     l10196:
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;MOTEapp.c: 777: }
  4672                           ;MOTEapp.c: 778: }
  4673                           ;MOTEapp.c: 780: moteApp_GoToSleep();
  4674  0067C4  ECA9  F027         	call	_moteApp_GoToSleep	;wreg free
  4675  0067C8                     l500:
  4676                           
  4677                           ; BSR set to: 0
  4678  0067C8  D7FF               	goto	l500
  4679  0067CA                     __end_of_moteRunningProcess:
  4680                           	opt stack 0
  4681                           tblptru	equ	0xFF8
  4682                           tblptrh	equ	0xFF7
  4683                           tblptrl	equ	0xFF6
  4684                           tablat	equ	0xFF5
  4685                           intcon	equ	0xFF2
  4686                           postinc0	equ	0xFEE
  4687                           wreg	equ	0xFE8
  4688                           postdec1	equ	0xFE5
  4689                           fsr1l	equ	0xFE1
  4690                           status	equ	0xFD8
  4691                           
  4692 ;; *************** function _sendDataCommand *****************
  4693 ;; Defined at:
  4694 ;;		line 950 in file "../Includes/Board/MOTEapp.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  4697 ;;		 -> STR_90(10), 
  4698 ;;  appData         1    3[BANK0 ] PTR unsigned char 
  4699 ;;		 -> dataBuffer(12), 
  4700 ;;  dataLength      1    4[BANK0 ] unsigned char 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  byteCount       1    7[BANK0 ] unsigned char 
  4703 ;;  byteCount       1    6[BANK0 ] unsigned char 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : F/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4713 ;;      Params:         0       4       0       0       0       0       0       0       0
  4714 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4715 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4716 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4717 ;;Total ram usage:        7 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:   13
  4720 ;; This function calls:
  4721 ;;		_EUSART_Write
  4722 ;;		_EndLine
  4723 ;;		_hexToStr
  4724 ;; This function is called by:
  4725 ;;		_moteRunningProcess
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text4
  4730  005454                     __ptext4:
  4731                           	opt stack 0
  4732  005454                     _sendDataCommand:
  4733                           	opt stack 15
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;MOTEapp.c: 953: while (*string)
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;incstack = 0
  4740  005454  D00B               	goto	l9430
  4741  005456                     l9426:
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;MOTEapp.c: 954: {
  4745                           ;MOTEapp.c: 955: EUSART_Write(*string++);
  4746  005456  C0B9  FFF6         	movff	sendDataCommand@string,tblptrl
  4747  00545A  C0BA  FFF7         	movff	sendDataCommand@string+1,tblptrh
  4748  00545E                     	if	0	;tblptru may be non-zero
  4749  00545E                     	endif
  4750  00545E                     	if	0	;tblptru may be non-zero
  4751  00545E                     	endif
  4752  00545E  0008               	tblrd		*
  4753  005460  50F5               	movf	tablat,w,c
  4754  005462  ECEB  F023         	call	_EUSART_Write
  4755  005466  0100               	movlb	0	; () banked
  4756  005468  4BB9               	infsnz	sendDataCommand@string& (0+255),f,b
  4757  00546A  2BBA               	incf	(sendDataCommand@string+1)& (0+255),f,b
  4758  00546C                     l9430:
  4759                           
  4760                           ; BSR set to: 0
  4761  00546C  C0B9  FFF6         	movff	sendDataCommand@string,tblptrl
  4762  005470  C0BA  FFF7         	movff	sendDataCommand@string+1,tblptrh
  4763  005474                     	if	0	;tblptru may be non-zero
  4764  005474                     	endif
  4765  005474                     	if	0	;tblptru may be non-zero
  4766  005474                     	endif
  4767  005474  0008               	tblrd		*
  4768  005476  50F5               	movf	tablat,w,c
  4769  005478  E1EE               	bnz	l9426
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;MOTEapp.c: 956: }
  4773                           ;MOTEapp.c: 958: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  4774  00547A  6BBE               	clrf	sendDataCommand@byteCount& (0+255),b
  4775  00547C                     l9436:
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;MOTEapp.c: 959: {
  4779                           ;MOTEapp.c: 960: EUSART_Write(appData[byteCount]);
  4780  00547C  51BB               	movf	sendDataCommand@appData& (0+255),w,b
  4781  00547E  25BE               	addwf	sendDataCommand@byteCount& (0+255),w,b
  4782  005480  6ED9               	movwf	fsr2l,c
  4783  005482  6ADA               	clrf	fsr2h,c
  4784  005484  50DF               	movf	indf2,w,c
  4785  005486  ECEB  F023         	call	_EUSART_Write
  4786  00548A  0100               	movlb	0	; () banked
  4787  00548C  2BBE               	incf	sendDataCommand@byteCount& (0+255),f,b
  4788                           
  4789                           ; BSR set to: 0
  4790  00548E  0E02               	movlw	2
  4791  005490  65BE               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  4792  005492  D7F4               	goto	l9436
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;MOTEapp.c: 961: }
  4796                           ;MOTEapp.c: 963: EUSART_Write(appData[3]);
  4797  005494  51BB               	movf	sendDataCommand@appData& (0+255),w,b
  4798  005496  6ED9               	movwf	fsr2l,c
  4799  005498  6ADA               	clrf	fsr2h,c
  4800  00549A  0E03               	movlw	3
  4801  00549C  26D9               	addwf	fsr2l,f,c
  4802  00549E  50DF               	movf	indf2,w,c
  4803  0054A0  ECEB  F023         	call	_EUSART_Write
  4804                           
  4805                           ;MOTEapp.c: 965: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  4806  0054A4  0E04               	movlw	4
  4807  0054A6  0100               	movlb	0	; () banked
  4808  0054A8  6FBF               	movwf	sendDataCommand@byteCount_1454& (0+255),b
  4809  0054AA  D019               	goto	l9450
  4810  0054AC                     l9446:
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;MOTEapp.c: 966: {
  4814                           ;MOTEapp.c: 967: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  4815  0054AC  51BB               	movf	sendDataCommand@appData& (0+255),w,b
  4816  0054AE  25BF               	addwf	sendDataCommand@byteCount_1454& (0+255),w,b
  4817  0054B0  6ED9               	movwf	fsr2l,c
  4818  0054B2  6ADA               	clrf	fsr2h,c
  4819  0054B4  50DF               	movf	indf2,w,c
  4820  0054B6  6FBD               	movwf	??_sendDataCommand& (0+255),b
  4821  0054B8  39BD               	swapf	??_sendDataCommand& (0+255),w,b
  4822  0054BA  0B0F               	andlw	15
  4823  0054BC  ECD9  F022         	call	_hexToStr
  4824  0054C0  ECEB  F023         	call	_EUSART_Write
  4825                           
  4826                           ;MOTEapp.c: 968: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  4827  0054C4  0100               	movlb	0	; () banked
  4828  0054C6  51BB               	movf	sendDataCommand@appData& (0+255),w,b
  4829  0054C8  25BF               	addwf	sendDataCommand@byteCount_1454& (0+255),w,b
  4830  0054CA  6ED9               	movwf	fsr2l,c
  4831  0054CC  6ADA               	clrf	fsr2h,c
  4832  0054CE  50DF               	movf	indf2,w,c
  4833  0054D0  0B0F               	andlw	15
  4834  0054D2  ECD9  F022         	call	_hexToStr
  4835  0054D6  ECEB  F023         	call	_EUSART_Write
  4836  0054DA  0100               	movlb	0	; () banked
  4837  0054DC  2BBF               	incf	sendDataCommand@byteCount_1454& (0+255),f,b
  4838  0054DE                     l9450:
  4839                           
  4840                           ; BSR set to: 0
  4841  0054DE  51BC               	movf	sendDataCommand@dataLength& (0+255),w,b
  4842  0054E0  5DBF               	subwf	sendDataCommand@byteCount_1454& (0+255),w,b
  4843  0054E2  E3E4               	bnc	l9446
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;MOTEapp.c: 969: }
  4847                           ;MOTEapp.c: 970: EndLine();
  4848  0054E4  EFAC  F021         	goto	_EndLine	;wreg free
  4849  0054E8                     __end_of_sendDataCommand:
  4850                           	opt stack 0
  4851                           tblptru	equ	0xFF8
  4852                           tblptrh	equ	0xFF7
  4853                           tblptrl	equ	0xFF6
  4854                           tablat	equ	0xFF5
  4855                           intcon	equ	0xFF2
  4856                           postinc0	equ	0xFEE
  4857                           wreg	equ	0xFE8
  4858                           postdec1	equ	0xFE5
  4859                           fsr1l	equ	0xFE1
  4860                           indf2	equ	0xFDF
  4861                           fsr2h	equ	0xFDA
  4862                           fsr2l	equ	0xFD9
  4863                           status	equ	0xFD8
  4864                           
  4865 ;; *************** function _hexToStr *****************
  4866 ;; Defined at:
  4867 ;;		line 982 in file "../Includes/Board/MOTEapp.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  character       1    wreg     unsigned char 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  character       1    0[BANK0 ] unsigned char 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  1    wreg      unsigned char 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0
  4876 ;; Tracked objects:
  4877 ;;		On entry : F/0
  4878 ;;		On exit  : F/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4881 ;;      Params:         0       0       0       0       0       0       0       0       0
  4882 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4884 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4885 ;;Total ram usage:        1 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:   11
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_sendDataCommand
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text5
  4896  0045B2                     __ptext5:
  4897                           	opt stack 0
  4898  0045B2                     _hexToStr:
  4899                           	opt stack 16
  4900                           
  4901                           ;incstack = 0
  4902                           ;hexToStr@character stored from wreg
  4903  0045B2  6FB8               	movwf	hexToStr@character& (0+255),b
  4904                           
  4905                           ;MOTEapp.c: 985: character = character & 0x0F;
  4906  0045B4  0E0F               	movlw	15
  4907  0045B6  0100               	movlb	0	; () banked
  4908  0045B8  17B8               	andwf	hexToStr@character& (0+255),f,b
  4909                           
  4910                           ;MOTEapp.c: 987: if (character < 0x0A)
  4911  0045BA  0E0A               	movlw	10
  4912  0045BC  61B8               	cpfslt	hexToStr@character& (0+255),b
  4913  0045BE  D003               	goto	l8912
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;MOTEapp.c: 988: {
  4917                           ;MOTEapp.c: 989: return character + '0';
  4918  0045C0  51B8               	movf	hexToStr@character& (0+255),w,b
  4919  0045C2  0F30               	addlw	48
  4920  0045C4  0012               	return	
  4921  0045C6                     l8912:
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;MOTEapp.c: 991: else if ( (character >= 0x0A) && (character <= 0x0F) )
  4925  0045C6  0E09               	movlw	9
  4926  0045C8  65B8               	cpfsgt	hexToStr@character& (0+255),b
  4927  0045CA  0C00               	retlw	0
  4928                           
  4929                           ; BSR set to: 0
  4930  0045CC  0E10               	movlw	16
  4931  0045CE  61B8               	cpfslt	hexToStr@character& (0+255),b
  4932  0045D0  0C00               	retlw	0
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;MOTEapp.c: 992: {
  4936                           ;MOTEapp.c: 993: return character + '0' + 7;
  4937  0045D2  51B8               	movf	hexToStr@character& (0+255),w,b
  4938  0045D4  0F37               	addlw	55
  4939  0045D6  0012               	return	
  4940  0045D8                     __end_of_hexToStr:
  4941                           	opt stack 0
  4942                           tblptru	equ	0xFF8
  4943                           tblptrh	equ	0xFF7
  4944                           tblptrl	equ	0xFF6
  4945                           tablat	equ	0xFF5
  4946                           intcon	equ	0xFF2
  4947                           postinc0	equ	0xFEE
  4948                           wreg	equ	0xFE8
  4949                           postdec1	equ	0xFE5
  4950                           fsr1l	equ	0xFE1
  4951                           indf2	equ	0xFDF
  4952                           fsr2h	equ	0xFDA
  4953                           fsr2l	equ	0xFD9
  4954                           status	equ	0xFD8
  4955                           
  4956 ;; *************** function _oled_putUint8 *****************
  4957 ;; Defined at:
  4958 ;;		line 226 in file "../Includes/Drivers/SSD1306oLED.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;  number          1    wreg     unsigned char 
  4961 ;;  station_dot     1   18[BANK0 ] unsigned char 
  4962 ;;  start_page      1   19[BANK0 ] unsigned char 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  number          1   20[BANK0 ] unsigned char 
  4965 ;;  numData         6   21[BANK0 ] struct .
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      void 
  4968 ;; Registers used:
  4969 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : F/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4975 ;;      Params:         0       2       0       0       0       0       0       0       0
  4976 ;;      Locals:         0       7       0       0       0       0       0       0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4978 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4979 ;;Total ram usage:        9 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; Hardware stack levels required when called:   16
  4982 ;; This function calls:
  4983 ;;		___lbdiv
  4984 ;;		___lbmod
  4985 ;;		_oled_putString
  4986 ;; This function is called by:
  4987 ;;		_moteRunningProcess
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           	psect	text6
  4992  004CAA                     __ptext6:
  4993                           	opt stack 0
  4994  004CAA                     _oled_putUint8:
  4995                           	opt stack 12
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;incstack = 0
  4999                           ;oled_putUint8@number stored from wreg
  5000  004CAA  6FCC               	movwf	oled_putUint8@number& (0+255),b
  5001                           
  5002                           ;SSD1306oLED.c: 228: display_data_t numData;
  5003                           ;SSD1306oLED.c: 229: numData.d2 = '0' + (number % 10);
  5004  004CAC  0E0A               	movlw	10
  5005  004CAE  0100               	movlb	0	; () banked
  5006  004CB0  6FB8               	movwf	___lbmod@divisor& (0+255),b
  5007  004CB2  51CC               	movf	oled_putUint8@number& (0+255),w,b
  5008  004CB4  EC28  F023         	call	___lbmod
  5009  004CB8  0F30               	addlw	48
  5010  004CBA  6FCF               	movwf	(oled_putUint8@numData+2)& (0+255),b
  5011                           
  5012                           ;SSD1306oLED.c: 230: number /= 10;
  5013  004CBC  0E0A               	movlw	10
  5014  004CBE  6FB8               	movwf	___lbdiv@divisor& (0+255),b
  5015  004CC0  51CC               	movf	oled_putUint8@number& (0+255),w,b
  5016  004CC2  EC20  F024         	call	___lbdiv
  5017  004CC6  6FCC               	movwf	oled_putUint8@number& (0+255),b
  5018                           
  5019                           ;SSD1306oLED.c: 231: numData.d1 = '0' + (number % 10);
  5020  004CC8  0E0A               	movlw	10
  5021  004CCA  6FB8               	movwf	___lbmod@divisor& (0+255),b
  5022  004CCC  51CC               	movf	oled_putUint8@number& (0+255),w,b
  5023  004CCE  EC28  F023         	call	___lbmod
  5024  004CD2  0F30               	addlw	48
  5025  004CD4  6FCE               	movwf	(oled_putUint8@numData+1)& (0+255),b
  5026                           
  5027                           ;SSD1306oLED.c: 232: number /= 10;
  5028  004CD6  0E0A               	movlw	10
  5029  004CD8  6FB8               	movwf	___lbdiv@divisor& (0+255),b
  5030  004CDA  51CC               	movf	oled_putUint8@number& (0+255),w,b
  5031  004CDC  EC20  F024         	call	___lbdiv
  5032  004CE0  6FCC               	movwf	oled_putUint8@number& (0+255),b
  5033                           
  5034                           ;SSD1306oLED.c: 233: numData.d0 = '0' + (number % 10);
  5035  004CE2  0E0A               	movlw	10
  5036  004CE4  6FB8               	movwf	___lbmod@divisor& (0+255),b
  5037  004CE6  51CC               	movf	oled_putUint8@number& (0+255),w,b
  5038  004CE8  EC28  F023         	call	___lbmod
  5039  004CEC  0F30               	addlw	48
  5040  004CEE  6FCD               	movwf	oled_putUint8@numData& (0+255),b
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;SSD1306oLED.c: 235: numData.b[3]=0;
  5044  004CF0  6BD0               	clrf	(oled_putUint8@numData+3)& (0+255),b
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;SSD1306oLED.c: 237: oled_putString(numData.b,station_dot,start_page);
  5048  004CF2  0ECD               	movlw	low oled_putUint8@numData
  5049  004CF4  6FC5               	movwf	oled_putString@string& (0+255),b
  5050  004CF6  6BC6               	clrf	(oled_putString@string+1)& (0+255),b
  5051  004CF8  C0CA  F0C7         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  5052  004CFC  C0CB  F0C8         	movff	oled_putUint8@start_page,oled_putString@start_page
  5053  004D00  EF42  F027         	goto	_oled_putString	;wreg free
  5054  004D04                     __end_of_oled_putUint8:
  5055                           	opt stack 0
  5056                           tblptru	equ	0xFF8
  5057                           tblptrh	equ	0xFF7
  5058                           tblptrl	equ	0xFF6
  5059                           tablat	equ	0xFF5
  5060                           intcon	equ	0xFF2
  5061                           postinc0	equ	0xFEE
  5062                           wreg	equ	0xFE8
  5063                           postdec1	equ	0xFE5
  5064                           fsr1l	equ	0xFE1
  5065                           indf2	equ	0xFDF
  5066                           fsr2h	equ	0xFDA
  5067                           fsr2l	equ	0xFD9
  5068                           status	equ	0xFD8
  5069                           
  5070 ;; *************** function _moteApp_clearBuffers *****************
  5071 ;; Defined at:
  5072 ;;		line 1092 in file "../Includes/Board/MOTEapp.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;		None
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  counter         1    2[BANK0 ] unsigned char 
  5077 ;;  counter         1    1[BANK0 ] unsigned char 
  5078 ;;  counter         1    0[BANK0 ] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : F/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5088 ;;      Params:         0       0       0       0       0       0       0       0       0
  5089 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5091 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5092 ;;Total ram usage:        3 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:   11
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_moteRunningProcess
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text7
  5103  00499E                     __ptext7:
  5104                           	opt stack 0
  5105  00499E                     _moteApp_clearBuffers:
  5106                           	opt stack 17
  5107                           
  5108                           ;MOTEapp.c: 1094: for (uint8_t counter = 0; counter < 3; counter++)
  5109                           
  5110                           ;incstack = 0
  5111  00499E  0100               	movlb	0	; () banked
  5112  0049A0  6BB8               	clrf	moteApp_clearBuffers@counter& (0+255),b
  5113  0049A2                     l9370:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;MOTEapp.c: 1095: {
  5117                           ;MOTEapp.c: 1096: responsePortNum[counter] = 0;
  5118  0049A2  51B8               	movf	moteApp_clearBuffers@counter& (0+255),w,b
  5119  0049A4  0F76               	addlw	low _responsePortNum
  5120  0049A6  6ED9               	movwf	fsr2l,c
  5121  0049A8  6ADA               	clrf	fsr2h,c
  5122  0049AA  6ADF               	clrf	indf2,c
  5123                           
  5124                           ; BSR set to: 0
  5125  0049AC  2BB8               	incf	moteApp_clearBuffers@counter& (0+255),f,b
  5126                           
  5127                           ; BSR set to: 0
  5128  0049AE  0E02               	movlw	2
  5129  0049B0  65B8               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
  5130  0049B2  D7F7               	goto	l9370
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;MOTEapp.c: 1097: }
  5134                           ;MOTEapp.c: 1098: for (uint8_t counter = 0; counter < 34; counter++)
  5135  0049B4  6BB9               	clrf	moteApp_clearBuffers@counter_1521& (0+255),b
  5136  0049B6                     l9380:
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;MOTEapp.c: 1099: {
  5140                           ;MOTEapp.c: 1100: responseId[counter] = 0;
  5141  0049B6  0E00               	movlw	low _responseId
  5142  0049B8  25B9               	addwf	moteApp_clearBuffers@counter_1521& (0+255),w,b
  5143  0049BA  6ED9               	movwf	fsr2l,c
  5144  0049BC  6ADA               	clrf	fsr2h,c
  5145  0049BE  0E01               	movlw	high _responseId
  5146  0049C0  22DA               	addwfc	fsr2h,f,c
  5147  0049C2  6ADF               	clrf	indf2,c
  5148                           
  5149                           ; BSR set to: 0
  5150  0049C4  2BB9               	incf	moteApp_clearBuffers@counter_1521& (0+255),f,b
  5151                           
  5152                           ; BSR set to: 0
  5153  0049C6  0E21               	movlw	33
  5154  0049C8  65B9               	cpfsgt	moteApp_clearBuffers@counter_1521& (0+255),b
  5155  0049CA  D7F5               	goto	l9380
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;MOTEapp.c: 1101: }
  5159                           ;MOTEapp.c: 1102: for (uint8_t counter = 0; counter < 10; counter++)
  5160  0049CC  6BBA               	clrf	moteApp_clearBuffers@counter_1522& (0+255),b
  5161  0049CE                     l9390:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;MOTEapp.c: 1103: {
  5165                           ;MOTEapp.c: 1104: responseData[counter] = 0;
  5166  0049CE  0E10               	movlw	low _responseData
  5167  0049D0  25BA               	addwf	moteApp_clearBuffers@counter_1522& (0+255),w,b
  5168  0049D2  6ED9               	movwf	fsr2l,c
  5169  0049D4  6ADA               	clrf	fsr2h,c
  5170  0049D6  0E01               	movlw	high _responseData
  5171  0049D8  22DA               	addwfc	fsr2h,f,c
  5172  0049DA  6ADF               	clrf	indf2,c
  5173                           
  5174                           ; BSR set to: 0
  5175  0049DC  2BBA               	incf	moteApp_clearBuffers@counter_1522& (0+255),f,b
  5176                           
  5177                           ; BSR set to: 0
  5178  0049DE  0E09               	movlw	9
  5179  0049E0  65BA               	cpfsgt	moteApp_clearBuffers@counter_1522& (0+255),b
  5180  0049E2  D7F5               	goto	l9390
  5181  0049E4  0C09               	retlw	9
  5182  0049E6                     __end_of_moteApp_clearBuffers:
  5183                           	opt stack 0
  5184                           tblptru	equ	0xFF8
  5185                           tblptrh	equ	0xFF7
  5186                           tblptrl	equ	0xFF6
  5187                           tablat	equ	0xFF5
  5188                           intcon	equ	0xFF2
  5189                           postinc0	equ	0xFEE
  5190                           wreg	equ	0xFE8
  5191                           postdec1	equ	0xFE5
  5192                           fsr1l	equ	0xFE1
  5193                           indf2	equ	0xFDF
  5194                           fsr2h	equ	0xFDA
  5195                           fsr2l	equ	0xFD9
  5196                           status	equ	0xFD8
  5197                           
  5198 ;; *************** function _moteApp_add8bToDataBuffer *****************
  5199 ;; Defined at:
  5200 ;;		line 1108 in file "../Includes/Board/MOTEapp.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  number          1    wreg     unsigned char 
  5203 ;;  bufferLocati    1    4[BANK0 ] unsigned char 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  number          1    5[BANK0 ] unsigned char 
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : F/0
  5212 ;;		On exit  : F/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5215 ;;      Params:         0       1       0       0       0       0       0       0       0
  5216 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5218 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5219 ;;Total ram usage:        2 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:   12
  5222 ;; This function calls:
  5223 ;;		___lbdiv
  5224 ;;		___lbmod
  5225 ;; This function is called by:
  5226 ;;		_moteRunningProcess
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text8
  5231  004DC0                     __ptext8:
  5232                           	opt stack 0
  5233  004DC0                     _moteApp_add8bToDataBuffer:
  5234                           	opt stack 16
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;incstack = 0
  5238                           ;moteApp_add8bToDataBuffer@number stored from wreg
  5239  004DC0  6FBD               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5240                           
  5241                           ;MOTEapp.c: 1110: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  5242  004DC2  0100               	movlb	0	; () banked
  5243  004DC4  51BC               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5244  004DC6  0FA5               	addlw	low (_dataBuffer+2)
  5245  004DC8  6ED9               	movwf	fsr2l,c
  5246  004DCA  6ADA               	clrf	fsr2h,c
  5247  004DCC  0E0A               	movlw	10
  5248  004DCE  6FB8               	movwf	___lbmod@divisor& (0+255),b
  5249  004DD0  51BD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5250  004DD2  EC28  F023         	call	___lbmod
  5251  004DD6  0F30               	addlw	48
  5252  004DD8  6EDF               	movwf	indf2,c
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;MOTEapp.c: 1111: number /= 10;
  5256  004DDA  0E0A               	movlw	10
  5257  004DDC  6FB8               	movwf	___lbdiv@divisor& (0+255),b
  5258  004DDE  51BD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5259  004DE0  EC20  F024         	call	___lbdiv
  5260  004DE4  6FBD               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;MOTEapp.c: 1112: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  5264  004DE6  51BC               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5265  004DE8  0FA4               	addlw	low (_dataBuffer+1)
  5266  004DEA  6ED9               	movwf	fsr2l,c
  5267  004DEC  6ADA               	clrf	fsr2h,c
  5268  004DEE  0E0A               	movlw	10
  5269  004DF0  6FB8               	movwf	___lbmod@divisor& (0+255),b
  5270  004DF2  51BD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5271  004DF4  EC28  F023         	call	___lbmod
  5272  004DF8  0F30               	addlw	48
  5273  004DFA  6EDF               	movwf	indf2,c
  5274                           
  5275                           ;MOTEapp.c: 1113: number /= 10;
  5276  004DFC  0E0A               	movlw	10
  5277  004DFE  6FB8               	movwf	___lbdiv@divisor& (0+255),b
  5278  004E00  51BD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5279  004E02  EC20  F024         	call	___lbdiv
  5280  004E06  6FBD               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;MOTEapp.c: 1114: dataBuffer[bufferLocation] = '0' + (number % 10);
  5284  004E08  51BC               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5285  004E0A  0FA3               	addlw	low _dataBuffer
  5286  004E0C  6ED9               	movwf	fsr2l,c
  5287  004E0E  6ADA               	clrf	fsr2h,c
  5288  004E10  0E0A               	movlw	10
  5289  004E12  6FB8               	movwf	___lbmod@divisor& (0+255),b
  5290  004E14  51BD               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5291  004E16  EC28  F023         	call	___lbmod
  5292  004E1A  0F30               	addlw	48
  5293  004E1C  6EDF               	movwf	indf2,c
  5294                           
  5295                           ; BSR set to: 0
  5296  004E1E  0012               	return		;funcret
  5297  004E20                     __end_of_moteApp_add8bToDataBuffer:
  5298                           	opt stack 0
  5299                           tblptru	equ	0xFF8
  5300                           tblptrh	equ	0xFF7
  5301                           tblptrl	equ	0xFF6
  5302                           tablat	equ	0xFF5
  5303                           intcon	equ	0xFF2
  5304                           postinc0	equ	0xFEE
  5305                           wreg	equ	0xFE8
  5306                           postdec1	equ	0xFE5
  5307                           fsr1l	equ	0xFE1
  5308                           indf2	equ	0xFDF
  5309                           fsr2h	equ	0xFDA
  5310                           fsr2l	equ	0xFD9
  5311                           status	equ	0xFD8
  5312                           
  5313 ;; *************** function ___lbmod *****************
  5314 ;; Defined at:
  5315 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbmod.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  dividend        1    wreg     unsigned char 
  5318 ;;  divisor         1    0[BANK0 ] unsigned char 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  dividend        1    1[BANK0 ] unsigned char 
  5321 ;;  rem             1    3[BANK0 ] unsigned char 
  5322 ;;  counter         1    2[BANK0 ] unsigned char 
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  1    wreg      unsigned char 
  5325 ;; Registers used:
  5326 ;;		wreg, status,2, status,0
  5327 ;; Tracked objects:
  5328 ;;		On entry : F/0
  5329 ;;		On exit  : F/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5332 ;;      Params:         0       1       0       0       0       0       0       0       0
  5333 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5335 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5336 ;;Total ram usage:        4 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; Hardware stack levels required when called:   11
  5339 ;; This function calls:
  5340 ;;		Nothing
  5341 ;; This function is called by:
  5342 ;;		_moteApp_add8bToDataBuffer
  5343 ;;		_oled_putUint8
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text9
  5348  004650                     __ptext9:
  5349                           	opt stack 0
  5350  004650                     ___lbmod:
  5351                           	opt stack 16
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;incstack = 0
  5355                           ;___lbmod@dividend stored from wreg
  5356  004650  6FB9               	movwf	___lbmod@dividend& (0+255),b
  5357  004652  0E08               	movlw	8
  5358  004654  0100               	movlb	0	; () banked
  5359  004656  6FBA               	movwf	___lbmod@counter& (0+255),b
  5360                           
  5361                           ; BSR set to: 0
  5362  004658  6BBB               	clrf	___lbmod@rem& (0+255),b
  5363  00465A                     l9042:
  5364                           
  5365                           ; BSR set to: 0
  5366  00465A  90D8               	bcf	status,0,c
  5367  00465C  35B9               	rlcf	___lbmod@dividend& (0+255),w,b
  5368  00465E  35BB               	rlcf	___lbmod@rem& (0+255),w,b
  5369  004660  6FBB               	movwf	___lbmod@rem& (0+255),b
  5370                           
  5371                           ; BSR set to: 0
  5372  004662  90D8               	bcf	status,0,c
  5373  004664  37B9               	rlcf	___lbmod@dividend& (0+255),f,b
  5374                           
  5375                           ; BSR set to: 0
  5376  004666  51B8               	movf	___lbmod@divisor& (0+255),w,b
  5377  004668  5DBB               	subwf	___lbmod@rem& (0+255),w,b
  5378  00466A  E302               	bnc	l9050
  5379                           
  5380                           ; BSR set to: 0
  5381  00466C  51B8               	movf	___lbmod@divisor& (0+255),w,b
  5382  00466E  5FBB               	subwf	___lbmod@rem& (0+255),f,b
  5383  004670                     l9050:
  5384                           
  5385                           ; BSR set to: 0
  5386  004670  2FBA               	decfsz	___lbmod@counter& (0+255),f,b
  5387  004672  D7F3               	goto	l9042
  5388                           
  5389                           ; BSR set to: 0
  5390  004674  51BB               	movf	___lbmod@rem& (0+255),w,b
  5391                           
  5392                           ; BSR set to: 0
  5393  004676  0012               	return		;funcret
  5394  004678                     __end_of___lbmod:
  5395                           	opt stack 0
  5396                           tblptru	equ	0xFF8
  5397                           tblptrh	equ	0xFF7
  5398                           tblptrl	equ	0xFF6
  5399                           tablat	equ	0xFF5
  5400                           intcon	equ	0xFF2
  5401                           postinc0	equ	0xFEE
  5402                           wreg	equ	0xFE8
  5403                           postdec1	equ	0xFE5
  5404                           fsr1l	equ	0xFE1
  5405                           indf2	equ	0xFDF
  5406                           fsr2h	equ	0xFDA
  5407                           fsr2l	equ	0xFD9
  5408                           status	equ	0xFD8
  5409                           
  5410 ;; *************** function ___lbdiv *****************
  5411 ;; Defined at:
  5412 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbdiv.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  dividend        1    wreg     unsigned char 
  5415 ;;  divisor         1    0[BANK0 ] unsigned char 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  dividend        1    1[BANK0 ] unsigned char 
  5418 ;;  quotient        1    3[BANK0 ] unsigned char 
  5419 ;;  counter         1    2[BANK0 ] unsigned char 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      unsigned char 
  5422 ;; Registers used:
  5423 ;;		wreg, status,2, status,0
  5424 ;; Tracked objects:
  5425 ;;		On entry : F/0
  5426 ;;		On exit  : F/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5429 ;;      Params:         0       1       0       0       0       0       0       0       0
  5430 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5432 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5433 ;;Total ram usage:        4 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:   11
  5436 ;; This function calls:
  5437 ;;		Nothing
  5438 ;; This function is called by:
  5439 ;;		_moteApp_add8bToDataBuffer
  5440 ;;		_oled_putUint8
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text10
  5445  004840                     __ptext10:
  5446                           	opt stack 0
  5447  004840                     ___lbdiv:
  5448                           	opt stack 16
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;incstack = 0
  5452                           ;___lbdiv@dividend stored from wreg
  5453  004840  6FB9               	movwf	___lbdiv@dividend& (0+255),b
  5454  004842  0100               	movlb	0	; () banked
  5455  004844  6BBB               	clrf	___lbdiv@quotient& (0+255),b
  5456                           
  5457                           ; BSR set to: 0
  5458  004846  51B8               	movf	___lbdiv@divisor& (0+255),w,b
  5459  004848  E014               	bz	l9034
  5460                           
  5461                           ; BSR set to: 0
  5462  00484A  0E01               	movlw	1
  5463  00484C  6FBA               	movwf	___lbdiv@counter& (0+255),b
  5464  00484E  D003               	goto	l9022
  5465  004850                     l9018:
  5466                           
  5467                           ; BSR set to: 0
  5468  004850  90D8               	bcf	status,0,c
  5469  004852  37B8               	rlcf	___lbdiv@divisor& (0+255),f,b
  5470                           
  5471                           ; BSR set to: 0
  5472  004854  2BBA               	incf	___lbdiv@counter& (0+255),f,b
  5473  004856                     l9022:
  5474                           
  5475                           ; BSR set to: 0
  5476  004856  AFB8               	btfss	___lbdiv@divisor& (0+255),7,b
  5477  004858  D7FB               	goto	l9018
  5478  00485A                     l9024:
  5479                           
  5480                           ; BSR set to: 0
  5481  00485A  90D8               	bcf	status,0,c
  5482  00485C  37BB               	rlcf	___lbdiv@quotient& (0+255),f,b
  5483  00485E  51B8               	movf	___lbdiv@divisor& (0+255),w,b
  5484  004860  5DB9               	subwf	___lbdiv@dividend& (0+255),w,b
  5485  004862  E303               	bnc	l9030
  5486                           
  5487                           ; BSR set to: 0
  5488  004864  51B8               	movf	___lbdiv@divisor& (0+255),w,b
  5489  004866  5FB9               	subwf	___lbdiv@dividend& (0+255),f,b
  5490                           
  5491                           ; BSR set to: 0
  5492  004868  81BB               	bsf	___lbdiv@quotient& (0+255),0,b
  5493  00486A                     l9030:
  5494                           
  5495                           ; BSR set to: 0
  5496  00486A  90D8               	bcf	status,0,c
  5497  00486C  33B8               	rrcf	___lbdiv@divisor& (0+255),f,b
  5498                           
  5499                           ; BSR set to: 0
  5500  00486E  2FBA               	decfsz	___lbdiv@counter& (0+255),f,b
  5501  004870  D7F4               	goto	l9024
  5502  004872                     l9034:
  5503                           
  5504                           ; BSR set to: 0
  5505  004872  51BB               	movf	___lbdiv@quotient& (0+255),w,b
  5506                           
  5507                           ; BSR set to: 0
  5508  004874  0012               	return		;funcret
  5509  004876                     __end_of___lbdiv:
  5510                           	opt stack 0
  5511                           tblptru	equ	0xFF8
  5512                           tblptrh	equ	0xFF7
  5513                           tblptrl	equ	0xFF6
  5514                           tablat	equ	0xFF5
  5515                           intcon	equ	0xFF2
  5516                           postinc0	equ	0xFEE
  5517                           wreg	equ	0xFE8
  5518                           postdec1	equ	0xFE5
  5519                           fsr1l	equ	0xFE1
  5520                           indf2	equ	0xFDF
  5521                           fsr2h	equ	0xFDA
  5522                           fsr2l	equ	0xFD9
  5523                           status	equ	0xFD8
  5524                           
  5525 ;; *************** function _moteApp_add16bToDataBuffer *****************
  5526 ;; Defined at:
  5527 ;;		line 1117 in file "../Includes/Board/MOTEapp.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  number          2   12[BANK0 ] unsigned int 
  5530 ;;  bufferLocati    1   14[BANK0 ] unsigned char 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;		None
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  1    wreg      void 
  5535 ;; Registers used:
  5536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5537 ;; Tracked objects:
  5538 ;;		On entry : F/0
  5539 ;;		On exit  : F/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5542 ;;      Params:         0       3       0       0       0       0       0       0       0
  5543 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5545 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5546 ;;Total ram usage:        3 bytes
  5547 ;; Hardware stack levels used:    1
  5548 ;; Hardware stack levels required when called:   12
  5549 ;; This function calls:
  5550 ;;		___lwdiv
  5551 ;;		___lwmod
  5552 ;; This function is called by:
  5553 ;;		_moteRunningProcess
  5554 ;; This function uses a non-reentrant model
  5555 ;;
  5556                           
  5557                           	psect	text11
  5558  006416                     __ptext11:
  5559                           	opt stack 0
  5560  006416                     _moteApp_add16bToDataBuffer:
  5561                           	opt stack 16
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;MOTEapp.c: 1119: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;incstack = 0
  5568  006416  51C6               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5569  006418  0FA7               	addlw	low (_dataBuffer+4)
  5570  00641A  6ED9               	movwf	fsr2l,c
  5571  00641C  6ADA               	clrf	fsr2h,c
  5572  00641E  C0C4  F0BF         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5573  006422  C0C5  F0C0         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5574  006426  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
  5575  006428  0E0A               	movlw	10
  5576  00642A  6FC1               	movwf	___lwmod@divisor& (0+255),b
  5577  00642C  ECB0  F024         	call	___lwmod	;wreg free
  5578  006430  51BF               	movf	?___lwmod& (0+255),w,b
  5579  006432  0F30               	addlw	48
  5580  006434  6EDF               	movwf	indf2,c
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;MOTEapp.c: 1120: number /= 10;
  5584  006436  C0C4  F0B8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5585  00643A  C0C5  F0B9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5586  00643E  6BBB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5587  006440  0E0A               	movlw	10
  5588  006442  6FBA               	movwf	___lwdiv@divisor& (0+255),b
  5589  006444  EC18  F025         	call	___lwdiv	;wreg free
  5590  006448  C0B8  F0C4         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5591  00644C  C0B9  F0C5         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;MOTEapp.c: 1121: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
  5595  006450  51C6               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5596  006452  0FA6               	addlw	low (_dataBuffer+3)
  5597  006454  6ED9               	movwf	fsr2l,c
  5598  006456  6ADA               	clrf	fsr2h,c
  5599  006458  C0C4  F0BF         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5600  00645C  C0C5  F0C0         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5601  006460  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
  5602  006462  0E0A               	movlw	10
  5603  006464  6FC1               	movwf	___lwmod@divisor& (0+255),b
  5604  006466  ECB0  F024         	call	___lwmod	;wreg free
  5605  00646A  51BF               	movf	?___lwmod& (0+255),w,b
  5606  00646C  0F30               	addlw	48
  5607  00646E  6EDF               	movwf	indf2,c
  5608                           
  5609                           ;MOTEapp.c: 1122: number /= 10;
  5610  006470  C0C4  F0B8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5611  006474  C0C5  F0B9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5612  006478  6BBB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5613  00647A  0E0A               	movlw	10
  5614  00647C  6FBA               	movwf	___lwdiv@divisor& (0+255),b
  5615  00647E  EC18  F025         	call	___lwdiv	;wreg free
  5616  006482  C0B8  F0C4         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5617  006486  C0B9  F0C5         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5618                           
  5619                           ; BSR set to: 0
  5620                           ;MOTEapp.c: 1123: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  5621  00648A  51C6               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5622  00648C  0FA5               	addlw	low (_dataBuffer+2)
  5623  00648E  6ED9               	movwf	fsr2l,c
  5624  006490  6ADA               	clrf	fsr2h,c
  5625  006492  C0C4  F0BF         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5626  006496  C0C5  F0C0         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5627  00649A  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
  5628  00649C  0E0A               	movlw	10
  5629  00649E  6FC1               	movwf	___lwmod@divisor& (0+255),b
  5630  0064A0  ECB0  F024         	call	___lwmod	;wreg free
  5631  0064A4  51BF               	movf	?___lwmod& (0+255),w,b
  5632  0064A6  0F30               	addlw	48
  5633  0064A8  6EDF               	movwf	indf2,c
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;MOTEapp.c: 1124: number /= 10;
  5637  0064AA  C0C4  F0B8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5638  0064AE  C0C5  F0B9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5639  0064B2  6BBB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5640  0064B4  0E0A               	movlw	10
  5641  0064B6  6FBA               	movwf	___lwdiv@divisor& (0+255),b
  5642  0064B8  EC18  F025         	call	___lwdiv	;wreg free
  5643  0064BC  C0B8  F0C4         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5644  0064C0  C0B9  F0C5         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5645                           
  5646                           ;MOTEapp.c: 1125: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  5647  0064C4  51C6               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5648  0064C6  0FA4               	addlw	low (_dataBuffer+1)
  5649  0064C8  6ED9               	movwf	fsr2l,c
  5650  0064CA  6ADA               	clrf	fsr2h,c
  5651  0064CC  C0C4  F0BF         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5652  0064D0  C0C5  F0C0         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5653  0064D4  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
  5654  0064D6  0E0A               	movlw	10
  5655  0064D8  6FC1               	movwf	___lwmod@divisor& (0+255),b
  5656  0064DA  ECB0  F024         	call	___lwmod	;wreg free
  5657  0064DE  51BF               	movf	?___lwmod& (0+255),w,b
  5658  0064E0  0F30               	addlw	48
  5659  0064E2  6EDF               	movwf	indf2,c
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;MOTEapp.c: 1126: number /= 10;
  5663  0064E4  C0C4  F0B8         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5664  0064E8  C0C5  F0B9         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5665  0064EC  6BBB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5666  0064EE  0E0A               	movlw	10
  5667  0064F0  6FBA               	movwf	___lwdiv@divisor& (0+255),b
  5668  0064F2  EC18  F025         	call	___lwdiv	;wreg free
  5669  0064F6  C0B8  F0C4         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5670  0064FA  C0B9  F0C5         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;MOTEapp.c: 1127: dataBuffer[bufferLocation] = '0' + (number % 10);
  5674  0064FE  51C6               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5675  006500  0FA3               	addlw	low _dataBuffer
  5676  006502  6ED9               	movwf	fsr2l,c
  5677  006504  6ADA               	clrf	fsr2h,c
  5678  006506  C0C4  F0BF         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5679  00650A  C0C5  F0C0         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5680  00650E  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
  5681  006510  0E0A               	movlw	10
  5682  006512  6FC1               	movwf	___lwmod@divisor& (0+255),b
  5683  006514  ECB0  F024         	call	___lwmod	;wreg free
  5684  006518  51BF               	movf	?___lwmod& (0+255),w,b
  5685  00651A  0F30               	addlw	48
  5686  00651C  6EDF               	movwf	indf2,c
  5687                           
  5688                           ; BSR set to: 0
  5689  00651E  0012               	return		;funcret
  5690  006520                     __end_of_moteApp_add16bToDataBuffer:
  5691                           	opt stack 0
  5692                           tblptru	equ	0xFF8
  5693                           tblptrh	equ	0xFF7
  5694                           tblptrl	equ	0xFF6
  5695                           tablat	equ	0xFF5
  5696                           intcon	equ	0xFF2
  5697                           postinc0	equ	0xFEE
  5698                           wreg	equ	0xFE8
  5699                           postdec1	equ	0xFE5
  5700                           fsr1l	equ	0xFE1
  5701                           indf2	equ	0xFDF
  5702                           fsr2h	equ	0xFDA
  5703                           fsr2l	equ	0xFD9
  5704                           status	equ	0xFD8
  5705                           
  5706 ;; *************** function _moteApp_GoToSleep *****************
  5707 ;; Defined at:
  5708 ;;		line 1001 in file "../Includes/Board/MOTEapp.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  status          1    0        unsigned char 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      unsigned char 
  5715 ;; Registers used:
  5716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : F/0
  5719 ;;		On exit  : F/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0
  5723 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5725 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5726 ;;Total ram usage:        1 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:   18
  5729 ;; This function calls:
  5730 ;;		_EUSART_FlushBuffer
  5731 ;;		_EUSART_Initialize
  5732 ;;		_PIN_MANAGER_Initialize
  5733 ;;		_modemResync
  5734 ;;		_modemSleep
  5735 ;;		_oled_displayOff
  5736 ;;		_oled_init
  5737 ;; This function is called by:
  5738 ;;		_moteRunningProcess
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           	psect	text12
  5743  004F52                     __ptext12:
  5744                           	opt stack 0
  5745  004F52                     _moteApp_GoToSleep:
  5746                           	opt stack 10
  5747  004F52                     l586:
  5748                           
  5749                           ; BSR set to: 0
  5750  004F52  A282               	btfss	3970,1,c	;volatile
  5751  004F54  D7FE               	goto	l586
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;MOTEapp.c: 1005: modemSleep();
  5755  004F56  EC39  F022         	call	_modemSleep	;wreg free
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;MOTEapp.c: 1006: oled_displayOff(1);
  5759  004F5A  0E01               	movlw	1
  5760  004F5C  ECD9  F021         	call	_oled_displayOff
  5761                           
  5762                           ;MOTEapp.c: 1007: ADCON0bits.ADON = 0;
  5763  004F60  90C2               	bcf	4034,0,c	;volatile
  5764                           
  5765                           ;MOTEapp.c: 1008: INTCONbits.GIE = 0;
  5766  004F62  9EF2               	bcf	intcon,7,c	;volatile
  5767                           
  5768                           ;MOTEapp.c: 1009: GIE = 0;
  5769  004F64  9EF2               	bcf	intcon,7,c	;volatile
  5770                           
  5771                           ;MOTEapp.c: 1010: PEIE = 0;
  5772  004F66  9CF2               	bcf	intcon,6,c	;volatile
  5773                           
  5774                           ;MOTEapp.c: 1012: ANSELAbits.ANSA0 = 1;
  5775  004F68  010F               	movlb	15	; () banked
  5776  004F6A  815B               	bsf	91,0,b	;volatile
  5777                           
  5778                           ; BSR set to: 15
  5779                           ;MOTEapp.c: 1014: PIE2bits.C1IE = 1;
  5780  004F6C  8CA0               	bsf	4000,6,c	;volatile
  5781                           
  5782                           ; BSR set to: 15
  5783                           ;MOTEapp.c: 1015: IOCCbits.IOCC0 = 1;
  5784  004F6E  8087               	bsf	3975,0,c	;volatile
  5785                           
  5786                           ; BSR set to: 15
  5787                           ;MOTEapp.c: 1016: IOCCbits.IOCC1 = 1;
  5788  004F70  8287               	bsf	3975,1,c	;volatile
  5789                           
  5790                           ; BSR set to: 15
  5791                           ;MOTEapp.c: 1017: IOCCbits.IOCC2 = 1;
  5792  004F72  8487               	bsf	3975,2,c	;volatile
  5793                           
  5794                           ; BSR set to: 15
  5795                           ;MOTEapp.c: 1018: INTCONbits.IOCIE = 1;
  5796  004F74  86F2               	bsf	intcon,3,c	;volatile
  5797                           
  5798                           ; BSR set to: 15
  5799  004F76  5082               	movf	3970,w,c	;volatile
  5800                           
  5801                           ; BSR set to: 15
  5802  004F78  5082               	movf	3970,w,c	;volatile
  5803                           
  5804                           ; BSR set to: 15
  5805  004F7A  5082               	movf	3970,w,c	;volatile
  5806                           
  5807                           ; BSR set to: 15
  5808                           ;MOTEapp.c: 1026: }
  5809                           ;MOTEapp.c: 1027: INTCONbits.IOCIF = 0;
  5810  004F7C  90F2               	bcf	intcon,0,c	;volatile
  5811                           
  5812                           ; BSR set to: 15
  5813                           ;MOTEapp.c: 1028: PIR2bits.C1IF = 0;
  5814  004F7E  9CA1               	bcf	4001,6,c	;volatile
  5815                           
  5816                           ; BSR set to: 15
  5817                           ;MOTEapp.c: 1029: __nop();
  5818  004F80  F000               	nop	
  5819  004F82  0003               	sleep		;# 
  5820                           
  5821                           ;MOTEapp.c: 1031: __nop();
  5822  004F84  F000               	nop	
  5823                           
  5824                           ;MOTEapp.c: 1034: EUSART_FlushBuffer();
  5825  004F86  ECBE  F023         	call	_EUSART_FlushBuffer	;wreg free
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;MOTEapp.c: 1036: INTCONbits.IOCIE = 0;
  5829  004F8A  96F2               	bcf	intcon,3,c	;volatile
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;MOTEapp.c: 1037: IOCCbits.IOCC0 = 0;
  5833  004F8C  9087               	bcf	3975,0,c	;volatile
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;MOTEapp.c: 1038: IOCCbits.IOCC1 = 0;
  5837  004F8E  9287               	bcf	3975,1,c	;volatile
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;MOTEapp.c: 1039: IOCCbits.IOCC2 = 0;
  5841  004F90  9487               	bcf	3975,2,c	;volatile
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;MOTEapp.c: 1040: PIE2bits.C1IE = 0;
  5845  004F92  9CA0               	bcf	4000,6,c	;volatile
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;MOTEapp.c: 1041: GIE = 1;
  5849  004F94  8EF2               	bsf	intcon,7,c	;volatile
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;MOTEapp.c: 1043: PIN_MANAGER_Initialize();
  5853  004F96  EC88  F025         	call	_PIN_MANAGER_Initialize	;wreg free
  5854                           
  5855                           ; BSR set to: 15
  5856                           ;MOTEapp.c: 1044: EUSART_Initialize();
  5857  004F9A  EC7C  F023         	call	_EUSART_Initialize	;wreg free
  5858                           
  5859                           ;MOTEapp.c: 1046: if (INTCONbits.IOCIF)
  5860  004F9E  A0F2               	btfss	intcon,0,c	;volatile
  5861  004FA0  D002               	goto	l9518
  5862                           
  5863                           ;MOTEapp.c: 1047: {
  5864                           ;MOTEapp.c: 1048: INTCONbits.IOCIF = 0;
  5865  004FA2  90F2               	bcf	intcon,0,c	;volatile
  5866                           
  5867                           ;MOTEapp.c: 1050: }
  5868  004FA4  D003               	goto	l9522
  5869  004FA6                     l9518:
  5870                           
  5871                           ;MOTEapp.c: 1056: else
  5872                           ;MOTEapp.c: 1057: {
  5873                           ;MOTEapp.c: 1058: secTicker = 10;
  5874  004FA6  0E0A               	movlw	10
  5875  004FA8  0100               	movlb	0	; () banked
  5876  004FAA  6F9F               	movwf	_secTicker& (0+255),b
  5877  004FAC                     l9522:
  5878                           
  5879                           ;MOTEapp.c: 1060: }
  5880                           ;MOTEapp.c: 1061: ANSELAbits.ANSA0 = 0;
  5881  004FAC  010F               	movlb	15	; () banked
  5882  004FAE  915B               	bcf	91,0,b	;volatile
  5883                           
  5884                           ; BSR set to: 15
  5885                           ;MOTEapp.c: 1062: oled_displayOff(0);
  5886  004FB0  0E00               	movlw	0
  5887  004FB2  ECD9  F021         	call	_oled_displayOff
  5888                           
  5889                           ;MOTEapp.c: 1063: oled_init();
  5890  004FB6  ECB5  F022         	call	_oled_init	;wreg free
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;MOTEapp.c: 1065: modemResync();
  5894  004FBA  EF10  F027         	goto	_modemResync	;wreg free
  5895  004FBE                     __end_of_moteApp_GoToSleep:
  5896                           	opt stack 0
  5897                           tblptru	equ	0xFF8
  5898                           tblptrh	equ	0xFF7
  5899                           tblptrl	equ	0xFF6
  5900                           tablat	equ	0xFF5
  5901                           intcon	equ	0xFF2
  5902                           postinc0	equ	0xFEE
  5903                           wreg	equ	0xFE8
  5904                           postdec1	equ	0xFE5
  5905                           fsr1l	equ	0xFE1
  5906                           indf2	equ	0xFDF
  5907                           fsr2h	equ	0xFDA
  5908                           fsr2l	equ	0xFD9
  5909                           status	equ	0xFD8
  5910                           
  5911 ;; *************** function _oled_init *****************
  5912 ;; Defined at:
  5913 ;;		line 308 in file "../Includes/Drivers/SSD1306oLED.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;		None
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  1    wreg      void 
  5920 ;; Registers used:
  5921 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : F/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5927 ;;      Params:         0       0       0       0       0       0       0       0       0
  5928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5930 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5931 ;;Total ram usage:        0 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:   17
  5934 ;; This function calls:
  5935 ;;		_oled_clear
  5936 ;;		_oled_devInit
  5937 ;;		_oled_setDisplay
  5938 ;;		_oled_setFont
  5939 ;; This function is called by:
  5940 ;;		_main
  5941 ;;		_moteApp_GoToSleep
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text13
  5946  00456A                     __ptext13:
  5947                           	opt stack 0
  5948  00456A                     _oled_init:
  5949                           	opt stack 13
  5950                           
  5951                           ;SSD1306oLED.c: 311: TRISBbits.TRISB2=0;
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;incstack = 0
  5955  00456A  9493               	bcf	3987,2,c	;volatile
  5956                           
  5957                           ;SSD1306oLED.c: 312: TRISBbits.TRISB4=0;
  5958  00456C  9893               	bcf	3987,4,c	;volatile
  5959                           
  5960                           ;SSD1306oLED.c: 313: TRISBbits.TRISB5=0;
  5961  00456E  9A93               	bcf	3987,5,c	;volatile
  5962                           
  5963                           ;SSD1306oLED.c: 315: oled_devInit();
  5964  004570  ECC4  F02E         	call	_oled_devInit	;wreg free
  5965                           
  5966                           ;SSD1306oLED.c: 316: oled_setDisplay(Normal);
  5967  004574  0E00               	movlw	0
  5968  004576  ECFF  F021         	call	_oled_setDisplay
  5969                           
  5970                           ;SSD1306oLED.c: 318: oled_setFont(OledFont0);
  5971  00457A  0EA1               	movlw	low _OledFont0
  5972  00457C  0100               	movlb	0	; () banked
  5973  00457E  6FB8               	movwf	oled_setFont@font& (0+255),b
  5974  004580  0E77               	movlw	high _OledFont0
  5975  004582  6FB9               	movwf	(oled_setFont@font+1)& (0+255),b
  5976  004584  ECE2  F021         	call	_oled_setFont	;wreg free
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;SSD1306oLED.c: 319: oled_clear();
  5980  004588  EF1F  F022         	goto	_oled_clear	;wreg free
  5981  00458C                     __end_of_oled_init:
  5982                           	opt stack 0
  5983                           tblptru	equ	0xFF8
  5984                           tblptrh	equ	0xFF7
  5985                           tblptrl	equ	0xFF6
  5986                           tablat	equ	0xFF5
  5987                           intcon	equ	0xFF2
  5988                           postinc0	equ	0xFEE
  5989                           wreg	equ	0xFE8
  5990                           postdec1	equ	0xFE5
  5991                           fsr1l	equ	0xFE1
  5992                           indf2	equ	0xFDF
  5993                           fsr2h	equ	0xFDA
  5994                           fsr2l	equ	0xFD9
  5995                           status	equ	0xFD8
  5996                           
  5997 ;; *************** function _oled_setFont *****************
  5998 ;; Defined at:
  5999 ;;		line 218 in file "../Includes/Drivers/SSD1306oLED.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  font            2    0[BANK0 ] PTR const unsigned char 
  6002 ;;		 -> OledFont0(768), 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1    wreg      void 
  6007 ;; Registers used:
  6008 ;;		wreg, status,2, status,0
  6009 ;; Tracked objects:
  6010 ;;		On entry : F/0
  6011 ;;		On exit  : F/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6014 ;;      Params:         0       2       0       0       0       0       0       0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6017 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6018 ;;Total ram usage:        2 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:   11
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_oled_init
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text14
  6029  0043C4                     __ptext14:
  6030                           	opt stack 0
  6031  0043C4                     _oled_setFont:
  6032                           	opt stack 18
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;SSD1306oLED.c: 220: if(font!=0)
  6036                           
  6037                           ; BSR set to: 0
  6038                           ;incstack = 0
  6039  0043C4  51B8               	movf	oled_setFont@font& (0+255),w,b
  6040  0043C6  11B9               	iorwf	(oled_setFont@font+1)& (0+255),w,b
  6041  0043C8  B4D8               	btfsc	status,2,c
  6042  0043CA  0012               	return	
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;SSD1306oLED.c: 221: {
  6046                           ;SSD1306oLED.c: 222: selectedFont=font;
  6047  0043CC  C0B8  F0F9         	movff	oled_setFont@font,_selectedFont
  6048  0043D0  C0B9  F0FA         	movff	oled_setFont@font+1,_selectedFont+1
  6049                           
  6050                           ; BSR set to: 0
  6051  0043D4  0012               	return		;funcret
  6052  0043D6                     __end_of_oled_setFont:
  6053                           	opt stack 0
  6054                           tblptru	equ	0xFF8
  6055                           tblptrh	equ	0xFF7
  6056                           tblptrl	equ	0xFF6
  6057                           tablat	equ	0xFF5
  6058                           intcon	equ	0xFF2
  6059                           postinc0	equ	0xFEE
  6060                           wreg	equ	0xFE8
  6061                           postdec1	equ	0xFE5
  6062                           fsr1l	equ	0xFE1
  6063                           indf2	equ	0xFDF
  6064                           fsr2h	equ	0xFDA
  6065                           fsr2l	equ	0xFD9
  6066                           status	equ	0xFD8
  6067                           
  6068 ;; *************** function _oled_setDisplay *****************
  6069 ;; Defined at:
  6070 ;;		line 383 in file "../Includes/Drivers/SSD1306oLED.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  displayType     1    wreg     enum E6298
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  displayType     1    2[BANK0 ] enum E6298
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		wreg, status,2, status,0, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6084 ;;      Params:         0       0       0       0       0       0       0       0       0
  6085 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6087 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6088 ;;Total ram usage:        1 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; Hardware stack levels required when called:   13
  6091 ;; This function calls:
  6092 ;;		_oled_writeCommand
  6093 ;; This function is called by:
  6094 ;;		_oled_init
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text15
  6099  0043FE                     __ptext15:
  6100                           	opt stack 0
  6101  0043FE                     _oled_setDisplay:
  6102                           	opt stack 16
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;incstack = 0
  6106                           ;oled_setDisplay@displayType stored from wreg
  6107  0043FE  0100               	movlb	0	; () banked
  6108  004400  6FBA               	movwf	oled_setDisplay@displayType& (0+255),b
  6109                           
  6110                           ;SSD1306oLED.c: 385: displayType = 0xA6 + displayType;
  6111  004402  0EA6               	movlw	166
  6112  004404  27BA               	addwf	oled_setDisplay@displayType& (0+255),f,b
  6113                           
  6114                           ; BSR set to: 0
  6115                           ;SSD1306oLED.c: 387: LATBbits.LATB4 = 0;
  6116  004406  988A               	bcf	3978,4,c	;volatile
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;SSD1306oLED.c: 389: oled_writeCommand(displayType);
  6120  004408  51BA               	movf	oled_setDisplay@displayType& (0+255),w,b
  6121  00440A  ECA0  F021         	call	_oled_writeCommand
  6122                           
  6123                           ;SSD1306oLED.c: 391: LATBbits.LATB4 = 1;
  6124  00440E  888A               	bsf	3978,4,c	;volatile
  6125  004410  0012               	return		;funcret
  6126  004412                     __end_of_oled_setDisplay:
  6127                           	opt stack 0
  6128                           tblptru	equ	0xFF8
  6129                           tblptrh	equ	0xFF7
  6130                           tblptrl	equ	0xFF6
  6131                           tablat	equ	0xFF5
  6132                           intcon	equ	0xFF2
  6133                           postinc0	equ	0xFEE
  6134                           wreg	equ	0xFE8
  6135                           postdec1	equ	0xFE5
  6136                           fsr1l	equ	0xFE1
  6137                           indf2	equ	0xFDF
  6138                           fsr2h	equ	0xFDA
  6139                           fsr2l	equ	0xFD9
  6140                           status	equ	0xFD8
  6141                           
  6142 ;; *************** function _oled_devInit *****************
  6143 ;; Defined at:
  6144 ;;		line 322 in file "../Includes/Drivers/SSD1306oLED.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;		None
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;		None
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  1    wreg      void 
  6151 ;; Registers used:
  6152 ;;		wreg, status,2, cstack
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6158 ;;      Params:         0       0       0       0       0       0       0       0       0
  6159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6160 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6161 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6162 ;;Total ram usage:        1 bytes
  6163 ;; Hardware stack levels used:    1
  6164 ;; Hardware stack levels required when called:   13
  6165 ;; This function calls:
  6166 ;;		_oled_writeCommand
  6167 ;; This function is called by:
  6168 ;;		_oled_init
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text16
  6173  005D88                     __ptext16:
  6174                           	opt stack 0
  6175  005D88                     _oled_devInit:
  6176                           	opt stack 16
  6177                           
  6178                           ;SSD1306oLED.c: 324: LATBbits.LATB4 = 1;
  6179                           
  6180                           ;incstack = 0
  6181  005D88  888A               	bsf	3978,4,c	;volatile
  6182                           
  6183                           ;SSD1306oLED.c: 326: LATBbits.LATB5 = 1;
  6184  005D8A  8A8A               	bsf	3978,5,c	;volatile
  6185                           
  6186                           ;SSD1306oLED.c: 330: LATBbits.LATB2 = 1;
  6187  005D8C  848A               	bsf	3978,2,c	;volatile
  6188                           
  6189                           ;SSD1306oLED.c: 331: _delay((unsigned long)((20)*(48000000/4000000.0)));
  6190  005D8E  0E50               	movlw	80
  6191  005D90                     u8847:
  6192  005D90  2EE8               	decfsz	wreg,f,c
  6193  005D92  D7FE               	goto	u8847
  6194                           
  6195                           ;SSD1306oLED.c: 332: LATBbits.LATB2 = 0;
  6196  005D94  948A               	bcf	3978,2,c	;volatile
  6197                           
  6198                           ;SSD1306oLED.c: 333: _delay((unsigned long)((200)*(48000000/4000000.0)));
  6199  005D96  0E04               	movlw	4
  6200  005D98  0100               	movlb	0	; () banked
  6201  005D9A  6FBA               	movwf	??_oled_devInit& (0+255),b
  6202  005D9C  0E1C               	movlw	28
  6203  005D9E                     u8857:
  6204  005D9E  2EE8               	decfsz	wreg,f,c
  6205  005DA0  D7FE               	goto	u8857
  6206  005DA2  2FBA               	decfsz	??_oled_devInit& (0+255),f,b
  6207  005DA4  D7FC               	goto	u8857
  6208  005DA6  D000               	nop2	
  6209                           
  6210                           ;SSD1306oLED.c: 334: LATBbits.LATB2 = 1;
  6211  005DA8  848A               	bsf	3978,2,c	;volatile
  6212                           
  6213                           ;SSD1306oLED.c: 336: LATBbits.LATB4 = 0;
  6214  005DAA  988A               	bcf	3978,4,c	;volatile
  6215                           
  6216                           ;SSD1306oLED.c: 337: _delay((unsigned long)((200)*(48000000/4000000.0)));
  6217  005DAC  0E04               	movlw	4
  6218  005DAE  0100               	movlb	0	; () banked
  6219  005DB0  6FBA               	movwf	??_oled_devInit& (0+255),b
  6220  005DB2  0E1C               	movlw	28
  6221  005DB4                     u8867:
  6222  005DB4  2EE8               	decfsz	wreg,f,c
  6223  005DB6  D7FE               	goto	u8867
  6224  005DB8  2FBA               	decfsz	??_oled_devInit& (0+255),f,b
  6225  005DBA  D7FC               	goto	u8867
  6226  005DBC  D000               	nop2	
  6227                           
  6228                           ;SSD1306oLED.c: 338: LATBbits.LATB5 = 0;
  6229  005DBE  9A8A               	bcf	3978,5,c	;volatile
  6230                           
  6231                           ;SSD1306oLED.c: 339: _delay((unsigned long)((200)*(48000000/4000000.0)));
  6232  005DC0  0E04               	movlw	4
  6233  005DC2  0100               	movlb	0	; () banked
  6234  005DC4  6FBA               	movwf	??_oled_devInit& (0+255),b
  6235  005DC6  0E1C               	movlw	28
  6236  005DC8                     u8877:
  6237  005DC8  2EE8               	decfsz	wreg,f,c
  6238  005DCA  D7FE               	goto	u8877
  6239  005DCC  2FBA               	decfsz	??_oled_devInit& (0+255),f,b
  6240  005DCE  D7FC               	goto	u8877
  6241  005DD0  D000               	nop2	
  6242                           
  6243                           ;SSD1306oLED.c: 342: oled_writeCommand(0xAE);
  6244  005DD2  0EAE               	movlw	174
  6245  005DD4  ECA0  F021         	call	_oled_writeCommand
  6246                           
  6247                           ;SSD1306oLED.c: 344: oled_writeCommand(0xD5);
  6248  005DD8  0ED5               	movlw	213
  6249  005DDA  ECA0  F021         	call	_oled_writeCommand
  6250                           
  6251                           ;SSD1306oLED.c: 345: oled_writeCommand(0x80);
  6252  005DDE  0E80               	movlw	128
  6253  005DE0  ECA0  F021         	call	_oled_writeCommand
  6254                           
  6255                           ;SSD1306oLED.c: 347: oled_writeCommand(0xA8);
  6256  005DE4  0EA8               	movlw	168
  6257  005DE6  ECA0  F021         	call	_oled_writeCommand
  6258                           
  6259                           ;SSD1306oLED.c: 348: oled_writeCommand(0x1F);
  6260  005DEA  0E1F               	movlw	31
  6261  005DEC  ECA0  F021         	call	_oled_writeCommand
  6262                           
  6263                           ;SSD1306oLED.c: 350: oled_writeCommand(0xD3);
  6264  005DF0  0ED3               	movlw	211
  6265  005DF2  ECA0  F021         	call	_oled_writeCommand
  6266                           
  6267                           ;SSD1306oLED.c: 351: oled_writeCommand(0x00);
  6268  005DF6  0E00               	movlw	0
  6269  005DF8  ECA0  F021         	call	_oled_writeCommand
  6270                           
  6271                           ;SSD1306oLED.c: 353: oled_writeCommand(0x8D);
  6272  005DFC  0E8D               	movlw	141
  6273  005DFE  ECA0  F021         	call	_oled_writeCommand
  6274                           
  6275                           ;SSD1306oLED.c: 354: oled_writeCommand(0x14);
  6276  005E02  0E14               	movlw	20
  6277  005E04  ECA0  F021         	call	_oled_writeCommand
  6278                           
  6279                           ;SSD1306oLED.c: 356: oled_writeCommand(0x40);
  6280  005E08  0E40               	movlw	64
  6281  005E0A  ECA0  F021         	call	_oled_writeCommand
  6282                           
  6283                           ;SSD1306oLED.c: 358: oled_writeCommand(0xA6);
  6284  005E0E  0EA6               	movlw	166
  6285  005E10  ECA0  F021         	call	_oled_writeCommand
  6286                           
  6287                           ;SSD1306oLED.c: 360: oled_writeCommand(0xA4);
  6288  005E14  0EA4               	movlw	164
  6289  005E16  ECA0  F021         	call	_oled_writeCommand
  6290                           
  6291                           ;SSD1306oLED.c: 362: oled_writeCommand(0xA0);
  6292  005E1A  0EA0               	movlw	160
  6293  005E1C  ECA0  F021         	call	_oled_writeCommand
  6294                           
  6295                           ;SSD1306oLED.c: 364: oled_writeCommand(0xC0);
  6296  005E20  0EC0               	movlw	192
  6297  005E22  ECA0  F021         	call	_oled_writeCommand
  6298                           
  6299                           ;SSD1306oLED.c: 366: oled_writeCommand(0xDA);
  6300  005E26  0EDA               	movlw	218
  6301  005E28  ECA0  F021         	call	_oled_writeCommand
  6302                           
  6303                           ;SSD1306oLED.c: 367: oled_writeCommand(0x42);
  6304  005E2C  0E42               	movlw	66
  6305  005E2E  ECA0  F021         	call	_oled_writeCommand
  6306                           
  6307                           ;SSD1306oLED.c: 369: oled_writeCommand(0x81);
  6308  005E32  0E81               	movlw	129
  6309  005E34  ECA0  F021         	call	_oled_writeCommand
  6310                           
  6311                           ;SSD1306oLED.c: 370: oled_writeCommand(0x7F);
  6312  005E38  0E7F               	movlw	127
  6313  005E3A  ECA0  F021         	call	_oled_writeCommand
  6314                           
  6315                           ;SSD1306oLED.c: 372: oled_writeCommand(0xD9);
  6316  005E3E  0ED9               	movlw	217
  6317  005E40  ECA0  F021         	call	_oled_writeCommand
  6318                           
  6319                           ;SSD1306oLED.c: 373: oled_writeCommand(0xF1);
  6320  005E44  0EF1               	movlw	241
  6321  005E46  ECA0  F021         	call	_oled_writeCommand
  6322                           
  6323                           ;SSD1306oLED.c: 375: oled_writeCommand(0xDB);
  6324  005E4A  0EDB               	movlw	219
  6325  005E4C  ECA0  F021         	call	_oled_writeCommand
  6326                           
  6327                           ;SSD1306oLED.c: 376: oled_writeCommand(0x40);
  6328  005E50  0E40               	movlw	64
  6329  005E52  ECA0  F021         	call	_oled_writeCommand
  6330                           
  6331                           ;SSD1306oLED.c: 378: oled_writeCommand(0xAF);
  6332  005E56  0EAF               	movlw	175
  6333  005E58  ECA0  F021         	call	_oled_writeCommand
  6334                           
  6335                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 1;
  6336  005E5C  888A               	bsf	3978,4,c	;volatile
  6337  005E5E  0012               	return		;funcret
  6338  005E60                     __end_of_oled_devInit:
  6339                           	opt stack 0
  6340                           tblptru	equ	0xFF8
  6341                           tblptrh	equ	0xFF7
  6342                           tblptrl	equ	0xFF6
  6343                           tablat	equ	0xFF5
  6344                           intcon	equ	0xFF2
  6345                           postinc0	equ	0xFEE
  6346                           wreg	equ	0xFE8
  6347                           postdec1	equ	0xFE5
  6348                           fsr1l	equ	0xFE1
  6349                           indf2	equ	0xFDF
  6350                           fsr2h	equ	0xFDA
  6351                           fsr2l	equ	0xFD9
  6352                           status	equ	0xFD8
  6353                           
  6354 ;; *************** function _oled_displayOff *****************
  6355 ;; Defined at:
  6356 ;;		line 394 in file "../Includes/Drivers/SSD1306oLED.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  state           1    wreg     unsigned char 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;  state           1    2[BANK0 ] unsigned char 
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  1    wreg      void 
  6363 ;; Registers used:
  6364 ;;		wreg, status,2, status,0, cstack
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6370 ;;      Params:         0       0       0       0       0       0       0       0       0
  6371 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6373 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6374 ;;Total ram usage:        1 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:   13
  6377 ;; This function calls:
  6378 ;;		_oled_writeCommand
  6379 ;; This function is called by:
  6380 ;;		_moteApp_GoToSleep
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text17
  6385  0043B2                     __ptext17:
  6386                           	opt stack 0
  6387  0043B2                     _oled_displayOff:
  6388                           	opt stack 14
  6389                           
  6390                           ;incstack = 0
  6391                           ;oled_displayOff@state stored from wreg
  6392  0043B2  0100               	movlb	0	; () banked
  6393  0043B4  6FBA               	movwf	oled_displayOff@state& (0+255),b
  6394                           
  6395                           ;SSD1306oLED.c: 396: LATBbits.LATB4 = 0;
  6396  0043B6  988A               	bcf	3978,4,c	;volatile
  6397                           
  6398                           ;SSD1306oLED.c: 397: oled_writeCommand(0xAF - state);
  6399  0043B8  51BA               	movf	oled_displayOff@state& (0+255),w,b
  6400  0043BA  08AF               	sublw	175
  6401  0043BC  ECA0  F021         	call	_oled_writeCommand
  6402                           
  6403                           ;SSD1306oLED.c: 398: LATBbits.LATB4 = 1;
  6404  0043C0  888A               	bsf	3978,4,c	;volatile
  6405  0043C2  0012               	return		;funcret
  6406  0043C4                     __end_of_oled_displayOff:
  6407                           	opt stack 0
  6408                           tblptru	equ	0xFF8
  6409                           tblptrh	equ	0xFF7
  6410                           tblptrl	equ	0xFF6
  6411                           tablat	equ	0xFF5
  6412                           intcon	equ	0xFF2
  6413                           postinc0	equ	0xFEE
  6414                           wreg	equ	0xFE8
  6415                           postdec1	equ	0xFE5
  6416                           fsr1l	equ	0xFE1
  6417                           indf2	equ	0xFDF
  6418                           fsr2h	equ	0xFDA
  6419                           fsr2l	equ	0xFD9
  6420                           status	equ	0xFD8
  6421                           
  6422 ;; *************** function _modemSleep *****************
  6423 ;; Defined at:
  6424 ;;		line 170 in file "../Includes/Board/MOTEapp.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;		None
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;		None
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  1    wreg      void 
  6431 ;; Registers used:
  6432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6433 ;; Tracked objects:
  6434 ;;		On entry : F/0
  6435 ;;		On exit  : F/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6438 ;;      Params:         0       0       0       0       0       0       0       0       0
  6439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6441 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6442 ;;Total ram usage:        0 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:   14
  6445 ;; This function calls:
  6446 ;;		_moteApp_delayms
  6447 ;;		_sendCommand
  6448 ;; This function is called by:
  6449 ;;		_moteApp_GoToSleep
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text18
  6454  004472                     __ptext18:
  6455                           	opt stack 0
  6456  004472                     _modemSleep:
  6457                           	opt stack 13
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;MOTEapp.c: 172: sendCommand("sys sleep 999999999");
  6461                           
  6462                           ;incstack = 0
  6463  004472  0EA5               	movlw	low STR_22
  6464  004474  6FB9               	movwf	sendCommand@string& (0+255),b
  6465  004476  0E7C               	movlw	high STR_22
  6466  004478  6FBA               	movwf	(sendCommand@string+1)& (0+255),b
  6467  00447A  EC2B  F026         	call	_sendCommand	;wreg free
  6468  00447E                     l322:
  6469  00447E  B89D               	btfsc	3997,4,c	;volatile
  6470  004480  D7FE               	goto	l322
  6471                           
  6472                           ;MOTEapp.c: 175: moteApp_delayms(20);
  6473  004482  0100               	movlb	0	; () banked
  6474  004484  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6475  004486  0E14               	movlw	20
  6476  004488  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  6477  00448A  EF14  F023         	goto	_moteApp_delayms	;wreg free
  6478  00448E                     __end_of_modemSleep:
  6479                           	opt stack 0
  6480                           tblptru	equ	0xFF8
  6481                           tblptrh	equ	0xFF7
  6482                           tblptrl	equ	0xFF6
  6483                           tablat	equ	0xFF5
  6484                           intcon	equ	0xFF2
  6485                           postinc0	equ	0xFEE
  6486                           wreg	equ	0xFE8
  6487                           postdec1	equ	0xFE5
  6488                           fsr1l	equ	0xFE1
  6489                           indf2	equ	0xFDF
  6490                           fsr2h	equ	0xFDA
  6491                           fsr2l	equ	0xFD9
  6492                           status	equ	0xFD8
  6493                           
  6494 ;; *************** function _modemResync *****************
  6495 ;; Defined at:
  6496 ;;		line 133 in file "../Includes/Board/MOTEapp.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;		None
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
  6501 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  1    wreg      void 
  6504 ;; Registers used:
  6505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6506 ;; Tracked objects:
  6507 ;;		On entry : F/0
  6508 ;;		On exit  : F/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6511 ;;      Params:         0       0       0       0       0       0       0       0       0
  6512 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6514 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6515 ;;Total ram usage:        3 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; Hardware stack levels required when called:   14
  6518 ;; This function calls:
  6519 ;;		_MOTEapp_getModemResponse
  6520 ;;		_moteApp_delayms
  6521 ;;		_sendCommand
  6522 ;; This function is called by:
  6523 ;;		_main
  6524 ;;		_moteApp_GoToSleep
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text19
  6529  004E20                     __ptext19:
  6530                           	opt stack 0
  6531  004E20                     _modemResync:
  6532                           	opt stack 13
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;MOTEapp.c: 135: bool escapeEvent = 0;
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;incstack = 0
  6539  004E20  6BBF               	clrf	modemResync@escapeEvent& (0+255),b
  6540                           
  6541                           ;MOTEapp.c: 136: uint16_t escapeCounter = 0;
  6542  004E22  6BBD               	clrf	modemResync@escapeCounter& (0+255),b
  6543  004E24  6BBE               	clrf	(modemResync@escapeCounter+1)& (0+255),b
  6544                           
  6545                           ;MOTEapp.c: 144: TXSTAbits.TXEN = 0;
  6546  004E26  9AAC               	bcf	4012,5,c	;volatile
  6547                           
  6548                           ;MOTEapp.c: 145: LATCbits.LATC6 = 0;
  6549  004E28  9C8B               	bcf	3979,6,c	;volatile
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;MOTEapp.c: 146: moteApp_delayms(10);
  6553  004E2A  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6554  004E2C  0E0A               	movlw	10
  6555  004E2E  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  6556  004E30  EC14  F023         	call	_moteApp_delayms	;wreg free
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;MOTEapp.c: 151: TXSTAbits.TXEN = 1;
  6560  004E34  8AAC               	bsf	4012,5,c	;volatile
  6561                           
  6562                           ;MOTEapp.c: 152: moteApp_delayms(5);
  6563  004E36  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6564  004E38  0E05               	movlw	5
  6565  004E3A  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  6566  004E3C  EC14  F023         	call	_moteApp_delayms	;wreg free
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;MOTEapp.c: 154: TXREG = 0x55;
  6570  004E40  0E55               	movlw	85
  6571  004E42  6EAD               	movwf	4013,c	;volatile
  6572  004E44                     l310:
  6573                           
  6574                           ; BSR set to: 0
  6575  004E44  A2AC               	btfss	4012,1,c	;volatile
  6576  004E46  D7FE               	goto	l310
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;MOTEapp.c: 158: sendCommand("z");
  6580  004E48  0EFD               	movlw	low STR_21
  6581  004E4A  6FB9               	movwf	sendCommand@string& (0+255),b
  6582  004E4C  0E7F               	movlw	high STR_21
  6583  004E4E  6FBA               	movwf	(sendCommand@string+1)& (0+255),b
  6584  004E50  EC2B  F026         	call	_sendCommand	;wreg free
  6585                           
  6586                           ;MOTEapp.c: 160: moteApp_delayms(40);
  6587  004E54  0100               	movlb	0	; () banked
  6588  004E56  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6589  004E58  0E28               	movlw	40
  6590  004E5A  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  6591  004E5C  EC14  F023         	call	_moteApp_delayms	;wreg free
  6592                           
  6593                           ;MOTEapp.c: 161: while (escapeEvent)
  6594  004E60  D00E               	goto	l313
  6595  004E62                     l8876:
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;MOTEapp.c: 162: {
  6599                           ;MOTEapp.c: 163: if(MOTEapp_getModemResponse())
  6600  004E62  EC3D  F025         	call	_MOTEapp_getModemResponse	;wreg free
  6601  004E66  0900               	iorlw	0
  6602  004E68  E003               	bz	l8880
  6603  004E6A                     l8878:
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;MOTEapp.c: 164: escapeEvent = 1;
  6607  004E6A  0E01               	movlw	1
  6608  004E6C  6FBF               	movwf	modemResync@escapeEvent& (0+255),b
  6609  004E6E  D007               	goto	l313
  6610  004E70                     l8880:
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;MOTEapp.c: 165: else if (++escapeCounter > 5000)
  6614  004E70  4BBD               	infsnz	modemResync@escapeCounter& (0+255),f,b
  6615  004E72  2BBE               	incf	(modemResync@escapeCounter+1)& (0+255),f,b
  6616  004E74  0E89               	movlw	137
  6617  004E76  5DBD               	subwf	modemResync@escapeCounter& (0+255),w,b
  6618  004E78  0E13               	movlw	19
  6619  004E7A  59BE               	subwfb	(modemResync@escapeCounter+1)& (0+255),w,b
  6620  004E7C  E2F6               	bc	l8878
  6621  004E7E                     l313:
  6622                           
  6623                           ; BSR set to: 0
  6624  004E7E  51BF               	movf	modemResync@escapeEvent& (0+255),w,b
  6625  004E80  E1F0               	bnz	l8876
  6626                           
  6627                           ; BSR set to: 0
  6628  004E82  0012               	return		;funcret
  6629  004E84                     __end_of_modemResync:
  6630                           	opt stack 0
  6631                           tblptru	equ	0xFF8
  6632                           tblptrh	equ	0xFF7
  6633                           tblptrl	equ	0xFF6
  6634                           tablat	equ	0xFF5
  6635                           intcon	equ	0xFF2
  6636                           postinc0	equ	0xFEE
  6637                           wreg	equ	0xFE8
  6638                           postdec1	equ	0xFE5
  6639                           fsr1l	equ	0xFE1
  6640                           indf2	equ	0xFDF
  6641                           fsr2h	equ	0xFDA
  6642                           fsr2l	equ	0xFD9
  6643                           status	equ	0xFD8
  6644                           
  6645 ;; *************** function _EUSART_FlushBuffer *****************
  6646 ;; Defined at:
  6647 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;		None
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  index           1    0[BANK0 ] unsigned char 
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  1    wreg      void 
  6654 ;; Registers used:
  6655 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/F
  6658 ;;		On exit  : F/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6661 ;;      Params:         0       0       0       0       0       0       0       0       0
  6662 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6664 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6665 ;;Total ram usage:        1 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:   11
  6668 ;; This function calls:
  6669 ;;		Nothing
  6670 ;; This function is called by:
  6671 ;;		_moteApp_GoToSleep
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           	psect	text20
  6676  00477C                     __ptext20:
  6677                           	opt stack 0
  6678  00477C                     _EUSART_FlushBuffer:
  6679                           	opt stack 16
  6680                           
  6681                           ;eusart.c: 204: uint8_t index;
  6682                           ;eusart.c: 205: for (index=0; index < 64; index++)
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;incstack = 0
  6686  00477C  0100               	movlb	0	; () banked
  6687  00477E  6BB8               	clrf	EUSART_FlushBuffer@index& (0+255),b
  6688  004780                     l8938:
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;eusart.c: 206: {
  6692                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
  6693  004780  0E00               	movlw	low _eusartRxBuffer
  6694  004782  25B8               	addwf	EUSART_FlushBuffer@index& (0+255),w,b
  6695  004784  6ED9               	movwf	fsr2l,c
  6696  004786  6ADA               	clrf	fsr2h,c
  6697  004788  0E02               	movlw	high _eusartRxBuffer
  6698  00478A  22DA               	addwfc	fsr2h,f,c
  6699  00478C  6ADF               	clrf	indf2,c
  6700                           
  6701                           ; BSR set to: 0
  6702  00478E  2BB8               	incf	EUSART_FlushBuffer@index& (0+255),f,b
  6703                           
  6704                           ; BSR set to: 0
  6705  004790  0E3F               	movlw	63
  6706  004792  65B8               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
  6707  004794  D7F5               	goto	l8938
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;eusart.c: 208: }
  6711                           ;eusart.c: 209: eusartRxHead = 0;
  6712  004796  6A24               	clrf	_eusartRxHead,c
  6713                           
  6714                           ;eusart.c: 210: eusartRxTail = 0;
  6715  004798  6A25               	clrf	_eusartRxTail,c
  6716                           
  6717                           ;eusart.c: 211: eusartRxCount = 0;
  6718  00479A  6A23               	clrf	_eusartRxCount,c	;volatile
  6719                           
  6720                           ;eusart.c: 213: PIE1bits.TXIE = 0;
  6721  00479C  989D               	bcf	3997,4,c	;volatile
  6722                           
  6723                           ;eusart.c: 214: eusartTxHead = 0;
  6724  00479E  6A27               	clrf	_eusartTxHead,c
  6725                           
  6726                           ;eusart.c: 215: eusartTxTail = 0;
  6727  0047A0  6A28               	clrf	_eusartTxTail,c
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  6731  0047A2  0E40               	movlw	64
  6732  0047A4  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
  6733                           
  6734                           ; BSR set to: 0
  6735  0047A6  0C40               	retlw	64	;funcret
  6736  0047A8                     __end_of_EUSART_FlushBuffer:
  6737                           	opt stack 0
  6738                           tblptru	equ	0xFF8
  6739                           tblptrh	equ	0xFF7
  6740                           tblptrl	equ	0xFF6
  6741                           tablat	equ	0xFF5
  6742                           intcon	equ	0xFF2
  6743                           postinc0	equ	0xFEE
  6744                           wreg	equ	0xFE8
  6745                           postdec1	equ	0xFE5
  6746                           fsr1l	equ	0xFE1
  6747                           indf2	equ	0xFDF
  6748                           fsr2h	equ	0xFDA
  6749                           fsr2l	equ	0xFD9
  6750                           status	equ	0xFD8
  6751                           
  6752 ;; *************** function _TMR2_ReadTimer *****************
  6753 ;; Defined at:
  6754 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;		None
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;  readVal         1    0[BANK0 ] unsigned char 
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  1    wreg      unsigned char 
  6761 ;; Registers used:
  6762 ;;		wreg, status,2
  6763 ;; Tracked objects:
  6764 ;;		On entry : F/0
  6765 ;;		On exit  : F/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6768 ;;      Params:         0       0       0       0       0       0       0       0       0
  6769 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6771 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6772 ;;Total ram usage:        1 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:   11
  6775 ;; This function calls:
  6776 ;;		Nothing
  6777 ;; This function is called by:
  6778 ;;		_moteRunningProcess
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text21
  6783  00432C                     __ptext21:
  6784                           	opt stack 0
  6785  00432C                     _TMR2_ReadTimer:
  6786                           	opt stack 17
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;tmr2.c: 88: uint8_t readVal;
  6790                           ;tmr2.c: 90: readVal = TMR2;
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;incstack = 0
  6794  00432C  CFBC F0B8          	movff	4028,TMR2_ReadTimer@readVal	;volatile
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;tmr2.c: 92: return readVal;
  6798  004330  51B8               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
  6799                           
  6800                           ; BSR set to: 0
  6801  004332  0012               	return		;funcret
  6802  004334                     __end_of_TMR2_ReadTimer:
  6803                           	opt stack 0
  6804                           tblptru	equ	0xFF8
  6805                           tblptrh	equ	0xFF7
  6806                           tblptrl	equ	0xFF6
  6807                           tablat	equ	0xFF5
  6808                           intcon	equ	0xFF2
  6809                           postinc0	equ	0xFEE
  6810                           wreg	equ	0xFE8
  6811                           postdec1	equ	0xFE5
  6812                           fsr1l	equ	0xFE1
  6813                           indf2	equ	0xFDF
  6814                           fsr2h	equ	0xFDA
  6815                           fsr2l	equ	0xFD9
  6816                           status	equ	0xFD8
  6817                           
  6818 ;; *************** function _moteJoiningProcess *****************
  6819 ;; Defined at:
  6820 ;;		line 297 in file "../Includes/Board/MOTEapp.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;  messageReady    1    wreg     unsigned char 
  6823 ;;  switchEvent     1   37[BANK0 ] unsigned char 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;  messageReady    1   53[BANK0 ] unsigned char 
  6826 ;;  i               1   52[BANK0 ] unsigned char 
  6827 ;;  i               1   51[BANK0 ] unsigned char 
  6828 ;;  Traw            2   49[BANK0 ] unsigned int 
  6829 ;;  buf            50    0        unsigned char [50]
  6830 ;;  joiningCompl    1   48[BANK0 ] unsigned char 
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1    wreg      enum E6542
  6833 ;; Registers used:
  6834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6835 ;; Tracked objects:
  6836 ;;		On entry : F/0
  6837 ;;		On exit  : F/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6840 ;;      Params:         0       1       0       0       0       0       0       0       0
  6841 ;;      Locals:         0      14       0       0       0       0       0       0       0
  6842 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6843 ;;      Totals:         0      17       0       0       0       0       0       0       0
  6844 ;;Total ram usage:       17 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; Hardware stack levels required when called:   17
  6847 ;; This function calls:
  6848 ;;		_ADC_GetConversion
  6849 ;;		_ADC_TempConversion
  6850 ;;		_DATAEE_WriteByte
  6851 ;;		_MOTEapp_getModemResponse
  6852 ;;		_moteApp_delayms
  6853 ;;		_oled_clear
  6854 ;;		_oled_putString
  6855 ;;		_oled_putUint16
  6856 ;;		_sendCommand
  6857 ;;		_sprintf
  6858 ;;		_strcmp
  6859 ;;		_strncmp
  6860 ;; This function is called by:
  6861 ;;		_moteHandler
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           	psect	text22
  6866  006F16                     __ptext22:
  6867                           	opt stack 0
  6868  006F16                     _moteJoiningProcess:
  6869                           	opt stack 12
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;incstack = 0
  6873                           ;moteJoiningProcess@messageReady stored from wreg
  6874  006F16  6FED               	movwf	moteJoiningProcess@messageReady& (0+255),b
  6875                           
  6876                           ;MOTEapp.c: 299: static int ch = 0;
  6877                           ;MOTEapp.c: 300: bool joiningComplete = 0;
  6878  006F18  0100               	movlb	0	; () banked
  6879  006F1A  6BE8               	clrf	moteJoiningProcess@joiningComplete& (0+255),b
  6880                           
  6881                           ;MOTEapp.c: 301: static int mode = 0;
  6882                           ;MOTEapp.c: 302: static unsigned char pkt_cnt = 0;
  6883                           ;MOTEapp.c: 303: static unsigned char float_val = 255;
  6884                           ;MOTEapp.c: 304: static bool pending_confirm = 0;
  6885                           ;MOTEapp.c: 305: char buf[50];
  6886                           ;MOTEapp.c: 306: static int skip_count = 0;
  6887                           ;MOTEapp.c: 315: switch (activeState)
  6888  006F1C  D3FC               	goto	l10100
  6889  006F1E                     l376:
  6890  006F1E  D7FF               	goto	l376
  6891  006F20                     l380:
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;MOTEapp.c: 328: LATAbits.LATA7 = 0;
  6895  006F20  9E89               	bcf	3977,7,c	;volatile
  6896                           
  6897                           ;MOTEapp.c: 329: LATAbits.LATA6 = 0;
  6898  006F22  9C89               	bcf	3977,6,c	;volatile
  6899  006F24                     l9728:
  6900                           
  6901                           ; BSR set to: 0
  6902  006F24  EC3D  F025         	call	_MOTEapp_getModemResponse	;wreg free
  6903  006F28  0900               	iorlw	0
  6904  006F2A  E1FC               	bnz	l9728
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;MOTEapp.c: 336: sendCommand("sys get ver");
  6908  006F2C  0EB9               	movlw	low STR_29
  6909  006F2E  6FB9               	movwf	sendCommand@string& (0+255),b
  6910  006F30  0E7E               	movlw	high STR_29
  6911  006F32  6FBA               	movwf	(sendCommand@string+1)& (0+255),b
  6912  006F34  EC2B  F026         	call	_sendCommand	;wreg free
  6913                           
  6914                           ;MOTEapp.c: 337: oled_clear();
  6915  006F38  EC1F  F022         	call	_oled_clear	;wreg free
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;MOTEapp.c: 338: oled_putString("get ver",0,0);
  6919  006F3C  0EBD               	movlw	low (STR_29+4)
  6920  006F3E  6FC5               	movwf	oled_putString@string& (0+255),b
  6921  006F40  0E7E               	movlw	high (STR_29+4)
  6922  006F42  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  6923  006F44  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  6924  006F46  6BC8               	clrf	oled_putString@start_page& (0+255),b
  6925  006F48  EC42  F027         	call	_oled_putString	;wreg free
  6926                           
  6927                           ;MOTEapp.c: 339: moteApp_delayms(100);
  6928  006F4C  0100               	movlb	0	; () banked
  6929  006F4E  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6930  006F50  0E64               	movlw	100
  6931  006F52  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  6932  006F54  EC14  F023         	call	_moteApp_delayms	;wreg free
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;MOTEapp.c: 340: activeState = moteReset;
  6936  006F58  0E01               	movlw	1
  6937  006F5A  D275               	goto	L13
  6938  006F5C                     l9740:
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;MOTEapp.c: 344: if ( messageReady )
  6942  006F5C  51ED               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  6943  006F5E  E102 EFC0  F03B    	bz	l10102
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;MOTEapp.c: 345: {
  6947                           ;MOTEapp.c: 346: if(strncmp(&modemResonseBuffer[2], "2903", 4) == 0)
  6948  006F64  0E9A               	movlw	low (_modemResonseBuffer+2)
  6949  006F66  6FB8               	movwf	strncmp@s1& (0+255),b
  6950  006F68  0E01               	movlw	high (_modemResonseBuffer+2)
  6951  006F6A  6FB9               	movwf	(strncmp@s1+1)& (0+255),b
  6952  006F6C  0EF8               	movlw	low STR_31
  6953  006F6E  6FBA               	movwf	strncmp@s2& (0+255),b
  6954  006F70  0E7F               	movlw	high STR_31
  6955  006F72  6FBB               	movwf	(strncmp@s2+1)& (0+255),b
  6956  006F74  6BBD               	clrf	(strncmp@len+1)& (0+255),b
  6957  006F76  0E04               	movlw	4
  6958  006F78  6FBC               	movwf	strncmp@len& (0+255),b
  6959  006F7A  EC75  F027         	call	_strncmp	;wreg free
  6960  006F7E  51B8               	movf	?_strncmp& (0+255),w,b
  6961  006F80  11B9               	iorwf	(?_strncmp+1)& (0+255),w,b
  6962  006F82  E118               	bnz	l9754
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;MOTEapp.c: 347: {
  6966                           ;MOTEapp.c: 348: sendCommand("mac set devaddr ABCD0002");
  6967  006F84  0E2C               	movlw	low STR_32
  6968  006F86  6FB9               	movwf	sendCommand@string& (0+255),b
  6969  006F88  0E7C               	movlw	high STR_32
  6970  006F8A  6FBA               	movwf	(sendCommand@string+1)& (0+255),b
  6971  006F8C  EC2B  F026         	call	_sendCommand	;wreg free
  6972                           
  6973                           ;MOTEapp.c: 349: oled_clear();
  6974  006F90  EC1F  F022         	call	_oled_clear	;wreg free
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;MOTEapp.c: 350: oled_putString("set devaddr",0,0);
  6978  006F94  0EAD               	movlw	low STR_33
  6979  006F96  6FC5               	movwf	oled_putString@string& (0+255),b
  6980  006F98  0E7E               	movlw	high STR_33
  6981  006F9A  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  6982  006F9C  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  6983  006F9E  6BC8               	clrf	oled_putString@start_page& (0+255),b
  6984  006FA0  EC42  F027         	call	_oled_putString	;wreg free
  6985                           
  6986                           ;MOTEapp.c: 351: moteApp_delayms(80);
  6987  006FA4  0100               	movlb	0	; () banked
  6988  006FA6  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6989  006FA8  0E50               	movlw	80
  6990  006FAA  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  6991  006FAC  EC14  F023         	call	_moteApp_delayms	;wreg free
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;MOTEapp.c: 352: activeState = moteSetDevaddr;
  6995  006FB0  0E02               	movlw	2
  6996  006FB2  D249               	goto	L13
  6997  006FB4                     l9754:
  6998                           
  6999                           ; BSR set to: 0
  7000                           ;MOTEapp.c: 354: else
  7001                           ;MOTEapp.c: 355: {
  7002                           ;MOTEapp.c: 356: oled_clear();
  7003  006FB4  EC1F  F022         	call	_oled_clear	;wreg free
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;MOTEapp.c: 357: oled_putString(modemResonseBuffer,0,3);
  7007  006FB8  0E98               	movlw	low _modemResonseBuffer
  7008  006FBA  6FC5               	movwf	oled_putString@string& (0+255),b
  7009  006FBC  0E01               	movlw	high _modemResonseBuffer
  7010  006FBE  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7011  006FC0  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7012  006FC2  0E03               	movlw	3
  7013  006FC4  6FC8               	movwf	oled_putString@start_page& (0+255),b
  7014  006FC6  EC42  F027         	call	_oled_putString	;wreg free
  7015                           
  7016                           ;MOTEapp.c: 358: moteApp_delayms(1000);
  7017  006FCA  0E03               	movlw	3
  7018  006FCC  0100               	movlb	0	; () banked
  7019  006FCE  6FB9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7020  006FD0  0EE8               	movlw	232
  7021  006FD2  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7022  006FD4  EC14  F023         	call	_moteApp_delayms	;wreg free
  7023  006FD8                     l9760:
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;MOTEapp.c: 359: activeState = moteStartup;
  7027  006FD8  6B94               	clrf	_activeState& (0+255),b
  7028  006FDA  D3D2               	goto	l10102
  7029  006FDC                     l9762:
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;MOTEapp.c: 364: if ( messageReady )
  7033  006FDC  51ED               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7034  006FDE  E101 D3CF          	bz	l10102
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;MOTEapp.c: 365: {
  7038                           ;MOTEapp.c: 366: if(strcmp(modemResonseBuffer, "ok") == 0)
  7039  006FE2  0E98               	movlw	low _modemResonseBuffer
  7040  006FE4  6FB8               	movwf	strcmp@s1& (0+255),b
  7041  006FE6  0E01               	movlw	high _modemResonseBuffer
  7042  006FE8  6FB9               	movwf	(strcmp@s1+1)& (0+255),b
  7043  006FEA  0EBF               	movlw	low (STR_64+12)
  7044  006FEC  6FBA               	movwf	strcmp@s2& (0+255),b
  7045  006FEE  0E7D               	movlw	high (STR_64+12)
  7046  006FF0  6FBB               	movwf	(strcmp@s2+1)& (0+255),b
  7047  006FF2  ECCF  F028         	call	_strcmp	;wreg free
  7048  006FF6  51B8               	movf	?_strcmp& (0+255),w,b
  7049  006FF8  11B9               	iorwf	(?_strcmp+1)& (0+255),w,b
  7050  006FFA  E1EE               	bnz	l9760
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;MOTEapp.c: 367: {
  7054                           ;MOTEapp.c: 368: sendCommand("mac set appskey 2B7E151628AED2A6ABF7158809CF4F3C");
  7055  006FFC  0E93               	movlw	low STR_35
  7056  006FFE  6FB9               	movwf	sendCommand@string& (0+255),b
  7057  007000  0E7B               	movlw	high STR_35
  7058  007002  6FBA               	movwf	(sendCommand@string+1)& (0+255),b
  7059  007004  EC2B  F026         	call	_sendCommand	;wreg free
  7060                           
  7061                           ;MOTEapp.c: 369: oled_clear();
  7062  007008  EC1F  F022         	call	_oled_clear	;wreg free
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;MOTEapp.c: 370: oled_putString("set appskey",0,0);
  7066  00700C  0ED1               	movlw	low STR_36
  7067  00700E  6FC5               	movwf	oled_putString@string& (0+255),b
  7068  007010  0E7E               	movlw	high STR_36
  7069  007012  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7070  007014  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7071  007016  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7072  007018  EC42  F027         	call	_oled_putString	;wreg free
  7073                           
  7074                           ;MOTEapp.c: 371: moteApp_delayms(80);
  7075  00701C  0100               	movlb	0	; () banked
  7076  00701E  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7077  007020  0E50               	movlw	80
  7078  007022  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7079  007024  EC14  F023         	call	_moteApp_delayms	;wreg free
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;MOTEapp.c: 372: activeState = moteSetAppskey;
  7083  007028  0E03               	movlw	3
  7084  00702A  D20D               	goto	L13
  7085  00702C                     l9776:
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;MOTEapp.c: 381: if ( messageReady )
  7089  00702C  51ED               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7090  00702E  E101 D3A7          	bz	l10102
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;MOTEapp.c: 382: {
  7094                           ;MOTEapp.c: 383: if(strcmp(modemResonseBuffer, "ok") == 0)
  7095  007032  0E98               	movlw	low _modemResonseBuffer
  7096  007034  6FB8               	movwf	strcmp@s1& (0+255),b
  7097  007036  0E01               	movlw	high _modemResonseBuffer
  7098  007038  6FB9               	movwf	(strcmp@s1+1)& (0+255),b
  7099  00703A  0EBF               	movlw	low (STR_64+12)
  7100  00703C  6FBA               	movwf	strcmp@s2& (0+255),b
  7101  00703E  0E7D               	movlw	high (STR_64+12)
  7102  007040  6FBB               	movwf	(strcmp@s2+1)& (0+255),b
  7103  007042  ECCF  F028         	call	_strcmp	;wreg free
  7104  007046  51B8               	movf	?_strcmp& (0+255),w,b
  7105  007048  11B9               	iorwf	(?_strcmp+1)& (0+255),w,b
  7106  00704A  E1C6               	bnz	l9760
  7107                           
  7108                           ; BSR set to: 0
  7109                           ;MOTEapp.c: 384: {
  7110                           ;MOTEapp.c: 386: sendCommand("mac set nwkskey 2B7E151628AED2A6ABF7158809CF4F3C");
  7111  00704C  0E62               	movlw	low STR_38
  7112  00704E  6FB9               	movwf	sendCommand@string& (0+255),b
  7113  007050  0E7B               	movlw	high STR_38
  7114  007052  6FBA               	movwf	(sendCommand@string+1)& (0+255),b
  7115  007054  EC2B  F026         	call	_sendCommand	;wreg free
  7116                           
  7117                           ;MOTEapp.c: 387: oled_clear();
  7118  007058  EC1F  F022         	call	_oled_clear	;wreg free
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;MOTEapp.c: 388: oled_putString("set nwkskey",0,0);
  7122  00705C  0EC5               	movlw	low STR_39
  7123  00705E  6FC5               	movwf	oled_putString@string& (0+255),b
  7124  007060  0E7E               	movlw	high STR_39
  7125  007062  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7126  007064  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7127  007066  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7128  007068  EC42  F027         	call	_oled_putString	;wreg free
  7129                           
  7130                           ;MOTEapp.c: 389: moteApp_delayms(80);
  7131  00706C  0100               	movlb	0	; () banked
  7132  00706E  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7133  007070  0E50               	movlw	80
  7134  007072  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7135  007074  EC14  F023         	call	_moteApp_delayms	;wreg free
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;MOTEapp.c: 390: activeState = moteSetNwkskey;
  7139  007078  0E04               	movlw	4
  7140  00707A  D1E5               	goto	L13
  7141  00707C                     l9790:
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;MOTEapp.c: 399: if ( messageReady )
  7145  00707C  51ED               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7146  00707E  E101 D37F          	bz	l10102
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;MOTEapp.c: 400: {
  7150                           ;MOTEapp.c: 401: if(strcmp(modemResonseBuffer, "ok") == 0)
  7151  007082  0E98               	movlw	low _modemResonseBuffer
  7152  007084  6FB8               	movwf	strcmp@s1& (0+255),b
  7153  007086  0E01               	movlw	high _modemResonseBuffer
  7154  007088  6FB9               	movwf	(strcmp@s1+1)& (0+255),b
  7155  00708A  0EBF               	movlw	low (STR_64+12)
  7156  00708C  6FBA               	movwf	strcmp@s2& (0+255),b
  7157  00708E  0E7D               	movlw	high (STR_64+12)
  7158  007090  6FBB               	movwf	(strcmp@s2+1)& (0+255),b
  7159  007092  ECCF  F028         	call	_strcmp	;wreg free
  7160  007096  51B8               	movf	?_strcmp& (0+255),w,b
  7161  007098  11B9               	iorwf	(?_strcmp+1)& (0+255),w,b
  7162  00709A  E19E               	bnz	l9760
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;MOTEapp.c: 402: {
  7166                           ;MOTEapp.c: 404: sendCommand("mac set adr off");
  7167  00709C  0E83               	movlw	low STR_41
  7168  00709E  6FB9               	movwf	sendCommand@string& (0+255),b
  7169  0070A0  0E7D               	movlw	high STR_41
  7170  0070A2  6FBA               	movwf	(sendCommand@string+1)& (0+255),b
  7171  0070A4  EC2B  F026         	call	_sendCommand	;wreg free
  7172                           
  7173                           ;MOTEapp.c: 405: oled_clear();
  7174  0070A8  EC1F  F022         	call	_oled_clear	;wreg free
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;MOTEapp.c: 406: oled_putString("set adr",0,0);
  7178  0070AC  0E93               	movlw	low STR_42
  7179  0070AE  6FC5               	movwf	oled_putString@string& (0+255),b
  7180  0070B0  0E7F               	movlw	high STR_42
  7181  0070B2  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7182  0070B4  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7183  0070B6  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7184  0070B8  EC42  F027         	call	_oled_putString	;wreg free
  7185                           
  7186                           ;MOTEapp.c: 407: moteApp_delayms(80);
  7187  0070BC  0100               	movlb	0	; () banked
  7188  0070BE  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7189  0070C0  0E50               	movlw	80
  7190  0070C2  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7191  0070C4  EC14  F023         	call	_moteApp_delayms	;wreg free
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;MOTEapp.c: 408: activeState = moteSetAdr;
  7195  0070C8  0E05               	movlw	5
  7196  0070CA  D1BD               	goto	L13
  7197  0070CC                     l9804:
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;MOTEapp.c: 417: if ( messageReady )
  7201  0070CC  51ED               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7202  0070CE  E101 D357          	bz	l10102
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;MOTEapp.c: 418: {
  7206                           ;MOTEapp.c: 419: if(strcmp(modemResonseBuffer, "ok") == 0)
  7207  0070D2  0E98               	movlw	low _modemResonseBuffer
  7208  0070D4  6FB8               	movwf	strcmp@s1& (0+255),b
  7209  0070D6  0E01               	movlw	high _modemResonseBuffer
  7210  0070D8  6FB9               	movwf	(strcmp@s1+1)& (0+255),b
  7211  0070DA  0EBF               	movlw	low (STR_64+12)
  7212  0070DC  6FBA               	movwf	strcmp@s2& (0+255),b
  7213  0070DE  0E7D               	movlw	high (STR_64+12)
  7214  0070E0  6FBB               	movwf	(strcmp@s2+1)& (0+255),b
  7215  0070E2  ECCF  F028         	call	_strcmp	;wreg free
  7216  0070E6  51B8               	movf	?_strcmp& (0+255),w,b
  7217  0070E8  11B9               	iorwf	(?_strcmp+1)& (0+255),w,b
  7218  0070EA  E001 D775          	bnz	l9760
  7219                           
  7220                           ; BSR set to: 0
  7221                           ;MOTEapp.c: 420: {
  7222                           ;MOTEapp.c: 422: sendCommand("mac set sync 34");
  7223  0070EE  0E73               	movlw	low STR_44
  7224  0070F0  6FB9               	movwf	sendCommand@string& (0+255),b
  7225  0070F2  0E7D               	movlw	high STR_44
  7226  0070F4  6FBA               	movwf	(sendCommand@string+1)& (0+255),b
  7227  0070F6  EC2B  F026         	call	_sendCommand	;wreg free
  7228                           
  7229                           ;MOTEapp.c: 423: oled_clear();
  7230  0070FA  EC1F  F022         	call	_oled_clear	;wreg free
  7231                           
  7232                           ; BSR set to: 0
  7233                           ;MOTEapp.c: 424: oled_putString("set sync",0,0);
  7234  0070FE  0E3B               	movlw	low STR_45
  7235  007100  6FC5               	movwf	oled_putString@string& (0+255),b
  7236  007102  0E7F               	movlw	high STR_45
  7237  007104  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7238  007106  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7239  007108  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7240  00710A  EC42  F027         	call	_oled_putString	;wreg free
  7241                           
  7242                           ;MOTEapp.c: 425: moteApp_delayms(80);
  7243  00710E  0100               	movlb	0	; () banked
  7244  007110  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7245  007112  0E50               	movlw	80
  7246  007114  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7247  007116  EC14  F023         	call	_moteApp_delayms	;wreg free
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;MOTEapp.c: 426: activeState = moteSetSync;
  7251  00711A  0E07               	movlw	7
  7252  00711C  D194               	goto	L13
  7253  00711E                     l9818:
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;MOTEapp.c: 435: if ( messageReady )
  7257  00711E  51ED               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7258  007120  E101 D32E          	bz	l10102
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;MOTEapp.c: 436: {
  7262                           ;MOTEapp.c: 437: if(strcmp(modemResonseBuffer, "ok") == 0)
  7263  007124  0E98               	movlw	low _modemResonseBuffer
  7264  007126  6FB8               	movwf	strcmp@s1& (0+255),b
  7265  007128  0E01               	movlw	high _modemResonseBuffer
  7266  00712A  6FB9               	movwf	(strcmp@s1+1)& (0+255),b
  7267  00712C  0EBF               	movlw	low (STR_64+12)
  7268  00712E  6FBA               	movwf	strcmp@s2& (0+255),b
  7269  007130  0E7D               	movlw	high (STR_64+12)
  7270  007132  6FBB               	movwf	(strcmp@s2+1)& (0+255),b
  7271  007134  ECCF  F028         	call	_strcmp	;wreg free
  7272  007138  51B8               	movf	?_strcmp& (0+255),w,b
  7273  00713A  11B9               	iorwf	(?_strcmp+1)& (0+255),w,b
  7274  00713C  E001 D74C          	bnz	l9760
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;MOTEapp.c: 438: {
  7278                           ;MOTEapp.c: 440: sendCommand("mac set rx2 8 923300000");
  7279  007140  0E5D               	movlw	low STR_47
  7280  007142  6FB9               	movwf	sendCommand@string& (0+255),b
  7281  007144  0E7C               	movlw	high STR_47
  7282  007146  6FBA               	movwf	(sendCommand@string+1)& (0+255),b
  7283  007148  EC2B  F026         	call	_sendCommand	;wreg free
  7284                           
  7285                           ;MOTEapp.c: 441: oled_clear();
  7286  00714C  EC1F  F022         	call	_oled_clear	;wreg free
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;MOTEapp.c: 442: oled_putString("set rx2",0,0);
  7290  007150  0E8B               	movlw	low STR_48
  7291  007152  6FC5               	movwf	oled_putString@string& (0+255),b
  7292  007154  0E7F               	movlw	high STR_48
  7293  007156  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7294  007158  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7295  00715A  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7296  00715C  EC42  F027         	call	_oled_putString	;wreg free
  7297                           
  7298                           ;MOTEapp.c: 443: moteApp_delayms(80);
  7299  007160  0100               	movlb	0	; () banked
  7300  007162  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7301  007164  0E50               	movlw	80
  7302  007166  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7303  007168  EC14  F023         	call	_moteApp_delayms	;wreg free
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;MOTEapp.c: 444: ch = 0;
  7307  00716C  6B8B               	clrf	moteJoiningProcess@ch& (0+255),b
  7308  00716E  6B8C               	clrf	(moteJoiningProcess@ch+1)& (0+255),b
  7309  007170                     l9832:
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;MOTEapp.c: 445: activeState = moteSetRx2;
  7313  007170  0E06               	movlw	6
  7314  007172  D169               	goto	L13
  7315  007174                     l9834:
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;MOTEapp.c: 455: if ( messageReady )
  7319  007174  51ED               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7320  007176  E101 D303          	bz	l10102
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;MOTEapp.c: 456: {
  7324                           ;MOTEapp.c: 457: if(strcmp(modemResonseBuffer, "ok") == 0)
  7325  00717A  0E98               	movlw	low _modemResonseBuffer
  7326  00717C  6FB8               	movwf	strcmp@s1& (0+255),b
  7327  00717E  0E01               	movlw	high _modemResonseBuffer
  7328  007180  6FB9               	movwf	(strcmp@s1+1)& (0+255),b
  7329  007182  0EBF               	movlw	low (STR_64+12)
  7330  007184  6FBA               	movwf	strcmp@s2& (0+255),b
  7331  007186  0E7D               	movlw	high (STR_64+12)
  7332  007188  6FBB               	movwf	(strcmp@s2+1)& (0+255),b
  7333  00718A  ECCF  F028         	call	_strcmp	;wreg free
  7334  00718E  51B8               	movf	?_strcmp& (0+255),w,b
  7335  007190  11B9               	iorwf	(?_strcmp+1)& (0+255),w,b
  7336  007192  E001 D721          	bnz	l9760
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;MOTEapp.c: 458: {
  7340                           ;MOTEapp.c: 460: sprintf(cmd,"mac set ch status %d %s",
  7341                           ;MOTEapp.c: 461: ch,
  7342                           ;MOTEapp.c: 462: (ch>=49 && ch<=51)?"on":"off");
  7343  007196  BF8C               	btfsc	(moteJoiningProcess@ch+1)& (0+255),7,b
  7344  007198  D00C               	goto	l9842
  7345  00719A  518C               	movf	(moteJoiningProcess@ch+1)& (0+255),w,b
  7346  00719C  E103               	bnz	u8140
  7347  00719E  0E31               	movlw	49
  7348  0071A0  5D8B               	subwf	moteJoiningProcess@ch& (0+255),w,b
  7349  0071A2  E307               	bnc	l9842
  7350  0071A4                     u8140:
  7351                           
  7352                           ; BSR set to: 0
  7353  0071A4  BF8C               	btfsc	(moteJoiningProcess@ch+1)& (0+255),7,b
  7354  0071A6  D009               	goto	l9844
  7355  0071A8  518C               	movf	(moteJoiningProcess@ch+1)& (0+255),w,b
  7356  0071AA  E103               	bnz	u8150
  7357  0071AC  0E34               	movlw	52
  7358  0071AE  5D8B               	subwf	moteJoiningProcess@ch& (0+255),w,b
  7359  0071B0  E304               	bnc	l9844
  7360  0071B2                     u8150:
  7361  0071B2                     l9842:
  7362                           
  7363                           ; BSR set to: 0
  7364  0071B2  0E8F               	movlw	low (STR_41+12)
  7365  0071B4  6FE0               	movwf	_moteJoiningProcess$1339& (0+255),b
  7366  0071B6  0E7D               	movlw	high (STR_41+12)
  7367  0071B8  D003               	goto	L10
  7368  0071BA                     l9844:
  7369                           
  7370                           ; BSR set to: 0
  7371  0071BA  0ECE               	movlw	low (STR_91+12)
  7372  0071BC  6FE0               	movwf	_moteJoiningProcess$1339& (0+255),b
  7373  0071BE  0E7D               	movlw	high (STR_91+12)
  7374  0071C0                     L10:
  7375  0071C0  6FE1               	movwf	(_moteJoiningProcess$1339+1)& (0+255),b
  7376                           
  7377                           ; BSR set to: 0
  7378  0071C2  0E58               	movlw	low _cmd
  7379  0071C4  6FC4               	movwf	sprintf@sp& (0+255),b
  7380  0071C6  0E01               	movlw	high _cmd
  7381  0071C8  6FC5               	movwf	(sprintf@sp+1)& (0+255),b
  7382  0071CA  0E8D               	movlw	low STR_50
  7383  0071CC  6FC6               	movwf	sprintf@f& (0+255),b
  7384  0071CE  0E7C               	movlw	high STR_50
  7385  0071D0  6FC7               	movwf	(sprintf@f+1)& (0+255),b
  7386  0071D2  C08B  F0C8         	movff	moteJoiningProcess@ch,?_sprintf+4
  7387  0071D6  C08C  F0C9         	movff	moteJoiningProcess@ch+1,?_sprintf+5
  7388  0071DA  C0E0  F0CA         	movff	_moteJoiningProcess$1339,?_sprintf+6
  7389  0071DE  C0E1  F0CB         	movff	_moteJoiningProcess$1339+1,?_sprintf+7
  7390  0071E2  ECB5  F035         	call	_sprintf	;wreg free
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;MOTEapp.c: 463: sendCommand(cmd);
  7394  0071E6  0E58               	movlw	low _cmd
  7395  0071E8  6FB9               	movwf	sendCommand@string& (0+255),b
  7396  0071EA  0E01               	movlw	high _cmd
  7397  0071EC  6FBA               	movwf	(sendCommand@string+1)& (0+255),b
  7398  0071EE  EC2B  F026         	call	_sendCommand	;wreg free
  7399                           
  7400                           ;MOTEapp.c: 464: oled_clear();
  7401  0071F2  EC1F  F022         	call	_oled_clear	;wreg free
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;MOTEapp.c: 465: oled_putString("set ch",0,0);
  7405  0071F6  0EEA               	movlw	low STR_53
  7406  0071F8  6FC5               	movwf	oled_putString@string& (0+255),b
  7407  0071FA  0E7F               	movlw	high STR_53
  7408  0071FC  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7409  0071FE  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7410  007200  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7411  007202  EC42  F027         	call	_oled_putString	;wreg free
  7412                           
  7413                           ;MOTEapp.c: 466: oled_putString(&cmd[18],0,1);
  7414  007206  0E6A               	movlw	low (_cmd+18)
  7415  007208  0100               	movlb	0	; () banked
  7416  00720A  6FC5               	movwf	oled_putString@string& (0+255),b
  7417  00720C  0E01               	movlw	high (_cmd+18)
  7418  00720E  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7419  007210  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7420  007212  0E01               	movlw	1
  7421  007214  6FC8               	movwf	oled_putString@start_page& (0+255),b
  7422  007216  EC42  F027         	call	_oled_putString	;wreg free
  7423                           
  7424                           ;MOTEapp.c: 467: moteApp_delayms(80);
  7425  00721A  0100               	movlb	0	; () banked
  7426  00721C  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7427  00721E  0E50               	movlw	80
  7428  007220  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7429  007222  EC14  F023         	call	_moteApp_delayms	;wreg free
  7430                           
  7431                           ; BSR set to: 0
  7432                           ;MOTEapp.c: 468: ch++;
  7433  007226  4B8B               	infsnz	moteJoiningProcess@ch& (0+255),f,b
  7434  007228  2B8C               	incf	(moteJoiningProcess@ch+1)& (0+255),f,b
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;MOTEapp.c: 469: if (ch<72) {
  7438  00722A  BF8C               	btfsc	(moteJoiningProcess@ch+1)& (0+255),7,b
  7439  00722C  D7A1               	goto	l9832
  7440  00722E  518C               	movf	(moteJoiningProcess@ch+1)& (0+255),w,b
  7441  007230  E103               	bnz	l9864
  7442  007232  0E48               	movlw	72
  7443  007234  5D8B               	subwf	moteJoiningProcess@ch& (0+255),w,b
  7444  007236  E39C               	bnc	l9832
  7445  007238                     l9864:
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;MOTEapp.c: 472: activeState = moteSetChStatus;
  7449  007238  0E08               	movlw	8
  7450  00723A  D105               	goto	L13
  7451  00723C                     l9866:
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;MOTEapp.c: 482: if ( messageReady )
  7455  00723C  51ED               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7456  00723E  E101 D29F          	bz	l10102
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;MOTEapp.c: 483: {
  7460                           ;MOTEapp.c: 484: if(strcmp(modemResonseBuffer, "ok") == 0)
  7461  007242  0E98               	movlw	low _modemResonseBuffer
  7462  007244  6FB8               	movwf	strcmp@s1& (0+255),b
  7463  007246  0E01               	movlw	high _modemResonseBuffer
  7464  007248  6FB9               	movwf	(strcmp@s1+1)& (0+255),b
  7465  00724A  0EBF               	movlw	low (STR_64+12)
  7466  00724C  6FBA               	movwf	strcmp@s2& (0+255),b
  7467  00724E  0E7D               	movlw	high (STR_64+12)
  7468  007250  6FBB               	movwf	(strcmp@s2+1)& (0+255),b
  7469  007252  ECCF  F028         	call	_strcmp	;wreg free
  7470  007256  51B8               	movf	?_strcmp& (0+255),w,b
  7471  007258  11B9               	iorwf	(?_strcmp+1)& (0+255),w,b
  7472  00725A  E001 D6BD          	bnz	l9760
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;MOTEapp.c: 485: {
  7476                           ;MOTEapp.c: 486: moteApp_delayms(200);
  7477  00725E  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7478  007260  0EC8               	movlw	200
  7479  007262  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7480  007264  EC14  F023         	call	_moteApp_delayms	;wreg free
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;MOTEapp.c: 487: sendCommand("mac join abp");
  7484  007268  0E54               	movlw	low STR_55
  7485  00726A  6FB9               	movwf	sendCommand@string& (0+255),b
  7486  00726C  0E7E               	movlw	high STR_55
  7487  00726E  6FBA               	movwf	(sendCommand@string+1)& (0+255),b
  7488  007270  EC2B  F026         	call	_sendCommand	;wreg free
  7489                           
  7490                           ;MOTEapp.c: 488: oled_clear();
  7491  007274  EC1F  F022         	call	_oled_clear	;wreg free
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;MOTEapp.c: 489: oled_putString("join abp",0,0);
  7495  007278  0E58               	movlw	low (STR_55+4)
  7496  00727A  6FC5               	movwf	oled_putString@string& (0+255),b
  7497  00727C  0E7E               	movlw	high (STR_55+4)
  7498  00727E  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7499  007280  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7500  007282  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7501  007284  EC42  F027         	call	_oled_putString	;wreg free
  7502                           
  7503                           ;MOTEapp.c: 490: moteApp_delayms(80);
  7504  007288  0100               	movlb	0	; () banked
  7505  00728A  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7506  00728C  0E50               	movlw	80
  7507  00728E  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7508  007290  EC14  F023         	call	_moteApp_delayms	;wreg free
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;MOTEapp.c: 491: activeState = moteJoinAbp;
  7512  007294  0E09               	movlw	9
  7513  007296  D0D7               	goto	L13
  7514  007298                     l9882:
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;MOTEapp.c: 500: if ( messageReady )
  7518  007298  51ED               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7519  00729A  E101 D271          	bz	l10102
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;MOTEapp.c: 501: {
  7523                           ;MOTEapp.c: 502: if(strcmp(modemResonseBuffer, "ok") == 0)
  7524  00729E  0E98               	movlw	low _modemResonseBuffer
  7525  0072A0  6FB8               	movwf	strcmp@s1& (0+255),b
  7526  0072A2  0E01               	movlw	high _modemResonseBuffer
  7527  0072A4  6FB9               	movwf	(strcmp@s1+1)& (0+255),b
  7528  0072A6  0EBF               	movlw	low (STR_64+12)
  7529  0072A8  6FBA               	movwf	strcmp@s2& (0+255),b
  7530  0072AA  0E7D               	movlw	high (STR_64+12)
  7531  0072AC  6FBB               	movwf	(strcmp@s2+1)& (0+255),b
  7532  0072AE  ECCF  F028         	call	_strcmp	;wreg free
  7533  0072B2  51B8               	movf	?_strcmp& (0+255),w,b
  7534  0072B4  11B9               	iorwf	(?_strcmp+1)& (0+255),w,b
  7535  0072B6  E001 D68F          	bnz	l9760
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;MOTEapp.c: 503: {
  7539                           ;MOTEapp.c: 505: oled_clear();
  7540  0072BA  EC1F  F022         	call	_oled_clear	;wreg free
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;MOTEapp.c: 506: oled_putString("Wait accepted...",0,0);
  7544  0072BE  0EDB               	movlw	low STR_58
  7545  0072C0  6FC5               	movwf	oled_putString@string& (0+255),b
  7546  0072C2  0E7C               	movlw	high STR_58
  7547  0072C4  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7548  0072C6  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7549  0072C8  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7550  0072CA  EC42  F027         	call	_oled_putString	;wreg free
  7551                           
  7552                           ;MOTEapp.c: 507: moteApp_delayms(80);
  7553  0072CE  0100               	movlb	0	; () banked
  7554  0072D0  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7555  0072D2  0E50               	movlw	80
  7556  0072D4  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7557  0072D6  EC14  F023         	call	_moteApp_delayms	;wreg free
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;MOTEapp.c: 508: activeState = moteWaitAccepted;
  7561  0072DA  0E0A               	movlw	10
  7562  0072DC  D0B4               	goto	L13
  7563  0072DE                     l9894:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;MOTEapp.c: 517: if ( messageReady )
  7567  0072DE  51ED               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7568  0072E0  E101 D24E          	bz	l10102
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;MOTEapp.c: 518: {
  7572                           ;MOTEapp.c: 519: if(strcmp(modemResonseBuffer, "accepted") == 0)
  7573  0072E4  0E98               	movlw	low _modemResonseBuffer
  7574  0072E6  6FB8               	movwf	strcmp@s1& (0+255),b
  7575  0072E8  0E01               	movlw	high _modemResonseBuffer
  7576  0072EA  6FB9               	movwf	(strcmp@s1+1)& (0+255),b
  7577  0072EC  0E44               	movlw	low STR_59
  7578  0072EE  6FBA               	movwf	strcmp@s2& (0+255),b
  7579  0072F0  0E7F               	movlw	high STR_59
  7580  0072F2  6FBB               	movwf	(strcmp@s2+1)& (0+255),b
  7581  0072F4  ECCF  F028         	call	_strcmp	;wreg free
  7582  0072F8  51B8               	movf	?_strcmp& (0+255),w,b
  7583  0072FA  11B9               	iorwf	(?_strcmp+1)& (0+255),w,b
  7584  0072FC  E11A               	bnz	l9910
  7585                           
  7586                           ; BSR set to: 0
  7587                           ;MOTEapp.c: 520: {
  7588                           ;MOTEapp.c: 525: sendCommand("mac tx uncnf 1 00000000");
  7589  0072FE  0E45               	movlw	low STR_60
  7590  007300  6FB9               	movwf	sendCommand@string& (0+255),b
  7591  007302  0E7C               	movlw	high STR_60
  7592  007304  6FBA               	movwf	(sendCommand@string+1)& (0+255),b
  7593  007306  EC2B  F026         	call	_sendCommand	;wreg free
  7594                           
  7595                           ;MOTEapp.c: 526: oled_clear();
  7596  00730A  EC1F  F022         	call	_oled_clear	;wreg free
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;MOTEapp.c: 527: oled_putString("ini tx",0,0);
  7600  00730E  0EF1               	movlw	low STR_61
  7601  007310  6FC5               	movwf	oled_putString@string& (0+255),b
  7602  007312  0E7F               	movlw	high STR_61
  7603  007314  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7604  007316  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7605  007318  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7606  00731A  EC42  F027         	call	_oled_putString	;wreg free
  7607                           
  7608                           ;MOTEapp.c: 528: moteApp_delayms(150);
  7609  00731E  0100               	movlb	0	; () banked
  7610  007320  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7611  007322  0E96               	movlw	150
  7612  007324  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7613  007326  EC14  F023         	call	_moteApp_delayms	;wreg free
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;MOTEapp.c: 529: activeState = moteIniTx;
  7617  00732A  0E0B               	movlw	11
  7618  00732C  6F94               	movwf	_activeState& (0+255),b
  7619                           
  7620                           ; BSR set to: 0
  7621                           ;MOTEapp.c: 530: LATAbits.LATA6 = 1;
  7622  00732E  8C89               	bsf	3977,6,c	;volatile
  7623                           
  7624                           ;MOTEapp.c: 531: }
  7625  007330  D227               	goto	l10102
  7626  007332                     l9910:
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;MOTEapp.c: 532: else
  7630                           ;MOTEapp.c: 533: {
  7631                           ;MOTEapp.c: 534: oled_clear();
  7632  007332  EC1F  F022         	call	_oled_clear	;wreg free
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;MOTEapp.c: 535: oled_putString("moteWaitAccepted",0,0);
  7636  007336  0E0E               	movlw	low STR_62
  7637  007338  6FC5               	movwf	oled_putString@string& (0+255),b
  7638  00733A  0E7D               	movlw	high STR_62
  7639  00733C  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7640  00733E  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7641  007340  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7642  007342  EC42  F027         	call	_oled_putString	;wreg free
  7643                           
  7644                           ;MOTEapp.c: 536: activeState = moteStartup;
  7645  007346  0100               	movlb	0	; () banked
  7646  007348  6B94               	clrf	_activeState& (0+255),b
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;MOTEapp.c: 537: moteApp_delayms(500);
  7650  00734A  0E01               	movlw	1
  7651  00734C  6FB9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7652  00734E  0EF4               	movlw	244
  7653  007350  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7654  007352  EC14  F023         	call	_moteApp_delayms	;wreg free
  7655  007356  D023               	goto	l9932
  7656  007358                     l9920:
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;MOTEapp.c: 543: if ( messageReady )
  7660  007358  51ED               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7661  00735A  E101 D211          	bz	l10102
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;MOTEapp.c: 544: {
  7665                           ;MOTEapp.c: 545: if(strcmp(modemResonseBuffer, "ok") == 0)
  7666  00735E  0E98               	movlw	low _modemResonseBuffer
  7667  007360  6FB8               	movwf	strcmp@s1& (0+255),b
  7668  007362  0E01               	movlw	high _modemResonseBuffer
  7669  007364  6FB9               	movwf	(strcmp@s1+1)& (0+255),b
  7670  007366  0EBF               	movlw	low (STR_64+12)
  7671  007368  6FBA               	movwf	strcmp@s2& (0+255),b
  7672  00736A  0E7D               	movlw	high (STR_64+12)
  7673  00736C  6FBB               	movwf	(strcmp@s2+1)& (0+255),b
  7674  00736E  ECCF  F028         	call	_strcmp	;wreg free
  7675  007372  51B8               	movf	?_strcmp& (0+255),w,b
  7676  007374  11B9               	iorwf	(?_strcmp+1)& (0+255),w,b
  7677  007376  E115               	bnz	l9934
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;MOTEapp.c: 546: {
  7681                           ;MOTEapp.c: 547: oled_clear();
  7682  007378  EC1F  F022         	call	_oled_clear	;wreg free
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;MOTEapp.c: 548: oled_putString("wait mac_tx_ok",0,0);
  7686  00737C  0EB3               	movlw	low STR_64
  7687  00737E  6FC5               	movwf	oled_putString@string& (0+255),b
  7688  007380  0E7D               	movlw	high STR_64
  7689  007382  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7690  007384  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7691  007386  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7692  007388  EC42  F027         	call	_oled_putString	;wreg free
  7693                           
  7694                           ;MOTEapp.c: 549: moteApp_delayms(3000);
  7695  00738C  0E0B               	movlw	11
  7696  00738E  0100               	movlb	0	; () banked
  7697  007390  6FB9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7698  007392  0EB8               	movlw	184
  7699  007394  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7700  007396  EC14  F023         	call	_moteApp_delayms	;wreg free
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;MOTEapp.c: 550: activeState = moteWaitIniTxOk;
  7704  00739A  0E0C               	movlw	12
  7705  00739C  6F94               	movwf	_activeState& (0+255),b
  7706  00739E                     l9932:
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;MOTEapp.c: 551: LATAbits.LATA7 = 1;
  7710  00739E  8E89               	bsf	3977,7,c	;volatile
  7711                           
  7712                           ;MOTEapp.c: 552: }
  7713  0073A0  D1EF               	goto	l10102
  7714  0073A2                     l9934:
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;MOTEapp.c: 554: else
  7718                           ;MOTEapp.c: 555: {
  7719                           ;MOTEapp.c: 556: oled_clear();
  7720  0073A2  EC1F  F022         	call	_oled_clear	;wreg free
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;MOTEapp.c: 557: oled_putString("moteIniTx",0,0);
  7724  0073A6  0E14               	movlw	low STR_65
  7725  0073A8  6FC5               	movwf	oled_putString@string& (0+255),b
  7726  0073AA  0E7F               	movlw	high STR_65
  7727  0073AC  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7728  0073AE  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7729  0073B0  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7730  0073B2  EC42  F027         	call	_oled_putString	;wreg free
  7731                           
  7732                           ;MOTEapp.c: 558: activeState = moteStartup;
  7733  0073B6  0100               	movlb	0	; () banked
  7734  0073B8  6B94               	clrf	_activeState& (0+255),b
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;MOTEapp.c: 559: moteApp_delayms(500);
  7738  0073BA  0E01               	movlw	1
  7739  0073BC  6FB9               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7740  0073BE  0EF4               	movlw	244
  7741  0073C0  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7742  0073C2  EC14  F023         	call	_moteApp_delayms	;wreg free
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;MOTEapp.c: 560: LATAbits.LATA6 = 0;
  7746  0073C6  9C89               	bcf	3977,6,c	;volatile
  7747  0073C8  D1DB               	goto	l10102
  7748  0073CA                     l436:
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;MOTEapp.c: 566: {
  7752                           ;MOTEapp.c: 568: {
  7753                           ;MOTEapp.c: 569: LATAbits.LATA7 = 1;
  7754  0073CA  8E89               	bsf	3977,7,c	;volatile
  7755                           
  7756                           ;MOTEapp.c: 570: LATAbits.LATA6 = 0;
  7757  0073CC  9C89               	bcf	3977,6,c	;volatile
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;MOTEapp.c: 572: oled_clear();
  7761  0073CE  EC1F  F022         	call	_oled_clear	;wreg free
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;MOTEapp.c: 573: oled_putString("Mode: ",0,0);
  7765  0073D2  0EB9               	movlw	low STR_66
  7766  0073D4  6FC5               	movwf	oled_putString@string& (0+255),b
  7767  0073D6  0E7F               	movlw	high STR_66
  7768  0073D8  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7769  0073DA  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7770  0073DC  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7771  0073DE  EC42  F027         	call	_oled_putString	;wreg free
  7772                           
  7773                           ;MOTEapp.c: 574: oled_putString(autoMode?"AUTO  ":"MANUAL",6,0);
  7774  0073E2  0100               	movlb	0	; () banked
  7775  0073E4  5196               	movf	_autoMode& (0+255),w,b
  7776  0073E6  E104               	bnz	l9952
  7777                           
  7778                           ; BSR set to: 0
  7779  0073E8  0EE3               	movlw	low STR_68
  7780  0073EA  6FE2               	movwf	_moteJoiningProcess$1357& (0+255),b
  7781  0073EC  0E7F               	movlw	high STR_68
  7782  0073EE  D003               	goto	L14
  7783  0073F0                     l9952:
  7784                           
  7785                           ; BSR set to: 0
  7786  0073F0  0EB2               	movlw	low STR_67
  7787  0073F2  6FE2               	movwf	_moteJoiningProcess$1357& (0+255),b
  7788  0073F4  0E7F               	movlw	high STR_67
  7789  0073F6                     L14:
  7790  0073F6  6FE3               	movwf	(_moteJoiningProcess$1357+1)& (0+255),b
  7791                           
  7792                           ; BSR set to: 0
  7793  0073F8  C0E2  F0C5         	movff	_moteJoiningProcess$1357,oled_putString@string
  7794  0073FC  C0E3  F0C6         	movff	_moteJoiningProcess$1357+1,oled_putString@string+1
  7795  007400  0E06               	movlw	6
  7796  007402  6FC7               	movwf	oled_putString@station_dot& (0+255),b
  7797  007404  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7798  007406  EC42  F027         	call	_oled_putString	;wreg free
  7799                           
  7800                           ;MOTEapp.c: 575: oled_putString("S1 = auto on/off",0,1);
  7801  00740A  0E30               	movlw	low STR_69
  7802  00740C  0100               	movlb	0	; () banked
  7803  00740E  6FC5               	movwf	oled_putString@string& (0+255),b
  7804  007410  0E7D               	movlw	high STR_69
  7805  007412  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7806  007414  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7807  007416  0E01               	movlw	1
  7808  007418  6FC8               	movwf	oled_putString@start_page& (0+255),b
  7809  00741A  EC42  F027         	call	_oled_putString	;wreg free
  7810                           
  7811                           ;MOTEapp.c: 576: oled_putString("S2 = manual send",0,2);
  7812  00741E  0E1F               	movlw	low STR_70
  7813  007420  0100               	movlb	0	; () banked
  7814  007422  6FC5               	movwf	oled_putString@string& (0+255),b
  7815  007424  0E7D               	movlw	high STR_70
  7816  007426  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7817  007428  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7818  00742A  0E02               	movlw	2
  7819  00742C  6FC8               	movwf	oled_putString@start_page& (0+255),b
  7820  00742E  EC42  F027         	call	_oled_putString	;wreg free
  7821                           
  7822                           ;MOTEapp.c: 578: moteApp_delayms(80);
  7823  007432  0100               	movlb	0	; () banked
  7824  007434  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7825  007436  0E50               	movlw	80
  7826  007438  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7827  00743A  EC14  F023         	call	_moteApp_delayms	;wreg free
  7828                           
  7829                           ; BSR set to: 0
  7830                           ;MOTEapp.c: 579: ch = 0;
  7831  00743E  6B8B               	clrf	moteJoiningProcess@ch& (0+255),b
  7832  007440  6B8C               	clrf	(moteJoiningProcess@ch+1)& (0+255),b
  7833  007442                     l9964:
  7834                           
  7835                           ;MOTEapp.c: 580: activeState = moteRest;
  7836  007442  0E0D               	movlw	13
  7837  007444  D10E               	goto	L15
  7838  007446                     L13:
  7839  007446  6F94               	movwf	_activeState& (0+255),b
  7840                           
  7841                           ;MOTEapp.c: 581: }
  7842                           ;MOTEapp.c: 602: }
  7843                           ;MOTEapp.c: 603: break;
  7844  007448  D19B               	goto	l10102
  7845  00744A                     l9966:
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;MOTEapp.c: 605: if (autoMode || manualTrigger) {
  7849  00744A  5196               	movf	_autoMode& (0+255),w,b
  7850  00744C  E102               	bnz	l9970
  7851                           
  7852                           ; BSR set to: 0
  7853  00744E  519B               	movf	_manualTrigger& (0+255),w,b
  7854  007450  E002               	bz	l9972
  7855  007452                     l9970:
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;MOTEapp.c: 606: ch++;
  7859  007452  4B8B               	infsnz	moteJoiningProcess@ch& (0+255),f,b
  7860  007454  2B8C               	incf	(moteJoiningProcess@ch+1)& (0+255),f,b
  7861  007456                     l9972:
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;MOTEapp.c: 607: }
  7865                           ;MOTEapp.c: 608: moteApp_delayms(100);
  7866  007456  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7867  007458  0E64               	movlw	100
  7868  00745A  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7869  00745C  EC14  F023         	call	_moteApp_delayms	;wreg free
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;MOTEapp.c: 610: S1 = PORTCbits.RC0;
  7873  007460  0E00               	movlw	0
  7874  007462  B082               	btfsc	3970,0,c	;volatile
  7875  007464  0E01               	movlw	1
  7876  007466  6FFB               	movwf	_S1& (0+255),b
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;MOTEapp.c: 611: S2 = PORTCbits.RC1;
  7880  007468  0E00               	movlw	0
  7881  00746A  B282               	btfsc	3970,1,c	;volatile
  7882  00746C  0E01               	movlw	1
  7883  00746E  6FFC               	movwf	_S2& (0+255),b
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;MOTEapp.c: 612: if (S1 == 0 && prevS1 == 1) {
  7887  007470  51FB               	movf	_S1& (0+255),w,b
  7888  007472  E123               	bnz	l9994
  7889                           
  7890                           ; BSR set to: 0
  7891  007474  05FE               	decf	_prevS1& (0+255),w,b
  7892  007476  E121               	bnz	l9994
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;MOTEapp.c: 615: autoMode = !autoMode;
  7896  007478  5196               	movf	_autoMode& (0+255),w,b
  7897  00747A  0E01               	movlw	1
  7898  00747C  A4D8               	btfss	status,2,c
  7899  00747E  0E00               	movlw	0
  7900  007480  6F96               	movwf	_autoMode& (0+255),b
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;MOTEapp.c: 616: oled_putString("Mode: ",0,0);
  7904  007482  0EB9               	movlw	low STR_66
  7905  007484  6FC5               	movwf	oled_putString@string& (0+255),b
  7906  007486  0E7F               	movlw	high STR_66
  7907  007488  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  7908  00748A  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  7909  00748C  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7910  00748E  EC42  F027         	call	_oled_putString	;wreg free
  7911                           
  7912                           ;MOTEapp.c: 617: oled_putString(autoMode?"AUTO  ":"MANUAL",6,0);
  7913  007492  0100               	movlb	0	; () banked
  7914  007494  5196               	movf	_autoMode& (0+255),w,b
  7915  007496  E104               	bnz	l9990
  7916                           
  7917                           ; BSR set to: 0
  7918  007498  0EE3               	movlw	low STR_68
  7919  00749A  6FE4               	movwf	_moteJoiningProcess$1364& (0+255),b
  7920  00749C  0E7F               	movlw	high STR_68
  7921  00749E  D003               	goto	L16
  7922  0074A0                     l9990:
  7923                           
  7924                           ; BSR set to: 0
  7925  0074A0  0EB2               	movlw	low STR_67
  7926  0074A2  6FE4               	movwf	_moteJoiningProcess$1364& (0+255),b
  7927  0074A4  0E7F               	movlw	high STR_67
  7928  0074A6                     L16:
  7929  0074A6  6FE5               	movwf	(_moteJoiningProcess$1364+1)& (0+255),b
  7930                           
  7931                           ; BSR set to: 0
  7932  0074A8  C0E4  F0C5         	movff	_moteJoiningProcess$1364,oled_putString@string
  7933  0074AC  C0E5  F0C6         	movff	_moteJoiningProcess$1364+1,oled_putString@string+1
  7934  0074B0  0E06               	movlw	6
  7935  0074B2  6FC7               	movwf	oled_putString@station_dot& (0+255),b
  7936  0074B4  6BC8               	clrf	oled_putString@start_page& (0+255),b
  7937  0074B6  EC42  F027         	call	_oled_putString	;wreg free
  7938  0074BA                     l9994:
  7939                           
  7940                           ;MOTEapp.c: 618: }
  7941                           ;MOTEapp.c: 619: if (S2 == 0 && prevS2 == 1) {
  7942  0074BA  0100               	movlb	0	; () banked
  7943  0074BC  51FC               	movf	_S2& (0+255),w,b
  7944  0074BE  E104               	bnz	l10000
  7945                           
  7946                           ; BSR set to: 0
  7947  0074C0  05FF               	decf	_prevS2& (0+255),w,b
  7948  0074C2  E102               	bnz	l10000
  7949                           
  7950                           ; BSR set to: 0
  7951                           ;MOTEapp.c: 622: manualTrigger = 1;
  7952  0074C4  0E01               	movlw	1
  7953  0074C6  6F9B               	movwf	_manualTrigger& (0+255),b
  7954  0074C8                     l10000:
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;MOTEapp.c: 623: }
  7958                           ;MOTEapp.c: 624: prevS1 = S1;
  7959  0074C8  C0FB  F0FE         	movff	_S1,_prevS1
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;MOTEapp.c: 625: prevS2 = S2;
  7963  0074CC  C0FC  F0FF         	movff	_S2,_prevS2
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;MOTEapp.c: 626: if (ch>20) {
  7967  0074D0  BF8C               	btfsc	(moteJoiningProcess@ch+1)& (0+255),7,b
  7968  0074D2  D156               	goto	l10102
  7969  0074D4  518C               	movf	(moteJoiningProcess@ch+1)& (0+255),w,b
  7970  0074D6  E104               	bnz	u8350
  7971  0074D8  0E15               	movlw	21
  7972  0074DA  5D8B               	subwf	moteJoiningProcess@ch& (0+255),w,b
  7973  0074DC  E201 D150          	bnc	l10102
  7974  0074E0                     u8350:
  7975                           
  7976                           ; BSR set to: 0
  7977                           ;MOTEapp.c: 627: manualTrigger=0;
  7978  0074E0  6B9B               	clrf	_manualTrigger& (0+255),b
  7979                           
  7980                           ;MOTEapp.c: 628: ch = 0;
  7981  0074E2  6B8B               	clrf	moteJoiningProcess@ch& (0+255),b
  7982  0074E4  6B8C               	clrf	(moteJoiningProcess@ch+1)& (0+255),b
  7983                           
  7984                           ;MOTEapp.c: 630: uint16_t Traw = 0;
  7985  0074E6  6BE9               	clrf	moteJoiningProcess@Traw& (0+255),b
  7986  0074E8  6BEA               	clrf	(moteJoiningProcess@Traw+1)& (0+255),b
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;MOTEapp.c: 631: moteApp_delayms(10);
  7990  0074EA  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7991  0074EC  0E0A               	movlw	10
  7992  0074EE  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  7993  0074F0  EC14  F023         	call	_moteApp_delayms	;wreg free
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;MOTEapp.c: 632: for(uint8_t i = 32; i>0; i--)
  7997  0074F4  0E20               	movlw	32
  7998  0074F6  6FEB               	movwf	moteJoiningProcess@i& (0+255),b
  7999  0074F8                     l10012:
  8000                           
  8001                           ; BSR set to: 0
  8002  0074F8  51EB               	movf	moteJoiningProcess@i& (0+255),w,b
  8003  0074FA  E010               	bz	l10022
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;MOTEapp.c: 633: {
  8007                           ;MOTEapp.c: 634: light = (light + ADC_GetConversion(Light_channel)) / 2;
  8008  0074FC  0E03               	movlw	3
  8009  0074FE  EC57  F024         	call	_ADC_GetConversion
  8010  007502  517D               	movf	_light& (0+255),w,b
  8011  007504  27B8               	addwf	?_ADC_GetConversion& (0+255),f,b
  8012  007506  517E               	movf	(_light+1)& (0+255),w,b
  8013  007508  23B9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  8014  00750A  90D8               	bcf	status,0,c
  8015  00750C  31B9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  8016  00750E  6FDE               	movwf	??_moteJoiningProcess& (0+255),b
  8017  007510  31B8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  8018  007512  6F7D               	movwf	_light& (0+255),b
  8019  007514  C0DE  F07E         	movff	??_moteJoiningProcess,_light+1
  8020                           
  8021                           ; BSR set to: 0
  8022  007518  07EB               	decf	moteJoiningProcess@i& (0+255),f,b
  8023  00751A  D7EE               	goto	l10012
  8024  00751C                     l10022:
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;MOTEapp.c: 635: }
  8028                           ;MOTEapp.c: 636: moteApp_delayms(10);
  8029  00751C  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8030  00751E  0E0A               	movlw	10
  8031  007520  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  8032  007522  EC14  F023         	call	_moteApp_delayms	;wreg free
  8033                           
  8034                           ; BSR set to: 0
  8035                           ;MOTEapp.c: 637: for(uint8_t i = 32; i>0; i--)
  8036  007526  0E20               	movlw	32
  8037  007528  6FEC               	movwf	moteJoiningProcess@i_1367& (0+255),b
  8038  00752A                     l10026:
  8039                           
  8040                           ; BSR set to: 0
  8041  00752A  51EC               	movf	moteJoiningProcess@i_1367& (0+255),w,b
  8042  00752C  E010               	bz	l10036
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;MOTEapp.c: 638: {
  8046                           ;MOTEapp.c: 639: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  8047  00752E  0E02               	movlw	2
  8048  007530  EC57  F024         	call	_ADC_GetConversion
  8049  007534  51E9               	movf	moteJoiningProcess@Traw& (0+255),w,b
  8050  007536  27B8               	addwf	?_ADC_GetConversion& (0+255),f,b
  8051  007538  51EA               	movf	(moteJoiningProcess@Traw+1)& (0+255),w,b
  8052  00753A  23B9               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  8053  00753C  90D8               	bcf	status,0,c
  8054  00753E  31B9               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  8055  007540  6FDE               	movwf	??_moteJoiningProcess& (0+255),b
  8056  007542  31B8               	rrcf	?_ADC_GetConversion& (0+255),w,b
  8057  007544  6FE9               	movwf	moteJoiningProcess@Traw& (0+255),b
  8058  007546  C0DE  F0EA         	movff	??_moteJoiningProcess,moteJoiningProcess@Traw+1
  8059                           
  8060                           ; BSR set to: 0
  8061  00754A  07EC               	decf	moteJoiningProcess@i_1367& (0+255),f,b
  8062  00754C  D7EE               	goto	l10026
  8063  00754E                     l10036:
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;MOTEapp.c: 640: }
  8067                           ;MOTEapp.c: 641: temperature = ADC_TempConversion(Traw);
  8068  00754E  51E9               	movf	moteJoiningProcess@Traw& (0+255),w,b
  8069  007550  ECA4  F022         	call	_ADC_TempConversion
  8070  007554  6F83               	movwf	_temperature& (0+255),b
  8071  007556  6B84               	clrf	(_temperature+1)& (0+255),b
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;MOTEapp.c: 642: m10SecTicker = 0;
  8075  007558  6B9A               	clrf	_m10SecTicker& (0+255),b
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;MOTEapp.c: 644: pkts++;
  8079  00755A  4B81               	infsnz	_pkts& (0+255),f,b
  8080  00755C  2B82               	incf	(_pkts+1)& (0+255),f,b
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;MOTEapp.c: 647: oled_clear();
  8084  00755E  EC1F  F022         	call	_oled_clear	;wreg free
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;MOTEapp.c: 648: oled_putString("Mode: ",0,0);
  8088  007562  0EB9               	movlw	low STR_66
  8089  007564  6FC5               	movwf	oled_putString@string& (0+255),b
  8090  007566  0E7F               	movlw	high STR_66
  8091  007568  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  8092  00756A  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  8093  00756C  6BC8               	clrf	oled_putString@start_page& (0+255),b
  8094  00756E  EC42  F027         	call	_oled_putString	;wreg free
  8095                           
  8096                           ;MOTEapp.c: 649: oled_putString(autoMode?"AUTO  ":"MANUAL",6,0);
  8097  007572  0100               	movlb	0	; () banked
  8098  007574  5196               	movf	_autoMode& (0+255),w,b
  8099  007576  E104               	bnz	l10050
  8100                           
  8101                           ; BSR set to: 0
  8102  007578  0EE3               	movlw	low STR_68
  8103  00757A  6FE6               	movwf	_moteJoiningProcess$1372& (0+255),b
  8104  00757C  0E7F               	movlw	high STR_68
  8105  00757E  D003               	goto	L17
  8106  007580                     l10050:
  8107                           
  8108                           ; BSR set to: 0
  8109  007580  0EB2               	movlw	low STR_67
  8110  007582  6FE6               	movwf	_moteJoiningProcess$1372& (0+255),b
  8111  007584  0E7F               	movlw	high STR_67
  8112  007586                     L17:
  8113  007586  6FE7               	movwf	(_moteJoiningProcess$1372+1)& (0+255),b
  8114                           
  8115                           ; BSR set to: 0
  8116  007588  C0E6  F0C5         	movff	_moteJoiningProcess$1372,oled_putString@string
  8117  00758C  C0E7  F0C6         	movff	_moteJoiningProcess$1372+1,oled_putString@string+1
  8118  007590  0E06               	movlw	6
  8119  007592  6FC7               	movwf	oled_putString@station_dot& (0+255),b
  8120  007594  6BC8               	clrf	oled_putString@start_page& (0+255),b
  8121  007596  EC42  F027         	call	_oled_putString	;wreg free
  8122                           
  8123                           ;MOTEapp.c: 650: oled_putString("Light:",0,1);
  8124  00759A  0ED5               	movlw	low STR_77
  8125  00759C  0100               	movlb	0	; () banked
  8126  00759E  6FC5               	movwf	oled_putString@string& (0+255),b
  8127  0075A0  0E7F               	movlw	high STR_77
  8128  0075A2  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  8129  0075A4  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  8130  0075A6  0E01               	movlw	1
  8131  0075A8  6FC8               	movwf	oled_putString@start_page& (0+255),b
  8132  0075AA  EC42  F027         	call	_oled_putString	;wreg free
  8133                           
  8134                           ;MOTEapp.c: 651: oled_putString("Temp :",0,2);
  8135  0075AE  0EC0               	movlw	low STR_78
  8136  0075B0  0100               	movlb	0	; () banked
  8137  0075B2  6FC5               	movwf	oled_putString@string& (0+255),b
  8138  0075B4  0E7F               	movlw	high STR_78
  8139  0075B6  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  8140  0075B8  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  8141  0075BA  0E02               	movlw	2
  8142  0075BC  6FC8               	movwf	oled_putString@start_page& (0+255),b
  8143  0075BE  EC42  F027         	call	_oled_putString	;wreg free
  8144                           
  8145                           ;MOTEapp.c: 652: oled_putString("C",12,2);
  8146  0075C2  0E91               	movlw	low (STR_38+47)
  8147  0075C4  0100               	movlb	0	; () banked
  8148  0075C6  6FC5               	movwf	oled_putString@string& (0+255),b
  8149  0075C8  0E7B               	movlw	high (STR_38+47)
  8150  0075CA  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  8151  0075CC  0E0C               	movlw	12
  8152  0075CE  6FC7               	movwf	oled_putString@station_dot& (0+255),b
  8153  0075D0  0E02               	movlw	2
  8154  0075D2  6FC8               	movwf	oled_putString@start_page& (0+255),b
  8155  0075D4  EC42  F027         	call	_oled_putString	;wreg free
  8156                           
  8157                           ;MOTEapp.c: 653: oled_putUint16(light,6,1);
  8158  0075D8  C07D  F0CA         	movff	_light,oled_putUint16@number
  8159  0075DC  C07E  F0CB         	movff	_light+1,oled_putUint16@number+1
  8160  0075E0  0E06               	movlw	6
  8161  0075E2  0100               	movlb	0	; () banked
  8162  0075E4  6FCC               	movwf	oled_putUint16@station_dot& (0+255),b
  8163  0075E6  0E01               	movlw	1
  8164  0075E8  6FCD               	movwf	oled_putUint16@start_page& (0+255),b
  8165  0075EA  EC11  F030         	call	_oled_putUint16	;wreg free
  8166                           
  8167                           ;MOTEapp.c: 654: oled_putUint16(temperature,6,2);
  8168  0075EE  C083  F0CA         	movff	_temperature,oled_putUint16@number
  8169  0075F2  C084  F0CB         	movff	_temperature+1,oled_putUint16@number+1
  8170  0075F6  0E06               	movlw	6
  8171  0075F8  0100               	movlb	0	; () banked
  8172  0075FA  6FCC               	movwf	oled_putUint16@station_dot& (0+255),b
  8173  0075FC  0E02               	movlw	2
  8174  0075FE  6FCD               	movwf	oled_putUint16@start_page& (0+255),b
  8175  007600  EC11  F030         	call	_oled_putUint16	;wreg free
  8176                           
  8177                           ;MOTEapp.c: 655: oled_putString("Pkts|:",0,3);
  8178  007604  0EDC               	movlw	low STR_80
  8179  007606  0100               	movlb	0	; () banked
  8180  007608  6FC5               	movwf	oled_putString@string& (0+255),b
  8181  00760A  0E7F               	movlw	high STR_80
  8182  00760C  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  8183  00760E  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  8184  007610  0E03               	movlw	3
  8185  007612  6FC8               	movwf	oled_putString@start_page& (0+255),b
  8186  007614  EC42  F027         	call	_oled_putString	;wreg free
  8187                           
  8188                           ;MOTEapp.c: 656: oled_putUint16(pkts,6,3);
  8189  007618  C081  F0CA         	movff	_pkts,oled_putUint16@number
  8190  00761C  C082  F0CB         	movff	_pkts+1,oled_putUint16@number+1
  8191  007620  0E06               	movlw	6
  8192  007622  0100               	movlb	0	; () banked
  8193  007624  6FCC               	movwf	oled_putUint16@station_dot& (0+255),b
  8194  007626  0E03               	movlw	3
  8195  007628  6FCD               	movwf	oled_putUint16@start_page& (0+255),b
  8196  00762A  EC11  F030         	call	_oled_putUint16	;wreg free
  8197                           
  8198                           ;MOTEapp.c: 659: sprintf(cmd,"mac tx uncnf 1 %04X%04X",
  8199                           ;MOTEapp.c: 660: temperature, light);
  8200  00762E  0E58               	movlw	low _cmd
  8201  007630  0100               	movlb	0	; () banked
  8202  007632  6FC4               	movwf	sprintf@sp& (0+255),b
  8203  007634  0E01               	movlw	high _cmd
  8204  007636  6FC5               	movwf	(sprintf@sp+1)& (0+255),b
  8205  007638  0E75               	movlw	low STR_81
  8206  00763A  6FC6               	movwf	sprintf@f& (0+255),b
  8207  00763C  0E7C               	movlw	high STR_81
  8208  00763E  6FC7               	movwf	(sprintf@f+1)& (0+255),b
  8209  007640  C083  F0C8         	movff	_temperature,?_sprintf+4
  8210  007644  C084  F0C9         	movff	_temperature+1,?_sprintf+5
  8211  007648  C07D  F0CA         	movff	_light,?_sprintf+6
  8212  00764C  C07E  F0CB         	movff	_light+1,?_sprintf+7
  8213  007650  ECB5  F035         	call	_sprintf	;wreg free
  8214                           
  8215                           ; BSR set to: 0
  8216                           ;MOTEapp.c: 661: sendCommand(cmd);
  8217  007654  0E58               	movlw	low _cmd
  8218  007656  6FB9               	movwf	sendCommand@string& (0+255),b
  8219  007658  0E01               	movlw	high _cmd
  8220  00765A  6FBA               	movwf	(sendCommand@string+1)& (0+255),b
  8221  00765C  EC2B  F026         	call	_sendCommand	;wreg free
  8222                           
  8223                           ;MOTEapp.c: 663: activeState = moteTxUncnf;
  8224  007660  0E0E               	movlw	14
  8225  007662                     L15:
  8226  007662  0100               	movlb	0	; () banked
  8227  007664  D6F0               	goto	L13
  8228  007666                     l10074:
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;MOTEapp.c: 668: {
  8232                           ;MOTEapp.c: 670: {
  8233                           ;MOTEapp.c: 671: oled_putString("Pkts/:",0,3);
  8234  007666  0ECE               	movlw	low STR_82
  8235  007668  6FC5               	movwf	oled_putString@string& (0+255),b
  8236  00766A  0E7F               	movlw	high STR_82
  8237  00766C  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  8238  00766E  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  8239  007670  0E03               	movlw	3
  8240  007672  6FC8               	movwf	oled_putString@start_page& (0+255),b
  8241  007674  EC42  F027         	call	_oled_putString	;wreg free
  8242                           
  8243                           ;MOTEapp.c: 672: oled_putUint16(pkts,6,3);
  8244  007678  C081  F0CA         	movff	_pkts,oled_putUint16@number
  8245  00767C  C082  F0CB         	movff	_pkts+1,oled_putUint16@number+1
  8246  007680  0E06               	movlw	6
  8247  007682  0100               	movlb	0	; () banked
  8248  007684  6FCC               	movwf	oled_putUint16@station_dot& (0+255),b
  8249  007686  0E03               	movlw	3
  8250  007688  6FCD               	movwf	oled_putUint16@start_page& (0+255),b
  8251  00768A  EC11  F030         	call	_oled_putUint16	;wreg free
  8252                           
  8253                           ;MOTEapp.c: 673: moteApp_delayms(80);
  8254  00768E  0100               	movlb	0	; () banked
  8255  007690  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8256  007692  0E50               	movlw	80
  8257  007694  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  8258  007696  EC14  F023         	call	_moteApp_delayms	;wreg free
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;MOTEapp.c: 674: activeState = moteTxWait;
  8262  00769A  0E0F               	movlw	15
  8263  00769C  D6D4               	goto	L13
  8264  00769E                     l10080:
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;MOTEapp.c: 687: if ( messageReady )
  8268  00769E  51ED               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  8269  0076A0  E06F               	bz	l10102
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;MOTEapp.c: 688: {
  8273                           ;MOTEapp.c: 689: if(strcmp(modemResonseBuffer, "mac_tx_ok") == 0)
  8274  0076A2  0E98               	movlw	low _modemResonseBuffer
  8275  0076A4  6FB8               	movwf	strcmp@s1& (0+255),b
  8276  0076A6  0E01               	movlw	high _modemResonseBuffer
  8277  0076A8  6FB9               	movwf	(strcmp@s1+1)& (0+255),b
  8278  0076AA  0EB8               	movlw	low (STR_64+5)
  8279  0076AC  6FBA               	movwf	strcmp@s2& (0+255),b
  8280  0076AE  0E7D               	movlw	high (STR_64+5)
  8281  0076B0  6FBB               	movwf	(strcmp@s2+1)& (0+255),b
  8282  0076B2  ECCF  F028         	call	_strcmp	;wreg free
  8283  0076B6  51B8               	movf	?_strcmp& (0+255),w,b
  8284  0076B8  11B9               	iorwf	(?_strcmp+1)& (0+255),w,b
  8285  0076BA  E162               	bnz	l10102
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;MOTEapp.c: 690: {
  8289                           ;MOTEapp.c: 691: oled_putString("Pkts-:",0,3);
  8290  0076BC  0EC7               	movlw	low STR_84
  8291  0076BE  6FC5               	movwf	oled_putString@string& (0+255),b
  8292  0076C0  0E7F               	movlw	high STR_84
  8293  0076C2  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
  8294  0076C4  6BC7               	clrf	oled_putString@station_dot& (0+255),b
  8295  0076C6  0E03               	movlw	3
  8296  0076C8  6FC8               	movwf	oled_putString@start_page& (0+255),b
  8297  0076CA  EC42  F027         	call	_oled_putString	;wreg free
  8298                           
  8299                           ;MOTEapp.c: 692: oled_putUint16(pkts,6,3);
  8300  0076CE  C081  F0CA         	movff	_pkts,oled_putUint16@number
  8301  0076D2  C082  F0CB         	movff	_pkts+1,oled_putUint16@number+1
  8302  0076D6  0E06               	movlw	6
  8303  0076D8  0100               	movlb	0	; () banked
  8304  0076DA  6FCC               	movwf	oled_putUint16@station_dot& (0+255),b
  8305  0076DC  0E03               	movlw	3
  8306  0076DE  6FCD               	movwf	oled_putUint16@start_page& (0+255),b
  8307  0076E0  EC11  F030         	call	_oled_putUint16	;wreg free
  8308  0076E4  D6AE               	goto	l9964
  8309  0076E6                     l10088:
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;MOTEapp.c: 699: joiningComplete = 1;
  8313  0076E6  0E01               	movlw	1
  8314  0076E8  6FE8               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;MOTEapp.c: 700: moteApp_delayms(80);
  8318  0076EA  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8319  0076EC  0E50               	movlw	80
  8320  0076EE  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  8321  0076F0  EC14  F023         	call	_moteApp_delayms	;wreg free
  8322                           
  8323                           ;MOTEapp.c: 701: break;
  8324  0076F4  D045               	goto	l10102
  8325  0076F6                     l10092:
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;MOTEapp.c: 703: DATAEE_WriteByte(0x00, 0x00);
  8329  0076F6  0E00               	movlw	0
  8330  0076F8  6BB8               	clrf	DATAEE_WriteByte@bData& (0+255),b
  8331  0076FA  EC74  F024         	call	_DATAEE_WriteByte
  8332  0076FE                     l466:
  8333  0076FE  B082               	btfsc	3970,0,c	;volatile
  8334  007700  D002               	goto	l10096
  8335  007702  A282               	btfss	3970,1,c	;volatile
  8336  007704  D7FC               	goto	l466
  8337  007706                     l10096:
  8338                           
  8339                           ;MOTEapp.c: 705: moteApp_delayms(40);
  8340  007706  0100               	movlb	0	; () banked
  8341  007708  6BB9               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8342  00770A  0E28               	movlw	40
  8343  00770C  6FB8               	movwf	moteApp_delayms@length& (0+255),b
  8344  00770E  EC14  F023         	call	_moteApp_delayms	;wreg free
  8345  007712  00FF               	reset		;# 
  8346                           
  8347                           ;MOTEapp.c: 708: break;
  8348  007714  D035               	goto	l10102
  8349  007716                     l10100:
  8350                           
  8351                           ; BSR set to: 0
  8352  007716  5194               	movf	_activeState& (0+255),w,b
  8353                           
  8354                           ; Switch size 1, requested type "speed"
  8355                           ; Number of cases is 18, Range of values is 0 to 17
  8356                           ; switch strategies available:
  8357                           ; Name         Instructions Cycles
  8358                           ; simple_byte           55    28 (average)
  8359                           ;	Chosen strategy is simple_byte
  8360  007718  E101 D402          	bz	l380
  8361  00771C  0A01               	xorlw	1	; case 1
  8362  00771E  E101 D41D          	bz	l9740
  8363  007722  0A03               	xorlw	3	; case 2
  8364  007724  E101 D45A          	bz	l9762
  8365  007728  0A01               	xorlw	1	; case 3
  8366  00772A  E101 D47F          	bz	l9776
  8367  00772E  0A07               	xorlw	7	; case 4
  8368  007730  E101 D4A4          	bz	l9790
  8369  007734  0A01               	xorlw	1	; case 5
  8370  007736  E101 D4C9          	bz	l9804
  8371  00773A  0A03               	xorlw	3	; case 6
  8372  00773C  E101 D51A          	bz	l9834
  8373  007740  0A01               	xorlw	1	; case 7
  8374  007742  E101 D4EC          	bz	l9818
  8375  007746  0A0F               	xorlw	15	; case 8
  8376  007748  E101 D578          	bz	l9866
  8377  00774C  0A01               	xorlw	1	; case 9
  8378  00774E  E101 D5A3          	bz	l9882
  8379  007752  0A03               	xorlw	3	; case 10
  8380  007754  E101 D5C3          	bz	l9894
  8381  007758  0A01               	xorlw	1	; case 11
  8382  00775A  E101 D5FD          	bz	l9920
  8383  00775E  0A07               	xorlw	7	; case 12
  8384  007760  E101 D633          	bz	l436
  8385  007764  0A01               	xorlw	1	; case 13
  8386  007766  E101 D670          	bz	l9966
  8387  00776A  0A03               	xorlw	3	; case 14
  8388  00776C  E101 D77B          	bz	l10074
  8389  007770  0A01               	xorlw	1	; case 15
  8390  007772  E095               	bz	l10080
  8391  007774  0A1F               	xorlw	31	; case 16
  8392  007776  E0B7               	bz	l10088
  8393  007778  0A01               	xorlw	1	; case 17
  8394  00777A  E0BD               	bz	l10092
  8395  00777C  EF8F  F037         	goto	l376
  8396  007780                     l10102:
  8397                           
  8398                           ;MOTEapp.c: 710: return joiningComplete;
  8399  007780  0100               	movlb	0	; () banked
  8400  007782  51E8               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
  8401                           
  8402                           ; BSR set to: 0
  8403  007784  0012               	return		;funcret
  8404  007786                     __end_of_moteJoiningProcess:
  8405                           	opt stack 0
  8406                           tblptru	equ	0xFF8
  8407                           tblptrh	equ	0xFF7
  8408                           tblptrl	equ	0xFF6
  8409                           tablat	equ	0xFF5
  8410                           intcon	equ	0xFF2
  8411                           postinc0	equ	0xFEE
  8412                           wreg	equ	0xFE8
  8413                           postdec1	equ	0xFE5
  8414                           fsr1l	equ	0xFE1
  8415                           indf2	equ	0xFDF
  8416                           fsr2h	equ	0xFDA
  8417                           fsr2l	equ	0xFD9
  8418                           status	equ	0xFD8
  8419                           
  8420 ;; *************** function _strncmp *****************
  8421 ;; Defined at:
  8422 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/strncmp.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  8425 ;;		 -> modemResonseBuffer(64), 
  8426 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  8427 ;;		 -> STR_31(5), 
  8428 ;;  len             2    4[BANK0 ] unsigned int 
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;		None
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  2    0[BANK0 ] int 
  8433 ;; Registers used:
  8434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8435 ;; Tracked objects:
  8436 ;;		On entry : F/0
  8437 ;;		On exit  : F/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8440 ;;      Params:         0       6       0       0       0       0       0       0       0
  8441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8442 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8443 ;;      Totals:         0       7       0       0       0       0       0       0       0
  8444 ;;Total ram usage:        7 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; Hardware stack levels required when called:   11
  8447 ;; This function calls:
  8448 ;;		Nothing
  8449 ;; This function is called by:
  8450 ;;		_moteJoiningProcess
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           	psect	text23
  8455  004EEA                     __ptext23:
  8456                           	opt stack 0
  8457  004EEA                     _strncmp:
  8458                           	opt stack 17
  8459                           
  8460                           ; BSR set to: 0
  8461                           
  8462                           ; BSR set to: 0
  8463                           ;incstack = 0
  8464  004EEA  D029               	goto	l9136
  8465  004EEC                     l9126:
  8466                           
  8467                           ; BSR set to: 0
  8468  004EEC  C0B8  FFD9         	movff	strncmp@s1,fsr2l
  8469  004EF0  C0B9  FFDA         	movff	strncmp@s1+1,fsr2h
  8470  004EF4  50DF               	movf	indf2,w,c
  8471  004EF6  E00D               	bz	l9130
  8472                           
  8473                           ; BSR set to: 0
  8474  004EF8  C0B8  FFD9         	movff	strncmp@s1,fsr2l
  8475  004EFC  C0B9  FFDA         	movff	strncmp@s1+1,fsr2h
  8476  004F00  50DF               	movf	indf2,w,c
  8477  004F02  6FBE               	movwf	??_strncmp& (0+255),b
  8478  004F04  C0BA  FFF6         	movff	strncmp@s2,tblptrl
  8479  004F08  C0BB  FFF7         	movff	strncmp@s2+1,tblptrh
  8480  004F0C                     	if	0	;tblptru may be non-zero
  8481  004F0C                     	endif
  8482  004F0C                     	if	0	;tblptru may be non-zero
  8483  004F0C                     	endif
  8484  004F0C  0008               	tblrd		*
  8485  004F0E  18F5               	xorwf	tablat,w,c
  8486  004F10  E012               	bz	l9134
  8487  004F12                     l9130:
  8488                           
  8489                           ; BSR set to: 0
  8490  004F12  C0B8  FFD9         	movff	strncmp@s1,fsr2l
  8491  004F16  C0B9  FFDA         	movff	strncmp@s1+1,fsr2h
  8492  004F1A  50DF               	movf	indf2,w,c
  8493  004F1C  6FBE               	movwf	??_strncmp& (0+255),b
  8494  004F1E  C0BA  FFF6         	movff	strncmp@s2,tblptrl
  8495  004F22  C0BB  FFF7         	movff	strncmp@s2+1,tblptrh
  8496  004F26                     	if	0	;tblptru may be non-zero
  8497  004F26                     	endif
  8498  004F26                     	if	0	;tblptru may be non-zero
  8499  004F26                     	endif
  8500  004F26  0008               	tblrd		*
  8501  004F28  50F5               	movf	tablat,w,c
  8502  004F2A  5DBE               	subwf	??_strncmp& (0+255),w,b
  8503  004F2C  6FB8               	movwf	?_strncmp& (0+255),b
  8504  004F2E  6BB9               	clrf	(?_strncmp+1)& (0+255),b
  8505  004F30  A0D8               	btfss	status,0,c
  8506  004F32  07B9               	decf	(?_strncmp+1)& (0+255),f,b
  8507  004F34  0012               	return	
  8508  004F36                     l9134:
  8509                           
  8510                           ; BSR set to: 0
  8511  004F36  4BB8               	infsnz	strncmp@s1& (0+255),f,b
  8512  004F38  2BB9               	incf	(strncmp@s1+1)& (0+255),f,b
  8513  004F3A  4BBA               	infsnz	strncmp@s2& (0+255),f,b
  8514  004F3C  2BBB               	incf	(strncmp@s2+1)& (0+255),f,b
  8515  004F3E                     l9136:
  8516                           
  8517                           ; BSR set to: 0
  8518  004F3E  07BC               	decf	strncmp@len& (0+255),f,b
  8519  004F40  A0D8               	btfss	status,0,c
  8520  004F42  07BD               	decf	(strncmp@len+1)& (0+255),f,b
  8521  004F44  29BC               	incf	strncmp@len& (0+255),w,b
  8522  004F46  E1D2               	bnz	l9126
  8523  004F48  29BD               	incf	(strncmp@len+1)& (0+255),w,b
  8524  004F4A  E1D0               	bnz	l9126
  8525                           
  8526                           ; BSR set to: 0
  8527  004F4C  6BB8               	clrf	?_strncmp& (0+255),b
  8528  004F4E  6BB9               	clrf	(?_strncmp+1)& (0+255),b
  8529                           
  8530                           ; BSR set to: 0
  8531  004F50  0012               	return		;funcret
  8532  004F52                     __end_of_strncmp:
  8533                           	opt stack 0
  8534                           tblptru	equ	0xFF8
  8535                           tblptrh	equ	0xFF7
  8536                           tblptrl	equ	0xFF6
  8537                           tablat	equ	0xFF5
  8538                           intcon	equ	0xFF2
  8539                           postinc0	equ	0xFEE
  8540                           wreg	equ	0xFE8
  8541                           postdec1	equ	0xFE5
  8542                           fsr1l	equ	0xFE1
  8543                           indf2	equ	0xFDF
  8544                           fsr2h	equ	0xFDA
  8545                           fsr2l	equ	0xFD9
  8546                           status	equ	0xFD8
  8547                           
  8548 ;; *************** function _strcmp *****************
  8549 ;; Defined at:
  8550 ;;		line 5 in file "/opt/microchip/xc8/v1.36/sources/common/strcmp.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  8553 ;;		 -> modemResonseBuffer(64), 
  8554 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  8555 ;;		 -> STR_83(10), STR_63(3), STR_59(9), STR_57(3), 
  8556 ;;		 -> STR_54(3), STR_49(3), STR_46(3), STR_43(3), 
  8557 ;;		 -> STR_40(3), STR_37(3), STR_34(3), 
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;  t1              1    8[BANK0 ] unsigned char 
  8560 ;;  t2              1    7[BANK0 ] unsigned char 
  8561 ;;  t0              1    6[BANK0 ] unsigned char 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  2    0[BANK0 ] int 
  8564 ;; Registers used:
  8565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8566 ;; Tracked objects:
  8567 ;;		On entry : F/0
  8568 ;;		On exit  : F/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8571 ;;      Params:         0       4       0       0       0       0       0       0       0
  8572 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8573 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8574 ;;      Totals:         0       9       0       0       0       0       0       0       0
  8575 ;;Total ram usage:        9 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; Hardware stack levels required when called:   11
  8578 ;; This function calls:
  8579 ;;		Nothing
  8580 ;; This function is called by:
  8581 ;;		_moteJoiningProcess
  8582 ;; This function uses a non-reentrant model
  8583 ;;
  8584                           
  8585                           	psect	text24
  8586  00519E                     __ptext24:
  8587                           	opt stack 0
  8588  00519E                     _strcmp:
  8589                           	opt stack 17
  8590  00519E                     l9138:
  8591                           
  8592                           ; BSR set to: 0
  8593  00519E  C0B8  FFD9         	movff	strcmp@s1,fsr2l
  8594  0051A2  C0B9  FFDA         	movff	strcmp@s1+1,fsr2h
  8595  0051A6  50DF               	movf	indf2,w,c
  8596  0051A8  6FBE               	movwf	strcmp@t0& (0+255),b
  8597                           
  8598                           ; BSR set to: 0
  8599  0051AA  C0BA  FFF6         	movff	strcmp@s2,tblptrl
  8600  0051AE  C0BB  FFF7         	movff	strcmp@s2+1,tblptrh
  8601  0051B2                     	if	0	;tblptru may be non-zero
  8602  0051B2                     	endif
  8603  0051B2                     	if	0	;tblptru may be non-zero
  8604  0051B2                     	endif
  8605  0051B2  0008               	tblrd		*
  8606  0051B4  CFF5 F0C0          	movff	tablat,strcmp@t1
  8607                           
  8608                           ; BSR set to: 0
  8609  0051B8  51BE               	movf	strcmp@t0& (0+255),w,b
  8610  0051BA  E02C               	bz	l9168
  8611                           
  8612                           ; BSR set to: 0
  8613  0051BC  0E02               	movlw	2
  8614  0051BE  27B8               	addwf	strcmp@s1& (0+255),f,b
  8615  0051C0  0E00               	movlw	0
  8616  0051C2  23B9               	addwfc	(strcmp@s1+1)& (0+255),f,b
  8617  0051C4  51C0               	movf	strcmp@t1& (0+255),w,b
  8618  0051C6  19BE               	xorwf	strcmp@t0& (0+255),w,b
  8619  0051C8  E125               	bnz	l9168
  8620                           
  8621                           ; BSR set to: 0
  8622  0051CA  EE2F F0FF          	lfsr	2,-1
  8623  0051CE  51B8               	movf	strcmp@s1& (0+255),w,b
  8624  0051D0  26D9               	addwf	fsr2l,f,c
  8625  0051D2  51B9               	movf	(strcmp@s1+1)& (0+255),w,b
  8626  0051D4  22DA               	addwfc	fsr2h,f,c
  8627  0051D6  50DF               	movf	indf2,w,c
  8628  0051D8  6FBF               	movwf	strcmp@t2& (0+255),b
  8629                           
  8630                           ; BSR set to: 0
  8631  0051DA  29BA               	incf	strcmp@s2& (0+255),w,b
  8632  0051DC  6FBC               	movwf	??_strcmp& (0+255),b
  8633  0051DE  0E00               	movlw	0
  8634  0051E0  21BB               	addwfc	(strcmp@s2+1)& (0+255),w,b
  8635  0051E2  6FBD               	movwf	(??_strcmp+1)& (0+255),b
  8636  0051E4  C0BC  FFF6         	movff	??_strcmp,tblptrl
  8637  0051E8  C0BD  FFF7         	movff	??_strcmp+1,tblptrh
  8638  0051EC                     	if	0	;tblptru may be non-zero
  8639  0051EC                     	endif
  8640  0051EC                     	if	0	;tblptru may be non-zero
  8641  0051EC                     	endif
  8642  0051EC  0008               	tblrd		*
  8643  0051EE  CFF5 F0C0          	movff	tablat,strcmp@t1
  8644                           
  8645                           ; BSR set to: 0
  8646  0051F2  51BF               	movf	strcmp@t2& (0+255),w,b
  8647  0051F4  E107               	bnz	l9160
  8648  0051F6                     l9156:
  8649                           
  8650                           ; BSR set to: 0
  8651  0051F6  51C0               	movf	strcmp@t1& (0+255),w,b
  8652  0051F8  5DBF               	subwf	strcmp@t2& (0+255),w,b
  8653  0051FA  6FB8               	movwf	?_strcmp& (0+255),b
  8654  0051FC  6BB9               	clrf	(?_strcmp+1)& (0+255),b
  8655  0051FE  A0D8               	btfss	status,0,c
  8656  005200  07B9               	decf	(?_strcmp+1)& (0+255),f,b
  8657  005202  0012               	return	
  8658  005204                     l9160:
  8659                           
  8660                           ; BSR set to: 0
  8661  005204  0E02               	movlw	2
  8662  005206  27BA               	addwf	strcmp@s2& (0+255),f,b
  8663  005208  0E00               	movlw	0
  8664  00520A  23BB               	addwfc	(strcmp@s2+1)& (0+255),f,b
  8665  00520C  51BF               	movf	strcmp@t2& (0+255),w,b
  8666  00520E  19C0               	xorwf	strcmp@t1& (0+255),w,b
  8667  005210  E1F2               	bnz	l9156
  8668  005212  D7C5               	goto	l9138
  8669  005214                     l9168:
  8670                           
  8671                           ; BSR set to: 0
  8672  005214  51C0               	movf	strcmp@t1& (0+255),w,b
  8673  005216  5DBE               	subwf	strcmp@t0& (0+255),w,b
  8674  005218  6FB8               	movwf	?_strcmp& (0+255),b
  8675  00521A  6BB9               	clrf	(?_strcmp+1)& (0+255),b
  8676  00521C  A0D8               	btfss	status,0,c
  8677  00521E  07B9               	decf	(?_strcmp+1)& (0+255),f,b
  8678                           
  8679                           ; BSR set to: 0
  8680  005220  0012               	return		;funcret
  8681  005222                     __end_of_strcmp:
  8682                           	opt stack 0
  8683                           tblptru	equ	0xFF8
  8684                           tblptrh	equ	0xFF7
  8685                           tblptrl	equ	0xFF6
  8686                           tablat	equ	0xFF5
  8687                           intcon	equ	0xFF2
  8688                           postinc0	equ	0xFEE
  8689                           wreg	equ	0xFE8
  8690                           postdec1	equ	0xFE5
  8691                           fsr1l	equ	0xFE1
  8692                           indf2	equ	0xFDF
  8693                           fsr2h	equ	0xFDA
  8694                           fsr2l	equ	0xFD9
  8695                           status	equ	0xFD8
  8696                           
  8697 ;; *************** function _sprintf *****************
  8698 ;; Defined at:
  8699 ;;		line 492 in file "/opt/microchip/xc8/v1.36/sources/common/doprnt.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  8702 ;;		 -> cmd(64), 
  8703 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  8704 ;;		 -> STR_81(24), STR_50(24), 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  idx             1   24[BANK0 ] unsigned char 
  8707 ;;  tmpval          4    0        struct .
  8708 ;;  width           2   34[BANK0 ] int 
  8709 ;;  val             2   31[BANK0 ] unsigned int 
  8710 ;;  len             2   29[BANK0 ] unsigned int 
  8711 ;;  cp              2   26[BANK0 ] PTR const unsigned char 
  8712 ;;		 -> STR_110(7), STR_52(4), STR_51(3), 
  8713 ;;  c               1   36[BANK0 ] char 
  8714 ;;  flag            1   33[BANK0 ] unsigned char 
  8715 ;;  ap              1   28[BANK0 ] PTR void [1]
  8716 ;;		 -> ?_sprintf(2), 
  8717 ;;  prec            1   25[BANK0 ] char 
  8718 ;; Return value:  Size  Location     Type
  8719 ;;                  2   12[BANK0 ] int 
  8720 ;; Registers used:
  8721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8722 ;; Tracked objects:
  8723 ;;		On entry : F/0
  8724 ;;		On exit  : F/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8727 ;;      Params:         0       8       0       0       0       0       0       0       0
  8728 ;;      Locals:         0      13       0       0       0       0       0       0       0
  8729 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8730 ;;      Totals:         0      25       0       0       0       0       0       0       0
  8731 ;;Total ram usage:       25 bytes
  8732 ;; Hardware stack levels used:    1
  8733 ;; Hardware stack levels required when called:   12
  8734 ;; This function calls:
  8735 ;;		___lwdiv
  8736 ;;		___lwmod
  8737 ;;		___wmul
  8738 ;;		_isdigit
  8739 ;; This function is called by:
  8740 ;;		_moteJoiningProcess
  8741 ;; This function uses a non-reentrant model
  8742 ;;
  8743                           
  8744                           	psect	text25
  8745  006B6A                     __ptext25:
  8746                           	opt stack 0
  8747  006B6A                     _sprintf:
  8748                           	opt stack 16
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;doprnt.c: 494: va_list ap;
  8752                           ;doprnt.c: 499: signed char c;
  8753                           ;doprnt.c: 501: int width;
  8754                           ;doprnt.c: 506: signed char prec;
  8755                           ;doprnt.c: 508: unsigned char flag;
  8756                           ;doprnt.c: 523: union {
  8757                           ;doprnt.c: 524: unsigned long vd;
  8758                           ;doprnt.c: 525: double integ;
  8759                           ;doprnt.c: 526: } tmpval;
  8760                           ;doprnt.c: 528: unsigned int val;
  8761                           ;doprnt.c: 529: unsigned len;
  8762                           ;doprnt.c: 530: const char * cp;
  8763                           ;doprnt.c: 533: *ap = __va_start();
  8764                           
  8765                           ; BSR set to: 0
  8766                           ;incstack = 0
  8767  006B6A  0EC8               	movlw	low (?_sprintf+4)
  8768  006B6C  6FD4               	movwf	sprintf@ap& (0+255),b
  8769                           
  8770                           ;doprnt.c: 536: while(c = *f++) {
  8771  006B6E  D1C1               	goto	l9338
  8772  006B70                     l9174:
  8773                           
  8774                           ; BSR set to: 0
  8775                           ;doprnt.c: 538: if(c != '%')
  8776  006B70  0E25               	movlw	37
  8777  006B72  19DC               	xorwf	sprintf@c& (0+255),w,b
  8778  006B74  E009               	bz	l1860
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;doprnt.c: 540: {
  8782                           ;doprnt.c: 541: ((*sp++ = (c)));
  8783  006B76  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  8784  006B7A  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  8785  006B7E  C0DC  FFDF         	movff	sprintf@c,indf2
  8786                           
  8787                           ; BSR set to: 0
  8788  006B82  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  8789  006B84  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  8790                           
  8791                           ;doprnt.c: 542: continue;
  8792  006B86  D1B5               	goto	l9338
  8793  006B88                     l1860:
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;doprnt.c: 543: }
  8797                           ;doprnt.c: 546: width = 0;
  8798  006B88  6BDA               	clrf	sprintf@width& (0+255),b
  8799  006B8A  6BDB               	clrf	(sprintf@width+1)& (0+255),b
  8800                           
  8801                           ;doprnt.c: 548: flag = 0;
  8802  006B8C  6BD9               	clrf	sprintf@flag& (0+255),b
  8803  006B8E  D003               	goto	l9184
  8804  006B90                     l9180:
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;doprnt.c: 580: flag |= 0x04;
  8808  006B90  85D9               	bsf	sprintf@flag& (0+255),2,b
  8809                           
  8810                           ;doprnt.c: 581: f++;
  8811  006B92  4BC6               	infsnz	sprintf@f& (0+255),f,b
  8812  006B94  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  8813  006B96                     l9184:
  8814                           
  8815                           ; BSR set to: 0
  8816  006B96  C0C6  FFF6         	movff	sprintf@f,tblptrl
  8817  006B9A  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  8818  006B9E                     	if	0	;tblptru may be non-zero
  8819  006B9E                     	endif
  8820  006B9E                     	if	0	;tblptru may be non-zero
  8821  006B9E                     	endif
  8822  006B9E  0008               	tblrd		*
  8823  006BA0  50F5               	movf	tablat,w,c
  8824                           
  8825                           ; Switch size 1, requested type "speed"
  8826                           ; Number of cases is 1, Range of values is 48 to 48
  8827                           ; switch strategies available:
  8828                           ; Name         Instructions Cycles
  8829                           ; simple_byte            4     3 (average)
  8830                           ;	Chosen strategy is simple_byte
  8831  006BA2  0A30               	xorlw	48	; case 48
  8832  006BA4  E0F5               	bz	l9180
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8836  006BA6  C0C6  FFF6         	movff	sprintf@f,tblptrl
  8837  006BAA  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  8838  006BAE                     	if	0	;tblptru may be non-zero
  8839  006BAE                     	endif
  8840  006BAE                     	if	0	;tblptru may be non-zero
  8841  006BAE                     	endif
  8842  006BAE  0008               	tblrd		*
  8843  006BB0  50F5               	movf	tablat,w,c
  8844  006BB2  EC74  F022         	call	_isdigit
  8845  006BB6  E201 D087          	bnc	l9234
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;doprnt.c: 598: width = 0;
  8849  006BBA  6BDA               	clrf	sprintf@width& (0+255),b
  8850  006BBC  6BDB               	clrf	(sprintf@width+1)& (0+255),b
  8851  006BBE                     l9190:
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;doprnt.c: 600: width *= 10;
  8855  006BBE  C0DA  F0B8         	movff	sprintf@width,___wmul@multiplier
  8856  006BC2  C0DB  F0B9         	movff	sprintf@width+1,___wmul@multiplier+1
  8857  006BC6  6BBB               	clrf	(___wmul@multiplicand+1)& (0+255),b
  8858  006BC8  0E0A               	movlw	10
  8859  006BCA  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  8860  006BCC  ECC6  F022         	call	___wmul	;wreg free
  8861  006BD0  C0B8  F0DA         	movff	?___wmul,sprintf@width
  8862  006BD4  C0B9  F0DB         	movff	?___wmul+1,sprintf@width+1
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;doprnt.c: 601: width += *f++ - '0';
  8866  006BD8  0ED0               	movlw	208
  8867  006BDA  6FCC               	movwf	??_sprintf& (0+255),b
  8868  006BDC  69CD               	setf	(??_sprintf+1)& (0+255),b
  8869  006BDE  C0C6  FFF6         	movff	sprintf@f,tblptrl
  8870  006BE2  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  8871  006BE6                     	if	0	;tblptru may be non-zero
  8872  006BE6                     	endif
  8873  006BE6                     	if	0	;tblptru may be non-zero
  8874  006BE6                     	endif
  8875  006BE6  0008               	tblrd		*
  8876  006BE8  50F5               	movf	tablat,w,c
  8877  006BEA  6FCE               	movwf	(??_sprintf+2)& (0+255),b
  8878  006BEC  6BCF               	clrf	(??_sprintf+3)& (0+255),b
  8879  006BEE  51CC               	movf	??_sprintf& (0+255),w,b
  8880  006BF0  27CE               	addwf	(??_sprintf+2)& (0+255),f,b
  8881  006BF2  51CD               	movf	(??_sprintf+1)& (0+255),w,b
  8882  006BF4  23CF               	addwfc	(??_sprintf+3)& (0+255),f,b
  8883  006BF6  51CE               	movf	(??_sprintf+2)& (0+255),w,b
  8884  006BF8  27DA               	addwf	sprintf@width& (0+255),f,b
  8885  006BFA  51CF               	movf	(??_sprintf+3)& (0+255),w,b
  8886  006BFC  23DB               	addwfc	(sprintf@width+1)& (0+255),f,b
  8887                           
  8888                           ; BSR set to: 0
  8889  006BFE  4BC6               	infsnz	sprintf@f& (0+255),f,b
  8890  006C00  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8894  006C02  C0C6  FFF6         	movff	sprintf@f,tblptrl
  8895  006C06  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  8896  006C0A                     	if	0	;tblptru may be non-zero
  8897  006C0A                     	endif
  8898  006C0A                     	if	0	;tblptru may be non-zero
  8899  006C0A                     	endif
  8900  006C0A  0008               	tblrd		*
  8901  006C0C  50F5               	movf	tablat,w,c
  8902  006C0E  EC74  F022         	call	_isdigit
  8903  006C12  E35A               	bnc	l9234
  8904  006C14  D7D4               	goto	l9190
  8905  006C16                     l9198:
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;doprnt.c: 718: case 'x':
  8909                           ;doprnt.c: 721: flag |= 0x80;
  8910  006C16  8FD9               	bsf	sprintf@flag& (0+255),7,b
  8911                           
  8912                           ;doprnt.c: 723: break;
  8913  006C18  D06E               	goto	l1875
  8914  006C1A                     l9200:
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  8918  006C1A  51D4               	movf	sprintf@ap& (0+255),w,b
  8919  006C1C  6ED9               	movwf	fsr2l,c
  8920  006C1E  6ADA               	clrf	fsr2h,c
  8921  006C20  CFDE F0D2          	movff	postinc2,sprintf@cp
  8922  006C24  CFDD F0D3          	movff	postdec2,sprintf@cp+1
  8923                           
  8924                           ; BSR set to: 0
  8925  006C28  0E02               	movlw	2
  8926  006C2A  27D4               	addwf	sprintf@ap& (0+255),f,b
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;doprnt.c: 740: if(!cp)
  8930  006C2C  51D2               	movf	sprintf@cp& (0+255),w,b
  8931  006C2E  11D3               	iorwf	(sprintf@cp+1)& (0+255),w,b
  8932  006C30  E104               	bnz	l9208
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;doprnt.c: 741: cp = "(null)";
  8936  006C32  0EAB               	movlw	low STR_110
  8937  006C34  6FD2               	movwf	sprintf@cp& (0+255),b
  8938  006C36  0E7F               	movlw	high STR_110
  8939  006C38  6FD3               	movwf	(sprintf@cp+1)& (0+255),b
  8940  006C3A                     l9208:
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;doprnt.c: 745: len = 0;
  8944  006C3A  6BD5               	clrf	sprintf@len& (0+255),b
  8945  006C3C  6BD6               	clrf	(sprintf@len+1)& (0+255),b
  8946                           
  8947                           ;doprnt.c: 746: while(cp[len])
  8948  006C3E  D002               	goto	l9212
  8949  006C40                     l9210:
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;doprnt.c: 747: len++;
  8953  006C40  4BD5               	infsnz	sprintf@len& (0+255),f,b
  8954  006C42  2BD6               	incf	(sprintf@len+1)& (0+255),f,b
  8955  006C44                     l9212:
  8956                           
  8957                           ; BSR set to: 0
  8958  006C44  51D5               	movf	sprintf@len& (0+255),w,b
  8959  006C46  25D2               	addwf	sprintf@cp& (0+255),w,b
  8960  006C48  6FCC               	movwf	??_sprintf& (0+255),b
  8961  006C4A  51D6               	movf	(sprintf@len+1)& (0+255),w,b
  8962  006C4C  21D3               	addwfc	(sprintf@cp+1)& (0+255),w,b
  8963  006C4E  6FCD               	movwf	(??_sprintf+1)& (0+255),b
  8964  006C50  C0CC  FFF6         	movff	??_sprintf,tblptrl
  8965  006C54  C0CD  FFF7         	movff	??_sprintf+1,tblptrh
  8966  006C58                     	if	0	;tblptru may be non-zero
  8967  006C58                     	endif
  8968  006C58                     	if	0	;tblptru may be non-zero
  8969  006C58                     	endif
  8970  006C58  0008               	tblrd		*
  8971  006C5A  50F5               	movf	tablat,w,c
  8972  006C5C  E1F1               	bnz	l9210
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;doprnt.c: 757: if(width > len)
  8976  006C5E  51DA               	movf	sprintf@width& (0+255),w,b
  8977  006C60  5DD5               	subwf	sprintf@len& (0+255),w,b
  8978  006C62  51DB               	movf	(sprintf@width+1)& (0+255),w,b
  8979  006C64  59D6               	subwfb	(sprintf@len+1)& (0+255),w,b
  8980  006C66  E205               	bc	l1883
  8981                           
  8982                           ; BSR set to: 0
  8983                           ;doprnt.c: 758: width -= len;
  8984  006C68  51D5               	movf	sprintf@len& (0+255),w,b
  8985  006C6A  5FDA               	subwf	sprintf@width& (0+255),f,b
  8986  006C6C  51D6               	movf	(sprintf@len+1)& (0+255),w,b
  8987  006C6E  5BDB               	subwfb	(sprintf@width+1)& (0+255),f,b
  8988  006C70  D00B               	goto	l9222
  8989  006C72                     l1883:
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;doprnt.c: 759: else
  8993                           ;doprnt.c: 760: width = 0;
  8994  006C72  6BDA               	clrf	sprintf@width& (0+255),b
  8995  006C74  6BDB               	clrf	(sprintf@width+1)& (0+255),b
  8996  006C76  D008               	goto	l9222
  8997  006C78                     l9218:
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;doprnt.c: 765: ((*sp++ = (' ')));
  9001  006C78  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  9002  006C7C  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  9003  006C80  0E20               	movlw	32
  9004  006C82  6EDF               	movwf	indf2,c
  9005                           
  9006                           ; BSR set to: 0
  9007  006C84  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  9008  006C86  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  9009  006C88                     l9222:
  9010                           
  9011                           ; BSR set to: 0
  9012  006C88  07DA               	decf	sprintf@width& (0+255),f,b
  9013  006C8A  A0D8               	btfss	status,0,c
  9014  006C8C  07DB               	decf	(sprintf@width+1)& (0+255),f,b
  9015  006C8E  29DA               	incf	sprintf@width& (0+255),w,b
  9016  006C90  E1F3               	bnz	l9218
  9017  006C92  29DB               	incf	(sprintf@width+1)& (0+255),w,b
  9018  006C94  E010               	bz	l9230
  9019  006C96  D7F0               	goto	l9218
  9020  006C98                     l9224:
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  9024  006C98  C0D2  FFF6         	movff	sprintf@cp,tblptrl
  9025  006C9C  C0D3  FFF7         	movff	sprintf@cp+1,tblptrh
  9026  006CA0                     	if	0	;tblptru may be non-zero
  9027  006CA0                     	endif
  9028  006CA0                     	if	0	;tblptru may be non-zero
  9029  006CA0                     	endif
  9030  006CA0  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  9031  006CA4  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  9032  006CA8  0008               	tblrd		*
  9033  006CAA  CFF5 FFDF          	movff	tablat,indf2
  9034                           
  9035                           ; BSR set to: 0
  9036  006CAE  4BD2               	infsnz	sprintf@cp& (0+255),f,b
  9037  006CB0  2BD3               	incf	(sprintf@cp+1)& (0+255),f,b
  9038                           
  9039                           ; BSR set to: 0
  9040  006CB2  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  9041  006CB4  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  9042  006CB6                     l9230:
  9043                           
  9044                           ; BSR set to: 0
  9045  006CB6  07D5               	decf	sprintf@len& (0+255),f,b
  9046  006CB8  A0D8               	btfss	status,0,c
  9047  006CBA  07D6               	decf	(sprintf@len+1)& (0+255),f,b
  9048  006CBC  29D5               	incf	sprintf@len& (0+255),w,b
  9049  006CBE  E1EC               	bnz	l9224
  9050  006CC0  29D6               	incf	(sprintf@len+1)& (0+255),w,b
  9051  006CC2  E101 D116          	bz	l9338
  9052  006CC6  D7E8               	goto	l9224
  9053  006CC8                     l9234:
  9054                           
  9055                           ; BSR set to: 0
  9056  006CC8  C0C6  FFF6         	movff	sprintf@f,tblptrl
  9057  006CCC  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  9058  006CD0  4BC6               	infsnz	sprintf@f& (0+255),f,b
  9059  006CD2  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  9060  006CD4                     	if	0	;tblptru may be non-zero
  9061  006CD4                     	endif
  9062  006CD4                     	if	0	;tblptru may be non-zero
  9063  006CD4                     	endif
  9064  006CD4  0008               	tblrd		*
  9065  006CD6  CFF5 F0DC          	movff	tablat,sprintf@c
  9066  006CDA  51DC               	movf	sprintf@c& (0+255),w,b
  9067                           
  9068                           ; Switch size 1, requested type "speed"
  9069                           ; Number of cases is 6, Range of values is 0 to 120
  9070                           ; switch strategies available:
  9071                           ; Name         Instructions Cycles
  9072                           ; simple_byte           19    10 (average)
  9073                           ;	Chosen strategy is simple_byte
  9074  006CDC  E101 D115          	bz	l9340
  9075  006CE0  0A58               	xorlw	88	; case 88
  9076  006CE2  E099               	bz	l9198
  9077  006CE4  0A3C               	xorlw	60	; case 100
  9078  006CE6  E007               	bz	l1875
  9079  006CE8  0A0D               	xorlw	13	; case 105
  9080  006CEA  E005               	bz	l1875
  9081  006CEC  0A1A               	xorlw	26	; case 115
  9082  006CEE  E095               	bz	l9200
  9083  006CF0  0A0B               	xorlw	11	; case 120
  9084  006CF2  E091               	bz	l9198
  9085  006CF4  D0FE               	goto	l9338
  9086  006CF6                     l1875:
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  9090  006CF6  BFD9               	btfsc	sprintf@flag& (0+255),7,b
  9091  006CF8  D012               	goto	l9246
  9092                           
  9093                           ; BSR set to: 0
  9094                           ;doprnt.c: 1253: {
  9095                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  9096  006CFA  51D4               	movf	sprintf@ap& (0+255),w,b
  9097  006CFC  6ED9               	movwf	fsr2l,c
  9098  006CFE  6ADA               	clrf	fsr2h,c
  9099  006D00  CFDE F0D7          	movff	postinc2,sprintf@val
  9100  006D04  CFDD F0D8          	movff	postdec2,sprintf@val+1
  9101                           
  9102                           ; BSR set to: 0
  9103  006D08  0E02               	movlw	2
  9104  006D0A  27D4               	addwf	sprintf@ap& (0+255),f,b
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;doprnt.c: 1261: if((int)val < 0) {
  9108  006D0C  AFD8               	btfss	(sprintf@val+1)& (0+255),7,b
  9109  006D0E  D03D               	goto	l9280
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;doprnt.c: 1262: flag |= 0x03;
  9113  006D10  0E03               	movlw	3
  9114  006D12  13D9               	iorwf	sprintf@flag& (0+255),f,b
  9115                           
  9116                           ; BSR set to: 0
  9117                           ;doprnt.c: 1263: val = -val;
  9118  006D14  6DD7               	negf	sprintf@val& (0+255),b
  9119  006D16  1FD8               	comf	(sprintf@val+1)& (0+255),f,b
  9120  006D18  B0D8               	btfsc	status,0,c
  9121  006D1A  2BD8               	incf	(sprintf@val+1)& (0+255),f,b
  9122  006D1C  D036               	goto	l9280
  9123  006D1E                     l9246:
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;doprnt.c: 1268: else
  9127                           ;doprnt.c: 1273: {
  9128                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  9129  006D1E  51D4               	movf	sprintf@ap& (0+255),w,b
  9130  006D20  6ED9               	movwf	fsr2l,c
  9131  006D22  6ADA               	clrf	fsr2h,c
  9132  006D24  CFDE F0D7          	movff	postinc2,sprintf@val
  9133  006D28  CFDD F0D8          	movff	postdec2,sprintf@val+1
  9134                           
  9135                           ; BSR set to: 0
  9136  006D2C  0E02               	movlw	2
  9137  006D2E  27D4               	addwf	sprintf@ap& (0+255),f,b
  9138  006D30  D02C               	goto	l9280
  9139  006D32                     l9250:
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9143  006D32  0E01               	movlw	1
  9144  006D34  6FDC               	movwf	sprintf@c& (0+255),b
  9145  006D36                     l9256:
  9146                           
  9147                           ; BSR set to: 0
  9148                           ;doprnt.c: 1306: if(val < dpowers[c])
  9149  006D36  51DC               	movf	sprintf@c& (0+255),w,b
  9150  006D38  0D02               	mullw	2
  9151  006D3A  0E87               	movlw	low _dpowers
  9152  006D3C  24F3               	addwf	prodl,w,c
  9153  006D3E  6EF6               	movwf	tblptrl,c
  9154  006D40  0E77               	movlw	high _dpowers
  9155  006D42  20F4               	addwfc	prodh,w,c
  9156  006D44  6EF7               	movwf	tblptrh,c
  9157  006D46                     	if	0	;There are less than 3 active tblptr bytes
  9158  006D46                     	endif
  9159  006D46  0009               	tblrd		*+
  9160  006D48  50F5               	movf	tablat,w,c
  9161  006D4A  5DD7               	subwf	sprintf@val& (0+255),w,b
  9162  006D4C  0009               	tblrd		*+
  9163  006D4E  50F5               	movf	tablat,w,c
  9164  006D50  59D8               	subwfb	(sprintf@val+1)& (0+255),w,b
  9165  006D52  E320               	bnc	l9282
  9166                           
  9167                           ; BSR set to: 0
  9168  006D54  2BDC               	incf	sprintf@c& (0+255),f,b
  9169                           
  9170                           ; BSR set to: 0
  9171  006D56  0E05               	movlw	5
  9172  006D58  19DC               	xorwf	sprintf@c& (0+255),w,b
  9173  006D5A  E01C               	bz	l9282
  9174  006D5C  D7EC               	goto	l9256
  9175  006D5E                     l9264:
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  9179  006D5E  0E01               	movlw	1
  9180  006D60  6FDC               	movwf	sprintf@c& (0+255),b
  9181  006D62                     l9270:
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;doprnt.c: 1317: if(val < hexpowers[c])
  9185  006D62  51DC               	movf	sprintf@c& (0+255),w,b
  9186  006D64  0D02               	mullw	2
  9187  006D66  0E91               	movlw	low _hexpowers
  9188  006D68  24F3               	addwf	prodl,w,c
  9189  006D6A  6EF6               	movwf	tblptrl,c
  9190  006D6C  0E77               	movlw	high _hexpowers
  9191  006D6E  20F4               	addwfc	prodh,w,c
  9192  006D70  6EF7               	movwf	tblptrh,c
  9193  006D72                     	if	0	;There are less than 3 active tblptr bytes
  9194  006D72                     	endif
  9195  006D72  0009               	tblrd		*+
  9196  006D74  50F5               	movf	tablat,w,c
  9197  006D76  5DD7               	subwf	sprintf@val& (0+255),w,b
  9198  006D78  0009               	tblrd		*+
  9199  006D7A  50F5               	movf	tablat,w,c
  9200  006D7C  59D8               	subwfb	(sprintf@val+1)& (0+255),w,b
  9201  006D7E  E30A               	bnc	l9282
  9202                           
  9203                           ; BSR set to: 0
  9204  006D80  2BDC               	incf	sprintf@c& (0+255),f,b
  9205                           
  9206                           ; BSR set to: 0
  9207  006D82  0E04               	movlw	4
  9208  006D84  19DC               	xorwf	sprintf@c& (0+255),w,b
  9209  006D86  E006               	bz	l9282
  9210  006D88  D7EC               	goto	l9270
  9211  006D8A                     l9280:
  9212                           
  9213                           ; BSR set to: 0
  9214  006D8A  51D9               	movf	sprintf@flag& (0+255),w,b
  9215  006D8C  0B80               	andlw	128
  9216                           
  9217                           ; Switch size 1, requested type "speed"
  9218                           ; Number of cases is 2, Range of values is 0 to 128
  9219                           ; switch strategies available:
  9220                           ; Name         Instructions Cycles
  9221                           ; simple_byte            7     4 (average)
  9222                           ;	Chosen strategy is simple_byte
  9223  006D8E  E0D1               	bz	l9250
  9224  006D90  0A80               	xorlw	128	; case 128
  9225  006D92  E0E5               	bz	l9264
  9226  006D94                     l9282:
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9230  006D94  51DA               	movf	sprintf@width& (0+255),w,b
  9231  006D96  11DB               	iorwf	(sprintf@width+1)& (0+255),w,b
  9232  006D98  E008               	bz	l9288
  9233                           
  9234                           ; BSR set to: 0
  9235  006D9A  C0D9  F0CC         	movff	sprintf@flag,??_sprintf
  9236  006D9E  0E03               	movlw	3
  9237  006DA0  17CC               	andwf	??_sprintf& (0+255),f,b
  9238  006DA2  E003               	bz	l9288
  9239                           
  9240                           ; BSR set to: 0
  9241                           ;doprnt.c: 1346: width--;
  9242  006DA4  07DA               	decf	sprintf@width& (0+255),f,b
  9243  006DA6  A0D8               	btfss	status,0,c
  9244  006DA8  07DB               	decf	(sprintf@width+1)& (0+255),f,b
  9245  006DAA                     l9288:
  9246                           
  9247                           ; BSR set to: 0
  9248                           ;doprnt.c: 1381: if(width > c)
  9249  006DAA  0E80               	movlw	128
  9250  006DAC  BFDC               	btfsc	sprintf@c& (0+255),7,b
  9251  006DAE  0E7F               	movlw	127
  9252  006DB0  6FCC               	movwf	??_sprintf& (0+255),b
  9253  006DB2  51DA               	movf	sprintf@width& (0+255),w,b
  9254  006DB4  5DDC               	subwf	sprintf@c& (0+255),w,b
  9255  006DB6  51DB               	movf	(sprintf@width+1)& (0+255),w,b
  9256  006DB8  0A80               	xorlw	128
  9257  006DBA  59CC               	subwfb	??_sprintf& (0+255),w,b
  9258  006DBC  E207               	bc	l1906
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;doprnt.c: 1382: width -= c;
  9262  006DBE  51DC               	movf	sprintf@c& (0+255),w,b
  9263  006DC0  5FDA               	subwf	sprintf@width& (0+255),f,b
  9264  006DC2  0E00               	movlw	0
  9265  006DC4  BFDC               	btfsc	sprintf@c& (0+255),7,b
  9266  006DC6  0EFF               	movlw	255
  9267  006DC8  5BDB               	subwfb	(sprintf@width+1)& (0+255),f,b
  9268  006DCA  D002               	goto	l1907
  9269  006DCC                     l1906:
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;doprnt.c: 1383: else
  9273                           ;doprnt.c: 1384: width = 0;
  9274  006DCC  6BDA               	clrf	sprintf@width& (0+255),b
  9275  006DCE  6BDB               	clrf	(sprintf@width+1)& (0+255),b
  9276  006DD0                     l1907:
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;doprnt.c: 1387: if(flag & 0x04) {
  9280  006DD0  A5D9               	btfss	sprintf@flag& (0+255),2,b
  9281  006DD2  D01C               	goto	l9306
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;doprnt.c: 1392: if(flag & 0x03)
  9285  006DD4  C0D9  F0CC         	movff	sprintf@flag,??_sprintf
  9286  006DD8  0E03               	movlw	3
  9287  006DDA  17CC               	andwf	??_sprintf& (0+255),f,b
  9288  006DDC  E008               	bz	l9298
  9289                           
  9290                           ; BSR set to: 0
  9291                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  9292  006DDE  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  9293  006DE2  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  9294  006DE6  0E2D               	movlw	45
  9295  006DE8  6EDF               	movwf	indf2,c
  9296                           
  9297                           ; BSR set to: 0
  9298  006DEA  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  9299  006DEC  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  9300  006DEE                     l9298:
  9301                           
  9302                           ; BSR set to: 0
  9303                           ;doprnt.c: 1415: if(width)
  9304  006DEE  51DA               	movf	sprintf@width& (0+255),w,b
  9305  006DF0  11DB               	iorwf	(sprintf@width+1)& (0+255),w,b
  9306  006DF2  E02A               	bz	l9320
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  9310  006DF4  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  9311  006DF8  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  9312  006DFC  0E30               	movlw	48
  9313  006DFE  6EDF               	movwf	indf2,c
  9314                           
  9315                           ; BSR set to: 0
  9316  006E00  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  9317  006E02  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;doprnt.c: 1418: while(--width);
  9321  006E04  07DA               	decf	sprintf@width& (0+255),f,b
  9322  006E06  A0D8               	btfss	status,0,c
  9323  006E08  07DB               	decf	(sprintf@width+1)& (0+255),f,b
  9324  006E0A  D7F1               	goto	l9298
  9325  006E0C                     l9306:
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;doprnt.c: 1422: {
  9329                           ;doprnt.c: 1424: if(width
  9330                           ;doprnt.c: 1428: )
  9331  006E0C  51DA               	movf	sprintf@width& (0+255),w,b
  9332  006E0E  11DB               	iorwf	(sprintf@width+1)& (0+255),w,b
  9333  006E10  E00E               	bz	l9314
  9334  006E12                     l9308:
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  9338  006E12  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  9339  006E16  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  9340  006E1A  0E20               	movlw	32
  9341  006E1C  6EDF               	movwf	indf2,c
  9342                           
  9343                           ; BSR set to: 0
  9344  006E1E  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  9345  006E20  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;doprnt.c: 1431: while(--width);
  9349  006E22  07DA               	decf	sprintf@width& (0+255),f,b
  9350  006E24  A0D8               	btfss	status,0,c
  9351  006E26  07DB               	decf	(sprintf@width+1)& (0+255),f,b
  9352  006E28  51DA               	movf	sprintf@width& (0+255),w,b
  9353  006E2A  11DB               	iorwf	(sprintf@width+1)& (0+255),w,b
  9354  006E2C  E1F2               	bnz	l9308
  9355  006E2E                     l9314:
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;doprnt.c: 1438: if(flag & 0x03)
  9359  006E2E  C0D9  F0CC         	movff	sprintf@flag,??_sprintf
  9360  006E32  0E03               	movlw	3
  9361  006E34  17CC               	andwf	??_sprintf& (0+255),f,b
  9362  006E36  E008               	bz	l9320
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9366  006E38  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  9367  006E3C  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  9368  006E40  0E2D               	movlw	45
  9369  006E42  6EDF               	movwf	indf2,c
  9370                           
  9371                           ; BSR set to: 0
  9372  006E44  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  9373  006E46  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  9374  006E48                     l9320:
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;doprnt.c: 1469: }
  9378                           ;doprnt.c: 1472: prec = c;
  9379  006E48  C0DC  F0D1         	movff	sprintf@c,sprintf@prec
  9380                           
  9381                           ;doprnt.c: 1474: while(prec--) {
  9382  006E4C  D04F               	goto	l9336
  9383  006E4E                     l9322:
  9384                           
  9385                           ; BSR set to: 0
  9386                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9387  006E4E  51D1               	movf	sprintf@prec& (0+255),w,b
  9388  006E50  0D02               	mullw	2
  9389  006E52  0E87               	movlw	low _dpowers
  9390  006E54  24F3               	addwf	prodl,w,c
  9391  006E56  6EF6               	movwf	tblptrl,c
  9392  006E58  0E77               	movlw	high _dpowers
  9393  006E5A  20F4               	addwfc	prodh,w,c
  9394  006E5C  6EF7               	movwf	tblptrh,c
  9395  006E5E                     	if	0	;There are less than 3 active tblptr bytes
  9396  006E5E                     	endif
  9397  006E5E  0009               	tblrd		*+
  9398  006E60  CFF5 F0BA          	movff	tablat,___lwdiv@divisor
  9399  006E64  000A               	tblrd		*-
  9400  006E66  CFF5 F0BB          	movff	tablat,___lwdiv@divisor+1
  9401  006E6A  C0D7  F0B8         	movff	sprintf@val,___lwdiv@dividend
  9402  006E6E  C0D8  F0B9         	movff	sprintf@val+1,___lwdiv@dividend+1
  9403  006E72  EC18  F025         	call	___lwdiv	;wreg free
  9404  006E76  C0B8  F0BF         	movff	?___lwdiv,___lwmod@dividend
  9405  006E7A  C0B9  F0C0         	movff	?___lwdiv+1,___lwmod@dividend+1
  9406  006E7E  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
  9407  006E80  0E0A               	movlw	10
  9408  006E82  6FC1               	movwf	___lwmod@divisor& (0+255),b
  9409  006E84  ECB0  F024         	call	___lwmod	;wreg free
  9410  006E88  51BF               	movf	?___lwmod& (0+255),w,b
  9411  006E8A  0F30               	addlw	48
  9412  006E8C  6FDC               	movwf	sprintf@c& (0+255),b
  9413                           
  9414                           ;doprnt.c: 1491: break;
  9415  006E8E  D026               	goto	l9332
  9416  006E90                     l9324:
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;doprnt.c: 1499: {
  9420                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  9421  006E90  C0D7  F0B8         	movff	sprintf@val,___lwdiv@dividend
  9422  006E94  C0D8  F0B9         	movff	sprintf@val+1,___lwdiv@dividend+1
  9423  006E98  51D1               	movf	sprintf@prec& (0+255),w,b
  9424  006E9A  0D02               	mullw	2
  9425  006E9C  0E91               	movlw	low _hexpowers
  9426  006E9E  24F3               	addwf	prodl,w,c
  9427  006EA0  6EF6               	movwf	tblptrl,c
  9428  006EA2  0E77               	movlw	high _hexpowers
  9429  006EA4  20F4               	addwfc	prodh,w,c
  9430  006EA6  6EF7               	movwf	tblptrh,c
  9431  006EA8                     	if	0	;There are less than 3 active tblptr bytes
  9432  006EA8                     	endif
  9433  006EA8  0009               	tblrd		*+
  9434  006EAA  CFF5 F0BA          	movff	tablat,___lwdiv@divisor
  9435  006EAE  000A               	tblrd		*-
  9436  006EB0  CFF5 F0BB          	movff	tablat,___lwdiv@divisor+1
  9437  006EB4  EC18  F025         	call	___lwdiv	;wreg free
  9438  006EB8  51B8               	movf	?___lwdiv& (0+255),w,b
  9439  006EBA  0B0F               	andlw	15
  9440  006EBC  6FD0               	movwf	sprintf@idx& (0+255),b
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  9444  006EBE  0EB9               	movlw	low STR_111
  9445  006EC0  25D0               	addwf	sprintf@idx& (0+255),w,b
  9446  006EC2  6EF6               	movwf	tblptrl,c
  9447  006EC4  6AF7               	clrf	tblptrh,c
  9448  006EC6  0E7C               	movlw	high STR_111
  9449  006EC8  22F7               	addwfc	tblptrh,f,c
  9450  006ECA                     	if	0	;There are less than 3 active tblptr bytes
  9451  006ECA                     	endif
  9452  006ECA  0008               	tblrd		*
  9453  006ECC  CFF5 F0DC          	movff	tablat,sprintf@c
  9454                           
  9455                           ;doprnt.c: 1508: }
  9456                           ;doprnt.c: 1510: break;
  9457  006ED0  D005               	goto	l9332
  9458  006ED2                     l9330:
  9459                           
  9460                           ; BSR set to: 0
  9461  006ED2  51D9               	movf	sprintf@flag& (0+255),w,b
  9462  006ED4  0B80               	andlw	128
  9463                           
  9464                           ; Switch size 1, requested type "speed"
  9465                           ; Number of cases is 2, Range of values is 0 to 128
  9466                           ; switch strategies available:
  9467                           ; Name         Instructions Cycles
  9468                           ; simple_byte            7     4 (average)
  9469                           ;	Chosen strategy is simple_byte
  9470  006ED6  E0BB               	bz	l9322
  9471  006ED8  0A80               	xorlw	128	; case 128
  9472  006EDA  E0DA               	bz	l9324
  9473  006EDC                     l9332:
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;doprnt.c: 1524: ((*sp++ = (c)));
  9477  006EDC  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  9478  006EE0  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  9479  006EE4  C0DC  FFDF         	movff	sprintf@c,indf2
  9480                           
  9481                           ; BSR set to: 0
  9482  006EE8  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  9483  006EEA  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  9484  006EEC                     l9336:
  9485                           
  9486                           ; BSR set to: 0
  9487  006EEC  07D1               	decf	sprintf@prec& (0+255),f,b
  9488  006EEE  29D1               	incf	sprintf@prec& (0+255),w,b
  9489  006EF0  E1F0               	bnz	l9330
  9490  006EF2                     l9338:
  9491                           
  9492                           ; BSR set to: 0
  9493  006EF2  C0C6  FFF6         	movff	sprintf@f,tblptrl
  9494  006EF6  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  9495  006EFA  4BC6               	infsnz	sprintf@f& (0+255),f,b
  9496  006EFC  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  9497  006EFE                     	if	0	;tblptru may be non-zero
  9498  006EFE                     	endif
  9499  006EFE                     	if	0	;tblptru may be non-zero
  9500  006EFE                     	endif
  9501  006EFE  0008               	tblrd		*
  9502  006F00  CFF5 F0DC          	movff	tablat,sprintf@c
  9503  006F04  51DC               	movf	sprintf@c& (0+255),w,b
  9504  006F06  E001 D633          	bnz	l9174
  9505  006F0A                     l9340:
  9506                           
  9507                           ; BSR set to: 0
  9508                           ;doprnt.c: 1538: *sp = 0;
  9509  006F0A  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  9510  006F0E  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  9511  006F12  6ADF               	clrf	indf2,c
  9512                           
  9513                           ; BSR set to: 0
  9514  006F14  0C00               	retlw	0	;funcret
  9515  006F16                     __end_of_sprintf:
  9516                           	opt stack 0
  9517                           tblptru	equ	0xFF8
  9518                           tblptrh	equ	0xFF7
  9519                           tblptrl	equ	0xFF6
  9520                           tablat	equ	0xFF5
  9521                           prodh	equ	0xFF4
  9522                           prodl	equ	0xFF3
  9523                           intcon	equ	0xFF2
  9524                           postinc0	equ	0xFEE
  9525                           wreg	equ	0xFE8
  9526                           postdec1	equ	0xFE5
  9527                           fsr1l	equ	0xFE1
  9528                           indf2	equ	0xFDF
  9529                           postinc2	equ	0xFDE
  9530                           postdec2	equ	0xFDD
  9531                           fsr2h	equ	0xFDA
  9532                           fsr2l	equ	0xFD9
  9533                           status	equ	0xFD8
  9534                           
  9535 ;; *************** function _isdigit *****************
  9536 ;; Defined at:
  9537 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/isdigit.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  c               1    wreg     unsigned char 
  9540 ;; Auto vars:     Size  Location     Type
  9541 ;;  c               1    2[BANK0 ] unsigned char 
  9542 ;; Return value:  Size  Location     Type
  9543 ;;		None               void
  9544 ;; Registers used:
  9545 ;;		wreg, status,2, status,0
  9546 ;; Tracked objects:
  9547 ;;		On entry : F/0
  9548 ;;		On exit  : F/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9551 ;;      Params:         0       0       0       0       0       0       0       0       0
  9552 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9553 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9554 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9555 ;;Total ram usage:        3 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:   11
  9558 ;; This function calls:
  9559 ;;		Nothing
  9560 ;; This function is called by:
  9561 ;;		_sprintf
  9562 ;; This function uses a non-reentrant model
  9563 ;;
  9564                           
  9565                           	psect	text26
  9566  0044E8                     __ptext26:
  9567                           	opt stack 0
  9568  0044E8                     _isdigit:
  9569                           	opt stack 16
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;incstack = 0
  9573                           ;isdigit@c stored from wreg
  9574  0044E8  6FBA               	movwf	isdigit@c& (0+255),b
  9575  0044EA  0100               	movlb	0	; () banked
  9576  0044EC  6BB9               	clrf	_isdigit$5906& (0+255),b
  9577                           
  9578                           ; BSR set to: 0
  9579  0044EE  0E3A               	movlw	58
  9580  0044F0  61BA               	cpfslt	isdigit@c& (0+255),b
  9581  0044F2  D005               	goto	l9002
  9582                           
  9583                           ; BSR set to: 0
  9584  0044F4  0E2F               	movlw	47
  9585  0044F6  65BA               	cpfsgt	isdigit@c& (0+255),b
  9586  0044F8  D002               	goto	l9002
  9587                           
  9588                           ; BSR set to: 0
  9589  0044FA  0E01               	movlw	1
  9590  0044FC  6FB9               	movwf	_isdigit$5906& (0+255),b
  9591  0044FE                     l9002:
  9592                           
  9593                           ; BSR set to: 0
  9594  0044FE  C0B9  F0B8         	movff	_isdigit$5906,??_isdigit
  9595  004502  31B8               	rrcf	??_isdigit& (0+255),w,b
  9596                           
  9597                           ; BSR set to: 0
  9598  004504  0012               	return		;funcret
  9599  004506                     __end_of_isdigit:
  9600                           	opt stack 0
  9601                           tblptru	equ	0xFF8
  9602                           tblptrh	equ	0xFF7
  9603                           tblptrl	equ	0xFF6
  9604                           tablat	equ	0xFF5
  9605                           prodh	equ	0xFF4
  9606                           prodl	equ	0xFF3
  9607                           intcon	equ	0xFF2
  9608                           postinc0	equ	0xFEE
  9609                           wreg	equ	0xFE8
  9610                           postdec1	equ	0xFE5
  9611                           fsr1l	equ	0xFE1
  9612                           indf2	equ	0xFDF
  9613                           postinc2	equ	0xFDE
  9614                           postdec2	equ	0xFDD
  9615                           fsr2h	equ	0xFDA
  9616                           fsr2l	equ	0xFD9
  9617                           status	equ	0xFD8
  9618                           
  9619 ;; *************** function ___wmul *****************
  9620 ;; Defined at:
  9621 ;;		line 15 in file "/opt/microchip/xc8/v1.36/sources/common/Umul16.c"
  9622 ;; Parameters:    Size  Location     Type
  9623 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9624 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;  product         2    4[BANK0 ] unsigned int 
  9627 ;; Return value:  Size  Location     Type
  9628 ;;                  2    0[BANK0 ] unsigned int 
  9629 ;; Registers used:
  9630 ;;		wreg, status,2, status,0, prodl, prodh
  9631 ;; Tracked objects:
  9632 ;;		On entry : F/0
  9633 ;;		On exit  : F/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9636 ;;      Params:         0       4       0       0       0       0       0       0       0
  9637 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9639 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9640 ;;Total ram usage:        6 bytes
  9641 ;; Hardware stack levels used:    1
  9642 ;; Hardware stack levels required when called:   11
  9643 ;; This function calls:
  9644 ;;		Nothing
  9645 ;; This function is called by:
  9646 ;;		_sprintf
  9647 ;; This function uses a non-reentrant model
  9648 ;;
  9649                           
  9650                           	psect	text27
  9651  00458C                     __ptext27:
  9652                           	opt stack 0
  9653  00458C                     ___wmul:
  9654                           	opt stack 16
  9655                           
  9656                           ; BSR set to: 0
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;incstack = 0
  9660  00458C  51B8               	movf	___wmul@multiplier& (0+255),w,b
  9661  00458E  03BA               	mulwf	___wmul@multiplicand& (0+255),b
  9662  004590  CFF3 F0BC          	movff	prodl,___wmul@product
  9663  004594  CFF4 F0BD          	movff	prodh,___wmul@product+1
  9664  004598  51B8               	movf	___wmul@multiplier& (0+255),w,b
  9665  00459A  03BB               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9666  00459C  50F3               	movf	prodl,w,c
  9667  00459E  27BD               	addwf	(___wmul@product+1)& (0+255),f,b
  9668  0045A0  51B9               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9669  0045A2  03BA               	mulwf	___wmul@multiplicand& (0+255),b
  9670  0045A4  50F3               	movf	prodl,w,c
  9671  0045A6  27BD               	addwf	(___wmul@product+1)& (0+255),f,b
  9672                           
  9673                           ; BSR set to: 0
  9674  0045A8  C0BC  F0B8         	movff	___wmul@product,?___wmul
  9675  0045AC  C0BD  F0B9         	movff	___wmul@product+1,?___wmul+1
  9676                           
  9677                           ; BSR set to: 0
  9678  0045B0  0012               	return		;funcret
  9679  0045B2                     __end_of___wmul:
  9680                           	opt stack 0
  9681                           tblptru	equ	0xFF8
  9682                           tblptrh	equ	0xFF7
  9683                           tblptrl	equ	0xFF6
  9684                           tablat	equ	0xFF5
  9685                           prodh	equ	0xFF4
  9686                           prodl	equ	0xFF3
  9687                           intcon	equ	0xFF2
  9688                           postinc0	equ	0xFEE
  9689                           wreg	equ	0xFE8
  9690                           postdec1	equ	0xFE5
  9691                           fsr1l	equ	0xFE1
  9692                           indf2	equ	0xFDF
  9693                           postinc2	equ	0xFDE
  9694                           postdec2	equ	0xFDD
  9695                           fsr2h	equ	0xFDA
  9696                           fsr2l	equ	0xFD9
  9697                           status	equ	0xFD8
  9698                           
  9699 ;; *************** function _sendCommand *****************
  9700 ;; Defined at:
  9701 ;;		line 940 in file "../Includes/Board/MOTEapp.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9704 ;;		 -> STR_106(26), STR_105(26), STR_104(26), STR_103(26), 
  9705 ;;		 -> STR_102(1), STR_101(9), STR_100(13), STR_99(13), 
  9706 ;;		 -> STR_98(13), STR_97(13), STR_96(13), STR_95(13), 
  9707 ;;		 -> STR_94(13), STR_93(13), STR_92(16), STR_91(15), 
  9708 ;;		 -> STR_60(24), STR_55(13), cmd(64), STR_47(24), 
  9709 ;;		 -> STR_44(16), STR_41(16), STR_38(49), STR_35(49), 
  9710 ;;		 -> STR_32(25), STR_29(12), STR_22(20), STR_21(2), 
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;		None
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  1    wreg      void 
  9715 ;; Registers used:
  9716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9717 ;; Tracked objects:
  9718 ;;		On entry : F/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9722 ;;      Params:         0       2       0       0       0       0       0       0       0
  9723 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9725 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9726 ;;Total ram usage:        2 bytes
  9727 ;; Hardware stack levels used:    1
  9728 ;; Hardware stack levels required when called:   13
  9729 ;; This function calls:
  9730 ;;		_EUSART_Write
  9731 ;;		_EndLine
  9732 ;; This function is called by:
  9733 ;;		_modemResync
  9734 ;;		_modemSleep
  9735 ;;		_moteJoiningProcess
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           	psect	text28
  9740  004C56                     __ptext28:
  9741                           	opt stack 0
  9742  004C56                     _sendCommand:
  9743                           	opt stack 13
  9744                           
  9745                           ; BSR set to: 0
  9746                           ;MOTEapp.c: 943: while (*string)
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;incstack = 0
  9750  004C56  D015               	goto	l8750
  9751  004C58                     l8746:
  9752                           
  9753                           ;MOTEapp.c: 944: {
  9754                           ;MOTEapp.c: 945: EUSART_Write(*string++);
  9755  004C58  C0B9  FFF6         	movff	sendCommand@string,tblptrl
  9756  004C5C  C0BA  FFF7         	movff	sendCommand@string+1,tblptrh
  9757  004C60  6AF8               	clrf	tblptru,c
  9758  004C62  0E07               	movlw	(high __ramtop+-1)
  9759  004C64  64F7               	cpfsgt	tblptrh,c
  9760  004C66  D003               	bra	u6867
  9761  004C68  0008               	tblrd		*
  9762  004C6A  50F5               	movf	tablat,w,c
  9763  004C6C  D005               	bra	u6860
  9764  004C6E                     u6867:
  9765  004C6E  CFF6 FFE1          	movff	tblptrl,fsr1l
  9766  004C72  CFF7 FFE2          	movff	tblptrh,fsr1h
  9767  004C76  50E7               	movf	indf1,w,c
  9768  004C78                     u6860:
  9769  004C78  ECEB  F023         	call	_EUSART_Write
  9770  004C7C  0100               	movlb	0	; () banked
  9771  004C7E  4BB9               	infsnz	sendCommand@string& (0+255),f,b
  9772  004C80  2BBA               	incf	(sendCommand@string+1)& (0+255),f,b
  9773  004C82                     l8750:
  9774                           
  9775                           ; BSR set to: 0
  9776  004C82  C0B9  FFF6         	movff	sendCommand@string,tblptrl
  9777  004C86  C0BA  FFF7         	movff	sendCommand@string+1,tblptrh
  9778  004C8A  6AF8               	clrf	tblptru,c
  9779  004C8C  0E07               	movlw	(high __ramtop+-1)
  9780  004C8E  64F7               	cpfsgt	tblptrh,c
  9781  004C90  D003               	bra	u6877
  9782  004C92  0008               	tblrd		*
  9783  004C94  50F5               	movf	tablat,w,c
  9784  004C96  D005               	bra	u6870
  9785  004C98                     u6877:
  9786  004C98  CFF6 FFE1          	movff	tblptrl,fsr1l
  9787  004C9C  CFF7 FFE2          	movff	tblptrh,fsr1h
  9788  004CA0  50E7               	movf	indf1,w,c
  9789  004CA2                     u6870:
  9790  004CA2  0900               	iorlw	0
  9791  004CA4  E1D9               	bnz	l8746
  9792                           
  9793                           ;MOTEapp.c: 946: }
  9794                           ;MOTEapp.c: 947: EndLine();
  9795  004CA6  EFAC  F021         	goto	_EndLine	;wreg free
  9796  004CAA                     __end_of_sendCommand:
  9797                           	opt stack 0
  9798                           tblptru	equ	0xFF8
  9799                           tblptrh	equ	0xFF7
  9800                           tblptrl	equ	0xFF6
  9801                           tablat	equ	0xFF5
  9802                           prodh	equ	0xFF4
  9803                           prodl	equ	0xFF3
  9804                           intcon	equ	0xFF2
  9805                           postinc0	equ	0xFEE
  9806                           wreg	equ	0xFE8
  9807                           indf1	equ	0xFE7
  9808                           postdec1	equ	0xFE5
  9809                           fsr1h	equ	0xFE2
  9810                           fsr1l	equ	0xFE1
  9811                           indf2	equ	0xFDF
  9812                           postinc2	equ	0xFDE
  9813                           postdec2	equ	0xFDD
  9814                           fsr2h	equ	0xFDA
  9815                           fsr2l	equ	0xFD9
  9816                           status	equ	0xFD8
  9817                           
  9818 ;; *************** function _EndLine *****************
  9819 ;; Defined at:
  9820 ;;		line 934 in file "../Includes/Board/MOTEapp.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;		None
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;		None
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  1    wreg      void 
  9827 ;; Registers used:
  9828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9834 ;;      Params:         0       0       0       0       0       0       0       0       0
  9835 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9836 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9837 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9838 ;;Total ram usage:        0 bytes
  9839 ;; Hardware stack levels used:    1
  9840 ;; Hardware stack levels required when called:   12
  9841 ;; This function calls:
  9842 ;;		_EUSART_Write
  9843 ;; This function is called by:
  9844 ;;		_sendCommand
  9845 ;;		_sendDataCommand
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849                           	psect	text29
  9850  004358                     __ptext29:
  9851                           	opt stack 0
  9852  004358                     _EndLine:
  9853                           	opt stack 15
  9854                           
  9855                           ;MOTEapp.c: 936: EUSART_Write(0x0D);
  9856                           
  9857                           ;incstack = 0
  9858  004358  0E0D               	movlw	13
  9859  00435A  ECEB  F023         	call	_EUSART_Write
  9860                           
  9861                           ;MOTEapp.c: 937: EUSART_Write(0x0A);
  9862  00435E  0E0A               	movlw	10
  9863  004360  EFEB  F023         	goto	_EUSART_Write
  9864  004364                     __end_of_EndLine:
  9865                           	opt stack 0
  9866                           tblptru	equ	0xFF8
  9867                           tblptrh	equ	0xFF7
  9868                           tblptrl	equ	0xFF6
  9869                           tablat	equ	0xFF5
  9870                           prodh	equ	0xFF4
  9871                           prodl	equ	0xFF3
  9872                           intcon	equ	0xFF2
  9873                           postinc0	equ	0xFEE
  9874                           wreg	equ	0xFE8
  9875                           indf1	equ	0xFE7
  9876                           postdec1	equ	0xFE5
  9877                           fsr1h	equ	0xFE2
  9878                           fsr1l	equ	0xFE1
  9879                           indf2	equ	0xFDF
  9880                           postinc2	equ	0xFDE
  9881                           postdec2	equ	0xFDD
  9882                           fsr2h	equ	0xFDA
  9883                           fsr2l	equ	0xFD9
  9884                           status	equ	0xFD8
  9885                           
  9886 ;; *************** function _oled_putUint16 *****************
  9887 ;; Defined at:
  9888 ;;		line 240 in file "../Includes/Drivers/SSD1306oLED.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;  number          2   18[BANK0 ] unsigned int 
  9891 ;;  station_dot     1   20[BANK0 ] unsigned char 
  9892 ;;  start_page      1   21[BANK0 ] unsigned char 
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;  numData         6   22[BANK0 ] struct .
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9899 ;; Tracked objects:
  9900 ;;		On entry : F/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9904 ;;      Params:         0       4       0       0       0       0       0       0       0
  9905 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9906 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9907 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9908 ;;Total ram usage:       10 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; Hardware stack levels required when called:   16
  9911 ;; This function calls:
  9912 ;;		___lwdiv
  9913 ;;		___lwmod
  9914 ;;		_oled_putString
  9915 ;; This function is called by:
  9916 ;;		_moteJoiningProcess
  9917 ;;		_moteRunningProcess
  9918 ;; This function uses a non-reentrant model
  9919 ;;
  9920                           
  9921                           	psect	text30
  9922  006022                     __ptext30:
  9923                           	opt stack 0
  9924  006022                     _oled_putUint16:
  9925                           	opt stack 12
  9926                           
  9927                           ; BSR set to: 0
  9928                           ;SSD1306oLED.c: 242: display_data_t numData;
  9929                           ;SSD1306oLED.c: 243: numData.d4 = '0' + (number % 10);
  9930                           
  9931                           ;incstack = 0
  9932  006022  C0CA  F0BF         	movff	oled_putUint16@number,___lwmod@dividend
  9933  006026  C0CB  F0C0         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9934  00602A  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
  9935  00602C  0E0A               	movlw	10
  9936  00602E  6FC1               	movwf	___lwmod@divisor& (0+255),b
  9937  006030  ECB0  F024         	call	___lwmod	;wreg free
  9938  006034  51BF               	movf	?___lwmod& (0+255),w,b
  9939  006036  0F30               	addlw	48
  9940  006038  6FD2               	movwf	(oled_putUint16@numData+4)& (0+255),b
  9941                           
  9942                           ;SSD1306oLED.c: 244: number /= 10;
  9943  00603A  C0CA  F0B8         	movff	oled_putUint16@number,___lwdiv@dividend
  9944  00603E  C0CB  F0B9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9945  006042  6BBB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9946  006044  0E0A               	movlw	10
  9947  006046  6FBA               	movwf	___lwdiv@divisor& (0+255),b
  9948  006048  EC18  F025         	call	___lwdiv	;wreg free
  9949  00604C  C0B8  F0CA         	movff	?___lwdiv,oled_putUint16@number
  9950  006050  C0B9  F0CB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9951                           
  9952                           ;SSD1306oLED.c: 245: numData.d3 = '0' + (number % 10);
  9953  006054  C0CA  F0BF         	movff	oled_putUint16@number,___lwmod@dividend
  9954  006058  C0CB  F0C0         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9955  00605C  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
  9956  00605E  0E0A               	movlw	10
  9957  006060  6FC1               	movwf	___lwmod@divisor& (0+255),b
  9958  006062  ECB0  F024         	call	___lwmod	;wreg free
  9959  006066  51BF               	movf	?___lwmod& (0+255),w,b
  9960  006068  0F30               	addlw	48
  9961  00606A  6FD1               	movwf	(oled_putUint16@numData+3)& (0+255),b
  9962                           
  9963                           ;SSD1306oLED.c: 246: number /= 10;
  9964  00606C  C0CA  F0B8         	movff	oled_putUint16@number,___lwdiv@dividend
  9965  006070  C0CB  F0B9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9966  006074  6BBB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9967  006076  0E0A               	movlw	10
  9968  006078  6FBA               	movwf	___lwdiv@divisor& (0+255),b
  9969  00607A  EC18  F025         	call	___lwdiv	;wreg free
  9970  00607E  C0B8  F0CA         	movff	?___lwdiv,oled_putUint16@number
  9971  006082  C0B9  F0CB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9972                           
  9973                           ;SSD1306oLED.c: 247: numData.d2 = '0' + (number % 10);
  9974  006086  C0CA  F0BF         	movff	oled_putUint16@number,___lwmod@dividend
  9975  00608A  C0CB  F0C0         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9976  00608E  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
  9977  006090  0E0A               	movlw	10
  9978  006092  6FC1               	movwf	___lwmod@divisor& (0+255),b
  9979  006094  ECB0  F024         	call	___lwmod	;wreg free
  9980  006098  51BF               	movf	?___lwmod& (0+255),w,b
  9981  00609A  0F30               	addlw	48
  9982  00609C  6FD0               	movwf	(oled_putUint16@numData+2)& (0+255),b
  9983                           
  9984                           ;SSD1306oLED.c: 248: number /= 10;
  9985  00609E  C0CA  F0B8         	movff	oled_putUint16@number,___lwdiv@dividend
  9986  0060A2  C0CB  F0B9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  9987  0060A6  6BBB               	clrf	(___lwdiv@divisor+1)& (0+255),b
  9988  0060A8  0E0A               	movlw	10
  9989  0060AA  6FBA               	movwf	___lwdiv@divisor& (0+255),b
  9990  0060AC  EC18  F025         	call	___lwdiv	;wreg free
  9991  0060B0  C0B8  F0CA         	movff	?___lwdiv,oled_putUint16@number
  9992  0060B4  C0B9  F0CB         	movff	?___lwdiv+1,oled_putUint16@number+1
  9993                           
  9994                           ;SSD1306oLED.c: 249: numData.d1 = '0' + (number % 10);
  9995  0060B8  C0CA  F0BF         	movff	oled_putUint16@number,___lwmod@dividend
  9996  0060BC  C0CB  F0C0         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  9997  0060C0  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
  9998  0060C2  0E0A               	movlw	10
  9999  0060C4  6FC1               	movwf	___lwmod@divisor& (0+255),b
 10000  0060C6  ECB0  F024         	call	___lwmod	;wreg free
 10001  0060CA  51BF               	movf	?___lwmod& (0+255),w,b
 10002  0060CC  0F30               	addlw	48
 10003  0060CE  6FCF               	movwf	(oled_putUint16@numData+1)& (0+255),b
 10004                           
 10005                           ;SSD1306oLED.c: 250: number /= 10;
 10006  0060D0  C0CA  F0B8         	movff	oled_putUint16@number,___lwdiv@dividend
 10007  0060D4  C0CB  F0B9         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
 10008  0060D8  6BBB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10009  0060DA  0E0A               	movlw	10
 10010  0060DC  6FBA               	movwf	___lwdiv@divisor& (0+255),b
 10011  0060DE  EC18  F025         	call	___lwdiv	;wreg free
 10012  0060E2  C0B8  F0CA         	movff	?___lwdiv,oled_putUint16@number
 10013  0060E6  C0B9  F0CB         	movff	?___lwdiv+1,oled_putUint16@number+1
 10014                           
 10015                           ;SSD1306oLED.c: 251: numData.d0 = '0' + (number % 10);
 10016  0060EA  C0CA  F0BF         	movff	oled_putUint16@number,___lwmod@dividend
 10017  0060EE  C0CB  F0C0         	movff	oled_putUint16@number+1,___lwmod@dividend+1
 10018  0060F2  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
 10019  0060F4  0E0A               	movlw	10
 10020  0060F6  6FC1               	movwf	___lwmod@divisor& (0+255),b
 10021  0060F8  ECB0  F024         	call	___lwmod	;wreg free
 10022  0060FC  51BF               	movf	?___lwmod& (0+255),w,b
 10023  0060FE  0F30               	addlw	48
 10024  006100  6FCE               	movwf	oled_putUint16@numData& (0+255),b
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;SSD1306oLED.c: 253: numData.b[5]=0;
 10028  006102  6BD3               	clrf	(oled_putUint16@numData+5)& (0+255),b
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;SSD1306oLED.c: 255: oled_putString(numData.b,station_dot,start_page);
 10032  006104  0ECE               	movlw	low oled_putUint16@numData
 10033  006106  6FC5               	movwf	oled_putString@string& (0+255),b
 10034  006108  6BC6               	clrf	(oled_putString@string+1)& (0+255),b
 10035  00610A  C0CC  F0C7         	movff	oled_putUint16@station_dot,oled_putString@station_dot
 10036  00610E  C0CD  F0C8         	movff	oled_putUint16@start_page,oled_putString@start_page
 10037  006112  EF42  F027         	goto	_oled_putString	;wreg free
 10038  006116                     __end_of_oled_putUint16:
 10039                           	opt stack 0
 10040                           tblptru	equ	0xFF8
 10041                           tblptrh	equ	0xFF7
 10042                           tblptrl	equ	0xFF6
 10043                           tablat	equ	0xFF5
 10044                           prodh	equ	0xFF4
 10045                           prodl	equ	0xFF3
 10046                           intcon	equ	0xFF2
 10047                           postinc0	equ	0xFEE
 10048                           wreg	equ	0xFE8
 10049                           indf1	equ	0xFE7
 10050                           postdec1	equ	0xFE5
 10051                           fsr1h	equ	0xFE2
 10052                           fsr1l	equ	0xFE1
 10053                           indf2	equ	0xFDF
 10054                           postinc2	equ	0xFDE
 10055                           postdec2	equ	0xFDD
 10056                           fsr2h	equ	0xFDA
 10057                           fsr2l	equ	0xFD9
 10058                           status	equ	0xFD8
 10059                           
 10060 ;; *************** function _moteApp_delayms *****************
 10061 ;; Defined at:
 10062 ;;		line 1130 in file "../Includes/Board/MOTEapp.c"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;  length          2    0[BANK0 ] unsigned int 
 10065 ;; Auto vars:     Size  Location     Type
 10066 ;;  counter         2    3[BANK0 ] unsigned int 
 10067 ;; Return value:  Size  Location     Type
 10068 ;;                  1    wreg      void 
 10069 ;; Registers used:
 10070 ;;		wreg, status,2, status,0
 10071 ;; Tracked objects:
 10072 ;;		On entry : F/0
 10073 ;;		On exit  : F/0
 10074 ;;		Unchanged: 0/0
 10075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10076 ;;      Params:         0       2       0       0       0       0       0       0       0
 10077 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10078 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10079 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10080 ;;Total ram usage:        5 bytes
 10081 ;; Hardware stack levels used:    1
 10082 ;; Hardware stack levels required when called:   11
 10083 ;; This function calls:
 10084 ;;		Nothing
 10085 ;; This function is called by:
 10086 ;;		_main
 10087 ;;		_modemResync
 10088 ;;		_modemSleep
 10089 ;;		_moteHandler
 10090 ;;		_moteJoiningProcess
 10091 ;;		_moteRunningProcess
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           	psect	text31
 10096  004628                     __ptext31:
 10097                           	opt stack 0
 10098  004628                     _moteApp_delayms:
 10099                           	opt stack 17
 10100                           
 10101                           ; BSR set to: 0
 10102                           ;MOTEapp.c: 1132: uint16_t counter;
 10103                           ;MOTEapp.c: 1133: for(counter = 0; counter < length; counter++)
 10104                           
 10105                           ;incstack = 0
 10106  004628  6BBB               	clrf	moteApp_delayms@counter& (0+255),b
 10107  00462A  6BBC               	clrf	(moteApp_delayms@counter+1)& (0+255),b
 10108  00462C  D00B               	goto	l618
 10109  00462E                     l8738:
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;MOTEapp.c: 1134: {
 10113                           ;MOTEapp.c: 1135: _delay((unsigned long)((1)*(48000000/4000.0)));
 10114  00462E  0E10               	movlw	16
 10115  004630  6FBA               	movwf	??_moteApp_delayms& (0+255),b
 10116  004632  0E94               	movlw	148
 10117  004634                     u8887:
 10118  004634  2EE8               	decfsz	wreg,f,c
 10119  004636  D7FE               	goto	u8887
 10120  004638  2FBA               	decfsz	??_moteApp_delayms& (0+255),f,b
 10121  00463A  D7FC               	goto	u8887
 10122  00463C  D000               	nop2	
 10123  00463E  0100               	movlb	0	; () banked
 10124  004640  4BBB               	infsnz	moteApp_delayms@counter& (0+255),f,b
 10125  004642  2BBC               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 10126  004644                     l618:
 10127                           
 10128                           ; BSR set to: 0
 10129  004644  51B8               	movf	moteApp_delayms@length& (0+255),w,b
 10130  004646  5DBB               	subwf	moteApp_delayms@counter& (0+255),w,b
 10131  004648  51B9               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 10132  00464A  59BC               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 10133  00464C  E3F0               	bnc	l8738
 10134                           
 10135                           ; BSR set to: 0
 10136  00464E  0012               	return		;funcret
 10137  004650                     __end_of_moteApp_delayms:
 10138                           	opt stack 0
 10139                           tblptru	equ	0xFF8
 10140                           tblptrh	equ	0xFF7
 10141                           tblptrl	equ	0xFF6
 10142                           tablat	equ	0xFF5
 10143                           prodh	equ	0xFF4
 10144                           prodl	equ	0xFF3
 10145                           intcon	equ	0xFF2
 10146                           postinc0	equ	0xFEE
 10147                           wreg	equ	0xFE8
 10148                           indf1	equ	0xFE7
 10149                           postdec1	equ	0xFE5
 10150                           fsr1h	equ	0xFE2
 10151                           fsr1l	equ	0xFE1
 10152                           indf2	equ	0xFDF
 10153                           postinc2	equ	0xFDE
 10154                           postdec2	equ	0xFDD
 10155                           fsr2h	equ	0xFDA
 10156                           fsr2l	equ	0xFD9
 10157                           status	equ	0xFD8
 10158                           
 10159 ;; *************** function _MOTEapp_getModemResponse *****************
 10160 ;; Defined at:
 10161 ;;		line 901 in file "../Includes/Board/MOTEapp.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;		None
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 10166 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  1    wreg      unsigned char 
 10169 ;; Registers used:
 10170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : F/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10176 ;;      Params:         0       0       0       0       0       0       0       0       0
 10177 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10178 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10179 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10180 ;;Total ram usage:        2 bytes
 10181 ;; Hardware stack levels used:    1
 10182 ;; Hardware stack levels required when called:   12
 10183 ;; This function calls:
 10184 ;;		_EUSART_Read
 10185 ;; This function is called by:
 10186 ;;		_modemResync
 10187 ;;		_moteHandler
 10188 ;;		_moteJoiningProcess
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           	psect	text32
 10193  004A7A                     __ptext32:
 10194                           	opt stack 0
 10195  004A7A                     _MOTEapp_getModemResponse:
 10196                           	opt stack 14
 10197                           
 10198                           ;MOTEapp.c: 903: bool terminatorReceived = 0;
 10199                           
 10200                           ; BSR set to: 0
 10201                           ;incstack = 0
 10202  004A7A  0100               	movlb	0	; () banked
 10203  004A7C  6BB9               	clrf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
 10204                           
 10205                           ; BSR set to: 0
 10206                           ;MOTEapp.c: 904: if ((eusartRxCount))
 10207  004A7E  5023               	movf	_eusartRxCount,w,c	;volatile
 10208  004A80  E01F               	bz	l8778
 10209                           
 10210                           ; BSR set to: 0
 10211                           ;MOTEapp.c: 907: bufferByte = EUSART_Read();
 10212                           
 10213                           ; BSR set to: 0
 10214  004A82  ECD4  F023         	call	_EUSART_Read	;wreg free
 10215  004A86  6FBA               	movwf	MOTEapp_getModemResponse@bufferByte& (0+255),b
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;MOTEapp.c: 909: if (bufferByte == 0x0D)
 10219  004A88  0E0D               	movlw	13
 10220  004A8A  19BA               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 10221  004A8C  E10B               	bnz	l8770
 10222                           
 10223                           ; BSR set to: 0
 10224                           ;MOTEapp.c: 910: {
 10225                           ;MOTEapp.c: 911: modemResonseBuffer[modemBufferIndex] = 0x00;
 10226  004A8E  0E98               	movlw	low _modemResonseBuffer
 10227  004A90  2429               	addwf	_modemBufferIndex,w,c
 10228  004A92  6ED9               	movwf	fsr2l,c
 10229  004A94  6ADA               	clrf	fsr2h,c
 10230  004A96  0E01               	movlw	high _modemResonseBuffer
 10231  004A98  22DA               	addwfc	fsr2h,f,c
 10232  004A9A  6ADF               	clrf	indf2,c
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;MOTEapp.c: 912: terminatorReceived = 1;
 10236  004A9C  0E01               	movlw	1
 10237  004A9E  6FB9               	movwf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
 10238                           
 10239                           ; BSR set to: 0
 10240                           ;MOTEapp.c: 913: modemBufferIndex = 0;
 10241  004AA0  6A29               	clrf	_modemBufferIndex,c
 10242                           
 10243                           ;MOTEapp.c: 914: }
 10244  004AA2  D00E               	goto	l8778
 10245  004AA4                     l8770:
 10246                           
 10247                           ; BSR set to: 0
 10248                           ;MOTEapp.c: 915: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 10249  004AA4  51BA               	movf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 10250  004AA6  E00C               	bz	l8778
 10251                           
 10252                           ; BSR set to: 0
 10253  004AA8  0E0A               	movlw	10
 10254  004AAA  19BA               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
 10255  004AAC  E009               	bz	l8778
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;MOTEapp.c: 919: else
 10259                           ;MOTEapp.c: 920: {
 10260                           ;MOTEapp.c: 921: modemResonseBuffer[modemBufferIndex] = bufferByte;
 10261  004AAE  0E98               	movlw	low _modemResonseBuffer
 10262  004AB0  2429               	addwf	_modemBufferIndex,w,c
 10263  004AB2  6ED9               	movwf	fsr2l,c
 10264  004AB4  6ADA               	clrf	fsr2h,c
 10265  004AB6  0E01               	movlw	high _modemResonseBuffer
 10266  004AB8  22DA               	addwfc	fsr2h,f,c
 10267  004ABA  C0BA  FFDF         	movff	MOTEapp_getModemResponse@bufferByte,indf2
 10268                           
 10269                           ; BSR set to: 0
 10270                           ;MOTEapp.c: 923: modemBufferIndex++;
 10271  004ABE  2A29               	incf	_modemBufferIndex,f,c
 10272  004AC0                     l8778:
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;MOTEapp.c: 924: }
 10276                           ;MOTEapp.c: 925: }
 10277                           ;MOTEapp.c: 926: return terminatorReceived;
 10278  004AC0  51B9               	movf	MOTEapp_getModemResponse@terminatorReceived& (0+255),w,b
 10279                           
 10280                           ; BSR set to: 0
 10281  004AC2  0012               	return		;funcret
 10282  004AC4                     __end_of_MOTEapp_getModemResponse:
 10283                           	opt stack 0
 10284                           tblptru	equ	0xFF8
 10285                           tblptrh	equ	0xFF7
 10286                           tblptrl	equ	0xFF6
 10287                           tablat	equ	0xFF5
 10288                           prodh	equ	0xFF4
 10289                           prodl	equ	0xFF3
 10290                           intcon	equ	0xFF2
 10291                           postinc0	equ	0xFEE
 10292                           wreg	equ	0xFE8
 10293                           indf1	equ	0xFE7
 10294                           postdec1	equ	0xFE5
 10295                           fsr1h	equ	0xFE2
 10296                           fsr1l	equ	0xFE1
 10297                           indf2	equ	0xFDF
 10298                           postinc2	equ	0xFDE
 10299                           postdec2	equ	0xFDD
 10300                           fsr2h	equ	0xFDA
 10301                           fsr2l	equ	0xFD9
 10302                           status	equ	0xFD8
 10303                           
 10304 ;; *************** function _DATAEE_WriteByte *****************
 10305 ;; Defined at:
 10306 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  bAdd            1    wreg     unsigned char 
 10309 ;;  bData           1    0[BANK0 ] unsigned char 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  bAdd            1    1[BANK0 ] unsigned char 
 10312 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  1    wreg      void 
 10315 ;; Registers used:
 10316 ;;		wreg, status,2
 10317 ;; Tracked objects:
 10318 ;;		On entry : F/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10322 ;;      Params:         0       1       0       0       0       0       0       0       0
 10323 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10324 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10325 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10326 ;;Total ram usage:        3 bytes
 10327 ;; Hardware stack levels used:    1
 10328 ;; Hardware stack levels required when called:   11
 10329 ;; This function calls:
 10330 ;;		Nothing
 10331 ;; This function is called by:
 10332 ;;		_moteJoiningProcess
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           	psect	text33
 10337  0048E8                     __ptext33:
 10338                           	opt stack 0
 10339  0048E8                     _DATAEE_WriteByte:
 10340                           	opt stack 17
 10341                           
 10342                           ; BSR set to: 0
 10343                           ;incstack = 0
 10344                           ;DATAEE_WriteByte@bAdd stored from wreg
 10345  0048E8  6FB9               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 10346                           
 10347                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 10348  0048EA  0E00               	movlw	0
 10349  0048EC  BEF2               	btfsc	intcon,7,c	;volatile
 10350  0048EE  0E01               	movlw	1
 10351  0048F0  0100               	movlb	0	; () banked
 10352  0048F2  6FBA               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 10353                           
 10354                           ; BSR set to: 0
 10355                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 10356  0048F4  C0B9  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 10357                           
 10358                           ; BSR set to: 0
 10359                           ;memory.c: 171: EEDATA = bData;
 10360  0048F8  C0B8  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 10361                           
 10362                           ; BSR set to: 0
 10363                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 10364  0048FC  9EA6               	bcf	4006,7,c	;volatile
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;memory.c: 173: EECON1bits.CFGS = 0;
 10368  0048FE  9CA6               	bcf	4006,6,c	;volatile
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;memory.c: 174: EECON1bits.WREN = 1;
 10372  004900  84A6               	bsf	4006,2,c	;volatile
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;memory.c: 175: INTCONbits.GIE = 0;
 10376  004902  9EF2               	bcf	intcon,7,c	;volatile
 10377                           
 10378                           ; BSR set to: 0
 10379                           ;memory.c: 176: EECON2 = 0x55;
 10380  004904  0E55               	movlw	85
 10381  004906  6EA7               	movwf	4007,c	;volatile
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;memory.c: 177: EECON2 = 0xAA;
 10385  004908  0EAA               	movlw	170
 10386  00490A  6EA7               	movwf	4007,c	;volatile
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;memory.c: 178: EECON1bits.WR = 1;
 10390  00490C  82A6               	bsf	4006,1,c	;volatile
 10391  00490E                     l1241:
 10392  00490E  B2A6               	btfsc	4006,1,c	;volatile
 10393  004910  D7FE               	goto	l1241
 10394                           
 10395                           ;memory.c: 182: }
 10396                           ;memory.c: 184: EECON1bits.WREN = 0;
 10397  004912  94A6               	bcf	4006,2,c	;volatile
 10398                           
 10399                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 10400  004914  0100               	movlb	0	; () banked
 10401  004916  B1BA               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 10402  004918  D002               	bra	u7575
 10403  00491A  9EF2               	bcf	intcon,7,c	;volatile
 10404  00491C  D001               	bra	u7576
 10405  00491E                     u7575:
 10406  00491E  8EF2               	bsf	intcon,7,c	;volatile
 10407  004920                     u7576:
 10408  004920  0012               	return		;funcret
 10409  004922                     __end_of_DATAEE_WriteByte:
 10410                           	opt stack 0
 10411                           tblptru	equ	0xFF8
 10412                           tblptrh	equ	0xFF7
 10413                           tblptrl	equ	0xFF6
 10414                           tablat	equ	0xFF5
 10415                           prodh	equ	0xFF4
 10416                           prodl	equ	0xFF3
 10417                           intcon	equ	0xFF2
 10418                           postinc0	equ	0xFEE
 10419                           wreg	equ	0xFE8
 10420                           indf1	equ	0xFE7
 10421                           postdec1	equ	0xFE5
 10422                           fsr1h	equ	0xFE2
 10423                           fsr1l	equ	0xFE1
 10424                           indf2	equ	0xFDF
 10425                           postinc2	equ	0xFDE
 10426                           postdec2	equ	0xFDD
 10427                           fsr2h	equ	0xFDA
 10428                           fsr2l	equ	0xFD9
 10429                           status	equ	0xFD8
 10430                           
 10431 ;; *************** function _ADC_TempConversion *****************
 10432 ;; Defined at:
 10433 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 10434 ;; Parameters:    Size  Location     Type
 10435 ;;  tempRaw         1    wreg     enum E6179
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;  tempRaw         1    7[BANK0 ] enum E6179
 10438 ;;  temp            1    8[BANK0 ] unsigned char 
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  1    wreg      unsigned char 
 10441 ;; Registers used:
 10442 ;;		wreg, status,2, status,0, cstack
 10443 ;; Tracked objects:
 10444 ;;		On entry : F/0
 10445 ;;		On exit  : F/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10448 ;;      Params:         0       0       0       0       0       0       0       0       0
 10449 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10450 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10451 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10452 ;;Total ram usage:        2 bytes
 10453 ;; Hardware stack levels used:    1
 10454 ;; Hardware stack levels required when called:   12
 10455 ;; This function calls:
 10456 ;;		___lwdiv
 10457 ;; This function is called by:
 10458 ;;		_moteHandler
 10459 ;;		_moteJoiningProcess
 10460 ;;		_moteRunningProcess
 10461 ;; This function uses a non-reentrant model
 10462 ;;
 10463                           
 10464                           	psect	text34
 10465  004548                     __ptext34:
 10466                           	opt stack 0
 10467  004548                     _ADC_TempConversion:
 10468                           	opt stack 16
 10469                           
 10470                           ;incstack = 0
 10471                           ;ADC_TempConversion@tempRaw stored from wreg
 10472  004548  6FBF               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 10473                           
 10474                           ;adc.c: 138: uint8_t temp;
 10475                           ;adc.c: 140: temp = (uint16_t) (tempRaw - 250) / 5;
 10476  00454A  0E06               	movlw	6
 10477  00454C  0100               	movlb	0	; () banked
 10478  00454E  25BF               	addwf	ADC_TempConversion@tempRaw& (0+255),w,b
 10479  004550  6FB8               	movwf	___lwdiv@dividend& (0+255),b
 10480  004552  6BB9               	clrf	(___lwdiv@dividend+1)& (0+255),b
 10481  004554  0EFF               	movlw	255
 10482  004556  23B9               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
 10483  004558  6BBB               	clrf	(___lwdiv@divisor+1)& (0+255),b
 10484  00455A  0E05               	movlw	5
 10485  00455C  6FBA               	movwf	___lwdiv@divisor& (0+255),b
 10486  00455E  EC18  F025         	call	___lwdiv	;wreg free
 10487  004562  51B8               	movf	?___lwdiv& (0+255),w,b
 10488  004564  6FC0               	movwf	ADC_TempConversion@temp& (0+255),b
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;adc.c: 141: return temp;
 10492  004566  51C0               	movf	ADC_TempConversion@temp& (0+255),w,b
 10493                           
 10494                           ; BSR set to: 0
 10495  004568  0012               	return		;funcret
 10496  00456A                     __end_of_ADC_TempConversion:
 10497                           	opt stack 0
 10498                           tblptru	equ	0xFF8
 10499                           tblptrh	equ	0xFF7
 10500                           tblptrl	equ	0xFF6
 10501                           tablat	equ	0xFF5
 10502                           prodh	equ	0xFF4
 10503                           prodl	equ	0xFF3
 10504                           intcon	equ	0xFF2
 10505                           postinc0	equ	0xFEE
 10506                           wreg	equ	0xFE8
 10507                           indf1	equ	0xFE7
 10508                           postdec1	equ	0xFE5
 10509                           fsr1h	equ	0xFE2
 10510                           fsr1l	equ	0xFE1
 10511                           indf2	equ	0xFDF
 10512                           postinc2	equ	0xFDE
 10513                           postdec2	equ	0xFDD
 10514                           fsr2h	equ	0xFDA
 10515                           fsr2l	equ	0xFD9
 10516                           status	equ	0xFD8
 10517                           
 10518 ;; *************** function ___lwdiv *****************
 10519 ;; Defined at:
 10520 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
 10521 ;; Parameters:    Size  Location     Type
 10522 ;;  dividend        2    0[BANK0 ] unsigned int 
 10523 ;;  divisor         2    2[BANK0 ] unsigned int 
 10524 ;; Auto vars:     Size  Location     Type
 10525 ;;  quotient        2    5[BANK0 ] unsigned int 
 10526 ;;  counter         1    4[BANK0 ] unsigned char 
 10527 ;; Return value:  Size  Location     Type
 10528 ;;                  2    0[BANK0 ] unsigned int 
 10529 ;; Registers used:
 10530 ;;		wreg, status,2, status,0
 10531 ;; Tracked objects:
 10532 ;;		On entry : F/0
 10533 ;;		On exit  : F/0
 10534 ;;		Unchanged: 0/0
 10535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10536 ;;      Params:         0       4       0       0       0       0       0       0       0
 10537 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10538 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10539 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10540 ;;Total ram usage:        7 bytes
 10541 ;; Hardware stack levels used:    1
 10542 ;; Hardware stack levels required when called:   11
 10543 ;; This function calls:
 10544 ;;		Nothing
 10545 ;; This function is called by:
 10546 ;;		_moteApp_add16bToDataBuffer
 10547 ;;		_oled_putUint16
 10548 ;;		_ADC_TempConversion
 10549 ;;		_sprintf
 10550 ;; This function uses a non-reentrant model
 10551 ;;
 10552                           
 10553                           	psect	text35
 10554  004A30                     __ptext35:
 10555                           	opt stack 0
 10556  004A30                     ___lwdiv:
 10557                           	opt stack 16
 10558                           
 10559                           ; BSR set to: 0
 10560                           
 10561                           ; BSR set to: 0
 10562                           ;incstack = 0
 10563  004A30  6BBD               	clrf	___lwdiv@quotient& (0+255),b
 10564  004A32  6BBE               	clrf	(___lwdiv@quotient+1)& (0+255),b
 10565                           
 10566                           ; BSR set to: 0
 10567  004A34  51BA               	movf	___lwdiv@divisor& (0+255),w,b
 10568  004A36  11BB               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10569  004A38  E01B               	bz	l2328
 10570                           
 10571                           ; BSR set to: 0
 10572  004A3A  0E01               	movlw	1
 10573  004A3C  6FBC               	movwf	___lwdiv@counter& (0+255),b
 10574  004A3E  D004               	goto	l9064
 10575  004A40                     l9062:
 10576                           
 10577                           ; BSR set to: 0
 10578  004A40  90D8               	bcf	status,0,c
 10579  004A42  37BA               	rlcf	___lwdiv@divisor& (0+255),f,b
 10580  004A44  37BB               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10581  004A46  2BBC               	incf	___lwdiv@counter& (0+255),f,b
 10582  004A48                     l9064:
 10583                           
 10584                           ; BSR set to: 0
 10585  004A48  AFBB               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10586  004A4A  D7FA               	goto	l9062
 10587  004A4C                     l9066:
 10588                           
 10589                           ; BSR set to: 0
 10590  004A4C  90D8               	bcf	status,0,c
 10591  004A4E  37BD               	rlcf	___lwdiv@quotient& (0+255),f,b
 10592  004A50  37BE               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10593                           
 10594                           ; BSR set to: 0
 10595  004A52  51BA               	movf	___lwdiv@divisor& (0+255),w,b
 10596  004A54  5DB8               	subwf	___lwdiv@dividend& (0+255),w,b
 10597  004A56  51BB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10598  004A58  59B9               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10599  004A5A  E305               	bnc	l9074
 10600                           
 10601                           ; BSR set to: 0
 10602  004A5C  51BA               	movf	___lwdiv@divisor& (0+255),w,b
 10603  004A5E  5FB8               	subwf	___lwdiv@dividend& (0+255),f,b
 10604  004A60  51BB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10605  004A62  5BB9               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10606                           
 10607                           ; BSR set to: 0
 10608  004A64  81BD               	bsf	___lwdiv@quotient& (0+255),0,b
 10609  004A66                     l9074:
 10610                           
 10611                           ; BSR set to: 0
 10612  004A66  90D8               	bcf	status,0,c
 10613  004A68  33BB               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10614  004A6A  33BA               	rrcf	___lwdiv@divisor& (0+255),f,b
 10615                           
 10616                           ; BSR set to: 0
 10617  004A6C  2FBC               	decfsz	___lwdiv@counter& (0+255),f,b
 10618  004A6E  D7EE               	goto	l9066
 10619  004A70                     l2328:
 10620                           
 10621                           ; BSR set to: 0
 10622  004A70  C0BD  F0B8         	movff	___lwdiv@quotient,?___lwdiv
 10623  004A74  C0BE  F0B9         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10624                           
 10625                           ; BSR set to: 0
 10626  004A78  0012               	return		;funcret
 10627  004A7A                     __end_of___lwdiv:
 10628                           	opt stack 0
 10629                           tblptru	equ	0xFF8
 10630                           tblptrh	equ	0xFF7
 10631                           tblptrl	equ	0xFF6
 10632                           tablat	equ	0xFF5
 10633                           prodh	equ	0xFF4
 10634                           prodl	equ	0xFF3
 10635                           intcon	equ	0xFF2
 10636                           postinc0	equ	0xFEE
 10637                           wreg	equ	0xFE8
 10638                           indf1	equ	0xFE7
 10639                           postdec1	equ	0xFE5
 10640                           fsr1h	equ	0xFE2
 10641                           fsr1l	equ	0xFE1
 10642                           indf2	equ	0xFDF
 10643                           postinc2	equ	0xFDE
 10644                           postdec2	equ	0xFDD
 10645                           fsr2h	equ	0xFDA
 10646                           fsr2l	equ	0xFD9
 10647                           status	equ	0xFD8
 10648                           
 10649 ;; *************** function _ADC_GetConversion *****************
 10650 ;; Defined at:
 10651 ;;		line 113 in file "../Includes/MccGenerated/adc.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;  channel         1    wreg     enum E6179
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;  channel         1    4[BANK0 ] enum E6179
 10656 ;; Return value:  Size  Location     Type
 10657 ;;                  2    0[BANK0 ] unsigned int 
 10658 ;; Registers used:
 10659 ;;		wreg, status,2, status,0
 10660 ;; Tracked objects:
 10661 ;;		On entry : F/0
 10662 ;;		On exit  : F/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10665 ;;      Params:         0       2       0       0       0       0       0       0       0
 10666 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10667 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10668 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10669 ;;Total ram usage:        5 bytes
 10670 ;; Hardware stack levels used:    1
 10671 ;; Hardware stack levels required when called:   11
 10672 ;; This function calls:
 10673 ;;		Nothing
 10674 ;; This function is called by:
 10675 ;;		_moteHandler
 10676 ;;		_moteJoiningProcess
 10677 ;;		_moteRunningProcess
 10678 ;; This function uses a non-reentrant model
 10679 ;;
 10680                           
 10681                           	psect	text36
 10682  0048AE                     __ptext36:
 10683                           	opt stack 0
 10684  0048AE                     _ADC_GetConversion:
 10685                           	opt stack 17
 10686                           
 10687                           ; BSR set to: 0
 10688                           ;incstack = 0
 10689                           ;ADC_GetConversion@channel stored from wreg
 10690  0048AE  6FBC               	movwf	ADC_GetConversion@channel& (0+255),b
 10691                           
 10692                           ;adc.c: 116: ADCON0bits.CHS = channel;
 10693  0048B0  C0BC  F0BA         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 10694  0048B4  0100               	movlb	0	; () banked
 10695  0048B6  47BA               	rlncf	??_ADC_GetConversion& (0+255),f,b
 10696  0048B8  47BA               	rlncf	??_ADC_GetConversion& (0+255),f,b
 10697  0048BA  50C2               	movf	4034,w,c	;volatile
 10698  0048BC  19BA               	xorwf	??_ADC_GetConversion& (0+255),w,b
 10699  0048BE  0B83               	andlw	-125
 10700  0048C0  19BA               	xorwf	??_ADC_GetConversion& (0+255),w,b
 10701  0048C2  6EC2               	movwf	4034,c	;volatile
 10702                           
 10703                           ; BSR set to: 0
 10704                           ;adc.c: 119: ADCON0bits.ADON = 1;
 10705  0048C4  80C2               	bsf	4034,0,c	;volatile
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;adc.c: 122: _delay((unsigned long)((5)*(48000000/4000000.0)));
 10709  0048C6  0E14               	movlw	20
 10710  0048C8                     u8897:
 10711  0048C8  2EE8               	decfsz	wreg,f,c
 10712  0048CA  D7FE               	goto	u8897
 10713                           
 10714                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
 10715  0048CC  82C2               	bsf	4034,1,c	;volatile
 10716  0048CE                     l1069:
 10717  0048CE  B2C2               	btfsc	4034,1,c	;volatile
 10718  0048D0  D7FE               	goto	l1069
 10719                           
 10720                           ;adc.c: 130: }
 10721                           ;adc.c: 133: return ((ADRESH << 8) + ADRESL);
 10722  0048D2  50C4               	movf	4036,w,c	;volatile
 10723  0048D4  0100               	movlb	0	; () banked
 10724  0048D6  6FBB               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 10725  0048D8  6BBA               	clrf	??_ADC_GetConversion& (0+255),b
 10726  0048DA  50C3               	movf	4035,w,c	;volatile
 10727  0048DC  25BA               	addwf	??_ADC_GetConversion& (0+255),w,b
 10728  0048DE  6FB8               	movwf	?_ADC_GetConversion& (0+255),b
 10729  0048E0  0E00               	movlw	0
 10730  0048E2  21BB               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 10731  0048E4  6FB9               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 10732                           
 10733                           ; BSR set to: 0
 10734  0048E6  0012               	return		;funcret
 10735  0048E8                     __end_of_ADC_GetConversion:
 10736                           	opt stack 0
 10737                           tblptru	equ	0xFF8
 10738                           tblptrh	equ	0xFF7
 10739                           tblptrl	equ	0xFF6
 10740                           tablat	equ	0xFF5
 10741                           prodh	equ	0xFF4
 10742                           prodl	equ	0xFF3
 10743                           intcon	equ	0xFF2
 10744                           postinc0	equ	0xFEE
 10745                           wreg	equ	0xFE8
 10746                           indf1	equ	0xFE7
 10747                           postdec1	equ	0xFE5
 10748                           fsr1h	equ	0xFE2
 10749                           fsr1l	equ	0xFE1
 10750                           indf2	equ	0xFDF
 10751                           postinc2	equ	0xFDE
 10752                           postdec2	equ	0xFDD
 10753                           fsr2h	equ	0xFDA
 10754                           fsr2l	equ	0xFD9
 10755                           status	equ	0xFD8
 10756                           
 10757 ;; *************** function _TMRapp_Handler *****************
 10758 ;; Defined at:
 10759 ;;		line 22 in file "../Includes/Drivers/TMRapp.c"
 10760 ;; Parameters:    Size  Location     Type
 10761 ;;		None
 10762 ;; Auto vars:     Size  Location     Type
 10763 ;;		None
 10764 ;; Return value:  Size  Location     Type
 10765 ;;                  1    wreg      void 
 10766 ;; Registers used:
 10767 ;;		wreg, status,2, status,0, cstack
 10768 ;; Tracked objects:
 10769 ;;		On entry : F/0
 10770 ;;		On exit  : F/0
 10771 ;;		Unchanged: 0/0
 10772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10773 ;;      Params:         0       0       0       0       0       0       0       0       0
 10774 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10775 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10776 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10777 ;;Total ram usage:        0 bytes
 10778 ;; Hardware stack levels used:    1
 10779 ;; Hardware stack levels required when called:   12
 10780 ;; This function calls:
 10781 ;;		___lwmod
 10782 ;; This function is called by:
 10783 ;;		_moteHandler
 10784 ;; This function uses a non-reentrant model
 10785 ;;
 10786                           
 10787                           	psect	text37
 10788  005E60                     __ptext37:
 10789                           	opt stack 0
 10790  005E60                     _TMRapp_Handler:
 10791                           	opt stack 17
 10792                           
 10793                           ; BSR set to: 0
 10794                           ;TMRapp.c: 25: timerMsTickCount++;
 10795                           
 10796                           ; BSR set to: 0
 10797                           ;incstack = 0
 10798  005E60  4B89               	infsnz	_timerMsTickCount& (0+255),f,b
 10799  005E62  2B8A               	incf	(_timerMsTickCount+1)& (0+255),f,b
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;TMRapp.c: 27: if ( (timerMsTickCount % 10) == 0)
 10803  005E64  C089  F0BF         	movff	_timerMsTickCount,___lwmod@dividend
 10804  005E68  C08A  F0C0         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 10805  005E6C  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
 10806  005E6E  0E0A               	movlw	10
 10807  005E70  6FC1               	movwf	___lwmod@divisor& (0+255),b
 10808  005E72  ECB0  F024         	call	___lwmod	;wreg free
 10809  005E76  51BF               	movf	?___lwmod& (0+255),w,b
 10810  005E78  11C0               	iorwf	(?___lwmod+1)& (0+255),w,b
 10811  005E7A  A4D8               	btfss	status,2,c
 10812  005E7C  0012               	return	
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;TMRapp.c: 28: {
 10816                           ;TMRapp.c: 29: appTimer.mSecTenTick = 1;
 10817  005E7E  8395               	bsf	_appTimer& (0+255),1,b
 10818                           
 10819                           ; BSR set to: 0
 10820                           ;TMRapp.c: 30: if ( (timerMsTickCount % 100) == 0)
 10821  005E80  C089  F0BF         	movff	_timerMsTickCount,___lwmod@dividend
 10822  005E84  C08A  F0C0         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 10823  005E88  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
 10824  005E8A  0E64               	movlw	100
 10825  005E8C  6FC1               	movwf	___lwmod@divisor& (0+255),b
 10826  005E8E  ECB0  F024         	call	___lwmod	;wreg free
 10827  005E92  51BF               	movf	?___lwmod& (0+255),w,b
 10828  005E94  11C0               	iorwf	(?___lwmod+1)& (0+255),w,b
 10829  005E96  A4D8               	btfss	status,2,c
 10830  005E98  0012               	return	
 10831                           
 10832                           ; BSR set to: 0
 10833                           ;TMRapp.c: 31: {
 10834                           ;TMRapp.c: 32: appTimer.mSecHundredTick = 1;
 10835  005E9A  8595               	bsf	_appTimer& (0+255),2,b
 10836                           
 10837                           ; BSR set to: 0
 10838                           ;TMRapp.c: 33: if ( (timerMsTickCount % 1000) == 0)
 10839  005E9C  C089  F0BF         	movff	_timerMsTickCount,___lwmod@dividend
 10840  005EA0  C08A  F0C0         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 10841  005EA4  0E03               	movlw	3
 10842  005EA6  6FC2               	movwf	(___lwmod@divisor+1)& (0+255),b
 10843  005EA8  0EE8               	movlw	232
 10844  005EAA  6FC1               	movwf	___lwmod@divisor& (0+255),b
 10845  005EAC  ECB0  F024         	call	___lwmod	;wreg free
 10846  005EB0  51BF               	movf	?___lwmod& (0+255),w,b
 10847  005EB2  11C0               	iorwf	(?___lwmod+1)& (0+255),w,b
 10848  005EB4  A4D8               	btfss	status,2,c
 10849  005EB6  0012               	return	
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;TMRapp.c: 34: {
 10853                           ;TMRapp.c: 35: appTimer.SecTick = 1;
 10854  005EB8  8795               	bsf	_appTimer& (0+255),3,b
 10855                           
 10856                           ; BSR set to: 0
 10857                           ;TMRapp.c: 36: if ( (timerMsTickCount % 60000) == 0)
 10858  005EBA  C089  F0BF         	movff	_timerMsTickCount,___lwmod@dividend
 10859  005EBE  C08A  F0C0         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 10860  005EC2  0EEA               	movlw	234
 10861  005EC4  6FC2               	movwf	(___lwmod@divisor+1)& (0+255),b
 10862  005EC6  0E60               	movlw	96
 10863  005EC8  6FC1               	movwf	___lwmod@divisor& (0+255),b
 10864  005ECA  ECB0  F024         	call	___lwmod	;wreg free
 10865  005ECE  51BF               	movf	?___lwmod& (0+255),w,b
 10866  005ED0  11C0               	iorwf	(?___lwmod+1)& (0+255),w,b
 10867  005ED2  A4D8               	btfss	status,2,c
 10868  005ED4  0012               	return	
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;TMRapp.c: 37: {
 10872                           ;TMRapp.c: 38: timerMinTickCount++;
 10873  005ED6  4B87               	infsnz	_timerMinTickCount& (0+255),f,b
 10874  005ED8  2B88               	incf	(_timerMinTickCount+1)& (0+255),f,b
 10875                           
 10876                           ; BSR set to: 0
 10877                           ;TMRapp.c: 39: appTimer.MinTick = 1;
 10878  005EDA  8995               	bsf	_appTimer& (0+255),4,b
 10879                           
 10880                           ; BSR set to: 0
 10881                           ;TMRapp.c: 40: if ( (timerMinTickCount % 60) == 0)
 10882  005EDC  C087  F0BF         	movff	_timerMinTickCount,___lwmod@dividend
 10883  005EE0  C088  F0C0         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 10884  005EE4  6BC2               	clrf	(___lwmod@divisor+1)& (0+255),b
 10885  005EE6  0E3C               	movlw	60
 10886  005EE8  6FC1               	movwf	___lwmod@divisor& (0+255),b
 10887  005EEA  ECB0  F024         	call	___lwmod	;wreg free
 10888  005EEE  51BF               	movf	?___lwmod& (0+255),w,b
 10889  005EF0  11C0               	iorwf	(?___lwmod+1)& (0+255),w,b
 10890  005EF2  A4D8               	btfss	status,2,c
 10891  005EF4  0012               	return	
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;TMRapp.c: 41: {
 10895                           ;TMRapp.c: 42: appTimer.HourTick = 1;
 10896  005EF6  8B95               	bsf	_appTimer& (0+255),5,b
 10897                           
 10898                           ; BSR set to: 0
 10899                           ;TMRapp.c: 43: if ( (timerMinTickCount % 720) == 0)
 10900  005EF8  C087  F0BF         	movff	_timerMinTickCount,___lwmod@dividend
 10901  005EFC  C088  F0C0         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 10902  005F00  0E02               	movlw	2
 10903  005F02  6FC2               	movwf	(___lwmod@divisor+1)& (0+255),b
 10904  005F04  0ED0               	movlw	208
 10905  005F06  6FC1               	movwf	___lwmod@divisor& (0+255),b
 10906  005F08  ECB0  F024         	call	___lwmod	;wreg free
 10907  005F0C  51BF               	movf	?___lwmod& (0+255),w,b
 10908  005F0E  11C0               	iorwf	(?___lwmod+1)& (0+255),w,b
 10909  005F10  A4D8               	btfss	status,2,c
 10910  005F12  0012               	return	
 10911                           
 10912                           ; BSR set to: 0
 10913                           ;TMRapp.c: 44: {
 10914                           ;TMRapp.c: 45: appTimer.HalfDayTick = 1;
 10915  005F14  8D95               	bsf	_appTimer& (0+255),6,b
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;TMRapp.c: 46: if ( (timerMinTickCount % 1440) == 0)
 10919  005F16  C087  F0BF         	movff	_timerMinTickCount,___lwmod@dividend
 10920  005F1A  C088  F0C0         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 10921  005F1E  0E05               	movlw	5
 10922  005F20  6FC2               	movwf	(___lwmod@divisor+1)& (0+255),b
 10923  005F22  0EA0               	movlw	160
 10924  005F24  6FC1               	movwf	___lwmod@divisor& (0+255),b
 10925  005F26  ECB0  F024         	call	___lwmod	;wreg free
 10926  005F2A  51BF               	movf	?___lwmod& (0+255),w,b
 10927  005F2C  11C0               	iorwf	(?___lwmod+1)& (0+255),w,b
 10928  005F2E  A4D8               	btfss	status,2,c
 10929  005F30  0012               	return	
 10930                           
 10931                           ; BSR set to: 0
 10932                           ;TMRapp.c: 47: {
 10933                           ;TMRapp.c: 48: appTimer.DayTick = 1;
 10934  005F32  8F95               	bsf	_appTimer& (0+255),7,b
 10935                           
 10936                           ;TMRapp.c: 50: timerMsTickCount = 0;
 10937  005F34  6B89               	clrf	_timerMsTickCount& (0+255),b
 10938  005F36  6B8A               	clrf	(_timerMsTickCount+1)& (0+255),b
 10939                           
 10940                           ;TMRapp.c: 51: timerMinTickCount = 0;
 10941  005F38  6B87               	clrf	_timerMinTickCount& (0+255),b
 10942  005F3A  6B88               	clrf	(_timerMinTickCount+1)& (0+255),b
 10943  005F3C  0012               	return	
 10944  005F3E                     __end_of_TMRapp_Handler:
 10945                           	opt stack 0
 10946                           tblptru	equ	0xFF8
 10947                           tblptrh	equ	0xFF7
 10948                           tblptrl	equ	0xFF6
 10949                           tablat	equ	0xFF5
 10950                           prodh	equ	0xFF4
 10951                           prodl	equ	0xFF3
 10952                           intcon	equ	0xFF2
 10953                           postinc0	equ	0xFEE
 10954                           wreg	equ	0xFE8
 10955                           indf1	equ	0xFE7
 10956                           postdec1	equ	0xFE5
 10957                           fsr1h	equ	0xFE2
 10958                           fsr1l	equ	0xFE1
 10959                           indf2	equ	0xFDF
 10960                           postinc2	equ	0xFDE
 10961                           postdec2	equ	0xFDD
 10962                           fsr2h	equ	0xFDA
 10963                           fsr2l	equ	0xFD9
 10964                           status	equ	0xFD8
 10965                           
 10966 ;; *************** function ___lwmod *****************
 10967 ;; Defined at:
 10968 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
 10969 ;; Parameters:    Size  Location     Type
 10970 ;;  dividend        2    7[BANK0 ] unsigned int 
 10971 ;;  divisor         2    9[BANK0 ] unsigned int 
 10972 ;; Auto vars:     Size  Location     Type
 10973 ;;  counter         1   11[BANK0 ] unsigned char 
 10974 ;; Return value:  Size  Location     Type
 10975 ;;                  2    7[BANK0 ] unsigned int 
 10976 ;; Registers used:
 10977 ;;		wreg, status,2, status,0
 10978 ;; Tracked objects:
 10979 ;;		On entry : F/0
 10980 ;;		On exit  : F/0
 10981 ;;		Unchanged: 0/0
 10982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10983 ;;      Params:         0       4       0       0       0       0       0       0       0
 10984 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10985 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10986 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10987 ;;Total ram usage:        5 bytes
 10988 ;; Hardware stack levels used:    1
 10989 ;; Hardware stack levels required when called:   11
 10990 ;; This function calls:
 10991 ;;		Nothing
 10992 ;; This function is called by:
 10993 ;;		_moteApp_add16bToDataBuffer
 10994 ;;		_TMRapp_Handler
 10995 ;;		_oled_putUint16
 10996 ;;		_sprintf
 10997 ;; This function uses a non-reentrant model
 10998 ;;
 10999                           
 11000                           	psect	text38
 11001  004960                     __ptext38:
 11002                           	opt stack 0
 11003  004960                     ___lwmod:
 11004                           	opt stack 16
 11005                           
 11006                           ; BSR set to: 0
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;incstack = 0
 11010  004960  51C1               	movf	___lwmod@divisor& (0+255),w,b
 11011  004962  11C2               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 11012  004964  E017               	bz	l2338
 11013                           
 11014                           ; BSR set to: 0
 11015  004966  0E01               	movlw	1
 11016  004968  6FC3               	movwf	___lwmod@counter& (0+255),b
 11017  00496A  D004               	goto	l9084
 11018  00496C                     l9082:
 11019                           
 11020                           ; BSR set to: 0
 11021  00496C  90D8               	bcf	status,0,c
 11022  00496E  37C1               	rlcf	___lwmod@divisor& (0+255),f,b
 11023  004970  37C2               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 11024  004972  2BC3               	incf	___lwmod@counter& (0+255),f,b
 11025  004974                     l9084:
 11026                           
 11027                           ; BSR set to: 0
 11028  004974  AFC2               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 11029  004976  D7FA               	goto	l9082
 11030  004978                     l9086:
 11031                           
 11032                           ; BSR set to: 0
 11033  004978  51C1               	movf	___lwmod@divisor& (0+255),w,b
 11034  00497A  5DBF               	subwf	___lwmod@dividend& (0+255),w,b
 11035  00497C  51C2               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11036  00497E  59C0               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 11037  004980  E304               	bnc	l9090
 11038                           
 11039                           ; BSR set to: 0
 11040  004982  51C1               	movf	___lwmod@divisor& (0+255),w,b
 11041  004984  5FBF               	subwf	___lwmod@dividend& (0+255),f,b
 11042  004986  51C2               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11043  004988  5BC0               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 11044  00498A                     l9090:
 11045                           
 11046                           ; BSR set to: 0
 11047  00498A  90D8               	bcf	status,0,c
 11048  00498C  33C2               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 11049  00498E  33C1               	rrcf	___lwmod@divisor& (0+255),f,b
 11050                           
 11051                           ; BSR set to: 0
 11052  004990  2FC3               	decfsz	___lwmod@counter& (0+255),f,b
 11053  004992  D7F2               	goto	l9086
 11054  004994                     l2338:
 11055                           
 11056                           ; BSR set to: 0
 11057  004994  C0BF  F0BF         	movff	___lwmod@dividend,?___lwmod
 11058  004998  C0C0  F0C0         	movff	___lwmod@dividend+1,?___lwmod+1
 11059                           
 11060                           ; BSR set to: 0
 11061  00499C  0012               	return		;funcret
 11062  00499E                     __end_of___lwmod:
 11063                           	opt stack 0
 11064                           tblptru	equ	0xFF8
 11065                           tblptrh	equ	0xFF7
 11066                           tblptrl	equ	0xFF6
 11067                           tablat	equ	0xFF5
 11068                           prodh	equ	0xFF4
 11069                           prodl	equ	0xFF3
 11070                           intcon	equ	0xFF2
 11071                           postinc0	equ	0xFEE
 11072                           wreg	equ	0xFE8
 11073                           indf1	equ	0xFE7
 11074                           postdec1	equ	0xFE5
 11075                           fsr1h	equ	0xFE2
 11076                           fsr1l	equ	0xFE1
 11077                           indf2	equ	0xFDF
 11078                           postinc2	equ	0xFDE
 11079                           postdec2	equ	0xFDD
 11080                           fsr2h	equ	0xFDA
 11081                           fsr2l	equ	0xFD9
 11082                           status	equ	0xFD8
 11083                           
 11084 ;; *************** function _TMRapp_ClearBitFlags *****************
 11085 ;; Defined at:
 11086 ;;		line 16 in file "../Includes/Drivers/TMRapp.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;		None
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;		None
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  1    wreg      void 
 11093 ;; Registers used:
 11094 ;;		None
 11095 ;; Tracked objects:
 11096 ;;		On entry : F/0
 11097 ;;		On exit  : F/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11100 ;;      Params:         0       0       0       0       0       0       0       0       0
 11101 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11102 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11103 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11104 ;;Total ram usage:        0 bytes
 11105 ;; Hardware stack levels used:    1
 11106 ;; Hardware stack levels required when called:   11
 11107 ;; This function calls:
 11108 ;;		Nothing
 11109 ;; This function is called by:
 11110 ;;		_moteHandler
 11111 ;; This function uses a non-reentrant model
 11112 ;;
 11113                           
 11114                           	psect	text39
 11115  004304                     __ptext39:
 11116                           	opt stack 0
 11117  004304                     _TMRapp_ClearBitFlags:
 11118                           	opt stack 18
 11119                           
 11120                           ; BSR set to: 0
 11121                           ;TMRapp.c: 19: appTimer.TicksBitMap = 0x00;
 11122                           
 11123                           ; BSR set to: 0
 11124                           ;incstack = 0
 11125  004304  6B95               	clrf	_appTimer& (0+255),b
 11126                           
 11127                           ; BSR set to: 0
 11128  004306  0012               	return		;funcret
 11129  004308                     __end_of_TMRapp_ClearBitFlags:
 11130                           	opt stack 0
 11131                           tblptru	equ	0xFF8
 11132                           tblptrh	equ	0xFF7
 11133                           tblptrl	equ	0xFF6
 11134                           tablat	equ	0xFF5
 11135                           prodh	equ	0xFF4
 11136                           prodl	equ	0xFF3
 11137                           intcon	equ	0xFF2
 11138                           postinc0	equ	0xFEE
 11139                           wreg	equ	0xFE8
 11140                           indf1	equ	0xFE7
 11141                           postdec1	equ	0xFE5
 11142                           fsr1h	equ	0xFE2
 11143                           fsr1l	equ	0xFE1
 11144                           indf2	equ	0xFDF
 11145                           postinc2	equ	0xFDE
 11146                           postdec2	equ	0xFDD
 11147                           fsr2h	equ	0xFDA
 11148                           fsr2l	equ	0xFD9
 11149                           status	equ	0xFD8
 11150                           
 11151 ;; *************** function _MOTEapp_TimerBasedTask *****************
 11152 ;; Defined at:
 11153 ;;		line 862 in file "../Includes/Board/MOTEapp.c"
 11154 ;; Parameters:    Size  Location     Type
 11155 ;;  timerTask       1    wreg     struct .
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;  timerTask       1    0[BANK0 ] struct .
 11158 ;; Return value:  Size  Location     Type
 11159 ;;                  1    wreg      void 
 11160 ;; Registers used:
 11161 ;;		wreg, status,2, status,0
 11162 ;; Tracked objects:
 11163 ;;		On entry : F/0
 11164 ;;		On exit  : F/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11167 ;;      Params:         0       0       0       0       0       0       0       0       0
 11168 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11169 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11170 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11171 ;;Total ram usage:        1 bytes
 11172 ;; Hardware stack levels used:    1
 11173 ;; Hardware stack levels required when called:   11
 11174 ;; This function calls:
 11175 ;;		Nothing
 11176 ;; This function is called by:
 11177 ;;		_moteHandler
 11178 ;; This function uses a non-reentrant model
 11179 ;;
 11180                           
 11181                           	psect	text40
 11182  004372                     __ptext40:
 11183                           	opt stack 0
 11184  004372                     _MOTEapp_TimerBasedTask:
 11185                           	opt stack 18
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;incstack = 0
 11189                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 11190  004372  6FB8               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 11191                           
 11192                           ;MOTEapp.c: 867: if (timerTask.mSecTenTick)
 11193  004374  0100               	movlb	0	; () banked
 11194  004376  B3B8               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 11195                           
 11196                           ; BSR set to: 0
 11197                           ;MOTEapp.c: 868: {
 11198                           ;MOTEapp.c: 870: m10SecTicker++;
 11199  004378  2B9A               	incf	_m10SecTicker& (0+255),f,b
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;MOTEapp.c: 876: }
 11203                           ;MOTEapp.c: 877: if (timerTask.SecTick)
 11204  00437A  B7B8               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;MOTEapp.c: 878: {
 11208                           ;MOTEapp.c: 880: secTicker++;
 11209  00437C  2B9F               	incf	_secTicker& (0+255),f,b
 11210  00437E  0012               	return	
 11211  004380                     __end_of_MOTEapp_TimerBasedTask:
 11212                           	opt stack 0
 11213                           tblptru	equ	0xFF8
 11214                           tblptrh	equ	0xFF7
 11215                           tblptrl	equ	0xFF6
 11216                           tablat	equ	0xFF5
 11217                           prodh	equ	0xFF4
 11218                           prodl	equ	0xFF3
 11219                           intcon	equ	0xFF2
 11220                           postinc0	equ	0xFEE
 11221                           wreg	equ	0xFE8
 11222                           indf1	equ	0xFE7
 11223                           postdec1	equ	0xFE5
 11224                           fsr1h	equ	0xFE2
 11225                           fsr1l	equ	0xFE1
 11226                           indf2	equ	0xFDF
 11227                           postinc2	equ	0xFDE
 11228                           postdec2	equ	0xFDD
 11229                           fsr2h	equ	0xFDA
 11230                           fsr2l	equ	0xFD9
 11231                           status	equ	0xFD8
 11232                           
 11233 ;; *************** function _USBapp_handlerState *****************
 11234 ;; Defined at:
 11235 ;;		line 63 in file "../Includes/Board/USBapp.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  state           1    wreg     enum E6263
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;  state           1    0[BANK0 ] enum E6263
 11240 ;; Return value:  Size  Location     Type
 11241 ;;                  1    wreg      void 
 11242 ;; Registers used:
 11243 ;;		wreg
 11244 ;; Tracked objects:
 11245 ;;		On entry : F/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11249 ;;      Params:         0       0       0       0       0       0       0       0       0
 11250 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11251 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11252 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11253 ;;Total ram usage:        1 bytes
 11254 ;; Hardware stack levels used:    1
 11255 ;; Hardware stack levels required when called:   11
 11256 ;; This function calls:
 11257 ;;		Nothing
 11258 ;; This function is called by:
 11259 ;;		_main
 11260 ;; This function uses a non-reentrant model
 11261 ;;
 11262                           
 11263                           	psect	text41
 11264  004324                     __ptext41:
 11265                           	opt stack 0
 11266  004324                     _USBapp_handlerState:
 11267                           	opt stack 19
 11268                           
 11269                           ; BSR set to: 0
 11270                           ;incstack = 0
 11271                           ;USBapp_handlerState@state stored from wreg
 11272  004324  6FB8               	movwf	USBapp_handlerState@state& (0+255),b
 11273                           
 11274                           ;USBapp.c: 65: usbState = state;
 11275  004326  C0B8  F0A1         	movff	USBapp_handlerState@state,_usbState
 11276  00432A  0012               	return		;funcret
 11277  00432C                     __end_of_USBapp_handlerState:
 11278                           	opt stack 0
 11279                           tblptru	equ	0xFF8
 11280                           tblptrh	equ	0xFF7
 11281                           tblptrl	equ	0xFF6
 11282                           tablat	equ	0xFF5
 11283                           prodh	equ	0xFF4
 11284                           prodl	equ	0xFF3
 11285                           intcon	equ	0xFF2
 11286                           postinc0	equ	0xFEE
 11287                           wreg	equ	0xFE8
 11288                           indf1	equ	0xFE7
 11289                           postdec1	equ	0xFE5
 11290                           fsr1h	equ	0xFE2
 11291                           fsr1l	equ	0xFE1
 11292                           indf2	equ	0xFDF
 11293                           postinc2	equ	0xFDE
 11294                           postdec2	equ	0xFDD
 11295                           fsr2h	equ	0xFDA
 11296                           fsr2l	equ	0xFD9
 11297                           status	equ	0xFD8
 11298                           
 11299 ;; *************** function _USBapp_Handler *****************
 11300 ;; Defined at:
 11301 ;;		line 68 in file "../Includes/Board/USBapp.c"
 11302 ;; Parameters:    Size  Location     Type
 11303 ;;		None
 11304 ;; Auto vars:     Size  Location     Type
 11305 ;;		None
 11306 ;; Return value:  Size  Location     Type
 11307 ;;                  1    wreg      void 
 11308 ;; Registers used:
 11309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11310 ;; Tracked objects:
 11311 ;;		On entry : 0/0
 11312 ;;		On exit  : 0/0
 11313 ;;		Unchanged: 0/0
 11314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11315 ;;      Params:         0       0       0       0       0       0       0       0       0
 11316 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11317 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11318 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11319 ;;Total ram usage:        0 bytes
 11320 ;; Hardware stack levels used:    1
 11321 ;; Hardware stack levels required when called:   17
 11322 ;; This function calls:
 11323 ;;		_USBapp_DeviceCdcEmulatorHandler
 11324 ;;		_oled_clear
 11325 ;;		_oled_putString
 11326 ;; This function is called by:
 11327 ;;		_main
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           	psect	text42
 11332  0050AA                     __ptext42:
 11333                           	opt stack 0
 11334  0050AA                     _USBapp_Handler:
 11335                           	opt stack 13
 11336                           
 11337                           ;USBapp.c: 72: {
 11338                           ;USBapp.c: 73: switch(usbState)
 11339                           
 11340                           ;incstack = 0
 11341                           ;USBapp.c: 71: do
 11342  0050AA  D02E               	goto	l10456
 11343  0050AC                     l702:
 11344                           
 11345                           ; BSR set to: 0
 11346  0050AC  D7FF               	goto	l702
 11347  0050AE                     l10436:
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;USBapp.c: 80: oled_clear();
 11351  0050AE  EC1F  F022         	call	_oled_clear	;wreg free
 11352                           
 11353                           ; BSR set to: 0
 11354                           ;USBapp.c: 81: oled_putString("CDC Mode",1,0);
 11355  0050B2  0E32               	movlw	low STR_107
 11356  0050B4  6FC5               	movwf	oled_putString@string& (0+255),b
 11357  0050B6  0E7F               	movlw	high STR_107
 11358  0050B8  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
 11359  0050BA  0E01               	movlw	1
 11360  0050BC  6FC7               	movwf	oled_putString@station_dot& (0+255),b
 11361  0050BE  6BC8               	clrf	oled_putString@start_page& (0+255),b
 11362  0050C0  EC42  F027         	call	_oled_putString	;wreg free
 11363                           
 11364                           ;USBapp.c: 82: oled_putString("Command",2,1);
 11365  0050C4  0E83               	movlw	low STR_108
 11366  0050C6  0100               	movlb	0	; () banked
 11367  0050C8  6FC5               	movwf	oled_putString@string& (0+255),b
 11368  0050CA  0E7F               	movlw	high STR_108
 11369  0050CC  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
 11370  0050CE  0E02               	movlw	2
 11371  0050D0  6FC7               	movwf	oled_putString@station_dot& (0+255),b
 11372  0050D2  0E01               	movlw	1
 11373  0050D4  6FC8               	movwf	oled_putString@start_page& (0+255),b
 11374  0050D6  EC42  F027         	call	_oled_putString	;wreg free
 11375                           
 11376                           ;USBapp.c: 83: oled_putString("USB Handler",0,2);
 11377  0050DA  0E95               	movlw	low STR_109
 11378  0050DC  0100               	movlb	0	; () banked
 11379  0050DE  6FC5               	movwf	oled_putString@string& (0+255),b
 11380  0050E0  0E7E               	movlw	high STR_109
 11381  0050E2  6FC6               	movwf	(oled_putString@string+1)& (0+255),b
 11382  0050E4  6BC7               	clrf	oled_putString@station_dot& (0+255),b
 11383  0050E6  0E02               	movlw	2
 11384  0050E8  6FC8               	movwf	oled_putString@start_page& (0+255),b
 11385  0050EA  EC42  F027         	call	_oled_putString	;wreg free
 11386                           
 11387                           ;USBapp.c: 85: usbState = USB_RUNNING;
 11388  0050EE  0E01               	movlw	1
 11389  0050F0  0100               	movlb	0	; () banked
 11390  0050F2  D005               	goto	L18
 11391  0050F4                     l10446:
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;USBapp.c: 89: if( USBDeviceState < CONFIGURED_STATE )
 11395  0050F4  0E20               	movlw	32
 11396  0050F6  6191               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 11397  0050F8  D001               	goto	l10450
 11398  0050FA  D00E               	goto	l709
 11399  0050FC                     l10450:
 11400                           
 11401                           ; BSR set to: 0
 11402                           ;USBapp.c: 93: }
 11403                           ;USBapp.c: 94: usbState = USB_CDC;
 11404  0050FC  0E02               	movlw	2
 11405  0050FE                     L18:
 11406  0050FE  6FA1               	movwf	_usbState& (0+255),b
 11407                           
 11408                           ;USBapp.c: 95: break;
 11409  005100  D00B               	goto	l709
 11410  005102                     l10452:
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;USBapp.c: 98: USBapp_DeviceCdcEmulatorHandler();
 11414  005102  EC0F  F02C         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 11415                           
 11416                           ;USBapp.c: 101: break;
 11417  005106  D008               	goto	l709
 11418  005108                     l10456:
 11419  005108  0100               	movlb	0	; () banked
 11420  00510A  51A1               	movf	_usbState& (0+255),w,b
 11421                           
 11422                           ; Switch size 1, requested type "speed"
 11423                           ; Number of cases is 3, Range of values is 0 to 2
 11424                           ; switch strategies available:
 11425                           ; Name         Instructions Cycles
 11426                           ; simple_byte           10     6 (average)
 11427                           ;	Chosen strategy is simple_byte
 11428  00510C  E0D0               	bz	l10436
 11429  00510E  0A01               	xorlw	1	; case 1
 11430  005110  E0F1               	bz	l10446
 11431  005112  0A03               	xorlw	3	; case 2
 11432  005114  E0F6               	bz	l10452
 11433  005116  D7CA               	goto	l702
 11434  005118                     l709:
 11435                           
 11436                           ; BSR set to: 0
 11437                           ;USBapp.c: 103: }while(PORTAbits.RA0);
 11438  005118  B080               	btfsc	3968,0,c	;volatile
 11439  00511A  D7F6               	goto	l10456
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;USBapp.c: 104: __nop();
 11443  00511C  F000               	nop	
 11444  00511E  0012               	return		;funcret
 11445  005120                     __end_of_USBapp_Handler:
 11446                           	opt stack 0
 11447                           tblptru	equ	0xFF8
 11448                           tblptrh	equ	0xFF7
 11449                           tblptrl	equ	0xFF6
 11450                           tablat	equ	0xFF5
 11451                           prodh	equ	0xFF4
 11452                           prodl	equ	0xFF3
 11453                           intcon	equ	0xFF2
 11454                           postinc0	equ	0xFEE
 11455                           wreg	equ	0xFE8
 11456                           indf1	equ	0xFE7
 11457                           postdec1	equ	0xFE5
 11458                           fsr1h	equ	0xFE2
 11459                           fsr1l	equ	0xFE1
 11460                           indf2	equ	0xFDF
 11461                           postinc2	equ	0xFDE
 11462                           postdec2	equ	0xFDD
 11463                           fsr2h	equ	0xFDA
 11464                           fsr2l	equ	0xFD9
 11465                           status	equ	0xFD8
 11466                           
 11467 ;; *************** function _oled_putString *****************
 11468 ;; Defined at:
 11469 ;;		line 273 in file "../Includes/Drivers/SSD1306oLED.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;  string          2   13[BANK0 ] PTR const unsigned char 
 11472 ;;		 -> oled_putUint16@numData(6), oled_putUint8@numData(6), STR_109(12), STR_108(8), 
 11473 ;;		 -> STR_107(9), STR_89(2), STR_88(16), STR_87(13), 
 11474 ;;		 -> STR_86(12), STR_85(17), STR_84(7), STR_82(7), 
 11475 ;;		 -> STR_80(7), STR_79(2), STR_78(7), STR_77(7), 
 11476 ;;		 -> STR_76(7), STR_75(7), STR_74(7), STR_73(7), 
 11477 ;;		 -> STR_72(7), STR_71(7), STR_70(17), STR_69(17), 
 11478 ;;		 -> STR_68(7), STR_67(7), STR_66(7), STR_65(10), 
 11479 ;;		 -> STR_64(15), STR_62(17), STR_61(7), STR_58(17), 
 11480 ;;		 -> STR_56(9), STR_53(7), cmd(64), STR_48(8), 
 11481 ;;		 -> STR_45(9), STR_42(8), STR_39(12), STR_36(12), 
 11482 ;;		 -> STR_33(12), modemResonseBuffer(64), STR_30(8), STR_28(17), 
 11483 ;;		 -> STR_27(17), STR_26(17), STR_25(17), STR_24(9), 
 11484 ;;		 -> STR_23(10), STR_20(9), STR_19(8), STR_18(8), 
 11485 ;;		 -> STR_17(9), STR_16(10), STR_15(11), STR_14(13), 
 11486 ;;		 -> STR_13(13), STR_12(13), STR_11(12), STR_10(13), 
 11487 ;;		 -> STR_9(9), STR_8(12), STR_7(16), STR_6(2), 
 11488 ;;		 -> STR_5(2), STR_4(9), STR_3(16), STR_2(10), 
 11489 ;;		 -> STR_1(14), 
 11490 ;;  station_dot     1   15[BANK0 ] unsigned char 
 11491 ;;  start_page      1   16[BANK0 ] unsigned char 
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;  index           1   17[BANK0 ] unsigned char 
 11494 ;; Return value:  Size  Location     Type
 11495 ;;                  1    wreg      void 
 11496 ;; Registers used:
 11497 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11498 ;; Tracked objects:
 11499 ;;		On entry : F/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11503 ;;      Params:         0       4       0       0       0       0       0       0       0
 11504 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11505 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11506 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11507 ;;Total ram usage:        5 bytes
 11508 ;; Hardware stack levels used:    1
 11509 ;; Hardware stack levels required when called:   15
 11510 ;; This function calls:
 11511 ;;		_oled_putChar
 11512 ;; This function is called by:
 11513 ;;		_main
 11514 ;;		_moteHandler
 11515 ;;		_moteJoiningProcess
 11516 ;;		_moteRunningProcess
 11517 ;;		_USBapp_Handler
 11518 ;;		_oled_putUint8
 11519 ;;		_oled_putUint16
 11520 ;; This function uses a non-reentrant model
 11521 ;;
 11522                           
 11523                           	psect	text43
 11524  004E84                     __ptext43:
 11525                           	opt stack 0
 11526  004E84                     _oled_putString:
 11527                           	opt stack 15
 11528                           
 11529                           ; BSR set to: 0
 11530                           ;SSD1306oLED.c: 275: uint8_t index;
 11531                           ;SSD1306oLED.c: 276: for(index = station_dot; index < 16; index++)
 11532                           
 11533                           ;incstack = 0
 11534  004E84  C0C7  F0C9         	movff	oled_putString@station_dot,oled_putString@index
 11535  004E88                     l8886:
 11536                           
 11537                           ; BSR set to: 0
 11538  004E88  0E0F               	movlw	15
 11539  004E8A  65C9               	cpfsgt	oled_putString@index& (0+255),b
 11540  004E8C  D001               	goto	l8890
 11541  004E8E  0C0F               	retlw	15
 11542  004E90                     l8890:
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;SSD1306oLED.c: 277: {
 11546                           ;SSD1306oLED.c: 278: if (*string != 0)
 11547  004E90  C0C5  FFF6         	movff	oled_putString@string,tblptrl
 11548  004E94  C0C6  FFF7         	movff	oled_putString@string+1,tblptrh
 11549  004E98  6AF8               	clrf	tblptru,c
 11550  004E9A  0E07               	movlw	(high __ramtop+-1)
 11551  004E9C  64F7               	cpfsgt	tblptrh,c
 11552  004E9E  D003               	bra	u6997
 11553  004EA0  0008               	tblrd		*
 11554  004EA2  50F5               	movf	tablat,w,c
 11555  004EA4  D005               	bra	u6990
 11556  004EA6                     u6997:
 11557  004EA6  CFF6 FFE1          	movff	tblptrl,fsr1l
 11558  004EAA  CFF7 FFE2          	movff	tblptrh,fsr1h
 11559  004EAE  50E7               	movf	indf1,w,c
 11560  004EB0                     u6990:
 11561  004EB0  0900               	iorlw	0
 11562  004EB2  B4D8               	btfsc	status,2,c
 11563  004EB4  0012               	return	
 11564                           
 11565                           ;SSD1306oLED.c: 279: {
 11566                           ;SSD1306oLED.c: 280: oled_putChar(*string, index, start_page);
 11567  004EB6  C0C9  F0BB         	movff	oled_putString@index,oled_putChar@station_dot
 11568  004EBA  C0C8  F0BC         	movff	oled_putString@start_page,oled_putChar@start_page
 11569  004EBE  C0C5  FFF6         	movff	oled_putString@string,tblptrl
 11570  004EC2  C0C6  FFF7         	movff	oled_putString@string+1,tblptrh
 11571  004EC6  6AF8               	clrf	tblptru,c
 11572  004EC8  0E07               	movlw	(high __ramtop+-1)
 11573  004ECA  64F7               	cpfsgt	tblptrh,c
 11574  004ECC  D003               	bra	u7017
 11575  004ECE  0008               	tblrd		*
 11576  004ED0  50F5               	movf	tablat,w,c
 11577  004ED2  D005               	bra	u7010
 11578  004ED4                     u7017:
 11579  004ED4  CFF6 FFE1          	movff	tblptrl,fsr1l
 11580  004ED8  CFF7 FFE2          	movff	tblptrh,fsr1h
 11581  004EDC  50E7               	movf	indf1,w,c
 11582  004EDE                     u7010:
 11583  004EDE  EC1A  F028         	call	_oled_putChar
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;SSD1306oLED.c: 281: *string++;
 11587  004EE2  4BC5               	infsnz	oled_putString@string& (0+255),f,b
 11588  004EE4  2BC6               	incf	(oled_putString@string+1)& (0+255),f,b
 11589                           
 11590                           ; BSR set to: 0
 11591                           
 11592                           ;SSD1306oLED.c: 282: }
 11593  004EE6  2BC9               	incf	oled_putString@index& (0+255),f,b
 11594  004EE8  D7CF               	goto	l8886
 11595  004EEA                     __end_of_oled_putString:
 11596                           	opt stack 0
 11597                           tblptru	equ	0xFF8
 11598                           tblptrh	equ	0xFF7
 11599                           tblptrl	equ	0xFF6
 11600                           tablat	equ	0xFF5
 11601                           prodh	equ	0xFF4
 11602                           prodl	equ	0xFF3
 11603                           intcon	equ	0xFF2
 11604                           postinc0	equ	0xFEE
 11605                           wreg	equ	0xFE8
 11606                           indf1	equ	0xFE7
 11607                           postdec1	equ	0xFE5
 11608                           fsr1h	equ	0xFE2
 11609                           fsr1l	equ	0xFE1
 11610                           indf2	equ	0xFDF
 11611                           postinc2	equ	0xFDE
 11612                           postdec2	equ	0xFDD
 11613                           fsr2h	equ	0xFDA
 11614                           fsr2l	equ	0xFD9
 11615                           status	equ	0xFD8
 11616                           
 11617 ;; *************** function _oled_clear *****************
 11618 ;; Defined at:
 11619 ;;		line 290 in file "../Includes/Drivers/SSD1306oLED.c"
 11620 ;; Parameters:    Size  Location     Type
 11621 ;;		None
 11622 ;; Auto vars:     Size  Location     Type
 11623 ;;		None
 11624 ;; Return value:  Size  Location     Type
 11625 ;;                  1    wreg      void 
 11626 ;; Registers used:
 11627 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11628 ;; Tracked objects:
 11629 ;;		On entry : 0/0
 11630 ;;		On exit  : F/0
 11631 ;;		Unchanged: 0/0
 11632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11633 ;;      Params:         0       0       0       0       0       0       0       0       0
 11634 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11635 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11636 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11637 ;;Total ram usage:        0 bytes
 11638 ;; Hardware stack levels used:    1
 11639 ;; Hardware stack levels required when called:   16
 11640 ;; This function calls:
 11641 ;;		_oled_clearRow
 11642 ;; This function is called by:
 11643 ;;		_main
 11644 ;;		_moteHandler
 11645 ;;		_moteJoiningProcess
 11646 ;;		_moteRunningProcess
 11647 ;;		_USBapp_Handler
 11648 ;;		_oled_init
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           	psect	text44
 11653  00443E                     __ptext44:
 11654                           	opt stack 0
 11655  00443E                     _oled_clear:
 11656                           	opt stack 13
 11657                           
 11658                           ;SSD1306oLED.c: 292: oled_clearRow(0);
 11659                           
 11660                           ;incstack = 0
 11661  00443E  0E00               	movlw	0
 11662  004440  EC65  F022         	call	_oled_clearRow
 11663                           
 11664                           ;SSD1306oLED.c: 293: oled_clearRow(1);
 11665  004444  0E01               	movlw	1
 11666  004446  EC65  F022         	call	_oled_clearRow
 11667                           
 11668                           ;SSD1306oLED.c: 294: oled_clearRow(2);
 11669  00444A  0E02               	movlw	2
 11670  00444C  EC65  F022         	call	_oled_clearRow
 11671                           
 11672                           ;SSD1306oLED.c: 295: oled_clearRow(3);
 11673  004450  0E03               	movlw	3
 11674  004452  EF65  F022         	goto	_oled_clearRow
 11675  004456                     __end_of_oled_clear:
 11676                           	opt stack 0
 11677                           tblptru	equ	0xFF8
 11678                           tblptrh	equ	0xFF7
 11679                           tblptrl	equ	0xFF6
 11680                           tablat	equ	0xFF5
 11681                           prodh	equ	0xFF4
 11682                           prodl	equ	0xFF3
 11683                           intcon	equ	0xFF2
 11684                           postinc0	equ	0xFEE
 11685                           wreg	equ	0xFE8
 11686                           indf1	equ	0xFE7
 11687                           postdec1	equ	0xFE5
 11688                           fsr1h	equ	0xFE2
 11689                           fsr1l	equ	0xFE1
 11690                           indf2	equ	0xFDF
 11691                           postinc2	equ	0xFDE
 11692                           postdec2	equ	0xFDD
 11693                           fsr2h	equ	0xFDA
 11694                           fsr2l	equ	0xFD9
 11695                           status	equ	0xFD8
 11696                           
 11697 ;; *************** function _oled_clearRow *****************
 11698 ;; Defined at:
 11699 ;;		line 298 in file "../Includes/Drivers/SSD1306oLED.c"
 11700 ;; Parameters:    Size  Location     Type
 11701 ;;  page            1    wreg     unsigned char 
 11702 ;; Auto vars:     Size  Location     Type
 11703 ;;  page            1   13[BANK0 ] unsigned char 
 11704 ;;  index           1   14[BANK0 ] unsigned char 
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  1    wreg      void 
 11707 ;; Registers used:
 11708 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11709 ;; Tracked objects:
 11710 ;;		On entry : 0/0
 11711 ;;		On exit  : F/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11714 ;;      Params:         0       0       0       0       0       0       0       0       0
 11715 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11716 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11717 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11718 ;;Total ram usage:        2 bytes
 11719 ;; Hardware stack levels used:    1
 11720 ;; Hardware stack levels required when called:   15
 11721 ;; This function calls:
 11722 ;;		_oled_putChar
 11723 ;; This function is called by:
 11724 ;;		_oled_clear
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           	psect	text45
 11729  0044CA                     __ptext45:
 11730                           	opt stack 0
 11731  0044CA                     _oled_clearRow:
 11732                           	opt stack 13
 11733                           
 11734                           ; BSR set to: 0
 11735                           ;incstack = 0
 11736                           ;oled_clearRow@page stored from wreg
 11737  0044CA  0100               	movlb	0	; () banked
 11738  0044CC  6FC5               	movwf	oled_clearRow@page& (0+255),b
 11739                           
 11740                           ;SSD1306oLED.c: 300: uint8_t index;
 11741                           ;SSD1306oLED.c: 302: for(index = 0; index < 16; index++)
 11742  0044CE  6BC6               	clrf	oled_clearRow@index& (0+255),b
 11743  0044D0                     l8730:
 11744                           
 11745                           ; BSR set to: 0
 11746                           ;SSD1306oLED.c: 303: {
 11747                           ;SSD1306oLED.c: 304: oled_putChar( ' ', index, page);
 11748  0044D0  C0C6  F0BB         	movff	oled_clearRow@index,oled_putChar@station_dot
 11749  0044D4  C0C5  F0BC         	movff	oled_clearRow@page,oled_putChar@start_page
 11750  0044D8  0E20               	movlw	32
 11751  0044DA  EC1A  F028         	call	_oled_putChar
 11752                           
 11753                           ; BSR set to: 0
 11754  0044DE  2BC6               	incf	oled_clearRow@index& (0+255),f,b
 11755                           
 11756                           ; BSR set to: 0
 11757  0044E0  0E0F               	movlw	15
 11758  0044E2  65C6               	cpfsgt	oled_clearRow@index& (0+255),b
 11759  0044E4  D7F5               	goto	l8730
 11760  0044E6  0C0F               	retlw	15
 11761  0044E8                     __end_of_oled_clearRow:
 11762                           	opt stack 0
 11763                           tblptru	equ	0xFF8
 11764                           tblptrh	equ	0xFF7
 11765                           tblptrl	equ	0xFF6
 11766                           tablat	equ	0xFF5
 11767                           prodh	equ	0xFF4
 11768                           prodl	equ	0xFF3
 11769                           intcon	equ	0xFF2
 11770                           postinc0	equ	0xFEE
 11771                           wreg	equ	0xFE8
 11772                           indf1	equ	0xFE7
 11773                           postdec1	equ	0xFE5
 11774                           fsr1h	equ	0xFE2
 11775                           fsr1l	equ	0xFE1
 11776                           indf2	equ	0xFDF
 11777                           postinc2	equ	0xFDE
 11778                           postdec2	equ	0xFDD
 11779                           fsr2h	equ	0xFDA
 11780                           fsr2l	equ	0xFD9
 11781                           status	equ	0xFD8
 11782                           
 11783 ;; *************** function _oled_putChar *****************
 11784 ;; Defined at:
 11785 ;;		line 258 in file "../Includes/Drivers/SSD1306oLED.c"
 11786 ;; Parameters:    Size  Location     Type
 11787 ;;  k               1    wreg     unsigned char 
 11788 ;;  station_dot     1    3[BANK0 ] unsigned char 
 11789 ;;  start_page      1    4[BANK0 ] unsigned char 
 11790 ;; Auto vars:     Size  Location     Type
 11791 ;;  k               1   11[BANK0 ] unsigned char 
 11792 ;;  index           1   12[BANK0 ] unsigned char 
 11793 ;; Return value:  Size  Location     Type
 11794 ;;                  1    wreg      void 
 11795 ;; Registers used:
 11796 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11797 ;; Tracked objects:
 11798 ;;		On entry : 0/0
 11799 ;;		On exit  : F/0
 11800 ;;		Unchanged: 0/0
 11801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11802 ;;      Params:         0       2       0       0       0       0       0       0       0
 11803 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11804 ;;      Temps:          0       6       0       0       0       0       0       0       0
 11805 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11806 ;;Total ram usage:       10 bytes
 11807 ;; Hardware stack levels used:    1
 11808 ;; Hardware stack levels required when called:   14
 11809 ;; This function calls:
 11810 ;;		_Set_Column_Address
 11811 ;;		_Set_Page_Address
 11812 ;;		_oled_writeData
 11813 ;; This function is called by:
 11814 ;;		_oled_putString
 11815 ;;		_oled_clearRow
 11816 ;; This function uses a non-reentrant model
 11817 ;;
 11818                           
 11819                           	psect	text46
 11820  005034                     __ptext46:
 11821                           	opt stack 0
 11822  005034                     _oled_putChar:
 11823                           	opt stack 15
 11824                           
 11825                           ; BSR set to: 0
 11826                           ;incstack = 0
 11827                           ;oled_putChar@k stored from wreg
 11828  005034  0100               	movlb	0	; () banked
 11829  005036  6FC3               	movwf	oled_putChar@k& (0+255),b
 11830                           
 11831                           ;SSD1306oLED.c: 260: uint8_t index;
 11832                           ;SSD1306oLED.c: 262: Set_Page_Address(start_page);
 11833  005038  51BC               	movf	oled_putChar@start_page& (0+255),w,b
 11834  00503A  ECF5  F021         	call	_Set_Page_Address
 11835                           
 11836                           ;SSD1306oLED.c: 263: Set_Column_Address(0x00 + station_dot * 8);
 11837  00503E  0100               	movlb	0	; () banked
 11838  005040  51BB               	movf	oled_putChar@station_dot& (0+255),w,b
 11839  005042  0D08               	mullw	8
 11840  005044  50F3               	movf	prodl,w,c
 11841  005046  EC56  F022         	call	_Set_Column_Address
 11842                           
 11843                           ;SSD1306oLED.c: 265: LATBbits.LATB4 = 0;
 11844  00504A  988A               	bcf	3978,4,c	;volatile
 11845                           
 11846                           ;SSD1306oLED.c: 266: for(index = 0; index < 8; index++)
 11847  00504C  0100               	movlb	0	; () banked
 11848  00504E  6BC4               	clrf	oled_putChar@index& (0+255),b
 11849  005050                     l8678:
 11850                           
 11851                           ; BSR set to: 0
 11852                           ;SSD1306oLED.c: 267: {
 11853                           ;SSD1306oLED.c: 268: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 11854  005050  6BBD               	clrf	??_oled_putChar& (0+255),b
 11855  005052  69BE               	setf	(??_oled_putChar+1)& (0+255),b
 11856  005054  51C3               	movf	oled_putChar@k& (0+255),w,b
 11857  005056  6FBF               	movwf	(??_oled_putChar+2)& (0+255),b
 11858  005058  6BC0               	clrf	(??_oled_putChar+3)& (0+255),b
 11859  00505A  90D8               	bcf	status,0,c
 11860  00505C  37BF               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 11861  00505E  37C0               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 11862  005060  90D8               	bcf	status,0,c
 11863  005062  37BF               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 11864  005064  37C0               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 11865  005066  90D8               	bcf	status,0,c
 11866  005068  37BF               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 11867  00506A  37C0               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 11868  00506C  C0F9  F0C1         	movff	_selectedFont,??_oled_putChar+4
 11869  005070  C0FA  F0C2         	movff	_selectedFont+1,??_oled_putChar+5
 11870  005074  51BF               	movf	(??_oled_putChar+2)& (0+255),w,b
 11871  005076  27C1               	addwf	(??_oled_putChar+4)& (0+255),f,b
 11872  005078  51C0               	movf	(??_oled_putChar+3)& (0+255),w,b
 11873  00507A  23C2               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 11874  00507C  51C4               	movf	oled_putChar@index& (0+255),w,b
 11875  00507E  27C1               	addwf	(??_oled_putChar+4)& (0+255),f,b
 11876  005080  0E00               	movlw	0
 11877  005082  23C2               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 11878  005084  51BD               	movf	??_oled_putChar& (0+255),w,b
 11879  005086  27C1               	addwf	(??_oled_putChar+4)& (0+255),f,b
 11880  005088  51BE               	movf	(??_oled_putChar+1)& (0+255),w,b
 11881  00508A  23C2               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 11882  00508C  C0C1  FFF6         	movff	??_oled_putChar+4,tblptrl
 11883  005090  C0C2  FFF7         	movff	??_oled_putChar+5,tblptrh
 11884  005094                     	if	0	;tblptru may be non-zero
 11885  005094                     	endif
 11886  005094                     	if	0	;tblptru may be non-zero
 11887  005094                     	endif
 11888  005094  0008               	tblrd		*
 11889  005096  50F5               	movf	tablat,w,c
 11890  005098  ECA6  F021         	call	_oled_writeData
 11891  00509C  0100               	movlb	0	; () banked
 11892  00509E  2BC4               	incf	oled_putChar@index& (0+255),f,b
 11893                           
 11894                           ; BSR set to: 0
 11895  0050A0  0E07               	movlw	7
 11896  0050A2  65C4               	cpfsgt	oled_putChar@index& (0+255),b
 11897  0050A4  D7D5               	goto	l8678
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;SSD1306oLED.c: 269: }
 11901                           ;SSD1306oLED.c: 270: LATBbits.LATB4 = 1;
 11902  0050A6  888A               	bsf	3978,4,c	;volatile
 11903                           
 11904                           ; BSR set to: 0
 11905  0050A8  0C07               	retlw	7	;funcret
 11906  0050AA                     __end_of_oled_putChar:
 11907                           	opt stack 0
 11908                           tblptru	equ	0xFF8
 11909                           tblptrh	equ	0xFF7
 11910                           tblptrl	equ	0xFF6
 11911                           tablat	equ	0xFF5
 11912                           prodh	equ	0xFF4
 11913                           prodl	equ	0xFF3
 11914                           intcon	equ	0xFF2
 11915                           postinc0	equ	0xFEE
 11916                           wreg	equ	0xFE8
 11917                           indf1	equ	0xFE7
 11918                           postdec1	equ	0xFE5
 11919                           fsr1h	equ	0xFE2
 11920                           fsr1l	equ	0xFE1
 11921                           indf2	equ	0xFDF
 11922                           postinc2	equ	0xFDE
 11923                           postdec2	equ	0xFDD
 11924                           fsr2h	equ	0xFDA
 11925                           fsr2l	equ	0xFD9
 11926                           status	equ	0xFD8
 11927                           
 11928 ;; *************** function _oled_writeData *****************
 11929 ;; Defined at:
 11930 ;;		line 407 in file "../Includes/Drivers/SSD1306oLED.c"
 11931 ;; Parameters:    Size  Location     Type
 11932 ;;  data            1    wreg     unsigned char 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;  data            1    1[BANK0 ] unsigned char 
 11935 ;; Return value:  Size  Location     Type
 11936 ;;                  1    wreg      void 
 11937 ;; Registers used:
 11938 ;;		wreg, status,2, cstack
 11939 ;; Tracked objects:
 11940 ;;		On entry : F/0
 11941 ;;		On exit  : 0/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11944 ;;      Params:         0       0       0       0       0       0       0       0       0
 11945 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11946 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11947 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11948 ;;Total ram usage:        1 bytes
 11949 ;; Hardware stack levels used:    1
 11950 ;; Hardware stack levels required when called:   12
 11951 ;; This function calls:
 11952 ;;		_SPI_Exchange8bit
 11953 ;; This function is called by:
 11954 ;;		_oled_putChar
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958                           	psect	text47
 11959  00434C                     __ptext47:
 11960                           	opt stack 0
 11961  00434C                     _oled_writeData:
 11962                           	opt stack 16
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;incstack = 0
 11966                           ;oled_writeData@data stored from wreg
 11967  00434C  6FB9               	movwf	oled_writeData@data& (0+255),b
 11968                           
 11969                           ;SSD1306oLED.c: 409: LATBbits.LATB5 = 1;
 11970  00434E  8A8A               	bsf	3978,5,c	;volatile
 11971                           
 11972                           ;SSD1306oLED.c: 410: SPI_Exchange8bit(data);
 11973  004350  0100               	movlb	0	; () banked
 11974  004352  51B9               	movf	oled_writeData@data& (0+255),w,b
 11975  004354  EFC8  F021         	goto	_SPI_Exchange8bit
 11976  004358                     __end_of_oled_writeData:
 11977                           	opt stack 0
 11978                           tblptru	equ	0xFF8
 11979                           tblptrh	equ	0xFF7
 11980                           tblptrl	equ	0xFF6
 11981                           tablat	equ	0xFF5
 11982                           prodh	equ	0xFF4
 11983                           prodl	equ	0xFF3
 11984                           intcon	equ	0xFF2
 11985                           postinc0	equ	0xFEE
 11986                           wreg	equ	0xFE8
 11987                           indf1	equ	0xFE7
 11988                           postdec1	equ	0xFE5
 11989                           fsr1h	equ	0xFE2
 11990                           fsr1l	equ	0xFE1
 11991                           indf2	equ	0xFDF
 11992                           postinc2	equ	0xFDE
 11993                           postdec2	equ	0xFDD
 11994                           fsr2h	equ	0xFDA
 11995                           fsr2l	equ	0xFD9
 11996                           status	equ	0xFD8
 11997                           
 11998 ;; *************** function _Set_Page_Address *****************
 11999 ;; Defined at:
 12000 ;;		line 201 in file "../Includes/Drivers/SSD1306oLED.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;  address         1    wreg     unsigned char 
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;  address         1    2[BANK0 ] unsigned char 
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  1    wreg      void 
 12007 ;; Registers used:
 12008 ;;		wreg, status,2, status,0, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : F/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12014 ;;      Params:         0       0       0       0       0       0       0       0       0
 12015 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12016 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12017 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12018 ;;Total ram usage:        1 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:   13
 12021 ;; This function calls:
 12022 ;;		_oled_writeCommand
 12023 ;; This function is called by:
 12024 ;;		_oled_putChar
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           
 12028                           	psect	text48
 12029  0043EA                     __ptext48:
 12030                           	opt stack 0
 12031  0043EA                     _Set_Page_Address:
 12032                           	opt stack 15
 12033                           
 12034                           ;incstack = 0
 12035                           ;Set_Page_Address@address stored from wreg
 12036  0043EA  6FBA               	movwf	Set_Page_Address@address& (0+255),b
 12037                           
 12038                           ;SSD1306oLED.c: 203: address = 0xB0 | address;
 12039  0043EC  0EB0               	movlw	176
 12040  0043EE  0100               	movlb	0	; () banked
 12041  0043F0  13BA               	iorwf	Set_Page_Address@address& (0+255),f,b
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;SSD1306oLED.c: 204: LATBbits.LATB4 = 0;
 12045  0043F2  988A               	bcf	3978,4,c	;volatile
 12046                           
 12047                           ; BSR set to: 0
 12048                           ;SSD1306oLED.c: 205: oled_writeCommand(address);
 12049  0043F4  51BA               	movf	Set_Page_Address@address& (0+255),w,b
 12050  0043F6  ECA0  F021         	call	_oled_writeCommand
 12051                           
 12052                           ;SSD1306oLED.c: 206: LATBbits.LATB4 = 1;
 12053  0043FA  888A               	bsf	3978,4,c	;volatile
 12054  0043FC  0012               	return		;funcret
 12055  0043FE                     __end_of_Set_Page_Address:
 12056                           	opt stack 0
 12057                           tblptru	equ	0xFF8
 12058                           tblptrh	equ	0xFF7
 12059                           tblptrl	equ	0xFF6
 12060                           tablat	equ	0xFF5
 12061                           prodh	equ	0xFF4
 12062                           prodl	equ	0xFF3
 12063                           intcon	equ	0xFF2
 12064                           postinc0	equ	0xFEE
 12065                           wreg	equ	0xFE8
 12066                           indf1	equ	0xFE7
 12067                           postdec1	equ	0xFE5
 12068                           fsr1h	equ	0xFE2
 12069                           fsr1l	equ	0xFE1
 12070                           indf2	equ	0xFDF
 12071                           postinc2	equ	0xFDE
 12072                           postdec2	equ	0xFDD
 12073                           fsr2h	equ	0xFDA
 12074                           fsr2l	equ	0xFD9
 12075                           status	equ	0xFD8
 12076                           
 12077 ;; *************** function _Set_Column_Address *****************
 12078 ;; Defined at:
 12079 ;;		line 210 in file "../Includes/Drivers/SSD1306oLED.c"
 12080 ;; Parameters:    Size  Location     Type
 12081 ;;  address         1    wreg     unsigned char 
 12082 ;; Auto vars:     Size  Location     Type
 12083 ;;  address         1    2[BANK0 ] unsigned char 
 12084 ;; Return value:  Size  Location     Type
 12085 ;;                  1    wreg      void 
 12086 ;; Registers used:
 12087 ;;		wreg, status,2, status,0, cstack
 12088 ;; Tracked objects:
 12089 ;;		On entry : F/0
 12090 ;;		On exit  : 0/0
 12091 ;;		Unchanged: 0/0
 12092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12093 ;;      Params:         0       0       0       0       0       0       0       0       0
 12094 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12095 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12096 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12097 ;;Total ram usage:        1 bytes
 12098 ;; Hardware stack levels used:    1
 12099 ;; Hardware stack levels required when called:   13
 12100 ;; This function calls:
 12101 ;;		_oled_writeCommand
 12102 ;; This function is called by:
 12103 ;;		_oled_putChar
 12104 ;; This function uses a non-reentrant model
 12105 ;;
 12106                           
 12107                           	psect	text49
 12108  0044AC                     __ptext49:
 12109                           	opt stack 0
 12110  0044AC                     _Set_Column_Address:
 12111                           	opt stack 15
 12112                           
 12113                           ;incstack = 0
 12114                           ;Set_Column_Address@address stored from wreg
 12115  0044AC  6FBA               	movwf	Set_Column_Address@address& (0+255),b
 12116                           
 12117                           ;SSD1306oLED.c: 212: LATBbits.LATB4 = 0;
 12118  0044AE  988A               	bcf	3978,4,c	;volatile
 12119                           
 12120                           ;SSD1306oLED.c: 213: oled_writeCommand(0x10 | (address >> 4) );
 12121  0044B0  0100               	movlb	0	; () banked
 12122  0044B2  39BA               	swapf	Set_Column_Address@address& (0+255),w,b
 12123  0044B4  0B0F               	andlw	15
 12124  0044B6  0910               	iorlw	16
 12125  0044B8  ECA0  F021         	call	_oled_writeCommand
 12126                           
 12127                           ;SSD1306oLED.c: 214: oled_writeCommand(0x0F & address);
 12128  0044BC  0100               	movlb	0	; () banked
 12129  0044BE  51BA               	movf	Set_Column_Address@address& (0+255),w,b
 12130  0044C0  0B0F               	andlw	15
 12131  0044C2  ECA0  F021         	call	_oled_writeCommand
 12132                           
 12133                           ;SSD1306oLED.c: 215: LATBbits.LATB4 = 1;
 12134  0044C6  888A               	bsf	3978,4,c	;volatile
 12135  0044C8  0012               	return		;funcret
 12136  0044CA                     __end_of_Set_Column_Address:
 12137                           	opt stack 0
 12138                           tblptru	equ	0xFF8
 12139                           tblptrh	equ	0xFF7
 12140                           tblptrl	equ	0xFF6
 12141                           tablat	equ	0xFF5
 12142                           prodh	equ	0xFF4
 12143                           prodl	equ	0xFF3
 12144                           intcon	equ	0xFF2
 12145                           postinc0	equ	0xFEE
 12146                           wreg	equ	0xFE8
 12147                           indf1	equ	0xFE7
 12148                           postdec1	equ	0xFE5
 12149                           fsr1h	equ	0xFE2
 12150                           fsr1l	equ	0xFE1
 12151                           indf2	equ	0xFDF
 12152                           postinc2	equ	0xFDE
 12153                           postdec2	equ	0xFDD
 12154                           fsr2h	equ	0xFDA
 12155                           fsr2l	equ	0xFD9
 12156                           status	equ	0xFD8
 12157                           
 12158 ;; *************** function _oled_writeCommand *****************
 12159 ;; Defined at:
 12160 ;;		line 401 in file "../Includes/Drivers/SSD1306oLED.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;  command         1    wreg     unsigned char 
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;  command         1    1[BANK0 ] unsigned char 
 12165 ;; Return value:  Size  Location     Type
 12166 ;;                  1    wreg      void 
 12167 ;; Registers used:
 12168 ;;		wreg, status,2, cstack
 12169 ;; Tracked objects:
 12170 ;;		On entry : 0/0
 12171 ;;		On exit  : 0/0
 12172 ;;		Unchanged: 0/0
 12173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12174 ;;      Params:         0       0       0       0       0       0       0       0       0
 12175 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12176 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12177 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12178 ;;Total ram usage:        1 bytes
 12179 ;; Hardware stack levels used:    1
 12180 ;; Hardware stack levels required when called:   12
 12181 ;; This function calls:
 12182 ;;		_SPI_Exchange8bit
 12183 ;; This function is called by:
 12184 ;;		_Set_Page_Address
 12185 ;;		_Set_Column_Address
 12186 ;;		_oled_devInit
 12187 ;;		_oled_setDisplay
 12188 ;;		_oled_displayOff
 12189 ;; This function uses a non-reentrant model
 12190 ;;
 12191                           
 12192                           	psect	text50
 12193  004340                     __ptext50:
 12194                           	opt stack 0
 12195  004340                     _oled_writeCommand:
 12196                           	opt stack 15
 12197                           
 12198                           ;incstack = 0
 12199                           ;oled_writeCommand@command stored from wreg
 12200  004340  0100               	movlb	0	; () banked
 12201  004342  6FB9               	movwf	oled_writeCommand@command& (0+255),b
 12202                           
 12203                           ;SSD1306oLED.c: 403: LATBbits.LATB5 = 0;
 12204  004344  9A8A               	bcf	3978,5,c	;volatile
 12205                           
 12206                           ;SSD1306oLED.c: 404: SPI_Exchange8bit(command);
 12207  004346  51B9               	movf	oled_writeCommand@command& (0+255),w,b
 12208  004348  EFC8  F021         	goto	_SPI_Exchange8bit
 12209  00434C                     __end_of_oled_writeCommand:
 12210                           	opt stack 0
 12211                           tblptru	equ	0xFF8
 12212                           tblptrh	equ	0xFF7
 12213                           tblptrl	equ	0xFF6
 12214                           tablat	equ	0xFF5
 12215                           prodh	equ	0xFF4
 12216                           prodl	equ	0xFF3
 12217                           intcon	equ	0xFF2
 12218                           postinc0	equ	0xFEE
 12219                           wreg	equ	0xFE8
 12220                           indf1	equ	0xFE7
 12221                           postdec1	equ	0xFE5
 12222                           fsr1h	equ	0xFE2
 12223                           fsr1l	equ	0xFE1
 12224                           indf2	equ	0xFDF
 12225                           postinc2	equ	0xFDE
 12226                           postdec2	equ	0xFDD
 12227                           fsr2h	equ	0xFDA
 12228                           fsr2l	equ	0xFD9
 12229                           status	equ	0xFD8
 12230                           
 12231 ;; *************** function _SPI_Exchange8bit *****************
 12232 ;; Defined at:
 12233 ;;		line 81 in file "../Includes/MccGenerated/spi.c"
 12234 ;; Parameters:    Size  Location     Type
 12235 ;;  data            1    wreg     unsigned char 
 12236 ;; Auto vars:     Size  Location     Type
 12237 ;;  data            1    0[BANK0 ] unsigned char 
 12238 ;; Return value:  Size  Location     Type
 12239 ;;                  1    wreg      unsigned char 
 12240 ;; Registers used:
 12241 ;;		wreg, status,2
 12242 ;; Tracked objects:
 12243 ;;		On entry : F/0
 12244 ;;		On exit  : 0/0
 12245 ;;		Unchanged: 0/0
 12246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12247 ;;      Params:         0       0       0       0       0       0       0       0       0
 12248 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12249 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12250 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12251 ;;Total ram usage:        1 bytes
 12252 ;; Hardware stack levels used:    1
 12253 ;; Hardware stack levels required when called:   11
 12254 ;; This function calls:
 12255 ;;		Nothing
 12256 ;; This function is called by:
 12257 ;;		_oled_writeCommand
 12258 ;;		_oled_writeData
 12259 ;; This function uses a non-reentrant model
 12260 ;;
 12261                           
 12262                           	psect	text51
 12263  004390                     __ptext51:
 12264                           	opt stack 0
 12265  004390                     _SPI_Exchange8bit:
 12266                           	opt stack 16
 12267                           
 12268                           ;incstack = 0
 12269                           ;SPI_Exchange8bit@data stored from wreg
 12270  004390  6FB8               	movwf	SPI_Exchange8bit@data& (0+255),b
 12271                           
 12272                           ;spi.c: 84: SSP1CON1bits.WCOL = 0;
 12273  004392  9EC6               	bcf	4038,7,c	;volatile
 12274                           
 12275                           ;spi.c: 86: SSPBUF = data;
 12276  004394  C0B8  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 12277  004398                     l1097:
 12278  004398  A0C7               	btfss	4039,0,c	;volatile
 12279  00439A  D7FE               	goto	l1097
 12280                           
 12281                           ;spi.c: 90: }
 12282                           ;spi.c: 92: return (SSPBUF);
 12283  00439C  50C9               	movf	4041,w,c	;volatile
 12284  00439E  0012               	return		;funcret
 12285  0043A0                     __end_of_SPI_Exchange8bit:
 12286                           	opt stack 0
 12287                           tblptru	equ	0xFF8
 12288                           tblptrh	equ	0xFF7
 12289                           tblptrl	equ	0xFF6
 12290                           tablat	equ	0xFF5
 12291                           prodh	equ	0xFF4
 12292                           prodl	equ	0xFF3
 12293                           intcon	equ	0xFF2
 12294                           postinc0	equ	0xFEE
 12295                           wreg	equ	0xFE8
 12296                           indf1	equ	0xFE7
 12297                           postdec1	equ	0xFE5
 12298                           fsr1h	equ	0xFE2
 12299                           fsr1l	equ	0xFE1
 12300                           indf2	equ	0xFDF
 12301                           postinc2	equ	0xFDE
 12302                           postdec2	equ	0xFDD
 12303                           fsr2h	equ	0xFDA
 12304                           fsr2l	equ	0xFD9
 12305                           status	equ	0xFD8
 12306                           
 12307 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 12308 ;; Defined at:
 12309 ;;		line 125 in file "../Includes/Board/USBapp.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;		None
 12312 ;; Auto vars:     Size  Location     Type
 12313 ;;		None
 12314 ;; Return value:  Size  Location     Type
 12315 ;;                  1    wreg      void 
 12316 ;; Registers used:
 12317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12318 ;; Tracked objects:
 12319 ;;		On entry : F/0
 12320 ;;		On exit  : F/0
 12321 ;;		Unchanged: 0/0
 12322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12323 ;;      Params:         0       0       0       0       0       0       0       0       0
 12324 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12325 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12326 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12327 ;;Total ram usage:        1 bytes
 12328 ;; Hardware stack levels used:    1
 12329 ;; Hardware stack levels required when called:   13
 12330 ;; This function calls:
 12331 ;;		_CDCTxService
 12332 ;;		_EUSART_Read
 12333 ;;		_EUSART_Write
 12334 ;;		_MOTEapp_setResponseReady
 12335 ;;		_USBapp_getrxByteFlag
 12336 ;;		_getsUSBUSART
 12337 ;;		_putUSBUSART
 12338 ;; This function is called by:
 12339 ;;		_USBapp_Handler
 12340 ;; This function uses a non-reentrant model
 12341 ;;
 12342                           
 12343                           	psect	text52
 12344  00581E                     __ptext52:
 12345                           	opt stack 0
 12346  00581E                     _USBapp_DeviceCdcEmulatorHandler:
 12347                           	opt stack 16
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;USBapp.c: 128: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 12351                           
 12352                           ;incstack = 0
 12353  00581E  0E1F               	movlw	31
 12354  005820  6591               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 12355  005822  0C1F               	retlw	31
 12356                           
 12357                           ; BSR set to: 0
 12358  005824  B260               	btfsc	3936,1,c	;volatile
 12359  005826  0C1F               	retlw	31
 12360                           
 12361                           ; BSR set to: 0
 12362                           ;USBapp.c: 131: if (RS232_Out_Data_Rdy == 0)
 12363  005828  501B               	movf	_RS232_Out_Data_Rdy,w,c
 12364  00582A  E10E               	bnz	l724
 12365                           
 12366                           ; BSR set to: 0
 12367                           ;USBapp.c: 132: {
 12368                           ;USBapp.c: 133: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 12369  00582C  0E18               	movlw	low _USB_Buffer
 12370  00582E  6FBF               	movwf	getsUSBUSART@buffer& (0+255),b
 12371  005830  0E01               	movlw	high _USB_Buffer
 12372  005832  6FC0               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 12373  005834  0E40               	movlw	64
 12374  005836  6FC1               	movwf	getsUSBUSART@len& (0+255),b
 12375  005838  ECE2  F029         	call	_getsUSBUSART	;wreg free
 12376  00583C  6E19               	movwf	_LastRS232Out,c
 12377                           
 12378                           ; BSR set to: 0
 12379                           ;USBapp.c: 134: if(LastRS232Out > 0)
 12380  00583E  5019               	movf	_LastRS232Out,w,c
 12381  005840  E003               	bz	l724
 12382                           
 12383                           ; BSR set to: 0
 12384                           ;USBapp.c: 135: {
 12385                           ;USBapp.c: 136: RS232_Out_Data_Rdy = 1;
 12386  005842  0E01               	movlw	1
 12387  005844  6E1B               	movwf	_RS232_Out_Data_Rdy,c
 12388                           
 12389                           ; BSR set to: 0
 12390                           ;USBapp.c: 137: RS232cp = 0;
 12391  005846  6A1C               	clrf	_RS232cp,c
 12392  005848                     l724:
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;USBapp.c: 138: }
 12396                           ;USBapp.c: 139: }
 12397                           ;USBapp.c: 142: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 12398  005848  501B               	movf	_RS232_Out_Data_Rdy,w,c
 12399  00584A  E010               	bz	l10224
 12400                           
 12401                           ; BSR set to: 0
 12402  00584C  A2AC               	btfss	4012,1,c	;volatile
 12403  00584E  D00E               	goto	l10224
 12404                           
 12405                           ; BSR set to: 0
 12406                           ;USBapp.c: 143: {
 12407                           ;USBapp.c: 145: EUSART_Write(USB_Buffer[RS232cp]);
 12408  005850  0E18               	movlw	low _USB_Buffer
 12409  005852  241C               	addwf	_RS232cp,w,c
 12410  005854  6ED9               	movwf	fsr2l,c
 12411  005856  6ADA               	clrf	fsr2h,c
 12412  005858  0E01               	movlw	high _USB_Buffer
 12413  00585A  22DA               	addwfc	fsr2h,f,c
 12414  00585C  50DF               	movf	indf2,w,c
 12415  00585E  ECEB  F023         	call	_EUSART_Write
 12416                           
 12417                           ;USBapp.c: 146: ++RS232cp;
 12418  005862  2A1C               	incf	_RS232cp,f,c
 12419                           
 12420                           ;USBapp.c: 147: if (RS232cp == LastRS232Out)
 12421  005864  5019               	movf	_LastRS232Out,w,c
 12422  005866  181C               	xorwf	_RS232cp,w,c
 12423  005868  E101               	bnz	l10224
 12424                           
 12425                           ;USBapp.c: 148: RS232_Out_Data_Rdy = 0;
 12426  00586A  6A1B               	clrf	_RS232_Out_Data_Rdy,c
 12427  00586C                     l10224:
 12428                           
 12429                           ;USBapp.c: 149: }
 12430                           ;USBapp.c: 152: if ((eusartRxCount))
 12431  00586C  5023               	movf	_eusartRxCount,w,c	;volatile
 12432  00586E  E01C               	bz	l10240
 12433                           
 12434                           ;USBapp.c: 153: {
 12435                           ;USBapp.c: 154: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 12436  005870  EC80  F021         	call	_USBapp_getrxByteFlag	;wreg free
 12437  005874  0900               	iorlw	0
 12438  005876  E018               	bz	l10240
 12439  005878  0E3F               	movlw	63
 12440  00587A  601A               	cpfslt	_NextUSBOut,c
 12441  00587C  D015               	goto	l10240
 12442                           
 12443                           ;USBapp.c: 155: {
 12444                           ;USBapp.c: 156: __nop();
 12445  00587E  F000               	nop	
 12446                           
 12447                           ;USBapp.c: 157: USB_Buffer[NextUSBOut] = EUSART_Read();
 12448  005880  ECD4  F023         	call	_EUSART_Read	;wreg free
 12449  005884  6FC5               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 12450  005886  0E18               	movlw	low _USB_Buffer
 12451  005888  241A               	addwf	_NextUSBOut,w,c
 12452  00588A  6ED9               	movwf	fsr2l,c
 12453  00588C  6ADA               	clrf	fsr2h,c
 12454  00588E  0E01               	movlw	high _USB_Buffer
 12455  005890  22DA               	addwfc	fsr2h,f,c
 12456  005892  C0C5  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 12457                           
 12458                           ; BSR set to: 0
 12459                           ;USBapp.c: 158: ++NextUSBOut;
 12460  005896  2A1A               	incf	_NextUSBOut,f,c
 12461                           
 12462                           ; BSR set to: 0
 12463                           ;USBapp.c: 159: USB_Buffer[NextUSBOut] = 0;
 12464  005898  0E18               	movlw	low _USB_Buffer
 12465  00589A  241A               	addwf	_NextUSBOut,w,c
 12466  00589C  6ED9               	movwf	fsr2l,c
 12467  00589E  6ADA               	clrf	fsr2h,c
 12468  0058A0  0E01               	movlw	high _USB_Buffer
 12469  0058A2  22DA               	addwfc	fsr2h,f,c
 12470  0058A4  6ADF               	clrf	indf2,c
 12471                           
 12472                           ; BSR set to: 0
 12473                           ;USBapp.c: 160: rxByteFlag = 0;
 12474  0058A6  6A2A               	clrf	_rxByteFlag,c	;volatile
 12475  0058A8                     l10240:
 12476                           
 12477                           ;USBapp.c: 161: }
 12478                           ;USBapp.c: 162: }
 12479                           ;USBapp.c: 166: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 12480  0058A8  5020               	movf	_cdc_trf_state,w,c
 12481  0058AA  E002 EF0A  F031    	bnz	_CDCTxService
 12482  0058B0  501A               	movf	_NextUSBOut,w,c
 12483  0058B2  E102 EF0A  F031    	bz	_CDCTxService
 12484                           
 12485                           ;USBapp.c: 167: {
 12486                           ;USBapp.c: 168: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 12487  0058B8  0E18               	movlw	low _USB_Buffer
 12488  0058BA  0100               	movlb	0	; () banked
 12489  0058BC  6FB8               	movwf	putUSBUSART@data& (0+255),b
 12490  0058BE  0E01               	movlw	high _USB_Buffer
 12491  0058C0  6FB9               	movwf	(putUSBUSART@data+1)& (0+255),b
 12492  0058C2  C01A  F0BA         	movff	_NextUSBOut,putUSBUSART@length
 12493  0058C6  EC2B  F022         	call	_putUSBUSART	;wreg free
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;USBapp.c: 169: MOTEapp_setResponseReady();
 12497  0058CA  EC02  F008         	call	_MOTEapp_setResponseReady	;wreg free
 12498                           
 12499                           ; BSR set to: 0
 12500                           ;USBapp.c: 170: NextUSBOut = 0;
 12501  0058CE  6A1A               	clrf	_NextUSBOut,c
 12502                           
 12503                           ;USBapp.c: 171: }
 12504                           ;USBapp.c: 173: CDCTxService();
 12505  0058D0  EF0A  F031         	goto	_CDCTxService	;wreg free
 12506  0058D4                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 12507                           	opt stack 0
 12508                           tblptru	equ	0xFF8
 12509                           tblptrh	equ	0xFF7
 12510                           tblptrl	equ	0xFF6
 12511                           tablat	equ	0xFF5
 12512                           prodh	equ	0xFF4
 12513                           prodl	equ	0xFF3
 12514                           intcon	equ	0xFF2
 12515                           postinc0	equ	0xFEE
 12516                           wreg	equ	0xFE8
 12517                           indf1	equ	0xFE7
 12518                           postdec1	equ	0xFE5
 12519                           fsr1h	equ	0xFE2
 12520                           fsr1l	equ	0xFE1
 12521                           indf2	equ	0xFDF
 12522                           postinc2	equ	0xFDE
 12523                           postdec2	equ	0xFDD
 12524                           fsr2h	equ	0xFDA
 12525                           fsr2l	equ	0xFD9
 12526                           status	equ	0xFD8
 12527                           
 12528 ;; *************** function _putUSBUSART *****************
 12529 ;; Defined at:
 12530 ;;		line 503 in file "../Includes/Usb/framework/usb_device_cdc.c"
 12531 ;; Parameters:    Size  Location     Type
 12532 ;;  data            2    0[BANK0 ] PTR unsigned char 
 12533 ;;		 -> USB_Buffer(64), 
 12534 ;;  length          1    2[BANK0 ] unsigned char 
 12535 ;; Auto vars:     Size  Location     Type
 12536 ;;		None
 12537 ;; Return value:  Size  Location     Type
 12538 ;;                  1    wreg      void 
 12539 ;; Registers used:
 12540 ;;		wreg, status,2, status,0
 12541 ;; Tracked objects:
 12542 ;;		On entry : F/0
 12543 ;;		On exit  : F/0
 12544 ;;		Unchanged: 0/0
 12545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12546 ;;      Params:         0       3       0       0       0       0       0       0       0
 12547 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12548 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12549 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12550 ;;Total ram usage:        3 bytes
 12551 ;; Hardware stack levels used:    1
 12552 ;; Hardware stack levels required when called:   11
 12553 ;; This function calls:
 12554 ;;		Nothing
 12555 ;; This function is called by:
 12556 ;;		_USBapp_DeviceCdcEmulatorHandler
 12557 ;; This function uses a non-reentrant model
 12558 ;;
 12559                           
 12560                           	psect	text53
 12561  004456                     __ptext53:
 12562                           	opt stack 0
 12563  004456                     _putUSBUSART:
 12564                           	opt stack 17
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;incstack = 0
 12571  004456  94A3               	bcf	4003,2,c	;volatile
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 12575  004458  5020               	movf	_cdc_trf_state,w,c
 12576  00445A  E109               	bnz	l9574
 12577                           
 12578                           ; BSR set to: 0
 12579                           ;usb_device_cdc.c: 530: {
 12580                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 12581  00445C  C0B8  F073         	movff	putUSBUSART@data,_pCDCSrc
 12582  004460  C0B9  F074         	movff	putUSBUSART@data+1,_pCDCSrc+1
 12583                           
 12584                           ; BSR set to: 0
 12585  004464  C0BA  F099         	movff	putUSBUSART@length,_cdc_tx_len
 12586                           
 12587                           ; BSR set to: 0
 12588  004468  0E01               	movlw	1
 12589  00446A  6F97               	movwf	_cdc_mem_type& (0+255),b
 12590                           
 12591                           ; BSR set to: 0
 12592  00446C  6E20               	movwf	_cdc_trf_state,c
 12593  00446E                     l9574:
 12594                           
 12595                           ; BSR set to: 0
 12596                           ;usb_device_cdc.c: 532: }
 12597                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 12598  00446E  84A3               	bsf	4003,2,c	;volatile
 12599                           
 12600                           ; BSR set to: 0
 12601  004470  0012               	return		;funcret
 12602  004472                     __end_of_putUSBUSART:
 12603                           	opt stack 0
 12604                           tblptru	equ	0xFF8
 12605                           tblptrh	equ	0xFF7
 12606                           tblptrl	equ	0xFF6
 12607                           tablat	equ	0xFF5
 12608                           prodh	equ	0xFF4
 12609                           prodl	equ	0xFF3
 12610                           intcon	equ	0xFF2
 12611                           postinc0	equ	0xFEE
 12612                           wreg	equ	0xFE8
 12613                           indf1	equ	0xFE7
 12614                           postdec1	equ	0xFE5
 12615                           fsr1h	equ	0xFE2
 12616                           fsr1l	equ	0xFE1
 12617                           indf2	equ	0xFDF
 12618                           postinc2	equ	0xFDE
 12619                           postdec2	equ	0xFDD
 12620                           fsr2h	equ	0xFDA
 12621                           fsr2l	equ	0xFD9
 12622                           status	equ	0xFD8
 12623                           
 12624 ;; *************** function _getsUSBUSART *****************
 12625 ;; Defined at:
 12626 ;;		line 432 in file "../Includes/Usb/framework/usb_device_cdc.c"
 12627 ;; Parameters:    Size  Location     Type
 12628 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 12629 ;;		 -> USB_Buffer(64), 
 12630 ;;  len             1    9[BANK0 ] unsigned char 
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;		None
 12633 ;; Return value:  Size  Location     Type
 12634 ;;                  1    wreg      unsigned char 
 12635 ;; Registers used:
 12636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12637 ;; Tracked objects:
 12638 ;;		On entry : F/0
 12639 ;;		On exit  : F/0
 12640 ;;		Unchanged: 0/0
 12641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12642 ;;      Params:         0       3       0       0       0       0       0       0       0
 12643 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12644 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12645 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12646 ;;Total ram usage:        6 bytes
 12647 ;; Hardware stack levels used:    1
 12648 ;; Hardware stack levels required when called:   12
 12649 ;; This function calls:
 12650 ;;		_USBTransferOnePacket
 12651 ;; This function is called by:
 12652 ;;		_USBapp_DeviceCdcEmulatorHandler
 12653 ;; This function uses a non-reentrant model
 12654 ;;
 12655                           
 12656                           	psect	text54
 12657  0053C4                     __ptext54:
 12658                           	opt stack 0
 12659  0053C4                     _getsUSBUSART:
 12660                           	opt stack 16
 12661                           
 12662                           ; BSR set to: 0
 12663                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;incstack = 0
 12667  0053C4  6B98               	clrf	_cdc_rx_len& (0+255),b
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 12671  0053C6  517B               	movf	_CDCDataOutHandle& (0+255),w,b
 12672  0053C8  117C               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 12673  0053CA  E009               	bz	l1780
 12674                           
 12675                           ; BSR set to: 0
 12676  0053CC  C07B  FFD9         	movff	_CDCDataOutHandle,fsr2l
 12677  0053D0  C07C  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 12678  0053D4  0E01               	movlw	1
 12679  0053D6  AEDF               	btfss	indf2,7,c
 12680  0053D8  0E00               	movlw	0
 12681  0053DA  6FC3               	movwf	_getsUSBUSART$5528& (0+255),b
 12682  0053DC  D001               	goto	L19
 12683  0053DE                     l1780:
 12684                           
 12685                           ; BSR set to: 0
 12686  0053DE  6BC3               	clrf	_getsUSBUSART$5528& (0+255),b
 12687  0053E0                     L19:
 12688  0053E0  6BC4               	clrf	(_getsUSBUSART$5528+1)& (0+255),b
 12689                           
 12690                           ; BSR set to: 0
 12691  0053E2  51C3               	movf	_getsUSBUSART$5528& (0+255),w,b
 12692  0053E4  11C4               	iorwf	(_getsUSBUSART$5528+1)& (0+255),w,b
 12693  0053E6  E134               	bnz	l9554
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;usb_device_cdc.c: 437: {
 12697                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 12698  0053E8  EE20 F001          	lfsr	2,1
 12699  0053EC  517B               	movf	_CDCDataOutHandle& (0+255),w,b
 12700  0053EE  26D9               	addwf	fsr2l,f,c
 12701  0053F0  517C               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 12702  0053F2  22DA               	addwfc	fsr2h,f,c
 12703  0053F4  51C1               	movf	getsUSBUSART@len& (0+255),w,b
 12704  0053F6  5CDE               	subwf	postinc2,w,c
 12705  0053F8  E208               	bc	l9544
 12706                           
 12707                           ; BSR set to: 0
 12708                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 12709  0053FA  EE20 F001          	lfsr	2,1
 12710  0053FE  517B               	movf	_CDCDataOutHandle& (0+255),w,b
 12711  005400  26D9               	addwf	fsr2l,f,c
 12712  005402  517C               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 12713  005404  22DA               	addwfc	fsr2h,f,c
 12714  005406  50DF               	movf	indf2,w,c
 12715  005408  6FC1               	movwf	getsUSBUSART@len& (0+255),b
 12716  00540A                     l9544:
 12717                           
 12718                           ; BSR set to: 0
 12719                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 12720  00540A  6B98               	clrf	_cdc_rx_len& (0+255),b
 12721  00540C  D00F               	goto	l9550
 12722  00540E                     l9546:
 12723                           
 12724                           ; BSR set to: 0
 12725                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 12726  00540E  0E40               	movlw	64
 12727  005410  2598               	addwf	_cdc_rx_len& (0+255),w,b
 12728  005412  6ED9               	movwf	fsr2l,c
 12729  005414  6ADA               	clrf	fsr2h,c
 12730  005416  0E05               	movlw	5
 12731  005418  22DA               	addwfc	fsr2h,f,c
 12732  00541A  5198               	movf	_cdc_rx_len& (0+255),w,b
 12733  00541C  25BF               	addwf	getsUSBUSART@buffer& (0+255),w,b
 12734  00541E  6EE1               	movwf	fsr1l,c
 12735  005420  0E00               	movlw	0
 12736  005422  21C0               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 12737  005424  6EE2               	movwf	fsr1h,c
 12738  005426  CFDF FFE7          	movff	indf2,indf1
 12739                           
 12740                           ; BSR set to: 0
 12741  00542A  2B98               	incf	_cdc_rx_len& (0+255),f,b
 12742  00542C                     l9550:
 12743                           
 12744                           ; BSR set to: 0
 12745  00542C  51C1               	movf	getsUSBUSART@len& (0+255),w,b
 12746  00542E  5D98               	subwf	_cdc_rx_len& (0+255),w,b
 12747  005430  E3EE               	bnc	l9546
 12748                           
 12749                           ; BSR set to: 0
 12750                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12751  005432  0E00               	movlw	0
 12752  005434  6FB8               	movwf	USBTransferOnePacket@dir& (0+255),b
 12753  005436  0E40               	movlw	64
 12754  005438  6FB9               	movwf	USBTransferOnePacket@data& (0+255),b
 12755  00543A  0E05               	movlw	5
 12756  00543C  6FBA               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12757  00543E  0E40               	movlw	64
 12758  005440  6FBB               	movwf	USBTransferOnePacket@len& (0+255),b
 12759  005442  0E02               	movlw	2
 12760  005444  EC12  F02B         	call	_USBTransferOnePacket
 12761  005448  C0B8  F07B         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12762  00544C  C0B9  F07C         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12763  005450                     l9554:
 12764                           
 12765                           ; BSR set to: 0
 12766                           ;usb_device_cdc.c: 457: }
 12767                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 12768  005450  5198               	movf	_cdc_rx_len& (0+255),w,b
 12769                           
 12770                           ; BSR set to: 0
 12771  005452  0012               	return		;funcret
 12772  005454                     __end_of_getsUSBUSART:
 12773                           	opt stack 0
 12774                           tblptru	equ	0xFF8
 12775                           tblptrh	equ	0xFF7
 12776                           tblptrl	equ	0xFF6
 12777                           tablat	equ	0xFF5
 12778                           prodh	equ	0xFF4
 12779                           prodl	equ	0xFF3
 12780                           intcon	equ	0xFF2
 12781                           postinc0	equ	0xFEE
 12782                           wreg	equ	0xFE8
 12783                           indf1	equ	0xFE7
 12784                           postdec1	equ	0xFE5
 12785                           fsr1h	equ	0xFE2
 12786                           fsr1l	equ	0xFE1
 12787                           indf2	equ	0xFDF
 12788                           postinc2	equ	0xFDE
 12789                           postdec2	equ	0xFDD
 12790                           fsr2h	equ	0xFDA
 12791                           fsr2l	equ	0xFD9
 12792                           status	equ	0xFD8
 12793                           
 12794 ;; *************** function _USBapp_getrxByteFlag *****************
 12795 ;; Defined at:
 12796 ;;		line 231 in file "../Includes/Board/USBapp.c"
 12797 ;; Parameters:    Size  Location     Type
 12798 ;;		None
 12799 ;; Auto vars:     Size  Location     Type
 12800 ;;		None
 12801 ;; Return value:  Size  Location     Type
 12802 ;;                  1    wreg      unsigned char 
 12803 ;; Registers used:
 12804 ;;		wreg, status,2
 12805 ;; Tracked objects:
 12806 ;;		On entry : 0/0
 12807 ;;		On exit  : 0/0
 12808 ;;		Unchanged: 0/0
 12809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12810 ;;      Params:         0       0       0       0       0       0       0       0       0
 12811 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12812 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12813 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12814 ;;Total ram usage:        0 bytes
 12815 ;; Hardware stack levels used:    1
 12816 ;; Hardware stack levels required when called:   11
 12817 ;; This function calls:
 12818 ;;		Nothing
 12819 ;; This function is called by:
 12820 ;;		_USBapp_DeviceCdcEmulatorHandler
 12821 ;; This function uses a non-reentrant model
 12822 ;;
 12823                           
 12824                           	psect	text55
 12825  004300                     __ptext55:
 12826                           	opt stack 0
 12827  004300                     _USBapp_getrxByteFlag:
 12828                           	opt stack 17
 12829                           
 12830                           ;USBapp.c: 233: return rxByteFlag;
 12831                           
 12832                           ; BSR set to: 0
 12833                           ;incstack = 0
 12834  004300  502A               	movf	_rxByteFlag,w,c	;volatile
 12835  004302  0012               	return		;funcret
 12836  004304                     __end_of_USBapp_getrxByteFlag:
 12837                           	opt stack 0
 12838                           tblptru	equ	0xFF8
 12839                           tblptrh	equ	0xFF7
 12840                           tblptrl	equ	0xFF6
 12841                           tablat	equ	0xFF5
 12842                           prodh	equ	0xFF4
 12843                           prodl	equ	0xFF3
 12844                           intcon	equ	0xFF2
 12845                           postinc0	equ	0xFEE
 12846                           wreg	equ	0xFE8
 12847                           indf1	equ	0xFE7
 12848                           postdec1	equ	0xFE5
 12849                           fsr1h	equ	0xFE2
 12850                           fsr1l	equ	0xFE1
 12851                           indf2	equ	0xFDF
 12852                           postinc2	equ	0xFDE
 12853                           postdec2	equ	0xFDD
 12854                           fsr2h	equ	0xFDA
 12855                           fsr2l	equ	0xFD9
 12856                           status	equ	0xFD8
 12857                           
 12858 ;; *************** function _MOTEapp_setResponseReady *****************
 12859 ;; Defined at:
 12860 ;;		line 929 in file "../Includes/Board/MOTEapp.c"
 12861 ;; Parameters:    Size  Location     Type
 12862 ;;		None
 12863 ;; Auto vars:     Size  Location     Type
 12864 ;;		None
 12865 ;; Return value:  Size  Location     Type
 12866 ;;                  1    wreg      void 
 12867 ;; Registers used:
 12868 ;;		None
 12869 ;; Tracked objects:
 12870 ;;		On entry : F/0
 12871 ;;		On exit  : F/0
 12872 ;;		Unchanged: F/0
 12873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12874 ;;      Params:         0       0       0       0       0       0       0       0       0
 12875 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12876 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12877 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12878 ;;Total ram usage:        0 bytes
 12879 ;; Hardware stack levels used:    1
 12880 ;; Hardware stack levels required when called:   11
 12881 ;; This function calls:
 12882 ;;		Nothing
 12883 ;; This function is called by:
 12884 ;;		_USBapp_DeviceCdcEmulatorHandler
 12885 ;; This function uses a non-reentrant model
 12886 ;;
 12887                           
 12888                           	psect	text56
 12889  001004                     __ptext56:
 12890                           	opt stack 0
 12891  001004                     _MOTEapp_setResponseReady:
 12892                           	opt stack 17
 12893                           
 12894                           ; BSR set to: 0
 12895                           
 12896                           ;incstack = 0
 12897  001004  0012               	return		;funcret
 12898  001006                     __end_of_MOTEapp_setResponseReady:
 12899                           	opt stack 0
 12900                           tblptru	equ	0xFF8
 12901                           tblptrh	equ	0xFF7
 12902                           tblptrl	equ	0xFF6
 12903                           tablat	equ	0xFF5
 12904                           prodh	equ	0xFF4
 12905                           prodl	equ	0xFF3
 12906                           intcon	equ	0xFF2
 12907                           postinc0	equ	0xFEE
 12908                           wreg	equ	0xFE8
 12909                           indf1	equ	0xFE7
 12910                           postdec1	equ	0xFE5
 12911                           fsr1h	equ	0xFE2
 12912                           fsr1l	equ	0xFE1
 12913                           indf2	equ	0xFDF
 12914                           postinc2	equ	0xFDE
 12915                           postdec2	equ	0xFDD
 12916                           fsr2h	equ	0xFDA
 12917                           fsr2l	equ	0xFD9
 12918                           status	equ	0xFD8
 12919                           
 12920 ;; *************** function _EUSART_Write *****************
 12921 ;; Defined at:
 12922 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 12923 ;; Parameters:    Size  Location     Type
 12924 ;;  txData          1    wreg     unsigned char 
 12925 ;; Auto vars:     Size  Location     Type
 12926 ;;  txData          1    0[BANK0 ] unsigned char 
 12927 ;; Return value:  Size  Location     Type
 12928 ;;                  1    wreg      void 
 12929 ;; Registers used:
 12930 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12931 ;; Tracked objects:
 12932 ;;		On entry : 0/0
 12933 ;;		On exit  : 0/0
 12934 ;;		Unchanged: 0/0
 12935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12936 ;;      Params:         0       0       0       0       0       0       0       0       0
 12937 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12938 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12939 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12940 ;;Total ram usage:        1 bytes
 12941 ;; Hardware stack levels used:    1
 12942 ;; Hardware stack levels required when called:   11
 12943 ;; This function calls:
 12944 ;;		Nothing
 12945 ;; This function is called by:
 12946 ;;		_EndLine
 12947 ;;		_sendCommand
 12948 ;;		_sendDataCommand
 12949 ;;		_USBapp_DeviceCdcEmulatorHandler
 12950 ;; This function uses a non-reentrant model
 12951 ;;
 12952                           
 12953                           	psect	text57
 12954  0047D6                     __ptext57:
 12955                           	opt stack 0
 12956  0047D6                     _EUSART_Write:
 12957                           	opt stack 15
 12958                           
 12959                           ; BSR set to: 0
 12960                           ;incstack = 0
 12961                           ;EUSART_Write@txData stored from wreg
 12962  0047D6  0100               	movlb	0	; () banked
 12963  0047D8  6FB8               	movwf	EUSART_Write@txData& (0+255),b
 12964  0047DA                     l8686:
 12965  0047DA  5026               	movf	_eusartTxBufferRemaining,w,c	;volatile
 12966  0047DC  E0FE               	bz	l8686
 12967                           
 12968                           ;eusart.c: 143: }
 12969                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 12970  0047DE  B89D               	btfsc	3997,4,c	;volatile
 12971  0047E0  D003               	goto	l948
 12972                           
 12973                           ;eusart.c: 146: {
 12974                           ;eusart.c: 147: TXREG = txData;
 12975  0047E2  C0B8  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 12976                           
 12977                           ;eusart.c: 148: }
 12978  0047E6  D00F               	goto	l8700
 12979  0047E8                     l948:
 12980                           
 12981                           ;eusart.c: 149: else
 12982                           ;eusart.c: 150: {
 12983                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 12984  0047E8  989D               	bcf	3997,4,c	;volatile
 12985                           
 12986                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 12987  0047EA  0E40               	movlw	low _eusartTxBuffer
 12988  0047EC  2427               	addwf	_eusartTxHead,w,c
 12989  0047EE  6ED9               	movwf	fsr2l,c
 12990  0047F0  6ADA               	clrf	fsr2h,c
 12991  0047F2  0E02               	movlw	high _eusartTxBuffer
 12992  0047F4  22DA               	addwfc	fsr2h,f,c
 12993  0047F6  C0B8  FFDF         	movff	EUSART_Write@txData,indf2
 12994  0047FA  2A27               	incf	_eusartTxHead,f,c
 12995                           
 12996                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 12997  0047FC  0E3F               	movlw	63
 12998  0047FE  6427               	cpfsgt	_eusartTxHead,c
 12999  004800  D001               	goto	l8698
 13000                           
 13001                           ;eusart.c: 154: {
 13002                           ;eusart.c: 155: eusartTxHead = 0;
 13003  004802  6A27               	clrf	_eusartTxHead,c
 13004  004804                     l8698:
 13005                           
 13006                           ;eusart.c: 156: }
 13007                           ;eusart.c: 157: eusartTxBufferRemaining--;
 13008  004804  0626               	decf	_eusartTxBufferRemaining,f,c	;volatile
 13009  004806                     l8700:
 13010                           
 13011                           ;eusart.c: 158: }
 13012                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 13013  004806  889D               	bsf	3997,4,c	;volatile
 13014  004808  0012               	return		;funcret
 13015  00480A                     __end_of_EUSART_Write:
 13016                           	opt stack 0
 13017                           tblptru	equ	0xFF8
 13018                           tblptrh	equ	0xFF7
 13019                           tblptrl	equ	0xFF6
 13020                           tablat	equ	0xFF5
 13021                           prodh	equ	0xFF4
 13022                           prodl	equ	0xFF3
 13023                           intcon	equ	0xFF2
 13024                           postinc0	equ	0xFEE
 13025                           wreg	equ	0xFE8
 13026                           indf1	equ	0xFE7
 13027                           postdec1	equ	0xFE5
 13028                           fsr1h	equ	0xFE2
 13029                           fsr1l	equ	0xFE1
 13030                           indf2	equ	0xFDF
 13031                           postinc2	equ	0xFDE
 13032                           postdec2	equ	0xFDD
 13033                           fsr2h	equ	0xFDA
 13034                           fsr2l	equ	0xFD9
 13035                           status	equ	0xFD8
 13036                           
 13037 ;; *************** function _EUSART_Read *****************
 13038 ;; Defined at:
 13039 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 13040 ;; Parameters:    Size  Location     Type
 13041 ;;		None
 13042 ;; Auto vars:     Size  Location     Type
 13043 ;;  readValue       1    0[BANK0 ] unsigned char 
 13044 ;; Return value:  Size  Location     Type
 13045 ;;                  1    wreg      unsigned char 
 13046 ;; Registers used:
 13047 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13048 ;; Tracked objects:
 13049 ;;		On entry : 0/0
 13050 ;;		On exit  : F/0
 13051 ;;		Unchanged: 0/0
 13052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13053 ;;      Params:         0       0       0       0       0       0       0       0       0
 13054 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13055 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13056 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13057 ;;Total ram usage:        1 bytes
 13058 ;; Hardware stack levels used:    1
 13059 ;; Hardware stack levels required when called:   11
 13060 ;; This function calls:
 13061 ;;		Nothing
 13062 ;; This function is called by:
 13063 ;;		_MOTEapp_getModemResponse
 13064 ;;		_USBapp_DeviceCdcEmulatorHandler
 13065 ;; This function uses a non-reentrant model
 13066 ;;
 13067                           
 13068                           	psect	text58
 13069  0047A8                     __ptext58:
 13070                           	opt stack 0
 13071  0047A8                     _EUSART_Read:
 13072                           	opt stack 14
 13073                           
 13074                           ;eusart.c: 121: while(0 == eusartRxCount)
 13075                           
 13076                           ;incstack = 0
 13077  0047A8  D001               	goto	l8704
 13078  0047AA                     l939:
 13079                           
 13080                           ;eusart.c: 122: {
 13081                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 13082  0047AA  8E89               	bsf	3977,7,c	;volatile
 13083  0047AC                     l8704:
 13084  0047AC  5023               	movf	_eusartRxCount,w,c	;volatile
 13085  0047AE  E0FD               	bz	l939
 13086                           
 13087                           ;eusart.c: 124: }
 13088                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 13089  0047B0  9A9D               	bcf	3997,5,c	;volatile
 13090                           
 13091                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 13092  0047B2  0E00               	movlw	low _eusartRxBuffer
 13093  0047B4  2425               	addwf	_eusartRxTail,w,c
 13094  0047B6  6ED9               	movwf	fsr2l,c
 13095  0047B8  6ADA               	clrf	fsr2h,c
 13096  0047BA  0E02               	movlw	high _eusartRxBuffer
 13097  0047BC  22DA               	addwfc	fsr2h,f,c
 13098  0047BE  50DF               	movf	indf2,w,c
 13099  0047C0  0100               	movlb	0	; () banked
 13100  0047C2  6FB8               	movwf	EUSART_Read@readValue& (0+255),b
 13101                           
 13102                           ; BSR set to: 0
 13103  0047C4  2A25               	incf	_eusartRxTail,f,c
 13104                           
 13105                           ; BSR set to: 0
 13106                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 13107  0047C6  0E3F               	movlw	63
 13108  0047C8  6425               	cpfsgt	_eusartRxTail,c
 13109  0047CA  D001               	goto	l8714
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;eusart.c: 130: {
 13113                           ;eusart.c: 131: eusartRxTail = 0;
 13114  0047CC  6A25               	clrf	_eusartRxTail,c
 13115  0047CE                     l8714:
 13116                           
 13117                           ; BSR set to: 0
 13118                           ;eusart.c: 132: }
 13119                           ;eusart.c: 133: eusartRxCount--;
 13120  0047CE  0623               	decf	_eusartRxCount,f,c	;volatile
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 13124  0047D0  8A9D               	bsf	3997,5,c	;volatile
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;eusart.c: 136: return readValue;
 13128  0047D2  51B8               	movf	EUSART_Read@readValue& (0+255),w,b
 13129                           
 13130                           ; BSR set to: 0
 13131  0047D4  0012               	return		;funcret
 13132  0047D6                     __end_of_EUSART_Read:
 13133                           	opt stack 0
 13134                           tblptru	equ	0xFF8
 13135                           tblptrh	equ	0xFF7
 13136                           tblptrl	equ	0xFF6
 13137                           tablat	equ	0xFF5
 13138                           prodh	equ	0xFF4
 13139                           prodl	equ	0xFF3
 13140                           intcon	equ	0xFF2
 13141                           postinc0	equ	0xFEE
 13142                           wreg	equ	0xFE8
 13143                           indf1	equ	0xFE7
 13144                           postdec1	equ	0xFE5
 13145                           fsr1h	equ	0xFE2
 13146                           fsr1l	equ	0xFE1
 13147                           indf2	equ	0xFDF
 13148                           postinc2	equ	0xFDE
 13149                           postdec2	equ	0xFDD
 13150                           fsr2h	equ	0xFDA
 13151                           fsr2l	equ	0xFD9
 13152                           status	equ	0xFD8
 13153                           
 13154 ;; *************** function _CDCTxService *****************
 13155 ;; Defined at:
 13156 ;;		line 783 in file "../Includes/Usb/framework/usb_device_cdc.c"
 13157 ;; Parameters:    Size  Location     Type
 13158 ;;		None
 13159 ;; Auto vars:     Size  Location     Type
 13160 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
 13161 ;;  i               1    9[BANK0 ] unsigned char 
 13162 ;; Return value:  Size  Location     Type
 13163 ;;                  1    wreg      void 
 13164 ;; Registers used:
 13165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13166 ;; Tracked objects:
 13167 ;;		On entry : 0/0
 13168 ;;		On exit  : F/0
 13169 ;;		Unchanged: 0/0
 13170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13171 ;;      Params:         0       0       0       0       0       0       0       0       0
 13172 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13173 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13174 ;;      Totals:         0       4       0       0       0       0       0       0       0
 13175 ;;Total ram usage:        4 bytes
 13176 ;; Hardware stack levels used:    1
 13177 ;; Hardware stack levels required when called:   12
 13178 ;; This function calls:
 13179 ;;		_USBTransferOnePacket
 13180 ;; This function is called by:
 13181 ;;		_USBapp_DeviceCdcEmulatorHandler
 13182 ;; This function uses a non-reentrant model
 13183 ;;
 13184                           
 13185                           	psect	text59
 13186  006214                     __ptext59:
 13187                           	opt stack 0
 13188  006214                     _CDCTxService:
 13189                           	opt stack 16
 13190                           
 13191                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 13192                           ;usb_device_cdc.c: 786: uint8_t i;
 13193                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 13194                           
 13195                           ; BSR set to: 0
 13196                           ;incstack = 0
 13197  006214  94A3               	bcf	4003,2,c	;volatile
 13198                           
 13199                           ;usb_device_cdc.c: 790: {};
 13200                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 13201  006216  0100               	movlb	0	; () banked
 13202  006218  5179               	movf	_CDCDataInHandle& (0+255),w,b
 13203  00621A  117A               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13204  00621C  E009               	bz	l1810
 13205                           
 13206                           ; BSR set to: 0
 13207  00621E  C079  FFD9         	movff	_CDCDataInHandle,fsr2l
 13208  006222  C07A  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13209  006226  0E01               	movlw	1
 13210  006228  AEDF               	btfss	indf2,7,c
 13211  00622A  0E00               	movlw	0
 13212  00622C  6FBF               	movwf	_CDCTxService$5576& (0+255),b
 13213  00622E  D001               	goto	L20
 13214  006230                     l1810:
 13215                           
 13216                           ; BSR set to: 0
 13217  006230  6BBF               	clrf	_CDCTxService$5576& (0+255),b
 13218  006232                     L20:
 13219  006232  6BC0               	clrf	(_CDCTxService$5576+1)& (0+255),b
 13220                           
 13221                           ; BSR set to: 0
 13222  006234  51BF               	movf	_CDCTxService$5576& (0+255),w,b
 13223  006236  11C0               	iorwf	(_CDCTxService$5576+1)& (0+255),w,b
 13224  006238  E002               	bz	l9586
 13225                           
 13226                           ; BSR set to: 0
 13227                           ;usb_device_cdc.c: 793: {
 13228                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 13229  00623A  84A3               	bsf	4003,2,c	;volatile
 13230                           
 13231                           ;usb_device_cdc.c: 795: return;
 13232  00623C  0012               	return	
 13233  00623E                     l9586:
 13234                           
 13235                           ; BSR set to: 0
 13236                           ;usb_device_cdc.c: 796: }
 13237                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 13238  00623E  0E03               	movlw	3
 13239  006240  1820               	xorwf	_cdc_trf_state,w,c
 13240  006242  E101               	bnz	l9590
 13241                           
 13242                           ; BSR set to: 0
 13243                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 13244  006244  6A20               	clrf	_cdc_trf_state,c
 13245  006246                     l9590:
 13246                           
 13247                           ; BSR set to: 0
 13248                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 13249  006246  5020               	movf	_cdc_trf_state,w,c
 13250  006248  E102               	bnz	l9594
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;usb_device_cdc.c: 810: {
 13254                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 13255  00624A  84A3               	bsf	4003,2,c	;volatile
 13256                           
 13257                           ;usb_device_cdc.c: 812: return;
 13258  00624C  0012               	return	
 13259  00624E                     l9594:
 13260                           
 13261                           ; BSR set to: 0
 13262                           ;usb_device_cdc.c: 813: }
 13263                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 13264  00624E  0E02               	movlw	2
 13265  006250  1820               	xorwf	_cdc_trf_state,w,c
 13266  006252  E110               	bnz	l9600
 13267                           
 13268                           ; BSR set to: 0
 13269                           ;usb_device_cdc.c: 819: {
 13270                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13271  006254  0E01               	movlw	1
 13272  006256  6FB8               	movwf	USBTransferOnePacket@dir& (0+255),b
 13273  006258  0E00               	movlw	0
 13274  00625A  6FB9               	movwf	USBTransferOnePacket@data& (0+255),b
 13275  00625C  6FBA               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13276  00625E  6FBB               	movwf	USBTransferOnePacket@len& (0+255),b
 13277  006260  0E02               	movlw	2
 13278  006262  EC12  F02B         	call	_USBTransferOnePacket
 13279  006266  C0B8  F079         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13280  00626A  C0B9  F07A         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 13284  00626E  0E03               	movlw	3
 13285  006270  6E20               	movwf	_cdc_trf_state,c
 13286                           
 13287                           ;usb_device_cdc.c: 823: }
 13288  006272  D04E               	goto	l9644
 13289  006274                     l9600:
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 13293  006274  0420               	decf	_cdc_trf_state,w,c
 13294  006276  E14C               	bnz	l9644
 13295                           
 13296                           ; BSR set to: 0
 13297                           ;usb_device_cdc.c: 825: {
 13298                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 13299  006278  0E40               	movlw	64
 13300  00627A  6599               	cpfsgt	_cdc_tx_len& (0+255),b
 13301  00627C  D002               	goto	l1819
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 13305  00627E  6FC2               	movwf	CDCTxService@byte_to_send& (0+255),b
 13306  006280  D002               	goto	l9606
 13307  006282                     l1819:
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;usb_device_cdc.c: 831: else
 13311                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 13312  006282  C099  F0C2         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13313  006286                     l9606:
 13314                           
 13315                           ; BSR set to: 0
 13316                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 13317  006286  51C2               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13318  006288  5F99               	subwf	_cdc_tx_len& (0+255),f,b
 13319                           
 13320                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13321  00628A  0E00               	movlw	0
 13322  00628C  6F70               	movwf	_pCDCDst& (0+255),b
 13323  00628E  0E05               	movlw	5
 13324  006290  6F71               	movwf	(_pCDCDst+1)& (0+255),b
 13325                           
 13326                           ; BSR set to: 0
 13327                           ;usb_device_cdc.c: 841: i = byte_to_send;
 13328  006292  C0C2  F0C1         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13329                           
 13330                           ; BSR set to: 0
 13331                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 13332  006296  5197               	movf	_cdc_mem_type& (0+255),w,b
 13333  006298  E010               	bz	l9622
 13334  00629A  D021               	goto	l9632
 13335  00629C                     l9614:
 13336                           
 13337                           ; BSR set to: 0
 13338                           ;usb_device_cdc.c: 845: {
 13339                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 13340  00629C  C073  FFD9         	movff	_pCDCSrc,fsr2l
 13341  0062A0  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 13342  0062A4  C070  FFE1         	movff	_pCDCDst,fsr1l
 13343  0062A8  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 13344  0062AC  CFDF FFE7          	movff	indf2,indf1
 13345                           
 13346                           ; BSR set to: 0
 13347                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 13348  0062B0  4B70               	infsnz	_pCDCDst& (0+255),f,b
 13349  0062B2  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 13350                           
 13351                           ; BSR set to: 0
 13352                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 13353  0062B4  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 13354  0062B6  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 13355                           
 13356                           ; BSR set to: 0
 13357                           ;usb_device_cdc.c: 849: i--;
 13358  0062B8  07C1               	decf	CDCTxService@i& (0+255),f,b
 13359  0062BA                     l9622:
 13360                           
 13361                           ; BSR set to: 0
 13362  0062BA  51C1               	movf	CDCTxService@i& (0+255),w,b
 13363  0062BC  E012               	bz	l9634
 13364  0062BE  D7EE               	goto	l9614
 13365  0062C0                     l9624:
 13366                           
 13367                           ; BSR set to: 0
 13368                           ;usb_device_cdc.c: 855: {
 13369                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 13370  0062C0  C073  FFD9         	movff	_pCDCSrc,fsr2l
 13371  0062C4  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 13372  0062C8  C070  FFE1         	movff	_pCDCDst,fsr1l
 13373  0062CC  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 13374  0062D0  CFDF FFE7          	movff	indf2,indf1
 13375                           
 13376                           ; BSR set to: 0
 13377                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 13378  0062D4  4B70               	infsnz	_pCDCDst& (0+255),f,b
 13379  0062D6  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 13380                           
 13381                           ; BSR set to: 0
 13382                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 13383  0062D8  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 13384  0062DA  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 13385                           
 13386                           ; BSR set to: 0
 13387                           ;usb_device_cdc.c: 859: i--;
 13388  0062DC  07C1               	decf	CDCTxService@i& (0+255),f,b
 13389  0062DE                     l9632:
 13390                           
 13391                           ; BSR set to: 0
 13392  0062DE  51C1               	movf	CDCTxService@i& (0+255),w,b
 13393  0062E0  E1EF               	bnz	l9624
 13394  0062E2                     l9634:
 13395                           
 13396                           ; BSR set to: 0
 13397                           ;usb_device_cdc.c: 860: }
 13398                           ;usb_device_cdc.c: 861: }
 13399                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 13400  0062E2  5199               	movf	_cdc_tx_len& (0+255),w,b
 13401  0062E4  E106               	bnz	l9642
 13402                           
 13403                           ; BSR set to: 0
 13404                           ;usb_device_cdc.c: 868: {
 13405                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 13406  0062E6  0E40               	movlw	64
 13407  0062E8  19C2               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13408                           
 13409                           ; BSR set to: 0
 13410                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 13411  0062EA  0E02               	movlw	2
 13412  0062EC  A4D8               	btfss	status,2,c
 13413                           
 13414                           ; BSR set to: 0
 13415                           ;usb_device_cdc.c: 871: else
 13416                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 13417  0062EE  0E03               	movlw	3
 13418  0062F0  6E20               	movwf	_cdc_trf_state,c
 13419  0062F2                     l9642:
 13420                           
 13421                           ; BSR set to: 0
 13422                           ;usb_device_cdc.c: 873: }
 13423                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13424  0062F2  0E01               	movlw	1
 13425  0062F4  6FB8               	movwf	USBTransferOnePacket@dir& (0+255),b
 13426  0062F6  0E00               	movlw	0
 13427  0062F8  6FB9               	movwf	USBTransferOnePacket@data& (0+255),b
 13428  0062FA  0E05               	movlw	5
 13429  0062FC  6FBA               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13430  0062FE  C0C2  F0BB         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13431  006302  0E02               	movlw	2
 13432  006304  EC12  F02B         	call	_USBTransferOnePacket
 13433  006308  C0B8  F079         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13434  00630C  C0B9  F07A         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13435  006310                     l9644:
 13436                           
 13437                           ; BSR set to: 0
 13438                           ;usb_device_cdc.c: 876: }
 13439                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 13440  006310  84A3               	bsf	4003,2,c	;volatile
 13441                           
 13442                           ; BSR set to: 0
 13443  006312  0012               	return		;funcret
 13444  006314                     __end_of_CDCTxService:
 13445                           	opt stack 0
 13446                           tblptru	equ	0xFF8
 13447                           tblptrh	equ	0xFF7
 13448                           tblptrl	equ	0xFF6
 13449                           tablat	equ	0xFF5
 13450                           prodh	equ	0xFF4
 13451                           prodl	equ	0xFF3
 13452                           intcon	equ	0xFF2
 13453                           postinc0	equ	0xFEE
 13454                           wreg	equ	0xFE8
 13455                           indf1	equ	0xFE7
 13456                           postdec1	equ	0xFE5
 13457                           fsr1h	equ	0xFE2
 13458                           fsr1l	equ	0xFE1
 13459                           indf2	equ	0xFDF
 13460                           postinc2	equ	0xFDE
 13461                           postdec2	equ	0xFDD
 13462                           fsr2h	equ	0xFDA
 13463                           fsr2l	equ	0xFD9
 13464                           status	equ	0xFD8
 13465                           
 13466 ;; *************** function _USBTransferOnePacket *****************
 13467 ;; Defined at:
 13468 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 13469 ;; Parameters:    Size  Location     Type
 13470 ;;  ep              1    wreg     unsigned char 
 13471 ;;  dir             1    0[BANK0 ] unsigned char 
 13472 ;;  data            2    1[BANK0 ] PTR unsigned char 
 13473 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 13474 ;;  len             1    3[BANK0 ] unsigned char 
 13475 ;; Auto vars:     Size  Location     Type
 13476 ;;  ep              1    4[BANK0 ] unsigned char 
 13477 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 13478 ;;		 -> BDT(48), NULL(0), 
 13479 ;; Return value:  Size  Location     Type
 13480 ;;                  2    0[BANK0 ] PTR void 
 13481 ;; Registers used:
 13482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13483 ;; Tracked objects:
 13484 ;;		On entry : F/0
 13485 ;;		On exit  : F/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13488 ;;      Params:         0       4       0       0       0       0       0       0       0
 13489 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13490 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13491 ;;      Totals:         0       7       0       0       0       0       0       0       0
 13492 ;;Total ram usage:        7 bytes
 13493 ;; Hardware stack levels used:    1
 13494 ;; Hardware stack levels required when called:   11
 13495 ;; This function calls:
 13496 ;;		Nothing
 13497 ;; This function is called by:
 13498 ;;		_getsUSBUSART
 13499 ;;		_CDCTxService
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           	psect	text60
 13504  005624                     __ptext60:
 13505                           	opt stack 0
 13506  005624                     _USBTransferOnePacket:
 13507                           	opt stack 16
 13508                           
 13509                           ; BSR set to: 0
 13510                           ;incstack = 0
 13511                           ;USBTransferOnePacket@ep stored from wreg
 13512  005624  6FBC               	movwf	USBTransferOnePacket@ep& (0+255),b
 13513                           
 13514                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 13515                           ;usb_device.c: 762: if(dir != 0)
 13516  005626  0100               	movlb	0	; () banked
 13517  005628  51B8               	movf	USBTransferOnePacket@dir& (0+255),w,b
 13518  00562A  E005               	bz	l8970
 13519                           
 13520                           ; BSR set to: 0
 13521                           ;usb_device.c: 763: {
 13522                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 13523  00562C  51BC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 13524  00562E  0D02               	mullw	2
 13525  005630  50F3               	movf	prodl,w,c
 13526  005632  0F0F               	addlw	low _pBDTEntryIn
 13527  005634  D004               	goto	L22
 13528  005636                     l8970:
 13529                           
 13530                           ; BSR set to: 0
 13531                           ;usb_device.c: 767: else
 13532                           ;usb_device.c: 768: {
 13533                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 13534  005636  51BC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 13535  005638  0D02               	mullw	2
 13536  00563A  50F3               	movf	prodl,w,c
 13537  00563C  0F60               	addlw	low _pBDTEntryOut
 13538  00563E                     L22:
 13539  00563E  6ED9               	movwf	fsr2l,c
 13540  005640  6ADA               	clrf	fsr2h,c
 13541  005642  CFDE F0BD          	movff	postinc2,USBTransferOnePacket@handle
 13542  005646  CFDD F0BE          	movff	postdec2,USBTransferOnePacket@handle+1
 13543                           
 13544                           ; BSR set to: 0
 13545                           ;usb_device.c: 771: }
 13546                           ;usb_device.c: 775: if(handle == 0)
 13547  00564A  51BD               	movf	USBTransferOnePacket@handle& (0+255),w,b
 13548  00564C  11BE               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 13549  00564E  E103               	bnz	l8976
 13550                           
 13551                           ; BSR set to: 0
 13552                           ;usb_device.c: 776: {
 13553                           ;usb_device.c: 777: return 0;
 13554  005650  6BB8               	clrf	?_USBTransferOnePacket& (0+255),b
 13555  005652  6BB9               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
 13556  005654  0012               	return	
 13557  005656                     l8976:
 13558                           
 13559                           ; BSR set to: 0
 13560                           ;usb_device.c: 778: }
 13561                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 13562  005656  EE20 F002          	lfsr	2,2
 13563  00565A  51BD               	movf	USBTransferOnePacket@handle& (0+255),w,b
 13564  00565C  26D9               	addwf	fsr2l,f,c
 13565  00565E  51BE               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 13566  005660  22DA               	addwfc	fsr2h,f,c
 13567  005662  C0B9  FFDE         	movff	USBTransferOnePacket@data,postinc2
 13568  005666  C0BA  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 13569                           
 13570                           ;usb_device.c: 781: handle->CNT = len;
 13571  00566A  EE20 F001          	lfsr	2,1
 13572  00566E  51BD               	movf	USBTransferOnePacket@handle& (0+255),w,b
 13573  005670  26D9               	addwf	fsr2l,f,c
 13574  005672  51BE               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 13575  005674  22DA               	addwfc	fsr2h,f,c
 13576  005676  C0BB  FFDF         	movff	USBTransferOnePacket@len,indf2
 13577                           
 13578                           ; BSR set to: 0
 13579                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 13580  00567A  C0BD  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 13581  00567E  C0BE  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 13582  005682  0E40               	movlw	64
 13583  005684  16DF               	andwf	indf2,f,c
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 13587  005686  C0BD  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 13588  00568A  C0BE  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 13589  00568E  0E00               	movlw	0
 13590  005690  86DB               	bsf	plusw2,3,c
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 13594  005692  C0BD  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 13595  005696  C0BE  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 13596  00569A  8EDB               	bsf	plusw2,7,c
 13597                           
 13598                           ; BSR set to: 0
 13599                           ;usb_device.c: 787: if(dir != 0)
 13600  00569C  51B8               	movf	USBTransferOnePacket@dir& (0+255),w,b
 13601  00569E  E005               	bz	l8988
 13602                           
 13603                           ; BSR set to: 0
 13604                           ;usb_device.c: 788: {
 13605                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 13606  0056A0  51BC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 13607  0056A2  0D02               	mullw	2
 13608  0056A4  50F3               	movf	prodl,w,c
 13609  0056A6  0F0F               	addlw	low _pBDTEntryIn
 13610  0056A8  D004               	goto	L23
 13611  0056AA                     l8988:
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;usb_device.c: 792: else
 13615                           ;usb_device.c: 793: {
 13616                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 13617  0056AA  51BC               	movf	USBTransferOnePacket@ep& (0+255),w,b
 13618  0056AC  0D02               	mullw	2
 13619  0056AE  50F3               	movf	prodl,w,c
 13620  0056B0  0F60               	addlw	low _pBDTEntryOut
 13621  0056B2                     L23:
 13622  0056B2  6ED9               	movwf	fsr2l,c
 13623  0056B4  6ADA               	clrf	fsr2h,c
 13624  0056B6  0E04               	movlw	4
 13625  0056B8  1ADF               	xorwf	indf2,f,c
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;usb_device.c: 796: }
 13629                           ;usb_device.c: 797: return (void*)handle;
 13630  0056BA  C0BD  F0B8         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 13631  0056BE  C0BE  F0B9         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 13632                           
 13633                           ; BSR set to: 0
 13634  0056C2  0C04               	retlw	4	;funcret
 13635  0056C4                     __end_of_USBTransferOnePacket:
 13636                           	opt stack 0
 13637                           tblptru	equ	0xFF8
 13638                           tblptrh	equ	0xFF7
 13639                           tblptrl	equ	0xFF6
 13640                           tablat	equ	0xFF5
 13641                           prodh	equ	0xFF4
 13642                           prodl	equ	0xFF3
 13643                           intcon	equ	0xFF2
 13644                           postinc0	equ	0xFEE
 13645                           wreg	equ	0xFE8
 13646                           indf1	equ	0xFE7
 13647                           postdec1	equ	0xFE5
 13648                           fsr1h	equ	0xFE2
 13649                           fsr1l	equ	0xFE1
 13650                           indf2	equ	0xFDF
 13651                           postinc2	equ	0xFDE
 13652                           postdec2	equ	0xFDD
 13653                           plusw2	equ	0xFDB
 13654                           fsr2h	equ	0xFDA
 13655                           fsr2l	equ	0xFD9
 13656                           status	equ	0xFD8
 13657                           
 13658 ;; *************** function _USBDeviceInit *****************
 13659 ;; Defined at:
 13660 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 13661 ;; Parameters:    Size  Location     Type
 13662 ;;		None
 13663 ;; Auto vars:     Size  Location     Type
 13664 ;;  i               1    8[BANK0 ] unsigned char 
 13665 ;; Return value:  Size  Location     Type
 13666 ;;                  1    wreg      void 
 13667 ;; Registers used:
 13668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13669 ;; Tracked objects:
 13670 ;;		On entry : F/0
 13671 ;;		On exit  : F/0
 13672 ;;		Unchanged: 0/0
 13673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13674 ;;      Params:         0       0       0       0       0       0       0       0       0
 13675 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13676 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13677 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13678 ;;Total ram usage:        1 bytes
 13679 ;; Hardware stack levels used:    1
 13680 ;; Hardware stack levels required when called:   12
 13681 ;; This function calls:
 13682 ;;		_memset
 13683 ;; This function is called by:
 13684 ;;		_main
 13685 ;; This function uses a non-reentrant model
 13686 ;;
 13687                           
 13688                           	psect	text61
 13689  005BDA                     __ptext61:
 13690                           	opt stack 0
 13691  005BDA                     _USBDeviceInit:
 13692                           	opt stack 18
 13693                           
 13694                           ; BSR set to: 0
 13695                           ;usb_device.c: 239: uint8_t i;
 13696                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 13697                           
 13698                           ; BSR set to: 0
 13699                           ;incstack = 0
 13700  005BDA  94A3               	bcf	4003,2,c	;volatile
 13701                           
 13702                           ;usb_device.c: 244: {UEIR = 0;};
 13703  005BDC  6A67               	clrf	3943,c	;volatile
 13704                           
 13705                           ;usb_device.c: 247: {UIR = 0;};
 13706  005BDE  6A65               	clrf	3941,c	;volatile
 13707                           
 13708                           ;usb_device.c: 250: UEP0 = 0;
 13709  005BE0  6A6A               	clrf	3946,c	;volatile
 13710                           
 13711                           ; BSR set to: 0
 13712                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 13713  005BE2  0E6B               	movlw	107
 13714  005BE4  6FB8               	movwf	memset@p1& (0+255),b
 13715  005BE6  0E0F               	movlw	15
 13716  005BE8  6FB9               	movwf	(memset@p1+1)& (0+255),b
 13717  005BEA  6BBB               	clrf	(memset@c+1)& (0+255),b
 13718  005BEC  6BBA               	clrf	memset@c& (0+255),b
 13719  005BEE  6BBD               	clrf	(memset@n+1)& (0+255),b
 13720  005BF0  0E02               	movlw	2
 13721  005BF2  6FBC               	movwf	memset@n& (0+255),b
 13722  005BF4  EC51  F023         	call	_memset	;wreg free
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13726  005BF8  0E16               	movlw	22
 13727  005BFA  6E62               	movwf	3938,c	;volatile
 13728                           
 13729                           ; BSR set to: 0
 13730  005BFC  0E9F               	movlw	159
 13731  005BFE  6E66               	movwf	3942,c	;volatile
 13732                           
 13733                           ; BSR set to: 0
 13734  005C00  0E7B               	movlw	123
 13735  005C02  6E64               	movwf	3940,c	;volatile
 13736                           
 13737                           ; BSR set to: 0
 13738                           ;usb_device.c: 257: ;
 13739                           ;usb_device.c: 260: ;
 13740                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 13741  005C04  6BC0               	clrf	USBDeviceInit@i& (0+255),b
 13742  005C06                     l10346:
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;usb_device.c: 264: {
 13746                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 13747  005C06  51C0               	movf	USBDeviceInit@i& (0+255),w,b
 13748  005C08  0D04               	mullw	4
 13749  005C0A  0E00               	movlw	0
 13750  005C0C  24F3               	addwf	prodl,w,c
 13751  005C0E  6ED9               	movwf	fsr2l,c
 13752  005C10  0E04               	movlw	4
 13753  005C12  20F4               	addwfc	prodh,w,c
 13754  005C14  6EDA               	movwf	fsr2h,c
 13755  005C16  6ADE               	clrf	postinc2,c
 13756  005C18  6ADE               	clrf	postinc2,c
 13757  005C1A  6ADE               	clrf	postinc2,c
 13758  005C1C  6ADD               	clrf	postdec2,c
 13759                           
 13760                           ; BSR set to: 0
 13761  005C1E  2BC0               	incf	USBDeviceInit@i& (0+255),f,b
 13762                           
 13763                           ; BSR set to: 0
 13764  005C20  0E0B               	movlw	11
 13765  005C22  65C0               	cpfsgt	USBDeviceInit@i& (0+255),b
 13766  005C24  D7F0               	goto	l10346
 13767                           
 13768                           ; BSR set to: 0
 13769                           ;usb_device.c: 266: }
 13770                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 13771  005C26  8C60               	bsf	3936,6,c	;volatile
 13772                           
 13773                           ;usb_device.c: 272: UADDR = 0x00;
 13774  005C28  6A63               	clrf	3939,c	;volatile
 13775                           
 13776                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 13777  005C2A  9860               	bcf	3936,4,c	;volatile
 13778                           
 13779                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 13780  005C2C  9C60               	bcf	3936,6,c	;volatile
 13781                           
 13782                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 13783  005C2E  D005               	goto	l10360
 13784  005C30                     l10352:
 13785                           
 13786                           ; BSR set to: 0
 13787                           ;usb_device.c: 282: {
 13788                           ;usb_device.c: 283: (UIR &= 0xF7);
 13789  005C30  9665               	bcf	3941,3,c	;volatile
 13790                           
 13791                           ; BSR set to: 0
 13792                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 13793  005C32  6A0C               	clrf	_inPipes+3,c	;volatile
 13794                           
 13795                           ; BSR set to: 0
 13796                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 13797  005C34  6A04               	clrf	_outPipes+3,c	;volatile
 13798                           
 13799                           ; BSR set to: 0
 13800                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 13801  005C36  6A05               	clrf	_outPipes+4,c	;volatile
 13802  005C38  6A06               	clrf	_outPipes+5,c	;volatile
 13803  005C3A                     l10360:
 13804                           
 13805                           ; BSR set to: 0
 13806  005C3A  B665               	btfsc	3941,3,c	;volatile
 13807  005C3C  D7F9               	goto	l10352
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;usb_device.c: 288: }
 13811                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 13812  005C3E  0E01               	movlw	1
 13813  005C40  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13814                           
 13815                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 13816  005C42  6F93               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13817                           
 13818                           ; BSR set to: 0
 13819                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 13820  005C44  6B8F               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13821                           
 13822                           ; BSR set to: 0
 13823                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 13824  005C46  6B90               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13825                           
 13826                           ; BSR set to: 0
 13827                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 13828  005C48  6B8E               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 13829                           
 13830                           ; BSR set to: 0
 13831                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 13832  005C4A  6BC0               	clrf	USBDeviceInit@i& (0+255),b
 13833  005C4C                     l10376:
 13834                           
 13835                           ; BSR set to: 0
 13836                           ;usb_device.c: 302: {
 13837                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 13838  005C4C  51C0               	movf	USBDeviceInit@i& (0+255),w,b
 13839  005C4E  0D02               	mullw	2
 13840  005C50  50F3               	movf	prodl,w,c
 13841  005C52  0F0F               	addlw	low _pBDTEntryIn
 13842  005C54  6ED9               	movwf	fsr2l,c
 13843  005C56  6ADA               	clrf	fsr2h,c
 13844  005C58  6ADE               	clrf	postinc2,c
 13845  005C5A  6ADD               	clrf	postdec2,c
 13846                           
 13847                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 13848  005C5C  51C0               	movf	USBDeviceInit@i& (0+255),w,b
 13849  005C5E  0D02               	mullw	2
 13850  005C60  50F3               	movf	prodl,w,c
 13851  005C62  0F60               	addlw	low _pBDTEntryOut
 13852  005C64  6ED9               	movwf	fsr2l,c
 13853  005C66  6ADA               	clrf	fsr2h,c
 13854  005C68  6ADE               	clrf	postinc2,c
 13855  005C6A  6ADD               	clrf	postdec2,c
 13856                           
 13857                           ; BSR set to: 0
 13858                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 13859  005C6C  51C0               	movf	USBDeviceInit@i& (0+255),w,b
 13860  005C6E  0F6A               	addlw	low _ep_data_in
 13861  005C70  6ED9               	movwf	fsr2l,c
 13862  005C72  6ADA               	clrf	fsr2h,c
 13863  005C74  6ADF               	clrf	indf2,c
 13864                           
 13865                           ; BSR set to: 0
 13866                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 13867  005C76  51C0               	movf	USBDeviceInit@i& (0+255),w,b
 13868  005C78  0F6D               	addlw	low _ep_data_out
 13869  005C7A  6ED9               	movwf	fsr2l,c
 13870  005C7C  6ADA               	clrf	fsr2h,c
 13871  005C7E  6ADF               	clrf	indf2,c
 13872                           
 13873                           ; BSR set to: 0
 13874  005C80  2BC0               	incf	USBDeviceInit@i& (0+255),f,b
 13875                           
 13876                           ; BSR set to: 0
 13877  005C82  0E02               	movlw	2
 13878  005C84  65C0               	cpfsgt	USBDeviceInit@i& (0+255),b
 13879  005C86  D7E2               	goto	l10376
 13880                           
 13881                           ; BSR set to: 0
 13882                           ;usb_device.c: 307: }
 13883                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13884  005C88  0E08               	movlw	8
 13885  005C8A  6E0F               	movwf	_pBDTEntryIn,c
 13886  005C8C  0E04               	movlw	4
 13887  005C8E  6E10               	movwf	_pBDTEntryIn+1,c
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 13891  005C90  0E16               	movlw	22
 13892  005C92  6E6A               	movwf	3946,c	;volatile
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13896  005C94  0E04               	movlw	4
 13897  005C96  0104               	movlb	4	; () banked
 13898  005C98  6F03               	movwf	3,b	;volatile
 13899  005C9A  0E30               	movlw	48
 13900  005C9C  6F02               	movwf	2,b	;volatile
 13901                           
 13902                           ; BSR set to: 4
 13903                           ;usb_device.c: 315: BDT[0].CNT = 8;
 13904  005C9E  0E08               	movlw	8
 13905  005CA0  6F01               	movwf	1,b	;volatile
 13906                           
 13907                           ; BSR set to: 4
 13908                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 13909  005CA2  0E04               	movlw	4
 13910  005CA4  6F00               	movwf	0,b	;volatile
 13911                           
 13912                           ; BSR set to: 4
 13913                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 13914  005CA6  8F00               	bsf	0,7,b	;volatile
 13915                           
 13916                           ; BSR set to: 4
 13917                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 13918  005CA8  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 13919                           
 13920                           ; BSR set to: 4
 13921                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 13922  005CAA  0100               	movlb	0	; () banked
 13923  005CAC  6B91               	clrf	_USBDeviceState& (0+255),b	;volatile
 13924                           
 13925                           ; BSR set to: 0
 13926  005CAE  0012               	return		;funcret
 13927  005CB0                     __end_of_USBDeviceInit:
 13928                           	opt stack 0
 13929                           tblptru	equ	0xFF8
 13930                           tblptrh	equ	0xFF7
 13931                           tblptrl	equ	0xFF6
 13932                           tablat	equ	0xFF5
 13933                           prodh	equ	0xFF4
 13934                           prodl	equ	0xFF3
 13935                           intcon	equ	0xFF2
 13936                           postinc0	equ	0xFEE
 13937                           wreg	equ	0xFE8
 13938                           indf1	equ	0xFE7
 13939                           postdec1	equ	0xFE5
 13940                           fsr1h	equ	0xFE2
 13941                           fsr1l	equ	0xFE1
 13942                           indf2	equ	0xFDF
 13943                           postinc2	equ	0xFDE
 13944                           postdec2	equ	0xFDD
 13945                           plusw2	equ	0xFDB
 13946                           fsr2h	equ	0xFDA
 13947                           fsr2l	equ	0xFD9
 13948                           status	equ	0xFD8
 13949                           
 13950 ;; *************** function _memset *****************
 13951 ;; Defined at:
 13952 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 13953 ;; Parameters:    Size  Location     Type
 13954 ;;  p1              2    0[BANK0 ] PTR void 
 13955 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13956 ;;  c               2    2[BANK0 ] int 
 13957 ;;  n               2    4[BANK0 ] unsigned int 
 13958 ;; Auto vars:     Size  Location     Type
 13959 ;;  p               2    6[BANK0 ] PTR unsigned char 
 13960 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13961 ;; Return value:  Size  Location     Type
 13962 ;;                  2    0[BANK0 ] PTR void 
 13963 ;; Registers used:
 13964 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13965 ;; Tracked objects:
 13966 ;;		On entry : F/0
 13967 ;;		On exit  : F/0
 13968 ;;		Unchanged: 0/0
 13969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13970 ;;      Params:         0       6       0       0       0       0       0       0       0
 13971 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13972 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13973 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13974 ;;Total ram usage:        8 bytes
 13975 ;; Hardware stack levels used:    1
 13976 ;; Hardware stack levels required when called:   11
 13977 ;; This function calls:
 13978 ;;		Nothing
 13979 ;; This function is called by:
 13980 ;;		_USBDeviceInit
 13981 ;; This function uses a non-reentrant model
 13982 ;;
 13983                           
 13984                           	psect	text62
 13985  0046A2                     __ptext62:
 13986                           	opt stack 0
 13987  0046A2                     _memset:
 13988                           	opt stack 18
 13989                           
 13990                           ; BSR set to: 0
 13991                           
 13992                           ; BSR set to: 0
 13993                           ;incstack = 0
 13994  0046A2  C0B8  F0BE         	movff	memset@p1,memset@p
 13995  0046A6  C0B9  F0BF         	movff	memset@p1+1,memset@p+1
 13996  0046AA  D008               	goto	l10312
 13997  0046AC                     l10308:
 13998                           
 13999                           ; BSR set to: 0
 14000  0046AC  C0BE  FFD9         	movff	memset@p,fsr2l
 14001  0046B0  C0BF  FFDA         	movff	memset@p+1,fsr2h
 14002  0046B4  C0BA  FFDF         	movff	memset@c,indf2
 14003                           
 14004                           ; BSR set to: 0
 14005  0046B8  4BBE               	infsnz	memset@p& (0+255),f,b
 14006  0046BA  2BBF               	incf	(memset@p+1)& (0+255),f,b
 14007  0046BC                     l10312:
 14008                           
 14009                           ; BSR set to: 0
 14010  0046BC  07BC               	decf	memset@n& (0+255),f,b
 14011  0046BE  A0D8               	btfss	status,0,c
 14012  0046C0  07BD               	decf	(memset@n+1)& (0+255),f,b
 14013  0046C2  29BC               	incf	memset@n& (0+255),w,b
 14014  0046C4  E1F3               	bnz	l10308
 14015  0046C6  29BD               	incf	(memset@n+1)& (0+255),w,b
 14016  0046C8  E1F1               	bnz	l10308
 14017                           
 14018                           ; BSR set to: 0
 14019  0046CA  0012               	return		;funcret
 14020  0046CC                     __end_of_memset:
 14021                           	opt stack 0
 14022                           tblptru	equ	0xFF8
 14023                           tblptrh	equ	0xFF7
 14024                           tblptrl	equ	0xFF6
 14025                           tablat	equ	0xFF5
 14026                           prodh	equ	0xFF4
 14027                           prodl	equ	0xFF3
 14028                           intcon	equ	0xFF2
 14029                           postinc0	equ	0xFEE
 14030                           wreg	equ	0xFE8
 14031                           indf1	equ	0xFE7
 14032                           postdec1	equ	0xFE5
 14033                           fsr1h	equ	0xFE2
 14034                           fsr1l	equ	0xFE1
 14035                           indf2	equ	0xFDF
 14036                           postinc2	equ	0xFDE
 14037                           postdec2	equ	0xFDD
 14038                           plusw2	equ	0xFDB
 14039                           fsr2h	equ	0xFDA
 14040                           fsr2l	equ	0xFD9
 14041                           status	equ	0xFD8
 14042                           
 14043 ;; *************** function _USBDeviceAttach *****************
 14044 ;; Defined at:
 14045 ;;		line 1046 in file "../Includes/Usb/framework/usb_device.c"
 14046 ;; Parameters:    Size  Location     Type
 14047 ;;		None
 14048 ;; Auto vars:     Size  Location     Type
 14049 ;;		None
 14050 ;; Return value:  Size  Location     Type
 14051 ;;                  1    wreg      void 
 14052 ;; Registers used:
 14053 ;;		wreg, status,2
 14054 ;; Tracked objects:
 14055 ;;		On entry : F/0
 14056 ;;		On exit  : F/0
 14057 ;;		Unchanged: 0/0
 14058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14059 ;;      Params:         0       0       0       0       0       0       0       0       0
 14060 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14061 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14062 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14063 ;;Total ram usage:        0 bytes
 14064 ;; Hardware stack levels used:    1
 14065 ;; Hardware stack levels required when called:   11
 14066 ;; This function calls:
 14067 ;;		Nothing
 14068 ;; This function is called by:
 14069 ;;		_main
 14070 ;; This function uses a non-reentrant model
 14071 ;;
 14072                           
 14073                           	psect	text63
 14074  004750                     __ptext63:
 14075                           	opt stack 0
 14076  004750                     _USBDeviceAttach:
 14077                           	opt stack 19
 14078                           
 14079                           ; BSR set to: 0
 14080                           ;usb_device.c: 1050: {
 14081                           ;usb_device.c: 1051: if(1 == 1)
 14082                           
 14083                           ; BSR set to: 0
 14084                           ;incstack = 0
 14085  004750  5191               	movf	_USBDeviceState& (0+255),w,b	;volatile
 14086  004752  A4D8               	btfss	status,2,c
 14087  004754  0012               	return	
 14088                           
 14089                           ; BSR set to: 0
 14090                           ;usb_device.c: 1052: {
 14091                           ;usb_device.c: 1054: UCON = 0;
 14092  004756  6A60               	clrf	3936,c	;volatile
 14093                           
 14094                           ;usb_device.c: 1057: UIE = 0;
 14095  004758  6A64               	clrf	3940,c	;volatile
 14096                           
 14097                           ; BSR set to: 0
 14098                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 14099  00475A  0E16               	movlw	22
 14100  00475C  6E62               	movwf	3938,c	;volatile
 14101  00475E  0E9F               	movlw	159
 14102  004760  6E66               	movwf	3942,c	;volatile
 14103  004762  0E7B               	movlw	123
 14104  004764  6E64               	movwf	3940,c	;volatile
 14105                           
 14106                           ; BSR set to: 0
 14107                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 14108  004766  8ED0               	bsf	4048,7,c	;volatile
 14109                           
 14110                           ; BSR set to: 0
 14111  004768  84A5               	bsf	4005,2,c	;volatile
 14112                           
 14113                           ; BSR set to: 0
 14114  00476A  84A3               	bsf	4003,2,c	;volatile
 14115                           
 14116                           ; BSR set to: 0
 14117  00476C  8EF2               	bsf	intcon,7,c	;volatile
 14118                           
 14119                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 14120  00476E  D001               	goto	l1515
 14121  004770                     l1516:
 14122                           
 14123                           ; BSR set to: 0
 14124  004770  8660               	bsf	3936,3,c	;volatile
 14125  004772                     l1515:
 14126                           
 14127                           ; BSR set to: 0
 14128  004772  A660               	btfss	3936,3,c	;volatile
 14129  004774  D7FD               	goto	l1516
 14130                           
 14131                           ; BSR set to: 0
 14132                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 14133  004776  0E01               	movlw	1
 14134  004778  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 14135                           
 14136                           ; BSR set to: 0
 14137  00477A  0C01               	retlw	1	;funcret
 14138  00477C                     __end_of_USBDeviceAttach:
 14139                           	opt stack 0
 14140                           tblptru	equ	0xFF8
 14141                           tblptrh	equ	0xFF7
 14142                           tblptrl	equ	0xFF6
 14143                           tablat	equ	0xFF5
 14144                           prodh	equ	0xFF4
 14145                           prodl	equ	0xFF3
 14146                           intcon	equ	0xFF2
 14147                           postinc0	equ	0xFEE
 14148                           wreg	equ	0xFE8
 14149                           indf1	equ	0xFE7
 14150                           postdec1	equ	0xFE5
 14151                           fsr1h	equ	0xFE2
 14152                           fsr1l	equ	0xFE1
 14153                           indf2	equ	0xFDF
 14154                           postinc2	equ	0xFDE
 14155                           postdec2	equ	0xFDD
 14156                           plusw2	equ	0xFDB
 14157                           fsr2h	equ	0xFDA
 14158                           fsr2l	equ	0xFD9
 14159                           status	equ	0xFD8
 14160                           
 14161 ;; *************** function _SYSTEM_Initialize *****************
 14162 ;; Defined at:
 14163 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 14164 ;; Parameters:    Size  Location     Type
 14165 ;;		None
 14166 ;; Auto vars:     Size  Location     Type
 14167 ;;		None
 14168 ;; Return value:  Size  Location     Type
 14169 ;;                  1    wreg      void 
 14170 ;; Registers used:
 14171 ;;		wreg, status,2, status,0, cstack
 14172 ;; Tracked objects:
 14173 ;;		On entry : 0/0
 14174 ;;		On exit  : 0/0
 14175 ;;		Unchanged: 0/0
 14176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14177 ;;      Params:         0       0       0       0       0       0       0       0       0
 14178 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14179 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14180 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14181 ;;Total ram usage:        0 bytes
 14182 ;; Hardware stack levels used:    1
 14183 ;; Hardware stack levels required when called:   13
 14184 ;; This function calls:
 14185 ;;		_ADC_Initialize
 14186 ;;		_CMP1_Initialize
 14187 ;;		_EUSART_Initialize
 14188 ;;		_OSCILLATOR_Initialize
 14189 ;;		_PIN_MANAGER_Initialize
 14190 ;;		_SPI_Initialize
 14191 ;;		_TMR1_Initialize
 14192 ;;		_TMR2_Initialize
 14193 ;; This function is called by:
 14194 ;;		_main
 14195 ;; This function uses a non-reentrant model
 14196 ;;
 14197                           
 14198                           	psect	text64
 14199  004506                     __ptext64:
 14200                           	opt stack 0
 14201  004506                     _SYSTEM_Initialize:
 14202                           	opt stack 17
 14203                           
 14204                           ;mcc.c: 95: OSCILLATOR_Initialize();
 14205                           
 14206                           ; BSR set to: 0
 14207                           ;incstack = 0
 14208  004506  EC14  F022         	call	_OSCILLATOR_Initialize	;wreg free
 14209                           
 14210                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 14211  00450A  EC88  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 14212                           
 14213                           ; BSR set to: 15
 14214                           ;mcc.c: 97: SPI_Initialize();
 14215  00450E  ECB2  F021         	call	_SPI_Initialize	;wreg free
 14216                           
 14217                           ; BSR set to: 15
 14218                           ;mcc.c: 98: TMR1_Initialize();
 14219  004512  EC92  F023         	call	_TMR1_Initialize	;wreg free
 14220                           
 14221                           ; BSR set to: 0
 14222                           ;mcc.c: 99: TMR2_Initialize();
 14223  004516  ECC0  F021         	call	_TMR2_Initialize	;wreg free
 14224                           
 14225                           ; BSR set to: 0
 14226                           ;mcc.c: 100: EUSART_Initialize();
 14227  00451A  EC7C  F023         	call	_EUSART_Initialize	;wreg free
 14228                           
 14229                           ;mcc.c: 101: ADC_Initialize();
 14230  00451E  EC09  F022         	call	_ADC_Initialize	;wreg free
 14231                           
 14232                           ;mcc.c: 102: CMP1_Initialize();
 14233  004522  EFD0  F021         	goto	_CMP1_Initialize	;wreg free
 14234  004526                     __end_of_SYSTEM_Initialize:
 14235                           	opt stack 0
 14236                           tblptru	equ	0xFF8
 14237                           tblptrh	equ	0xFF7
 14238                           tblptrl	equ	0xFF6
 14239                           tablat	equ	0xFF5
 14240                           prodh	equ	0xFF4
 14241                           prodl	equ	0xFF3
 14242                           intcon	equ	0xFF2
 14243                           postinc0	equ	0xFEE
 14244                           wreg	equ	0xFE8
 14245                           indf1	equ	0xFE7
 14246                           postdec1	equ	0xFE5
 14247                           fsr1h	equ	0xFE2
 14248                           fsr1l	equ	0xFE1
 14249                           indf2	equ	0xFDF
 14250                           postinc2	equ	0xFDE
 14251                           postdec2	equ	0xFDD
 14252                           plusw2	equ	0xFDB
 14253                           fsr2h	equ	0xFDA
 14254                           fsr2l	equ	0xFD9
 14255                           status	equ	0xFD8
 14256                           
 14257 ;; *************** function _TMR2_Initialize *****************
 14258 ;; Defined at:
 14259 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 14260 ;; Parameters:    Size  Location     Type
 14261 ;;		None
 14262 ;; Auto vars:     Size  Location     Type
 14263 ;;		None
 14264 ;; Return value:  Size  Location     Type
 14265 ;;                  1    wreg      void 
 14266 ;; Registers used:
 14267 ;;		wreg, status,2, cstack
 14268 ;; Tracked objects:
 14269 ;;		On entry : F/0
 14270 ;;		On exit  : F/0
 14271 ;;		Unchanged: F/0
 14272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14273 ;;      Params:         0       0       0       0       0       0       0       0       0
 14274 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14275 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14276 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14277 ;;Total ram usage:        0 bytes
 14278 ;; Hardware stack levels used:    1
 14279 ;; Hardware stack levels required when called:   12
 14280 ;; This function calls:
 14281 ;;		_TMR2_StartTimer
 14282 ;; This function is called by:
 14283 ;;		_SYSTEM_Initialize
 14284 ;; This function uses a non-reentrant model
 14285 ;;
 14286                           
 14287                           	psect	text65
 14288  004380                     __ptext65:
 14289                           	opt stack 0
 14290  004380                     _TMR2_Initialize:
 14291                           	opt stack 17
 14292                           
 14293                           ; BSR set to: 0
 14294                           ;tmr2.c: 62: T2CON = 0x7A;
 14295                           
 14296                           ;incstack = 0
 14297  004380  0E7A               	movlw	122
 14298  004382  6EBA               	movwf	4026,c	;volatile
 14299                           
 14300                           ;tmr2.c: 65: PR2 = 0x9B;
 14301  004384  0E9B               	movlw	155
 14302  004386  6EBB               	movwf	4027,c	;volatile
 14303                           
 14304                           ; BSR set to: 0
 14305                           ;tmr2.c: 68: TMR2 = 0x00;
 14306  004388  6ABC               	clrf	4028,c	;volatile
 14307                           
 14308                           ; BSR set to: 0
 14309                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 14310  00438A  929E               	bcf	3998,1,c	;volatile
 14311                           
 14312                           ; BSR set to: 0
 14313                           ;tmr2.c: 74: TMR2_StartTimer();
 14314  00438C  EF7E  F021         	goto	_TMR2_StartTimer	;wreg free
 14315  004390                     __end_of_TMR2_Initialize:
 14316                           	opt stack 0
 14317                           tblptru	equ	0xFF8
 14318                           tblptrh	equ	0xFF7
 14319                           tblptrl	equ	0xFF6
 14320                           tablat	equ	0xFF5
 14321                           prodh	equ	0xFF4
 14322                           prodl	equ	0xFF3
 14323                           intcon	equ	0xFF2
 14324                           postinc0	equ	0xFEE
 14325                           wreg	equ	0xFE8
 14326                           indf1	equ	0xFE7
 14327                           postdec1	equ	0xFE5
 14328                           fsr1h	equ	0xFE2
 14329                           fsr1l	equ	0xFE1
 14330                           indf2	equ	0xFDF
 14331                           postinc2	equ	0xFDE
 14332                           postdec2	equ	0xFDD
 14333                           plusw2	equ	0xFDB
 14334                           fsr2h	equ	0xFDA
 14335                           fsr2l	equ	0xFD9
 14336                           status	equ	0xFD8
 14337                           
 14338 ;; *************** function _TMR2_StartTimer *****************
 14339 ;; Defined at:
 14340 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 14341 ;; Parameters:    Size  Location     Type
 14342 ;;		None
 14343 ;; Auto vars:     Size  Location     Type
 14344 ;;		None
 14345 ;; Return value:  Size  Location     Type
 14346 ;;                  1    wreg      void 
 14347 ;; Registers used:
 14348 ;;		None
 14349 ;; Tracked objects:
 14350 ;;		On entry : F/0
 14351 ;;		On exit  : F/0
 14352 ;;		Unchanged: F/0
 14353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14354 ;;      Params:         0       0       0       0       0       0       0       0       0
 14355 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14356 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14357 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14358 ;;Total ram usage:        0 bytes
 14359 ;; Hardware stack levels used:    1
 14360 ;; Hardware stack levels required when called:   11
 14361 ;; This function calls:
 14362 ;;		Nothing
 14363 ;; This function is called by:
 14364 ;;		_TMR2_Initialize
 14365 ;; This function uses a non-reentrant model
 14366 ;;
 14367                           
 14368                           	psect	text66
 14369  0042FC                     __ptext66:
 14370                           	opt stack 0
 14371  0042FC                     _TMR2_StartTimer:
 14372                           	opt stack 17
 14373                           
 14374                           ; BSR set to: 0
 14375                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 14376                           
 14377                           ; BSR set to: 0
 14378                           ;incstack = 0
 14379  0042FC  84BA               	bsf	4026,2,c	;volatile
 14380                           
 14381                           ; BSR set to: 0
 14382  0042FE  0012               	return		;funcret
 14383  004300                     __end_of_TMR2_StartTimer:
 14384                           	opt stack 0
 14385                           tblptru	equ	0xFF8
 14386                           tblptrh	equ	0xFF7
 14387                           tblptrl	equ	0xFF6
 14388                           tablat	equ	0xFF5
 14389                           prodh	equ	0xFF4
 14390                           prodl	equ	0xFF3
 14391                           intcon	equ	0xFF2
 14392                           postinc0	equ	0xFEE
 14393                           wreg	equ	0xFE8
 14394                           indf1	equ	0xFE7
 14395                           postdec1	equ	0xFE5
 14396                           fsr1h	equ	0xFE2
 14397                           fsr1l	equ	0xFE1
 14398                           indf2	equ	0xFDF
 14399                           postinc2	equ	0xFDE
 14400                           postdec2	equ	0xFDD
 14401                           plusw2	equ	0xFDB
 14402                           fsr2h	equ	0xFDA
 14403                           fsr2l	equ	0xFD9
 14404                           status	equ	0xFD8
 14405                           
 14406 ;; *************** function _TMR1_Initialize *****************
 14407 ;; Defined at:
 14408 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 14409 ;; Parameters:    Size  Location     Type
 14410 ;;		None
 14411 ;; Auto vars:     Size  Location     Type
 14412 ;;		None
 14413 ;; Return value:  Size  Location     Type
 14414 ;;                  1    wreg      void 
 14415 ;; Registers used:
 14416 ;;		wreg, status,2, status,0, cstack
 14417 ;; Tracked objects:
 14418 ;;		On entry : F/F
 14419 ;;		On exit  : F/0
 14420 ;;		Unchanged: 0/0
 14421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14422 ;;      Params:         0       0       0       0       0       0       0       0       0
 14423 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14424 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14425 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14426 ;;Total ram usage:        2 bytes
 14427 ;; Hardware stack levels used:    1
 14428 ;; Hardware stack levels required when called:   12
 14429 ;; This function calls:
 14430 ;;		_TMR1_StartTimer
 14431 ;; This function is called by:
 14432 ;;		_SYSTEM_Initialize
 14433 ;; This function uses a non-reentrant model
 14434 ;;
 14435                           
 14436                           	psect	text67
 14437  004724                     __ptext67:
 14438                           	opt stack 0
 14439  004724                     _TMR1_Initialize:
 14440                           	opt stack 17
 14441                           
 14442                           ; BSR set to: 15
 14443                           ;tmr1.c: 68: T1CON = 0x00;
 14444                           
 14445                           ; BSR set to: 0
 14446                           ;incstack = 0
 14447  004724  6ACD               	clrf	4045,c	;volatile
 14448                           
 14449                           ;tmr1.c: 71: T1GCON = 0x00;
 14450  004726  6ACC               	clrf	4044,c	;volatile
 14451                           
 14452                           ; BSR set to: 15
 14453                           ;tmr1.c: 74: TMR1H = 0xD0;
 14454  004728  0ED0               	movlw	208
 14455  00472A  6ECF               	movwf	4047,c	;volatile
 14456                           
 14457                           ;tmr1.c: 77: TMR1L = 0x20;
 14458  00472C  0E20               	movlw	32
 14459  00472E  6ECE               	movwf	4046,c	;volatile
 14460                           
 14461                           ; BSR set to: 15
 14462                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 14463  004730  50CE               	movf	4046,w,c	;volatile
 14464  004732  CFCF F0B8          	movff	4047,??_TMR1_Initialize	;volatile
 14465  004736  0100               	movlb	0	; () banked
 14466  004738  6BB9               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 14467  00473A  C0B8  F0B9         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 14468  00473E  6BB8               	clrf	??_TMR1_Initialize& (0+255),b
 14469  004740  11B8               	iorwf	??_TMR1_Initialize& (0+255),w,b
 14470  004742  6F85               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 14471  004744  51B9               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 14472  004746  6F86               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 14473                           
 14474                           ; BSR set to: 0
 14475                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 14476  004748  909E               	bcf	3998,0,c	;volatile
 14477                           
 14478                           ; BSR set to: 0
 14479                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 14480  00474A  809D               	bsf	3997,0,c	;volatile
 14481                           
 14482                           ; BSR set to: 0
 14483                           ;tmr1.c: 89: TMR1_StartTimer();
 14484  00474C  EF7C  F021         	goto	_TMR1_StartTimer	;wreg free
 14485  004750                     __end_of_TMR1_Initialize:
 14486                           	opt stack 0
 14487                           tblptru	equ	0xFF8
 14488                           tblptrh	equ	0xFF7
 14489                           tblptrl	equ	0xFF6
 14490                           tablat	equ	0xFF5
 14491                           prodh	equ	0xFF4
 14492                           prodl	equ	0xFF3
 14493                           intcon	equ	0xFF2
 14494                           postinc0	equ	0xFEE
 14495                           wreg	equ	0xFE8
 14496                           indf1	equ	0xFE7
 14497                           postdec1	equ	0xFE5
 14498                           fsr1h	equ	0xFE2
 14499                           fsr1l	equ	0xFE1
 14500                           indf2	equ	0xFDF
 14501                           postinc2	equ	0xFDE
 14502                           postdec2	equ	0xFDD
 14503                           plusw2	equ	0xFDB
 14504                           fsr2h	equ	0xFDA
 14505                           fsr2l	equ	0xFD9
 14506                           status	equ	0xFD8
 14507                           
 14508 ;; *************** function _TMR1_StartTimer *****************
 14509 ;; Defined at:
 14510 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 14511 ;; Parameters:    Size  Location     Type
 14512 ;;		None
 14513 ;; Auto vars:     Size  Location     Type
 14514 ;;		None
 14515 ;; Return value:  Size  Location     Type
 14516 ;;                  1    wreg      void 
 14517 ;; Registers used:
 14518 ;;		None
 14519 ;; Tracked objects:
 14520 ;;		On entry : F/0
 14521 ;;		On exit  : F/0
 14522 ;;		Unchanged: F/0
 14523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14524 ;;      Params:         0       0       0       0       0       0       0       0       0
 14525 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14526 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14527 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14528 ;;Total ram usage:        0 bytes
 14529 ;; Hardware stack levels used:    1
 14530 ;; Hardware stack levels required when called:   11
 14531 ;; This function calls:
 14532 ;;		Nothing
 14533 ;; This function is called by:
 14534 ;;		_TMR1_Initialize
 14535 ;; This function uses a non-reentrant model
 14536 ;;
 14537                           
 14538                           	psect	text68
 14539  0042F8                     __ptext68:
 14540                           	opt stack 0
 14541  0042F8                     _TMR1_StartTimer:
 14542                           	opt stack 17
 14543                           
 14544                           ; BSR set to: 0
 14545                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 14546                           
 14547                           ; BSR set to: 0
 14548                           ;incstack = 0
 14549  0042F8  80CD               	bsf	4045,0,c	;volatile
 14550                           
 14551                           ; BSR set to: 0
 14552  0042FA  0012               	return		;funcret
 14553  0042FC                     __end_of_TMR1_StartTimer:
 14554                           	opt stack 0
 14555                           tblptru	equ	0xFF8
 14556                           tblptrh	equ	0xFF7
 14557                           tblptrl	equ	0xFF6
 14558                           tablat	equ	0xFF5
 14559                           prodh	equ	0xFF4
 14560                           prodl	equ	0xFF3
 14561                           intcon	equ	0xFF2
 14562                           postinc0	equ	0xFEE
 14563                           wreg	equ	0xFE8
 14564                           indf1	equ	0xFE7
 14565                           postdec1	equ	0xFE5
 14566                           fsr1h	equ	0xFE2
 14567                           fsr1l	equ	0xFE1
 14568                           indf2	equ	0xFDF
 14569                           postinc2	equ	0xFDE
 14570                           postdec2	equ	0xFDD
 14571                           plusw2	equ	0xFDB
 14572                           fsr2h	equ	0xFDA
 14573                           fsr2l	equ	0xFD9
 14574                           status	equ	0xFD8
 14575                           
 14576 ;; *************** function _SPI_Initialize *****************
 14577 ;; Defined at:
 14578 ;;		line 64 in file "../Includes/MccGenerated/spi.c"
 14579 ;; Parameters:    Size  Location     Type
 14580 ;;		None
 14581 ;; Auto vars:     Size  Location     Type
 14582 ;;		None
 14583 ;; Return value:  Size  Location     Type
 14584 ;;                  1    wreg      void 
 14585 ;; Registers used:
 14586 ;;		wreg, status,2
 14587 ;; Tracked objects:
 14588 ;;		On entry : F/F
 14589 ;;		On exit  : F/F
 14590 ;;		Unchanged: E/0
 14591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14592 ;;      Params:         0       0       0       0       0       0       0       0       0
 14593 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14594 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14595 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14596 ;;Total ram usage:        0 bytes
 14597 ;; Hardware stack levels used:    1
 14598 ;; Hardware stack levels required when called:   11
 14599 ;; This function calls:
 14600 ;;		Nothing
 14601 ;; This function is called by:
 14602 ;;		_SYSTEM_Initialize
 14603 ;; This function uses a non-reentrant model
 14604 ;;
 14605                           
 14606                           	psect	text69
 14607  004364                     __ptext69:
 14608                           	opt stack 0
 14609  004364                     _SPI_Initialize:
 14610                           	opt stack 18
 14611                           
 14612                           ; BSR set to: 15
 14613                           ;spi.c: 69: SSP1STAT = 0x00;
 14614                           
 14615                           ; BSR set to: 0
 14616                           ;incstack = 0
 14617  004364  6AC7               	clrf	4039,c	;volatile
 14618                           
 14619                           ; BSR set to: 15
 14620                           ;spi.c: 72: SSP1CON1 = 0x21;
 14621  004366  0E21               	movlw	33
 14622  004368  6EC6               	movwf	4038,c	;volatile
 14623                           
 14624                           ; BSR set to: 15
 14625                           ;spi.c: 75: SSP1ADD = 0x00;
 14626  00436A  6AC8               	clrf	4040,c	;volatile
 14627                           
 14628                           ; BSR set to: 15
 14629                           ;spi.c: 77: CKP = 1;
 14630  00436C  88C6               	bsf	4038,4,c	;volatile
 14631                           
 14632                           ; BSR set to: 15
 14633                           ;spi.c: 78: CKE = 0;
 14634  00436E  9CC7               	bcf	4039,6,c	;volatile
 14635                           
 14636                           ; BSR set to: 15
 14637  004370  0012               	return		;funcret
 14638  004372                     __end_of_SPI_Initialize:
 14639                           	opt stack 0
 14640                           tblptru	equ	0xFF8
 14641                           tblptrh	equ	0xFF7
 14642                           tblptrl	equ	0xFF6
 14643                           tablat	equ	0xFF5
 14644                           prodh	equ	0xFF4
 14645                           prodl	equ	0xFF3
 14646                           intcon	equ	0xFF2
 14647                           postinc0	equ	0xFEE
 14648                           wreg	equ	0xFE8
 14649                           indf1	equ	0xFE7
 14650                           postdec1	equ	0xFE5
 14651                           fsr1h	equ	0xFE2
 14652                           fsr1l	equ	0xFE1
 14653                           indf2	equ	0xFDF
 14654                           postinc2	equ	0xFDE
 14655                           postdec2	equ	0xFDD
 14656                           plusw2	equ	0xFDB
 14657                           fsr2h	equ	0xFDA
 14658                           fsr2l	equ	0xFD9
 14659                           status	equ	0xFD8
 14660                           
 14661 ;; *************** function _PIN_MANAGER_Initialize *****************
 14662 ;; Defined at:
 14663 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 14664 ;; Parameters:    Size  Location     Type
 14665 ;;		None
 14666 ;; Auto vars:     Size  Location     Type
 14667 ;;		None
 14668 ;; Return value:  Size  Location     Type
 14669 ;;                  1    wreg      void 
 14670 ;; Registers used:
 14671 ;;		None
 14672 ;; Tracked objects:
 14673 ;;		On entry : 0/0
 14674 ;;		On exit  : F/F
 14675 ;;		Unchanged: 0/0
 14676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14677 ;;      Params:         0       0       0       0       0       0       0       0       0
 14678 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14679 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14680 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14681 ;;Total ram usage:        0 bytes
 14682 ;; Hardware stack levels used:    1
 14683 ;; Hardware stack levels required when called:   11
 14684 ;; This function calls:
 14685 ;;		Nothing
 14686 ;; This function is called by:
 14687 ;;		_moteApp_GoToSleep
 14688 ;;		_SYSTEM_Initialize
 14689 ;; This function uses a non-reentrant model
 14690 ;;
 14691                           
 14692                           	psect	text70
 14693  004B10                     __ptext70:
 14694                           	opt stack 0
 14695  004B10                     _PIN_MANAGER_Initialize:
 14696                           	opt stack 16
 14697                           
 14698                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 14699                           
 14700                           ; BSR set to: 15
 14701                           ;incstack = 0
 14702  004B10  8092               	bsf	3986,0,c	;volatile
 14703                           
 14704                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 14705  004B12  8292               	bsf	3986,1,c	;volatile
 14706                           
 14707                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 14708  004B14  8492               	bsf	3986,2,c	;volatile
 14709                           
 14710                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 14711  004B16  8692               	bsf	3986,3,c	;volatile
 14712                           
 14713                           ;pin_manager.c: 59: TRISAbits.TRISA4 = 0;
 14714  004B18  9892               	bcf	3986,4,c	;volatile
 14715                           
 14716                           ;pin_manager.c: 60: TRISAbits.TRISA5 = 0;
 14717  004B1A  9A92               	bcf	3986,5,c	;volatile
 14718                           
 14719                           ;pin_manager.c: 61: TRISAbits.TRISA6 = 0;
 14720  004B1C  9C92               	bcf	3986,6,c	;volatile
 14721                           
 14722                           ;pin_manager.c: 62: TRISAbits.TRISA7 = 0;
 14723  004B1E  9E92               	bcf	3986,7,c	;volatile
 14724                           
 14725                           ;pin_manager.c: 64: TRISBbits.TRISB0 = 0;
 14726  004B20  9093               	bcf	3987,0,c	;volatile
 14727                           
 14728                           ;pin_manager.c: 65: TRISBbits.TRISB1 = 0;
 14729  004B22  9293               	bcf	3987,1,c	;volatile
 14730                           
 14731                           ;pin_manager.c: 66: TRISBbits.TRISB2 = 0;
 14732  004B24  9493               	bcf	3987,2,c	;volatile
 14733                           
 14734                           ;pin_manager.c: 67: TRISBbits.TRISB3 = 0;
 14735  004B26  9693               	bcf	3987,3,c	;volatile
 14736                           
 14737                           ;pin_manager.c: 68: TRISBbits.TRISB5 = 0;
 14738  004B28  9A93               	bcf	3987,5,c	;volatile
 14739                           
 14740                           ;pin_manager.c: 70: TRISCbits.TRISC0 = 1;
 14741  004B2A  8094               	bsf	3988,0,c	;volatile
 14742                           
 14743                           ;pin_manager.c: 71: TRISCbits.TRISC1 = 1;
 14744  004B2C  8294               	bsf	3988,1,c	;volatile
 14745                           
 14746                           ;pin_manager.c: 72: TRISCbits.TRISC2 = 1;
 14747  004B2E  8494               	bsf	3988,2,c	;volatile
 14748                           
 14749                           ;pin_manager.c: 73: TRISCbits.TRISC6 = 0;
 14750  004B30  9C94               	bcf	3988,6,c	;volatile
 14751                           
 14752                           ;pin_manager.c: 74: TRISCbits.TRISC7 = 1;
 14753  004B32  8E94               	bsf	3988,7,c	;volatile
 14754                           
 14755                           ;pin_manager.c: 75: TRISBbits.TRISB6 = 0;
 14756  004B34  9C93               	bcf	3987,6,c	;volatile
 14757                           
 14758                           ;pin_manager.c: 76: TRISBbits.TRISB7 = 1;
 14759  004B36  8E93               	bsf	3987,7,c	;volatile
 14760                           
 14761                           ;pin_manager.c: 79: LATAbits.LATA4 = 1;
 14762  004B38  8889               	bsf	3977,4,c	;volatile
 14763                           
 14764                           ;pin_manager.c: 80: LATAbits.LATA5 = 0;
 14765  004B3A  9A89               	bcf	3977,5,c	;volatile
 14766                           
 14767                           ;pin_manager.c: 81: LATAbits.LATA6 = 0;
 14768  004B3C  9C89               	bcf	3977,6,c	;volatile
 14769                           
 14770                           ;pin_manager.c: 82: LATAbits.LATA7 = 0;
 14771  004B3E  9E89               	bcf	3977,7,c	;volatile
 14772                           
 14773                           ;pin_manager.c: 84: LATBbits.LATB2 = 0;
 14774  004B40  948A               	bcf	3978,2,c	;volatile
 14775                           
 14776                           ;pin_manager.c: 85: LATBbits.LATB0 = 0;
 14777  004B42  908A               	bcf	3978,0,c	;volatile
 14778                           
 14779                           ;pin_manager.c: 86: LATBbits.LATB5 = 0;
 14780  004B44  9A8A               	bcf	3978,5,c	;volatile
 14781                           
 14782                           ;pin_manager.c: 87: LATBbits.LATB6 = 0;
 14783  004B46  9C8A               	bcf	3978,6,c	;volatile
 14784                           
 14785                           ;pin_manager.c: 88: LATBbits.LATB7 = 0;
 14786  004B48  9E8A               	bcf	3978,7,c	;volatile
 14787                           
 14788                           ;pin_manager.c: 90: LATCbits.LATC2 = 0;
 14789  004B4A  948B               	bcf	3979,2,c	;volatile
 14790                           
 14791                           ;pin_manager.c: 91: LATCbits.LATC6 = 0;
 14792  004B4C  9C8B               	bcf	3979,6,c	;volatile
 14793                           
 14794                           ;pin_manager.c: 93: ANSELAbits.ANSA0 = 0;
 14795  004B4E  010F               	movlb	15	; () banked
 14796  004B50  915B               	bcf	91,0,b	;volatile
 14797                           
 14798                           ;pin_manager.c: 94: ANSELAbits.ANSA1 = 1;
 14799  004B52  835B               	bsf	91,1,b	;volatile
 14800                           
 14801                           ;pin_manager.c: 95: ANSELAbits.ANSA2 = 1;
 14802  004B54  855B               	bsf	91,2,b	;volatile
 14803                           
 14804                           ;pin_manager.c: 96: ANSELAbits.ANSA3 = 1;
 14805  004B56  875B               	bsf	91,3,b	;volatile
 14806                           
 14807                           ;pin_manager.c: 97: ANSELCbits.ANSC7 = 0;
 14808  004B58  9F5D               	bcf	93,7,b	;volatile
 14809                           
 14810                           ;pin_manager.c: 98: ANSELCbits.ANSC6 = 0;
 14811  004B5A  9D5D               	bcf	93,6,b	;volatile
 14812                           
 14813                           ; BSR set to: 15
 14814  004B5C  0012               	return		;funcret
 14815  004B5E                     __end_of_PIN_MANAGER_Initialize:
 14816                           	opt stack 0
 14817                           tblptru	equ	0xFF8
 14818                           tblptrh	equ	0xFF7
 14819                           tblptrl	equ	0xFF6
 14820                           tablat	equ	0xFF5
 14821                           prodh	equ	0xFF4
 14822                           prodl	equ	0xFF3
 14823                           intcon	equ	0xFF2
 14824                           postinc0	equ	0xFEE
 14825                           wreg	equ	0xFE8
 14826                           indf1	equ	0xFE7
 14827                           postdec1	equ	0xFE5
 14828                           fsr1h	equ	0xFE2
 14829                           fsr1l	equ	0xFE1
 14830                           indf2	equ	0xFDF
 14831                           postinc2	equ	0xFDE
 14832                           postdec2	equ	0xFDD
 14833                           plusw2	equ	0xFDB
 14834                           fsr2h	equ	0xFDA
 14835                           fsr2l	equ	0xFD9
 14836                           status	equ	0xFD8
 14837                           
 14838 ;; *************** function _OSCILLATOR_Initialize *****************
 14839 ;; Defined at:
 14840 ;;		line 105 in file "../Includes/MccGenerated/mcc.c"
 14841 ;; Parameters:    Size  Location     Type
 14842 ;;		None
 14843 ;; Auto vars:     Size  Location     Type
 14844 ;;		None
 14845 ;; Return value:  Size  Location     Type
 14846 ;;                  1    wreg      void 
 14847 ;; Registers used:
 14848 ;;		wreg, status,2
 14849 ;; Tracked objects:
 14850 ;;		On entry : 0/0
 14851 ;;		On exit  : 0/0
 14852 ;;		Unchanged: 0/0
 14853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14854 ;;      Params:         0       0       0       0       0       0       0       0       0
 14855 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14856 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14857 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14858 ;;Total ram usage:        0 bytes
 14859 ;; Hardware stack levels used:    1
 14860 ;; Hardware stack levels required when called:   11
 14861 ;; This function calls:
 14862 ;;		Nothing
 14863 ;; This function is called by:
 14864 ;;		_SYSTEM_Initialize
 14865 ;; This function uses a non-reentrant model
 14866 ;;
 14867                           
 14868                           	psect	text71
 14869  004428                     __ptext71:
 14870                           	opt stack 0
 14871  004428                     _OSCILLATOR_Initialize:
 14872                           	opt stack 18
 14873                           
 14874                           ;mcc.c: 107: OSCTUNE = 0x80;
 14875                           
 14876                           ; BSR set to: 15
 14877                           ;incstack = 0
 14878  004428  0E80               	movlw	128
 14879  00442A  6E9B               	movwf	3995,c	;volatile
 14880                           
 14881                           ;mcc.c: 108: OSCCON = 0x70;
 14882  00442C  0E70               	movlw	112
 14883  00442E  6ED3               	movwf	4051,c	;volatile
 14884                           
 14885                           ;mcc.c: 109: OSCCON2 = 0x10;
 14886  004430  0E10               	movlw	16
 14887  004432  6ED2               	movwf	4050,c	;volatile
 14888  004434                     l1035:
 14889  004434  AED2               	btfss	4050,7,c	;volatile
 14890  004436  D7FE               	goto	l1035
 14891                           
 14892                           ;mcc.c: 111: ACTCON = 0x90;
 14893  004438  0E90               	movlw	144
 14894  00443A  6EB5               	movwf	4021,c	;volatile
 14895  00443C  0C90               	retlw	144	;funcret
 14896  00443E                     __end_of_OSCILLATOR_Initialize:
 14897                           	opt stack 0
 14898                           tblptru	equ	0xFF8
 14899                           tblptrh	equ	0xFF7
 14900                           tblptrl	equ	0xFF6
 14901                           tablat	equ	0xFF5
 14902                           prodh	equ	0xFF4
 14903                           prodl	equ	0xFF3
 14904                           intcon	equ	0xFF2
 14905                           postinc0	equ	0xFEE
 14906                           wreg	equ	0xFE8
 14907                           indf1	equ	0xFE7
 14908                           postdec1	equ	0xFE5
 14909                           fsr1h	equ	0xFE2
 14910                           fsr1l	equ	0xFE1
 14911                           indf2	equ	0xFDF
 14912                           postinc2	equ	0xFDE
 14913                           postdec2	equ	0xFDD
 14914                           plusw2	equ	0xFDB
 14915                           fsr2h	equ	0xFDA
 14916                           fsr2l	equ	0xFD9
 14917                           status	equ	0xFD8
 14918                           
 14919 ;; *************** function _EUSART_Initialize *****************
 14920 ;; Defined at:
 14921 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 14922 ;; Parameters:    Size  Location     Type
 14923 ;;		None
 14924 ;; Auto vars:     Size  Location     Type
 14925 ;;		None
 14926 ;; Return value:  Size  Location     Type
 14927 ;;                  1    wreg      void 
 14928 ;; Registers used:
 14929 ;;		wreg, status,2
 14930 ;; Tracked objects:
 14931 ;;		On entry : 0/F
 14932 ;;		On exit  : 0/0
 14933 ;;		Unchanged: 0/0
 14934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14935 ;;      Params:         0       0       0       0       0       0       0       0       0
 14936 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14937 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14938 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14939 ;;Total ram usage:        0 bytes
 14940 ;; Hardware stack levels used:    1
 14941 ;; Hardware stack levels required when called:   11
 14942 ;; This function calls:
 14943 ;;		Nothing
 14944 ;; This function is called by:
 14945 ;;		_moteApp_GoToSleep
 14946 ;;		_SYSTEM_Initialize
 14947 ;; This function uses a non-reentrant model
 14948 ;;
 14949                           
 14950                           	psect	text72
 14951  0046F8                     __ptext72:
 14952                           	opt stack 0
 14953  0046F8                     _EUSART_Initialize:
 14954                           	opt stack 16
 14955                           
 14956                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 14957                           
 14958                           ;incstack = 0
 14959  0046F8  9A9D               	bcf	3997,5,c	;volatile
 14960                           
 14961                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 14962  0046FA  989D               	bcf	3997,4,c	;volatile
 14963                           
 14964                           ;eusart.c: 85: BAUDCON = 0x48;
 14965  0046FC  0E48               	movlw	72
 14966  0046FE  6EB8               	movwf	4024,c	;volatile
 14967                           
 14968                           ;eusart.c: 88: RCSTA = 0x90;
 14969  004700  0E90               	movlw	144
 14970  004702  6EAB               	movwf	4011,c	;volatile
 14971                           
 14972                           ;eusart.c: 91: TXSTA = 0x26;
 14973  004704  0E26               	movlw	38
 14974  004706  6EAC               	movwf	4012,c	;volatile
 14975                           
 14976                           ;eusart.c: 95: SPBRG = 0x71;
 14977  004708  0E71               	movlw	113
 14978  00470A  6EAF               	movwf	4015,c	;volatile
 14979                           
 14980                           ;eusart.c: 100: SPBRGH = 0x02;
 14981  00470C  0E02               	movlw	2
 14982  00470E  6EB0               	movwf	4016,c	;volatile
 14983                           
 14984                           ;eusart.c: 103: eusartTxHead = 0;
 14985  004710  6A27               	clrf	_eusartTxHead,c
 14986                           
 14987                           ;eusart.c: 104: eusartTxTail = 0;
 14988  004712  6A28               	clrf	_eusartTxTail,c
 14989                           
 14990                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 14991  004714  0E40               	movlw	64
 14992  004716  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 14993                           
 14994                           ;eusart.c: 107: eusartRxHead = 0;
 14995  004718  6A24               	clrf	_eusartRxHead,c
 14996                           
 14997                           ;eusart.c: 108: eusartRxTail = 0;
 14998  00471A  6A25               	clrf	_eusartRxTail,c
 14999                           
 15000                           ;eusart.c: 109: eusartRxCount = 0;
 15001  00471C  6A23               	clrf	_eusartRxCount,c	;volatile
 15002                           
 15003                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 15004  00471E  8A9D               	bsf	3997,5,c	;volatile
 15005                           
 15006                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 15007  004720  88AB               	bsf	4011,4,c	;volatile
 15008  004722  0012               	return		;funcret
 15009  004724                     __end_of_EUSART_Initialize:
 15010                           	opt stack 0
 15011                           tblptru	equ	0xFF8
 15012                           tblptrh	equ	0xFF7
 15013                           tblptrl	equ	0xFF6
 15014                           tablat	equ	0xFF5
 15015                           prodh	equ	0xFF4
 15016                           prodl	equ	0xFF3
 15017                           intcon	equ	0xFF2
 15018                           postinc0	equ	0xFEE
 15019                           wreg	equ	0xFE8
 15020                           indf1	equ	0xFE7
 15021                           postdec1	equ	0xFE5
 15022                           fsr1h	equ	0xFE2
 15023                           fsr1l	equ	0xFE1
 15024                           indf2	equ	0xFDF
 15025                           postinc2	equ	0xFDE
 15026                           postdec2	equ	0xFDD
 15027                           plusw2	equ	0xFDB
 15028                           fsr2h	equ	0xFDA
 15029                           fsr2l	equ	0xFD9
 15030                           status	equ	0xFD8
 15031                           
 15032 ;; *************** function _CMP1_Initialize *****************
 15033 ;; Defined at:
 15034 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 15035 ;; Parameters:    Size  Location     Type
 15036 ;;		None
 15037 ;; Auto vars:     Size  Location     Type
 15038 ;;		None
 15039 ;; Return value:  Size  Location     Type
 15040 ;;                  1    wreg      void 
 15041 ;; Registers used:
 15042 ;;		wreg, status,2
 15043 ;; Tracked objects:
 15044 ;;		On entry : 0/0
 15045 ;;		On exit  : 0/0
 15046 ;;		Unchanged: 0/0
 15047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15048 ;;      Params:         0       0       0       0       0       0       0       0       0
 15049 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15050 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15051 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15052 ;;Total ram usage:        0 bytes
 15053 ;; Hardware stack levels used:    1
 15054 ;; Hardware stack levels required when called:   11
 15055 ;; This function calls:
 15056 ;;		Nothing
 15057 ;; This function is called by:
 15058 ;;		_SYSTEM_Initialize
 15059 ;; This function uses a non-reentrant model
 15060 ;;
 15061                           
 15062                           	psect	text73
 15063  0043A0                     __ptext73:
 15064                           	opt stack 0
 15065  0043A0                     _CMP1_Initialize:
 15066                           	opt stack 18
 15067                           
 15068                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 15069                           
 15070                           ;incstack = 0
 15071  0043A0  9CA0               	bcf	4000,6,c	;volatile
 15072                           
 15073                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 15074  0043A2  0E9C               	movlw	156
 15075  0043A4  6E98               	movwf	3992,c	;volatile
 15076                           
 15077                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 15078  0043A6  8A9A               	bsf	3994,5,c	;volatile
 15079                           
 15080                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 15081  0043A8  929A               	bcf	3994,1,c	;volatile
 15082                           
 15083                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 15084  0043AA  969A               	bcf	3994,3,c	;volatile
 15085                           
 15086                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 15087  0043AC  9CA1               	bcf	4001,6,c	;volatile
 15088                           
 15089                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 15090  0043AE  9CA0               	bcf	4000,6,c	;volatile
 15091  0043B0  0C9C               	retlw	156	;funcret
 15092  0043B2                     __end_of_CMP1_Initialize:
 15093                           	opt stack 0
 15094                           tblptru	equ	0xFF8
 15095                           tblptrh	equ	0xFF7
 15096                           tblptrl	equ	0xFF6
 15097                           tablat	equ	0xFF5
 15098                           prodh	equ	0xFF4
 15099                           prodl	equ	0xFF3
 15100                           intcon	equ	0xFF2
 15101                           postinc0	equ	0xFEE
 15102                           wreg	equ	0xFE8
 15103                           indf1	equ	0xFE7
 15104                           postdec1	equ	0xFE5
 15105                           fsr1h	equ	0xFE2
 15106                           fsr1l	equ	0xFE1
 15107                           indf2	equ	0xFDF
 15108                           postinc2	equ	0xFDE
 15109                           postdec2	equ	0xFDD
 15110                           plusw2	equ	0xFDB
 15111                           fsr2h	equ	0xFDA
 15112                           fsr2l	equ	0xFD9
 15113                           status	equ	0xFD8
 15114                           
 15115 ;; *************** function _ADC_Initialize *****************
 15116 ;; Defined at:
 15117 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 15118 ;; Parameters:    Size  Location     Type
 15119 ;;		None
 15120 ;; Auto vars:     Size  Location     Type
 15121 ;;		None
 15122 ;; Return value:  Size  Location     Type
 15123 ;;                  1    wreg      void 
 15124 ;; Registers used:
 15125 ;;		wreg, status,2
 15126 ;; Tracked objects:
 15127 ;;		On entry : 0/0
 15128 ;;		On exit  : 0/0
 15129 ;;		Unchanged: 0/0
 15130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15131 ;;      Params:         0       0       0       0       0       0       0       0       0
 15132 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15133 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15134 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15135 ;;Total ram usage:        0 bytes
 15136 ;; Hardware stack levels used:    1
 15137 ;; Hardware stack levels required when called:   11
 15138 ;; This function calls:
 15139 ;;		Nothing
 15140 ;; This function is called by:
 15141 ;;		_SYSTEM_Initialize
 15142 ;; This function uses a non-reentrant model
 15143 ;;
 15144                           
 15145                           	psect	text74
 15146  004412                     __ptext74:
 15147                           	opt stack 0
 15148  004412                     _ADC_Initialize:
 15149                           	opt stack 18
 15150                           
 15151                           ;adc.c: 68: VREFCON0 = 0b10100000;
 15152                           
 15153                           ;incstack = 0
 15154  004412  0EA0               	movlw	160
 15155  004414  6E7D               	movwf	3965,c	;volatile
 15156                           
 15157                           ;adc.c: 70: ADCON0 = 0x01;
 15158  004416  0E01               	movlw	1
 15159  004418  6EC2               	movwf	4034,c	;volatile
 15160                           
 15161                           ;adc.c: 73: ADCON1 = 0x08;
 15162  00441A  0E08               	movlw	8
 15163  00441C  6EC1               	movwf	4033,c	;volatile
 15164                           
 15165                           ;adc.c: 76: ADCON2 = 0b10001110;
 15166  00441E  0E8E               	movlw	142
 15167  004420  6EC0               	movwf	4032,c	;volatile
 15168                           
 15169                           ;adc.c: 79: ADRESL = 0x00;
 15170  004422  6AC3               	clrf	4035,c	;volatile
 15171                           
 15172                           ;adc.c: 82: ADRESH = 0x00;
 15173  004424  6AC4               	clrf	4036,c	;volatile
 15174  004426  0012               	return		;funcret
 15175  004428                     __end_of_ADC_Initialize:
 15176                           	opt stack 0
 15177                           tblptru	equ	0xFF8
 15178                           tblptrh	equ	0xFF7
 15179                           tblptrl	equ	0xFF6
 15180                           tablat	equ	0xFF5
 15181                           prodh	equ	0xFF4
 15182                           prodl	equ	0xFF3
 15183                           intcon	equ	0xFF2
 15184                           postinc0	equ	0xFEE
 15185                           wreg	equ	0xFE8
 15186                           indf1	equ	0xFE7
 15187                           postdec1	equ	0xFE5
 15188                           fsr1h	equ	0xFE2
 15189                           fsr1l	equ	0xFE1
 15190                           indf2	equ	0xFDF
 15191                           postinc2	equ	0xFDE
 15192                           postdec2	equ	0xFDD
 15193                           plusw2	equ	0xFDB
 15194                           fsr2h	equ	0xFDA
 15195                           fsr2l	equ	0xFD9
 15196                           status	equ	0xFD8
 15197                           
 15198 ;; *************** function _MOTEapp_handlerState *****************
 15199 ;; Defined at:
 15200 ;;		line 178 in file "../Includes/Board/MOTEapp.c"
 15201 ;; Parameters:    Size  Location     Type
 15202 ;;  state           1    wreg     enum E6355
 15203 ;; Auto vars:     Size  Location     Type
 15204 ;;  state           1    0[BANK0 ] enum E6355
 15205 ;; Return value:  Size  Location     Type
 15206 ;;                  1    wreg      void 
 15207 ;; Registers used:
 15208 ;;		wreg
 15209 ;; Tracked objects:
 15210 ;;		On entry : F/0
 15211 ;;		On exit  : 0/0
 15212 ;;		Unchanged: 0/0
 15213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15214 ;;      Params:         0       0       0       0       0       0       0       0       0
 15215 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15216 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15217 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15218 ;;Total ram usage:        1 bytes
 15219 ;; Hardware stack levels used:    1
 15220 ;; Hardware stack levels required when called:   11
 15221 ;; This function calls:
 15222 ;;		Nothing
 15223 ;; This function is called by:
 15224 ;;		_main
 15225 ;; This function uses a non-reentrant model
 15226 ;;
 15227                           
 15228                           	psect	text75
 15229  00431C                     __ptext75:
 15230                           	opt stack 0
 15231  00431C                     _MOTEapp_handlerState:
 15232                           	opt stack 19
 15233                           
 15234                           ;incstack = 0
 15235                           ;MOTEapp_handlerState@state stored from wreg
 15236  00431C  6FB8               	movwf	MOTEapp_handlerState@state& (0+255),b
 15237                           
 15238                           ;MOTEapp.c: 180: moteState = state;
 15239  00431E  C0B8  F0FD         	movff	MOTEapp_handlerState@state,_moteState
 15240  004322  0012               	return		;funcret
 15241  004324                     __end_of_MOTEapp_handlerState:
 15242                           	opt stack 0
 15243                           tblptru	equ	0xFF8
 15244                           tblptrh	equ	0xFF7
 15245                           tblptrl	equ	0xFF6
 15246                           tablat	equ	0xFF5
 15247                           prodh	equ	0xFF4
 15248                           prodl	equ	0xFF3
 15249                           intcon	equ	0xFF2
 15250                           postinc0	equ	0xFEE
 15251                           wreg	equ	0xFE8
 15252                           indf1	equ	0xFE7
 15253                           postdec1	equ	0xFE5
 15254                           fsr1h	equ	0xFE2
 15255                           fsr1l	equ	0xFE1
 15256                           indf2	equ	0xFDF
 15257                           postinc2	equ	0xFDE
 15258                           postdec2	equ	0xFDD
 15259                           plusw2	equ	0xFDB
 15260                           fsr2h	equ	0xFDA
 15261                           fsr2l	equ	0xFD9
 15262                           status	equ	0xFD8
 15263                           
 15264 ;; *************** function _DATAEE_ReadByte *****************
 15265 ;; Defined at:
 15266 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 15267 ;; Parameters:    Size  Location     Type
 15268 ;;  bAdd            1    wreg     unsigned char 
 15269 ;; Auto vars:     Size  Location     Type
 15270 ;;  bAdd            1    0[BANK0 ] unsigned char 
 15271 ;; Return value:  Size  Location     Type
 15272 ;;                  1    wreg      unsigned char 
 15273 ;; Registers used:
 15274 ;;		wreg, status,2
 15275 ;; Tracked objects:
 15276 ;;		On entry : F/0
 15277 ;;		On exit  : 0/0
 15278 ;;		Unchanged: 0/0
 15279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15280 ;;      Params:         0       0       0       0       0       0       0       0       0
 15281 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15282 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15283 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15284 ;;Total ram usage:        1 bytes
 15285 ;; Hardware stack levels used:    1
 15286 ;; Hardware stack levels required when called:   11
 15287 ;; This function calls:
 15288 ;;		Nothing
 15289 ;; This function is called by:
 15290 ;;		_main
 15291 ;; This function uses a non-reentrant model
 15292 ;;
 15293                           
 15294                           	psect	text76
 15295  0043D6                     __ptext76:
 15296                           	opt stack 0
 15297  0043D6                     _DATAEE_ReadByte:
 15298                           	opt stack 19
 15299                           
 15300                           ;incstack = 0
 15301                           ;DATAEE_ReadByte@bAdd stored from wreg
 15302  0043D6  6FB8               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 15303                           
 15304                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 15305  0043D8  C0B8  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 15306                           
 15307                           ;memory.c: 191: EECON1bits.CFGS = 0;
 15308  0043DC  9CA6               	bcf	4006,6,c	;volatile
 15309                           
 15310                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 15311  0043DE  9EA6               	bcf	4006,7,c	;volatile
 15312                           
 15313                           ;memory.c: 193: EECON1bits.RD = 1;
 15314  0043E0  80A6               	bsf	4006,0,c	;volatile
 15315                           
 15316                           ;memory.c: 194: __nop();
 15317  0043E2  F000               	nop	
 15318                           
 15319                           ;memory.c: 195: __nop();
 15320  0043E4  F000               	nop	
 15321                           
 15322                           ;memory.c: 197: return (EEDATA);
 15323  0043E6  50A8               	movf	4008,w,c	;volatile
 15324  0043E8  0012               	return		;funcret
 15325  0043EA                     __end_of_DATAEE_ReadByte:
 15326                           	opt stack 0
 15327                           tblptru	equ	0xFF8
 15328                           tblptrh	equ	0xFF7
 15329                           tblptrl	equ	0xFF6
 15330                           tablat	equ	0xFF5
 15331                           prodh	equ	0xFF4
 15332                           prodl	equ	0xFF3
 15333                           intcon	equ	0xFF2
 15334                           postinc0	equ	0xFEE
 15335                           wreg	equ	0xFE8
 15336                           indf1	equ	0xFE7
 15337                           postdec1	equ	0xFE5
 15338                           fsr1h	equ	0xFE2
 15339                           fsr1l	equ	0xFE1
 15340                           indf2	equ	0xFDF
 15341                           postinc2	equ	0xFDE
 15342                           postdec2	equ	0xFDD
 15343                           plusw2	equ	0xFDB
 15344                           fsr2h	equ	0xFDA
 15345                           fsr2l	equ	0xFD9
 15346                           status	equ	0xFD8
 15347                           
 15348 ;; *************** function _INTERRUPT_InterruptManager *****************
 15349 ;; Defined at:
 15350 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 15351 ;; Parameters:    Size  Location     Type
 15352 ;;		None
 15353 ;; Auto vars:     Size  Location     Type
 15354 ;;		None
 15355 ;; Return value:  Size  Location     Type
 15356 ;;                  1    wreg      void 
 15357 ;; Registers used:
 15358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15359 ;; Tracked objects:
 15360 ;;		On entry : 0/0
 15361 ;;		On exit  : 0/0
 15362 ;;		Unchanged: 0/0
 15363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15364 ;;      Params:         0       0       0       0       0       0       0       0       0
 15365 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15366 ;;      Temps:         12       0       0       0       0       0       0       0       0
 15367 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15368 ;;Total ram usage:       12 bytes
 15369 ;; Hardware stack levels used:    1
 15370 ;; Hardware stack levels required when called:   10
 15371 ;; This function calls:
 15372 ;;		_CMP1_ISR
 15373 ;;		_EUSART_Receive_ISR
 15374 ;;		_EUSART_Transmit_ISR
 15375 ;;		_TMR1_ISR
 15376 ;;		_TMRapp_Tick
 15377 ;;		_USBDeviceTasks
 15378 ;;		_USBapp_setrxByteFlag
 15379 ;; This function is called by:
 15380 ;;		Interrupt level 2
 15381 ;; This function uses a non-reentrant model
 15382 ;;
 15383                           
 15384                           	psect	intcode
 15385  001008                     __pintcode:
 15386                           	opt stack 0
 15387  001008                     _INTERRUPT_InterruptManager:
 15388                           	opt stack 10
 15389                           
 15390                           ;incstack = 0
 15391  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15392  00100A  CFFA F04F          	movff	pclath,??_INTERRUPT_InterruptManager
 15393  00100E  CFFB F050          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 15394  001012  CFE1 F051          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 15395  001016  CFE2 F052          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 15396  00101A  CFD9 F053          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 15397  00101E  CFDA F054          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 15398  001022  CFF3 F055          	movff	prodl,??_INTERRUPT_InterruptManager+6
 15399  001026  CFF4 F056          	movff	prodh,??_INTERRUPT_InterruptManager+7
 15400  00102A  CFF6 F057          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 15401  00102E  CFF7 F058          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 15402  001032  CFF8 F059          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 15403  001036  CFF5 F05A          	movff	tablat,??_INTERRUPT_InterruptManager+11
 15404                           
 15405                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 15406  00103A  B09D               	btfsc	3997,0,c	;volatile
 15407  00103C  A09E               	btfss	3998,0,c	;volatile
 15408  00103E  D005               	goto	i2l995
 15409                           
 15410                           ;interrupt_manager.c: 59: {
 15411                           ;interrupt_manager.c: 60: TMR1_ISR();
 15412  001040  EC9A  F021         	call	_TMR1_ISR	;wreg free
 15413                           
 15414                           ;interrupt_manager.c: 62: TMRapp_Tick();
 15415  001044  EC84  F021         	call	_TMRapp_Tick	;wreg free
 15416                           
 15417                           ;interrupt_manager.c: 63: }
 15418  001048  D016               	goto	i2l1003
 15419  00104A                     i2l995:
 15420                           
 15421                           ;interrupt_manager.c: 64: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 15422  00104A  BA9D               	btfsc	3997,5,c	;volatile
 15423  00104C  AA9E               	btfss	3998,5,c	;volatile
 15424  00104E  D005               	goto	i2l997
 15425                           
 15426                           ;interrupt_manager.c: 65: {
 15427                           ;interrupt_manager.c: 66: USBapp_setrxByteFlag();
 15428  001050  EC87  F021         	call	_USBapp_setrxByteFlag	;wreg free
 15429                           
 15430                           ;interrupt_manager.c: 67: EUSART_Receive_ISR();
 15431  001054  ECEC  F022         	call	_EUSART_Receive_ISR	;wreg free
 15432                           
 15433                           ;interrupt_manager.c: 68: }
 15434  001058  D00E               	goto	i2l1003
 15435  00105A                     i2l997:
 15436                           
 15437                           ;interrupt_manager.c: 69: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 15438  00105A  B89D               	btfsc	3997,4,c	;volatile
 15439  00105C  A89E               	btfss	3998,4,c	;volatile
 15440  00105E  D003               	goto	i2l999
 15441                           
 15442                           ;interrupt_manager.c: 70: {
 15443                           ;interrupt_manager.c: 71: EUSART_Transmit_ISR();
 15444  001060  EC00  F023         	call	_EUSART_Transmit_ISR	;wreg free
 15445                           
 15446                           ;interrupt_manager.c: 72: }
 15447  001064  D008               	goto	i2l1003
 15448  001066                     i2l999:
 15449                           
 15450                           ;interrupt_manager.c: 73: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 15451  001066  BCA0               	btfsc	4000,6,c	;volatile
 15452  001068  ACA1               	btfss	4001,6,c	;volatile
 15453  00106A  D003               	goto	i2l8598
 15454                           
 15455                           ;interrupt_manager.c: 74: {
 15456                           ;interrupt_manager.c: 75: CMP1_ISR();
 15457  00106C  EC7A  F021         	call	_CMP1_ISR	;wreg free
 15458                           
 15459                           ;interrupt_manager.c: 76: }
 15460  001070  D002               	goto	i2l1003
 15461  001072                     i2l8598:
 15462                           
 15463                           ;interrupt_manager.c: 77: else
 15464                           ;interrupt_manager.c: 78: {
 15465                           ;interrupt_manager.c: 80: USBDeviceTasks();
 15466  001072  EC8B  F030         	call	_USBDeviceTasks	;wreg free
 15467  001076                     i2l1003:
 15468  001076  C05A  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 15469  00107A  C059  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 15470  00107E  C058  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 15471  001082  C057  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 15472  001086  C056  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 15473  00108A  C055  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 15474  00108E  C054  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 15475  001092  C053  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 15476  001096  C052  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 15477  00109A  C051  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 15478  00109E  C050  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 15479  0010A2  C04F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 15480  0010A6  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15481  0010A8  0011               	retfie		f
 15482  0010AA                     __end_of_INTERRUPT_InterruptManager:
 15483                           	opt stack 0
 15484                           pclatu	equ	0xFFB
 15485                           pclath	equ	0xFFA
 15486                           tblptru	equ	0xFF8
 15487                           tblptrh	equ	0xFF7
 15488                           tblptrl	equ	0xFF6
 15489                           tablat	equ	0xFF5
 15490                           prodh	equ	0xFF4
 15491                           prodl	equ	0xFF3
 15492                           intcon	equ	0xFF2
 15493                           postinc0	equ	0xFEE
 15494                           wreg	equ	0xFE8
 15495                           indf1	equ	0xFE7
 15496                           postdec1	equ	0xFE5
 15497                           fsr1h	equ	0xFE2
 15498                           fsr1l	equ	0xFE1
 15499                           indf2	equ	0xFDF
 15500                           postinc2	equ	0xFDE
 15501                           postdec2	equ	0xFDD
 15502                           plusw2	equ	0xFDB
 15503                           fsr2h	equ	0xFDA
 15504                           fsr2l	equ	0xFD9
 15505                           status	equ	0xFD8
 15506                           
 15507 ;; *************** function _USBapp_setrxByteFlag *****************
 15508 ;; Defined at:
 15509 ;;		line 226 in file "../Includes/Board/USBapp.c"
 15510 ;; Parameters:    Size  Location     Type
 15511 ;;		None
 15512 ;; Auto vars:     Size  Location     Type
 15513 ;;		None
 15514 ;; Return value:  Size  Location     Type
 15515 ;;                  1    wreg      void 
 15516 ;; Registers used:
 15517 ;;		wreg, status,2
 15518 ;; Tracked objects:
 15519 ;;		On entry : 0/0
 15520 ;;		On exit  : 0/0
 15521 ;;		Unchanged: 0/0
 15522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15523 ;;      Params:         0       0       0       0       0       0       0       0       0
 15524 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15525 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15526 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15527 ;;Total ram usage:        0 bytes
 15528 ;; Hardware stack levels used:    1
 15529 ;; This function calls:
 15530 ;;		Nothing
 15531 ;; This function is called by:
 15532 ;;		_INTERRUPT_InterruptManager
 15533 ;; This function uses a non-reentrant model
 15534 ;;
 15535                           
 15536                           	psect	text78
 15537  00430E                     __ptext78:
 15538                           	opt stack 0
 15539  00430E                     _USBapp_setrxByteFlag:
 15540                           	opt stack 19
 15541                           
 15542                           ;USBapp.c: 228: rxByteFlag = 1;
 15543                           
 15544                           ;incstack = 0
 15545  00430E  0E01               	movlw	1
 15546  004310  6E2A               	movwf	_rxByteFlag,c	;volatile
 15547  004312  0C01               	retlw	1	;funcret
 15548  004314                     __end_of_USBapp_setrxByteFlag:
 15549                           	opt stack 0
 15550                           pclatu	equ	0xFFB
 15551                           pclath	equ	0xFFA
 15552                           tblptru	equ	0xFF8
 15553                           tblptrh	equ	0xFF7
 15554                           tblptrl	equ	0xFF6
 15555                           tablat	equ	0xFF5
 15556                           prodh	equ	0xFF4
 15557                           prodl	equ	0xFF3
 15558                           intcon	equ	0xFF2
 15559                           postinc0	equ	0xFEE
 15560                           wreg	equ	0xFE8
 15561                           indf1	equ	0xFE7
 15562                           postdec1	equ	0xFE5
 15563                           fsr1h	equ	0xFE2
 15564                           fsr1l	equ	0xFE1
 15565                           indf2	equ	0xFDF
 15566                           postinc2	equ	0xFDE
 15567                           postdec2	equ	0xFDD
 15568                           plusw2	equ	0xFDB
 15569                           fsr2h	equ	0xFDA
 15570                           fsr2l	equ	0xFD9
 15571                           status	equ	0xFD8
 15572                           
 15573 ;; *************** function _USBDeviceTasks *****************
 15574 ;; Defined at:
 15575 ;;		line 428 in file "../Includes/Usb/framework/usb_device.c"
 15576 ;; Parameters:    Size  Location     Type
 15577 ;;		None
 15578 ;; Auto vars:     Size  Location     Type
 15579 ;;  i               1   32[COMRAM] unsigned char 
 15580 ;; Return value:  Size  Location     Type
 15581 ;;                  1    wreg      void 
 15582 ;; Registers used:
 15583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15584 ;; Tracked objects:
 15585 ;;		On entry : 0/0
 15586 ;;		On exit  : 0/0
 15587 ;;		Unchanged: 0/0
 15588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15589 ;;      Params:         0       0       0       0       0       0       0       0       0
 15590 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15591 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15592 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15593 ;;Total ram usage:        1 bytes
 15594 ;; Hardware stack levels used:    1
 15595 ;; Hardware stack levels required when called:    9
 15596 ;; This function calls:
 15597 ;;		_USBCtrlEPAllowStatusStage
 15598 ;;		_USBCtrlEPService
 15599 ;;		_USBStallHandler
 15600 ;;		_USBSuspend
 15601 ;;		_USBWakeFromSuspend
 15602 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15603 ;;		i2_USBDeviceInit
 15604 ;; This function is called by:
 15605 ;;		_INTERRUPT_InterruptManager
 15606 ;; This function uses a non-reentrant model
 15607 ;;
 15608                           
 15609                           	psect	text79
 15610  006116                     __ptext79:
 15611                           	opt stack 0
 15612  006116                     _USBDeviceTasks:
 15613                           	opt stack 10
 15614                           
 15615                           ;usb_device.c: 430: uint8_t i;
 15616                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 15617                           
 15618                           ;incstack = 0
 15619  006116  0100               	movlb	0	; () banked
 15620  006118  0591               	decf	_USBDeviceState& (0+255),w,b	;volatile
 15621  00611A  E107               	bnz	i2l8436
 15622                           
 15623                           ; BSR set to: 0
 15624                           ;usb_device.c: 433: {
 15625                           ;usb_device.c: 443: if(!UCONbits.SE0)
 15626  00611C  BA60               	btfsc	3936,5,c	;volatile
 15627  00611E  D005               	goto	i2l8436
 15628                           
 15629                           ; BSR set to: 0
 15630                           ;usb_device.c: 444: {
 15631                           ;usb_device.c: 445: {UIR = 0;};
 15632  006120  6A65               	clrf	3941,c	;volatile
 15633                           
 15634                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 15635  006122  8064               	bsf	3940,0,c	;volatile
 15636                           
 15637                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 15638  006124  8864               	bsf	3940,4,c	;volatile
 15639                           
 15640                           ; BSR set to: 0
 15641                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 15642  006126  0E02               	movlw	2
 15643  006128  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 15644  00612A                     i2l8436:
 15645                           
 15646                           ; BSR set to: 0
 15647                           ;usb_device.c: 449: }
 15648                           ;usb_device.c: 450: }
 15649                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 15650  00612A  B465               	btfsc	3941,2,c	;volatile
 15651                           
 15652                           ; BSR set to: 0
 15653  00612C  A464               	btfss	3940,2,c	;volatile
 15654  00612E  D003               	goto	i2l8444
 15655                           
 15656                           ; BSR set to: 0
 15657                           ;usb_device.c: 455: {
 15658                           ;usb_device.c: 456: (UIR &= 0xFB);
 15659  006130  9465               	bcf	3941,2,c	;volatile
 15660                           
 15661                           ; BSR set to: 0
 15662                           ;usb_device.c: 457: USBWakeFromSuspend();
 15663  006132  EC93  F022         	call	_USBWakeFromSuspend	;wreg free
 15664  006136                     i2l8444:
 15665                           
 15666                           ;usb_device.c: 458: }
 15667                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 15668  006136  A260               	btfss	3936,1,c	;volatile
 15669  006138  D002               	goto	i2l1466
 15670                           
 15671                           ;usb_device.c: 464: {
 15672                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 15673  00613A  94A4               	bcf	4004,2,c	;volatile
 15674                           
 15675                           ;usb_device.c: 466: return;
 15676  00613C  0012               	return	
 15677  00613E                     i2l1466:
 15678                           
 15679                           ;usb_device.c: 467: }
 15680                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 15681  00613E  B065               	btfsc	3941,0,c	;volatile
 15682  006140  A064               	btfss	3940,0,c	;volatile
 15683  006142  D006               	goto	i2l8458
 15684                           
 15685                           ;usb_device.c: 480: {
 15686                           ;usb_device.c: 481: USBDeviceInit();
 15687  006144  EC58  F02E         	call	i2_USBDeviceInit	;wreg free
 15688                           
 15689                           ; BSR set to: 0
 15690                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 15691  006148  84A3               	bsf	4003,2,c	;volatile
 15692                           
 15693                           ; BSR set to: 0
 15694                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 15695  00614A  0E04               	movlw	4
 15696  00614C  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 15697                           
 15698                           ; BSR set to: 0
 15699                           ;usb_device.c: 489: (UIR &= 0xFE);
 15700  00614E  9065               	bcf	3941,0,c	;volatile
 15701  006150                     i2l8458:
 15702                           
 15703                           ;usb_device.c: 490: }
 15704                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 15705  006150  B865               	btfsc	3941,4,c	;volatile
 15706  006152  A864               	btfss	3940,4,c	;volatile
 15707  006154  D003               	goto	i2l8466
 15708                           
 15709                           ;usb_device.c: 496: {
 15710                           ;usb_device.c: 497: USBSuspend();
 15711  006156  EC47  F022         	call	_USBSuspend	;wreg free
 15712                           
 15713                           ;usb_device.c: 498: (UIR &= 0xEF);
 15714  00615A  9865               	bcf	3941,4,c	;volatile
 15715  00615C                     i2l8466:
 15716                           
 15717                           ;usb_device.c: 499: }
 15718                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 15719  00615C  AC65               	btfss	3941,6,c	;volatile
 15720  00615E  D014               	goto	i2l8482
 15721                           
 15722                           ;usb_device.c: 502: {
 15723                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 15724  006160  AC64               	btfss	3940,6,c	;volatile
 15725  006162  D00A               	goto	i2l8472
 15726                           
 15727                           ;usb_device.c: 504: {
 15728                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 15729  006164  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15730  006166  0E73               	movlw	115
 15731  006168  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15732  00616A  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15733  00616C  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15734  00616E  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15735  006170  0E01               	movlw	1
 15736  006172  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15737  006174  ECF3  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15738  006178                     i2l8472:
 15739                           
 15740                           ;usb_device.c: 506: }
 15741                           ;usb_device.c: 507: (UIR &= 0xBF);
 15742  006178  9C65               	bcf	3941,6,c	;volatile
 15743                           
 15744                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 15745  00617A  501F               	movf	_USBStatusStageTimeoutCounter,w,c
 15746  00617C  E001               	bz	i2l8478
 15747                           
 15748                           ;usb_device.c: 513: {
 15749                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 15750  00617E  061F               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 15751  006180                     i2l8478:
 15752                           
 15753                           ;usb_device.c: 515: }
 15754                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 15755  006180  501F               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 15756  006182  E102               	bnz	i2l8482
 15757                           
 15758                           ;usb_device.c: 522: {
 15759                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 15760  006184  ECC7  F02C         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15761  006188                     i2l8482:
 15762                           
 15763                           ;usb_device.c: 524: }
 15764                           ;usb_device.c: 525: }
 15765                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 15766  006188  BA65               	btfsc	3941,5,c	;volatile
 15767  00618A  AA64               	btfss	3940,5,c	;volatile
 15768  00618C  D002               	goto	i2l8488
 15769                           
 15770                           ;usb_device.c: 528: {
 15771                           ;usb_device.c: 529: USBStallHandler();
 15772  00618E  EC91  F024         	call	_USBStallHandler	;wreg free
 15773  006192                     i2l8488:
 15774                           
 15775                           ;usb_device.c: 530: }
 15776                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 15777  006192  B265               	btfsc	3941,1,c	;volatile
 15778  006194  A264               	btfss	3940,1,c	;volatile
 15779  006196  D00B               	goto	i2l8496
 15780                           
 15781                           ;usb_device.c: 533: {
 15782                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 15783  006198  0E7F               	movlw	127
 15784  00619A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15785  00619C  683B               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15786  00619E  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15787  0061A0  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15788  0061A2  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15789  0061A4  0E01               	movlw	1
 15790  0061A6  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15791  0061A8  ECF3  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15792                           
 15793                           ;usb_device.c: 535: {UEIR = 0;};
 15794  0061AC  6A67               	clrf	3943,c	;volatile
 15795  0061AE                     i2l8496:
 15796                           
 15797                           ;usb_device.c: 536: }
 15798                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 15799  0061AE  0E04               	movlw	4
 15800  0061B0  0100               	movlb	0	; () banked
 15801  0061B2  6191               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 15802  0061B4  D002               	goto	i2l1476
 15803                           
 15804                           ; BSR set to: 0
 15805                           ;usb_device.c: 544: {
 15806                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 15807  0061B6  94A4               	bcf	4004,2,c	;volatile
 15808                           
 15809                           ;usb_device.c: 546: return;
 15810  0061B8  0C04               	retlw	4
 15811  0061BA                     i2l1476:
 15812                           
 15813                           ; BSR set to: 0
 15814                           ;usb_device.c: 547: }
 15815                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 15816  0061BA  A664               	btfss	3940,3,c	;volatile
 15817  0061BC  D029               	goto	i2l1477
 15818                           
 15819                           ; BSR set to: 0
 15820                           ;usb_device.c: 553: {
 15821                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 15822  0061BE  6A4E               	clrf	USBDeviceTasks@i,c
 15823  0061C0                     i2l1478:
 15824                           
 15825                           ;usb_device.c: 555: {
 15826                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 15827  0061C0  A665               	btfss	3941,3,c	;volatile
 15828  0061C2  D026               	goto	i2l1477
 15829                           
 15830                           ;usb_device.c: 557: {
 15831                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 15832  0061C4  CF61 F02D          	movff	3937,_USTATcopy	;volatile
 15833                           
 15834                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 15835  0061C8  302D               	rrcf	_USTATcopy,w,c	;volatile
 15836  0061CA  32E8               	rrcf	wreg,f,c
 15837  0061CC  32E8               	rrcf	wreg,f,c
 15838  0061CE  0B0F               	andlw	15
 15839  0061D0  6E22               	movwf	_endpoint_number,c	;volatile
 15840                           
 15841                           ;usb_device.c: 562: (UIR &= 0xF7);
 15842  0061D2  9665               	bcf	3941,3,c	;volatile
 15843                           
 15844                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 15845  0061D4  B42D               	btfsc	_USTATcopy,2,c	;volatile
 15846  0061D6  D003               	goto	i2l8516
 15847                           
 15848                           ;usb_device.c: 567: {
 15849                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 15850  0061D8  5022               	movf	_endpoint_number,w,c
 15851  0061DA  0F6D               	addlw	low _ep_data_out
 15852  0061DC  D002               	goto	L24
 15853  0061DE                     i2l8516:
 15854                           
 15855                           ;usb_device.c: 570: else
 15856                           ;usb_device.c: 571: {
 15857                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 15858  0061DE  5022               	movf	_endpoint_number,w,c
 15859  0061E0  0F6A               	addlw	low _ep_data_in
 15860  0061E2                     L24:
 15861  0061E2  6ED9               	movwf	fsr2l,c
 15862  0061E4  6ADA               	clrf	fsr2h,c
 15863  0061E6  0100               	movlb	0	; () banked
 15864  0061E8  70DF               	btg	indf2,0,c
 15865                           
 15866                           ; BSR set to: 0
 15867                           ;usb_device.c: 573: }
 15868                           ;usb_device.c: 577: if(endpoint_number == 0)
 15869  0061EA  5022               	movf	_endpoint_number,w,c	;volatile
 15870  0061EC  E103               	bnz	i2l8522
 15871                           
 15872                           ; BSR set to: 0
 15873                           ;usb_device.c: 578: {
 15874                           ;usb_device.c: 579: USBCtrlEPService();
 15875  0061EE  ECB6  F02B         	call	_USBCtrlEPService	;wreg free
 15876                           
 15877                           ;usb_device.c: 580: }
 15878  0061F2  D00A               	goto	i2l8524
 15879  0061F4                     i2l8522:
 15880                           
 15881                           ; BSR set to: 0
 15882                           ;usb_device.c: 581: else
 15883                           ;usb_device.c: 582: {
 15884                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 15885  0061F4  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15886  0061F6  0E72               	movlw	114
 15887  0061F8  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15888  0061FA  0E2D               	movlw	low _USTATcopy
 15889  0061FC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15890  0061FE  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15891  006200  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15892  006202  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15893  006204  ECF3  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15894  006208                     i2l8524:
 15895  006208  2A4E               	incf	USBDeviceTasks@i,f,c
 15896  00620A  0E03               	movlw	3
 15897  00620C  644E               	cpfsgt	USBDeviceTasks@i,c
 15898  00620E  D7D8               	goto	i2l1478
 15899  006210                     i2l1477:
 15900                           
 15901                           ;usb_device.c: 589: }
 15902                           ;usb_device.c: 590: }
 15903                           ;usb_device.c: 591: }
 15904                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 15905  006210  94A4               	bcf	4004,2,c	;volatile
 15906  006212  0012               	return		;funcret
 15907  006214                     __end_of_USBDeviceTasks:
 15908                           	opt stack 0
 15909                           pclatu	equ	0xFFB
 15910                           pclath	equ	0xFFA
 15911                           tblptru	equ	0xFF8
 15912                           tblptrh	equ	0xFF7
 15913                           tblptrl	equ	0xFF6
 15914                           tablat	equ	0xFF5
 15915                           prodh	equ	0xFF4
 15916                           prodl	equ	0xFF3
 15917                           intcon	equ	0xFF2
 15918                           postinc0	equ	0xFEE
 15919                           wreg	equ	0xFE8
 15920                           indf1	equ	0xFE7
 15921                           postdec1	equ	0xFE5
 15922                           fsr1h	equ	0xFE2
 15923                           fsr1l	equ	0xFE1
 15924                           indf2	equ	0xFDF
 15925                           postinc2	equ	0xFDE
 15926                           postdec2	equ	0xFDD
 15927                           plusw2	equ	0xFDB
 15928                           fsr2h	equ	0xFDA
 15929                           fsr2l	equ	0xFD9
 15930                           status	equ	0xFD8
 15931                           
 15932 ;; *************** function i2_USBDeviceInit *****************
 15933 ;; Defined at:
 15934 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 15935 ;; Parameters:    Size  Location     Type
 15936 ;;		None
 15937 ;; Auto vars:     Size  Location     Type
 15938 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 15939 ;; Return value:  Size  Location     Type
 15940 ;;                  1    wreg      void 
 15941 ;; Registers used:
 15942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15943 ;; Tracked objects:
 15944 ;;		On entry : 0/0
 15945 ;;		On exit  : F/0
 15946 ;;		Unchanged: 0/0
 15947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15948 ;;      Params:         0       0       0       0       0       0       0       0       0
 15949 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15950 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15951 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15952 ;;Total ram usage:        1 bytes
 15953 ;; Hardware stack levels used:    1
 15954 ;; Hardware stack levels required when called:    1
 15955 ;; This function calls:
 15956 ;;		i2_memset
 15957 ;; This function is called by:
 15958 ;;		_USBDeviceTasks
 15959 ;; This function uses a non-reentrant model
 15960 ;;
 15961                           
 15962                           	psect	text80
 15963  005CB0                     __ptext80:
 15964                           	opt stack 0
 15965  005CB0                     i2_USBDeviceInit:
 15966                           	opt stack 17
 15967                           
 15968                           ;usb_device.c: 239: uint8_t i;
 15969                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 15970                           
 15971                           ;incstack = 0
 15972  005CB0  94A3               	bcf	4003,2,c	;volatile
 15973                           
 15974                           ;usb_device.c: 244: {UEIR = 0;};
 15975  005CB2  6A67               	clrf	3943,c	;volatile
 15976                           
 15977                           ;usb_device.c: 247: {UIR = 0;};
 15978  005CB4  6A65               	clrf	3941,c	;volatile
 15979                           
 15980                           ;usb_device.c: 250: UEP0 = 0;
 15981  005CB6  6A6A               	clrf	3946,c	;volatile
 15982                           
 15983                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 15984  005CB8  0E6B               	movlw	107
 15985  005CBA  6E2E               	movwf	i2memset@p1,c
 15986  005CBC  0E0F               	movlw	15
 15987  005CBE  6E2F               	movwf	i2memset@p1+1,c
 15988  005CC0  6A31               	clrf	i2memset@c+1,c
 15989  005CC2  6A30               	clrf	i2memset@c,c
 15990  005CC4  6A33               	clrf	i2memset@n+1,c
 15991  005CC6  0E02               	movlw	2
 15992  005CC8  6E32               	movwf	i2memset@n,c
 15993  005CCA  EC3C  F023         	call	i2_memset	;wreg free
 15994                           
 15995                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 15996  005CCE  0E16               	movlw	22
 15997  005CD0  6E62               	movwf	3938,c	;volatile
 15998  005CD2  0E9F               	movlw	159
 15999  005CD4  6E66               	movwf	3942,c	;volatile
 16000  005CD6  0E7B               	movlw	123
 16001  005CD8  6E64               	movwf	3940,c	;volatile
 16002                           
 16003                           ;usb_device.c: 257: ;
 16004                           ;usb_device.c: 260: ;
 16005                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16006  005CDA  6A36               	clrf	i2USBDeviceInit@i,c
 16007  005CDC                     i2l8080:
 16008                           
 16009                           ;usb_device.c: 264: {
 16010                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 16011  005CDC  5036               	movf	i2USBDeviceInit@i,w,c
 16012  005CDE  0D04               	mullw	4
 16013  005CE0  0E00               	movlw	0
 16014  005CE2  24F3               	addwf	prodl,w,c
 16015  005CE4  6ED9               	movwf	fsr2l,c
 16016  005CE6  0E04               	movlw	4
 16017  005CE8  20F4               	addwfc	prodh,w,c
 16018  005CEA  6EDA               	movwf	fsr2h,c
 16019  005CEC  6ADE               	clrf	postinc2,c
 16020  005CEE  6ADE               	clrf	postinc2,c
 16021  005CF0  6ADE               	clrf	postinc2,c
 16022  005CF2  6ADD               	clrf	postdec2,c
 16023  005CF4  2A36               	incf	i2USBDeviceInit@i,f,c
 16024  005CF6  0E0B               	movlw	11
 16025  005CF8  6436               	cpfsgt	i2USBDeviceInit@i,c
 16026  005CFA  D7F0               	goto	i2l8080
 16027                           
 16028                           ;usb_device.c: 266: }
 16029                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 16030  005CFC  8C60               	bsf	3936,6,c	;volatile
 16031                           
 16032                           ;usb_device.c: 272: UADDR = 0x00;
 16033  005CFE  6A63               	clrf	3939,c	;volatile
 16034                           
 16035                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 16036  005D00  9860               	bcf	3936,4,c	;volatile
 16037                           
 16038                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 16039  005D02  9C60               	bcf	3936,6,c	;volatile
 16040                           
 16041                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 16042  005D04  D005               	goto	i2l8094
 16043  005D06                     i2l8086:
 16044                           
 16045                           ;usb_device.c: 282: {
 16046                           ;usb_device.c: 283: (UIR &= 0xF7);
 16047  005D06  9665               	bcf	3941,3,c	;volatile
 16048                           
 16049                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 16050  005D08  6A0C               	clrf	_inPipes+3,c	;volatile
 16051                           
 16052                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 16053  005D0A  6A04               	clrf	_outPipes+3,c	;volatile
 16054                           
 16055                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 16056  005D0C  6A05               	clrf	_outPipes+4,c	;volatile
 16057  005D0E  6A06               	clrf	_outPipes+5,c	;volatile
 16058  005D10                     i2l8094:
 16059  005D10  B665               	btfsc	3941,3,c	;volatile
 16060  005D12  D7F9               	goto	i2l8086
 16061                           
 16062                           ;usb_device.c: 288: }
 16063                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 16064  005D14  0E01               	movlw	1
 16065  005D16  0100               	movlb	0	; () banked
 16066  005D18  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16067                           
 16068                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 16069  005D1A  6F93               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16070                           
 16071                           ; BSR set to: 0
 16072                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 16073  005D1C  6B8F               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16074                           
 16075                           ; BSR set to: 0
 16076                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 16077  005D1E  6B90               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16078                           
 16079                           ; BSR set to: 0
 16080                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 16081  005D20  6B8E               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 16082                           
 16083                           ; BSR set to: 0
 16084                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 16085  005D22  6A36               	clrf	i2USBDeviceInit@i,c
 16086  005D24                     i2l8110:
 16087                           
 16088                           ;usb_device.c: 302: {
 16089                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 16090  005D24  5036               	movf	i2USBDeviceInit@i,w,c
 16091  005D26  0D02               	mullw	2
 16092  005D28  50F3               	movf	prodl,w,c
 16093  005D2A  0F0F               	addlw	low _pBDTEntryIn
 16094  005D2C  6ED9               	movwf	fsr2l,c
 16095  005D2E  6ADA               	clrf	fsr2h,c
 16096  005D30  6ADE               	clrf	postinc2,c
 16097  005D32  6ADD               	clrf	postdec2,c
 16098                           
 16099                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 16100  005D34  5036               	movf	i2USBDeviceInit@i,w,c
 16101  005D36  0D02               	mullw	2
 16102  005D38  50F3               	movf	prodl,w,c
 16103  005D3A  0F60               	addlw	low _pBDTEntryOut
 16104  005D3C  6ED9               	movwf	fsr2l,c
 16105  005D3E  6ADA               	clrf	fsr2h,c
 16106  005D40  6ADE               	clrf	postinc2,c
 16107  005D42  6ADD               	clrf	postdec2,c
 16108                           
 16109                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 16110  005D44  5036               	movf	i2USBDeviceInit@i,w,c
 16111  005D46  0F6A               	addlw	low _ep_data_in
 16112  005D48  6ED9               	movwf	fsr2l,c
 16113  005D4A  6ADA               	clrf	fsr2h,c
 16114  005D4C  6ADF               	clrf	indf2,c
 16115                           
 16116                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 16117  005D4E  5036               	movf	i2USBDeviceInit@i,w,c
 16118  005D50  0F6D               	addlw	low _ep_data_out
 16119  005D52  6ED9               	movwf	fsr2l,c
 16120  005D54  6ADA               	clrf	fsr2h,c
 16121  005D56  6ADF               	clrf	indf2,c
 16122  005D58  2A36               	incf	i2USBDeviceInit@i,f,c
 16123  005D5A  0E02               	movlw	2
 16124  005D5C  6436               	cpfsgt	i2USBDeviceInit@i,c
 16125  005D5E  D7E2               	goto	i2l8110
 16126                           
 16127                           ;usb_device.c: 307: }
 16128                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16129  005D60  0E08               	movlw	8
 16130  005D62  6E0F               	movwf	_pBDTEntryIn,c
 16131  005D64  0E04               	movlw	4
 16132  005D66  6E10               	movwf	_pBDTEntryIn+1,c
 16133                           
 16134                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 16135  005D68  0E16               	movlw	22
 16136  005D6A  6E6A               	movwf	3946,c	;volatile
 16137                           
 16138                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16139  005D6C  0E04               	movlw	4
 16140  005D6E  0104               	movlb	4	; () banked
 16141  005D70  6F03               	movwf	3,b	;volatile
 16142  005D72  0E30               	movlw	48
 16143  005D74  6F02               	movwf	2,b	;volatile
 16144                           
 16145                           ; BSR set to: 4
 16146                           ;usb_device.c: 315: BDT[0].CNT = 8;
 16147  005D76  0E08               	movlw	8
 16148  005D78  6F01               	movwf	1,b	;volatile
 16149                           
 16150                           ; BSR set to: 4
 16151                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 16152  005D7A  0E04               	movlw	4
 16153  005D7C  6F00               	movwf	0,b	;volatile
 16154                           
 16155                           ; BSR set to: 4
 16156                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 16157  005D7E  8F00               	bsf	0,7,b	;volatile
 16158                           
 16159                           ; BSR set to: 4
 16160                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 16161  005D80  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 16162                           
 16163                           ; BSR set to: 4
 16164                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 16165  005D82  0100               	movlb	0	; () banked
 16166  005D84  6B91               	clrf	_USBDeviceState& (0+255),b	;volatile
 16167                           
 16168                           ; BSR set to: 0
 16169  005D86  0012               	return		;funcret
 16170  005D88                     __end_ofi2_USBDeviceInit:
 16171                           	opt stack 0
 16172                           pclatu	equ	0xFFB
 16173                           pclath	equ	0xFFA
 16174                           tblptru	equ	0xFF8
 16175                           tblptrh	equ	0xFF7
 16176                           tblptrl	equ	0xFF6
 16177                           tablat	equ	0xFF5
 16178                           prodh	equ	0xFF4
 16179                           prodl	equ	0xFF3
 16180                           intcon	equ	0xFF2
 16181                           postinc0	equ	0xFEE
 16182                           wreg	equ	0xFE8
 16183                           indf1	equ	0xFE7
 16184                           postdec1	equ	0xFE5
 16185                           fsr1h	equ	0xFE2
 16186                           fsr1l	equ	0xFE1
 16187                           indf2	equ	0xFDF
 16188                           postinc2	equ	0xFDE
 16189                           postdec2	equ	0xFDD
 16190                           plusw2	equ	0xFDB
 16191                           fsr2h	equ	0xFDA
 16192                           fsr2l	equ	0xFD9
 16193                           status	equ	0xFD8
 16194                           
 16195 ;; *************** function _USBWakeFromSuspend *****************
 16196 ;; Defined at:
 16197 ;;		line 1944 in file "../Includes/Usb/framework/usb_device.c"
 16198 ;; Parameters:    Size  Location     Type
 16199 ;;		None
 16200 ;; Auto vars:     Size  Location     Type
 16201 ;;		None
 16202 ;; Return value:  Size  Location     Type
 16203 ;;                  1    wreg      void 
 16204 ;; Registers used:
 16205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16206 ;; Tracked objects:
 16207 ;;		On entry : F/0
 16208 ;;		On exit  : 0/0
 16209 ;;		Unchanged: 0/0
 16210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16211 ;;      Params:         0       0       0       0       0       0       0       0       0
 16212 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16213 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16214 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16215 ;;Total ram usage:        0 bytes
 16216 ;; Hardware stack levels used:    1
 16217 ;; Hardware stack levels required when called:    5
 16218 ;; This function calls:
 16219 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16220 ;; This function is called by:
 16221 ;;		_USBDeviceTasks
 16222 ;; This function uses a non-reentrant model
 16223 ;;
 16224                           
 16225                           	psect	text81
 16226  004526                     __ptext81:
 16227                           	opt stack 0
 16228  004526                     _USBWakeFromSuspend:
 16229                           	opt stack 13
 16230                           
 16231                           ; BSR set to: 0
 16232                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 16233                           
 16234                           ; BSR set to: 0
 16235                           ;incstack = 0
 16236  004526  6B8E               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 16237                           
 16238                           ; BSR set to: 0
 16239                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 16240  004528  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16241  00452A  0E74               	movlw	116
 16242  00452C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16243  00452E  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16244  004530  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16245  004532  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16246  004534  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16247  004536  ECF3  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16248                           
 16249                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 16250  00453A  9260               	bcf	3936,1,c	;volatile
 16251                           
 16252                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 16253  00453C  9464               	bcf	3940,2,c	;volatile
 16254                           
 16255                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 16256  00453E  D001               	goto	i2l8004
 16257  004540                     i2l8002:
 16258                           
 16259                           ;usb_device.c: 1977: {
 16260                           ;usb_device.c: 1978: (UIR &= 0xFB);
 16261  004540  9465               	bcf	3941,2,c	;volatile
 16262  004542                     i2l8004:
 16263  004542  A465               	btfss	3941,2,c	;volatile
 16264  004544  0012               	return		;funcret
 16265  004546  D7FC               	goto	i2l8002
 16266  004548                     __end_of_USBWakeFromSuspend:
 16267                           	opt stack 0
 16268                           pclatu	equ	0xFFB
 16269                           pclath	equ	0xFFA
 16270                           tblptru	equ	0xFF8
 16271                           tblptrh	equ	0xFF7
 16272                           tblptrl	equ	0xFF6
 16273                           tablat	equ	0xFF5
 16274                           prodh	equ	0xFF4
 16275                           prodl	equ	0xFF3
 16276                           intcon	equ	0xFF2
 16277                           postinc0	equ	0xFEE
 16278                           wreg	equ	0xFE8
 16279                           indf1	equ	0xFE7
 16280                           postdec1	equ	0xFE5
 16281                           fsr1h	equ	0xFE2
 16282                           fsr1l	equ	0xFE1
 16283                           indf2	equ	0xFDF
 16284                           postinc2	equ	0xFDE
 16285                           postdec2	equ	0xFDD
 16286                           plusw2	equ	0xFDB
 16287                           fsr2h	equ	0xFDA
 16288                           fsr2l	equ	0xFD9
 16289                           status	equ	0xFD8
 16290                           
 16291 ;; *************** function _USBSuspend *****************
 16292 ;; Defined at:
 16293 ;;		line 1889 in file "../Includes/Usb/framework/usb_device.c"
 16294 ;; Parameters:    Size  Location     Type
 16295 ;;		None
 16296 ;; Auto vars:     Size  Location     Type
 16297 ;;		None
 16298 ;; Return value:  Size  Location     Type
 16299 ;;                  1    wreg      void 
 16300 ;; Registers used:
 16301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16302 ;; Tracked objects:
 16303 ;;		On entry : 0/0
 16304 ;;		On exit  : 0/0
 16305 ;;		Unchanged: 0/0
 16306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16307 ;;      Params:         0       0       0       0       0       0       0       0       0
 16308 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16309 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16310 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16311 ;;Total ram usage:        0 bytes
 16312 ;; Hardware stack levels used:    1
 16313 ;; Hardware stack levels required when called:    5
 16314 ;; This function calls:
 16315 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16316 ;; This function is called by:
 16317 ;;		_USBDeviceTasks
 16318 ;; This function uses a non-reentrant model
 16319 ;;
 16320                           
 16321                           	psect	text82
 16322  00448E                     __ptext82:
 16323                           	opt stack 0
 16324  00448E                     _USBSuspend:
 16325                           	opt stack 13
 16326                           
 16327                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 16328                           
 16329                           ;incstack = 0
 16330  00448E  8464               	bsf	3940,2,c	;volatile
 16331                           
 16332                           ;usb_device.c: 1915: (UIR &= 0xEF);
 16333  004490  9865               	bcf	3941,4,c	;volatile
 16334                           
 16335                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 16336  004492  8260               	bsf	3936,1,c	;volatile
 16337                           
 16338                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 16339  004494  0E01               	movlw	1
 16340  004496  0100               	movlb	0	; () banked
 16341  004498  6F8E               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 16345  00449A  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16346  00449C  0E75               	movlw	117
 16347  00449E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16348  0044A0  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16349  0044A2  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16350  0044A4  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16351  0044A6  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16352  0044A8  EFF3  F024         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16353  0044AC                     __end_of_USBSuspend:
 16354                           	opt stack 0
 16355                           pclatu	equ	0xFFB
 16356                           pclath	equ	0xFFA
 16357                           tblptru	equ	0xFF8
 16358                           tblptrh	equ	0xFF7
 16359                           tblptrl	equ	0xFF6
 16360                           tablat	equ	0xFF5
 16361                           prodh	equ	0xFF4
 16362                           prodl	equ	0xFF3
 16363                           intcon	equ	0xFF2
 16364                           postinc0	equ	0xFEE
 16365                           wreg	equ	0xFE8
 16366                           indf1	equ	0xFE7
 16367                           postdec1	equ	0xFE5
 16368                           fsr1h	equ	0xFE2
 16369                           fsr1l	equ	0xFE1
 16370                           indf2	equ	0xFDF
 16371                           postinc2	equ	0xFDE
 16372                           postdec2	equ	0xFDD
 16373                           plusw2	equ	0xFDB
 16374                           fsr2h	equ	0xFDA
 16375                           fsr2l	equ	0xFD9
 16376                           status	equ	0xFD8
 16377                           
 16378 ;; *************** function _USBStallHandler *****************
 16379 ;; Defined at:
 16380 ;;		line 1846 in file "../Includes/Usb/framework/usb_device.c"
 16381 ;; Parameters:    Size  Location     Type
 16382 ;;		None
 16383 ;; Auto vars:     Size  Location     Type
 16384 ;;		None
 16385 ;; Return value:  Size  Location     Type
 16386 ;;                  1    wreg      void 
 16387 ;; Registers used:
 16388 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16389 ;; Tracked objects:
 16390 ;;		On entry : 0/0
 16391 ;;		On exit  : 0/0
 16392 ;;		Unchanged: 0/0
 16393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16394 ;;      Params:         0       0       0       0       0       0       0       0       0
 16395 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16396 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16397 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16398 ;;Total ram usage:        1 bytes
 16399 ;; Hardware stack levels used:    1
 16400 ;; This function calls:
 16401 ;;		Nothing
 16402 ;; This function is called by:
 16403 ;;		_USBDeviceTasks
 16404 ;; This function uses a non-reentrant model
 16405 ;;
 16406                           
 16407                           	psect	text83
 16408  004922                     __ptext83:
 16409                           	opt stack 0
 16410  004922                     _USBStallHandler:
 16411                           	opt stack 18
 16412                           
 16413                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 16414                           
 16415                           ;incstack = 0
 16416  004922  A06A               	btfss	3946,0,c	;volatile
 16417  004924  D01B               	goto	i2l1616
 16418                           
 16419                           ;usb_device.c: 1859: {
 16420                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 16421  004926  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16422  00492A  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16423  00492E  0E80               	movlw	128
 16424  004930  18DE               	xorwf	postinc2,w,c
 16425  004932  E113               	bnz	i2l8026
 16426  004934  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16427  004938  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16428  00493C  0E84               	movlw	132
 16429  00493E  18DE               	xorwf	postinc2,w,c
 16430  004940  E10C               	bnz	i2l8026
 16431                           
 16432                           ;usb_device.c: 1862: {
 16433                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16434  004942  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16435  004946  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16436  00494A  0E0C               	movlw	12
 16437  00494C  6EDF               	movwf	indf2,c
 16438                           
 16439                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16440  00494E  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16441  004952  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16442  004956  0E00               	movlw	0
 16443  004958  8EDB               	bsf	plusw2,7,c
 16444  00495A                     i2l8026:
 16445                           
 16446                           ;usb_device.c: 1866: }
 16447                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 16448  00495A  906A               	bcf	3946,0,c	;volatile
 16449  00495C                     i2l1616:
 16450                           
 16451                           ;usb_device.c: 1868: }
 16452                           ;usb_device.c: 1870: (UIR &= 0xDF);
 16453  00495C  9A65               	bcf	3941,5,c	;volatile
 16454  00495E  0012               	return		;funcret
 16455  004960                     __end_of_USBStallHandler:
 16456                           	opt stack 0
 16457                           pclatu	equ	0xFFB
 16458                           pclath	equ	0xFFA
 16459                           tblptru	equ	0xFF8
 16460                           tblptrh	equ	0xFF7
 16461                           tblptrl	equ	0xFF6
 16462                           tablat	equ	0xFF5
 16463                           prodh	equ	0xFF4
 16464                           prodl	equ	0xFF3
 16465                           intcon	equ	0xFF2
 16466                           postinc0	equ	0xFEE
 16467                           wreg	equ	0xFE8
 16468                           indf1	equ	0xFE7
 16469                           postdec1	equ	0xFE5
 16470                           fsr1h	equ	0xFE2
 16471                           fsr1l	equ	0xFE1
 16472                           indf2	equ	0xFDF
 16473                           postinc2	equ	0xFDE
 16474                           postdec2	equ	0xFDD
 16475                           plusw2	equ	0xFDB
 16476                           fsr2h	equ	0xFDA
 16477                           fsr2l	equ	0xFD9
 16478                           status	equ	0xFD8
 16479                           
 16480 ;; *************** function _USBCtrlEPService *****************
 16481 ;; Defined at:
 16482 ;;		line 2004 in file "../Includes/Usb/framework/usb_device.c"
 16483 ;; Parameters:    Size  Location     Type
 16484 ;;		None
 16485 ;; Auto vars:     Size  Location     Type
 16486 ;;  setup_cnt       1   31[COMRAM] unsigned char 
 16487 ;; Return value:  Size  Location     Type
 16488 ;;                  1    wreg      void 
 16489 ;; Registers used:
 16490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16491 ;; Tracked objects:
 16492 ;;		On entry : F/0
 16493 ;;		On exit  : 0/0
 16494 ;;		Unchanged: 0/0
 16495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16496 ;;      Params:         0       0       0       0       0       0       0       0       0
 16497 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16498 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16499 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16500 ;;Total ram usage:        3 bytes
 16501 ;; Hardware stack levels used:    1
 16502 ;; Hardware stack levels required when called:    8
 16503 ;; This function calls:
 16504 ;;		_USBCtrlTrfInHandler
 16505 ;;		_USBCtrlTrfOutHandler
 16506 ;;		_USBCtrlTrfSetupHandler
 16507 ;; This function is called by:
 16508 ;;		_USBDeviceTasks
 16509 ;; This function uses a non-reentrant model
 16510 ;;
 16511                           
 16512                           	psect	text84
 16513  00576C                     __ptext84:
 16514                           	opt stack 0
 16515  00576C                     _USBCtrlEPService:
 16516                           	opt stack 10
 16517                           
 16518                           ; BSR set to: 0
 16519                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 16520                           
 16521                           ;incstack = 0
 16522  00576C  0E2D               	movlw	45
 16523  00576E  6E1F               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 16524                           
 16525                           ; BSR set to: 0
 16526                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 16527  005770  C02D  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 16528  005774  0EFD               	movlw	253
 16529  005776  164B               	andwf	??_USBCtrlEPService,f,c
 16530  005778  E14B               	bnz	i2l8060
 16531                           
 16532                           ; BSR set to: 0
 16533                           ;usb_device.c: 2013: {
 16534                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 16535  00577A  90D8               	bcf	status,0,c
 16536  00577C  302D               	rrcf	_USTATcopy,w,c	;volatile
 16537  00577E  0B3F               	andlw	63
 16538  005780  0D04               	mullw	4
 16539  005782  0E00               	movlw	0
 16540  005784  24F3               	addwf	prodl,w,c
 16541  005786  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 16542  005788  0E04               	movlw	4
 16543  00578A  20F4               	addwfc	prodh,w,c
 16544  00578C  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 16545                           
 16546                           ; BSR set to: 0
 16547                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 16548  00578E  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 16549  005792  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 16550                           
 16551                           ; BSR set to: 0
 16552                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 16553  005796  0E04               	movlw	4
 16554  005798  1A17               	xorwf	_pBDTEntryEP0OutNext,f,c
 16555                           
 16556                           ; BSR set to: 0
 16557                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 16558  00579A  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16559  00579E  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16560  0057A2  30DF               	rrcf	indf2,w,c
 16561  0057A4  32E8               	rrcf	wreg,f,c
 16562  0057A6  0B0F               	andlw	15
 16563  0057A8  0A0D               	xorlw	13
 16564  0057AA  E002 EFAF  F025    	bnz	_USBCtrlTrfOutHandler
 16565                           
 16566                           ; BSR set to: 0
 16567                           ;usb_device.c: 2025: {
 16568                           ;usb_device.c: 2026: unsigned char setup_cnt;
 16569                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 16570  0057B0  6A4D               	clrf	USBCtrlEPService@setup_cnt,c
 16571  0057B2                     i2l8046:
 16572                           
 16573                           ; BSR set to: 0
 16574                           ;usb_device.c: 2033: {
 16575                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 16576  0057B2  EE20 F002          	lfsr	2,2
 16577  0057B6  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 16578  0057B8  26D9               	addwf	fsr2l,f,c
 16579  0057BA  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16580  0057BC  22DA               	addwfc	fsr2h,f,c
 16581  0057BE  CFDE F04B          	movff	postinc2,??_USBCtrlEPService
 16582  0057C2  CFDD F04C          	movff	postdec2,??_USBCtrlEPService+1
 16583  0057C6  C04B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 16584  0057CA  C04C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 16585  0057CE  0E30               	movlw	48
 16586  0057D0  244D               	addwf	USBCtrlEPService@setup_cnt,w,c
 16587  0057D2  6EE1               	movwf	fsr1l,c
 16588  0057D4  6AE2               	clrf	fsr1h,c
 16589  0057D6  0E04               	movlw	4
 16590  0057D8  22E2               	addwfc	fsr1h,f,c
 16591  0057DA  CFDF FFE7          	movff	indf2,indf1
 16592                           
 16593                           ; BSR set to: 0
 16594                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 16595  0057DE  EE20 F002          	lfsr	2,2
 16596  0057E2  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 16597  0057E4  26D9               	addwf	fsr2l,f,c
 16598  0057E6  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16599  0057E8  22DA               	addwfc	fsr2h,f,c
 16600  0057EA  2ADE               	incf	postinc2,f,c
 16601  0057EC  0E00               	movlw	0
 16602  0057EE  22DD               	addwfc	postdec2,f,c
 16603                           
 16604                           ; BSR set to: 0
 16605  0057F0  2A4D               	incf	USBCtrlEPService@setup_cnt,f,c
 16606                           
 16607                           ; BSR set to: 0
 16608  0057F2  0E07               	movlw	7
 16609  0057F4  644D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 16610  0057F6  D7DD               	goto	i2l8046
 16611                           
 16612                           ; BSR set to: 0
 16613                           ;usb_device.c: 2036: }
 16614                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16615  0057F8  EE20 F002          	lfsr	2,2
 16616  0057FC  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 16617  0057FE  26D9               	addwf	fsr2l,f,c
 16618  005800  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16619  005802  22DA               	addwfc	fsr2h,f,c
 16620  005804  0E30               	movlw	48
 16621  005806  6EDE               	movwf	postinc2,c
 16622  005808  0E04               	movlw	4
 16623  00580A  6EDD               	movwf	postdec2,c
 16624                           
 16625                           ; BSR set to: 0
 16626                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 16627  00580C  EF82  F026         	goto	_USBCtrlTrfSetupHandler	;wreg free
 16628  005810                     i2l8060:
 16629                           
 16630                           ; BSR set to: 0
 16631                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 16632  005810  502D               	movf	_USTATcopy,w,c	;volatile
 16633  005812  0BFD               	andlw	253
 16634  005814  0A04               	xorlw	4
 16635  005816  B4D8               	btfsc	status,2,c
 16636                           
 16637                           ; BSR set to: 0
 16638                           ;usb_device.c: 2049: {
 16639                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 16640  005818  EC86  F02D         	call	_USBCtrlTrfInHandler	;wreg free
 16641  00581C  0012               	return		;funcret
 16642  00581E                     __end_of_USBCtrlEPService:
 16643                           	opt stack 0
 16644                           pclatu	equ	0xFFB
 16645                           pclath	equ	0xFFA
 16646                           tblptru	equ	0xFF8
 16647                           tblptrh	equ	0xFF7
 16648                           tblptrl	equ	0xFF6
 16649                           tablat	equ	0xFF5
 16650                           prodh	equ	0xFF4
 16651                           prodl	equ	0xFF3
 16652                           intcon	equ	0xFF2
 16653                           postinc0	equ	0xFEE
 16654                           wreg	equ	0xFE8
 16655                           indf1	equ	0xFE7
 16656                           postdec1	equ	0xFE5
 16657                           fsr1h	equ	0xFE2
 16658                           fsr1l	equ	0xFE1
 16659                           indf2	equ	0xFDF
 16660                           postinc2	equ	0xFDE
 16661                           postdec2	equ	0xFDD
 16662                           plusw2	equ	0xFDB
 16663                           fsr2h	equ	0xFDA
 16664                           fsr2l	equ	0xFD9
 16665                           status	equ	0xFD8
 16666                           
 16667 ;; *************** function _USBCtrlTrfSetupHandler *****************
 16668 ;; Defined at:
 16669 ;;		line 2097 in file "../Includes/Usb/framework/usb_device.c"
 16670 ;; Parameters:    Size  Location     Type
 16671 ;;		None
 16672 ;; Auto vars:     Size  Location     Type
 16673 ;;		None
 16674 ;; Return value:  Size  Location     Type
 16675 ;;                  1    wreg      void 
 16676 ;; Registers used:
 16677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16678 ;; Tracked objects:
 16679 ;;		On entry : F/0
 16680 ;;		On exit  : 0/0
 16681 ;;		Unchanged: 0/0
 16682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16683 ;;      Params:         0       0       0       0       0       0       0       0       0
 16684 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16685 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16686 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16687 ;;Total ram usage:        0 bytes
 16688 ;; Hardware stack levels used:    1
 16689 ;; Hardware stack levels required when called:    7
 16690 ;; This function calls:
 16691 ;;		_USBCheckStdRequest
 16692 ;;		_USBCtrlEPServiceComplete
 16693 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16694 ;; This function is called by:
 16695 ;;		_USBCtrlEPService
 16696 ;; This function uses a non-reentrant model
 16697 ;;
 16698                           
 16699                           	psect	text85
 16700  004D04                     __ptext85:
 16701                           	opt stack 0
 16702  004D04                     _USBCtrlTrfSetupHandler:
 16703                           	opt stack 10
 16704                           
 16705                           ; BSR set to: 0
 16706                           ;usb_device.c: 2102: shortPacketStatus = 0;
 16707                           
 16708                           ;incstack = 0
 16709  004D04  6A2B               	clrf	_shortPacketStatus,c	;volatile
 16710                           
 16711                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 16712  004D06  6A1E               	clrf	_USBDeferStatusStagePacket,c	;volatile
 16713                           
 16714                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 16715  004D08  6B8F               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16716                           
 16717                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 16718  004D0A  6B90               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16719                           
 16720                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 16721  004D0C  6B8D               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 16722                           
 16723                           ;usb_device.c: 2107: controlTransferState = 0;
 16724  004D0E  6A21               	clrf	_controlTransferState,c	;volatile
 16725                           
 16726                           ; BSR set to: 0
 16727                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16728  004D10  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16729  004D14  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16730  004D18  0E7F               	movlw	127
 16731  004D1A  16DF               	andwf	indf2,f,c
 16732                           
 16733                           ; BSR set to: 0
 16734                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16735  004D1C  0E04               	movlw	4
 16736  004D1E  1A0F               	xorwf	_pBDTEntryIn,f,c
 16737                           
 16738                           ; BSR set to: 0
 16739                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16740  004D20  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16741  004D24  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16742  004D28  0E7F               	movlw	127
 16743  004D2A  16DF               	andwf	indf2,f,c
 16744                           
 16745                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16746  004D2C  0E04               	movlw	4
 16747  004D2E  1A0F               	xorwf	_pBDTEntryIn,f,c
 16748                           
 16749                           ; BSR set to: 0
 16750                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 16751  004D30  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16752  004D34  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16753  004D38  0E7F               	movlw	127
 16754  004D3A  16DF               	andwf	indf2,f,c
 16755                           
 16756                           ; BSR set to: 0
 16757                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 16758  004D3C  6A0C               	clrf	_inPipes+3,c	;volatile
 16759                           
 16760                           ; BSR set to: 0
 16761                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 16762  004D3E  6A0D               	clrf	_inPipes+4,c	;volatile
 16763  004D40  6A0E               	clrf	_inPipes+5,c	;volatile
 16764                           
 16765                           ; BSR set to: 0
 16766                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 16767  004D42  6A04               	clrf	_outPipes+3,c	;volatile
 16768                           
 16769                           ; BSR set to: 0
 16770                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 16771  004D44  6A05               	clrf	_outPipes+4,c	;volatile
 16772  004D46  6A06               	clrf	_outPipes+5,c	;volatile
 16773                           
 16774                           ; BSR set to: 0
 16775                           ;usb_device.c: 2131: USBCheckStdRequest();
 16776  004D48  ECC3  F02A         	call	_USBCheckStdRequest	;wreg free
 16777                           
 16778                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 16779  004D4C  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16780  004D4E  0E03               	movlw	3
 16781  004D50  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16782  004D52  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16783  004D54  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16784  004D56  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16785  004D58  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16786  004D5A  ECF3  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16787                           
 16788                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 16789  004D5E  EF9F  F02F         	goto	_USBCtrlEPServiceComplete	;wreg free
 16790  004D62                     __end_of_USBCtrlTrfSetupHandler:
 16791                           	opt stack 0
 16792                           pclatu	equ	0xFFB
 16793                           pclath	equ	0xFFA
 16794                           tblptru	equ	0xFF8
 16795                           tblptrh	equ	0xFF7
 16796                           tblptrl	equ	0xFF6
 16797                           tablat	equ	0xFF5
 16798                           prodh	equ	0xFF4
 16799                           prodl	equ	0xFF3
 16800                           intcon	equ	0xFF2
 16801                           postinc0	equ	0xFEE
 16802                           wreg	equ	0xFE8
 16803                           indf1	equ	0xFE7
 16804                           postdec1	equ	0xFE5
 16805                           fsr1h	equ	0xFE2
 16806                           fsr1l	equ	0xFE1
 16807                           indf2	equ	0xFDF
 16808                           postinc2	equ	0xFDE
 16809                           postdec2	equ	0xFDD
 16810                           plusw2	equ	0xFDB
 16811                           fsr2h	equ	0xFDA
 16812                           fsr2l	equ	0xFD9
 16813                           status	equ	0xFD8
 16814                           
 16815 ;; *************** function _USBCtrlEPServiceComplete *****************
 16816 ;; Defined at:
 16817 ;;		line 1282 in file "../Includes/Usb/framework/usb_device.c"
 16818 ;; Parameters:    Size  Location     Type
 16819 ;;		None
 16820 ;; Auto vars:     Size  Location     Type
 16821 ;;		None
 16822 ;; Return value:  Size  Location     Type
 16823 ;;                  1    wreg      void 
 16824 ;; Registers used:
 16825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16826 ;; Tracked objects:
 16827 ;;		On entry : 0/0
 16828 ;;		On exit  : 0/0
 16829 ;;		Unchanged: 0/0
 16830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16831 ;;      Params:         0       0       0       0       0       0       0       0       0
 16832 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16833 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16834 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16835 ;;Total ram usage:        0 bytes
 16836 ;; Hardware stack levels used:    1
 16837 ;; Hardware stack levels required when called:    2
 16838 ;; This function calls:
 16839 ;;		_USBCtrlEPAllowDataStage
 16840 ;;		_USBCtrlEPAllowStatusStage
 16841 ;; This function is called by:
 16842 ;;		_USBCtrlTrfSetupHandler
 16843 ;; This function uses a non-reentrant model
 16844 ;;
 16845                           
 16846                           	psect	text86
 16847  005F3E                     __ptext86:
 16848                           	opt stack 0
 16849  005F3E                     _USBCtrlEPServiceComplete:
 16850                           	opt stack 14
 16851                           
 16852                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 16853                           
 16854                           ;incstack = 0
 16855  005F3E  9860               	bcf	3936,4,c	;volatile
 16856                           
 16857                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 16858  005F40  BE0C               	btfsc	_inPipes+3,7,c	;volatile
 16859  005F42  D037               	goto	i2l1540
 16860                           
 16861                           ;usb_device.c: 1295: {
 16862                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 16863  005F44  AE04               	btfss	_outPipes+3,7,c	;volatile
 16864  005F46  D00A               	goto	i2l6470
 16865                           
 16866                           ;usb_device.c: 1297: {
 16867                           ;usb_device.c: 1298: controlTransferState = 2;
 16868  005F48  0E02               	movlw	2
 16869  005F4A  6E21               	movwf	_controlTransferState,c	;volatile
 16870                           
 16871                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 16872  005F4C  0100               	movlb	0	; () banked
 16873  005F4E  5190               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 16874  005F50  E102               	bnz	i2l6466
 16875                           
 16876                           ; BSR set to: 0
 16877                           ;usb_device.c: 1310: {
 16878                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 16879  005F52  EC9B  F029         	call	_USBCtrlEPAllowDataStage	;wreg free
 16880  005F56                     i2l6466:
 16881                           
 16882                           ; BSR set to: 0
 16883                           ;usb_device.c: 1312: }
 16884                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 16885  005F56  6B93               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16886                           
 16887                           ; BSR set to: 0
 16888                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 16889  005F58  6B92               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16890                           
 16891                           ;usb_device.c: 1318: }
 16892  005F5A  0012               	return	
 16893  005F5C                     i2l6470:
 16894                           
 16895                           ;usb_device.c: 1319: else
 16896                           ;usb_device.c: 1320: {
 16897                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 16898  005F5C  EE20 F001          	lfsr	2,1
 16899  005F60  5017               	movf	_pBDTEntryEP0OutNext,w,c
 16900  005F62  26D9               	addwf	fsr2l,f,c
 16901  005F64  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 16902  005F66  22DA               	addwfc	fsr2h,f,c
 16903  005F68  0E08               	movlw	8
 16904  005F6A  6EDF               	movwf	indf2,c
 16905                           
 16906                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16907  005F6C  EE20 F002          	lfsr	2,2
 16908  005F70  5017               	movf	_pBDTEntryEP0OutNext,w,c
 16909  005F72  26D9               	addwf	fsr2l,f,c
 16910  005F74  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 16911  005F76  22DA               	addwfc	fsr2h,f,c
 16912  005F78  0E30               	movlw	48
 16913  005F7A  6EDE               	movwf	postinc2,c
 16914  005F7C  0E04               	movlw	4
 16915  005F7E  6EDD               	movwf	postdec2,c
 16916                           
 16917                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16918  005F80  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16919  005F84  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16920  005F88  0E0C               	movlw	12
 16921  005F8A  6EDF               	movwf	indf2,c
 16922                           
 16923                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16924  005F8C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16925  005F90  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16926  005F94  0E00               	movlw	0
 16927  005F96  8EDB               	bsf	plusw2,7,c
 16928                           
 16929                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 16930  005F98  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16931  005F9C  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16932  005FA0  0E04               	movlw	4
 16933  005FA2  6EDF               	movwf	indf2,c
 16934                           
 16935                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16936  005FA4  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 16937  005FA8  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16938  005FAC  0E00               	movlw	0
 16939  005FAE  8EDB               	bsf	plusw2,7,c
 16940  005FB0  0C00               	retlw	0
 16941  005FB2                     i2l1540:
 16942                           
 16943                           ;usb_device.c: 1333: else
 16944                           ;usb_device.c: 1334: {
 16945                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 16946  005FB2  0104               	movlb	4	; () banked
 16947  005FB4  AF30               	btfss	48,7,b	;volatile
 16948  005FB6  D00E               	goto	i2l6490
 16949                           
 16950                           ; BSR set to: 4
 16951                           ;usb_device.c: 1336: {
 16952                           ;usb_device.c: 1337: controlTransferState = 1;
 16953  005FB8  0E01               	movlw	1
 16954  005FBA  6E21               	movwf	_controlTransferState,c	;volatile
 16955                           
 16956                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 16957  005FBC  0100               	movlb	0	; () banked
 16958  005FBE  518F               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 16959  005FC0  E102               	bnz	i2l6482
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;usb_device.c: 1352: {
 16963                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 16964  005FC2  EC9B  F029         	call	_USBCtrlEPAllowDataStage	;wreg free
 16965  005FC6                     i2l6482:
 16966                           
 16967                           ; BSR set to: 0
 16968                           ;usb_device.c: 1354: }
 16969                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 16970  005FC6  6B93               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16971                           
 16972                           ; BSR set to: 0
 16973                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 16974  005FC8  6B92               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16975                           
 16976                           ; BSR set to: 0
 16977                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 16978  005FCA  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16979  005FCC  A4D8               	btfss	status,2,c
 16980  005FCE  0012               	return	
 16981                           
 16982                           ; BSR set to: 0
 16983                           ;usb_device.c: 1379: {
 16984                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 16985  005FD0  EFC7  F02C         	goto	_USBCtrlEPAllowStatusStage	;wreg free
 16986  005FD4                     i2l6490:
 16987                           
 16988                           ; BSR set to: 4
 16989                           ;usb_device.c: 1383: else
 16990                           ;usb_device.c: 1384: {
 16991                           ;usb_device.c: 1395: controlTransferState = 2;
 16992  005FD4  0E02               	movlw	2
 16993  005FD6  6E21               	movwf	_controlTransferState,c	;volatile
 16994                           
 16995                           ; BSR set to: 4
 16996                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 16997  005FD8  EE20 F001          	lfsr	2,1
 16998  005FDC  5017               	movf	_pBDTEntryEP0OutNext,w,c
 16999  005FDE  26D9               	addwf	fsr2l,f,c
 17000  005FE0  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17001  005FE2  22DA               	addwfc	fsr2h,f,c
 17002  005FE4  0E08               	movlw	8
 17003  005FE6  6EDF               	movwf	indf2,c
 17004                           
 17005                           ; BSR set to: 4
 17006                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17007  005FE8  EE20 F002          	lfsr	2,2
 17008  005FEC  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17009  005FEE  26D9               	addwf	fsr2l,f,c
 17010  005FF0  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17011  005FF2  22DA               	addwfc	fsr2h,f,c
 17012  005FF4  0E30               	movlw	48
 17013  005FF6  6EDE               	movwf	postinc2,c
 17014  005FF8  0E04               	movlw	4
 17015  005FFA  6EDD               	movwf	postdec2,c
 17016                           
 17017                           ; BSR set to: 4
 17018                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17019  005FFC  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17020  006000  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17021  006004  6EDF               	movwf	indf2,c
 17022                           
 17023                           ; BSR set to: 4
 17024                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17025  006006  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17026  00600A  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17027  00600E  0E00               	movlw	0
 17028  006010  8EDB               	bsf	plusw2,7,c
 17029                           
 17030                           ; BSR set to: 4
 17031                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 17032  006012  0100               	movlb	0	; () banked
 17033  006014  6B93               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17034                           
 17035                           ; BSR set to: 0
 17036                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 17037  006016  6B92               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17038                           
 17039                           ; BSR set to: 0
 17040                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 17041  006018  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 17042  00601A  E102 EFC7  F02C    	bz	_USBCtrlEPAllowStatusStage
 17043  006020  0012               	return	
 17044  006022                     __end_of_USBCtrlEPServiceComplete:
 17045                           	opt stack 0
 17046                           pclatu	equ	0xFFB
 17047                           pclath	equ	0xFFA
 17048                           tblptru	equ	0xFF8
 17049                           tblptrh	equ	0xFF7
 17050                           tblptrl	equ	0xFF6
 17051                           tablat	equ	0xFF5
 17052                           prodh	equ	0xFF4
 17053                           prodl	equ	0xFF3
 17054                           intcon	equ	0xFF2
 17055                           postinc0	equ	0xFEE
 17056                           wreg	equ	0xFE8
 17057                           indf1	equ	0xFE7
 17058                           postdec1	equ	0xFE5
 17059                           fsr1h	equ	0xFE2
 17060                           fsr1l	equ	0xFE1
 17061                           indf2	equ	0xFDF
 17062                           postinc2	equ	0xFDE
 17063                           postdec2	equ	0xFDD
 17064                           plusw2	equ	0xFDB
 17065                           fsr2h	equ	0xFDA
 17066                           fsr2l	equ	0xFD9
 17067                           status	equ	0xFD8
 17068                           
 17069 ;; *************** function _USBCtrlEPAllowDataStage *****************
 17070 ;; Defined at:
 17071 ;;		line 1173 in file "../Includes/Usb/framework/usb_device.c"
 17072 ;; Parameters:    Size  Location     Type
 17073 ;;		None
 17074 ;; Auto vars:     Size  Location     Type
 17075 ;;		None
 17076 ;; Return value:  Size  Location     Type
 17077 ;;                  1    wreg      void 
 17078 ;; Registers used:
 17079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17080 ;; Tracked objects:
 17081 ;;		On entry : F/0
 17082 ;;		On exit  : F/0
 17083 ;;		Unchanged: 0/0
 17084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17085 ;;      Params:         0       0       0       0       0       0       0       0       0
 17086 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17087 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17088 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17089 ;;Total ram usage:        0 bytes
 17090 ;; Hardware stack levels used:    1
 17091 ;; Hardware stack levels required when called:    1
 17092 ;; This function calls:
 17093 ;;		_USBCtrlTrfTxService
 17094 ;; This function is called by:
 17095 ;;		_USBCtrlEPServiceComplete
 17096 ;; This function uses a non-reentrant model
 17097 ;;
 17098                           
 17099                           	psect	text87
 17100  005336                     __ptext87:
 17101                           	opt stack 0
 17102  005336                     _USBCtrlEPAllowDataStage:
 17103                           	opt stack 14
 17104                           
 17105                           ; BSR set to: 0
 17106                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 17107                           
 17108                           ;incstack = 0
 17109  005336  6B8F               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17110                           
 17111                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 17112  005338  6B90               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17113                           
 17114                           ; BSR set to: 0
 17115                           ;usb_device.c: 1178: if(controlTransferState == 2)
 17116  00533A  0E02               	movlw	2
 17117  00533C  1821               	xorwf	_controlTransferState,w,c	;volatile
 17118  00533E  E11F               	bnz	i2l6130
 17119                           
 17120                           ; BSR set to: 0
 17121                           ;usb_device.c: 1179: {
 17122                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 17123  005340  EE20 F001          	lfsr	2,1
 17124  005344  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17125  005346  26D9               	addwf	fsr2l,f,c
 17126  005348  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17127  00534A  22DA               	addwfc	fsr2h,f,c
 17128  00534C  0E08               	movlw	8
 17129  00534E  6EDF               	movwf	indf2,c
 17130                           
 17131                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 17132  005350  EE20 F002          	lfsr	2,2
 17133  005354  5017               	movf	_pBDTEntryEP0OutNext,w,c
 17134  005356  26D9               	addwf	fsr2l,f,c
 17135  005358  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 17136  00535A  22DA               	addwfc	fsr2h,f,c
 17137  00535C  0E38               	movlw	56
 17138  00535E  6EDE               	movwf	postinc2,c
 17139  005360  0E04               	movlw	4
 17140  005362  6EDD               	movwf	postdec2,c
 17141                           
 17142                           ; BSR set to: 0
 17143                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 17144  005364  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17145  005368  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17146  00536C  0E48               	movlw	72
 17147  00536E  6EDF               	movwf	indf2,c
 17148                           
 17149                           ; BSR set to: 0
 17150                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17151  005370  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17152  005374  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17153  005378  0E00               	movlw	0
 17154  00537A  8EDB               	bsf	plusw2,7,c
 17155                           
 17156                           ;usb_device.c: 1185: }
 17157  00537C  0C00               	retlw	0
 17158  00537E                     i2l6130:
 17159                           
 17160                           ; BSR set to: 0
 17161                           ;usb_device.c: 1186: else
 17162                           ;usb_device.c: 1187: {
 17163                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 17164  00537E  500D               	movf	_inPipes+4,w,c	;volatile
 17165  005380  0104               	movlb	4	; () banked
 17166  005382  5D36               	subwf	54,w,b	;volatile
 17167  005384  500E               	movf	_inPipes+5,w,c	;volatile
 17168  005386  5937               	subwfb	55,w,b	;volatile
 17169  005388  E204               	bc	i2l6134
 17170                           
 17171                           ; BSR set to: 4
 17172                           ;usb_device.c: 1191: {
 17173                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 17174  00538A  C436 F00D          	movff	1078,_inPipes+4	;volatile
 17175  00538E  C437 F00E          	movff	1079,_inPipes+5	;volatile
 17176  005392                     i2l6134:
 17177                           
 17178                           ; BSR set to: 4
 17179                           ;usb_device.c: 1193: }
 17180                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 17181  005392  EC25  F02D         	call	_USBCtrlTrfTxService	;wreg free
 17182                           
 17183                           ; BSR set to: 0
 17184                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 17185  005396  EE20 F002          	lfsr	2,2
 17186  00539A  500F               	movf	_pBDTEntryIn,w,c
 17187  00539C  26D9               	addwf	fsr2l,f,c
 17188  00539E  5010               	movf	_pBDTEntryIn+1,w,c
 17189  0053A0  22DA               	addwfc	fsr2h,f,c
 17190  0053A2  0E38               	movlw	56
 17191  0053A4  6EDE               	movwf	postinc2,c
 17192  0053A6  0E04               	movlw	4
 17193  0053A8  6EDD               	movwf	postdec2,c
 17194                           
 17195                           ; BSR set to: 0
 17196                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 17197  0053AA  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 17198  0053AE  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17199  0053B2  0E48               	movlw	72
 17200  0053B4  6EDF               	movwf	indf2,c
 17201                           
 17202                           ; BSR set to: 0
 17203                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17204  0053B6  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 17205  0053BA  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17206  0053BE  0E00               	movlw	0
 17207  0053C0  8EDB               	bsf	plusw2,7,c
 17208                           
 17209                           ; BSR set to: 0
 17210  0053C2  0C00               	retlw	0	;funcret
 17211  0053C4                     __end_of_USBCtrlEPAllowDataStage:
 17212                           	opt stack 0
 17213                           pclatu	equ	0xFFB
 17214                           pclath	equ	0xFFA
 17215                           tblptru	equ	0xFF8
 17216                           tblptrh	equ	0xFF7
 17217                           tblptrl	equ	0xFF6
 17218                           tablat	equ	0xFF5
 17219                           prodh	equ	0xFF4
 17220                           prodl	equ	0xFF3
 17221                           intcon	equ	0xFF2
 17222                           postinc0	equ	0xFEE
 17223                           wreg	equ	0xFE8
 17224                           indf1	equ	0xFE7
 17225                           postdec1	equ	0xFE5
 17226                           fsr1h	equ	0xFE2
 17227                           fsr1l	equ	0xFE1
 17228                           indf2	equ	0xFDF
 17229                           postinc2	equ	0xFDE
 17230                           postdec2	equ	0xFDD
 17231                           plusw2	equ	0xFDB
 17232                           fsr2h	equ	0xFDA
 17233                           fsr2l	equ	0xFD9
 17234                           status	equ	0xFD8
 17235                           
 17236 ;; *************** function _USBCheckStdRequest *****************
 17237 ;; Defined at:
 17238 ;;		line 2317 in file "../Includes/Usb/framework/usb_device.c"
 17239 ;; Parameters:    Size  Location     Type
 17240 ;;		None
 17241 ;; Auto vars:     Size  Location     Type
 17242 ;;		None
 17243 ;; Return value:  Size  Location     Type
 17244 ;;                  1    wreg      void 
 17245 ;; Registers used:
 17246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17247 ;; Tracked objects:
 17248 ;;		On entry : F/0
 17249 ;;		On exit  : 0/0
 17250 ;;		Unchanged: 0/0
 17251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17252 ;;      Params:         0       0       0       0       0       0       0       0       0
 17253 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17254 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17255 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17256 ;;Total ram usage:        1 bytes
 17257 ;; Hardware stack levels used:    1
 17258 ;; Hardware stack levels required when called:    6
 17259 ;; This function calls:
 17260 ;;		_USBStdFeatureReqHandler
 17261 ;;		_USBStdGetDscHandler
 17262 ;;		_USBStdGetStatusHandler
 17263 ;;		_USBStdSetCfgHandler
 17264 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17265 ;; This function is called by:
 17266 ;;		_USBCtrlTrfSetupHandler
 17267 ;; This function uses a non-reentrant model
 17268 ;;
 17269                           
 17270                           	psect	text88
 17271  005586                     __ptext88:
 17272                           	opt stack 0
 17273  005586                     _USBCheckStdRequest:
 17274                           	opt stack 10
 17275                           
 17276                           ; BSR set to: 0
 17277                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 17278                           
 17279                           ; BSR set to: 0
 17280                           ;incstack = 0
 17281  005586  0104               	movlb	4	; () banked
 17282  005588  3930               	swapf	48,w,b	;volatile
 17283  00558A  32E8               	rrcf	wreg,f,c
 17284  00558C  0B03               	andlw	3
 17285  00558E  E02A               	bz	i2l6592
 17286  005590  0012               	return	
 17287  005592                     i2l1667:
 17288                           
 17289                           ; BSR set to: 4
 17290                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 17291  005592  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17292                           
 17293                           ; BSR set to: 4
 17294                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 17295  005594  0E08               	movlw	8
 17296  005596  0100               	movlb	0	; () banked
 17297  005598  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 17298                           
 17299                           ;usb_device.c: 2327: break;
 17300  00559A  0C08               	retlw	8
 17301  00559C                     i2l6566:
 17302                           
 17303                           ; BSR set to: 4
 17304                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 17305  00559C  0E2C               	movlw	low _USBActiveConfiguration
 17306  00559E  6E09               	movwf	_inPipes,c	;volatile
 17307  0055A0  6A0A               	clrf	_inPipes+1,c	;volatile
 17308                           
 17309                           ; BSR set to: 4
 17310                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17311  0055A2  800C               	bsf	_inPipes+3,0,c	;volatile
 17312                           
 17313                           ; BSR set to: 4
 17314                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 17315  0055A4  0E01               	movlw	1
 17316  0055A6  6E0D               	movwf	_inPipes+4,c	;volatile
 17317                           
 17318                           ; BSR set to: 4
 17319                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 17320  0055A8  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17321                           
 17322                           ;usb_device.c: 2339: break;
 17323  0055AA  0C01               	retlw	1
 17324  0055AC                     i2l6578:
 17325                           
 17326                           ; BSR set to: 4
 17327                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 17328  0055AC  5134               	movf	52,w,b	;volatile
 17329  0055AE  0FB6               	addlw	low _USBAlternateInterface
 17330  0055B0  6E4A               	movwf	??_USBCheckStdRequest& (0+255),c
 17331  0055B2  C04A  F009         	movff	??_USBCheckStdRequest,_inPipes	;volatile
 17332  0055B6  6A0A               	clrf	_inPipes+1,c	;volatile
 17333                           
 17334                           ; BSR set to: 4
 17335                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17336  0055B8  800C               	bsf	_inPipes+3,0,c	;volatile
 17337                           
 17338                           ; BSR set to: 4
 17339                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 17340  0055BA  0E01               	movlw	1
 17341  0055BC  6E0D               	movwf	_inPipes+4,c	;volatile
 17342                           
 17343                           ; BSR set to: 4
 17344                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 17345  0055BE  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17346                           
 17347                           ;usb_device.c: 2352: break;
 17348  0055C0  0C01               	retlw	1
 17349  0055C2                     i2l1676:
 17350                           
 17351                           ; BSR set to: 4
 17352                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 17353  0055C2  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17354                           
 17355                           ; BSR set to: 4
 17356                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 17357  0055C4  5134               	movf	52,w,b	;volatile
 17358  0055C6  0FB6               	addlw	low _USBAlternateInterface
 17359  0055C8  6ED9               	movwf	fsr2l,c
 17360  0055CA  6ADA               	clrf	fsr2h,c
 17361  0055CC  C432 FFDF          	movff	1074,indf2	;volatile
 17362                           
 17363                           ;usb_device.c: 2356: break;
 17364  0055D0  0012               	return	
 17365  0055D2                     i2l6588:
 17366                           
 17367                           ; BSR set to: 4
 17368                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 17369  0055D2  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17370  0055D4  0E02               	movlw	2
 17371  0055D6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17372  0055D8  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17373  0055DA  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17374  0055DC  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17375  0055DE  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17376  0055E0  EFF3  F024         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17377  0055E4                     i2l6592:
 17378                           
 17379                           ; BSR set to: 4
 17380  0055E4  5131               	movf	49,w,b	;volatile
 17381                           
 17382                           ; Switch size 1, requested type "speed"
 17383                           ; Number of cases is 11, Range of values is 0 to 12
 17384                           ; switch strategies available:
 17385                           ; Name         Instructions Cycles
 17386                           ; simple_byte           34    18 (average)
 17387                           ;	Chosen strategy is simple_byte
 17388  0055E6  E102 EF90  F028    	bz	_USBStdGetStatusHandler
 17389  0055EC  0A01               	xorlw	1	; case 1
 17390  0055EE  E102 EFBB  F034    	bz	_USBStdFeatureReqHandler
 17391  0055F4  0A02               	xorlw	2	; case 3
 17392  0055F6  E102 EFBB  F034    	bz	_USBStdFeatureReqHandler
 17393  0055FC  0A06               	xorlw	6	; case 5
 17394  0055FE  E0C9               	bz	i2l1667
 17395  005600  0A03               	xorlw	3	; case 6
 17396  005602  E102 EF8A  F031    	bz	_USBStdGetDscHandler
 17397  005608  0A01               	xorlw	1	; case 7
 17398  00560A  E0E3               	bz	i2l6588
 17399  00560C  0A0F               	xorlw	15	; case 8
 17400  00560E  E0C6               	bz	i2l6566
 17401  005610  0A01               	xorlw	1	; case 9
 17402  005612  E102 EF62  F02B    	bz	_USBStdSetCfgHandler
 17403  005618  0A03               	xorlw	3	; case 10
 17404  00561A  E0C8               	bz	i2l6578
 17405  00561C  0A01               	xorlw	1	; case 11
 17406  00561E  E0D1               	bz	i2l1676
 17407  005620  0A07               	xorlw	7	; case 12
 17408  005622  0012               	return	
 17409  005624                     __end_of_USBCheckStdRequest:
 17410                           	opt stack 0
 17411                           pclatu	equ	0xFFB
 17412                           pclath	equ	0xFFA
 17413                           tblptru	equ	0xFF8
 17414                           tblptrh	equ	0xFF7
 17415                           tblptrl	equ	0xFF6
 17416                           tablat	equ	0xFF5
 17417                           prodh	equ	0xFF4
 17418                           prodl	equ	0xFF3
 17419                           intcon	equ	0xFF2
 17420                           postinc0	equ	0xFEE
 17421                           wreg	equ	0xFE8
 17422                           indf1	equ	0xFE7
 17423                           postdec1	equ	0xFE5
 17424                           fsr1h	equ	0xFE2
 17425                           fsr1l	equ	0xFE1
 17426                           indf2	equ	0xFDF
 17427                           postinc2	equ	0xFDE
 17428                           postdec2	equ	0xFDD
 17429                           plusw2	equ	0xFDB
 17430                           fsr2h	equ	0xFDA
 17431                           fsr2l	equ	0xFD9
 17432                           status	equ	0xFD8
 17433                           
 17434 ;; *************** function _USBStdSetCfgHandler *****************
 17435 ;; Defined at:
 17436 ;;		line 1629 in file "../Includes/Usb/framework/usb_device.c"
 17437 ;; Parameters:    Size  Location     Type
 17438 ;;		None
 17439 ;; Auto vars:     Size  Location     Type
 17440 ;;  i               1   21[COMRAM] unsigned char 
 17441 ;; Return value:  Size  Location     Type
 17442 ;;                  1    wreg      void 
 17443 ;; Registers used:
 17444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17445 ;; Tracked objects:
 17446 ;;		On entry : B/4
 17447 ;;		On exit  : F/0
 17448 ;;		Unchanged: 0/0
 17449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17450 ;;      Params:         0       0       0       0       0       0       0       0       0
 17451 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17452 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17453 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17454 ;;Total ram usage:        1 bytes
 17455 ;; Hardware stack levels used:    1
 17456 ;; Hardware stack levels required when called:    5
 17457 ;; This function calls:
 17458 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17459 ;;		i2_memset
 17460 ;; This function is called by:
 17461 ;;		_USBCheckStdRequest
 17462 ;; This function uses a non-reentrant model
 17463 ;;
 17464                           
 17465                           	psect	text89
 17466  0056C4                     __ptext89:
 17467                           	opt stack 0
 17468  0056C4                     _USBStdSetCfgHandler:
 17469                           	opt stack 10
 17470                           
 17471                           ;usb_device.c: 1631: uint8_t i;
 17472                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 17473                           
 17474                           ;incstack = 0
 17475  0056C4  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17476                           
 17477                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 17478  0056C6  0E6B               	movlw	107
 17479  0056C8  6E2E               	movwf	i2memset@p1,c
 17480  0056CA  0E0F               	movlw	15
 17481  0056CC  6E2F               	movwf	i2memset@p1+1,c
 17482  0056CE  6A31               	clrf	i2memset@c+1,c
 17483  0056D0  6A30               	clrf	i2memset@c,c
 17484  0056D2  6A33               	clrf	i2memset@n+1,c
 17485  0056D4  0E02               	movlw	2
 17486  0056D6  6E32               	movwf	i2memset@n,c
 17487  0056D8  EC3C  F023         	call	i2_memset	;wreg free
 17488                           
 17489                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 17490  0056DC  6A2E               	clrf	i2memset@p1,c
 17491  0056DE  0E04               	movlw	4
 17492  0056E0  6E2F               	movwf	i2memset@p1+1,c
 17493  0056E2  6A31               	clrf	i2memset@c+1,c
 17494  0056E4  6A30               	clrf	i2memset@c,c
 17495  0056E6  6A33               	clrf	i2memset@n+1,c
 17496  0056E8  0E30               	movlw	48
 17497  0056EA  6E32               	movwf	i2memset@n,c
 17498  0056EC  EC3C  F023         	call	i2_memset	;wreg free
 17499                           
 17500                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 17501  0056F0  8C60               	bsf	3936,6,c	;volatile
 17502                           
 17503                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 17504  0056F2  6A43               	clrf	USBStdSetCfgHandler@i,c
 17505  0056F4                     i2l6154:
 17506                           
 17507                           ;usb_device.c: 1649: {
 17508                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 17509  0056F4  5043               	movf	USBStdSetCfgHandler@i,w,c
 17510  0056F6  0F6A               	addlw	low _ep_data_in
 17511  0056F8  6ED9               	movwf	fsr2l,c
 17512  0056FA  6ADA               	clrf	fsr2h,c
 17513  0056FC  6ADF               	clrf	indf2,c
 17514                           
 17515                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 17516  0056FE  5043               	movf	USBStdSetCfgHandler@i,w,c
 17517  005700  0F6D               	addlw	low _ep_data_out
 17518  005702  6ED9               	movwf	fsr2l,c
 17519  005704  6ADA               	clrf	fsr2h,c
 17520  005706  6ADF               	clrf	indf2,c
 17521  005708  2A43               	incf	USBStdSetCfgHandler@i,f,c
 17522  00570A  0E02               	movlw	2
 17523  00570C  6443               	cpfsgt	USBStdSetCfgHandler@i,c
 17524  00570E  D7F2               	goto	i2l6154
 17525                           
 17526                           ;usb_device.c: 1652: }
 17527                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 17528  005710  0EB6               	movlw	low _USBAlternateInterface
 17529  005712  6E2E               	movwf	i2memset@p1,c
 17530  005714  6A2F               	clrf	i2memset@p1+1,c
 17531  005716  6A31               	clrf	i2memset@c+1,c
 17532  005718  6A30               	clrf	i2memset@c,c
 17533  00571A  6A33               	clrf	i2memset@n+1,c
 17534  00571C  0E02               	movlw	2
 17535  00571E  6E32               	movwf	i2memset@n,c
 17536  005720  EC3C  F023         	call	i2_memset	;wreg free
 17537                           
 17538                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 17539  005724  9C60               	bcf	3936,6,c	;volatile
 17540                           
 17541                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17542  005726  0E08               	movlw	8
 17543  005728  6E0F               	movwf	_pBDTEntryIn,c
 17544  00572A  0E04               	movlw	4
 17545  00572C  6E10               	movwf	_pBDTEntryIn+1,c
 17546                           
 17547                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 17548  00572E  0E00               	movlw	0
 17549  005730  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 17550  005732  0E04               	movlw	4
 17551  005734  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 17552                           
 17553                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17554  005736  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17555  00573A  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17556                           
 17557                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 17558  00573E  C432 F02C          	movff	1074,_USBActiveConfiguration	;volatile
 17559                           
 17560                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 17561  005742  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 17562  005744  E104               	bnz	i2l6176
 17563                           
 17564                           ;usb_device.c: 1671: {
 17565                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 17566  005746  0E10               	movlw	16
 17567  005748  0100               	movlb	0	; () banked
 17568  00574A  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 17569                           
 17570                           ;usb_device.c: 1674: }
 17571  00574C  0C10               	retlw	16
 17572  00574E                     i2l6176:
 17573                           
 17574                           ;usb_device.c: 1675: else
 17575                           ;usb_device.c: 1676: {
 17576                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 17577  00574E  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17578  005750  0E01               	movlw	1
 17579  005752  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17580  005754  0E2C               	movlw	low _USBActiveConfiguration
 17581  005756  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17582  005758  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17583  00575A  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17584  00575C  0E01               	movlw	1
 17585  00575E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17586  005760  ECF3  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17587                           
 17588                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 17589  005764  0E20               	movlw	32
 17590  005766  0100               	movlb	0	; () banked
 17591  005768  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 17592                           
 17593                           ; BSR set to: 0
 17594  00576A  0C20               	retlw	32	;funcret
 17595  00576C                     __end_of_USBStdSetCfgHandler:
 17596                           	opt stack 0
 17597                           pclatu	equ	0xFFB
 17598                           pclath	equ	0xFFA
 17599                           tblptru	equ	0xFF8
 17600                           tblptrh	equ	0xFF7
 17601                           tblptrl	equ	0xFF6
 17602                           tablat	equ	0xFF5
 17603                           prodh	equ	0xFF4
 17604                           prodl	equ	0xFF3
 17605                           intcon	equ	0xFF2
 17606                           postinc0	equ	0xFEE
 17607                           wreg	equ	0xFE8
 17608                           indf1	equ	0xFE7
 17609                           postdec1	equ	0xFE5
 17610                           fsr1h	equ	0xFE2
 17611                           fsr1l	equ	0xFE1
 17612                           indf2	equ	0xFDF
 17613                           postinc2	equ	0xFDE
 17614                           postdec2	equ	0xFDD
 17615                           plusw2	equ	0xFDB
 17616                           fsr2h	equ	0xFDA
 17617                           fsr2l	equ	0xFD9
 17618                           status	equ	0xFD8
 17619                           
 17620 ;; *************** function i2_memset *****************
 17621 ;; Defined at:
 17622 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 17623 ;; Parameters:    Size  Location     Type
 17624 ;;  p1              2    0[COMRAM] PTR void 
 17625 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17626 ;;  c               2    2[COMRAM] int 
 17627 ;;  n               2    4[COMRAM] unsigned int 
 17628 ;; Auto vars:     Size  Location     Type
 17629 ;;  memset          2    6[COMRAM] PTR unsigned char 
 17630 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17631 ;; Return value:  Size  Location     Type
 17632 ;;                  2    0[COMRAM] PTR void 
 17633 ;; Registers used:
 17634 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17635 ;; Tracked objects:
 17636 ;;		On entry : 0/0
 17637 ;;		On exit  : 0/0
 17638 ;;		Unchanged: 0/0
 17639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17640 ;;      Params:         6       0       0       0       0       0       0       0       0
 17641 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17642 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17643 ;;      Totals:         8       0       0       0       0       0       0       0       0
 17644 ;;Total ram usage:        8 bytes
 17645 ;; Hardware stack levels used:    1
 17646 ;; This function calls:
 17647 ;;		Nothing
 17648 ;; This function is called by:
 17649 ;;		_USBStdSetCfgHandler
 17650 ;;		i2_USBDeviceInit
 17651 ;; This function uses a non-reentrant model
 17652 ;;
 17653                           
 17654                           	psect	text90
 17655  004678                     __ptext90:
 17656                           	opt stack 0
 17657  004678                     i2_memset:
 17658                           	opt stack 17
 17659                           
 17660                           ; BSR set to: 0
 17661                           ;incstack = 0
 17662  004678  C02E  F034         	movff	i2memset@p1,i2memset@p
 17663  00467C  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 17664  004680  D008               	goto	i2l5958
 17665  004682                     i2l5954:
 17666  004682  C034  FFD9         	movff	i2memset@p,fsr2l
 17667  004686  C035  FFDA         	movff	i2memset@p+1,fsr2h
 17668  00468A  C030  FFDF         	movff	i2memset@c,indf2
 17669  00468E  4A34               	infsnz	i2memset@p,f,c
 17670  004690  2A35               	incf	i2memset@p+1,f,c
 17671  004692                     i2l5958:
 17672  004692  0632               	decf	i2memset@n,f,c
 17673  004694  A0D8               	btfss	status,0,c
 17674  004696  0633               	decf	i2memset@n+1,f,c
 17675  004698  2832               	incf	i2memset@n,w,c
 17676  00469A  E1F3               	bnz	i2l5954
 17677  00469C  2833               	incf	i2memset@n+1,w,c
 17678  00469E  E1F1               	bnz	i2l5954
 17679  0046A0  0012               	return		;funcret
 17680  0046A2                     __end_ofi2_memset:
 17681                           	opt stack 0
 17682                           pclatu	equ	0xFFB
 17683                           pclath	equ	0xFFA
 17684                           tblptru	equ	0xFF8
 17685                           tblptrh	equ	0xFF7
 17686                           tblptrl	equ	0xFF6
 17687                           tablat	equ	0xFF5
 17688                           prodh	equ	0xFF4
 17689                           prodl	equ	0xFF3
 17690                           intcon	equ	0xFF2
 17691                           postinc0	equ	0xFEE
 17692                           wreg	equ	0xFE8
 17693                           indf1	equ	0xFE7
 17694                           postdec1	equ	0xFE5
 17695                           fsr1h	equ	0xFE2
 17696                           fsr1l	equ	0xFE1
 17697                           indf2	equ	0xFDF
 17698                           postinc2	equ	0xFDE
 17699                           postdec2	equ	0xFDD
 17700                           plusw2	equ	0xFDB
 17701                           fsr2h	equ	0xFDA
 17702                           fsr2l	equ	0xFD9
 17703                           status	equ	0xFD8
 17704                           
 17705 ;; *************** function _USBStdGetStatusHandler *****************
 17706 ;; Defined at:
 17707 ;;		line 1773 in file "../Includes/Usb/framework/usb_device.c"
 17708 ;; Parameters:    Size  Location     Type
 17709 ;;		None
 17710 ;; Auto vars:     Size  Location     Type
 17711 ;;  p               2    0[COMRAM] PTR struct __BDT
 17712 ;;		 -> BDT(48), NULL(0), 
 17713 ;; Return value:  Size  Location     Type
 17714 ;;                  1    wreg      void 
 17715 ;; Registers used:
 17716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17717 ;; Tracked objects:
 17718 ;;		On entry : B/4
 17719 ;;		On exit  : F/4
 17720 ;;		Unchanged: 0/0
 17721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17722 ;;      Params:         0       0       0       0       0       0       0       0       0
 17723 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17724 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17725 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17726 ;;Total ram usage:        2 bytes
 17727 ;; Hardware stack levels used:    1
 17728 ;; This function calls:
 17729 ;;		Nothing
 17730 ;; This function is called by:
 17731 ;;		_USBCheckStdRequest
 17732 ;; This function uses a non-reentrant model
 17733 ;;
 17734                           
 17735                           	psect	text91
 17736  005120                     __ptext91:
 17737                           	opt stack 0
 17738  005120                     _USBStdGetStatusHandler:
 17739                           	opt stack 15
 17740                           
 17741                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 17742                           
 17743                           ;incstack = 0
 17744  005120  0104               	movlb	4	; () banked
 17745  005122  6B38               	clrf	56,b	;volatile
 17746                           
 17747                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 17748  005124  6B39               	clrf	57,b	;volatile
 17749                           
 17750                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 17751  005126  D02A               	goto	i2l6226
 17752  005128                     i2l1603:
 17753                           
 17754                           ; BSR set to: 4
 17755                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 17756  005128  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17757                           
 17758                           ; BSR set to: 4
 17759                           ;usb_device.c: 1789: }
 17760                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 17761                           
 17762                           ;usb_device.c: 1786: if(0 == 1)
 17763  00512A  041D               	decf	_RemoteWakeup,w,c	;volatile
 17764  00512C  E12E               	bnz	i2l1606
 17765                           
 17766                           ; BSR set to: 4
 17767                           ;usb_device.c: 1792: {
 17768                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 17769  00512E  8338               	bsf	56,1,b	;volatile
 17770  005130  D02C               	goto	i2l1606
 17771  005132                     i2l1607:
 17772                           
 17773                           ; BSR set to: 4
 17774                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 17775  005132  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17776                           
 17777                           ;usb_device.c: 1798: break;
 17778  005134  D02A               	goto	i2l1606
 17779  005136                     i2l1608:
 17780                           
 17781                           ; BSR set to: 4
 17782                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 17783  005136  8E0C               	bsf	_inPipes+3,7,c	;volatile
 17784                           
 17785                           ;usb_device.c: 1804: {
 17786                           ;usb_device.c: 1805: BDT_ENTRY *p;
 17787                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 17788  005138  BF34               	btfsc	52,7,b	;volatile
 17789  00513A  D006               	goto	i2l6216
 17790                           
 17791                           ; BSR set to: 4
 17792                           ;usb_device.c: 1808: {
 17793                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17794  00513C  5134               	movf	52,w,b	;volatile
 17795  00513E  0B0F               	andlw	15
 17796  005140  0D02               	mullw	2
 17797  005142  50F3               	movf	prodl,w,c
 17798  005144  0F60               	addlw	low _pBDTEntryOut
 17799  005146  D005               	goto	L25
 17800  005148                     i2l6216:
 17801                           
 17802                           ; BSR set to: 4
 17803                           ;usb_device.c: 1811: else
 17804                           ;usb_device.c: 1812: {
 17805                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17806  005148  5134               	movf	52,w,b	;volatile
 17807  00514A  0B0F               	andlw	15
 17808  00514C  0D02               	mullw	2
 17809  00514E  50F3               	movf	prodl,w,c
 17810  005150  0F0F               	addlw	low _pBDTEntryIn
 17811  005152                     L25:
 17812  005152  6ED9               	movwf	fsr2l,c
 17813  005154  6ADA               	clrf	fsr2h,c
 17814  005156  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 17815  00515A  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 17816                           
 17817                           ; BSR set to: 4
 17818                           ;usb_device.c: 1814: }
 17819                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 17820  00515E  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17821  005162  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17822  005166  AEDF               	btfss	indf2,7,c
 17823  005168  D010               	goto	i2l1606
 17824                           
 17825                           ; BSR set to: 4
 17826  00516A  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17827  00516E  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17828  005172  A4DF               	btfss	indf2,2,c
 17829  005174  D00A               	goto	i2l1606
 17830                           
 17831                           ; BSR set to: 4
 17832                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 17833  005176  0E01               	movlw	1
 17834  005178  6F38               	movwf	56,b	;volatile
 17835  00517A  D007               	goto	i2l1606
 17836  00517C                     i2l6226:
 17837                           
 17838                           ; BSR set to: 4
 17839  00517C  5130               	movf	48,w,b	;volatile
 17840  00517E  0B1F               	andlw	31
 17841                           
 17842                           ; Switch size 1, requested type "speed"
 17843                           ; Number of cases is 3, Range of values is 0 to 2
 17844                           ; switch strategies available:
 17845                           ; Name         Instructions Cycles
 17846                           ; simple_byte           10     6 (average)
 17847                           ;	Chosen strategy is simple_byte
 17848  005180  E0D3               	bz	i2l1603
 17849  005182  0A01               	xorlw	1	; case 1
 17850  005184  E0D6               	bz	i2l1607
 17851  005186  0A03               	xorlw	3	; case 2
 17852  005188  E0D6               	bz	i2l1608
 17853  00518A                     i2l1606:
 17854                           
 17855                           ; BSR set to: 4
 17856                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 17857  00518A  AE0C               	btfss	_inPipes+3,7,c	;volatile
 17858  00518C  0012               	return	
 17859                           
 17860                           ; BSR set to: 4
 17861                           ;usb_device.c: 1823: {
 17862                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 17863  00518E  0E38               	movlw	56
 17864  005190  6E09               	movwf	_inPipes,c	;volatile
 17865  005192  0E04               	movlw	4
 17866  005194  6E0A               	movwf	_inPipes+1,c	;volatile
 17867                           
 17868                           ; BSR set to: 4
 17869                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17870  005196  800C               	bsf	_inPipes+3,0,c	;volatile
 17871                           
 17872                           ; BSR set to: 4
 17873                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 17874  005198  0E02               	movlw	2
 17875  00519A  6E0D               	movwf	_inPipes+4,c	;volatile
 17876                           
 17877                           ; BSR set to: 4
 17878  00519C  0C02               	retlw	2	;funcret
 17879  00519E                     __end_of_USBStdGetStatusHandler:
 17880                           	opt stack 0
 17881                           pclatu	equ	0xFFB
 17882                           pclath	equ	0xFFA
 17883                           tblptru	equ	0xFF8
 17884                           tblptrh	equ	0xFF7
 17885                           tblptrl	equ	0xFF6
 17886                           tablat	equ	0xFF5
 17887                           prodh	equ	0xFF4
 17888                           prodl	equ	0xFF3
 17889                           intcon	equ	0xFF2
 17890                           postinc0	equ	0xFEE
 17891                           wreg	equ	0xFE8
 17892                           indf1	equ	0xFE7
 17893                           postdec1	equ	0xFE5
 17894                           fsr1h	equ	0xFE2
 17895                           fsr1l	equ	0xFE1
 17896                           indf2	equ	0xFDF
 17897                           postinc2	equ	0xFDE
 17898                           postdec2	equ	0xFDD
 17899                           plusw2	equ	0xFDB
 17900                           fsr2h	equ	0xFDA
 17901                           fsr2l	equ	0xFD9
 17902                           status	equ	0xFD8
 17903                           
 17904 ;; *************** function _USBStdGetDscHandler *****************
 17905 ;; Defined at:
 17906 ;;		line 1704 in file "../Includes/Usb/framework/usb_device.c"
 17907 ;; Parameters:    Size  Location     Type
 17908 ;;		None
 17909 ;; Auto vars:     Size  Location     Type
 17910 ;;		None
 17911 ;; Return value:  Size  Location     Type
 17912 ;;                  1    wreg      void 
 17913 ;; Registers used:
 17914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17915 ;; Tracked objects:
 17916 ;;		On entry : B/4
 17917 ;;		On exit  : 0/0
 17918 ;;		Unchanged: 0/0
 17919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17920 ;;      Params:         0       0       0       0       0       0       0       0       0
 17921 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17922 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17923 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17924 ;;Total ram usage:        2 bytes
 17925 ;; Hardware stack levels used:    1
 17926 ;; This function calls:
 17927 ;;		Nothing
 17928 ;; This function is called by:
 17929 ;;		_USBCheckStdRequest
 17930 ;; This function uses a non-reentrant model
 17931 ;;
 17932                           
 17933                           	psect	text92
 17934  006314                     __ptext92:
 17935                           	opt stack 0
 17936  006314                     _USBStdGetDscHandler:
 17937                           	opt stack 15
 17938                           
 17939                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 17940                           
 17941                           ; BSR set to: 4
 17942                           ;incstack = 0
 17943  006314  0E80               	movlw	128
 17944  006316  0104               	movlb	4	; () banked
 17945  006318  1930               	xorwf	48,w,b	;volatile
 17946  00631A  A4D8               	btfss	status,2,c
 17947  00631C  0012               	return	
 17948                           
 17949                           ; BSR set to: 4
 17950                           ;usb_device.c: 1707: {
 17951                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 17952  00631E  0EC0               	movlw	192
 17953  006320  6E0C               	movwf	_inPipes+3,c	;volatile
 17954                           
 17955                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 17956  006322  D071               	goto	i2l6204
 17957  006324                     i2l6184:
 17958                           
 17959                           ; BSR set to: 4
 17960                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 17961  006324  0E4C               	movlw	low _device_dsc
 17962  006326  6E09               	movwf	_inPipes,c	;volatile
 17963  006328  0E7B               	movlw	high _device_dsc
 17964  00632A  6E0A               	movwf	_inPipes+1,c	;volatile
 17965                           
 17966                           ; BSR set to: 4
 17967                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 17968  00632C  6A0E               	clrf	_inPipes+5,c	;volatile
 17969  00632E  0E12               	movlw	18
 17970  006330  6E0D               	movwf	_inPipes+4,c	;volatile
 17971                           
 17972                           ;usb_device.c: 1715: break;
 17973  006332  0C12               	retlw	18
 17974  006334                     i2l6188:
 17975                           
 17976                           ; BSR set to: 4
 17977                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 17978  006334  5132               	movf	50,w,b	;volatile
 17979  006336  E13D               	bnz	i2l1593
 17980                           
 17981                           ; BSR set to: 4
 17982                           ;usb_device.c: 1721: {
 17983                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 17984  006338  5132               	movf	50,w,b	;volatile
 17985  00633A  0D02               	mullw	2
 17986  00633C  0E9F               	movlw	low _USB_CD_Ptr
 17987  00633E  24F3               	addwf	prodl,w,c
 17988  006340  6EF6               	movwf	tblptrl,c
 17989  006342  0E77               	movlw	high _USB_CD_Ptr
 17990  006344  20F4               	addwfc	prodh,w,c
 17991  006346  6EF7               	movwf	tblptrh,c
 17992  006348                     	if	0	;There are less than 3 active tblptr bytes
 17993  006348                     	endif
 17994  006348  0009               	tblrd		*+
 17995  00634A  CFF5 F009          	movff	tablat,_inPipes	;volatile
 17996  00634E  000A               	tblrd		*-
 17997  006350  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 17998                           
 17999                           ; BSR set to: 4
 18000                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 18001  006354  0E02               	movlw	2
 18002  006356  2409               	addwf	_inPipes,w,c	;volatile
 18003  006358  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 18004  00635A  0E00               	movlw	0
 18005  00635C  200A               	addwfc	_inPipes+1,w,c	;volatile
 18006  00635E  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 18007  006360  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 18008  006364  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 18009  006368  6AF8               	clrf	tblptru,c
 18010  00636A  0E07               	movlw	(high __ramtop+-1)
 18011  00636C  64F7               	cpfsgt	tblptrh,c
 18012  00636E  D003               	bra	i2u389_47
 18013  006370  0008               	tblrd		*
 18014  006372  50F5               	movf	tablat,w,c
 18015  006374  D005               	bra	i2u389_40
 18016  006376                     i2u389_47:
 18017  006376  CFF6 FFE1          	movff	tblptrl,fsr1l
 18018  00637A  CFF7 FFE2          	movff	tblptrh,fsr1h
 18019  00637E  50E7               	movf	indf1,w,c
 18020  006380                     i2u389_40:
 18021  006380  6E0D               	movwf	_inPipes+4,c	;volatile
 18022                           
 18023                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 18024  006382  0E03               	movlw	3
 18025  006384  2409               	addwf	_inPipes,w,c	;volatile
 18026  006386  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 18027  006388  0E00               	movlw	0
 18028  00638A  200A               	addwfc	_inPipes+1,w,c	;volatile
 18029  00638C  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 18030  00638E  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 18031  006392  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 18032  006396  6AF8               	clrf	tblptru,c
 18033  006398  0E07               	movlw	(high __ramtop+-1)
 18034  00639A  64F7               	cpfsgt	tblptrh,c
 18035  00639C  D003               	bra	i2u390_47
 18036  00639E  0008               	tblrd		*
 18037  0063A0  50F5               	movf	tablat,w,c
 18038  0063A2  D005               	bra	i2u390_40
 18039  0063A4                     i2u390_47:
 18040  0063A4  CFF6 FFE1          	movff	tblptrl,fsr1l
 18041  0063A8  CFF7 FFE2          	movff	tblptrh,fsr1h
 18042  0063AC  50E7               	movf	indf1,w,c
 18043  0063AE                     i2u390_40:
 18044  0063AE  6E0E               	movwf	_inPipes+5,c	;volatile
 18045                           
 18046                           ;usb_device.c: 1729: }
 18047  0063B0  0012               	return	
 18048  0063B2                     i2l1593:
 18049                           
 18050                           ; BSR set to: 4
 18051                           ;usb_device.c: 1730: else
 18052                           ;usb_device.c: 1731: {
 18053                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 18054  0063B2  6A0C               	clrf	_inPipes+3,c	;volatile
 18055  0063B4  0012               	return	
 18056  0063B6                     i2l6196:
 18057                           
 18058                           ; BSR set to: 4
 18059                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 18060  0063B6  0E03               	movlw	3
 18061  0063B8  6132               	cpfslt	50,b	;volatile
 18062  0063BA  D021               	goto	i2l1596
 18063                           
 18064                           ; BSR set to: 4
 18065                           ;usb_device.c: 1740: {
 18066                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 18067  0063BC  5132               	movf	50,w,b	;volatile
 18068  0063BE  0D02               	mullw	2
 18069  0063C0  0E99               	movlw	low _USB_SD_Ptr
 18070  0063C2  24F3               	addwf	prodl,w,c
 18071  0063C4  6EF6               	movwf	tblptrl,c
 18072  0063C6  0E77               	movlw	high _USB_SD_Ptr
 18073  0063C8  20F4               	addwfc	prodh,w,c
 18074  0063CA  6EF7               	movwf	tblptrh,c
 18075  0063CC                     	if	0	;There are less than 3 active tblptr bytes
 18076  0063CC                     	endif
 18077  0063CC  0009               	tblrd		*+
 18078  0063CE  CFF5 F009          	movff	tablat,_inPipes	;volatile
 18079  0063D2  000A               	tblrd		*-
 18080  0063D4  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 18081                           
 18082                           ; BSR set to: 4
 18083                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 18084  0063D8  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 18085  0063DC  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 18086  0063E0  6AF8               	clrf	tblptru,c
 18087  0063E2  0E07               	movlw	(high __ramtop+-1)
 18088  0063E4  64F7               	cpfsgt	tblptrh,c
 18089  0063E6  D003               	bra	i2u392_47
 18090  0063E8  0008               	tblrd		*
 18091  0063EA  50F5               	movf	tablat,w,c
 18092  0063EC  D005               	bra	i2u392_40
 18093  0063EE                     i2u392_47:
 18094  0063EE  CFF6 FFE1          	movff	tblptrl,fsr1l
 18095  0063F2  CFF7 FFE2          	movff	tblptrh,fsr1h
 18096  0063F6  50E7               	movf	indf1,w,c
 18097  0063F8                     i2u392_40:
 18098  0063F8  6E0D               	movwf	_inPipes+4,c	;volatile
 18099  0063FA  6A0E               	clrf	_inPipes+5,c	;volatile
 18100                           
 18101                           ;usb_device.c: 1745: }
 18102  0063FC  0012               	return	
 18103  0063FE                     i2l1596:
 18104                           
 18105                           ; BSR set to: 4
 18106                           ;usb_device.c: 1746: else
 18107                           ;usb_device.c: 1747: {
 18108                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 18109  0063FE  6A0C               	clrf	_inPipes+3,c	;volatile
 18110  006400  0012               	return	
 18111  006402                     i2l1598:
 18112                           
 18113                           ; BSR set to: 4
 18114                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 18115  006402  6A0C               	clrf	_inPipes+3,c	;volatile
 18116                           
 18117                           ;usb_device.c: 1753: break;
 18118  006404  0012               	return	
 18119  006406                     i2l6204:
 18120                           
 18121                           ; BSR set to: 4
 18122  006406  5133               	movf	51,w,b	;volatile
 18123                           
 18124                           ; Switch size 1, requested type "speed"
 18125                           ; Number of cases is 3, Range of values is 1 to 3
 18126                           ; switch strategies available:
 18127                           ; Name         Instructions Cycles
 18128                           ; simple_byte           10     6 (average)
 18129                           ;	Chosen strategy is simple_byte
 18130  006408  0A01               	xorlw	1	; case 1
 18131  00640A  E08C               	bz	i2l6184
 18132  00640C  0A03               	xorlw	3	; case 2
 18133  00640E  E092               	bz	i2l6188
 18134  006410  0A01               	xorlw	1	; case 3
 18135  006412  E0D1               	bz	i2l6196
 18136  006414  D7F6               	goto	i2l1598
 18137  006416                     __end_of_USBStdGetDscHandler:
 18138                           	opt stack 0
 18139                           pclatu	equ	0xFFB
 18140                           pclath	equ	0xFFA
 18141                           tblptru	equ	0xFF8
 18142                           tblptrh	equ	0xFF7
 18143                           tblptrl	equ	0xFF6
 18144                           tablat	equ	0xFF5
 18145                           prodh	equ	0xFF4
 18146                           prodl	equ	0xFF3
 18147                           intcon	equ	0xFF2
 18148                           postinc0	equ	0xFEE
 18149                           wreg	equ	0xFE8
 18150                           indf1	equ	0xFE7
 18151                           postdec1	equ	0xFE5
 18152                           fsr1h	equ	0xFE2
 18153                           fsr1l	equ	0xFE1
 18154                           indf2	equ	0xFDF
 18155                           postinc2	equ	0xFDE
 18156                           postdec2	equ	0xFDD
 18157                           plusw2	equ	0xFDB
 18158                           fsr2h	equ	0xFDA
 18159                           fsr2l	equ	0xFD9
 18160                           status	equ	0xFD8
 18161                           
 18162 ;; *************** function _USBStdFeatureReqHandler *****************
 18163 ;; Defined at:
 18164 ;;		line 2385 in file "../Includes/Usb/framework/usb_device.c"
 18165 ;; Parameters:    Size  Location     Type
 18166 ;;		None
 18167 ;; Auto vars:     Size  Location     Type
 18168 ;;  p               2   26[COMRAM] PTR struct __BDT
 18169 ;;		 -> BDT(48), NULL(0), 
 18170 ;;  pUEP            2   23[COMRAM] PTR unsigned char 
 18171 ;;		 -> UEP0(1), 
 18172 ;;  current_ep_d    1   25[COMRAM] struct .
 18173 ;; Return value:  Size  Location     Type
 18174 ;;                  1    wreg      void 
 18175 ;; Registers used:
 18176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18177 ;; Tracked objects:
 18178 ;;		On entry : B/4
 18179 ;;		On exit  : B/0
 18180 ;;		Unchanged: 0/0
 18181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18182 ;;      Params:         0       0       0       0       0       0       0       0       0
 18183 ;;      Locals:         5       0       0       0       0       0       0       0       0
 18184 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18185 ;;      Totals:         7       0       0       0       0       0       0       0       0
 18186 ;;Total ram usage:        7 bytes
 18187 ;; Hardware stack levels used:    1
 18188 ;; Hardware stack levels required when called:    5
 18189 ;; This function calls:
 18190 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18191 ;; This function is called by:
 18192 ;;		_USBCheckStdRequest
 18193 ;; This function uses a non-reentrant model
 18194 ;;
 18195                           
 18196                           	psect	text93
 18197  006976                     __ptext93:
 18198                           	opt stack 0
 18199  006976                     _USBStdFeatureReqHandler:
 18200                           	opt stack 10
 18201                           
 18202                           ;usb_device.c: 2387: BDT_ENTRY *p;
 18203                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 18204                           ;usb_device.c: 2390: unsigned char* pUEP;
 18205                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 18206                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 18207                           
 18208                           ;incstack = 0
 18209  006976  0104               	movlb	4	; () banked
 18210  006978  0532               	decf	50,w,b	;volatile
 18211  00697A  E10B               	bnz	i2l6244
 18212                           
 18213                           ; BSR set to: 4
 18214  00697C  5130               	movf	48,w,b	;volatile
 18215  00697E  0B1F               	andlw	31
 18216  006980  E108               	bnz	i2l6244
 18217                           
 18218                           ; BSR set to: 4
 18219                           ;usb_device.c: 2395: {
 18220                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 18221  006982  8E0C               	bsf	_inPipes+3,7,c	;volatile
 18222                           
 18223                           ; BSR set to: 4
 18224                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 18225  006984  0E03               	movlw	3
 18226  006986  1931               	xorwf	49,w,b	;volatile
 18227  006988  E103               	bnz	i2l1683
 18228                           
 18229                           ; BSR set to: 4
 18230                           ;usb_device.c: 2398: RemoteWakeup = 1;
 18231  00698A  0E01               	movlw	1
 18232  00698C  6E1D               	movwf	_RemoteWakeup,c	;volatile
 18233  00698E  D001               	goto	i2l6244
 18234  006990                     i2l1683:
 18235                           
 18236                           ; BSR set to: 4
 18237                           ;usb_device.c: 2399: else
 18238                           ;usb_device.c: 2400: RemoteWakeup = 0;
 18239  006990  6A1D               	clrf	_RemoteWakeup,c	;volatile
 18240  006992                     i2l6244:
 18241                           
 18242                           ; BSR set to: 4
 18243                           ;usb_device.c: 2401: }
 18244                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 18245                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 18246                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 18247                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 18248  006992  5132               	movf	50,w,b	;volatile
 18249  006994  A4D8               	btfss	status,2,c
 18250  006996  0012               	return	
 18251                           
 18252                           ; BSR set to: 4
 18253  006998  5130               	movf	48,w,b	;volatile
 18254  00699A  0B1F               	andlw	31
 18255  00699C  0A02               	xorlw	2
 18256  00699E  A4D8               	btfss	status,2,c
 18257  0069A0  0012               	return	
 18258                           
 18259                           ; BSR set to: 4
 18260  0069A2  5134               	movf	52,w,b	;volatile
 18261  0069A4  0B0F               	andlw	15
 18262  0069A6  B4D8               	btfsc	status,2,c
 18263  0069A8  0012               	return	
 18264                           
 18265                           ; BSR set to: 4
 18266  0069AA  5134               	movf	52,w,b	;volatile
 18267  0069AC  0B0F               	andlw	15
 18268  0069AE  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18269  0069B0  0E03               	movlw	3
 18270  0069B2  6043               	cpfslt	??_USBStdFeatureReqHandler,c
 18271  0069B4  0C03               	retlw	3
 18272                           
 18273                           ; BSR set to: 4
 18274  0069B6  0E20               	movlw	32
 18275  0069B8  0100               	movlb	0	; () banked
 18276  0069BA  1991               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 18277  0069BC  A4D8               	btfss	status,2,c
 18278  0069BE  0012               	return	
 18279                           
 18280                           ; BSR set to: 0
 18281                           ;usb_device.c: 2408: {
 18282                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 18283  0069C0  8E0C               	bsf	_inPipes+3,7,c	;volatile
 18284                           
 18285                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 18286  0069C2  0104               	movlb	4	; () banked
 18287  0069C4  BF34               	btfsc	52,7,b	;volatile
 18288  0069C6  D011               	goto	i2l6260
 18289                           
 18290                           ; BSR set to: 4
 18291                           ;usb_device.c: 2415: {
 18292                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 18293  0069C8  5134               	movf	52,w,b	;volatile
 18294  0069CA  0B0F               	andlw	15
 18295  0069CC  0D02               	mullw	2
 18296  0069CE  50F3               	movf	prodl,w,c
 18297  0069D0  0F60               	addlw	low _pBDTEntryOut
 18298  0069D2  6ED9               	movwf	fsr2l,c
 18299  0069D4  6ADA               	clrf	fsr2h,c
 18300  0069D6  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 18301  0069DA  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 18302                           
 18303                           ; BSR set to: 4
 18304                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 18305  0069DE  5134               	movf	52,w,b	;volatile
 18306  0069E0  0B0F               	andlw	15
 18307  0069E2  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18308  0069E4  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18309  0069E6  0F6D               	addlw	low _ep_data_out
 18310  0069E8  D010               	goto	L26
 18311  0069EA                     i2l6260:
 18312                           
 18313                           ; BSR set to: 4
 18314                           ;usb_device.c: 2419: else
 18315                           ;usb_device.c: 2420: {
 18316                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 18317  0069EA  5134               	movf	52,w,b	;volatile
 18318  0069EC  0B0F               	andlw	15
 18319  0069EE  0D02               	mullw	2
 18320  0069F0  50F3               	movf	prodl,w,c
 18321  0069F2  0F0F               	addlw	low _pBDTEntryIn
 18322  0069F4  6ED9               	movwf	fsr2l,c
 18323  0069F6  6ADA               	clrf	fsr2h,c
 18324  0069F8  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 18325  0069FC  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 18326                           
 18327                           ; BSR set to: 4
 18328                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 18329  006A00  5134               	movf	52,w,b	;volatile
 18330  006A02  0B0F               	andlw	15
 18331  006A04  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18332  006A06  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18333  006A08  0F6A               	addlw	low _ep_data_in
 18334  006A0A                     L26:
 18335  006A0A  6ED9               	movwf	fsr2l,c
 18336  006A0C  6ADA               	clrf	fsr2h,c
 18337  006A0E  50DF               	movf	indf2,w,c
 18338  006A10  6E47               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 18339                           
 18340                           ; BSR set to: 4
 18341                           ;usb_device.c: 2423: }
 18342                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 18343  006A12  B047               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 18344  006A14  D002               	goto	i2l6268
 18345                           
 18346                           ; BSR set to: 4
 18347                           ;usb_device.c: 2429: {
 18348                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 18349  006A16  9448               	bcf	USBStdFeatureReqHandler@p,2,c
 18350                           
 18351                           ;usb_device.c: 2431: }
 18352  006A18  D001               	goto	i2l6270
 18353  006A1A                     i2l6268:
 18354                           
 18355                           ; BSR set to: 4
 18356                           ;usb_device.c: 2432: else
 18357                           ;usb_device.c: 2433: {
 18358                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 18359  006A1A  8448               	bsf	USBStdFeatureReqHandler@p,2,c
 18360  006A1C                     i2l6270:
 18361                           
 18362                           ; BSR set to: 4
 18363                           ;usb_device.c: 2435: }
 18364                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 18365  006A1C  BF34               	btfsc	52,7,b	;volatile
 18366  006A1E  D006               	goto	i2l6274
 18367                           
 18368                           ; BSR set to: 4
 18369                           ;usb_device.c: 2440: {
 18370                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 18371  006A20  5134               	movf	52,w,b	;volatile
 18372  006A22  0B0F               	andlw	15
 18373  006A24  0D02               	mullw	2
 18374  006A26  50F3               	movf	prodl,w,c
 18375  006A28  0F60               	addlw	low _pBDTEntryOut
 18376  006A2A  D005               	goto	L27
 18377  006A2C                     i2l6274:
 18378                           
 18379                           ; BSR set to: 4
 18380                           ;usb_device.c: 2443: else
 18381                           ;usb_device.c: 2444: {
 18382                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 18383  006A2C  5134               	movf	52,w,b	;volatile
 18384  006A2E  0B0F               	andlw	15
 18385  006A30  0D02               	mullw	2
 18386  006A32  50F3               	movf	prodl,w,c
 18387  006A34  0F0F               	addlw	low _pBDTEntryIn
 18388  006A36                     L27:
 18389  006A36  6ED9               	movwf	fsr2l,c
 18390  006A38  6ADA               	clrf	fsr2h,c
 18391  006A3A  C048  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 18392  006A3E  C049  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 18393                           
 18394                           ; BSR set to: 4
 18395                           ;usb_device.c: 2446: }
 18396                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 18397  006A42  0E03               	movlw	3
 18398  006A44  1931               	xorwf	49,w,b	;volatile
 18399  006A46  E123               	bnz	i2l6286
 18400                           
 18401                           ; BSR set to: 4
 18402                           ;usb_device.c: 2450: {
 18403                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 18404  006A48  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18405  006A4C  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18406  006A50  AEDF               	btfss	indf2,7,c
 18407  006A52  D011               	goto	i2l1693
 18408                           
 18409                           ; BSR set to: 4
 18410                           ;usb_device.c: 2452: {
 18411                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 18412  006A54  BF34               	btfsc	52,7,b	;volatile
 18413  006A56  D006               	goto	i2l6284
 18414                           
 18415                           ; BSR set to: 4
 18416                           ;usb_device.c: 2456: {
 18417                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18418  006A58  5134               	movf	52,w,b	;volatile
 18419  006A5A  0B0F               	andlw	15
 18420  006A5C  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18421  006A5E  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18422  006A60  0F6D               	addlw	low _ep_data_out
 18423  006A62  D005               	goto	L28
 18424  006A64                     i2l6284:
 18425                           
 18426                           ; BSR set to: 4
 18427                           ;usb_device.c: 2459: else
 18428                           ;usb_device.c: 2460: {
 18429                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18430  006A64  5134               	movf	52,w,b	;volatile
 18431  006A66  0B0F               	andlw	15
 18432  006A68  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18433  006A6A  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18434  006A6C  0F6A               	addlw	low _ep_data_in
 18435  006A6E                     L28:
 18436  006A6E  6ED9               	movwf	fsr2l,c
 18437  006A70  6ADA               	clrf	fsr2h,c
 18438  006A72  0100               	movlb	0	; () banked
 18439  006A74  82DF               	bsf	indf2,1,c
 18440  006A76                     i2l1693:
 18441                           
 18442                           ;usb_device.c: 2462: }
 18443                           ;usb_device.c: 2463: }
 18444                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 18445  006A76  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18446  006A7A  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18447  006A7E  0E00               	movlw	0
 18448  006A80  84DB               	bsf	plusw2,2,c
 18449                           
 18450                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 18451  006A82  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18452  006A86  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18453  006A8A  8EDB               	bsf	plusw2,7,c
 18454                           
 18455                           ;usb_device.c: 2468: }
 18456  006A8C  0C00               	retlw	0
 18457  006A8E                     i2l6286:
 18458                           
 18459                           ; BSR set to: 4
 18460                           ;usb_device.c: 2469: else
 18461                           ;usb_device.c: 2470: {
 18462                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18463  006A8E  0E04               	movlw	4
 18464  006A90  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 18465                           
 18466                           ; BSR set to: 4
 18467                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 18468  006A92  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18469  006A96  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18470  006A9A  AEDF               	btfss	indf2,7,c
 18471  006A9C  D019               	goto	i2l6296
 18472                           
 18473                           ; BSR set to: 4
 18474                           ;usb_device.c: 2476: {
 18475                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 18476  006A9E  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18477  006AA2  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18478  006AA6  0E7F               	movlw	127
 18479  006AA8  16DF               	andwf	indf2,f,c
 18480                           
 18481                           ; BSR set to: 4
 18482                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 18483  006AAA  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18484  006AAE  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18485  006AB2  0E00               	movlw	0
 18486  006AB4  8CDB               	bsf	plusw2,6,c
 18487                           
 18488                           ; BSR set to: 4
 18489                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18490  006AB6  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18491  006AB8  0E05               	movlw	5
 18492  006ABA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18493  006ABC  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18494  006AC0  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18495  006AC4  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18496  006AC6  0E02               	movlw	2
 18497  006AC8  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18498  006ACA  ECF3  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18499                           
 18500                           ;usb_device.c: 2482: }
 18501  006ACE  D006               	goto	i2l6298
 18502  006AD0                     i2l6296:
 18503                           
 18504                           ; BSR set to: 4
 18505                           ;usb_device.c: 2483: else
 18506                           ;usb_device.c: 2484: {
 18507                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 18508  006AD0  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18509  006AD4  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18510  006AD8  0E00               	movlw	0
 18511  006ADA  8CDB               	bsf	plusw2,6,c
 18512  006ADC                     i2l6298:
 18513                           
 18514                           ;usb_device.c: 2487: }
 18515                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18516  006ADC  0E04               	movlw	4
 18517  006ADE  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 18518                           
 18519                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 18520  006AE0  B247               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 18521  006AE2  D006               	goto	i2l1701
 18522  006AE4  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18523  006AE8  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18524  006AEC  AEDF               	btfss	indf2,7,c
 18525  006AEE  D025               	goto	i2l6312
 18526  006AF0                     i2l1701:
 18527                           
 18528                           ;usb_device.c: 2498: {
 18529                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 18530  006AF0  0104               	movlb	4	; () banked
 18531  006AF2  BF34               	btfsc	52,7,b	;volatile
 18532  006AF4  D006               	goto	i2l6306
 18533                           
 18534                           ; BSR set to: 4
 18535                           ;usb_device.c: 2500: {
 18536                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18537  006AF6  5134               	movf	52,w,b	;volatile
 18538  006AF8  0B0F               	andlw	15
 18539  006AFA  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18540  006AFC  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18541  006AFE  0F6D               	addlw	low _ep_data_out
 18542  006B00  D005               	goto	L29
 18543  006B02                     i2l6306:
 18544                           
 18545                           ; BSR set to: 4
 18546                           ;usb_device.c: 2503: else
 18547                           ;usb_device.c: 2504: {
 18548                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18549  006B02  5134               	movf	52,w,b	;volatile
 18550  006B04  0B0F               	andlw	15
 18551  006B06  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18552  006B08  5043               	movf	??_USBStdFeatureReqHandler,w,c
 18553  006B0A  0F6A               	addlw	low _ep_data_in
 18554  006B0C                     L29:
 18555  006B0C  6ED9               	movwf	fsr2l,c
 18556  006B0E  6ADA               	clrf	fsr2h,c
 18557  006B10  0100               	movlb	0	; () banked
 18558  006B12  92DF               	bcf	indf2,1,c
 18559                           
 18560                           ; BSR set to: 0
 18561                           ;usb_device.c: 2506: }
 18562                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18563  006B14  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18564  006B18  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18565  006B1C  0E3B               	movlw	59
 18566  006B1E  16DF               	andwf	indf2,f,c
 18567                           
 18568                           ; BSR set to: 0
 18569                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18570  006B20  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18571  006B22  0E05               	movlw	5
 18572  006B24  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18573  006B26  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18574  006B2A  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18575  006B2E  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18576  006B30  0E02               	movlw	2
 18577  006B32  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18578  006B34  ECF3  F024         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18579                           
 18580                           ;usb_device.c: 2512: }
 18581  006B38  D006               	goto	i2l6314
 18582  006B3A                     i2l6312:
 18583                           
 18584                           ;usb_device.c: 2513: else
 18585                           ;usb_device.c: 2514: {
 18586                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18587  006B3A  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18588  006B3E  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18589  006B42  0E3B               	movlw	59
 18590  006B44  16DF               	andwf	indf2,f,c
 18591  006B46                     i2l6314:
 18592                           
 18593                           ;usb_device.c: 2517: }
 18594                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 18595  006B46  0104               	movlb	4	; () banked
 18596  006B48  5134               	movf	52,w,b	;volatile
 18597  006B4A  0B0F               	andlw	15
 18598  006B4C  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18599  006B4E  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 18600  006B50  0E6A               	movlw	106
 18601  006B52  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 18602  006B54  6E45               	movwf	USBStdFeatureReqHandler@pUEP,c
 18603  006B56  0E0F               	movlw	15
 18604  006B58  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 18605  006B5A  6E46               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 18606                           
 18607                           ; BSR set to: 4
 18608                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 18609  006B5C  C045  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 18610  006B60  C046  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 18611  006B64  0EFE               	movlw	254
 18612  006B66  16DF               	andwf	indf2,f,c
 18613  006B68  0CFE               	retlw	254	;funcret
 18614  006B6A                     __end_of_USBStdFeatureReqHandler:
 18615                           	opt stack 0
 18616                           pclatu	equ	0xFFB
 18617                           pclath	equ	0xFFA
 18618                           tblptru	equ	0xFF8
 18619                           tblptrh	equ	0xFF7
 18620                           tblptrl	equ	0xFF6
 18621                           tablat	equ	0xFF5
 18622                           prodh	equ	0xFF4
 18623                           prodl	equ	0xFF3
 18624                           intcon	equ	0xFF2
 18625                           postinc0	equ	0xFEE
 18626                           wreg	equ	0xFE8
 18627                           indf1	equ	0xFE7
 18628                           postdec1	equ	0xFE5
 18629                           fsr1h	equ	0xFE2
 18630                           fsr1l	equ	0xFE1
 18631                           indf2	equ	0xFDF
 18632                           postinc2	equ	0xFDE
 18633                           postdec2	equ	0xFDD
 18634                           plusw2	equ	0xFDB
 18635                           fsr2h	equ	0xFDA
 18636                           fsr2l	equ	0xFD9
 18637                           status	equ	0xFD8
 18638                           
 18639 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 18640 ;; Defined at:
 18641 ;;		line 271 in file "../Includes/Board/USBapp.c"
 18642 ;; Parameters:    Size  Location     Type
 18643 ;;  event           2   13[COMRAM] enum E6400
 18644 ;;  pdata           2   15[COMRAM] PTR void 
 18645 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 18646 ;;  size            2   17[COMRAM] unsigned int 
 18647 ;; Auto vars:     Size  Location     Type
 18648 ;;		None
 18649 ;; Return value:  Size  Location     Type
 18650 ;;                  1    wreg      unsigned char 
 18651 ;; Registers used:
 18652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18653 ;; Tracked objects:
 18654 ;;		On entry : 0/0
 18655 ;;		On exit  : 0/0
 18656 ;;		Unchanged: 0/0
 18657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18658 ;;      Params:         6       0       0       0       0       0       0       0       0
 18659 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18660 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18661 ;;      Totals:         8       0       0       0       0       0       0       0       0
 18662 ;;Total ram usage:        8 bytes
 18663 ;; Hardware stack levels used:    1
 18664 ;; Hardware stack levels required when called:    4
 18665 ;; This function calls:
 18666 ;;		_USBCheckCDCRequest
 18667 ;;		_USBapp_CdcEmulatorInitialize
 18668 ;; This function is called by:
 18669 ;;		_USBDeviceTasks
 18670 ;;		_USBStdSetCfgHandler
 18671 ;;		_USBSuspend
 18672 ;;		_USBWakeFromSuspend
 18673 ;;		_USBCtrlTrfSetupHandler
 18674 ;;		_USBCheckStdRequest
 18675 ;;		_USBStdFeatureReqHandler
 18676 ;; This function uses a non-reentrant model
 18677 ;;
 18678                           
 18679                           	psect	text94
 18680  0049E6                     __ptext94:
 18681                           	opt stack 0
 18682  0049E6                     _USER_USB_CALLBACK_EVENT_HANDLER:
 18683                           	opt stack 14
 18684                           
 18685                           ;USBapp.c: 307: break;
 18686                           
 18687                           ;USBapp.c: 306: USBCheckCDCRequest();
 18688                           
 18689                           ;USBapp.c: 298: break;
 18690                           
 18691                           ;USBapp.c: 297: USBapp_CdcEmulatorInitialize();
 18692                           
 18693                           ;USBapp.c: 273: switch( (int) event )
 18694                           
 18695                           ;incstack = 0
 18696  0049E6  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 18697  0049EA  C03C  F042         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 18698                           
 18699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 18700                           ; Switch size 1, requested type "speed"
 18701                           ; Number of cases is 2, Range of values is 0 to 127
 18702                           ; switch strategies available:
 18703                           ; Name         Instructions Cycles
 18704                           ; simple_byte            7     4 (average)
 18705                           ;	Chosen strategy is simple_byte
 18706  0049EE  5042               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 18707  0049F0  E004               	bz	i2l10666
 18708  0049F2  0A7F               	xorlw	127	; case 127
 18709  0049F4  A4D8               	btfss	status,2,c
 18710  0049F6  0012               	return	
 18711  0049F8  D019               	goto	i2l10668
 18712  0049FA                     i2l10666:
 18713                           
 18714                           ; Switch size 1, requested type "speed"
 18715                           ; Number of cases is 8, Range of values is 1 to 117
 18716                           ; switch strategies available:
 18717                           ; Name         Instructions Cycles
 18718                           ; simple_byte           25    13 (average)
 18719                           ;	Chosen strategy is simple_byte
 18720  0049FA  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18721  0049FC  0A01               	xorlw	1	; case 1
 18722  0049FE  E102 EF3B  F024    	bz	_USBapp_CdcEmulatorInitialize
 18723  004A04  0A03               	xorlw	3	; case 2
 18724  004A06  B4D8               	btfsc	status,2,c
 18725  004A08  0012               	return	
 18726  004A0A  0A01               	xorlw	1	; case 3
 18727  004A0C  E102 EF55  F029    	bz	_USBCheckCDCRequest
 18728  004A12  0A06               	xorlw	6	; case 5
 18729  004A14  B4D8               	btfsc	status,2,c
 18730  004A16  0012               	return	
 18731  004A18  0A77               	xorlw	119	; case 114
 18732  004A1A  B4D8               	btfsc	status,2,c
 18733  004A1C  0012               	return	
 18734  004A1E  0A01               	xorlw	1	; case 115
 18735  004A20  B4D8               	btfsc	status,2,c
 18736  004A22  0012               	return	
 18737  004A24  0A07               	xorlw	7	; case 116
 18738  004A26  A4D8               	btfss	status,2,c
 18739  004A28  0A01               	xorlw	1	; case 117
 18740  004A2A  0012               	return	
 18741  004A2C                     i2l10668:
 18742                           
 18743                           ; Switch size 1, requested type "speed"
 18744                           ; Number of cases is 1, Range of values is 255 to 255
 18745                           ; switch strategies available:
 18746                           ; Name         Instructions Cycles
 18747                           ; simple_byte            4     3 (average)
 18748                           ;	Chosen strategy is simple_byte
 18749  004A2C  1C41               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18750  004A2E  0012               	return	
 18751  004A30                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 18752                           	opt stack 0
 18753                           pclatu	equ	0xFFB
 18754                           pclath	equ	0xFFA
 18755                           tblptru	equ	0xFF8
 18756                           tblptrh	equ	0xFF7
 18757                           tblptrl	equ	0xFF6
 18758                           tablat	equ	0xFF5
 18759                           prodh	equ	0xFF4
 18760                           prodl	equ	0xFF3
 18761                           intcon	equ	0xFF2
 18762                           postinc0	equ	0xFEE
 18763                           wreg	equ	0xFE8
 18764                           indf1	equ	0xFE7
 18765                           postdec1	equ	0xFE5
 18766                           fsr1h	equ	0xFE2
 18767                           fsr1l	equ	0xFE1
 18768                           indf2	equ	0xFDF
 18769                           postinc2	equ	0xFDE
 18770                           postdec2	equ	0xFDD
 18771                           plusw2	equ	0xFDB
 18772                           fsr2h	equ	0xFDA
 18773                           fsr2l	equ	0xFD9
 18774                           status	equ	0xFD8
 18775                           
 18776 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 18777 ;; Defined at:
 18778 ;;		line 107 in file "../Includes/Board/USBapp.c"
 18779 ;; Parameters:    Size  Location     Type
 18780 ;;		None
 18781 ;; Auto vars:     Size  Location     Type
 18782 ;;  i               1   12[COMRAM] unsigned char 
 18783 ;; Return value:  Size  Location     Type
 18784 ;;                  1    wreg      void 
 18785 ;; Registers used:
 18786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18787 ;; Tracked objects:
 18788 ;;		On entry : 0/0
 18789 ;;		On exit  : 0/0
 18790 ;;		Unchanged: 0/0
 18791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18792 ;;      Params:         0       0       0       0       0       0       0       0       0
 18793 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18794 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18795 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18796 ;;Total ram usage:        1 bytes
 18797 ;; Hardware stack levels used:    1
 18798 ;; Hardware stack levels required when called:    3
 18799 ;; This function calls:
 18800 ;;		_CDCInitEP
 18801 ;;		i2_EUSART_Initialize
 18802 ;; This function is called by:
 18803 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18804 ;; This function uses a non-reentrant model
 18805 ;;
 18806                           
 18807                           	psect	text95
 18808  004876                     __ptext95:
 18809                           	opt stack 0
 18810  004876                     _USBapp_CdcEmulatorInitialize:
 18811                           	opt stack 14
 18812                           
 18813                           ;USBapp.c: 110: CDCInitEP();
 18814                           
 18815                           ;incstack = 0
 18816  004876  ECD8  F025         	call	_CDCInitEP	;wreg free
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;USBapp.c: 111: line_coding.bCharFormat = 0;
 18820  00487A  6BB3               	clrf	(_line_coding+4)& (0+255),b
 18821                           
 18822                           ; BSR set to: 0
 18823                           ;USBapp.c: 112: line_coding.bDataBits = 8;
 18824  00487C  0E08               	movlw	8
 18825  00487E  6FB5               	movwf	(_line_coding+6)& (0+255),b
 18826                           
 18827                           ; BSR set to: 0
 18828                           ;USBapp.c: 113: line_coding.bParityType = 0;
 18829  004880  6BB4               	clrf	(_line_coding+5)& (0+255),b
 18830                           
 18831                           ; BSR set to: 0
 18832                           ;USBapp.c: 114: line_coding.dwDTERate = 19200;
 18833  004882  6BAF               	clrf	_line_coding& (0+255),b
 18834  004884  0E4B               	movlw	75
 18835  004886  6FB0               	movwf	(_line_coding+1)& (0+255),b
 18836  004888  6BB1               	clrf	(_line_coding+2)& (0+255),b
 18837  00488A  6BB2               	clrf	(_line_coding+3)& (0+255),b
 18838                           
 18839                           ; BSR set to: 0
 18840                           ;USBapp.c: 115: EUSART_Initialize();
 18841  00488C  EC66  F023         	call	i2_EUSART_Initialize	;wreg free
 18842                           
 18843                           ; BSR set to: 0
 18844                           ;USBapp.c: 117: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 18845  004890  6A3A               	clrf	USBapp_CdcEmulatorInitialize@i,c
 18846  004892                     i2l5784:
 18847                           
 18848                           ;USBapp.c: 118: {
 18849                           ;USBapp.c: 119: USB_Buffer[i] = 0;
 18850  004892  0E18               	movlw	low _USB_Buffer
 18851  004894  243A               	addwf	USBapp_CdcEmulatorInitialize@i,w,c
 18852  004896  6ED9               	movwf	fsr2l,c
 18853  004898  6ADA               	clrf	fsr2h,c
 18854  00489A  0E01               	movlw	high _USB_Buffer
 18855  00489C  22DA               	addwfc	fsr2h,f,c
 18856  00489E  6ADF               	clrf	indf2,c
 18857  0048A0  2A3A               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 18858  0048A2  0E3F               	movlw	63
 18859  0048A4  643A               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 18860  0048A6  D7F5               	goto	i2l5784
 18861                           
 18862                           ;USBapp.c: 120: }
 18863                           ;USBapp.c: 121: NextUSBOut = 0;
 18864  0048A8  6A1A               	clrf	_NextUSBOut,c
 18865                           
 18866                           ;USBapp.c: 122: LastRS232Out = 0;
 18867  0048AA  6A19               	clrf	_LastRS232Out,c
 18868  0048AC  0012               	return		;funcret
 18869  0048AE                     __end_of_USBapp_CdcEmulatorInitialize:
 18870                           	opt stack 0
 18871                           pclatu	equ	0xFFB
 18872                           pclath	equ	0xFFA
 18873                           tblptru	equ	0xFF8
 18874                           tblptrh	equ	0xFF7
 18875                           tblptrl	equ	0xFF6
 18876                           tablat	equ	0xFF5
 18877                           prodh	equ	0xFF4
 18878                           prodl	equ	0xFF3
 18879                           intcon	equ	0xFF2
 18880                           postinc0	equ	0xFEE
 18881                           wreg	equ	0xFE8
 18882                           indf1	equ	0xFE7
 18883                           postdec1	equ	0xFE5
 18884                           fsr1h	equ	0xFE2
 18885                           fsr1l	equ	0xFE1
 18886                           indf2	equ	0xFDF
 18887                           postinc2	equ	0xFDE
 18888                           postdec2	equ	0xFDD
 18889                           plusw2	equ	0xFDB
 18890                           fsr2h	equ	0xFDA
 18891                           fsr2l	equ	0xFD9
 18892                           status	equ	0xFD8
 18893                           
 18894 ;; *************** function _CDCInitEP *****************
 18895 ;; Defined at:
 18896 ;;		line 296 in file "../Includes/Usb/framework/usb_device_cdc.c"
 18897 ;; Parameters:    Size  Location     Type
 18898 ;;		None
 18899 ;; Auto vars:     Size  Location     Type
 18900 ;;		None
 18901 ;; Return value:  Size  Location     Type
 18902 ;;                  1    wreg      void 
 18903 ;; Registers used:
 18904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18905 ;; Tracked objects:
 18906 ;;		On entry : 0/0
 18907 ;;		On exit  : F/0
 18908 ;;		Unchanged: 0/0
 18909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18910 ;;      Params:         0       0       0       0       0       0       0       0       0
 18911 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18912 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18913 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18914 ;;Total ram usage:        0 bytes
 18915 ;; Hardware stack levels used:    1
 18916 ;; Hardware stack levels required when called:    2
 18917 ;; This function calls:
 18918 ;;		_USBEnableEndpoint
 18919 ;;		i2_USBTransferOnePacket
 18920 ;; This function is called by:
 18921 ;;		_USBapp_CdcEmulatorInitialize
 18922 ;; This function uses a non-reentrant model
 18923 ;;
 18924                           
 18925                           	psect	text96
 18926  004BB0                     __ptext96:
 18927                           	opt stack 0
 18928  004BB0                     _CDCInitEP:
 18929                           	opt stack 14
 18930                           
 18931                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 18932                           
 18933                           ;incstack = 0
 18934  004BB0  0100               	movlb	0	; () banked
 18935  004BB2  6BAF               	clrf	_line_coding& (0+255),b
 18936  004BB4  0E4B               	movlw	75
 18937  004BB6  6FB0               	movwf	(_line_coding+1)& (0+255),b
 18938  004BB8  6BB1               	clrf	(_line_coding+2)& (0+255),b
 18939  004BBA  6BB2               	clrf	(_line_coding+3)& (0+255),b
 18940                           
 18941                           ; BSR set to: 0
 18942                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 18943  004BBC  6BB3               	clrf	(_line_coding+4)& (0+255),b
 18944                           
 18945                           ; BSR set to: 0
 18946                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 18947  004BBE  6BB4               	clrf	(_line_coding+5)& (0+255),b
 18948                           
 18949                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 18950  004BC0  0E08               	movlw	8
 18951  004BC2  6FB5               	movwf	(_line_coding+6)& (0+255),b
 18952                           
 18953                           ; BSR set to: 0
 18954                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 18955  004BC4  6B98               	clrf	_cdc_rx_len& (0+255),b
 18956                           
 18957                           ; BSR set to: 0
 18958                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 18959  004BC6  0E1A               	movlw	26
 18960  004BC8  6E36               	movwf	USBEnableEndpoint@options,c
 18961  004BCA  0E01               	movlw	1
 18962  004BCC  EC05  F024         	call	_USBEnableEndpoint
 18963                           
 18964                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 18965  004BD0  0E1E               	movlw	30
 18966  004BD2  6E36               	movwf	USBEnableEndpoint@options,c
 18967  004BD4  0E02               	movlw	2
 18968  004BD6  EC05  F024         	call	_USBEnableEndpoint
 18969                           
 18970                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18971  004BDA  0E00               	movlw	0
 18972  004BDC  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 18973  004BDE  0E40               	movlw	64
 18974  004BE0  6E2F               	movwf	i2USBTransferOnePacket@data,c
 18975  004BE2  0E05               	movlw	5
 18976  004BE4  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 18977  004BE6  0E40               	movlw	64
 18978  004BE8  6E31               	movwf	i2USBTransferOnePacket@len,c
 18979  004BEA  0E02               	movlw	2
 18980  004BEC  EC74  F02A         	call	i2_USBTransferOnePacket
 18981  004BF0  C02E  F07B         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 18982  004BF4  C02F  F07C         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18983                           
 18984                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 18985  004BF8  0100               	movlb	0	; () banked
 18986  004BFA  6B79               	clrf	_CDCDataInHandle& (0+255),b
 18987  004BFC  6B7A               	clrf	(_CDCDataInHandle+1)& (0+255),b
 18988                           
 18989                           ; BSR set to: 0
 18990                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 18991  004BFE  6A20               	clrf	_cdc_trf_state,c
 18992                           
 18993                           ; BSR set to: 0
 18994  004C00  0012               	return		;funcret
 18995  004C02                     __end_of_CDCInitEP:
 18996                           	opt stack 0
 18997                           pclatu	equ	0xFFB
 18998                           pclath	equ	0xFFA
 18999                           tblptru	equ	0xFF8
 19000                           tblptrh	equ	0xFF7
 19001                           tblptrl	equ	0xFF6
 19002                           tablat	equ	0xFF5
 19003                           prodh	equ	0xFF4
 19004                           prodl	equ	0xFF3
 19005                           intcon	equ	0xFF2
 19006                           postinc0	equ	0xFEE
 19007                           wreg	equ	0xFE8
 19008                           indf1	equ	0xFE7
 19009                           postdec1	equ	0xFE5
 19010                           fsr1h	equ	0xFE2
 19011                           fsr1l	equ	0xFE1
 19012                           indf2	equ	0xFDF
 19013                           postinc2	equ	0xFDE
 19014                           postdec2	equ	0xFDD
 19015                           plusw2	equ	0xFDB
 19016                           fsr2h	equ	0xFDA
 19017                           fsr2l	equ	0xFD9
 19018                           status	equ	0xFD8
 19019                           
 19020 ;; *************** function i2_USBTransferOnePacket *****************
 19021 ;; Defined at:
 19022 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 19023 ;; Parameters:    Size  Location     Type
 19024 ;;  ep              1    wreg     unsigned char 
 19025 ;;  dir             1    0[COMRAM] unsigned char 
 19026 ;;  data            2    1[COMRAM] PTR unsigned char 
 19027 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 19028 ;;  len             1    3[COMRAM] unsigned char 
 19029 ;; Auto vars:     Size  Location     Type
 19030 ;;  ep              1    4[COMRAM] unsigned char 
 19031 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 19032 ;;		 -> BDT(48), NULL(0), 
 19033 ;; Return value:  Size  Location     Type
 19034 ;;                  2    0[COMRAM] PTR void 
 19035 ;; Registers used:
 19036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19037 ;; Tracked objects:
 19038 ;;		On entry : 0/0
 19039 ;;		On exit  : 0/0
 19040 ;;		Unchanged: 0/0
 19041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19042 ;;      Params:         4       0       0       0       0       0       0       0       0
 19043 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19044 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19045 ;;      Totals:         7       0       0       0       0       0       0       0       0
 19046 ;;Total ram usage:        7 bytes
 19047 ;; Hardware stack levels used:    1
 19048 ;; This function calls:
 19049 ;;		Nothing
 19050 ;; This function is called by:
 19051 ;;		_CDCInitEP
 19052 ;; This function uses a non-reentrant model
 19053 ;;
 19054                           
 19055                           	psect	text97
 19056  0054E8                     __ptext97:
 19057                           	opt stack 0
 19058  0054E8                     i2_USBTransferOnePacket:
 19059                           	opt stack 15
 19060                           
 19061                           ; BSR set to: 0
 19062                           ;incstack = 0
 19063                           ;i2USBTransferOnePacket@ep stored from wreg
 19064  0054E8  6E32               	movwf	i2USBTransferOnePacket@ep,c
 19065                           
 19066                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 19067                           ;usb_device.c: 762: if(dir != 0)
 19068  0054EA  502E               	movf	i2USBTransferOnePacket@dir,w,c
 19069  0054EC  E005               	bz	i2l5652
 19070                           
 19071                           ;usb_device.c: 763: {
 19072                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 19073  0054EE  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19074  0054F0  0D02               	mullw	2
 19075  0054F2  50F3               	movf	prodl,w,c
 19076  0054F4  0F0F               	addlw	low _pBDTEntryIn
 19077  0054F6  D004               	goto	L30
 19078  0054F8                     i2l5652:
 19079                           
 19080                           ;usb_device.c: 767: else
 19081                           ;usb_device.c: 768: {
 19082                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 19083  0054F8  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19084  0054FA  0D02               	mullw	2
 19085  0054FC  50F3               	movf	prodl,w,c
 19086  0054FE  0F60               	addlw	low _pBDTEntryOut
 19087  005500                     L30:
 19088  005500  6ED9               	movwf	fsr2l,c
 19089  005502  6ADA               	clrf	fsr2h,c
 19090  005504  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 19091  005508  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 19092                           
 19093                           ;usb_device.c: 771: }
 19094                           ;usb_device.c: 775: if(handle == 0)
 19095  00550C  5033               	movf	i2USBTransferOnePacket@handle,w,c
 19096  00550E  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 19097  005510  E103               	bnz	i2l5658
 19098                           
 19099                           ;usb_device.c: 776: {
 19100                           ;usb_device.c: 777: return 0;
 19101  005512  6A2E               	clrf	?i2_USBTransferOnePacket,c
 19102  005514  6A2F               	clrf	?i2_USBTransferOnePacket+1,c
 19103  005516  0012               	return	
 19104  005518                     i2l5658:
 19105                           
 19106                           ;usb_device.c: 778: }
 19107                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 19108  005518  EE20 F002          	lfsr	2,2
 19109  00551C  5033               	movf	i2USBTransferOnePacket@handle,w,c
 19110  00551E  26D9               	addwf	fsr2l,f,c
 19111  005520  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 19112  005522  22DA               	addwfc	fsr2h,f,c
 19113  005524  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 19114  005528  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 19115                           
 19116                           ;usb_device.c: 781: handle->CNT = len;
 19117  00552C  EE20 F001          	lfsr	2,1
 19118  005530  5033               	movf	i2USBTransferOnePacket@handle,w,c
 19119  005532  26D9               	addwf	fsr2l,f,c
 19120  005534  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 19121  005536  22DA               	addwfc	fsr2h,f,c
 19122  005538  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 19123                           
 19124                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 19125  00553C  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 19126  005540  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 19127  005544  0E40               	movlw	64
 19128  005546  16DF               	andwf	indf2,f,c
 19129                           
 19130                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 19131  005548  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 19132  00554C  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 19133  005550  0E00               	movlw	0
 19134  005552  86DB               	bsf	plusw2,3,c
 19135                           
 19136                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 19137  005554  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 19138  005558  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 19139  00555C  8EDB               	bsf	plusw2,7,c
 19140                           
 19141                           ;usb_device.c: 787: if(dir != 0)
 19142  00555E  502E               	movf	i2USBTransferOnePacket@dir,w,c
 19143  005560  E005               	bz	i2l5670
 19144                           
 19145                           ;usb_device.c: 788: {
 19146                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 19147  005562  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19148  005564  0D02               	mullw	2
 19149  005566  50F3               	movf	prodl,w,c
 19150  005568  0F0F               	addlw	low _pBDTEntryIn
 19151  00556A  D004               	goto	L31
 19152  00556C                     i2l5670:
 19153                           
 19154                           ;usb_device.c: 792: else
 19155                           ;usb_device.c: 793: {
 19156                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 19157  00556C  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19158  00556E  0D02               	mullw	2
 19159  005570  50F3               	movf	prodl,w,c
 19160  005572  0F60               	addlw	low _pBDTEntryOut
 19161  005574                     L31:
 19162  005574  6ED9               	movwf	fsr2l,c
 19163  005576  6ADA               	clrf	fsr2h,c
 19164  005578  0E04               	movlw	4
 19165  00557A  1ADF               	xorwf	indf2,f,c
 19166                           
 19167                           ;usb_device.c: 796: }
 19168                           ;usb_device.c: 797: return (void*)handle;
 19169  00557C  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 19170  005580  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 19171  005584  0C04               	retlw	4	;funcret
 19172  005586                     __end_ofi2_USBTransferOnePacket:
 19173                           	opt stack 0
 19174                           pclatu	equ	0xFFB
 19175                           pclath	equ	0xFFA
 19176                           tblptru	equ	0xFF8
 19177                           tblptrh	equ	0xFF7
 19178                           tblptrl	equ	0xFF6
 19179                           tablat	equ	0xFF5
 19180                           prodh	equ	0xFF4
 19181                           prodl	equ	0xFF3
 19182                           intcon	equ	0xFF2
 19183                           postinc0	equ	0xFEE
 19184                           wreg	equ	0xFE8
 19185                           indf1	equ	0xFE7
 19186                           postdec1	equ	0xFE5
 19187                           fsr1h	equ	0xFE2
 19188                           fsr1l	equ	0xFE1
 19189                           indf2	equ	0xFDF
 19190                           postinc2	equ	0xFDE
 19191                           postdec2	equ	0xFDD
 19192                           plusw2	equ	0xFDB
 19193                           fsr2h	equ	0xFDA
 19194                           fsr2l	equ	0xFD9
 19195                           status	equ	0xFD8
 19196                           
 19197 ;; *************** function _USBEnableEndpoint *****************
 19198 ;; Defined at:
 19199 ;;		line 645 in file "../Includes/Usb/framework/usb_device.c"
 19200 ;; Parameters:    Size  Location     Type
 19201 ;;  ep              1    wreg     unsigned char 
 19202 ;;  options         1    8[COMRAM] unsigned char 
 19203 ;; Auto vars:     Size  Location     Type
 19204 ;;  ep              1   11[COMRAM] unsigned char 
 19205 ;;  p               2    9[COMRAM] PTR unsigned char 
 19206 ;;		 -> UEP0(1), 
 19207 ;; Return value:  Size  Location     Type
 19208 ;;                  1    wreg      void 
 19209 ;; Registers used:
 19210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19211 ;; Tracked objects:
 19212 ;;		On entry : 0/0
 19213 ;;		On exit  : 0/0
 19214 ;;		Unchanged: 0/0
 19215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19216 ;;      Params:         1       0       0       0       0       0       0       0       0
 19217 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19218 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19219 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19220 ;;Total ram usage:        4 bytes
 19221 ;; Hardware stack levels used:    1
 19222 ;; Hardware stack levels required when called:    1
 19223 ;; This function calls:
 19224 ;;		_USBConfigureEndpoint
 19225 ;; This function is called by:
 19226 ;;		_CDCInitEP
 19227 ;; This function uses a non-reentrant model
 19228 ;;
 19229                           
 19230                           	psect	text98
 19231  00480A                     __ptext98:
 19232                           	opt stack 0
 19233  00480A                     _USBEnableEndpoint:
 19234                           	opt stack 14
 19235                           
 19236                           ;incstack = 0
 19237                           ;USBEnableEndpoint@ep stored from wreg
 19238  00480A  6E39               	movwf	USBEnableEndpoint@ep,c
 19239                           
 19240                           ;usb_device.c: 647: unsigned char* p;
 19241                           ;usb_device.c: 651: if(options & 0x04)
 19242  00480C  A436               	btfss	USBEnableEndpoint@options,2,c
 19243  00480E  D004               	goto	i2l5640
 19244                           
 19245                           ;usb_device.c: 652: {
 19246                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 19247  004810  6A2E               	clrf	USBConfigureEndpoint@direction,c
 19248  004812  5039               	movf	USBEnableEndpoint@ep,w,c
 19249  004814  EC11  F029         	call	_USBConfigureEndpoint
 19250  004818                     i2l5640:
 19251                           
 19252                           ;usb_device.c: 654: }
 19253                           ;usb_device.c: 655: if(options & 0x02)
 19254  004818  A236               	btfss	USBEnableEndpoint@options,1,c
 19255  00481A  D005               	goto	i2l5644
 19256                           
 19257                           ;usb_device.c: 656: {
 19258                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 19259  00481C  0E01               	movlw	1
 19260  00481E  6E2E               	movwf	USBConfigureEndpoint@direction,c
 19261  004820  5039               	movf	USBEnableEndpoint@ep,w,c
 19262  004822  EC11  F029         	call	_USBConfigureEndpoint
 19263  004826                     i2l5644:
 19264                           
 19265                           ;usb_device.c: 658: }
 19266                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 19267  004826  0E6A               	movlw	106
 19268  004828  2439               	addwf	USBEnableEndpoint@ep,w,c
 19269  00482A  6E37               	movwf	USBEnableEndpoint@p,c
 19270  00482C  6A38               	clrf	USBEnableEndpoint@p+1,c
 19271  00482E  0E0F               	movlw	15
 19272  004830  2238               	addwfc	USBEnableEndpoint@p+1,f,c
 19273                           
 19274                           ;usb_device.c: 664: *p = options;
 19275  004832  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 19276  004836  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 19277  00483A  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 19278  00483E  0C0F               	retlw	15	;funcret
 19279  004840                     __end_of_USBEnableEndpoint:
 19280                           	opt stack 0
 19281                           pclatu	equ	0xFFB
 19282                           pclath	equ	0xFFA
 19283                           tblptru	equ	0xFF8
 19284                           tblptrh	equ	0xFF7
 19285                           tblptrl	equ	0xFF6
 19286                           tablat	equ	0xFF5
 19287                           prodh	equ	0xFF4
 19288                           prodl	equ	0xFF3
 19289                           intcon	equ	0xFF2
 19290                           postinc0	equ	0xFEE
 19291                           wreg	equ	0xFE8
 19292                           indf1	equ	0xFE7
 19293                           postdec1	equ	0xFE5
 19294                           fsr1h	equ	0xFE2
 19295                           fsr1l	equ	0xFE1
 19296                           indf2	equ	0xFDF
 19297                           postinc2	equ	0xFDE
 19298                           postdec2	equ	0xFDD
 19299                           plusw2	equ	0xFDB
 19300                           fsr2h	equ	0xFDA
 19301                           fsr2l	equ	0xFD9
 19302                           status	equ	0xFD8
 19303                           
 19304 ;; *************** function _USBConfigureEndpoint *****************
 19305 ;; Defined at:
 19306 ;;		line 1228 in file "../Includes/Usb/framework/usb_device.c"
 19307 ;; Parameters:    Size  Location     Type
 19308 ;;  EPNum           1    wreg     unsigned char 
 19309 ;;  direction       1    0[COMRAM] unsigned char 
 19310 ;; Auto vars:     Size  Location     Type
 19311 ;;  EPNum           1    5[COMRAM] unsigned char 
 19312 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 19313 ;;		 -> BDT(48), 
 19314 ;; Return value:  Size  Location     Type
 19315 ;;                  1    wreg      void 
 19316 ;; Registers used:
 19317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19318 ;; Tracked objects:
 19319 ;;		On entry : 0/0
 19320 ;;		On exit  : 0/0
 19321 ;;		Unchanged: 0/0
 19322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19323 ;;      Params:         1       0       0       0       0       0       0       0       0
 19324 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19325 ;;      Temps:          4       0       0       0       0       0       0       0       0
 19326 ;;      Totals:         8       0       0       0       0       0       0       0       0
 19327 ;;Total ram usage:        8 bytes
 19328 ;; Hardware stack levels used:    1
 19329 ;; This function calls:
 19330 ;;		Nothing
 19331 ;; This function is called by:
 19332 ;;		_USBEnableEndpoint
 19333 ;; This function uses a non-reentrant model
 19334 ;;
 19335                           
 19336                           	psect	text99
 19337  005222                     __ptext99:
 19338                           	opt stack 0
 19339  005222                     _USBConfigureEndpoint:
 19340                           	opt stack 14
 19341                           
 19342                           ;incstack = 0
 19343                           ;USBConfigureEndpoint@EPNum stored from wreg
 19344  005222  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 19345                           
 19346                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 19347                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 19348  005224  6A34               	clrf	USBConfigureEndpoint@handle,c
 19349  005226  0E04               	movlw	4
 19350  005228  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 19351                           
 19352                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 19353  00522A  502E               	movf	USBConfigureEndpoint@direction,w,c
 19354  00522C  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 19355  00522E  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 19356  005230  90D8               	bcf	status,0,c
 19357  005232  362F               	rlcf	??_USBConfigureEndpoint,f,c
 19358  005234  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 19359  005236  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19360  005238  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 19361  00523A  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 19362  00523C  90D8               	bcf	status,0,c
 19363  00523E  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19364  005240  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19365  005242  90D8               	bcf	status,0,c
 19366  005244  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19367  005246  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19368  005248  502F               	movf	??_USBConfigureEndpoint,w,c
 19369  00524A  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 19370  00524C  5030               	movf	??_USBConfigureEndpoint+1,w,c
 19371  00524E  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 19372  005250  90D8               	bcf	status,0,c
 19373  005252  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19374  005254  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19375  005256  90D8               	bcf	status,0,c
 19376  005258  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19377  00525A  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19378  00525C  5031               	movf	??_USBConfigureEndpoint+2,w,c
 19379  00525E  2634               	addwf	USBConfigureEndpoint@handle,f,c
 19380  005260  5032               	movf	??_USBConfigureEndpoint+3,w,c
 19381  005262  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 19382                           
 19383                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 19384  005264  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19385  005268  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19386  00526C  9EDF               	bcf	indf2,7,c
 19387                           
 19388                           ;usb_device.c: 1242: if(direction == 0)
 19389  00526E  502E               	movf	USBConfigureEndpoint@direction,w,c
 19390  005270  E105               	bnz	i2l5626
 19391                           
 19392                           ;usb_device.c: 1243: {
 19393                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 19394  005272  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19395  005274  0D02               	mullw	2
 19396  005276  50F3               	movf	prodl,w,c
 19397  005278  0F60               	addlw	low _pBDTEntryOut
 19398  00527A  D004               	goto	L32
 19399  00527C                     i2l5626:
 19400                           
 19401                           ;usb_device.c: 1246: else
 19402                           ;usb_device.c: 1247: {
 19403                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 19404  00527C  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19405  00527E  0D02               	mullw	2
 19406  005280  50F3               	movf	prodl,w,c
 19407  005282  0F0F               	addlw	low _pBDTEntryIn
 19408  005284                     L32:
 19409  005284  6ED9               	movwf	fsr2l,c
 19410  005286  6ADA               	clrf	fsr2h,c
 19411  005288  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 19412  00528C  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 19413                           
 19414                           ;usb_device.c: 1249: }
 19415                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 19416  005290  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19417  005294  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19418  005298  9CDF               	bcf	indf2,6,c
 19419                           
 19420                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 19421  00529A  EE20 F004          	lfsr	2,4
 19422  00529E  5034               	movf	USBConfigureEndpoint@handle,w,c
 19423  0052A0  26D9               	addwf	fsr2l,f,c
 19424  0052A2  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 19425  0052A4  22DA               	addwfc	fsr2h,f,c
 19426  0052A6  8CDF               	bsf	indf2,6,c
 19427  0052A8  0012               	return		;funcret
 19428  0052AA                     __end_of_USBConfigureEndpoint:
 19429                           	opt stack 0
 19430                           pclatu	equ	0xFFB
 19431                           pclath	equ	0xFFA
 19432                           tblptru	equ	0xFF8
 19433                           tblptrh	equ	0xFF7
 19434                           tblptrl	equ	0xFF6
 19435                           tablat	equ	0xFF5
 19436                           prodh	equ	0xFF4
 19437                           prodl	equ	0xFF3
 19438                           intcon	equ	0xFF2
 19439                           postinc0	equ	0xFEE
 19440                           wreg	equ	0xFE8
 19441                           indf1	equ	0xFE7
 19442                           postdec1	equ	0xFE5
 19443                           fsr1h	equ	0xFE2
 19444                           fsr1l	equ	0xFE1
 19445                           indf2	equ	0xFDF
 19446                           postinc2	equ	0xFDE
 19447                           postdec2	equ	0xFDD
 19448                           plusw2	equ	0xFDB
 19449                           fsr2h	equ	0xFDA
 19450                           fsr2l	equ	0xFD9
 19451                           status	equ	0xFD8
 19452                           
 19453 ;; *************** function _USBCheckCDCRequest *****************
 19454 ;; Defined at:
 19455 ;;		line 184 in file "../Includes/Usb/framework/usb_device_cdc.c"
 19456 ;; Parameters:    Size  Location     Type
 19457 ;;		None
 19458 ;; Auto vars:     Size  Location     Type
 19459 ;;		None
 19460 ;; Return value:  Size  Location     Type
 19461 ;;                  1    wreg      void 
 19462 ;; Registers used:
 19463 ;;		wreg, status,2, status,0
 19464 ;; Tracked objects:
 19465 ;;		On entry : 0/0
 19466 ;;		On exit  : F/4
 19467 ;;		Unchanged: 0/0
 19468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19469 ;;      Params:         0       0       0       0       0       0       0       0       0
 19470 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19471 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19472 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19473 ;;Total ram usage:        0 bytes
 19474 ;; Hardware stack levels used:    1
 19475 ;; This function calls:
 19476 ;;		Nothing
 19477 ;; This function is called by:
 19478 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19479 ;; This function uses a non-reentrant model
 19480 ;;
 19481                           
 19482                           	psect	text100
 19483  0052AA                     __ptext100:
 19484                           	opt stack 0
 19485  0052AA                     _USBCheckCDCRequest:
 19486                           	opt stack 17
 19487                           
 19488                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 19489                           
 19490                           ;incstack = 0
 19491  0052AA  0104               	movlb	4	; () banked
 19492  0052AC  5130               	movf	48,w,b	;volatile
 19493  0052AE  0B1F               	andlw	31
 19494  0052B0  06E8               	decf	wreg,f,c
 19495  0052B2  E001               	bz	i2l5794
 19496  0052B4  0012               	return	
 19497  0052B6                     i2l5794:
 19498                           
 19499                           ; BSR set to: 4
 19500                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 19501  0052B6  3930               	swapf	48,w,b	;volatile
 19502  0052B8  32E8               	rrcf	wreg,f,c
 19503  0052BA  0B03               	andlw	3
 19504  0052BC  06E8               	decf	wreg,f,c
 19505  0052BE  E001               	bz	i2l5798
 19506  0052C0  0012               	return	
 19507  0052C2                     i2l5798:
 19508                           
 19509                           ; BSR set to: 4
 19510                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 19511                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 19512  0052C2  5134               	movf	52,w,b	;volatile
 19513  0052C4  E02D               	bz	i2l5832
 19514                           
 19515                           ; BSR set to: 4
 19516  0052C6  0534               	decf	52,w,b	;volatile
 19517  0052C8  E02B               	bz	i2l5832
 19518  0052CA  0012               	return	
 19519  0052CC                     i2l5804:
 19520                           
 19521                           ; BSR set to: 4
 19522                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 19523  0052CC  0EE2               	movlw	low _dummy_encapsulated_cmd_response
 19524  0052CE  6E09               	movwf	_inPipes,c	;volatile
 19525  0052D0  0E01               	movlw	high _dummy_encapsulated_cmd_response
 19526  0052D2  6E0A               	movwf	_inPipes+1,c	;volatile
 19527                           
 19528                           ; BSR set to: 4
 19529                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 19530  0052D4  6A0E               	clrf	_inPipes+5,c	;volatile
 19531  0052D6  0E08               	movlw	8
 19532  0052D8  6E0D               	movwf	_inPipes+4,c	;volatile
 19533                           
 19534                           ; BSR set to: 4
 19535                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 19536  0052DA  800C               	bsf	_inPipes+3,0,c	;volatile
 19537                           
 19538                           ; BSR set to: 4
 19539                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 19540  0052DC  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19541                           
 19542                           ;usb_device_cdc.c: 212: break;
 19543  0052DE  0C08               	retlw	8
 19544  0052E0                     i2l5812:
 19545                           
 19546                           ; BSR set to: 4
 19547                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 19548  0052E0  0EE2               	movlw	low _dummy_encapsulated_cmd_response
 19549  0052E2  6E09               	movwf	_inPipes,c	;volatile
 19550  0052E4  0E01               	movlw	high _dummy_encapsulated_cmd_response
 19551  0052E6  6E0A               	movwf	_inPipes+1,c	;volatile
 19552                           
 19553                           ; BSR set to: 4
 19554                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 19555  0052E8  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19556                           
 19557                           ;usb_device_cdc.c: 217: break;
 19558  0052EA  0012               	return	
 19559  0052EC                     i2l1760:
 19560                           
 19561                           ; BSR set to: 4
 19562                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 19563  0052EC  C436 F005          	movff	1078,_outPipes+4	;volatile
 19564  0052F0  C437 F006          	movff	1079,_outPipes+5	;volatile
 19565                           
 19566                           ; BSR set to: 4
 19567                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 19568  0052F4  0ED8               	movlw	low _cdc_notice
 19569  0052F6  6E01               	movwf	_outPipes,c	;volatile
 19570  0052F8  0E01               	movlw	high _cdc_notice
 19571  0052FA  6E02               	movwf	_outPipes+1,c	;volatile
 19572                           
 19573                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 19574  0052FC  0E02               	movlw	low _USART_mySetLineCodingHandler
 19575  0052FE  6E07               	movwf	_outPipes+6,c	;volatile
 19576  005300  0E4C               	movlw	high _USART_mySetLineCodingHandler
 19577  005302  6E08               	movwf	_outPipes+7,c	;volatile
 19578                           
 19579                           ; BSR set to: 4
 19580                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 19581  005304  8E04               	bsf	_outPipes+3,7,c	;volatile
 19582                           
 19583                           ;usb_device_cdc.c: 224: break;
 19584  005306  0012               	return	
 19585  005308                     i2l5820:
 19586                           
 19587                           ; BSR set to: 4
 19588                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 19589  005308  0EAF               	movlw	low _line_coding
 19590  00530A  6E09               	movwf	_inPipes,c	;volatile
 19591  00530C  6A0A               	clrf	_inPipes+1,c	;volatile
 19592                           
 19593                           ; BSR set to: 4
 19594  00530E  6A0E               	clrf	_inPipes+5,c	;volatile
 19595  005310  0E07               	movlw	7
 19596  005312  6E0D               	movwf	_inPipes+4,c	;volatile
 19597                           
 19598                           ; BSR set to: 4
 19599  005314  0EC1               	movlw	193
 19600  005316  6E0C               	movwf	_inPipes+3,c	;volatile
 19601                           
 19602                           ;usb_device_cdc.c: 231: break;
 19603  005318  0CC1               	retlw	193
 19604  00531A                     i2l5826:
 19605                           
 19606                           ; BSR set to: 4
 19607                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 19608  00531A  5132               	movf	50,w,b	;volatile
 19609                           
 19610                           ; BSR set to: 4
 19611                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 19612  00531C  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19613                           
 19614                           ;usb_device_cdc.c: 256: break;
 19615  00531E  0012               	return	
 19616  005320                     i2l5832:
 19617                           
 19618                           ; BSR set to: 4
 19619  005320  5131               	movf	49,w,b	;volatile
 19620                           
 19621                           ; Switch size 1, requested type "speed"
 19622                           ; Number of cases is 5, Range of values is 0 to 34
 19623                           ; switch strategies available:
 19624                           ; Name         Instructions Cycles
 19625                           ; simple_byte           16     9 (average)
 19626                           ;	Chosen strategy is simple_byte
 19627  005322  E0D4               	bz	i2l5804
 19628  005324  0A01               	xorlw	1	; case 1
 19629  005326  E0DC               	bz	i2l5812
 19630  005328  0A21               	xorlw	33	; case 32
 19631  00532A  E0E0               	bz	i2l1760
 19632  00532C  0A01               	xorlw	1	; case 33
 19633  00532E  E0EC               	bz	i2l5820
 19634  005330  0A03               	xorlw	3	; case 34
 19635  005332  E0F3               	bz	i2l5826
 19636                           
 19637                           ; BSR set to: 4
 19638  005334  0012               	return		;funcret
 19639  005336                     __end_of_USBCheckCDCRequest:
 19640                           	opt stack 0
 19641                           pclatu	equ	0xFFB
 19642                           pclath	equ	0xFFA
 19643                           tblptru	equ	0xFF8
 19644                           tblptrh	equ	0xFF7
 19645                           tblptrl	equ	0xFF6
 19646                           tablat	equ	0xFF5
 19647                           prodh	equ	0xFF4
 19648                           prodl	equ	0xFF3
 19649                           intcon	equ	0xFF2
 19650                           postinc0	equ	0xFEE
 19651                           wreg	equ	0xFE8
 19652                           indf1	equ	0xFE7
 19653                           postdec1	equ	0xFE5
 19654                           fsr1h	equ	0xFE2
 19655                           fsr1l	equ	0xFE1
 19656                           indf2	equ	0xFDF
 19657                           postinc2	equ	0xFDE
 19658                           postdec2	equ	0xFDD
 19659                           plusw2	equ	0xFDB
 19660                           fsr2h	equ	0xFDA
 19661                           fsr2l	equ	0xFD9
 19662                           status	equ	0xFD8
 19663                           
 19664 ;; *************** function _USBCtrlTrfOutHandler *****************
 19665 ;; Defined at:
 19666 ;;		line 2169 in file "../Includes/Usb/framework/usb_device.c"
 19667 ;; Parameters:    Size  Location     Type
 19668 ;;		None
 19669 ;; Auto vars:     Size  Location     Type
 19670 ;;		None
 19671 ;; Return value:  Size  Location     Type
 19672 ;;                  1    wreg      void 
 19673 ;; Registers used:
 19674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 19675 ;; Tracked objects:
 19676 ;;		On entry : F/0
 19677 ;;		On exit  : F/0
 19678 ;;		Unchanged: 0/0
 19679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19680 ;;      Params:         0       0       0       0       0       0       0       0       0
 19681 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19682 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19683 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19684 ;;Total ram usage:        0 bytes
 19685 ;; Hardware stack levels used:    1
 19686 ;; Hardware stack levels required when called:    3
 19687 ;; This function calls:
 19688 ;;		_USBCtrlTrfRxService
 19689 ;; This function is called by:
 19690 ;;		_USBCtrlEPService
 19691 ;; This function uses a non-reentrant model
 19692 ;;
 19693                           
 19694                           	psect	text101
 19695  004B5E                     __ptext101:
 19696                           	opt stack 0
 19697  004B5E                     _USBCtrlTrfOutHandler:
 19698                           	opt stack 14
 19699                           
 19700                           ; BSR set to: 0
 19701                           ;usb_device.c: 2171: if(controlTransferState == 2)
 19702                           
 19703                           ; BSR set to: 4
 19704                           ;incstack = 0
 19705  004B5E  0E02               	movlw	2
 19706  004B60  1821               	xorwf	_controlTransferState,w,c	;volatile
 19707  004B62  E102               	bnz	i2l1643
 19708                           
 19709                           ; BSR set to: 0
 19710                           ;usb_device.c: 2172: {
 19711                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 19712  004B64  EF90  F032         	goto	_USBCtrlTrfRxService	;wreg free
 19713  004B68                     i2l1643:
 19714                           
 19715                           ; BSR set to: 0
 19716                           ;usb_device.c: 2175: else
 19717                           ;usb_device.c: 2176: {
 19718                           ;usb_device.c: 2179: controlTransferState = 0;
 19719  004B68  6A21               	clrf	_controlTransferState,c	;volatile
 19720                           
 19721                           ; BSR set to: 0
 19722                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 19723  004B6A  518D               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 19724  004B6C  E11F               	bnz	i2l1645
 19725                           
 19726                           ; BSR set to: 0
 19727                           ;usb_device.c: 2187: {
 19728                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 19729  004B6E  EE20 F001          	lfsr	2,1
 19730  004B72  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19731  004B74  26D9               	addwf	fsr2l,f,c
 19732  004B76  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19733  004B78  22DA               	addwfc	fsr2h,f,c
 19734  004B7A  0E08               	movlw	8
 19735  004B7C  6EDF               	movwf	indf2,c
 19736                           
 19737                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19738  004B7E  EE20 F002          	lfsr	2,2
 19739  004B82  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19740  004B84  26D9               	addwf	fsr2l,f,c
 19741  004B86  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19742  004B88  22DA               	addwfc	fsr2h,f,c
 19743  004B8A  0E30               	movlw	48
 19744  004B8C  6EDE               	movwf	postinc2,c
 19745  004B8E  0E04               	movlw	4
 19746  004B90  6EDD               	movwf	postdec2,c
 19747                           
 19748                           ; BSR set to: 0
 19749                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19750  004B92  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19751  004B96  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19752  004B9A  0E0C               	movlw	12
 19753  004B9C  6EDF               	movwf	indf2,c
 19754                           
 19755                           ; BSR set to: 0
 19756                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19757  004B9E  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19758  004BA2  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19759  004BA6  0E00               	movlw	0
 19760  004BA8  8EDB               	bsf	plusw2,7,c
 19761                           
 19762                           ;usb_device.c: 2192: }
 19763  004BAA  0C00               	retlw	0
 19764  004BAC                     i2l1645:
 19765                           
 19766                           ; BSR set to: 0
 19767                           ;usb_device.c: 2193: else
 19768                           ;usb_device.c: 2194: {
 19769                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 19770  004BAC  6B8D               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 19771                           
 19772                           ; BSR set to: 0
 19773  004BAE  0012               	return		;funcret
 19774  004BB0                     __end_of_USBCtrlTrfOutHandler:
 19775                           	opt stack 0
 19776                           pclatu	equ	0xFFB
 19777                           pclath	equ	0xFFA
 19778                           tblptru	equ	0xFF8
 19779                           tblptrh	equ	0xFF7
 19780                           tblptrl	equ	0xFF6
 19781                           tablat	equ	0xFF5
 19782                           prodh	equ	0xFF4
 19783                           prodl	equ	0xFF3
 19784                           intcon	equ	0xFF2
 19785                           postinc0	equ	0xFEE
 19786                           wreg	equ	0xFE8
 19787                           indf1	equ	0xFE7
 19788                           postdec1	equ	0xFE5
 19789                           fsr1h	equ	0xFE2
 19790                           fsr1l	equ	0xFE1
 19791                           indf2	equ	0xFDF
 19792                           postinc2	equ	0xFDE
 19793                           postdec2	equ	0xFDD
 19794                           plusw2	equ	0xFDB
 19795                           fsr2h	equ	0xFDA
 19796                           fsr2l	equ	0xFD9
 19797                           status	equ	0xFD8
 19798                           
 19799 ;; *************** function _USBCtrlTrfRxService *****************
 19800 ;; Defined at:
 19801 ;;		line 1518 in file "../Includes/Usb/framework/usb_device.c"
 19802 ;; Parameters:    Size  Location     Type
 19803 ;;		None
 19804 ;; Auto vars:     Size  Location     Type
 19805 ;;  byteToRead      1   18[COMRAM] unsigned char 
 19806 ;;  i               1   17[COMRAM] unsigned char 
 19807 ;; Return value:  Size  Location     Type
 19808 ;;                  1    wreg      void 
 19809 ;; Registers used:
 19810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 19811 ;; Tracked objects:
 19812 ;;		On entry : F/0
 19813 ;;		On exit  : F/0
 19814 ;;		Unchanged: 0/0
 19815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19816 ;;      Params:         0       0       0       0       0       0       0       0       0
 19817 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19818 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19819 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19820 ;;Total ram usage:        2 bytes
 19821 ;; Hardware stack levels used:    1
 19822 ;; Hardware stack levels required when called:    2
 19823 ;; This function calls:
 19824 ;;		_USART_mySetLineCodingHandler
 19825 ;;		_USBCtrlEPAllowStatusStage
 19826 ;; This function is called by:
 19827 ;;		_USBCtrlTrfOutHandler
 19828 ;; This function uses a non-reentrant model
 19829 ;;
 19830                           
 19831                           	psect	text102
 19832  006520                     __ptext102:
 19833                           	opt stack 0
 19834  006520                     _USBCtrlTrfRxService:
 19835                           	opt stack 14
 19836                           
 19837                           ; BSR set to: 0
 19838                           ;usb_device.c: 1520: uint8_t byteToRead;
 19839                           ;usb_device.c: 1521: uint8_t i;
 19840                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 19841                           
 19842                           ; BSR set to: 0
 19843                           ;incstack = 0
 19844  006520  EE20 F001          	lfsr	2,1
 19845  006524  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 19846  006526  26D9               	addwf	fsr2l,f,c
 19847  006528  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19848  00652A  22DA               	addwfc	fsr2h,f,c
 19849  00652C  50DF               	movf	indf2,w,c
 19850  00652E  6E40               	movwf	USBCtrlTrfRxService@byteToRead,c
 19851                           
 19852                           ; BSR set to: 0
 19853                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 19854  006530  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19855  006532  5C05               	subwf	_outPipes+4,w,c	;volatile
 19856  006534  0E00               	movlw	0
 19857  006536  5806               	subwfb	_outPipes+5,w,c	;volatile
 19858  006538  E202               	bc	i2l6514
 19859                           
 19860                           ; BSR set to: 0
 19861                           ;usb_device.c: 1532: {
 19862                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 19863  00653A  C005  F040         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 19864  00653E                     i2l6514:
 19865                           
 19866                           ; BSR set to: 0
 19867                           ;usb_device.c: 1534: }
 19868                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 19869  00653E  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19870  006540  5E05               	subwf	_outPipes+4,f,c	;volatile
 19871  006542  0E00               	movlw	0
 19872  006544  5A06               	subwfb	_outPipes+5,f,c	;volatile
 19873                           
 19874                           ; BSR set to: 0
 19875                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 19876  006546  6A3F               	clrf	USBCtrlTrfRxService@i,c
 19877  006548  D00F               	goto	i2l6524
 19878  00654A                     i2l6518:
 19879                           
 19880                           ; BSR set to: 0
 19881                           ;usb_device.c: 1541: {
 19882                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 19883  00654A  0E38               	movlw	56
 19884  00654C  243F               	addwf	USBCtrlTrfRxService@i,w,c
 19885  00654E  6ED9               	movwf	fsr2l,c
 19886  006550  6ADA               	clrf	fsr2h,c
 19887  006552  0E04               	movlw	4
 19888  006554  22DA               	addwfc	fsr2h,f,c
 19889  006556  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 19890  00655A  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 19891  00655E  CFDF FFE7          	movff	indf2,indf1
 19892                           
 19893                           ; BSR set to: 0
 19894  006562  4A01               	infsnz	_outPipes,f,c	;volatile
 19895  006564  2A02               	incf	_outPipes+1,f,c	;volatile
 19896                           
 19897                           ; BSR set to: 0
 19898  006566  2A3F               	incf	USBCtrlTrfRxService@i,f,c
 19899  006568                     i2l6524:
 19900                           
 19901                           ; BSR set to: 0
 19902  006568  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19903  00656A  5C3F               	subwf	USBCtrlTrfRxService@i,w,c
 19904  00656C  E3EE               	bnc	i2l6518
 19905                           
 19906                           ; BSR set to: 0
 19907                           ;usb_device.c: 1543: }
 19908                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 19909  00656E  5005               	movf	_outPipes+4,w,c	;volatile
 19910  006570  1006               	iorwf	_outPipes+5,w,c	;volatile
 19911  006572  E032               	bz	i2l6540
 19912                           
 19913                           ; BSR set to: 0
 19914                           ;usb_device.c: 1548: {
 19915                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 19916  006574  EE20 F001          	lfsr	2,1
 19917  006578  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19918  00657A  26D9               	addwf	fsr2l,f,c
 19919  00657C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19920  00657E  22DA               	addwfc	fsr2h,f,c
 19921  006580  0E08               	movlw	8
 19922  006582  6EDF               	movwf	indf2,c
 19923                           
 19924                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 19925  006584  EE20 F002          	lfsr	2,2
 19926  006588  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19927  00658A  26D9               	addwf	fsr2l,f,c
 19928  00658C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19929  00658E  22DA               	addwfc	fsr2h,f,c
 19930  006590  0E38               	movlw	56
 19931  006592  6EDE               	movwf	postinc2,c
 19932  006594  0E04               	movlw	4
 19933  006596  6EDD               	movwf	postdec2,c
 19934                           
 19935                           ; BSR set to: 0
 19936                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 19937  006598  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19938  00659C  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19939  0065A0  BCDF               	btfsc	indf2,6,c
 19940  0065A2  D00D               	goto	i2l6536
 19941                           
 19942                           ; BSR set to: 0
 19943                           ;usb_device.c: 1552: {
 19944                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 19945  0065A4  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19946  0065A8  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19947  0065AC  0E48               	movlw	72
 19948  0065AE  6EDF               	movwf	indf2,c
 19949                           
 19950                           ; BSR set to: 0
 19951                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19952  0065B0  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19953  0065B4  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19954  0065B8  0E00               	movlw	0
 19955  0065BA  8EDB               	bsf	plusw2,7,c
 19956                           
 19957                           ;usb_device.c: 1555: }
 19958  0065BC  0C00               	retlw	0
 19959  0065BE                     i2l6536:
 19960                           
 19961                           ; BSR set to: 0
 19962                           ;usb_device.c: 1556: else
 19963                           ;usb_device.c: 1557: {
 19964                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 19965  0065BE  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19966  0065C2  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19967  0065C6  0E08               	movlw	8
 19968  0065C8  6EDF               	movwf	indf2,c
 19969                           
 19970                           ; BSR set to: 0
 19971                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19972  0065CA  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19973  0065CE  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19974  0065D2  0E00               	movlw	0
 19975  0065D4  8EDB               	bsf	plusw2,7,c
 19976  0065D6  0C00               	retlw	0
 19977  0065D8                     i2l6540:
 19978                           
 19979                           ; BSR set to: 0
 19980                           ;usb_device.c: 1562: else
 19981                           ;usb_device.c: 1563: {
 19982                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 19983  0065D8  EE20 F001          	lfsr	2,1
 19984  0065DC  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19985  0065DE  26D9               	addwf	fsr2l,f,c
 19986  0065E0  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19987  0065E2  22DA               	addwfc	fsr2h,f,c
 19988  0065E4  0E08               	movlw	8
 19989  0065E6  6EDF               	movwf	indf2,c
 19990                           
 19991                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19992  0065E8  EE20 F002          	lfsr	2,2
 19993  0065EC  5017               	movf	_pBDTEntryEP0OutNext,w,c
 19994  0065EE  26D9               	addwf	fsr2l,f,c
 19995  0065F0  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 19996  0065F2  22DA               	addwfc	fsr2h,f,c
 19997  0065F4  0E30               	movlw	48
 19998  0065F6  6EDE               	movwf	postinc2,c
 19999  0065F8  0E04               	movlw	4
 20000  0065FA  6EDD               	movwf	postdec2,c
 20001                           
 20002                           ; BSR set to: 0
 20003                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 20004  0065FC  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20005  006600  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20006  006604  6EDF               	movwf	indf2,c
 20007                           
 20008                           ; BSR set to: 0
 20009                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20010  006606  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20011  00660A  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20012  00660E  0E00               	movlw	0
 20013  006610  8EDB               	bsf	plusw2,7,c
 20014                           
 20015                           ; BSR set to: 0
 20016                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 20017  006612  5007               	movf	_outPipes+6,w,c	;volatile
 20018  006614  1008               	iorwf	_outPipes+7,w,c	;volatile
 20019  006616  E00E               	bz	i2l6550
 20020                           
 20021                           ; BSR set to: 0
 20022                           ;usb_device.c: 1581: {
 20023                           ;usb_device.c: 1586: outPipes[0].pFunc();
 20024  006618  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 20025  00661C  D801               	call	i2u444_48
 20026  00661E  D00A               	goto	i2l6550
 20027  006620                     i2u444_48:
 20028  006620  0005               	push	
 20029  006622  6EFA               	movwf	pclath,c
 20030  006624  50DE               	movf	postinc2,w,c
 20031  006626  6EFD               	movwf	tosl,c
 20032  006628  50DE               	movf	postinc2,w,c
 20033  00662A  6EFE               	movwf	tosh,c
 20034  00662C  50F8               	movf	tblptru,w,c
 20035  00662E  6EFF               	movwf	tosu,c
 20036  006630  50FA               	movf	pclath,w,c
 20037  006632  0012               	return		;indir
 20038  006634                     i2l6550:
 20039                           
 20040                           ; BSR set to: 0
 20041                           ;usb_device.c: 1588: }
 20042                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 20043  006634  9E04               	bcf	_outPipes+3,7,c	;volatile
 20044                           
 20045                           ; BSR set to: 0
 20046                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 20047  006636  501E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 20048  006638  B4D8               	btfsc	status,2,c
 20049                           
 20050                           ; BSR set to: 0
 20051                           ;usb_device.c: 1604: {
 20052                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 20053  00663A  ECC7  F02C         	call	_USBCtrlEPAllowStatusStage	;wreg free
 20054                           
 20055                           ; BSR set to: 0
 20056  00663E  0012               	return		;funcret
 20057  006640                     __end_of_USBCtrlTrfRxService:
 20058                           	opt stack 0
 20059                           tosu	equ	0xFFF
 20060                           tosh	equ	0xFFE
 20061                           tosl	equ	0xFFD
 20062                           pclatu	equ	0xFFB
 20063                           pclath	equ	0xFFA
 20064                           tblptru	equ	0xFF8
 20065                           tblptrh	equ	0xFF7
 20066                           tblptrl	equ	0xFF6
 20067                           tablat	equ	0xFF5
 20068                           prodh	equ	0xFF4
 20069                           prodl	equ	0xFF3
 20070                           intcon	equ	0xFF2
 20071                           postinc0	equ	0xFEE
 20072                           wreg	equ	0xFE8
 20073                           indf1	equ	0xFE7
 20074                           postdec1	equ	0xFE5
 20075                           fsr1h	equ	0xFE2
 20076                           fsr1l	equ	0xFE1
 20077                           indf2	equ	0xFDF
 20078                           postinc2	equ	0xFDE
 20079                           postdec2	equ	0xFDD
 20080                           plusw2	equ	0xFDB
 20081                           fsr2h	equ	0xFDA
 20082                           fsr2l	equ	0xFD9
 20083                           status	equ	0xFD8
 20084                           
 20085 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 20086 ;; Defined at:
 20087 ;;		line 1104 in file "../Includes/Usb/framework/usb_device.c"
 20088 ;; Parameters:    Size  Location     Type
 20089 ;;		None
 20090 ;; Auto vars:     Size  Location     Type
 20091 ;;		None
 20092 ;; Return value:  Size  Location     Type
 20093 ;;                  1    wreg      void 
 20094 ;; Registers used:
 20095 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20096 ;; Tracked objects:
 20097 ;;		On entry : 0/0
 20098 ;;		On exit  : F/0
 20099 ;;		Unchanged: 0/0
 20100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20101 ;;      Params:         0       0       0       0       0       0       0       0       0
 20102 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20103 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20104 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20105 ;;Total ram usage:        0 bytes
 20106 ;; Hardware stack levels used:    1
 20107 ;; This function calls:
 20108 ;;		Nothing
 20109 ;; This function is called by:
 20110 ;;		_USBDeviceTasks
 20111 ;;		_USBCtrlEPServiceComplete
 20112 ;;		_USBCtrlTrfRxService
 20113 ;; This function uses a non-reentrant model
 20114 ;;
 20115                           
 20116                           	psect	text103
 20117  00598E                     __ptext103:
 20118                           	opt stack 0
 20119  00598E                     _USBCtrlEPAllowStatusStage:
 20120                           	opt stack 15
 20121                           
 20122                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 20123                           
 20124                           ; BSR set to: 0
 20125                           ;incstack = 0
 20126  00598E  0100               	movlb	0	; () banked
 20127  005990  5192               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 20128  005992  A4D8               	btfss	status,2,c
 20129  005994  0012               	return	
 20130                           
 20131                           ; BSR set to: 0
 20132                           ;usb_device.c: 1112: {
 20133                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 20134  005996  0E01               	movlw	1
 20135  005998  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20136                           
 20137                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 20138  00599A  5193               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 20139  00599C  A4D8               	btfss	status,2,c
 20140  00599E  0012               	return	
 20141                           
 20142                           ; BSR set to: 0
 20143                           ;usb_device.c: 1115: {
 20144                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 20145  0059A0  0E01               	movlw	1
 20146  0059A2  6F93               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20147                           
 20148                           ; BSR set to: 0
 20149                           ;usb_device.c: 1120: if(controlTransferState == 2)
 20150  0059A4  0E02               	movlw	2
 20151  0059A6  1821               	xorwf	_controlTransferState,w,c	;volatile
 20152  0059A8  E114               	bnz	i2l6102
 20153                           
 20154                           ; BSR set to: 0
 20155                           ;usb_device.c: 1121: {
 20156                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 20157  0059AA  EE20 F001          	lfsr	2,1
 20158  0059AE  500F               	movf	_pBDTEntryIn,w,c
 20159  0059B0  26D9               	addwf	fsr2l,f,c
 20160  0059B2  5010               	movf	_pBDTEntryIn+1,w,c
 20161  0059B4  22DA               	addwfc	fsr2h,f,c
 20162  0059B6  6ADF               	clrf	indf2,c
 20163                           
 20164                           ; BSR set to: 0
 20165                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20166  0059B8  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20167  0059BC  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20168  0059C0  0E48               	movlw	72
 20169  0059C2  6EDF               	movwf	indf2,c
 20170                           
 20171                           ; BSR set to: 0
 20172                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20173  0059C4  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20174  0059C8  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20175  0059CC  0E00               	movlw	0
 20176  0059CE  8EDB               	bsf	plusw2,7,c
 20177                           
 20178                           ;usb_device.c: 1125: }
 20179  0059D0  0C00               	retlw	0
 20180  0059D2                     i2l6102:
 20181                           
 20182                           ; BSR set to: 0
 20183                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 20184  0059D2  0421               	decf	_controlTransferState,w,c	;volatile
 20185  0059D4  A4D8               	btfss	status,2,c
 20186  0059D6  0012               	return	
 20187                           
 20188                           ; BSR set to: 0
 20189                           ;usb_device.c: 1127: {
 20190                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 20191  0059D8  6B8D               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 20192                           
 20193                           ; BSR set to: 0
 20194                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 20195  0059DA  EE20 F001          	lfsr	2,1
 20196  0059DE  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 20197  0059E0  26D9               	addwf	fsr2l,f,c
 20198  0059E2  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 20199  0059E4  22DA               	addwfc	fsr2h,f,c
 20200  0059E6  0E08               	movlw	8
 20201  0059E8  6EDF               	movwf	indf2,c
 20202                           
 20203                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 20204  0059EA  EE20 F002          	lfsr	2,2
 20205  0059EE  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 20206  0059F0  26D9               	addwf	fsr2l,f,c
 20207  0059F2  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 20208  0059F4  22DA               	addwfc	fsr2h,f,c
 20209  0059F6  0E30               	movlw	48
 20210  0059F8  6EDE               	movwf	postinc2,c
 20211  0059FA  0E04               	movlw	4
 20212  0059FC  6EDD               	movwf	postdec2,c
 20213                           
 20214                           ; BSR set to: 0
 20215                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 20216  0059FE  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20217  005A02  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20218  005A06  6EDF               	movwf	indf2,c
 20219                           
 20220                           ; BSR set to: 0
 20221                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 20222  005A08  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20223  005A0C  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20224  005A10  0E00               	movlw	0
 20225  005A12  8EDB               	bsf	plusw2,7,c
 20226                           
 20227                           ; BSR set to: 0
 20228                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 20229  005A14  0E01               	movlw	1
 20230  005A16  6F8D               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 20231                           
 20232                           ; BSR set to: 0
 20233                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 20234  005A18  EE20 F001          	lfsr	2,1
 20235  005A1C  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20236  005A1E  26D9               	addwf	fsr2l,f,c
 20237  005A20  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20238  005A22  22DA               	addwfc	fsr2h,f,c
 20239  005A24  0E08               	movlw	8
 20240  005A26  6EDF               	movwf	indf2,c
 20241                           
 20242                           ; BSR set to: 0
 20243                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20244  005A28  EE20 F002          	lfsr	2,2
 20245  005A2C  5017               	movf	_pBDTEntryEP0OutNext,w,c
 20246  005A2E  26D9               	addwf	fsr2l,f,c
 20247  005A30  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20248  005A32  22DA               	addwfc	fsr2h,f,c
 20249  005A34  0E30               	movlw	48
 20250  005A36  6EDE               	movwf	postinc2,c
 20251  005A38  0E04               	movlw	4
 20252  005A3A  6EDD               	movwf	postdec2,c
 20253                           
 20254                           ; BSR set to: 0
 20255                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 20256  005A3C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20257  005A40  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20258  005A44  0E80               	movlw	128
 20259  005A46  6EDF               	movwf	indf2,c
 20260  005A48  0C80               	retlw	128
 20261  005A4A                     __end_of_USBCtrlEPAllowStatusStage:
 20262                           	opt stack 0
 20263                           tosu	equ	0xFFF
 20264                           tosh	equ	0xFFE
 20265                           tosl	equ	0xFFD
 20266                           pclatu	equ	0xFFB
 20267                           pclath	equ	0xFFA
 20268                           tblptru	equ	0xFF8
 20269                           tblptrh	equ	0xFF7
 20270                           tblptrl	equ	0xFF6
 20271                           tablat	equ	0xFF5
 20272                           prodh	equ	0xFF4
 20273                           prodl	equ	0xFF3
 20274                           intcon	equ	0xFF2
 20275                           postinc0	equ	0xFEE
 20276                           wreg	equ	0xFE8
 20277                           indf1	equ	0xFE7
 20278                           postdec1	equ	0xFE5
 20279                           fsr1h	equ	0xFE2
 20280                           fsr1l	equ	0xFE1
 20281                           indf2	equ	0xFDF
 20282                           postinc2	equ	0xFDE
 20283                           postdec2	equ	0xFDD
 20284                           plusw2	equ	0xFDB
 20285                           fsr2h	equ	0xFDA
 20286                           fsr2l	equ	0xFD9
 20287                           status	equ	0xFD8
 20288                           
 20289 ;; *************** function _USBCtrlTrfInHandler *****************
 20290 ;; Defined at:
 20291 ;;		line 2223 in file "../Includes/Usb/framework/usb_device.c"
 20292 ;; Parameters:    Size  Location     Type
 20293 ;;		None
 20294 ;; Auto vars:     Size  Location     Type
 20295 ;;  lastDTS         1   17[COMRAM] unsigned char 
 20296 ;; Return value:  Size  Location     Type
 20297 ;;                  1    wreg      void 
 20298 ;; Registers used:
 20299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 20300 ;; Tracked objects:
 20301 ;;		On entry : F/0
 20302 ;;		On exit  : F/0
 20303 ;;		Unchanged: 0/0
 20304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20305 ;;      Params:         0       0       0       0       0       0       0       0       0
 20306 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20307 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20308 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20309 ;;Total ram usage:        1 bytes
 20310 ;; Hardware stack levels used:    1
 20311 ;; Hardware stack levels required when called:    2
 20312 ;; This function calls:
 20313 ;;		_USART_mySetLineCodingHandler
 20314 ;;		_USBCtrlTrfTxService
 20315 ;; This function is called by:
 20316 ;;		_USBCtrlEPService
 20317 ;; This function uses a non-reentrant model
 20318 ;;
 20319                           
 20320                           	psect	text104
 20321  005B0C                     __ptext104:
 20322                           	opt stack 0
 20323  005B0C                     _USBCtrlTrfInHandler:
 20324                           	opt stack 15
 20325                           
 20326                           ; BSR set to: 0
 20327                           ;usb_device.c: 2225: uint8_t lastDTS;
 20328                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 20329                           
 20330                           ; BSR set to: 0
 20331                           ;incstack = 0
 20332  005B0C  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20333  005B10  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20334  005B14  0E00               	movlw	0
 20335  005B16  BCDF               	btfsc	indf2,6,c
 20336  005B18  0E01               	movlw	1
 20337  005B1A  6E3F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 20338                           
 20339                           ; BSR set to: 0
 20340                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 20341  005B1C  0E04               	movlw	4
 20342  005B1E  1A0F               	xorwf	_pBDTEntryIn,f,c
 20343                           
 20344                           ; BSR set to: 0
 20345                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 20346  005B20  0E08               	movlw	8
 20347  005B22  1991               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 20348  005B24  E10A               	bnz	i2l7300
 20349                           
 20350                           ; BSR set to: 0
 20351                           ;usb_device.c: 2236: {
 20352                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 20353  005B26  0104               	movlb	4	; () banked
 20354  005B28  5132               	movf	50,w,b	;volatile
 20355  005B2A  0B7F               	andlw	127
 20356  005B2C  6E63               	movwf	3939,c	;volatile
 20357                           
 20358                           ; BSR set to: 4
 20359                           ;usb_device.c: 2238: if(UADDR != 0u)
 20360  005B2E  5063               	movf	3939,w,c
 20361                           
 20362                           ; BSR set to: 4
 20363                           ;usb_device.c: 2239: {
 20364                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 20365  005B30  0E10               	movlw	16
 20366  005B32  B4D8               	btfsc	status,2,c
 20367                           
 20368                           ; BSR set to: 4
 20369                           ;usb_device.c: 2242: else
 20370                           ;usb_device.c: 2243: {
 20371                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 20372  005B34  0E04               	movlw	4
 20373                           
 20374                           ;usb_device.c: 2241: }
 20375  005B36  0100               	movlb	0	; () banked
 20376  005B38  6F91               	movwf	_USBDeviceState& (0+255),b	;volatile
 20377  005B3A                     i2l7300:
 20378                           
 20379                           ; BSR set to: 0
 20380                           ;usb_device.c: 2245: }
 20381                           ;usb_device.c: 2246: }
 20382                           ;usb_device.c: 2249: if(controlTransferState == 1)
 20383  005B3A  0421               	decf	_controlTransferState,w,c	;volatile
 20384  005B3C  E138               	bnz	i2l1653
 20385                           
 20386                           ; BSR set to: 0
 20387                           ;usb_device.c: 2250: {
 20388                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 20389  005B3E  EE20 F002          	lfsr	2,2
 20390  005B42  500F               	movf	_pBDTEntryIn,w,c
 20391  005B44  26D9               	addwf	fsr2l,f,c
 20392  005B46  5010               	movf	_pBDTEntryIn+1,w,c
 20393  005B48  22DA               	addwfc	fsr2h,f,c
 20394  005B4A  0E38               	movlw	56
 20395  005B4C  6EDE               	movwf	postinc2,c
 20396  005B4E  0E04               	movlw	4
 20397  005B50  6EDD               	movwf	postdec2,c
 20398                           
 20399                           ; BSR set to: 0
 20400                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 20401  005B52  EC25  F02D         	call	_USBCtrlTrfTxService	;wreg free
 20402                           
 20403                           ; BSR set to: 0
 20404                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 20405  005B56  0E02               	movlw	2
 20406  005B58  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 20407  005B5A  E10D               	bnz	i2l7312
 20408                           
 20409                           ; BSR set to: 0
 20410                           ;usb_device.c: 2259: {
 20411                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 20412  005B5C  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20413  005B60  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20414  005B64  0E04               	movlw	4
 20415  005B66  6EDF               	movwf	indf2,c
 20416                           
 20417                           ; BSR set to: 0
 20418                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20419  005B68  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20420  005B6C  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20421  005B70  0E00               	movlw	0
 20422  005B72  8EDB               	bsf	plusw2,7,c
 20423                           
 20424                           ;usb_device.c: 2264: }
 20425  005B74  0C00               	retlw	0
 20426  005B76                     i2l7312:
 20427                           
 20428                           ; BSR set to: 0
 20429                           ;usb_device.c: 2265: else
 20430                           ;usb_device.c: 2266: {
 20431                           ;usb_device.c: 2267: if(lastDTS == 0)
 20432  005B76  503F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 20433  005B78  E10D               	bnz	i2l7318
 20434                           
 20435                           ; BSR set to: 0
 20436                           ;usb_device.c: 2268: {
 20437                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20438  005B7A  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20439  005B7E  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20440  005B82  0E48               	movlw	72
 20441  005B84  6EDF               	movwf	indf2,c
 20442                           
 20443                           ; BSR set to: 0
 20444                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20445  005B86  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20446  005B8A  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20447  005B8E  0E00               	movlw	0
 20448  005B90  8EDB               	bsf	plusw2,7,c
 20449                           
 20450                           ;usb_device.c: 2271: }
 20451  005B92  0C00               	retlw	0
 20452  005B94                     i2l7318:
 20453                           
 20454                           ; BSR set to: 0
 20455                           ;usb_device.c: 2272: else
 20456                           ;usb_device.c: 2273: {
 20457                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 20458  005B94  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20459  005B98  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20460  005B9C  0E08               	movlw	8
 20461  005B9E  6EDF               	movwf	indf2,c
 20462                           
 20463                           ; BSR set to: 0
 20464                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20465  005BA0  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 20466  005BA4  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20467  005BA8  0E00               	movlw	0
 20468  005BAA  8EDB               	bsf	plusw2,7,c
 20469  005BAC  0C00               	retlw	0
 20470  005BAE                     i2l1653:
 20471                           
 20472                           ; BSR set to: 0
 20473                           ;usb_device.c: 2279: else
 20474                           ;usb_device.c: 2280: {
 20475                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 20476  005BAE  AE04               	btfss	_outPipes+3,7,c	;volatile
 20477  005BB0  D012               	goto	i2l7328
 20478                           
 20479                           ; BSR set to: 0
 20480                           ;usb_device.c: 2285: {
 20481                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 20482  005BB2  5007               	movf	_outPipes+6,w,c	;volatile
 20483  005BB4  1008               	iorwf	_outPipes+7,w,c	;volatile
 20484  005BB6  E00E               	bz	i2l7326
 20485                           
 20486                           ; BSR set to: 0
 20487                           ;usb_device.c: 2287: {
 20488                           ;usb_device.c: 2288: outPipes[0].pFunc();
 20489  005BB8  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 20490  005BBC  D801               	call	i2u531_48
 20491  005BBE  D00A               	goto	i2l7326
 20492  005BC0                     i2u531_48:
 20493  005BC0  0005               	push	
 20494  005BC2  6EFA               	movwf	pclath,c
 20495  005BC4  50DE               	movf	postinc2,w,c
 20496  005BC6  6EFD               	movwf	tosl,c
 20497  005BC8  50DE               	movf	postinc2,w,c
 20498  005BCA  6EFE               	movwf	tosh,c
 20499  005BCC  50F8               	movf	tblptru,w,c
 20500  005BCE  6EFF               	movwf	tosu,c
 20501  005BD0  50FA               	movf	pclath,w,c
 20502  005BD2  0012               	return		;indir
 20503  005BD4                     i2l7326:
 20504                           
 20505                           ; BSR set to: 0
 20506                           ;usb_device.c: 2289: }
 20507                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 20508  005BD4  9E04               	bcf	_outPipes+3,7,c	;volatile
 20509  005BD6                     i2l7328:
 20510                           
 20511                           ; BSR set to: 0
 20512                           ;usb_device.c: 2291: }
 20513                           ;usb_device.c: 2293: controlTransferState = 0;
 20514  005BD6  6A21               	clrf	_controlTransferState,c	;volatile
 20515                           
 20516                           ; BSR set to: 0
 20517  005BD8  0012               	return		;funcret
 20518  005BDA                     __end_of_USBCtrlTrfInHandler:
 20519                           	opt stack 0
 20520                           tosu	equ	0xFFF
 20521                           tosh	equ	0xFFE
 20522                           tosl	equ	0xFFD
 20523                           pclatu	equ	0xFFB
 20524                           pclath	equ	0xFFA
 20525                           tblptru	equ	0xFF8
 20526                           tblptrh	equ	0xFF7
 20527                           tblptrl	equ	0xFF6
 20528                           tablat	equ	0xFF5
 20529                           prodh	equ	0xFF4
 20530                           prodl	equ	0xFF3
 20531                           intcon	equ	0xFF2
 20532                           postinc0	equ	0xFEE
 20533                           wreg	equ	0xFE8
 20534                           indf1	equ	0xFE7
 20535                           postdec1	equ	0xFE5
 20536                           fsr1h	equ	0xFE2
 20537                           fsr1l	equ	0xFE1
 20538                           indf2	equ	0xFDF
 20539                           postinc2	equ	0xFDE
 20540                           postdec2	equ	0xFDD
 20541                           plusw2	equ	0xFDB
 20542                           fsr2h	equ	0xFDA
 20543                           fsr2l	equ	0xFD9
 20544                           status	equ	0xFD8
 20545                           
 20546 ;; *************** function _USBCtrlTrfTxService *****************
 20547 ;; Defined at:
 20548 ;;		line 1437 in file "../Includes/Usb/framework/usb_device.c"
 20549 ;; Parameters:    Size  Location     Type
 20550 ;;		None
 20551 ;; Auto vars:     Size  Location     Type
 20552 ;;  byteToSend      1    0[COMRAM] unsigned char 
 20553 ;; Return value:  Size  Location     Type
 20554 ;;                  1    wreg      void 
 20555 ;; Registers used:
 20556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20557 ;; Tracked objects:
 20558 ;;		On entry : B/4
 20559 ;;		On exit  : F/0
 20560 ;;		Unchanged: 0/0
 20561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20562 ;;      Params:         0       0       0       0       0       0       0       0       0
 20563 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20564 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20565 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20566 ;;Total ram usage:        1 bytes
 20567 ;; Hardware stack levels used:    1
 20568 ;; This function calls:
 20569 ;;		Nothing
 20570 ;; This function is called by:
 20571 ;;		_USBCtrlEPAllowDataStage
 20572 ;;		_USBCtrlTrfInHandler
 20573 ;; This function uses a non-reentrant model
 20574 ;;
 20575                           
 20576                           	psect	text105
 20577  005A4A                     __ptext105:
 20578                           	opt stack 0
 20579  005A4A                     _USBCtrlTrfTxService:
 20580                           	opt stack 14
 20581                           
 20582                           ;usb_device.c: 1439: uint8_t byteToSend;
 20583                           ;usb_device.c: 1443: byteToSend = 8;
 20584                           
 20585                           ; BSR set to: 0
 20586                           ;incstack = 0
 20587  005A4A  0E08               	movlw	8
 20588  005A4C  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 20589                           
 20590                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 20591  005A4E  500E               	movf	_inPipes+5,w,c	;volatile
 20592  005A50  E10D               	bnz	i2l5900
 20593  005A52  0E08               	movlw	8
 20594  005A54  5C0D               	subwf	_inPipes+4,w,c	;volatile
 20595  005A56  E20A               	bc	i2l5900
 20596                           
 20597                           ;usb_device.c: 1445: {
 20598                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 20599  005A58  C00D  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 20600                           
 20601                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 20602  005A5C  502B               	movf	_shortPacketStatus,w,c	;volatile
 20603  005A5E  E102               	bnz	i2l5896
 20604                           
 20605                           ;usb_device.c: 1454: {
 20606                           ;usb_device.c: 1455: shortPacketStatus = 1;
 20607  005A60  0E01               	movlw	1
 20608  005A62  D003               	goto	L34
 20609  005A64                     i2l5896:
 20610                           
 20611                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 20612  005A64  042B               	decf	_shortPacketStatus,w,c	;volatile
 20613  005A66  E102               	bnz	i2l5900
 20614                           
 20615                           ;usb_device.c: 1458: {
 20616                           ;usb_device.c: 1459: shortPacketStatus = 2;
 20617  005A68  0E02               	movlw	2
 20618  005A6A                     L34:
 20619  005A6A  6E2B               	movwf	_shortPacketStatus,c	;volatile
 20620  005A6C                     i2l5900:
 20621                           
 20622                           ;usb_device.c: 1460: }
 20623                           ;usb_device.c: 1461: }
 20624                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 20625  005A6C  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20626  005A6E  5E0D               	subwf	_inPipes+4,f,c	;volatile
 20627  005A70  0E00               	movlw	0
 20628  005A72  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 20629                           
 20630                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 20631  005A74  EE20 F001          	lfsr	2,1
 20632  005A78  500F               	movf	_pBDTEntryIn,w,c
 20633  005A7A  26D9               	addwf	fsr2l,f,c
 20634  005A7C  5010               	movf	_pBDTEntryIn+1,w,c
 20635  005A7E  22DA               	addwfc	fsr2h,f,c
 20636  005A80  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 20637                           
 20638                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 20639  005A84  0E38               	movlw	56
 20640  005A86  0100               	movlb	0	; () banked
 20641  005A88  6F7F               	movwf	_pDst& (0+255),b
 20642  005A8A  0E04               	movlw	4
 20643  005A8C  6F80               	movwf	(_pDst+1)& (0+255),b
 20644                           
 20645                           ; BSR set to: 0
 20646                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 20647  005A8E  B00C               	btfsc	_inPipes+3,0,c	;volatile
 20648  005A90  D03A               	goto	i2l5928
 20649  005A92  D01B               	goto	i2l5918
 20650  005A94                     i2l5910:
 20651                           
 20652                           ; BSR set to: 0
 20653                           ;usb_device.c: 1478: {
 20654                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 20655  005A94  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 20656  005A98  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20657  005A9C  6AF8               	clrf	tblptru,c
 20658  005A9E  C07F  FFD9         	movff	_pDst,fsr2l
 20659  005AA2  C080  FFDA         	movff	_pDst+1,fsr2h
 20660  005AA6  0E07               	movlw	(high __ramtop+-1)
 20661  005AA8  64F7               	cpfsgt	tblptrh,c
 20662  005AAA  D003               	bra	i2u362_47
 20663  005AAC  0008               	tblrd		*
 20664  005AAE  50F5               	movf	tablat,w,c
 20665  005AB0  D005               	bra	i2u362_40
 20666  005AB2                     i2u362_47:
 20667  005AB2  CFF6 FFE1          	movff	tblptrl,fsr1l
 20668  005AB6  CFF7 FFE2          	movff	tblptrh,fsr1h
 20669  005ABA  50E7               	movf	indf1,w,c
 20670  005ABC                     i2u362_40:
 20671  005ABC  6EDF               	movwf	indf2,c
 20672  005ABE  4A09               	infsnz	_inPipes,f,c	;volatile
 20673  005AC0  2A0A               	incf	_inPipes+1,f,c	;volatile
 20674  005AC2  0100               	movlb	0	; () banked
 20675  005AC4  4B7F               	infsnz	_pDst& (0+255),f,b
 20676  005AC6  2B80               	incf	(_pDst+1)& (0+255),f,b
 20677                           
 20678                           ; BSR set to: 0
 20679                           ;usb_device.c: 1480: byteToSend--;
 20680  005AC8  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20681  005ACA                     i2l5918:
 20682                           
 20683                           ; BSR set to: 0
 20684  005ACA  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20685  005ACC  E1E3               	bnz	i2l5910
 20686  005ACE  0012               	return	
 20687  005AD0                     i2l5920:
 20688                           
 20689                           ; BSR set to: 0
 20690                           ;usb_device.c: 1486: {
 20691                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 20692  005AD0  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 20693  005AD4  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20694  005AD8  6AF8               	clrf	tblptru,c
 20695  005ADA  C07F  FFD9         	movff	_pDst,fsr2l
 20696  005ADE  C080  FFDA         	movff	_pDst+1,fsr2h
 20697  005AE2  0E07               	movlw	(high __ramtop+-1)
 20698  005AE4  64F7               	cpfsgt	tblptrh,c
 20699  005AE6  D003               	bra	i2u364_47
 20700  005AE8  0008               	tblrd		*
 20701  005AEA  50F5               	movf	tablat,w,c
 20702  005AEC  D005               	bra	i2u364_40
 20703  005AEE                     i2u364_47:
 20704  005AEE  CFF6 FFE1          	movff	tblptrl,fsr1l
 20705  005AF2  CFF7 FFE2          	movff	tblptrh,fsr1h
 20706  005AF6  50E7               	movf	indf1,w,c
 20707  005AF8                     i2u364_40:
 20708  005AF8  6EDF               	movwf	indf2,c
 20709  005AFA  4A09               	infsnz	_inPipes,f,c	;volatile
 20710  005AFC  2A0A               	incf	_inPipes+1,f,c	;volatile
 20711  005AFE  0100               	movlb	0	; () banked
 20712  005B00  4B7F               	infsnz	_pDst& (0+255),f,b
 20713  005B02  2B80               	incf	(_pDst+1)& (0+255),f,b
 20714                           
 20715                           ; BSR set to: 0
 20716                           ;usb_device.c: 1488: byteToSend--;
 20717  005B04  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20718  005B06                     i2l5928:
 20719                           
 20720                           ; BSR set to: 0
 20721  005B06  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20722  005B08  E1E3               	bnz	i2l5920
 20723                           
 20724                           ; BSR set to: 0
 20725  005B0A  0012               	return		;funcret
 20726  005B0C                     __end_of_USBCtrlTrfTxService:
 20727                           	opt stack 0
 20728                           tosu	equ	0xFFF
 20729                           tosh	equ	0xFFE
 20730                           tosl	equ	0xFFD
 20731                           pclatu	equ	0xFFB
 20732                           pclath	equ	0xFFA
 20733                           tblptru	equ	0xFF8
 20734                           tblptrh	equ	0xFF7
 20735                           tblptrl	equ	0xFF6
 20736                           tablat	equ	0xFF5
 20737                           prodh	equ	0xFF4
 20738                           prodl	equ	0xFF3
 20739                           intcon	equ	0xFF2
 20740                           postinc0	equ	0xFEE
 20741                           wreg	equ	0xFE8
 20742                           indf1	equ	0xFE7
 20743                           postdec1	equ	0xFE5
 20744                           fsr1h	equ	0xFE2
 20745                           fsr1l	equ	0xFE1
 20746                           indf2	equ	0xFDF
 20747                           postinc2	equ	0xFDE
 20748                           postdec2	equ	0xFDD
 20749                           plusw2	equ	0xFDB
 20750                           fsr2h	equ	0xFDA
 20751                           fsr2l	equ	0xFD9
 20752                           status	equ	0xFD8
 20753                           
 20754 ;; *************** function _USART_mySetLineCodingHandler *****************
 20755 ;; Defined at:
 20756 ;;		line 236 in file "../Includes/Board/USBapp.c"
 20757 ;; Parameters:    Size  Location     Type
 20758 ;;		None
 20759 ;; Auto vars:     Size  Location     Type
 20760 ;;  dwBaud          4   13[COMRAM] unsigned long 
 20761 ;; Return value:  Size  Location     Type
 20762 ;;                  1    wreg      void 
 20763 ;; Registers used:
 20764 ;;		wreg, status,2, status,0, cstack
 20765 ;; Tracked objects:
 20766 ;;		On entry : F/0
 20767 ;;		On exit  : F/0
 20768 ;;		Unchanged: F/0
 20769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20770 ;;      Params:         0       0       0       0       0       0       0       0       0
 20771 ;;      Locals:         4       0       0       0       0       0       0       0       0
 20772 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20773 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20774 ;;Total ram usage:        4 bytes
 20775 ;; Hardware stack levels used:    1
 20776 ;; Hardware stack levels required when called:    1
 20777 ;; This function calls:
 20778 ;;		___lldiv
 20779 ;;		i2_EUSART_Initialize
 20780 ;; This function is called by:
 20781 ;;		_USBCheckCDCRequest
 20782 ;;		_USBCtrlTrfRxService
 20783 ;;		_USBCtrlTrfInHandler
 20784 ;; This function uses a non-reentrant model
 20785 ;;
 20786                           
 20787                           	psect	text106
 20788  004C02                     __ptext106:
 20789                           	opt stack 0
 20790  004C02                     _USART_mySetLineCodingHandler:
 20791                           	opt stack 14
 20792                           
 20793                           ; BSR set to: 0
 20794                           ;USBapp.c: 239: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 20795                           
 20796                           ; BSR set to: 0
 20797                           ;incstack = 0
 20798  004C02  C1D8  F0AF         	movff	_cdc_notice,_line_coding
 20799  004C06  C1D9  F0B0         	movff	_cdc_notice+1,_line_coding+1
 20800  004C0A  C1DA  F0B1         	movff	_cdc_notice+2,_line_coding+2
 20801  004C0E  C1DB  F0B2         	movff	_cdc_notice+3,_line_coding+3
 20802                           
 20803                           ; BSR set to: 0
 20804                           ;USBapp.c: 241: uint32_t dwBaud;
 20805                           ;USBapp.c: 242: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 20806  004C12  6A2E               	clrf	___lldiv@dividend,c
 20807  004C14  0E1B               	movlw	27
 20808  004C16  6E2F               	movwf	___lldiv@dividend+1,c
 20809  004C18  0EB7               	movlw	183
 20810  004C1A  6E30               	movwf	___lldiv@dividend+2,c
 20811  004C1C  6A31               	clrf	___lldiv@dividend+3,c
 20812  004C1E  C0AF  F032         	movff	_line_coding,___lldiv@divisor
 20813  004C22  C0B0  F033         	movff	_line_coding+1,___lldiv@divisor+1
 20814  004C26  C0B1  F034         	movff	_line_coding+2,___lldiv@divisor+2
 20815  004C2A  C0B2  F035         	movff	_line_coding+3,___lldiv@divisor+3
 20816  004C2E  ECDF  F027         	call	___lldiv	;wreg free
 20817  004C32  0EFF               	movlw	255
 20818  004C34  242E               	addwf	?___lldiv,w,c
 20819  004C36  6E3B               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 20820  004C38  0EFF               	movlw	255
 20821  004C3A  202F               	addwfc	?___lldiv+1,w,c
 20822  004C3C  6E3C               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 20823  004C3E  0EFF               	movlw	255
 20824  004C40  2030               	addwfc	?___lldiv+2,w,c
 20825  004C42  6E3D               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 20826  004C44  0EFF               	movlw	255
 20827  004C46  2031               	addwfc	?___lldiv+3,w,c
 20828  004C48  6E3E               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 20829                           
 20830                           ; BSR set to: 0
 20831                           ;USBapp.c: 243: SPBRG = (uint8_t) dwBaud;
 20832  004C4A  C03B  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 20833                           
 20834                           ; BSR set to: 0
 20835                           ;USBapp.c: 244: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 20836  004C4E  C03C  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 20837                           
 20838                           ; BSR set to: 0
 20839                           ;USBapp.c: 246: EUSART_Initialize();
 20840  004C52  EF66  F023         	goto	i2_EUSART_Initialize	;wreg free
 20841  004C56                     __end_of_USART_mySetLineCodingHandler:
 20842                           	opt stack 0
 20843                           tosu	equ	0xFFF
 20844                           tosh	equ	0xFFE
 20845                           tosl	equ	0xFFD
 20846                           pclatu	equ	0xFFB
 20847                           pclath	equ	0xFFA
 20848                           tblptru	equ	0xFF8
 20849                           tblptrh	equ	0xFF7
 20850                           tblptrl	equ	0xFF6
 20851                           tablat	equ	0xFF5
 20852                           prodh	equ	0xFF4
 20853                           prodl	equ	0xFF3
 20854                           intcon	equ	0xFF2
 20855                           postinc0	equ	0xFEE
 20856                           wreg	equ	0xFE8
 20857                           indf1	equ	0xFE7
 20858                           postdec1	equ	0xFE5
 20859                           fsr1h	equ	0xFE2
 20860                           fsr1l	equ	0xFE1
 20861                           indf2	equ	0xFDF
 20862                           postinc2	equ	0xFDE
 20863                           postdec2	equ	0xFDD
 20864                           plusw2	equ	0xFDB
 20865                           fsr2h	equ	0xFDA
 20866                           fsr2l	equ	0xFD9
 20867                           status	equ	0xFD8
 20868                           
 20869 ;; *************** function i2_EUSART_Initialize *****************
 20870 ;; Defined at:
 20871 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 20872 ;; Parameters:    Size  Location     Type
 20873 ;;		None
 20874 ;; Auto vars:     Size  Location     Type
 20875 ;;		None
 20876 ;; Return value:  Size  Location     Type
 20877 ;;                  1    wreg      void 
 20878 ;; Registers used:
 20879 ;;		wreg, status,2
 20880 ;; Tracked objects:
 20881 ;;		On entry : F/0
 20882 ;;		On exit  : F/0
 20883 ;;		Unchanged: F/0
 20884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20885 ;;      Params:         0       0       0       0       0       0       0       0       0
 20886 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20887 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20888 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20889 ;;Total ram usage:        0 bytes
 20890 ;; Hardware stack levels used:    1
 20891 ;; This function calls:
 20892 ;;		Nothing
 20893 ;; This function is called by:
 20894 ;;		_USBapp_CdcEmulatorInitialize
 20895 ;;		_USART_mySetLineCodingHandler
 20896 ;; This function uses a non-reentrant model
 20897 ;;
 20898                           
 20899                           	psect	text107
 20900  0046CC                     __ptext107:
 20901                           	opt stack 0
 20902  0046CC                     i2_EUSART_Initialize:
 20903                           	opt stack 16
 20904                           
 20905                           ; BSR set to: 0
 20906                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 20907                           
 20908                           ; BSR set to: 0
 20909                           ;incstack = 0
 20910  0046CC  9A9D               	bcf	3997,5,c	;volatile
 20911                           
 20912                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 20913  0046CE  989D               	bcf	3997,4,c	;volatile
 20914                           
 20915                           ; BSR set to: 0
 20916                           ;eusart.c: 85: BAUDCON = 0x48;
 20917  0046D0  0E48               	movlw	72
 20918  0046D2  6EB8               	movwf	4024,c	;volatile
 20919                           
 20920                           ;eusart.c: 88: RCSTA = 0x90;
 20921  0046D4  0E90               	movlw	144
 20922  0046D6  6EAB               	movwf	4011,c	;volatile
 20923                           
 20924                           ;eusart.c: 91: TXSTA = 0x26;
 20925  0046D8  0E26               	movlw	38
 20926  0046DA  6EAC               	movwf	4012,c	;volatile
 20927                           
 20928                           ;eusart.c: 95: SPBRG = 0x71;
 20929  0046DC  0E71               	movlw	113
 20930  0046DE  6EAF               	movwf	4015,c	;volatile
 20931                           
 20932                           ;eusart.c: 100: SPBRGH = 0x02;
 20933  0046E0  0E02               	movlw	2
 20934  0046E2  6EB0               	movwf	4016,c	;volatile
 20935                           
 20936                           ; BSR set to: 0
 20937                           ;eusart.c: 103: eusartTxHead = 0;
 20938  0046E4  6A27               	clrf	_eusartTxHead,c
 20939                           
 20940                           ; BSR set to: 0
 20941                           ;eusart.c: 104: eusartTxTail = 0;
 20942  0046E6  6A28               	clrf	_eusartTxTail,c
 20943                           
 20944                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 20945  0046E8  0E40               	movlw	64
 20946  0046EA  6E26               	movwf	_eusartTxBufferRemaining,c	;volatile
 20947                           
 20948                           ; BSR set to: 0
 20949                           ;eusart.c: 107: eusartRxHead = 0;
 20950  0046EC  6A24               	clrf	_eusartRxHead,c
 20951                           
 20952                           ; BSR set to: 0
 20953                           ;eusart.c: 108: eusartRxTail = 0;
 20954  0046EE  6A25               	clrf	_eusartRxTail,c
 20955                           
 20956                           ; BSR set to: 0
 20957                           ;eusart.c: 109: eusartRxCount = 0;
 20958  0046F0  6A23               	clrf	_eusartRxCount,c	;volatile
 20959                           
 20960                           ; BSR set to: 0
 20961                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 20962  0046F2  8A9D               	bsf	3997,5,c	;volatile
 20963                           
 20964                           ; BSR set to: 0
 20965                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 20966  0046F4  88AB               	bsf	4011,4,c	;volatile
 20967                           
 20968                           ; BSR set to: 0
 20969  0046F6  0012               	return		;funcret
 20970  0046F8                     __end_ofi2_EUSART_Initialize:
 20971                           	opt stack 0
 20972                           tosu	equ	0xFFF
 20973                           tosh	equ	0xFFE
 20974                           tosl	equ	0xFFD
 20975                           pclatu	equ	0xFFB
 20976                           pclath	equ	0xFFA
 20977                           tblptru	equ	0xFF8
 20978                           tblptrh	equ	0xFF7
 20979                           tblptrl	equ	0xFF6
 20980                           tablat	equ	0xFF5
 20981                           prodh	equ	0xFF4
 20982                           prodl	equ	0xFF3
 20983                           intcon	equ	0xFF2
 20984                           postinc0	equ	0xFEE
 20985                           wreg	equ	0xFE8
 20986                           indf1	equ	0xFE7
 20987                           postdec1	equ	0xFE5
 20988                           fsr1h	equ	0xFE2
 20989                           fsr1l	equ	0xFE1
 20990                           indf2	equ	0xFDF
 20991                           postinc2	equ	0xFDE
 20992                           postdec2	equ	0xFDD
 20993                           plusw2	equ	0xFDB
 20994                           fsr2h	equ	0xFDA
 20995                           fsr2l	equ	0xFD9
 20996                           status	equ	0xFD8
 20997                           
 20998 ;; *************** function ___lldiv *****************
 20999 ;; Defined at:
 21000 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lldiv.c"
 21001 ;; Parameters:    Size  Location     Type
 21002 ;;  dividend        4    0[COMRAM] unsigned long 
 21003 ;;  divisor         4    4[COMRAM] unsigned long 
 21004 ;; Auto vars:     Size  Location     Type
 21005 ;;  quotient        4    8[COMRAM] unsigned long 
 21006 ;;  counter         1   12[COMRAM] unsigned char 
 21007 ;; Return value:  Size  Location     Type
 21008 ;;                  4    0[COMRAM] unsigned long 
 21009 ;; Registers used:
 21010 ;;		wreg, status,2, status,0
 21011 ;; Tracked objects:
 21012 ;;		On entry : F/0
 21013 ;;		On exit  : F/0
 21014 ;;		Unchanged: F/0
 21015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21016 ;;      Params:         8       0       0       0       0       0       0       0       0
 21017 ;;      Locals:         5       0       0       0       0       0       0       0       0
 21018 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21019 ;;      Totals:        13       0       0       0       0       0       0       0       0
 21020 ;;Total ram usage:       13 bytes
 21021 ;; Hardware stack levels used:    1
 21022 ;; This function calls:
 21023 ;;		Nothing
 21024 ;; This function is called by:
 21025 ;;		_USART_mySetLineCodingHandler
 21026 ;; This function uses a non-reentrant model
 21027 ;;
 21028                           
 21029                           	psect	text108
 21030  004FBE                     __ptext108:
 21031                           	opt stack 0
 21032  004FBE                     ___lldiv:
 21033                           	opt stack 14
 21034                           
 21035                           ; BSR set to: 0
 21036                           
 21037                           ; BSR set to: 0
 21038                           ;incstack = 0
 21039  004FBE  6A36               	clrf	___lldiv@quotient,c
 21040  004FC0  6A37               	clrf	___lldiv@quotient+1,c
 21041  004FC2  6A38               	clrf	___lldiv@quotient+2,c
 21042  004FC4  6A39               	clrf	___lldiv@quotient+3,c
 21043                           
 21044                           ; BSR set to: 0
 21045  004FC6  5032               	movf	___lldiv@divisor,w,c
 21046  004FC8  1033               	iorwf	___lldiv@divisor+1,w,c
 21047  004FCA  1034               	iorwf	___lldiv@divisor+2,w,c
 21048  004FCC  1035               	iorwf	___lldiv@divisor+3,w,c
 21049  004FCE  E029               	bz	i2l2275
 21050                           
 21051                           ; BSR set to: 0
 21052  004FD0  0E01               	movlw	1
 21053  004FD2  6E3A               	movwf	___lldiv@counter,c
 21054  004FD4  D006               	goto	i2l5938
 21055  004FD6                     i2l5936:
 21056                           
 21057                           ; BSR set to: 0
 21058  004FD6  90D8               	bcf	status,0,c
 21059  004FD8  3632               	rlcf	___lldiv@divisor,f,c
 21060  004FDA  3633               	rlcf	___lldiv@divisor+1,f,c
 21061  004FDC  3634               	rlcf	___lldiv@divisor+2,f,c
 21062  004FDE  3635               	rlcf	___lldiv@divisor+3,f,c
 21063  004FE0  2A3A               	incf	___lldiv@counter,f,c
 21064  004FE2                     i2l5938:
 21065                           
 21066                           ; BSR set to: 0
 21067  004FE2  AE35               	btfss	___lldiv@divisor+3,7,c
 21068  004FE4  D7F8               	goto	i2l5936
 21069  004FE6                     i2l5940:
 21070                           
 21071                           ; BSR set to: 0
 21072  004FE6  90D8               	bcf	status,0,c
 21073  004FE8  3636               	rlcf	___lldiv@quotient,f,c
 21074  004FEA  3637               	rlcf	___lldiv@quotient+1,f,c
 21075  004FEC  3638               	rlcf	___lldiv@quotient+2,f,c
 21076  004FEE  3639               	rlcf	___lldiv@quotient+3,f,c
 21077                           
 21078                           ; BSR set to: 0
 21079  004FF0  5032               	movf	___lldiv@divisor,w,c
 21080  004FF2  5C2E               	subwf	___lldiv@dividend,w,c
 21081  004FF4  5033               	movf	___lldiv@divisor+1,w,c
 21082  004FF6  582F               	subwfb	___lldiv@dividend+1,w,c
 21083  004FF8  5034               	movf	___lldiv@divisor+2,w,c
 21084  004FFA  5830               	subwfb	___lldiv@dividend+2,w,c
 21085  004FFC  5035               	movf	___lldiv@divisor+3,w,c
 21086  004FFE  5831               	subwfb	___lldiv@dividend+3,w,c
 21087  005000  E309               	bnc	i2l5948
 21088                           
 21089                           ; BSR set to: 0
 21090  005002  5032               	movf	___lldiv@divisor,w,c
 21091  005004  5E2E               	subwf	___lldiv@dividend,f,c
 21092  005006  5033               	movf	___lldiv@divisor+1,w,c
 21093  005008  5A2F               	subwfb	___lldiv@dividend+1,f,c
 21094  00500A  5034               	movf	___lldiv@divisor+2,w,c
 21095  00500C  5A30               	subwfb	___lldiv@dividend+2,f,c
 21096  00500E  5035               	movf	___lldiv@divisor+3,w,c
 21097  005010  5A31               	subwfb	___lldiv@dividend+3,f,c
 21098                           
 21099                           ; BSR set to: 0
 21100  005012  8036               	bsf	___lldiv@quotient,0,c
 21101  005014                     i2l5948:
 21102                           
 21103                           ; BSR set to: 0
 21104  005014  90D8               	bcf	status,0,c
 21105  005016  3235               	rrcf	___lldiv@divisor+3,f,c
 21106  005018  3234               	rrcf	___lldiv@divisor+2,f,c
 21107  00501A  3233               	rrcf	___lldiv@divisor+1,f,c
 21108  00501C  3232               	rrcf	___lldiv@divisor,f,c
 21109                           
 21110                           ; BSR set to: 0
 21111  00501E  2E3A               	decfsz	___lldiv@counter,f,c
 21112  005020  D7E2               	goto	i2l5940
 21113  005022                     i2l2275:
 21114                           
 21115                           ; BSR set to: 0
 21116  005022  C036  F02E         	movff	___lldiv@quotient,?___lldiv
 21117  005026  C037  F02F         	movff	___lldiv@quotient+1,?___lldiv+1
 21118  00502A  C038  F030         	movff	___lldiv@quotient+2,?___lldiv+2
 21119  00502E  C039  F031         	movff	___lldiv@quotient+3,?___lldiv+3
 21120                           
 21121                           ; BSR set to: 0
 21122  005032  0012               	return		;funcret
 21123  005034                     __end_of___lldiv:
 21124                           	opt stack 0
 21125                           tosu	equ	0xFFF
 21126                           tosh	equ	0xFFE
 21127                           tosl	equ	0xFFD
 21128                           pclatu	equ	0xFFB
 21129                           pclath	equ	0xFFA
 21130                           tblptru	equ	0xFF8
 21131                           tblptrh	equ	0xFF7
 21132                           tblptrl	equ	0xFF6
 21133                           tablat	equ	0xFF5
 21134                           prodh	equ	0xFF4
 21135                           prodl	equ	0xFF3
 21136                           intcon	equ	0xFF2
 21137                           postinc0	equ	0xFEE
 21138                           wreg	equ	0xFE8
 21139                           indf1	equ	0xFE7
 21140                           postdec1	equ	0xFE5
 21141                           fsr1h	equ	0xFE2
 21142                           fsr1l	equ	0xFE1
 21143                           indf2	equ	0xFDF
 21144                           postinc2	equ	0xFDE
 21145                           postdec2	equ	0xFDD
 21146                           plusw2	equ	0xFDB
 21147                           fsr2h	equ	0xFDA
 21148                           fsr2l	equ	0xFD9
 21149                           status	equ	0xFD8
 21150                           
 21151 ;; *************** function _TMRapp_Tick *****************
 21152 ;; Defined at:
 21153 ;;		line 10 in file "../Includes/Drivers/TMRapp.c"
 21154 ;; Parameters:    Size  Location     Type
 21155 ;;		None
 21156 ;; Auto vars:     Size  Location     Type
 21157 ;;		None
 21158 ;; Return value:  Size  Location     Type
 21159 ;;                  1    wreg      void 
 21160 ;; Registers used:
 21161 ;;		None
 21162 ;; Tracked objects:
 21163 ;;		On entry : 0/0
 21164 ;;		On exit  : F/0
 21165 ;;		Unchanged: 0/0
 21166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21167 ;;      Params:         0       0       0       0       0       0       0       0       0
 21168 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21169 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21170 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21171 ;;Total ram usage:        0 bytes
 21172 ;; Hardware stack levels used:    1
 21173 ;; This function calls:
 21174 ;;		Nothing
 21175 ;; This function is called by:
 21176 ;;		_INTERRUPT_InterruptManager
 21177 ;; This function uses a non-reentrant model
 21178 ;;
 21179                           
 21180                           	psect	text109
 21181  004308                     __ptext109:
 21182                           	opt stack 0
 21183  004308                     _TMRapp_Tick:
 21184                           	opt stack 19
 21185                           
 21186                           ;TMRapp.c: 13: appTimer.mSecTick = 1;
 21187                           
 21188                           ; BSR set to: 0
 21189                           ;incstack = 0
 21190  004308  0100               	movlb	0	; () banked
 21191  00430A  8195               	bsf	_appTimer& (0+255),0,b
 21192                           
 21193                           ; BSR set to: 0
 21194  00430C  0012               	return		;funcret
 21195  00430E                     __end_of_TMRapp_Tick:
 21196                           	opt stack 0
 21197                           tosu	equ	0xFFF
 21198                           tosh	equ	0xFFE
 21199                           tosl	equ	0xFFD
 21200                           pclatu	equ	0xFFB
 21201                           pclath	equ	0xFFA
 21202                           tblptru	equ	0xFF8
 21203                           tblptrh	equ	0xFF7
 21204                           tblptrl	equ	0xFF6
 21205                           tablat	equ	0xFF5
 21206                           prodh	equ	0xFF4
 21207                           prodl	equ	0xFF3
 21208                           intcon	equ	0xFF2
 21209                           postinc0	equ	0xFEE
 21210                           wreg	equ	0xFE8
 21211                           indf1	equ	0xFE7
 21212                           postdec1	equ	0xFE5
 21213                           fsr1h	equ	0xFE2
 21214                           fsr1l	equ	0xFE1
 21215                           indf2	equ	0xFDF
 21216                           postinc2	equ	0xFDE
 21217                           postdec2	equ	0xFDD
 21218                           plusw2	equ	0xFDB
 21219                           fsr2h	equ	0xFDA
 21220                           fsr2l	equ	0xFD9
 21221                           status	equ	0xFD8
 21222                           
 21223 ;; *************** function _TMR1_ISR *****************
 21224 ;; Defined at:
 21225 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 21226 ;; Parameters:    Size  Location     Type
 21227 ;;		None
 21228 ;; Auto vars:     Size  Location     Type
 21229 ;;		None
 21230 ;; Return value:  Size  Location     Type
 21231 ;;                  1    wreg      void 
 21232 ;; Registers used:
 21233 ;;		None
 21234 ;; Tracked objects:
 21235 ;;		On entry : 0/0
 21236 ;;		On exit  : 0/0
 21237 ;;		Unchanged: 0/0
 21238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21239 ;;      Params:         0       0       0       0       0       0       0       0       0
 21240 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21241 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21242 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21243 ;;Total ram usage:        0 bytes
 21244 ;; Hardware stack levels used:    1
 21245 ;; This function calls:
 21246 ;;		Nothing
 21247 ;; This function is called by:
 21248 ;;		_INTERRUPT_InterruptManager
 21249 ;; This function uses a non-reentrant model
 21250 ;;
 21251                           
 21252                           	psect	text110
 21253  004334                     __ptext110:
 21254                           	opt stack 0
 21255  004334                     _TMR1_ISR:
 21256                           	opt stack 19
 21257                           
 21258                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 21259                           
 21260                           ; BSR set to: 0
 21261                           ;incstack = 0
 21262  004334  909E               	bcf	3998,0,c	;volatile
 21263                           
 21264                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 21265  004336  C086  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 21266                           
 21267                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 21268  00433A  C085  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 21269  00433E  0012               	return		;funcret
 21270  004340                     __end_of_TMR1_ISR:
 21271                           	opt stack 0
 21272                           tosu	equ	0xFFF
 21273                           tosh	equ	0xFFE
 21274                           tosl	equ	0xFFD
 21275                           pclatu	equ	0xFFB
 21276                           pclath	equ	0xFFA
 21277                           tblptru	equ	0xFF8
 21278                           tblptrh	equ	0xFF7
 21279                           tblptrl	equ	0xFF6
 21280                           tablat	equ	0xFF5
 21281                           prodh	equ	0xFF4
 21282                           prodl	equ	0xFF3
 21283                           intcon	equ	0xFF2
 21284                           postinc0	equ	0xFEE
 21285                           wreg	equ	0xFE8
 21286                           indf1	equ	0xFE7
 21287                           postdec1	equ	0xFE5
 21288                           fsr1h	equ	0xFE2
 21289                           fsr1l	equ	0xFE1
 21290                           indf2	equ	0xFDF
 21291                           postinc2	equ	0xFDE
 21292                           postdec2	equ	0xFDD
 21293                           plusw2	equ	0xFDB
 21294                           fsr2h	equ	0xFDA
 21295                           fsr2l	equ	0xFD9
 21296                           status	equ	0xFD8
 21297                           
 21298 ;; *************** function _EUSART_Transmit_ISR *****************
 21299 ;; Defined at:
 21300 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 21301 ;; Parameters:    Size  Location     Type
 21302 ;;		None
 21303 ;; Auto vars:     Size  Location     Type
 21304 ;;		None
 21305 ;; Return value:  Size  Location     Type
 21306 ;;                  1    wreg      void 
 21307 ;; Registers used:
 21308 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21309 ;; Tracked objects:
 21310 ;;		On entry : 0/0
 21311 ;;		On exit  : 0/0
 21312 ;;		Unchanged: 0/0
 21313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21314 ;;      Params:         0       0       0       0       0       0       0       0       0
 21315 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21316 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21317 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21318 ;;Total ram usage:        0 bytes
 21319 ;; Hardware stack levels used:    1
 21320 ;; This function calls:
 21321 ;;		Nothing
 21322 ;; This function is called by:
 21323 ;;		_INTERRUPT_InterruptManager
 21324 ;; This function uses a non-reentrant model
 21325 ;;
 21326                           
 21327                           	psect	text111
 21328  004600                     __ptext111:
 21329                           	opt stack 0
 21330  004600                     _EUSART_Transmit_ISR:
 21331                           	opt stack 19
 21332                           
 21333                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 21334                           
 21335                           ;incstack = 0
 21336  004600  0E40               	movlw	64
 21337  004602  6026               	cpfslt	_eusartTxBufferRemaining,c
 21338  004604  D00F               	goto	i2l954
 21339                           
 21340                           ;eusart.c: 167: {
 21341                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 21342  004606  0E40               	movlw	low _eusartTxBuffer
 21343  004608  2428               	addwf	_eusartTxTail,w,c
 21344  00460A  6ED9               	movwf	fsr2l,c
 21345  00460C  6ADA               	clrf	fsr2h,c
 21346  00460E  0E02               	movlw	high _eusartTxBuffer
 21347  004610  22DA               	addwfc	fsr2h,f,c
 21348  004612  50DF               	movf	indf2,w,c
 21349  004614  6EAD               	movwf	4013,c	;volatile
 21350  004616  2A28               	incf	_eusartTxTail,f,c
 21351                           
 21352                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 21353  004618  0E3F               	movlw	63
 21354  00461A  6428               	cpfsgt	_eusartTxTail,c
 21355  00461C  D001               	goto	i2l8410
 21356                           
 21357                           ;eusart.c: 170: {
 21358                           ;eusart.c: 171: eusartTxTail = 0;
 21359  00461E  6A28               	clrf	_eusartTxTail,c
 21360  004620                     i2l8410:
 21361                           
 21362                           ;eusart.c: 172: }
 21363                           ;eusart.c: 173: eusartTxBufferRemaining++;
 21364  004620  2A26               	incf	_eusartTxBufferRemaining,f,c	;volatile
 21365                           
 21366                           ;eusart.c: 174: }
 21367  004622  0012               	return	
 21368  004624                     i2l954:
 21369                           
 21370                           ;eusart.c: 175: else
 21371                           ;eusart.c: 176: {
 21372                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 21373  004624  989D               	bcf	3997,4,c	;volatile
 21374  004626  0012               	return		;funcret
 21375  004628                     __end_of_EUSART_Transmit_ISR:
 21376                           	opt stack 0
 21377                           tosu	equ	0xFFF
 21378                           tosh	equ	0xFFE
 21379                           tosl	equ	0xFFD
 21380                           pclatu	equ	0xFFB
 21381                           pclath	equ	0xFFA
 21382                           tblptru	equ	0xFF8
 21383                           tblptrh	equ	0xFF7
 21384                           tblptrl	equ	0xFF6
 21385                           tablat	equ	0xFF5
 21386                           prodh	equ	0xFF4
 21387                           prodl	equ	0xFF3
 21388                           intcon	equ	0xFF2
 21389                           postinc0	equ	0xFEE
 21390                           wreg	equ	0xFE8
 21391                           indf1	equ	0xFE7
 21392                           postdec1	equ	0xFE5
 21393                           fsr1h	equ	0xFE2
 21394                           fsr1l	equ	0xFE1
 21395                           indf2	equ	0xFDF
 21396                           postinc2	equ	0xFDE
 21397                           postdec2	equ	0xFDD
 21398                           plusw2	equ	0xFDB
 21399                           fsr2h	equ	0xFDA
 21400                           fsr2l	equ	0xFD9
 21401                           status	equ	0xFD8
 21402                           
 21403 ;; *************** function _EUSART_Receive_ISR *****************
 21404 ;; Defined at:
 21405 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 21406 ;; Parameters:    Size  Location     Type
 21407 ;;		None
 21408 ;; Auto vars:     Size  Location     Type
 21409 ;;		None
 21410 ;; Return value:  Size  Location     Type
 21411 ;;                  1    wreg      void 
 21412 ;; Registers used:
 21413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21414 ;; Tracked objects:
 21415 ;;		On entry : 0/0
 21416 ;;		On exit  : 0/0
 21417 ;;		Unchanged: 0/0
 21418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21419 ;;      Params:         0       0       0       0       0       0       0       0       0
 21420 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21421 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21422 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21423 ;;Total ram usage:        0 bytes
 21424 ;; Hardware stack levels used:    1
 21425 ;; This function calls:
 21426 ;;		Nothing
 21427 ;; This function is called by:
 21428 ;;		_INTERRUPT_InterruptManager
 21429 ;; This function uses a non-reentrant model
 21430 ;;
 21431                           
 21432                           	psect	text112
 21433  0045D8                     __ptext112:
 21434                           	opt stack 0
 21435  0045D8                     _EUSART_Receive_ISR:
 21436                           	opt stack 19
 21437                           
 21438                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 21439                           
 21440                           ;incstack = 0
 21441  0045D8  A2AB               	btfss	4011,1,c	;volatile
 21442  0045DA  D003               	goto	i2l8416
 21443                           
 21444                           ;eusart.c: 184: {
 21445                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 21446  0045DC  98AB               	bcf	4011,4,c	;volatile
 21447                           
 21448                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 21449  0045DE  88AB               	bsf	4011,4,c	;volatile
 21450                           
 21451                           ;eusart.c: 189: }
 21452  0045E0  0012               	return	
 21453  0045E2                     i2l8416:
 21454                           
 21455                           ;eusart.c: 190: else
 21456                           ;eusart.c: 191: {
 21457                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 21458  0045E2  0E00               	movlw	low _eusartRxBuffer
 21459  0045E4  2424               	addwf	_eusartRxHead,w,c
 21460  0045E6  6ED9               	movwf	fsr2l,c
 21461  0045E8  6ADA               	clrf	fsr2h,c
 21462  0045EA  0E02               	movlw	high _eusartRxBuffer
 21463  0045EC  22DA               	addwfc	fsr2h,f,c
 21464  0045EE  CFAE FFDF          	movff	4014,indf2	;volatile
 21465  0045F2  2A24               	incf	_eusartRxHead,f,c
 21466                           
 21467                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 21468  0045F4  0E3F               	movlw	63
 21469  0045F6  6424               	cpfsgt	_eusartRxHead,c
 21470  0045F8  D001               	goto	i2l8424
 21471                           
 21472                           ;eusart.c: 195: {
 21473                           ;eusart.c: 196: eusartRxHead = 0;
 21474  0045FA  6A24               	clrf	_eusartRxHead,c
 21475  0045FC                     i2l8424:
 21476                           
 21477                           ;eusart.c: 197: }
 21478                           ;eusart.c: 198: eusartRxCount++;
 21479  0045FC  2A23               	incf	_eusartRxCount,f,c	;volatile
 21480  0045FE  0012               	return		;funcret
 21481  004600                     __end_of_EUSART_Receive_ISR:
 21482                           	opt stack 0
 21483                           tosu	equ	0xFFF
 21484                           tosh	equ	0xFFE
 21485                           tosl	equ	0xFFD
 21486                           pclatu	equ	0xFFB
 21487                           pclath	equ	0xFFA
 21488                           tblptru	equ	0xFF8
 21489                           tblptrh	equ	0xFF7
 21490                           tblptrl	equ	0xFF6
 21491                           tablat	equ	0xFF5
 21492                           prodh	equ	0xFF4
 21493                           prodl	equ	0xFF3
 21494                           intcon	equ	0xFF2
 21495                           postinc0	equ	0xFEE
 21496                           wreg	equ	0xFE8
 21497                           indf1	equ	0xFE7
 21498                           postdec1	equ	0xFE5
 21499                           fsr1h	equ	0xFE2
 21500                           fsr1l	equ	0xFE1
 21501                           indf2	equ	0xFDF
 21502                           postinc2	equ	0xFDE
 21503                           postdec2	equ	0xFDD
 21504                           plusw2	equ	0xFDB
 21505                           fsr2h	equ	0xFDA
 21506                           fsr2l	equ	0xFD9
 21507                           status	equ	0xFD8
 21508                           
 21509 ;; *************** function _CMP1_ISR *****************
 21510 ;; Defined at:
 21511 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 21512 ;; Parameters:    Size  Location     Type
 21513 ;;		None
 21514 ;; Auto vars:     Size  Location     Type
 21515 ;;		None
 21516 ;; Return value:  Size  Location     Type
 21517 ;;                  1    wreg      void 
 21518 ;; Registers used:
 21519 ;;		None
 21520 ;; Tracked objects:
 21521 ;;		On entry : 0/0
 21522 ;;		On exit  : 0/0
 21523 ;;		Unchanged: 0/0
 21524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21525 ;;      Params:         0       0       0       0       0       0       0       0       0
 21526 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21527 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21528 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21529 ;;Total ram usage:        0 bytes
 21530 ;; Hardware stack levels used:    1
 21531 ;; This function calls:
 21532 ;;		Nothing
 21533 ;; This function is called by:
 21534 ;;		_INTERRUPT_InterruptManager
 21535 ;; This function uses a non-reentrant model
 21536 ;;
 21537                           
 21538                           	psect	text113
 21539  0042F4                     __ptext113:
 21540                           	opt stack 0
 21541  0042F4                     _CMP1_ISR:
 21542                           	opt stack 19
 21543                           
 21544                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 21545                           
 21546                           ;incstack = 0
 21547  0042F4  9CA1               	bcf	4001,6,c	;volatile
 21548  0042F6  0012               	return		;funcret
 21549  0042F8                     __end_of_CMP1_ISR:
 21550                           	opt stack 0
 21551                           tosu	equ	0xFFF
 21552                           tosh	equ	0xFFE
 21553                           tosl	equ	0xFFD
 21554                           pclatu	equ	0xFFB
 21555                           pclath	equ	0xFFA
 21556                           tblptru	equ	0xFF8
 21557                           tblptrh	equ	0xFF7
 21558                           tblptrl	equ	0xFF6
 21559                           tablat	equ	0xFF5
 21560                           prodh	equ	0xFF4
 21561                           prodl	equ	0xFF3
 21562                           intcon	equ	0xFF2
 21563                           postinc0	equ	0xFEE
 21564                           wreg	equ	0xFE8
 21565                           indf1	equ	0xFE7
 21566                           postdec1	equ	0xFE5
 21567                           fsr1h	equ	0xFE2
 21568                           fsr1l	equ	0xFE1
 21569                           indf2	equ	0xFDF
 21570                           postinc2	equ	0xFDE
 21571                           postdec2	equ	0xFDD
 21572                           plusw2	equ	0xFDB
 21573                           fsr2h	equ	0xFDA
 21574                           fsr2l	equ	0xFD9
 21575                           status	equ	0xFD8
 21576                           tosu	equ	0xFFF
 21577                           tosh	equ	0xFFE
 21578                           tosl	equ	0xFFD
 21579                           pclatu	equ	0xFFB
 21580                           pclath	equ	0xFFA
 21581                           tblptru	equ	0xFF8
 21582                           tblptrh	equ	0xFF7
 21583                           tblptrl	equ	0xFF6
 21584                           tablat	equ	0xFF5
 21585                           prodh	equ	0xFF4
 21586                           prodl	equ	0xFF3
 21587                           intcon	equ	0xFF2
 21588                           postinc0	equ	0xFEE
 21589                           wreg	equ	0xFE8
 21590                           indf1	equ	0xFE7
 21591                           postdec1	equ	0xFE5
 21592                           fsr1h	equ	0xFE2
 21593                           fsr1l	equ	0xFE1
 21594                           indf2	equ	0xFDF
 21595                           postinc2	equ	0xFDE
 21596                           postdec2	equ	0xFDD
 21597                           plusw2	equ	0xFDB
 21598                           fsr2h	equ	0xFDA
 21599                           fsr2l	equ	0xFD9
 21600                           status	equ	0xFD8
 21601                           
 21602                           	psect	text114
 21603  000000                     __ptext114:
 21604                           	opt stack 0
 21605                           tosu	equ	0xFFF
 21606                           tosh	equ	0xFFE
 21607                           tosl	equ	0xFFD
 21608                           pclatu	equ	0xFFB
 21609                           pclath	equ	0xFFA
 21610                           tblptru	equ	0xFF8
 21611                           tblptrh	equ	0xFF7
 21612                           tblptrl	equ	0xFF6
 21613                           tablat	equ	0xFF5
 21614                           prodh	equ	0xFF4
 21615                           prodl	equ	0xFF3
 21616                           intcon	equ	0xFF2
 21617                           postinc0	equ	0xFEE
 21618                           wreg	equ	0xFE8
 21619                           indf1	equ	0xFE7
 21620                           postdec1	equ	0xFE5
 21621                           fsr1h	equ	0xFE2
 21622                           fsr1l	equ	0xFE1
 21623                           indf2	equ	0xFDF
 21624                           postinc2	equ	0xFDE
 21625                           postdec2	equ	0xFDD
 21626                           plusw2	equ	0xFDB
 21627                           fsr2h	equ	0xFDA
 21628                           fsr2l	equ	0xFD9
 21629                           status	equ	0xFD8
 21630                           
 21631                           	psect	rparam
 21632  0000                     tosu	equ	0xFFF
 21633                           tosh	equ	0xFFE
 21634                           tosl	equ	0xFFD
 21635                           pclatu	equ	0xFFB
 21636                           pclath	equ	0xFFA
 21637                           tblptru	equ	0xFF8
 21638                           tblptrh	equ	0xFF7
 21639                           tblptrl	equ	0xFF6
 21640                           tablat	equ	0xFF5
 21641                           prodh	equ	0xFF4
 21642                           prodl	equ	0xFF3
 21643                           intcon	equ	0xFF2
 21644                           postinc0	equ	0xFEE
 21645                           wreg	equ	0xFE8
 21646                           indf1	equ	0xFE7
 21647                           postdec1	equ	0xFE5
 21648                           fsr1h	equ	0xFE2
 21649                           fsr1l	equ	0xFE1
 21650                           indf2	equ	0xFDF
 21651                           postinc2	equ	0xFDE
 21652                           postdec2	equ	0xFDD
 21653                           plusw2	equ	0xFDB
 21654                           fsr2h	equ	0xFDA
 21655                           fsr2l	equ	0xFD9
 21656                           status	equ	0xFD8
 21657                           
 21658                           	psect	temp
 21659  00005B                     btemp:
 21660                           	opt stack 0
 21661  00005B                     	ds	1
 21662  0000                     int$flags	set	btemp
 21663                           tosu	equ	0xFFF
 21664                           tosh	equ	0xFFE
 21665                           tosl	equ	0xFFD
 21666                           pclatu	equ	0xFFB
 21667                           pclath	equ	0xFFA
 21668                           tblptru	equ	0xFF8
 21669                           tblptrh	equ	0xFF7
 21670                           tblptrl	equ	0xFF6
 21671                           tablat	equ	0xFF5
 21672                           prodh	equ	0xFF4
 21673                           prodl	equ	0xFF3
 21674                           intcon	equ	0xFF2
 21675                           postinc0	equ	0xFEE
 21676                           wreg	equ	0xFE8
 21677                           indf1	equ	0xFE7
 21678                           postdec1	equ	0xFE5
 21679                           fsr1h	equ	0xFE2
 21680                           fsr1l	equ	0xFE1
 21681                           indf2	equ	0xFDF
 21682                           postinc2	equ	0xFDE
 21683                           postdec2	equ	0xFDD
 21684                           plusw2	equ	0xFDB
 21685                           fsr2h	equ	0xFDA
 21686                           fsr2l	equ	0xFD9
 21687                           status	equ	0xFD8


Data Sizes:
    Strings     1181
    Constant    987
    Data        7
    BSS         495
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     65     160
    BANK1           256      0     234
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_83(CODE[10]), STR_63(CODE[3]), STR_59(CODE[9]), STR_57(CODE[3]), 
		 -> STR_54(CODE[3]), STR_49(CODE[3]), STR_46(CODE[3]), STR_43(CODE[3]), 
		 -> STR_40(CODE[3]), STR_37(CODE[3]), STR_34(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_110(CODE[7]), STR_52(CODE[4]), STR_51(CODE[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_81(CODE[24]), STR_50(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> cmd(BANK1[64]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5160_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5160_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5160_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5160_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S3883$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S3873$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3873$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3849$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3849$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3849$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3849$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> oled_putUint16@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_109(CODE[12]), STR_108(CODE[8]), 
		 -> STR_107(CODE[9]), STR_89(CODE[2]), STR_88(CODE[16]), STR_87(CODE[13]), 
		 -> STR_86(CODE[12]), STR_85(CODE[17]), STR_84(CODE[7]), STR_82(CODE[7]), 
		 -> STR_80(CODE[7]), STR_79(CODE[2]), STR_78(CODE[7]), STR_77(CODE[7]), 
		 -> STR_76(CODE[7]), STR_75(CODE[7]), STR_74(CODE[7]), STR_73(CODE[7]), 
		 -> STR_72(CODE[7]), STR_71(CODE[7]), STR_70(CODE[17]), STR_69(CODE[17]), 
		 -> STR_68(CODE[7]), STR_67(CODE[7]), STR_66(CODE[7]), STR_65(CODE[10]), 
		 -> STR_64(CODE[15]), STR_62(CODE[17]), STR_61(CODE[7]), STR_58(CODE[17]), 
		 -> STR_56(CODE[9]), STR_53(CODE[7]), cmd(BANK1[64]), STR_48(CODE[8]), 
		 -> STR_45(CODE[9]), STR_42(CODE[8]), STR_39(CODE[12]), STR_36(CODE[12]), 
		 -> STR_33(CODE[12]), modemResonseBuffer(BANK1[64]), STR_30(CODE[8]), STR_28(CODE[17]), 
		 -> STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[9]), 
		 -> STR_23(CODE[10]), STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), 
		 -> STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), 
		 -> STR_9(CODE[9]), STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[9]), STR_3(CODE[16]), STR_2(CODE[10]), 
		 -> STR_1(CODE[14]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendDataCommand@appData	PTR unsigned char  size(1) Largest target is 12
		 -> dataBuffer(BANK0[12]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_90(CODE[10]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_106(CODE[26]), STR_105(CODE[26]), STR_104(CODE[26]), STR_103(CODE[26]), 
		 -> STR_102(CODE[1]), STR_101(CODE[9]), STR_100(CODE[13]), STR_99(CODE[13]), 
		 -> STR_98(CODE[13]), STR_97(CODE[13]), STR_96(CODE[13]), STR_95(CODE[13]), 
		 -> STR_94(CODE[13]), STR_93(CODE[13]), STR_92(CODE[16]), STR_91(CODE[15]), 
		 -> STR_60(CODE[24]), STR_55(CODE[13]), cmd(BANK1[64]), STR_47(CODE[24]), 
		 -> STR_44(CODE[16]), STR_41(CODE[16]), STR_38(CODE[49]), STR_35(CODE[49]), 
		 -> STR_32(CODE[25]), STR_29(CODE[12]), STR_22(CODE[20]), STR_21(CODE[2]), 

    moteJoiningProcess$1372	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_76(CODE[7]), STR_75(CODE[7]), 

    moteJoiningProcess$1364	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_73(CODE[7]), STR_72(CODE[7]), 

    moteJoiningProcess$1357	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_68(CODE[7]), STR_67(CODE[7]), 

    moteJoiningProcess$1339	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_52(CODE[4]), STR_51(CODE[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _moteHandler->_moteJoiningProcess
    _moteRunningProcess->_oled_putUint16
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _moteApp_add8bToDataBuffer->___lbdiv
    _moteApp_add8bToDataBuffer->___lbmod
    _moteApp_add16bToDataBuffer->___lwmod
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _modemSleep->_moteApp_delayms
    _modemResync->_moteApp_delayms
    _moteJoiningProcess->_sprintf
    _sprintf->___lwmod
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _oled_putUint16->_oled_putString
    _MOTEapp_getModemResponse->_EUSART_Read
    _ADC_TempConversion->___lwdiv
    _TMRapp_Handler->___lwmod
    ___lwmod->___lwdiv
    _USBapp_Handler->_oled_putString
    _oled_putString->_oled_putChar
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _oled_writeData->_SPI_Exchange8bit
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _oled_writeCommand->_SPI_Exchange8bit
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  292083
                    _DATAEE_ReadByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                        _modemResync
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                         11    11      0  225900
                                             54 BANK0     11    11      0
                  _ADC_GetConversion
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
           _MOTEapp_getModemResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                    _moteApp_delayms
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  11     8      3  113975
                                             28 BANK0      9     6      3
                  _ADC_GetConversion
                 _ADC_TempConversion
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
                    _sendDataCommand
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      7     3      4    1012
                                              1 BANK0      7     3      4
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     158
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   23327
                                             18 BANK0      9     7      2
                            ___lbdiv
                            ___lbmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 3     3      0     297
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            2     1      1    1975
                                              4 BANK0      2     1      1
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     856
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     657
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           3     0      3    7159
                                             12 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   19185
                                             15 BANK0      1     1      0
                 _EUSART_FlushBuffer
                  _EUSART_Initialize
             _PIN_MANAGER_Initialize
                        _modemResync
                         _modemSleep
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1512
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0      62
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      93
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _modemSleep                                           0     0      0    8589
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _modemResync                                          3     3      0    8867
                                              5 BANK0      3     3      0
           _MOTEapp_getModemResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                  67    66      1   76624
                                             37 BANK0     17    16      1
                  _ADC_GetConversion
                 _ADC_TempConversion
                   _DATAEE_WriteByte
           _MOTEapp_getModemResponse
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                        _sendCommand
                            _sprintf
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     1      6     443
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               9     5      4    2165
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             29    21      8    9426
                                             12 BANK0     25    17      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     440
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sendCommand                                          2     0      2    2885
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (4) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _oled_putUint16                                      10     6      4   30063
                                             18 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_delayms                                      5     3      2    5704
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _MOTEapp_getModemResponse                             2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     200
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   2     2      0    2594
                                              7 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    2529
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3976
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3976
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       0     0      0   26602
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _oled_putString                                       5     1      4   20856
                                             13 BANK0      5     1      4
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_clear                                           0     0      0    1188
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (3) _oled_clearRow                                        2     2      0    1188
                                             13 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_putChar                                        10     8      2    1058
                                              3 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (3) _oled_writeData                                       1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _Set_Page_Address                                     1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _Set_Column_Address                                   1     1      0     124
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_writeCommand                                    1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bit                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4558
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     209
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2146
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         4     4      0    2104
                                              7 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1866
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   30065
                                             33 COMRAM    12    12      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (12) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   30065
                                             32 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   17700
                                             29 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  1     1      0   12636
                                             28 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             7     7      0    4286
                                             21 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (14) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     500
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     500
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     501
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _USART_mySetLineCodingHandler                        4     4      0     386
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (12) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _USBapp_handlerState
   _modemResync
     _MOTEapp_getModemResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_GetConversion
     _ADC_TempConversion
       ___lwdiv
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModemResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___lwmod
         ___lwdiv (ARG)
     _moteApp_delayms
     _moteJoiningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _DATAEE_WriteByte
       _MOTEapp_getModemResponse
         _EUSART_Read
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _EUSART_Initialize
         _PIN_MANAGER_Initialize
         _modemResync
           _MOTEapp_getModemResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _modemSleep
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_displayOff
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _Set_Page_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _oled_writeData
                   _SPI_Exchange8bit
           _oled_devInit
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setDisplay
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _moteApp_add8bToDataBuffer
         ___lbdiv
         ___lbmod
       _moteApp_clearBuffers
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_devInit
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setDisplay
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setFont
   _oled_putString
     _oled_putChar
       _Set_Column_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _Set_Page_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _oled_writeData
         _SPI_Exchange8bit

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EA       7       91.4%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     41      A0       5      100.0%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     264      14        0.0%
DATA                 0      0     264       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue May 17 14:17:41 2016

                            _SPI_Initialize 4364                                  _USB_SD_Ptr 7799  
               ?_moteApp_add16bToDataBuffer 00C4                                          l50 5960  
                         ??_CMP1_Initialize 00B8                                          _S1 00FB  
                                        _S2 00FC                                  _USB_Buffer 0118  
                       moteRunningProcess@i 00DB                               _USBDeviceInit 5BDA  
                       ___wmul@multiplicand 00BA                     EUSART_FlushBuffer@index 00B8  
                    __end_of_oled_writeData 4358                          __size_of_CDCInitEP 0052  
                    moteJoiningProcess@Traw 00E9                    USBapp_handlerState@state 00B8  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
      USER_USB_CALLBACK_EVENT_HANDLER@event 003B        USER_USB_CALLBACK_EVENT_HANDLER@pdata 003D  
                                       l310 4E44                                         l313 4E7E  
                                       l322 447E                                         l500 67C8  
               __end_of_USBStdGetDscHandler 6416                                         l350 68AE  
                                       l336 6818                                         l436 73CA  
                                       l380 6F20                                         l702 50AC  
                                       l376 6F1E                                         l618 4644  
                                       l466 76FE                                         l724 5848  
                                       l709 5118                                         l586 4F52  
                                       _BDT 000400                                         _CKE 007E3E  
                                       l786 4AF0                                         l939 47AA  
                                       l948 47E8                                         _CKP 007E34  
                                       _GIE 007F97                                __CFG_CPB$OFF 000000  
                                       _PR2 000FBB                                __CFG_CPD$OFF 000000  
                        _moteJoiningProcess 6F16                                         _UIE 000F64  
                                       _UIR 000F65                             _timer1ReloadVal 0085  
                                       _cmd 0158                                  _USBSuspend 448E  
              __end_of_moteApp_clearBuffers 49E6                        USBStdSetCfgHandler@i 0043  
                           _TMR2_Initialize 4380                                         prod 000FF3  
                                       tosl 000FFD                                         wreg 000FE8  
                            _USBDeviceTasks 6116                              _USBDeviceState 0091  
                     moteApp_delayms@length 00B8                       ??_USBCtrlTrfRxService 003F  
                  __size_ofi2_USBDeviceInit 00D8                              ??_getsUSBUSART 00C2  
                              ?_EUSART_Read 002E                    USBEnableEndpoint@options 0036  
                              __CFG_LVP$OFF 000000                         ?_moteJoiningProcess 00DD  
                                      l1035 4434                                        l1241 490E  
                                      l1069 48CE                                        l1097 4398  
                                      l1515 4772                                        l1516 4770  
                                      l2328 4A70                                        l1810 6230  
                                      l2338 4994                  USBConfigureEndpoint@handle 0034  
                                      l1906 6DCC                                        l1819 6282  
                                      l1907 6DD0                                        l1780 53DE  
                                      l1860 6B88                                        l1883 6C72  
                                      l1875 6CF6                                        l9002 44FE  
                                      l9030 486A                                        l9022 4856  
                                      l9200 6C1A                                        l9024 485A  
                                      l9210 6C40                                        l9130 4F12  
                                      l9018 4850                                        l9034 4872  
                                      l9050 4670                                        l9042 465A  
                                      l9212 6C44                                        l9062 4A40  
                                      l9230 6CB6                                        l9222 6C88  
                                      l9134 4F36                                        l9126 4EEC  
                                      l9064 4A48                                        l9320 6E48  
                                      l9224 6C98                                        l9208 6C3A  
                                      l9160 5204                                        l9136 4F3E  
                                      l9090 498A                                        l9082 496C  
                                      l9074 4A66                                        l9066 4A4C  
                                      l9330 6ED2                                        l9322 6E4E  
                                      l9314 6E2E                                        l9306 6E0C  
                                      l9250 6D32                                        l9218 6C78  
                                      l9234 6CC8                                        l9138 519E  
                                      l8700 4806                                        l9084 4974  
                                      l9324 6E90                                        l9332 6EDC  
                                      l9308 6E12                                        l9340 6F0A  
                                      l9180 6B90                                        l9156 51F6  
                                      l9086 4978                                        l9270 6D62  
                                      l9246 6D1E                                        l9190 6BBE  
                                      l9174 6B70                                        l9430 546C  
                                      l9600 6274                                        l8704 47AC  
                                      l9336 6EEC                                        l9264 6D5E  
                                      l9256 6D36                                        l9280 6D8A  
                                      l9184 6B96                                        l9168 5214  
                                      l8714 47CE                                        l8730 44D0  
                                      l9282 6D94                                        l9338 6EF2  
                                      l9522 4FAC                                        l9370 49A2  
                                      l9450 54DE                                        l9426 5456  
                                      l9380 49B6                                        l9436 547C  
                                      l9614 629C                                        l9622 62BA  
                                      l9606 6286                                        l9550 542C  
                                      l8750 4C82                                        l9198 6C16  
                                      l9518 4FA6                                        l9390 49CE  
                                      l9446 54AC                                        l9624 62C0  
                                      l9632 62DE                                        l9544 540A  
                                      l9288 6DAA                                        l8912 45C6  
                                      l9720 4B08                                        l9712 4AEC  
                                      l9642 62F2                                        l9634 62E2  
                                      l9546 540E                                        l9554 5450  
                                      l8770 4AA4                                        l8738 462E  
                                      l8746 4C58                                        l9298 6DEE  
                                      l9722 4B0C                                        l9714 4AF4  
                                      l9706 4ACC                                        l9644 6310  
                                      l9804 70CC                                        l9740 6F5C  
                                      l9590 6246                                        l8686 47DA  
                                      l9574 446E                                        l8678 5050  
                                      l9910 7332                                        l9718 4B06  
                                      l9920 7358                                        l9832 7170  
                                      l9760 6FD8                                        l9728 6F24  
                                      l8880 4E70                                        l8970 5636  
                                      l9594 624E                                        l9586 623E  
                                      l8698 4804                                        l8890 4E90  
                                      l8778 4AC0                                        l9842 71B2  
                                      l9834 7174                                        l9818 711E  
                                      l9762 6FDC                                        l9754 6FB4  
                                      l8938 4780                                        l9932 739E  
                                      l9844 71BA                                        l8876 4E62  
                                      l8886 4E88                                        l9934 73A2  
                                      l9790 707C                                        l8878 4E6A  
                                      STR_1 7DD1                                        l8976 5656  
                                      l9952 73F0                                        l9864 7238  
                                      l9776 702C                                        STR_2 7F28  
                                      STR_3 7DA3                                        l9970 7452  
                                      l9882 7298                                        l9866 723C  
                                      STR_4 7F5F                                        l8988 56AA  
                                      l9972 7456                                        l9964 7442  
                                      STR_7 7D93                                        l9990 74A0  
                                      l9966 744A                                        l9894 72DE  
                                      STR_8 7EDD                                        STR_9 7F68  
                                      l9994 74BA             __size_of_MOTEapp_TimerBasedTask 000E  
                                      u7010 4EDE                                        _PEIE 007F96  
                                      u7017 4ED4                                        u8140 71A4  
                                      u8150 71B2                       ??_USBCtrlTrfTxService 002E  
                                      u8350 74E0                                        _UCFG 000F62  
                                      u6860 4C78                                        _UEP0 000F6A  
                                      _UEP1 000F6B                                        u6870 4CA2  
                                      u7575 491E                                        u7576 4920  
                                      u6867 4C6E                                        _UEIE 000F66  
                                      u6877 4C98                                        u6990 4EB0  
                                      u6997 4EA6                                        u8847 5D90  
                                      _UEIR 000F67                                        _UCON 000F60  
                                      u8857 5D9E                                        u8867 5DB4  
                                      u8877 5DC8                                        u8887 4634  
                                      u8897 48C8                                        _TMR2 000FBC  
                           _CDCDataInHandle 0079      USBStdFeatureReqHandler@current_ep_data 0047  
                                      _pDst 007F                                        _main 58D4  
                  ??i2_USBTransferOnePacket 0032           __end_of_moteApp_add8bToDataBuffer 4E20  
                                      _pkts 0081                                        fsr1h 000FE2  
                                      fsr2h 000FDA                                        indf1 000FE7  
                                      fsr1l 000FE1                                        indf2 000FDF  
                                      fsr2l 000FD9                             _USBDeviceAttach 4750  
                                      btemp 005B                               __CFG_BORV$190 000000  
                                      pclat 000FFA                                        prodh 000FF4  
                                      prodl 000FF3                        _USBapp_setrxByteFlag 430E  
                                      start 10AA                             ?_oled_putUint16 00CA  
                  moteJoiningProcess@i_1367 00EC                               __CFG_IESO$OFF 000000  
                           __end_of_EndLine 4364                      __end_of_SPI_Initialize 4372  
                          __end_of_CMP1_ISR 42F8                             ?_oled_putString 00C5  
                __end_of_USBCheckStdRequest 5624                      ??_USBCtrlTrfOutHandler 0041  
               __size_of_moteRunningProcess 018A                            ?_oled_setDisplay 002E  
                             __CFG_MCLRE$ON 000000                            _modemBufferIndex 0029  
                              ___param_bank 000010                   ??_USBStdFeatureReqHandler 0043  
                               _TMRapp_Tick 4308                        ??_moteJoiningProcess 00DE  
                    moteApp_delayms@counter 00BB               ?_USART_mySetLineCodingHandler 002E  
                    sendDataCommand@appData 00BB                           sendCommand@string 00B9  
                  ??_USBStdGetStatusHandler 002E                __end_of_USBapp_getrxByteFlag 4304  
                 __size_of_DATAEE_WriteByte 003A                              ?_USBDeviceInit 002E  
                             ?_EUSART_Write 002E                        oled_putUint16@number 00CA  
            __size_of_OSCILLATOR_Initialize 0016                             ?_oled_writeData 002E  
             __end_of_OSCILLATOR_Initialize 443E                                       l10000 74C8  
                                     l10012 74F8                                       l10100 7716  
                                     l10022 751C                                       l10102 7780  
                                     l10120 665E                                       l10050 7580  
                                     l10026 752A                                       l10036 754E  
                                     l10134 668E                                       l10312 46BC  
                                     l10240 58A8                                       l10224 586C  
                                     l10080 769E                                       l10074 7666  
                                     l10308 46AC                                       l10092 76F6  
                                     l10172 6760                                       l10190 67BE  
                                     l10352 5C30                                       l10360 5C3A  
                                     l10096 7706                                       l10088 76E6  
                                     l10168 6756                                       l10346 5C06  
                                     l10450 50FC                                       l10522 686E  
                                     l10610 5962                                       l10452 5102  
                                     l10436 50AE                                       l10196 67C4  
                                     l10540 68B0                                       l10508 683E  
                                     l10532 689C                                       l10446 50F4  
                                     l10376 5C4C                                       l10456 5108  
                                     l10552 68F8                                       l10616 5972  
                                     l10624 5982                                       l10570 6960  
                                     l10482 67FE                                       l10572 6972  
                                     l10492 681A                                       l10476 67EC  
                                     l10468 67DA                                       l10566 694C  
                                     l10496 6826                                       l10488 680A  
                                     ?_main 002E                             __end_of___lbdiv 4876  
                                     _EEADR 000FA9                                       STR_10 7E61  
                                     STR_11 7EE9                                       STR_20 7F71  
                                     STR_12 7E88                                       STR_21 7FFD  
                                     STR_13 7E6E                                       STR_30 7EBD  
                                     STR_14 7E7B                                       STR_22 7CA5  
                                     STR_31 7FF8                                       STR_23 7F0A  
                                     STR_15 7EF5                                       STR_40 7DBF  
                                     STR_24 7F56                                       STR_16 7F1E  
                                     STR_32 7C2C                                       STR_17 7F7A  
                                     STR_33 7EAD                                       STR_41 7D83  
                                     STR_25 7CEC                                       STR_34 7DBF  
                                     STR_18 7F9B                                       STR_42 7F93  
                                     STR_26 7D41                                       STR_50 7C8D  
                                     STR_43 7DBF                                       STR_51 7DCE  
                                     STR_19 7FA3                                       STR_27 7D52  
                                     STR_35 7B93                                       STR_52 7D8F  
                                     STR_36 7ED1                                       STR_44 7D73  
                                     STR_28 7CCA                                       STR_60 7C45  
                                     STR_37 7DBF                                       STR_61 7FF1  
                                     STR_53 7FEA                                       STR_45 7F3B  
                                     STR_29 7EB9                                       STR_54 7DBF  
                                     STR_46 7DBF                                       STR_70 7D1F  
                                     STR_62 7D0E                                       STR_38 7B62  
                                     STR_71 7FB9                                       STR_63 7DBF  
                                     STR_39 7EC5                                       STR_55 7E54  
                                     STR_47 7C5D                                       STR_72 7FB2  
                                     STR_56 7E58                                       STR_80 7FDC  
                                     STR_48 7F8B                                       STR_64 7DB3  
                                     STR_73 7FE3                                       STR_57 7DBF  
                                     STR_49 7DBF                                       STR_65 7F14  
                                     STR_81 7C75                                       STR_74 7FB9  
                                     STR_82 7FCE                                       STR_66 7FB9  
                                     STR_90 7F00                                       STR_58 7CDB  
                                     STR_75 7FB2                                       STR_83 7DB8  
                                     STR_67 7FB2                                       STR_59 7F44  
                                     STR_91 7DC2                                       STR_76 7FE3  
                                     STR_68 7FE3                                       STR_84 7FC7  
                           __end_of___lbmod 4678                                       STR_77 7FD5  
                                     STR_93 7DEC                                       STR_69 7D30  
                                     STR_85 7CFD                                       STR_78 7FC0  
                                     STR_86 7EA1                                       STR_94 7DF9  
                                     STR_79 7B91                                       STR_95 7E06  
                                     STR_87 7DDF                                       STR_96 7E13  
                                     STR_88 7D63                                       STR_89 7B91  
                                     STR_97 7E20                                       STR_98 7E2D  
                                     STR_99 7E3A           __size_of_USBCtrlEPServiceComplete 00E4  
                           _TMR1_StartTimer 42F8                             __end_of___lldiv 5034  
         __size_of_MOTEapp_setResponseReady 0002                                       _T1CON 000FCD  
                    __end_of_USBDeviceTasks 6214                                       _T2CON 000FBA  
                   __end_of_sendDataCommand 54E8                   ?_USBCtrlEPServiceComplete 002E  
                           __end_of___lwdiv 4A7A                             __end_of___lwmod 499E  
                 ?_MOTEapp_setResponseReady 002E                         oled_putUint8@number 00CC  
                                     i2l954 4624                                       _UADDR 000F63  
                                     i2l995 104A                                       i2l997 105A  
                                     i2l999 1066                                       _RCREG 000FAE  
                                     _RCSTA 000FAB                                       _TMR1H 000FCF  
                                     _TMR1L 000FCE                                       _SPBRG 000FAF  
  moteApp_add16bToDataBuffer@bufferLocation 00C6     moteApp_add8bToDataBuffer@bufferLocation 00BC  
                                     _USTAT 000F61                                       _TXREG 000FAD  
                                     _TXSTA 000FAC                               __CFG_WRT0$OFF 000000  
        __size_of_USBCtrlEPAllowStatusStage 00BC                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                               __CFG_WRT3$OFF 000000  
                         moteHandler@i_1296 00F7                              __CFG_EBTR0$OFF 000000  
                            __CFG_FCMEN$OFF 000000                              __CFG_EBTR1$OFF 000000  
                            __CFG_EBTR2$OFF 000000                              __CFG_EBTR3$OFF 000000  
           __end_of_USBCtrlEPAllowDataStage 53C4                           oled_putChar@index 00C4  
                          __end_of_TMR1_ISR 4340                                       _sd000 7B5E  
                                     _sd001 7AE4             service_pushbutton@Release_Timer 00A2  
                                     _sd002 7B18                               __CFG_WRTB$OFF 000000  
                    moteRunningProcess@Traw 00D9                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                             _DATAEE_ReadByte 43D6  
                            __CFG_EBTRB$OFF 000000                                  i2memset@p1 002E  
                           __end_of_dpowers 7791                                       _light 007D  
                           __end_of_isdigit 4506                     __end_of_TMR1_Initialize 4750  
                              _runningState 009E                                       pclath 000FFA  
                                     tablat 000FF5                                       plusw2 000FDB  
                         __end_of_CDCInitEP 4C02                  oled_setDisplay@displayType 00BA  
                              ?_modemResync 002E                                       status 000FD8  
                            __CFG_T3CMX$RC0 000000                             __end_of_sprintf 6F16  
                           _TMR2_StartTimer 42FC                             __end_of_strncmp 4F52  
                           ___lbdiv@divisor 00B8                              __CFG_ICPRT$OFF 000000  
                     ?_USBapp_setrxByteFlag 002E                            __end_ofi2_memset 46A2  
                           ___lbdiv@counter 00BA                                _m10SecTicker 009A  
                           ?_SPI_Initialize 002E                             putUSBUSART@data 00B8  
        USART_mySetLineCodingHandler@dwBaud 003B                __size_of_USBStdSetCfgHandler 00A8  
                           __initialization 4D62                       TMR2_ReadTimer@readVal 00B8  
             __size_of_TMRapp_ClearBitFlags 0004                                __end_of_main 598E  
             __size_of_MOTEapp_handlerState 0008                      _MOTEapp_TimerBasedTask 4372  
                            ??_EUSART_Write 00B8                     __end_of_TMR2_Initialize 4390  
                              ?_sendCommand 00B9                 ?_INTERRUPT_InterruptManager 002E  
                 __size_of_USBCtrlEPService 00B2                                      ??_main 00F9  
                              ?_moteHandler 002E                               __activetblptr 000002  
                        _modemResonseBuffer 0198                             ?_USBDeviceTasks 002E  
                       i2_EUSART_Initialize 46CC                       oled_putUint16@numData 00CE  
                 sendDataCommand@dataLength 00BC                                 ?_USBSuspend 002E  
                                _NextUSBOut 001A                              __CFG_SDOMX$RB3 000000  
                           __CFG_CCP2MX$RC1 000000                                _cdc_mem_type 0097  
                  __end_of_SPI_Exchange8bit 43A0                     __end_of_USBDeviceAttach 477C  
                                    _ADCON0 000FC2                                      _ADCON1 000FC1  
                                    _ADCON2 000FC0                            _CDCDataOutHandle 007B  
                         _getsUSBUSART$5528 00C3                                      _ACTCON 000FB5  
                                    STR_100 7E47                                      STR_101 7F4D  
                                    STR_110 7FAB                                      STR_111 7CB9  
                                    STR_103 7BF8                                      STR_104 7C12  
                                    STR_105 7BC4                                      STR_106 7BDE  
                                    _ADRESH 000FC4                                      STR_107 7F32  
                                    STR_108 7F83                                      STR_109 7E95  
                                    _ADRESL 000FC3                                      _EEDATA 000FA8  
                                    _EECON2 000FA7           __size_of_MOTEapp_getModemResponse 004A  
                           getsUSBUSART@len 00C1                                      _T1GCON 000FCC  
                      oled_putUint8@numData 00CD                   ?_MOTEapp_getModemResponse 002E  
                     __size_of_CDCTxService 0100                                      i2l1003 1076  
                                    i2l1603 5128                                      i2l1540 5FB2  
                                    i2l1701 6AF0                                      i2l1606 518A  
                                    i2l1607 5132                                      i2l1608 5136  
                                    i2l1616 495C                                      i2l1466 613E  
                                    i2l2275 5022                                      i2l1643 4B68  
                                    i2l1476 61BA                                      i2l1653 5BAE  
                                    i2l1645 4BAC                                      i2l1477 6210  
                                    i2l1478 61C0                                      i2l1760 52EC  
                                    i2l1593 63B2                                      i2l1683 6990  
                                    i2l1667 5592                                      i2l1596 63FE  
                                    i2l1676 55C2                                      i2l1693 6A76  
                                    i2l6102 59D2                                      i2l1598 6402  
                                    i2l6130 537E                                      i2l6204 6406  
                                    i2l6134 5392                                      i2l6312 6B3A  
                                    i2l6216 5148                                      i2l6314 6B46  
                                    i2l6306 6B02                                      i2l6226 517C  
                                    i2l6154 56F4                                      i2l8002 4540  
                                    i2l7300 5B3A                                      i2l6260 69EA  
                                    i2l6244 6992                                      i2l8004 4542  
                                    i2l6270 6A1C                                      i2l8110 5D24  
                                    i2l7312 5B76                                      i2l5640 4818  
                                    i2l6184 6324                                      i2l6176 574E  
                                    i2l6514 653E                                      i2l5626 527C  
                                    i2l6274 6A2C                                      i2l8026 495A  
                                    i2l5900 5A6C                                      i2l6540 65D8  
                                    i2l6524 6568                                      i2l5820 5308  
                                    i2l5812 52E0                                      i2l5804 52CC  
                                    i2l5644 4826                                      i2l5652 54F8  
                                    i2l6284 6A64                                      i2l6268 6A1A  
                                    i2l6196 63B6                                      i2l6188 6334  
                                    i2l8060 5810                                      i2l5910 5A94  
                                    i2l7326 5BD4                                      i2l7318 5B94  
                                    i2l6550 6634                                      i2l6518 654A  
                                    i2l5670 556C                                      i2l6286 6A8E  
                                    i2l6470 5F5C                                      i2l8046 57B2  
                                    i2l5920 5AD0                                      i2l7328 5BD6  
                                    i2l6536 65BE                                      i2l5832 5320  
                                    i2l6296 6AD0                                      i2l8080 5CDC  
                                    i2l8410 4620                                      i2l5826 531A  
                                    i2l5658 5518                                      i2l6298 6ADC  
                                    i2l6482 5FC6                                      i2l6490 5FD4  
                                    i2l6466 5F56                                      i2l5940 4FE6  
                                    i2l5918 5ACA                                      i2l6566 559C  
                                    i2l8086 5D06                                      i2l8094 5D10  
                                    i2l8424 45FC                                      i2l8416 45E2  
                                    i2l5936 4FD6                                      i2l5928 5B06  
                                    i2l5784 4892                                      i2l6592 55E4  
                                    i2l5938 4FE2                                      i2l5794 52B6  
                                    i2l5954 4682                                      i2l6578 55AC  
                                    i2l8522 61F4                                      i2l5948 5014  
                                    i2l6588 55D2                                      i2l8524 6208  
                                    i2l8516 61DE                                      i2l8444 6136  
                                    i2l8436 612A                                      i2l5798 52C2  
                                    i2l5958 4692                                      i2l5896 5A64  
                                    i2l8472 6178                                      i2l8482 6188  
                                    i2l8466 615C                                      i2l8458 6150  
                                    i2l8478 6180                                      i2l8496 61AE  
                                    i2l8488 6192                                      i2l8598 1072  
                                 ??_EndLine 00B9                                      _OSCCON 000FD3  
                             CDCTxService@i 00C1                                      _SPBRGH 000FB0  
                                    _SSPBUF 000FC9                    i2USBTransferOnePacket@ep 0032  
                         ??i2_USBDeviceInit 0036             __size_ofi2_USBTransferOnePacket 009E  
                      ?i2_EUSART_Initialize 002E                        oled_displayOff@state 00BA  
                             oled_putChar@k 00C3                           _shortPacketStatus 002B  
            moteRunningProcess@changeStates 002E                              __CFG_XINST$OFF 000000  
                      _moteApp_clearBuffers 499E                             USBDeviceTasks@i 004E  
                __end_of_Set_Column_Address 44CA                 USBStdFeatureReqHandler@pUEP 0045  
                          __end_of_hexToStr 45D8                    USBTransferOnePacket@data 00B9  
                USBCtrlTrfInHandler@lastDTS 003F                             ??_USBDeviceInit 00C0  
                 __size_of_Set_Page_Address 0014                     __end_of_TMR1_StartTimer 42FC  
                              ?_putUSBUSART 00B8                                      ___wmul 458C  
                                 ??___lbdiv 00B9                              __CFG_STVREN$ON 000000  
                    modemResync@escapeEvent 00BF                                   ??___lbmod 00B9  
                                 ??___lldiv 0036                        __end_of_getsUSBUSART 5454  
                                 ??___lwdiv 00BC                                   ??___lwmod 00C3  
                         _USBEnableEndpoint 480A             __size_of_USBStdGetStatusHandler 007E  
                       _EUSART_Transmit_ISR 4600                                      _memset 46A2  
                                    clear_0 4D68                                      clear_1 4D74  
                                    clear_2 4D80                                      clear_3 4D8C  
                                    _prevS1 00FE                                      _prevS2 00FF  
                        ?_USBEnableEndpoint 0036              ??_USART_mySetLineCodingHandler 003B  
                   __end_of_DATAEE_ReadByte 43EA                                      _strcmp 519E  
                __end_of_ADC_TempConversion 456A               __size_of_USBTransferOnePacket 00A0  
                          ?_sendDataCommand 00B9                               _manualTrigger 009B  
                           _moteApp_delayms 4628                 __size_of_service_pushbutton 004C  
                                 ??_isdigit 00B8                                _CDCTxService 6214  
                              __mediumconst 7786                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                       ??_USBEnableEndpoint 0037                    ADC_GetConversion@channel 00BC  
                                 ?_CMP1_ISR 002E                     __end_of_TMR2_StartTimer 4300  
                                 ??_sprintf 00CC                                 _CtrlTrfData 000438  
                                 ??_strncmp 00BE                            ___lbdiv@dividend 00B9  
                             ?_oled_devInit 002E                        ?_EUSART_Transmit_ISR 002E  
                      _controlTransferState 0021                        _USBapp_getrxByteFlag 4300  
                          ?_TMR1_Initialize 002E                        __CFG_LS48MHZ$SYS48X8 000000  
                      __size_of_EUSART_Read 002E                           _SYSTEM_Initialize 4506  
              __size_of_USBapp_handlerState 0008                             ___lbmod@divisor 00B8  
                                __accesstop 0060                     __end_of__initialization 4DB2  
                    ??_USBapp_setrxByteFlag 002E                             ___lbmod@counter 00BA  
                           __CFG_PBADEN$OFF 000000                       ??i2_EUSART_Initialize 002E  
                           _CMP1_Initialize 43A0                          ?_SYSTEM_Initialize 002E  
                        oled_writeData@data 00B9                               ___rparam_used 000001  
                             ?_oled_setFont 00B8                    __size_of_USBStallHandler 003E  
                             ?_oled_putChar 00BB                       ?_moteApp_clearBuffers 002E  
                       __size_of_USBSuspend 001E                 __size_of_EUSART_FlushBuffer 002C  
                            __pcstackCOMRAM 002E                   __end_of_USBEnableEndpoint 4840  
                          __CFG_nPWRTEN$OFF 000000                               __end_of_sd000 7B62  
                             __end_of_sd001 7B18                               __end_of_sd002 7B4C  
                              __pidataBANK0 4315                         ??_SYSTEM_Initialize 00BA  
                 oled_putUint16@station_dot 00CC                                   ?_TMR1_ISR 002E  
          __size_of_USBCtrlEPAllowDataStage 008E                            _DATAEE_WriteByte 48E8  
             __size_of_USBConfigureEndpoint 0088                 __end_of_USBCtrlTrfInHandler 5BDA  
                          ?_TMR2_Initialize 002E                            ___lbdiv@quotient 00BB  
                    i2_USBTransferOnePacket 54E8                             __CFG_PCLKEN$OFF 000000  
                            __CFG_nLPBOR$ON 000000                           __end_of_OledFont0 7AA1  
                         _CDCTxService$5576 00BF                                  _cdc_notice 01D8  
                                 ?i2_memset 002E                                  _cdc_rx_len 0098  
                                _cdc_tx_len 0099                                  ??_CMP1_ISR 002E  
                           _responsePortNum 0076                    ??_USBCtrlTrfSetupHandler 004B  
                                _dataBuffer 00A3                              ??_oled_devInit 00BA  
                          ?_USBDeviceAttach 002E                   __end_of_SYSTEM_Initialize 4526  
                     ??_EUSART_Transmit_ISR 002E                      _USBStdGetStatusHandler 5120  
                              sprintf@width 00DA                       ?_USBapp_getrxByteFlag 002E  
                      service_pushbutton@bs 00B8                            ??_oled_putUint16 00CE  
                                __pbssBANK0 0060                                  __pbssBANK1 0100  
                                __pbssBANK2 0200                        __end_of_EUSART_Write 480A  
                   __size_of_TMR2_ReadTimer 0008                            ??_oled_putString 00C9  
                            ??_oled_setFont 00BA                 __size_of_EUSART_Receive_ISR 0028  
                       oled_putString@index 00C9                              ??_oled_putChar 00BD  
               __size_of_USBWakeFromSuspend 0022                                 _pBDTEntryIn 000F  
                    __size_of_oled_clearRow 001E                        __size_of_modemResync 0064  
                  sendDataCommand@byteCount 00BE            __end_of_USBCtrlEPServiceComplete 6022  
          __end_of_MOTEapp_setResponseReady 1006                      oled_putChar@start_page 00BC  
               __size_of_USBCheckCDCRequest 008C                           __CFG_PLLSEL$PLL3X 000000  
                        __size_of_oled_init 0022                            ??_oled_writeData 00B9  
                      USBCtrlTrfRxService@i 003F                                ?_TMRapp_Tick 002E  
                                   ?___wmul 00B8                            ?_TMR1_StartTimer 002E  
                                ??_TMR1_ISR 002E                    oled_putUint16@start_page 00CD  
                   __end_of_moteApp_delayms 4650                                     _CM1CON0 000F98  
        MOTEapp_getModemResponse@bufferByte 00BA                     __size_of_USBapp_Handler 0076  
                   __size_of_TMRapp_Handler 00DE                                     _BAUDCON 000FB8  
                                   ?_memset 00B8                                  _device_dsc 7B4C  
                 Set_Column_Address@address 00BA                    __size_of_oled_displayOff 0012  
                          _USBCtrlEPService 576C                                  _ep_data_in 006A  
                   __size_of_ADC_Initialize 0016                                     ?_strcmp 00B8  
                          ?_DATAEE_ReadByte 002E                 __end_of_USBCtrlTrfRxService 6640  
                      __size_of_sendCommand 0054                          _USBCheckStdRequest 5586  
                             _eusartRxCount 0023                           _configDescriptor1 7AA1  
                                   i2l10666 49FA                                     i2l10668 4A2C  
                                   _RS232cp 001C                             __CFG_WDTEN$SWON 000000  
                                ??i2_memset 0034                 __end_of_USBCtrlTrfTxService 5B0C  
                      __size_of_moteHandler 01AC                         _USBStdSetCfgHandler 56C4  
                                   _OSCCON2 000FD2                                     _OSCTUNE 000F9B  
                    __size_of_oled_putUint8 005A                                     _SSP1ADD 000FC8  
                   __end_of_CMP1_Initialize 43B2                         ?_USBCheckStdRequest 002E  
                          ?_TMR2_StartTimer 002E                __size_of_USBStdGetDscHandler 0102  
                                   _UIEbits 000F64                                   ?_hexToStr 002E  
                       moteJoiningProcess@i 00EB                                     _UIRbits 000F65  
                          ??_SPI_Initialize 00B8                                     _EndLine 4358  
                             _cdc_trf_state 0020                        DATAEE_WriteByte@bAdd 00B9  
                __end_of_moteRunningProcess 67CA                      ??_moteApp_clearBuffers 00B8  
                ?_moteApp_add8bToDataBuffer 00BC                                     _pCDCDst 0070  
                                   _pCDCSrc 0073                       __size_of_getsUSBUSART 0090  
                                   __Hparam 0000                        ?_USBStdSetCfgHandler 002E  
                                 _CDCInitEP 4BB0                     ?_MOTEapp_TimerBasedTask 002E  
                                   __Lparam 0000                    moteRunningProcess@i_1396 00DC  
                __size_of_USBEnableEndpoint 0036                         moteHandler@s2Button 00F4  
                          _Set_Page_Address 43EA                        ??_USBCheckStdRequest 004A  
              moteRunningProcess@sleepEvent 00D6                           _timerMinTickCount 0087  
             __size_of_USBCtrlTrfOutHandler 0052                 __size_of_moteJoiningProcess 0870  
                                   ___lbdiv 4840                                     ___lbmod 4650  
                                   ___lldiv 4FBE                            ??_USBDeviceTasks 004E  
                           __size_of___wmul 0026                                     ___lwdiv 4A30  
                         ??_USBStallHandler 002E                                     ___lwmod 4960  
                      __size_of_putUSBUSART 001C                                     __pcinit 4D62  
                        getsUSBUSART@buffer 00BF                             __size_of_memset 002A  
                 __end_of_configDescriptor1 7AE4                                     __ramtop 0800  
                         hexToStr@character 00B8            __end_of_MOTEapp_getModemResponse 4AC4  
                                   __ptext0 58D4                                     __ptext1 67CA  
                                   __ptext2 4AC4                                     __ptext3 6640  
                                   __ptext4 5454                                     __ptext5 45B2  
                                   __ptext6 4CAA                                     __ptext7 499E  
                                   __ptext8 4DC0                                     __ptext9 4650  
                  __size_of_oled_setDisplay 0014                                     _inPipes 0009  
               _USBDeferOUTDataStagePackets 0090                             __size_of_strcmp 0084  
                          oled_setFont@font 00B8                           __end_of_hexpowers 7799  
                                 _T1CONbits 000FCD                                     _dpowers 7787  
                     _OSCILLATOR_Initialize 4428                                ??_USBSuspend 0043  
                             _oled_clearRow 44CA                                   _T2CONbits 000FBA  
                                _modemSleep 4472             moteApp_add8bToDataBuffer@number 00BD  
                                   _isdigit 44E8                                  _oled_clear 443E  
                  ??_PIN_MANAGER_Initialize 00B8                __end_of_TMRapp_ClearBitFlags 4308  
                              _LastRS232Out 0019                             i2_USBDeviceInit 5CB0  
                          i2USBDeviceInit@i 0036                           __end_of_oled_init 458C  
                         ?_SPI_Exchange8bit 002E                __end_of_MOTEapp_handlerState 4324  
                    ??_USBapp_getrxByteFlag 00B8                          __end_of_USB_CD_Ptr 77A1  
                __size_of_SYSTEM_Initialize 0020                                     _sprintf 6B6A  
           __size_of_USBCtrlTrfSetupHandler 005E                                  ??_hexToStr 00B8  
                                   _strncmp 4EEA                        end_of_initialization 4DB2  
                              _getsUSBUSART 53C4               sendDataCommand@byteCount_1454 00BF  
                        ??_SPI_Exchange8bit 00B8                        SPI_Exchange8bit@data 00B8  
                        __end_of_USB_SD_Ptr 779F                         _pBDTEntryEP0OutNext 0017  
                                   memset@c 00BA                                     memset@n 00BC  
                                   memset@p 00BE                               __Lmediumconst 7786  
           _dummy_encapsulated_cmd_response 01E2                    ?_USBStdFeatureReqHandler 002E  
            __end_of_MOTEapp_TimerBasedTask 4380                           _EUSART_Initialize 46F8  
                                _rxByteFlag 002A                       ??_USBStdSetCfgHandler 0043  
                           ___lldiv@divisor 0032                                  ?_CDCInitEP 002E  
                           ___lldiv@counter 003A                          ?_EUSART_Initialize 002E  
                             _oled_putUint8 4CAA                          __end_of_USBSuspend 44AC  
            ??_USBapp_CdcEmulatorInitialize 003A                     _USBCtrlEPAllowDataStage 5336  
                                 _RCSTAbits 000FAB                                     postdec1 000FE5  
                                   postdec2 000FDD                                     postinc0 000FEE  
                                   postinc2 000FDE                        __end_of_oled_devInit 5E60  
                  _USBCtrlEPServiceComplete 5F3E                                  _responseId 0100  
                          ?_moteApp_delayms 00B8                               _randomPortNum 009D  
                  _MOTEapp_setResponseReady 1004                  _USBStatusStageEnabledFlag1 0092  
                _USBStatusStageEnabledFlag2 0093                         _USBapp_handlerState 4324  
                       ??_EUSART_Initialize 00B8                          USBEnableEndpoint@p 0037  
                                 _PORTAbits 000F80                                   _PORTCbits 000F82  
                   oled_putUint8@start_page 00CB                              ?_oled_clearRow 002E  
                      __end_of_oled_setFont 43D6                          _Set_Column_Address 44AC  
                      __end_of_oled_putChar 50AA                            ___lbmod@dividend 00B9  
                                 _TRISAbits 000F92                                   _TRISBbits 000F93  
                                 _TRISCbits 000F94                           ??_oled_displayOff 00BA  
                     __size_of_EUSART_Write 0034                          _BothEP0OutUOWNsSet 008D  
                          ?_CMP1_Initialize 002E                   USBConfigureEndpoint@EPNum 0033  
                ?_USBCtrlEPAllowStatusStage 002E                    __end_of_DATAEE_WriteByte 4922  
                       ?_Set_Column_Address 002E         USER_USB_CALLBACK_EVENT_HANDLER@size 003F  
                            _TMR2_ReadTimer 432C                                   _USTATcopy 002D  
                         __size_of_CMP1_ISR 0004                        ?_USBapp_handlerState 002E  
                        _ADC_TempConversion 4548                    oled_putString@start_page 00C8  
                               ___lbmod@rem 00BB                   __end_of_EUSART_Initialize 4724  
              __end_of_USBTransferOnePacket 56C4                                 _CM2CON1bits 000F9A  
                                 _TXSTAbits 000FAC                             moteHandler@Traw 00F2  
                            ?_oled_putUint8 00CA                           putUSBUSART@length 00BA  
                       ?_ADC_TempConversion 002E                      _USBCtrlTrfSetupHandler 4D04  
                      ??_Set_Column_Address 00BA                     ?i2_USBTransferOnePacket 002E  
                     __end_of_USBDeviceInit 5CB0                              _TMRapp_Handler 5E60  
                            _USBapp_Handler 50AA                        __size_of_TMRapp_Tick 0006  
              ??_moteApp_add16bToDataBuffer 00C7                              __end_of___wmul 45B2  
                              _EUSART_Write 47D6                       sendDataCommand@string 00B9  
                   __end_ofi2_USBDeviceInit 5D88                           __size_of_TMR1_ISR 000C  
                __end_of_service_pushbutton 4B10                              _ADC_Initialize 4412  
               moteApp_clearBuffers@counter 00B8                                   i2memset@c 0030  
                                 i2memset@n 0032                                   i2memset@p 0034  
                    ?_OSCILLATOR_Initialize 002E                              __end_of_memset 46CC  
                         _USBBusIsSuspended 008E                    oled_writeCommand@command 00B9  
                               ?_modemSleep 002E                              __end_of_strcmp 5222  
                               ?_oled_clear 002E                         start_initialization 4D62  
                      ??_ADC_TempConversion 00BF                     ?_USBStdGetStatusHandler 002E  
             USBCtrlTrfRxService@byteToRead 0040                    _MOTEapp_getModemResponse 4A7A  
           __size_of_PIN_MANAGER_Initialize 004E                           ??_oled_setDisplay 00BA  
                             ??_EUSART_Read 00B8                      __end_of_TMR2_ReadTimer 4334  
                               _cdc_data_rx 000540                                 _cdc_data_tx 000500  
               __end_ofi2_EUSART_Initialize 46F8                           __size_ofi2_memset 002A  
                                 _OledFont0 77A1                __end_of_USBConfigureEndpoint 52AA  
           __end_of_USBStdFeatureReqHandler 6B6A                    __size_of_sendDataCommand 0094  
                     ??_USBapp_handlerState 00B8           __end_of_USBCtrlEPAllowStatusStage 5A4A  
                  __end_of_USBCtrlEPService 581E        __end_of_USART_mySetLineCodingHandler 4C56  
     __size_of_USART_mySetLineCodingHandler 0054                _USART_mySetLineCodingHandler 4C02  
                __end_of_EUSART_FlushBuffer 47A8                         DATAEE_ReadByte@bAdd 00B8  
             __size_of_USBapp_setrxByteFlag 0006         __size_of_moteApp_add16bToDataBuffer 010A  
                 ??_USBCtrlEPAllowDataStage 002F                                 ??_CDCInitEP 003A  
                            USBDeviceInit@i 00C0                      _pBDTEntryEP0OutCurrent 0015  
                  __size_of_TMR1_Initialize 002C                     USBTransferOnePacket@dir 00B8  
                   USBTransferOnePacket@len 00BB                      __end_of_USBapp_Handler 5120  
                    __end_of_TMRapp_Handler 5F3E              __end_ofi2_USBTransferOnePacket 5586  
                      _TMRapp_ClearBitFlags 4304                                    ??___wmul 00BC  
                       _USBStdGetDscHandler 6314                        _MOTEapp_handlerState 431C  
                    __end_of_ADC_Initialize 4428                                 __pdataBANK0 00F9  
                                  ??_memset 00BE                             ??_oled_clearRow 00C5  
MOTEapp_getModemResponse@terminatorReceived 00B9             MOTEapp_TimerBasedTask@timerTask 00B8  
                                  ??_strcmp 00BC                   oled_putString@station_dot 00C7  
                    _USBActiveConfiguration 002C              __end_of_USBStdGetStatusHandler 519E  
               __end_of_EUSART_Transmit_ISR 4628                                 __pbssCOMRAM 0001  
                service_pushbutton@PB_Timer 0066                               __pcstackBANK0 00B8  
              __size_of_USBCtrlTrfInHandler 00CE                    __size_of_TMR2_Initialize 0010  
                  __end_of_Set_Page_Address 43FE                             ?_TMR2_ReadTimer 002E  
                               _activeState 0094                        ?_USBStdGetDscHandler 002E  
                              _isdigit$5906 00B9                   ADC_TempConversion@tempRaw 00BF  
                __end_of_EUSART_Receive_ISR 4600              moteRunningProcess@messageReady 00D5  
                                  ?_EndLine 002E                  __end_of_USBWakeFromSuspend 4548  
                             ??_modemResync 00BD                  __size_of_EUSART_Initialize 002C  
                         __size_of_hexToStr 0026                                 sprintf@flag 00D9  
                               sprintf@prec 00D1                             _USBStallHandler 4922  
                              _pBDTEntryOut 0060                         __end_of_EUSART_Read 47D6  
                __end_of_USBCheckCDCRequest 5336                             ??_oled_putUint8 00CC  
                      oled_putString@string 00C5                    __size_of_USBDeviceAttach 002C  
               ??_moteApp_add8bToDataBuffer 00BD                           _oled_writeCommand 4340  
                     __size_of_oled_devInit 00D8                     oled_putChar@station_dot 00BB  
                       __size_of_modemSleep 001C                            ___lwdiv@dividend 00B8  
                    _PIN_MANAGER_Initialize 4B10                         __size_of_oled_clear 0018  
                     ?_TMRapp_ClearBitFlags 002E                        EUSART_Read@readValue 00B8  
                           ?_TMRapp_Handler 002E                             ?_USBapp_Handler 002E  
                                 __pintcode 1008                          ?_oled_writeCommand 002E  
                             __pmediumconst 7786               moteJoiningProcess@switchEvent 00DD  
                     ?_MOTEapp_handlerState 002E                                   __ptext100 52AA  
                                 __ptext101 4B5E                                    ?___lbdiv 00B8  
                                 __ptext110 4334                                   __ptext102 6520  
                                 __ptext111 4600                                   __ptext103 598E  
                                 __ptext112 45D8                                   __ptext104 5B0C  
                                 __ptext113 42F4                                   __ptext105 5A4A  
                                 __ptext114 0000                                   __ptext106 4C02  
                                 __ptext107 46CC                                   __ptext108 4FBE  
                                 __ptext109 4308                                    ?___lbmod 00B8  
                                  ?___lldiv 002E                                    ?___lwdiv 00B8  
                                  ?___lwmod 00BF                             ?_ADC_Initialize 002E  
                     __size_of_oled_setFont 0012                                _eusartRxHead 0024  
                             ??_sendCommand 00BB                                _eusartTxHead 0027  
                              _eusartRxTail 0025                                _eusartTxTail 0028  
                     __size_of_oled_putChar 0076                          _moteRunningProcess 6640  
              ??_INTERRUPT_InterruptManager 004F                            ?i2_USBDeviceInit 002E  
                    moteHandler@readMessage 00F8                         ??_oled_writeCommand 00B9  
                             ??_moteHandler 00EE                     _eusartTxBufferRemaining 0026  
                      _USBTransferOnePacket 5624                                moteHandler@i 00F6  
          moteApp_add16bToDataBuffer@number 00C4                    __size_of_TMR1_StartTimer 0004  
                                  ?_isdigit 002E                      moteHandler@buttonPress 00F5  
                       ?_moteRunningProcess 00D4                __end_of_USBCtrlTrfOutHandler 4BB0  
                                 _hexpowers 7791                       ??_USBStdGetDscHandler 002E  
                                  _CMP1_ISR 42F4                                 _ep_data_out 006D  
                          ___lwdiv@quotient 00BD                                    ?_sprintf 00C4  
              __size_of_USBCtrlTrfRxService 0120                                   _secTicker 009F  
             USBConfigureEndpoint@direction 002E                    __size_of_DATAEE_ReadByte 0014  
                                  ?_strncmp 00B8                                _oled_devInit 5D88  
                            _eusartRxBuffer 0200                            _timerMsTickCount 0089  
                                 _oled_init 456A                __size_of_USBCtrlTrfTxService 00C2  
                   _moteJoiningProcess$1339 00E0                     _moteJoiningProcess$1372 00E6  
                   _moteJoiningProcess$1364 00E4                     _moteJoiningProcess$1357 00E2  
                            _eusartTxBuffer 0240                              ___wmul@product 00BC  
                                  _LATAbits 000F89                                    _IOCCbits 000F87  
                 __end_of_oled_writeCommand 434C                                    _LATBbits 000F8A  
                                  _LATCbits 000F8B                  ??_USBCtrlEPServiceComplete 002F  
                ??_MOTEapp_setResponseReady 00B8                                    _PIE1bits 000F9D  
                                  _IPR3bits 000FA5                                    _PIE2bits 000FA0  
                                  _PIE3bits 000FA3                    __size_of_TMR2_StartTimer 0004  
                              _oled_setFont 43C4                                   _moteState 00FD  
                         ??_sendDataCommand 00BD                               _operationType 009C  
                      ??_moteRunningProcess 00D7                  __end_of_moteJoiningProcess 7786  
       __size_of_INTERRUPT_InterruptManager 00A2                                _oled_putChar 5034  
                                  _PIR1bits 000F9E                                    i2u362_40 5ABC  
                                  i2u362_47 5AB2                                    _PIR2bits 000FA1  
             __size_of_moteApp_clearBuffers 0048                                    i2u364_40 5AF8  
                                  i2u531_48 5BC0                                    i2u364_47 5AEE  
                                  i2u444_48 6620                                    _PIR3bits 000FA4  
                                  i2u390_40 63AE                                    i2u390_47 63A4  
                                  i2u392_40 63F8                                    i2u392_47 63EE  
                                  i2u389_40 6380                                    i2u389_47 6376  
                 USBCtrlEPService@setup_cnt 004D                   __size_of_SPI_Exchange8bit 0010  
                       __end_of_modemResync 4E84                                    _RCONbits 000FD0  
                   __size_of_oled_putUint16 00F4                               ??_putUSBUSART 00BB  
                          __CFG_WDTPS$32768 000000                                    _UEP0bits 000F6A  
                _USBDeferINDataStagePackets 008F                                    _SSP1CON1 000FC6  
        __end_of_moteApp_add16bToDataBuffer 6520                  _moteApp_add16bToDataBuffer 6416  
               __size_of_USBCheckStdRequest 009E                                    _TMR1_ISR 4334  
                   __size_of_oled_putString 0066                                    _SSP1STAT 000FC7  
                                  _UCONbits 000F60                             _oled_displayOff 43B2  
                                  _VREFCON0 000F7D              moteRunningProcess@selectButton 00D4  
                      _USBConfigureEndpoint 5222            __size_of_USBStdFeatureReqHandler 01F4  
                         ??_TMR1_Initialize 00B8                                  _ADCON0bits 000FC2  
                   Set_Page_Address@address 00BA                           ___wmul@multiplier 00B8  
                     ?_USBTransferOnePacket 00B8                        moteJoiningProcess@ch 008B  
                    ADC_TempConversion@temp 00C0                   _moteApp_add8bToDataBuffer 4DC0  
                   __size_of_oled_writeData 000C                               ?_CDCTxService 002E  
                  moteHandler@gotoNextState 00F1                                _RemoteWakeup 001D  
                       __end_of_sendCommand 4CAA                                    i2_memset 4678  
                         __CFG_CFGPLLEN$OFF 000000                       DATAEE_WriteByte@bData 00B8  
                        _RS232_Out_Data_Rdy 001B                     __end_of_USBStallHandler 4960  
                       __end_of_moteHandler 6976                                 _EUSART_Read 47A8  
                         _moteApp_GoToSleep 4F52                                   copy_data0 4DA6  
               ??_USBCtrlEPAllowStatusStage 002E                 __end_of_USBStdSetCfgHandler 576C  
                         ?_DATAEE_WriteByte 00B8               __size_of_USBapp_getrxByteFlag 0004  
                        ?_moteApp_GoToSleep 002E                                  ?_oled_init 002E  
                         ??_TMR2_Initialize 00B8                            __size_of_EndLine 000C  
                        ??_DATAEE_WriteByte 00B9                          __end_of_device_dsc 7B5E  
                                _EECON1bits 000FA6                     ?_USBCtrlTrfSetupHandler 002E  
             USBapp_CdcEmulatorInitialize@i 003A                      ??_TMRapp_ClearBitFlags 00B8  
                   USBStdGetStatusHandler@p 002E                                    __Hrparam 0000  
                       ??_moteApp_GoToSleep 00C7                                    __Lrparam 0000  
                    USBTransferOnePacket@ep 00BC                      ??_MOTEapp_handlerState 00B8  
                         _ADC_GetConversion 48AE                          __CFG_BOREN$SBORDIS 000000  
                                  _SetupPkt 000430                     __size_of_SPI_Initialize 000E  
                   ??_OSCILLATOR_Initialize 00B8                       ?_USBConfigureEndpoint 002E  
                        ?_ADC_GetConversion 00B8                           ??_USBDeviceAttach 00B8  
                          __size_of___lbdiv 0036                            __size_of___lbmod 0028  
                ??_MOTEapp_getModemResponse 00B9                                _selectedFont 00F9  
                          __size_of___lldiv 0076            moteApp_clearBuffers@counter_1521 00B9  
          moteApp_clearBuffers@counter_1522 00BA                             _oled_setDisplay 43FE  
                          __size_of___lwdiv 004A                            __size_of___lwmod 003E  
                 MOTEapp_handlerState@state 00B8                                  _ANSELAbits 000F5B  
                       __end_of_putUSBUSART 4472                                 _line_coding 00AF  
                                _ANSELCbits 000F5D                              ??_CDCTxService 00BF  
                              ??_modemSleep 00BD                         ??_ADC_GetConversion 00BA  
                                sprintf@idx 00D0                                  sprintf@len 00D5  
                                sprintf@val 00D7                                ??_oled_clear 00C7  
                  modemResync@escapeCounter 00BD                    __size_of_moteApp_delayms 0028  
                          __size_of_isdigit 001E                   __end_of_moteApp_GoToSleep 4FBE  
                   __size_of_USBDeviceTasks 00FE                             ___lwdiv@divisor 00BA  
                                  _appTimer 0095                             ___lwdiv@counter 00BC  
                                  __ptext10 4840                                    __ptext11 6416  
                                  __ptext20 477C                                    __ptext12 4F52  
                                  __ptext21 432C                                    __ptext13 456A  
                                  __ptext30 6022                                    __ptext22 6F16  
                                  __ptext14 43C4                                    __ptext31 4628  
                                  __ptext23 4EEA                                    __ptext15 43FE  
                                  __ptext40 4372                                    __ptext32 4A7A  
                                  __ptext24 519E                                    __ptext16 5D88  
                                  __ptext41 4324                                    __ptext33 48E8  
                                  __ptext25 6B6A                                    __ptext17 43B2  
                                  __ptext50 4340                                    __ptext42 50AA  
                                  __ptext34 4548                                    __ptext26 44E8  
                                  __ptext18 4472                                    __ptext51 4390  
                                  __ptext43 4E84                                    __ptext35 4A30  
                                  __ptext27 458C                                    __ptext19 4E20  
                                  __ptext60 5624                                    __ptext52 581E  
                                  __ptext44 443E                                    __ptext36 48AE  
                                  __ptext28 4C56                                    __ptext61 5BDA  
                                  __ptext53 4456                                    __ptext45 44CA  
                                  __ptext37 5E60                                    __ptext29 4358  
                                  __ptext70 4B10                                    __ptext62 46A2  
                                  __ptext54 53C4                                    __ptext46 5034  
                                  __ptext38 4960                                    __ptext71 4428  
                                  __ptext63 4750                                    __ptext55 4300  
                                  __ptext47 434C                                    __ptext39 4304  
                                  __ptext80 5CB0                                    __ptext72 46F8  
                                  __ptext64 4506                                    __ptext56 1004  
                                  __ptext48 43EA                                    __ptext81 4526  
                                  __ptext73 43A0                                    __ptext65 4380  
                                  __ptext57 47D6                                    __ptext49 44AC  
                                  __ptext90 4678                                    __ptext82 448E  
                                  __ptext74 4412                                    __ptext66 42FC  
                                  __ptext58 47A8                                    __ptext91 5120  
                                  __ptext83 4922                                    __ptext75 431C  
                                  __ptext67 4724                                    __ptext59 6214  
                                  __ptext92 6314                                    __ptext84 576C  
                                  __ptext76 43D6                                    __ptext68 42F8  
                                  __ptext93 6976                                    __ptext85 4D04  
                                  __ptext69 4364                                    __ptext94 49E6  
                                  __ptext86 5F3E                                    __ptext78 430E  
                                  __ptext95 4876                                    __ptext87 5336  
                                  __ptext79 6116                                    __ptext96 4BB0  
                                  __ptext88 5586                                    __ptext97 54E8  
                                  __ptext89 56C4                                    __ptext98 480A  
                                  __ptext99 5222        __end_of_USBapp_CdcEmulatorInitialize 48AE  
     __size_of_USBapp_CdcEmulatorInitialize 0038                _USBapp_CdcEmulatorInitialize 4876  
                              _SSP1CON1bits 000FC6                                    _hexToStr 45B2  
                        _service_pushbutton 4AC4                           ??_TMR1_StartTimer 00B8  
                          __size_of_sprintf 03AC                 DATAEE_WriteByte@GIEBitValue 00BA  
                                  _autoMode 0096                                 _OSCCON2bits 000FD2  
                          __size_of_strncmp 0068                                 _modemResync 4E20  
            __end_of_USBCtrlTrfSetupHandler 4D62                               __size_of_main 00BA  
                         ?_USBCtrlEPService 002E                  __size_of_oled_writeCommand 000C  
                                strncmp@len 00BC                         ?_service_pushbutton 002E  
                         ??_DATAEE_ReadByte 00B8                   __end_of_ADC_GetConversion 48E8  
                  __size_of_CMP1_Initialize 0012                     __end_of_oled_displayOff 43C4  
                        ??_USBCtrlEPService 004B                         _USBCtrlTrfInHandler 5B0C  
                             ??_TMRapp_Tick 002E                          __end_of_modemSleep 448E  
                        __end_of_oled_clear 4456                                    _outPipes 0001  
                      _USBCtrlTrfOutHandler 4B5E                                    int$flags 005B  
                                  _usbState 00A1                   _USBCtrlEPAllowStatusStage 598E  
               __size_of_Set_Column_Address 001E                           ??_TMR2_StartTimer 00B8  
        __end_of_INTERRUPT_InterruptManager 10AA                  _INTERRUPT_InterruptManager 1008  
                              _SSP1STATbits 000FC7                                 _sendCommand 4C56  
                    ??_USBTransferOnePacket 00BC                          oled_clearRow@index 00C6  
                        _EUSART_FlushBuffer 477C                __end_of_USBapp_setrxByteFlag 4314  
                               _moteHandler 67CA                            ??_TMR2_ReadTimer 00B8  
                      ??_service_pushbutton 00B8                   _USBDeferStatusStagePacket 001E  
                  CDCTxService@byte_to_send 00C2                                  _INTCONbits 000FF2  
               __end_of_USBapp_handlerState 432C                        ?_USBCtrlTrfInHandler 002E  
                       ?_EUSART_FlushBuffer 002E                 __size_of_ADC_TempConversion 0022  
             USBCtrlTrfTxService@byteToSend 002E                                    isdigit@c 00BA  
                                  memset@p1 00B8                            ?_USBStallHandler 002E  
                  USBStdFeatureReqHandler@p 0048                           ?_Set_Page_Address 002E  
                  ??_MOTEapp_TimerBasedTask 00B8                                _responseData 0110  
             ?_USBapp_CdcEmulatorInitialize 002E                                    intlevel2 0000  
                                 sprintf@ap 00D4                                   sprintf@cp 00D2  
                                 sprintf@sp 00C4                                 ??_oled_init 00C7  
                        ??_Set_Page_Address 00BA                      __size_of_USBDeviceInit 00D6  
   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4A30    __size_of_USER_USB_CALLBACK_EVENT_HANDLER 004A  
         ??_USER_USB_CALLBACK_EVENT_HANDLER 0041            ?_USER_USB_CALLBACK_EVENT_HANDLER 003B  
           _USER_USB_CALLBACK_EVENT_HANDLER 49E6              moteJoiningProcess@messageReady 00ED  
                          ___lwmod@dividend 00BF                i2USBTransferOnePacket@handle 0033  
                          ___lldiv@dividend 002E                     ?_PIN_MANAGER_Initialize 002E  
                          ??_USBapp_Handler 00CA                            ??_TMRapp_Handler 00C4  
                      moteHandler@gotoSleep 00F0                __size_ofi2_EUSART_Initialize 002C  
                                 strncmp@s1 00B8                                   strncmp@s2 00BA  
                          ??_ADC_Initialize 00B8                        ??_EUSART_FlushBuffer 00B8  
                   __end_of_oled_setDisplay 4412                              _oled_putUint16 6022  
                          _SPI_Exchange8bit 4390                  i2USBTransferOnePacket@data 002F  
                               _sleepTicker 00A0                      ??_USBConfigureEndpoint 002F  
                     ?_USBCtrlTrfOutHandler 002E                              _oled_putString 4E84  
                               _putUSBUSART 4456                          _EUSART_Receive_ISR 45D8  
                         oled_clearRow@page 00C5                        __CFG_CPUDIV$NOCLKDIV 000000  
                       _USBCtrlTrfRxService 6520                          _USBWakeFromSuspend 4526  
                   _USBStdFeatureReqHandler 6976     __end_of_USBapp_DeviceCdcEmulatorHandler 58D4  
  __size_of_USBapp_DeviceCdcEmulatorHandler 00B6            ?_USBapp_DeviceCdcEmulatorHandler 002E  
         ??_USBapp_DeviceCdcEmulatorHandler 00C5             _USBapp_DeviceCdcEmulatorHandler 581E  
                        _USBCheckCDCRequest 52AA                         _USBCtrlTrfTxService 5A4A  
                       __end_of_TMRapp_Tick 430E                       __end_of_oled_clearRow 44E8  
                               _temperature 0083                                    sprintf@c 00DC  
                                  sprintf@f 00C6                         ?_EUSART_Receive_ISR 002E  
                            _oled_writeData 434C                         ?_USBWakeFromSuspend 002E  
                                  strcmp@s1 00B8                                    strcmp@t0 00BE  
                                  strcmp@s2 00BA                                    strcmp@t1 00C0  
                                  strcmp@t2 00BF                            ___lldiv@quotient 0036  
                           ___lwmod@divisor 00C1                       ??_USBCtrlTrfInHandler 003F  
                     _USBAlternateInterface 00B6                             ___lwmod@counter 00C3  
                       ?_USBCheckCDCRequest 002E                  __size_of_moteApp_GoToSleep 006C  
                 i2USBTransferOnePacket@dir 002E                   i2USBTransferOnePacket@len 0031  
                       USBEnableEndpoint@ep 0039                             _endpoint_number 0022  
                           _sendDataCommand 5454                        ?_USBCtrlTrfRxService 002E  
                             ?_getsUSBUSART 00BF                    oled_putUint8@station_dot 00CA  
                        __CFG_FOSC$INTOSCIO 000000                          EUSART_Write@txData 00B8  
              __size_of_EUSART_Transmit_ISR 0028              __end_of_PIN_MANAGER_Initialize 4B5E  
                  ?_USBCtrlEPAllowDataStage 002E          __size_of_moteApp_add8bToDataBuffer 0060  
                      ?_USBCtrlTrfTxService 002E                           ??_moteApp_delayms 00BA  
              _USBStatusStageTimeoutCounter 001F                        ??_EUSART_Receive_ISR 002E  
                      ??_USBWakeFromSuspend 0043                      __end_of_oled_putUint16 6116  
                USBTransferOnePacket@handle 00BD                  __size_of_ADC_GetConversion 003A  
                      __end_of_CDCTxService 6314                             _TMR1_Initialize 4724  
         moteJoiningProcess@joiningComplete 00E8                            ?_oled_displayOff 002E  
                     __end_of_oled_putUint8 4D04                      __end_of_oled_putString 4EEA  
                      ??_USBCheckCDCRequest 002E                                  _USB_CD_Ptr 779F  
