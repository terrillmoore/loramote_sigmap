

Microchip Technology PIC18 PRO Macro Assembler V1.36 build -262312587 
                                                                                               Thu Apr 21 03:46:12 2016

Microchip Technology Omniscient Code Generator v1.36 (PRO mode) build 201601150325
     1                           	processor	18LF25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	text113,global,reloc=2,class=CODE,delta=1
   132                           	psect	text114,global,reloc=2,class=CODE,delta=1
   133                           	psect	text115,global,reloc=2,class=CODE,delta=1
   134                           	psect	text116,global,reloc=2,class=CODE,delta=1
   135                           	psect	text117,global,reloc=2,class=CODE,delta=1
   136                           	psect	text118,global,reloc=2,class=CODE,delta=1
   137                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   140                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   141                           	dabs	1,0x400,48,_BDT
   142                           	dabs	1,0x500,64,_cdc_data_tx
   143                           	dabs	1,0x438,8,_CtrlTrfData
   144                           	dabs	1,0x430,8,_SetupPkt
   145                           	dabs	1,0x540,64,_cdc_data_rx
   146  0000                     
   147                           	psect	idataBANK0
   148  001004                     __pidataBANK0:
   149                           	opt stack 0
   150                           
   151                           ;initializer for _moteState
   152  001004  01                 	db	1
   153                           
   154                           ;initializer for moteJoiningProcess@float_val
   155  001005  FF                 	db	255
   156                           
   157                           	psect	idataBANK1
   158  003AFA                     __pidataBANK1:
   159                           	opt stack 0
   160                           
   161                           ;initializer for _selectedFont
   162  003AFA  99                 	db	low _OledFont0
   163  003AFB  77                 	db	high _OledFont0
   164                           
   165                           	psect	mediumconst
   166  00777E                     __pmediumconst:
   167                           	opt stack 0
   168  00777E  00                 	db	0
   169  00777F                     _dpowers:
   170                           	opt stack 0
   171  00777F  0001               	dw	1
   172  007781  000A               	dw	10
   173  007783  0064               	dw	100
   174  007785  03E8               	dw	1000
   175  007787  2710               	dw	10000
   176  007789                     __end_of_dpowers:
   177                           	opt stack 0
   178  007789                     _hexpowers:
   179                           	opt stack 0
   180  007789  0001               	dw	1
   181  00778B  0010               	dw	16
   182  00778D  0100               	dw	256
   183  00778F  1000               	dw	4096
   184  007791                     __end_of_hexpowers:
   185                           	opt stack 0
   186  007791                     _USB_SD_Ptr:
   187                           	opt stack 0
   188  007791  56                 	db	low _sd000
   189  007792  7B                 	db	high _sd000
   190  007793  DC                 	db	low _sd001
   191  007794  7A                 	db	high _sd001
   192  007795  10                 	db	low _sd002
   193  007796  7B                 	db	high _sd002
   194  007797                     __end_of_USB_SD_Ptr:
   195                           	opt stack 0
   196  007797                     _USB_CD_Ptr:
   197                           	opt stack 0
   198  007797  99                 	db	low _configDescriptor1
   199  007798  7A                 	db	high _configDescriptor1
   200  007799                     __end_of_USB_CD_Ptr:
   201                           	opt stack 0
   202  007799                     _OledFont0:
   203                           	opt stack 0
   204  007799  00                 	db	0
   205  00779A  00                 	db	0
   206  00779B  00                 	db	0
   207  00779C  00                 	db	0
   208  00779D  00                 	db	0
   209  00779E  00                 	db	0
   210  00779F  00                 	db	0
   211  0077A0  00                 	db	0
   212  0077A1  00                 	db	0
   213  0077A2  00                 	db	0
   214  0077A3  00                 	db	0
   215  0077A4  5F                 	db	95
   216  0077A5  00                 	db	0
   217  0077A6  00                 	db	0
   218  0077A7  00                 	db	0
   219  0077A8  00                 	db	0
   220  0077A9  00                 	db	0
   221  0077AA  00                 	db	0
   222  0077AB  03                 	db	3
   223  0077AC  00                 	db	0
   224  0077AD  03                 	db	3
   225  0077AE  00                 	db	0
   226  0077AF  00                 	db	0
   227  0077B0  00                 	db	0
   228  0077B1  64                 	db	100
   229  0077B2  3C                 	db	60
   230  0077B3  26                 	db	38
   231  0077B4  64                 	db	100
   232  0077B5  3C                 	db	60
   233  0077B6  26                 	db	38
   234  0077B7  24                 	db	36
   235  0077B8  00                 	db	0
   236  0077B9  26                 	db	38
   237  0077BA  49                 	db	73
   238  0077BB  49                 	db	73
   239  0077BC  7F                 	db	127
   240  0077BD  49                 	db	73
   241  0077BE  49                 	db	73
   242  0077BF  32                 	db	50
   243  0077C0  00                 	db	0
   244  0077C1  42                 	db	66
   245  0077C2  25                 	db	37
   246  0077C3  12                 	db	18
   247  0077C4  08                 	db	8
   248  0077C5  24                 	db	36
   249  0077C6  52                 	db	82
   250  0077C7  21                 	db	33
   251  0077C8  00                 	db	0
   252  0077C9  20                 	db	32
   253  0077CA  50                 	db	80
   254  0077CB  4E                 	db	78
   255  0077CC  55                 	db	85
   256  0077CD  22                 	db	34
   257  0077CE  58                 	db	88
   258  0077CF  28                 	db	40
   259  0077D0  00                 	db	0
   260  0077D1  00                 	db	0
   261  0077D2  00                 	db	0
   262  0077D3  00                 	db	0
   263  0077D4  03                 	db	3
   264  0077D5  00                 	db	0
   265  0077D6  00                 	db	0
   266  0077D7  00                 	db	0
   267  0077D8  00                 	db	0
   268  0077D9  00                 	db	0
   269  0077DA  00                 	db	0
   270  0077DB  1C                 	db	28
   271  0077DC  22                 	db	34
   272  0077DD  41                 	db	65
   273  0077DE  00                 	db	0
   274  0077DF  00                 	db	0
   275  0077E0  00                 	db	0
   276  0077E1  00                 	db	0
   277  0077E2  00                 	db	0
   278  0077E3  00                 	db	0
   279  0077E4  41                 	db	65
   280  0077E5  22                 	db	34
   281  0077E6  1C                 	db	28
   282  0077E7  00                 	db	0
   283  0077E8  00                 	db	0
   284  0077E9  00                 	db	0
   285  0077EA  15                 	db	21
   286  0077EB  15                 	db	21
   287  0077EC  0E                 	db	14
   288  0077ED  0E                 	db	14
   289  0077EE  15                 	db	21
   290  0077EF  15                 	db	21
   291  0077F0  00                 	db	0
   292  0077F1  00                 	db	0
   293  0077F2  08                 	db	8
   294  0077F3  08                 	db	8
   295  0077F4  3E                 	db	62
   296  0077F5  08                 	db	8
   297  0077F6  08                 	db	8
   298  0077F7  00                 	db	0
   299  0077F8  00                 	db	0
   300  0077F9  00                 	db	0
   301  0077FA  00                 	db	0
   302  0077FB  00                 	db	0
   303  0077FC  50                 	db	80
   304  0077FD  30                 	db	48
   305  0077FE  00                 	db	0
   306  0077FF  00                 	db	0
   307  007800  00                 	db	0
   308  007801  00                 	db	0
   309  007802  08                 	db	8
   310  007803  08                 	db	8
   311  007804  08                 	db	8
   312  007805  08                 	db	8
   313  007806  08                 	db	8
   314  007807  00                 	db	0
   315  007808  00                 	db	0
   316  007809  00                 	db	0
   317  00780A  00                 	db	0
   318  00780B  00                 	db	0
   319  00780C  40                 	db	64
   320  00780D  00                 	db	0
   321  00780E  00                 	db	0
   322  00780F  00                 	db	0
   323  007810  00                 	db	0
   324  007811  40                 	db	64
   325  007812  20                 	db	32
   326  007813  10                 	db	16
   327  007814  08                 	db	8
   328  007815  04                 	db	4
   329  007816  02                 	db	2
   330  007817  01                 	db	1
   331  007818  00                 	db	0
   332  007819  00                 	db	0
   333  00781A  3E                 	db	62
   334  00781B  41                 	db	65
   335  00781C  41                 	db	65
   336  00781D  41                 	db	65
   337  00781E  3E                 	db	62
   338  00781F  00                 	db	0
   339  007820  00                 	db	0
   340  007821  00                 	db	0
   341  007822  00                 	db	0
   342  007823  41                 	db	65
   343  007824  7F                 	db	127
   344  007825  40                 	db	64
   345  007826  00                 	db	0
   346  007827  00                 	db	0
   347  007828  00                 	db	0
   348  007829  00                 	db	0
   349  00782A  42                 	db	66
   350  00782B  61                 	db	97
   351  00782C  51                 	db	81
   352  00782D  49                 	db	73
   353  00782E  6E                 	db	110
   354  00782F  00                 	db	0
   355  007830  00                 	db	0
   356  007831  00                 	db	0
   357  007832  22                 	db	34
   358  007833  41                 	db	65
   359  007834  49                 	db	73
   360  007835  49                 	db	73
   361  007836  36                 	db	54
   362  007837  00                 	db	0
   363  007838  00                 	db	0
   364  007839  00                 	db	0
   365  00783A  18                 	db	24
   366  00783B  14                 	db	20
   367  00783C  12                 	db	18
   368  00783D  7F                 	db	127
   369  00783E  10                 	db	16
   370  00783F  00                 	db	0
   371  007840  00                 	db	0
   372  007841  00                 	db	0
   373  007842  27                 	db	39
   374  007843  49                 	db	73
   375  007844  49                 	db	73
   376  007845  49                 	db	73
   377  007846  71                 	db	113
   378  007847  00                 	db	0
   379  007848  00                 	db	0
   380  007849  00                 	db	0
   381  00784A  3C                 	db	60
   382  00784B  4A                 	db	74
   383  00784C  49                 	db	73
   384  00784D  48                 	db	72
   385  00784E  70                 	db	112
   386  00784F  00                 	db	0
   387  007850  00                 	db	0
   388  007851  00                 	db	0
   389  007852  43                 	db	67
   390  007853  21                 	db	33
   391  007854  11                 	db	17
   392  007855  0D                 	db	13
   393  007856  03                 	db	3
   394  007857  00                 	db	0
   395  007858  00                 	db	0
   396  007859  00                 	db	0
   397  00785A  36                 	db	54
   398  00785B  49                 	db	73
   399  00785C  49                 	db	73
   400  00785D  49                 	db	73
   401  00785E  36                 	db	54
   402  00785F  00                 	db	0
   403  007860  00                 	db	0
   404  007861  00                 	db	0
   405  007862  06                 	db	6
   406  007863  09                 	db	9
   407  007864  49                 	db	73
   408  007865  29                 	db	41
   409  007866  1E                 	db	30
   410  007867  00                 	db	0
   411  007868  00                 	db	0
   412  007869  00                 	db	0
   413  00786A  00                 	db	0
   414  00786B  00                 	db	0
   415  00786C  12                 	db	18
   416  00786D  00                 	db	0
   417  00786E  00                 	db	0
   418  00786F  00                 	db	0
   419  007870  00                 	db	0
   420  007871  00                 	db	0
   421  007872  00                 	db	0
   422  007873  00                 	db	0
   423  007874  52                 	db	82
   424  007875  30                 	db	48
   425  007876  00                 	db	0
   426  007877  00                 	db	0
   427  007878  00                 	db	0
   428  007879  00                 	db	0
   429  00787A  00                 	db	0
   430  00787B  08                 	db	8
   431  00787C  14                 	db	20
   432  00787D  14                 	db	20
   433  00787E  22                 	db	34
   434  00787F  00                 	db	0
   435  007880  00                 	db	0
   436  007881  00                 	db	0
   437  007882  14                 	db	20
   438  007883  14                 	db	20
   439  007884  14                 	db	20
   440  007885  14                 	db	20
   441  007886  14                 	db	20
   442  007887  14                 	db	20
   443  007888  00                 	db	0
   444  007889  00                 	db	0
   445  00788A  00                 	db	0
   446  00788B  22                 	db	34
   447  00788C  14                 	db	20
   448  00788D  14                 	db	20
   449  00788E  08                 	db	8
   450  00788F  00                 	db	0
   451  007890  00                 	db	0
   452  007891  00                 	db	0
   453  007892  02                 	db	2
   454  007893  01                 	db	1
   455  007894  59                 	db	89
   456  007895  05                 	db	5
   457  007896  02                 	db	2
   458  007897  00                 	db	0
   459  007898  00                 	db	0
   460  007899  3E                 	db	62
   461  00789A  41                 	db	65
   462  00789B  5D                 	db	93
   463  00789C  55                 	db	85
   464  00789D  4D                 	db	77
   465  00789E  51                 	db	81
   466  00789F  2E                 	db	46
   467  0078A0  00                 	db	0
   468  0078A1  40                 	db	64
   469  0078A2  7C                 	db	124
   470  0078A3  4A                 	db	74
   471  0078A4  09                 	db	9
   472  0078A5  4A                 	db	74
   473  0078A6  7C                 	db	124
   474  0078A7  40                 	db	64
   475  0078A8  00                 	db	0
   476  0078A9  41                 	db	65
   477  0078AA  7F                 	db	127
   478  0078AB  49                 	db	73
   479  0078AC  49                 	db	73
   480  0078AD  49                 	db	73
   481  0078AE  49                 	db	73
   482  0078AF  36                 	db	54
   483  0078B0  00                 	db	0
   484  0078B1  1C                 	db	28
   485  0078B2  22                 	db	34
   486  0078B3  41                 	db	65
   487  0078B4  41                 	db	65
   488  0078B5  41                 	db	65
   489  0078B6  41                 	db	65
   490  0078B7  22                 	db	34
   491  0078B8  00                 	db	0
   492  0078B9  41                 	db	65
   493  0078BA  7F                 	db	127
   494  0078BB  41                 	db	65
   495  0078BC  41                 	db	65
   496  0078BD  41                 	db	65
   497  0078BE  22                 	db	34
   498  0078BF  1C                 	db	28
   499  0078C0  00                 	db	0
   500  0078C1  41                 	db	65
   501  0078C2  7F                 	db	127
   502  0078C3  49                 	db	73
   503  0078C4  49                 	db	73
   504  0078C5  5D                 	db	93
   505  0078C6  41                 	db	65
   506  0078C7  63                 	db	99
   507  0078C8  00                 	db	0
   508  0078C9  41                 	db	65
   509  0078CA  7F                 	db	127
   510  0078CB  49                 	db	73
   511  0078CC  09                 	db	9
   512  0078CD  1D                 	db	29
   513  0078CE  01                 	db	1
   514  0078CF  03                 	db	3
   515  0078D0  00                 	db	0
   516  0078D1  1C                 	db	28
   517  0078D2  22                 	db	34
   518  0078D3  41                 	db	65
   519  0078D4  49                 	db	73
   520  0078D5  49                 	db	73
   521  0078D6  3A                 	db	58
   522  0078D7  08                 	db	8
   523  0078D8  00                 	db	0
   524  0078D9  41                 	db	65
   525  0078DA  7F                 	db	127
   526  0078DB  08                 	db	8
   527  0078DC  08                 	db	8
   528  0078DD  08                 	db	8
   529  0078DE  7F                 	db	127
   530  0078DF  41                 	db	65
   531  0078E0  00                 	db	0
   532  0078E1  00                 	db	0
   533  0078E2  41                 	db	65
   534  0078E3  41                 	db	65
   535  0078E4  7F                 	db	127
   536  0078E5  41                 	db	65
   537  0078E6  41                 	db	65
   538  0078E7  00                 	db	0
   539  0078E8  00                 	db	0
   540  0078E9  30                 	db	48
   541  0078EA  40                 	db	64
   542  0078EB  41                 	db	65
   543  0078EC  41                 	db	65
   544  0078ED  3F                 	db	63
   545  0078EE  01                 	db	1
   546  0078EF  01                 	db	1
   547  0078F0  00                 	db	0
   548  0078F1  41                 	db	65
   549  0078F2  7F                 	db	127
   550  0078F3  08                 	db	8
   551  0078F4  0C                 	db	12
   552  0078F5  12                 	db	18
   553  0078F6  61                 	db	97
   554  0078F7  41                 	db	65
   555  0078F8  00                 	db	0
   556  0078F9  41                 	db	65
   557  0078FA  7F                 	db	127
   558  0078FB  41                 	db	65
   559  0078FC  40                 	db	64
   560  0078FD  40                 	db	64
   561  0078FE  40                 	db	64
   562  0078FF  60                 	db	96
   563  007900  00                 	db	0
   564  007901  41                 	db	65
   565  007902  7F                 	db	127
   566  007903  42                 	db	66
   567  007904  0C                 	db	12
   568  007905  42                 	db	66
   569  007906  7F                 	db	127
   570  007907  41                 	db	65
   571  007908  00                 	db	0
   572  007909  41                 	db	65
   573  00790A  7F                 	db	127
   574  00790B  42                 	db	66
   575  00790C  0C                 	db	12
   576  00790D  11                 	db	17
   577  00790E  7F                 	db	127
   578  00790F  01                 	db	1
   579  007910  00                 	db	0
   580  007911  1C                 	db	28
   581  007912  22                 	db	34
   582  007913  41                 	db	65
   583  007914  41                 	db	65
   584  007915  41                 	db	65
   585  007916  22                 	db	34
   586  007917  1C                 	db	28
   587  007918  00                 	db	0
   588  007919  41                 	db	65
   589  00791A  7F                 	db	127
   590  00791B  49                 	db	73
   591  00791C  09                 	db	9
   592  00791D  09                 	db	9
   593  00791E  09                 	db	9
   594  00791F  06                 	db	6
   595  007920  00                 	db	0
   596  007921  0C                 	db	12
   597  007922  12                 	db	18
   598  007923  21                 	db	33
   599  007924  21                 	db	33
   600  007925  61                 	db	97
   601  007926  52                 	db	82
   602  007927  4C                 	db	76
   603  007928  00                 	db	0
   604  007929  41                 	db	65
   605  00792A  7F                 	db	127
   606  00792B  09                 	db	9
   607  00792C  09                 	db	9
   608  00792D  19                 	db	25
   609  00792E  69                 	db	105
   610  00792F  46                 	db	70
   611  007930  00                 	db	0
   612  007931  66                 	db	102
   613  007932  49                 	db	73
   614  007933  49                 	db	73
   615  007934  49                 	db	73
   616  007935  49                 	db	73
   617  007936  49                 	db	73
   618  007937  33                 	db	51
   619  007938  00                 	db	0
   620  007939  03                 	db	3
   621  00793A  01                 	db	1
   622  00793B  41                 	db	65
   623  00793C  7F                 	db	127
   624  00793D  41                 	db	65
   625  00793E  01                 	db	1
   626  00793F  03                 	db	3
   627  007940  00                 	db	0
   628  007941  01                 	db	1
   629  007942  3F                 	db	63
   630  007943  41                 	db	65
   631  007944  40                 	db	64
   632  007945  41                 	db	65
   633  007946  3F                 	db	63
   634  007947  01                 	db	1
   635  007948  00                 	db	0
   636  007949  01                 	db	1
   637  00794A  0F                 	db	15
   638  00794B  31                 	db	49
   639  00794C  40                 	db	64
   640  00794D  31                 	db	49
   641  00794E  0F                 	db	15
   642  00794F  01                 	db	1
   643  007950  00                 	db	0
   644  007951  01                 	db	1
   645  007952  1F                 	db	31
   646  007953  61                 	db	97
   647  007954  14                 	db	20
   648  007955  61                 	db	97
   649  007956  1F                 	db	31
   650  007957  01                 	db	1
   651  007958  00                 	db	0
   652  007959  41                 	db	65
   653  00795A  41                 	db	65
   654  00795B  36                 	db	54
   655  00795C  08                 	db	8
   656  00795D  36                 	db	54
   657  00795E  41                 	db	65
   658  00795F  41                 	db	65
   659  007960  00                 	db	0
   660  007961  01                 	db	1
   661  007962  03                 	db	3
   662  007963  44                 	db	68
   663  007964  78                 	db	120
   664  007965  44                 	db	68
   665  007966  03                 	db	3
   666  007967  01                 	db	1
   667  007968  00                 	db	0
   668  007969  43                 	db	67
   669  00796A  61                 	db	97
   670  00796B  51                 	db	81
   671  00796C  49                 	db	73
   672  00796D  45                 	db	69
   673  00796E  43                 	db	67
   674  00796F  61                 	db	97
   675  007970  00                 	db	0
   676  007971  00                 	db	0
   677  007972  00                 	db	0
   678  007973  7F                 	db	127
   679  007974  41                 	db	65
   680  007975  41                 	db	65
   681  007976  00                 	db	0
   682  007977  00                 	db	0
   683  007978  00                 	db	0
   684  007979  01                 	db	1
   685  00797A  02                 	db	2
   686  00797B  04                 	db	4
   687  00797C  08                 	db	8
   688  00797D  10                 	db	16
   689  00797E  20                 	db	32
   690  00797F  40                 	db	64
   691  007980  00                 	db	0
   692  007981  00                 	db	0
   693  007982  00                 	db	0
   694  007983  41                 	db	65
   695  007984  41                 	db	65
   696  007985  7F                 	db	127
   697  007986  00                 	db	0
   698  007987  00                 	db	0
   699  007988  00                 	db	0
   700  007989  00                 	db	0
   701  00798A  04                 	db	4
   702  00798B  02                 	db	2
   703  00798C  01                 	db	1
   704  00798D  01                 	db	1
   705  00798E  02                 	db	2
   706  00798F  04                 	db	4
   707  007990  00                 	db	0
   708  007991  00                 	db	0
   709  007992  40                 	db	64
   710  007993  40                 	db	64
   711  007994  40                 	db	64
   712  007995  40                 	db	64
   713  007996  40                 	db	64
   714  007997  40                 	db	64
   715  007998  00                 	db	0
   716  007999  00                 	db	0
   717  00799A  01                 	db	1
   718  00799B  02                 	db	2
   719  00799C  00                 	db	0
   720  00799D  00                 	db	0
   721  00799E  00                 	db	0
   722  00799F  00                 	db	0
   723  0079A0  00                 	db	0
   724  0079A1  00                 	db	0
   725  0079A2  34                 	db	52
   726  0079A3  4A                 	db	74
   727  0079A4  4A                 	db	74
   728  0079A5  4A                 	db	74
   729  0079A6  3C                 	db	60
   730  0079A7  40                 	db	64
   731  0079A8  00                 	db	0
   732  0079A9  00                 	db	0
   733  0079AA  41                 	db	65
   734  0079AB  3F                 	db	63
   735  0079AC  48                 	db	72
   736  0079AD  48                 	db	72
   737  0079AE  48                 	db	72
   738  0079AF  30                 	db	48
   739  0079B0  00                 	db	0
   740  0079B1  00                 	db	0
   741  0079B2  3C                 	db	60
   742  0079B3  42                 	db	66
   743  0079B4  42                 	db	66
   744  0079B5  42                 	db	66
   745  0079B6  24                 	db	36
   746  0079B7  00                 	db	0
   747  0079B8  00                 	db	0
   748  0079B9  00                 	db	0
   749  0079BA  30                 	db	48
   750  0079BB  48                 	db	72
   751  0079BC  48                 	db	72
   752  0079BD  49                 	db	73
   753  0079BE  3F                 	db	63
   754  0079BF  40                 	db	64
   755  0079C0  00                 	db	0
   756  0079C1  00                 	db	0
   757  0079C2  3C                 	db	60
   758  0079C3  4A                 	db	74
   759  0079C4  4A                 	db	74
   760  0079C5  4A                 	db	74
   761  0079C6  2C                 	db	44
   762  0079C7  00                 	db	0
   763  0079C8  00                 	db	0
   764  0079C9  00                 	db	0
   765  0079CA  00                 	db	0
   766  0079CB  48                 	db	72
   767  0079CC  7E                 	db	126
   768  0079CD  49                 	db	73
   769  0079CE  09                 	db	9
   770  0079CF  00                 	db	0
   771  0079D0  00                 	db	0
   772  0079D1  00                 	db	0
   773  0079D2  26                 	db	38
   774  0079D3  49                 	db	73
   775  0079D4  49                 	db	73
   776  0079D5  49                 	db	73
   777  0079D6  3F                 	db	63
   778  0079D7  01                 	db	1
   779  0079D8  00                 	db	0
   780  0079D9  41                 	db	65
   781  0079DA  7F                 	db	127
   782  0079DB  48                 	db	72
   783  0079DC  04                 	db	4
   784  0079DD  44                 	db	68
   785  0079DE  78                 	db	120
   786  0079DF  40                 	db	64
   787  0079E0  00                 	db	0
   788  0079E1  00                 	db	0
   789  0079E2  00                 	db	0
   790  0079E3  44                 	db	68
   791  0079E4  7D                 	db	125
   792  0079E5  40                 	db	64
   793  0079E6  00                 	db	0
   794  0079E7  00                 	db	0
   795  0079E8  00                 	db	0
   796  0079E9  00                 	db	0
   797  0079EA  00                 	db	0
   798  0079EB  40                 	db	64
   799  0079EC  44                 	db	68
   800  0079ED  3D                 	db	61
   801  0079EE  00                 	db	0
   802  0079EF  00                 	db	0
   803  0079F0  00                 	db	0
   804  0079F1  41                 	db	65
   805  0079F2  7F                 	db	127
   806  0079F3  10                 	db	16
   807  0079F4  18                 	db	24
   808  0079F5  24                 	db	36
   809  0079F6  42                 	db	66
   810  0079F7  42                 	db	66
   811  0079F8  00                 	db	0
   812  0079F9  00                 	db	0
   813  0079FA  40                 	db	64
   814  0079FB  41                 	db	65
   815  0079FC  7F                 	db	127
   816  0079FD  40                 	db	64
   817  0079FE  40                 	db	64
   818  0079FF  00                 	db	0
   819  007A00  00                 	db	0
   820  007A01  42                 	db	66
   821  007A02  7E                 	db	126
   822  007A03  02                 	db	2
   823  007A04  7C                 	db	124
   824  007A05  02                 	db	2
   825  007A06  7E                 	db	126
   826  007A07  40                 	db	64
   827  007A08  00                 	db	0
   828  007A09  42                 	db	66
   829  007A0A  7E                 	db	126
   830  007A0B  44                 	db	68
   831  007A0C  02                 	db	2
   832  007A0D  42                 	db	66
   833  007A0E  7C                 	db	124
   834  007A0F  40                 	db	64
   835  007A10  00                 	db	0
   836  007A11  00                 	db	0
   837  007A12  3C                 	db	60
   838  007A13  42                 	db	66
   839  007A14  42                 	db	66
   840  007A15  42                 	db	66
   841  007A16  3C                 	db	60
   842  007A17  00                 	db	0
   843  007A18  00                 	db	0
   844  007A19  00                 	db	0
   845  007A1A  41                 	db	65
   846  007A1B  7F                 	db	127
   847  007A1C  49                 	db	73
   848  007A1D  09                 	db	9
   849  007A1E  09                 	db	9
   850  007A1F  06                 	db	6
   851  007A20  00                 	db	0
   852  007A21  00                 	db	0
   853  007A22  06                 	db	6
   854  007A23  09                 	db	9
   855  007A24  09                 	db	9
   856  007A25  49                 	db	73
   857  007A26  7F                 	db	127
   858  007A27  41                 	db	65
   859  007A28  00                 	db	0
   860  007A29  00                 	db	0
   861  007A2A  42                 	db	66
   862  007A2B  7E                 	db	126
   863  007A2C  44                 	db	68
   864  007A2D  02                 	db	2
   865  007A2E  02                 	db	2
   866  007A2F  04                 	db	4
   867  007A30  00                 	db	0
   868  007A31  00                 	db	0
   869  007A32  64                 	db	100
   870  007A33  4A                 	db	74
   871  007A34  4A                 	db	74
   872  007A35  4A                 	db	74
   873  007A36  36                 	db	54
   874  007A37  00                 	db	0
   875  007A38  00                 	db	0
   876  007A39  00                 	db	0
   877  007A3A  04                 	db	4
   878  007A3B  3F                 	db	63
   879  007A3C  44                 	db	68
   880  007A3D  44                 	db	68
   881  007A3E  20                 	db	32
   882  007A3F  00                 	db	0
   883  007A40  00                 	db	0
   884  007A41  00                 	db	0
   885  007A42  02                 	db	2
   886  007A43  3E                 	db	62
   887  007A44  40                 	db	64
   888  007A45  40                 	db	64
   889  007A46  22                 	db	34
   890  007A47  7E                 	db	126
   891  007A48  40                 	db	64
   892  007A49  02                 	db	2
   893  007A4A  0E                 	db	14
   894  007A4B  32                 	db	50
   895  007A4C  40                 	db	64
   896  007A4D  32                 	db	50
   897  007A4E  0E                 	db	14
   898  007A4F  02                 	db	2
   899  007A50  00                 	db	0
   900  007A51  02                 	db	2
   901  007A52  1E                 	db	30
   902  007A53  62                 	db	98
   903  007A54  18                 	db	24
   904  007A55  62                 	db	98
   905  007A56  1E                 	db	30
   906  007A57  02                 	db	2
   907  007A58  00                 	db	0
   908  007A59  42                 	db	66
   909  007A5A  62                 	db	98
   910  007A5B  14                 	db	20
   911  007A5C  08                 	db	8
   912  007A5D  14                 	db	20
   913  007A5E  62                 	db	98
   914  007A5F  42                 	db	66
   915  007A60  00                 	db	0
   916  007A61  01                 	db	1
   917  007A62  43                 	db	67
   918  007A63  45                 	db	69
   919  007A64  38                 	db	56
   920  007A65  05                 	db	5
   921  007A66  03                 	db	3
   922  007A67  01                 	db	1
   923  007A68  00                 	db	0
   924  007A69  00                 	db	0
   925  007A6A  46                 	db	70
   926  007A6B  62                 	db	98
   927  007A6C  52                 	db	82
   928  007A6D  4A                 	db	74
   929  007A6E  46                 	db	70
   930  007A6F  62                 	db	98
   931  007A70  00                 	db	0
   932  007A71  00                 	db	0
   933  007A72  00                 	db	0
   934  007A73  08                 	db	8
   935  007A74  36                 	db	54
   936  007A75  41                 	db	65
   937  007A76  00                 	db	0
   938  007A77  00                 	db	0
   939  007A78  00                 	db	0
   940  007A79  00                 	db	0
   941  007A7A  00                 	db	0
   942  007A7B  00                 	db	0
   943  007A7C  7F                 	db	127
   944  007A7D  00                 	db	0
   945  007A7E  00                 	db	0
   946  007A7F  00                 	db	0
   947  007A80  00                 	db	0
   948  007A81  00                 	db	0
   949  007A82  00                 	db	0
   950  007A83  00                 	db	0
   951  007A84  41                 	db	65
   952  007A85  36                 	db	54
   953  007A86  08                 	db	8
   954  007A87  00                 	db	0
   955  007A88  00                 	db	0
   956  007A89  00                 	db	0
   957  007A8A  18                 	db	24
   958  007A8B  08                 	db	8
   959  007A8C  08                 	db	8
   960  007A8D  10                 	db	16
   961  007A8E  10                 	db	16
   962  007A8F  18                 	db	24
   963  007A90  00                 	db	0
   964  007A91  AA                 	db	170
   965  007A92  55                 	db	85
   966  007A93  AA                 	db	170
   967  007A94  55                 	db	85
   968  007A95  AA                 	db	170
   969  007A96  55                 	db	85
   970  007A97  AA                 	db	170
   971  007A98  55                 	db	85
   972  007A99                     __end_of_OledFont0:
   973                           	opt stack 0
   974  007A99                     _configDescriptor1:
   975                           	opt stack 0
   976  007A99  09                 	db	9
   977  007A9A  02                 	db	2
   978  007A9B  43                 	db	67
   979  007A9C  00                 	db	0
   980  007A9D  02                 	db	2
   981  007A9E  01                 	db	1
   982  007A9F  00                 	db	0
   983  007AA0  C0                 	db	192
   984  007AA1  32                 	db	50
   985  007AA2  09                 	db	9
   986  007AA3  04                 	db	4
   987  007AA4  00                 	db	0
   988  007AA5  00                 	db	0
   989  007AA6  01                 	db	1
   990  007AA7  02                 	db	2
   991  007AA8  02                 	db	2
   992  007AA9  01                 	db	1
   993  007AAA  00                 	db	0
   994  007AAB  05                 	db	5
   995  007AAC  24                 	db	36
   996  007AAD  00                 	db	0
   997  007AAE  10                 	db	16
   998  007AAF  01                 	db	1
   999  007AB0  04                 	db	4
  1000  007AB1  24                 	db	36
  1001  007AB2  02                 	db	2
  1002  007AB3  02                 	db	2
  1003  007AB4  05                 	db	5
  1004  007AB5  24                 	db	36
  1005  007AB6  06                 	db	6
  1006  007AB7  00                 	db	0
  1007  007AB8  01                 	db	1
  1008  007AB9  05                 	db	5
  1009  007ABA  24                 	db	36
  1010  007ABB  01                 	db	1
  1011  007ABC  00                 	db	0
  1012  007ABD  01                 	db	1
  1013  007ABE  07                 	db	7
  1014  007ABF  05                 	db	5
  1015  007AC0  81                 	db	129
  1016  007AC1  03                 	db	3
  1017  007AC2  08                 	db	8
  1018  007AC3  00                 	db	0
  1019  007AC4  02                 	db	2
  1020  007AC5  09                 	db	9
  1021  007AC6  04                 	db	4
  1022  007AC7  01                 	db	1
  1023  007AC8  00                 	db	0
  1024  007AC9  02                 	db	2
  1025  007ACA  0A                 	db	10
  1026  007ACB  00                 	db	0
  1027  007ACC  00                 	db	0
  1028  007ACD  00                 	db	0
  1029  007ACE  07                 	db	7
  1030  007ACF  05                 	db	5
  1031  007AD0  02                 	db	2
  1032  007AD1  02                 	db	2
  1033  007AD2  40                 	db	64
  1034  007AD3  00                 	db	0
  1035  007AD4  00                 	db	0
  1036  007AD5  07                 	db	7
  1037  007AD6  05                 	db	5
  1038  007AD7  82                 	db	130
  1039  007AD8  02                 	db	2
  1040  007AD9  40                 	db	64
  1041  007ADA  00                 	db	0
  1042  007ADB  00                 	db	0
  1043  007ADC                     __end_of_configDescriptor1:
  1044                           	opt stack 0
  1045  007ADC                     _sd001:
  1046                           	opt stack 0
  1047  007ADC  34                 	db	52
  1048  007ADD  03                 	db	3
  1049  007ADE  004D               	dw	77
  1050  007AE0  0069               	dw	105
  1051  007AE2  0063               	dw	99
  1052  007AE4  0072               	dw	114
  1053  007AE6  006F               	dw	111
  1054  007AE8  0063               	dw	99
  1055  007AEA  0068               	dw	104
  1056  007AEC  0069               	dw	105
  1057  007AEE  0070               	dw	112
  1058  007AF0  0020               	dw	32
  1059  007AF2  0054               	dw	84
  1060  007AF4  0065               	dw	101
  1061  007AF6  0063               	dw	99
  1062  007AF8  0068               	dw	104
  1063  007AFA  006E               	dw	110
  1064  007AFC  006F               	dw	111
  1065  007AFE  006C               	dw	108
  1066  007B00  006F               	dw	111
  1067  007B02  0067               	dw	103
  1068  007B04  0079               	dw	121
  1069  007B06  0020               	dw	32
  1070  007B08  0049               	dw	73
  1071  007B0A  006E               	dw	110
  1072  007B0C  0063               	dw	99
  1073  007B0E  002E               	dw	46
  1074  007B10                     __end_of_sd001:
  1075                           	opt stack 0
  1076  007B10                     _sd002:
  1077                           	opt stack 0
  1078  007B10  34                 	db	52
  1079  007B11  03                 	db	3
  1080  007B12  0043               	dw	67
  1081  007B14  0044               	dw	68
  1082  007B16  0043               	dw	67
  1083  007B18  0020               	dw	32
  1084  007B1A  0052               	dw	82
  1085  007B1C  0053               	dw	83
  1086  007B1E  002D               	dw	45
  1087  007B20  0032               	dw	50
  1088  007B22  0033               	dw	51
  1089  007B24  0032               	dw	50
  1090  007B26  0020               	dw	32
  1091  007B28  0045               	dw	69
  1092  007B2A  006D               	dw	109
  1093  007B2C  0075               	dw	117
  1094  007B2E  006C               	dw	108
  1095  007B30  0061               	dw	97
  1096  007B32  0074               	dw	116
  1097  007B34  0069               	dw	105
  1098  007B36  006F               	dw	111
  1099  007B38  006E               	dw	110
  1100  007B3A  0020               	dw	32
  1101  007B3C  0044               	dw	68
  1102  007B3E  0065               	dw	101
  1103  007B40  006D               	dw	109
  1104  007B42  006F               	dw	111
  1105  007B44                     __end_of_sd002:
  1106                           	opt stack 0
  1107  007B44                     _device_dsc:
  1108                           	opt stack 0
  1109  007B44  12                 	db	18
  1110  007B45  01                 	db	1
  1111  007B46  0200               	dw	512
  1112  007B48  02                 	db	2
  1113  007B49  00                 	db	0
  1114  007B4A  00                 	db	0
  1115  007B4B  08                 	db	8
  1116  007B4C  04D8               	dw	1240
  1117  007B4E  000A               	dw	10
  1118  007B50  0100               	dw	256
  1119  007B52  01                 	db	1
  1120  007B53  02                 	db	2
  1121  007B54  00                 	db	0
  1122  007B55  01                 	db	1
  1123  007B56                     __end_of_device_dsc:
  1124                           	opt stack 0
  1125  007B56                     _sd000:
  1126                           	opt stack 0
  1127  007B56  04                 	db	4
  1128  007B57  03                 	db	3
  1129  007B58  0409               	dw	1033
  1130  007B5A                     __end_of_sd000:
  1131                           	opt stack 0
  1132  0000                     _ANSELAbits	set	3931
  1133  0000                     _ANSELCbits	set	3933
  1134  0000                     _ACTCON	set	4021
  1135  0000                     _ADCON0	set	4034
  1136  0000                     _ADCON0bits	set	4034
  1137  0000                     _ADCON1	set	4033
  1138  0000                     _ADCON2	set	4032
  1139  0000                     _ADRESH	set	4036
  1140  0000                     _ADRESL	set	4035
  1141  0000                     _BAUDCON	set	4024
  1142  0000                     _CM1CON0	set	3992
  1143  0000                     _CM2CON1bits	set	3994
  1144  0000                     _EEADR	set	4009
  1145  0000                     _EECON1bits	set	4006
  1146  0000                     _EECON2	set	4007
  1147  0000                     _EEDATA	set	4008
  1148  0000                     _INTCONbits	set	4082
  1149  0000                     _IOCCbits	set	3975
  1150  0000                     _IPR3bits	set	4005
  1151  0000                     _LATAbits	set	3977
  1152  0000                     _LATBbits	set	3978
  1153  0000                     _LATCbits	set	3979
  1154  0000                     _OSCCON	set	4051
  1155  0000                     _OSCCON2	set	4050
  1156  0000                     _OSCCON2bits	set	4050
  1157  0000                     _OSCTUNE	set	3995
  1158  0000                     _PIE1bits	set	3997
  1159  0000                     _PIE2bits	set	4000
  1160  0000                     _PIE3bits	set	4003
  1161  0000                     _PIR1bits	set	3998
  1162  0000                     _PIR2bits	set	4001
  1163  0000                     _PIR3bits	set	4004
  1164  0000                     _PORTAbits	set	3968
  1165  0000                     _PORTBbits	set	3969
  1166  0000                     _PORTCbits	set	3970
  1167  0000                     _PR2	set	4027
  1168  0000                     _RCONbits	set	4048
  1169  0000                     _RCREG	set	4014
  1170  0000                     _RCSTA	set	4011
  1171  0000                     _RCSTAbits	set	4011
  1172  0000                     _SPBRG	set	4015
  1173  0000                     _SPBRGH	set	4016
  1174  0000                     _SSP1ADD	set	4040
  1175  0000                     _SSP1CON1	set	4038
  1176  0000                     _SSP1CON1bits	set	4038
  1177  0000                     _SSP1STAT	set	4039
  1178  0000                     _SSP1STATbits	set	4039
  1179  0000                     _SSPBUF	set	4041
  1180  0000                     _T1CON	set	4045
  1181  0000                     _T1CONbits	set	4045
  1182  0000                     _T1GCON	set	4044
  1183  0000                     _T2CON	set	4026
  1184  0000                     _T2CONbits	set	4026
  1185  0000                     _TMR1H	set	4047
  1186  0000                     _TMR1L	set	4046
  1187  0000                     _TMR2	set	4028
  1188  0000                     _TRISAbits	set	3986
  1189  0000                     _TRISBbits	set	3987
  1190  0000                     _TRISCbits	set	3988
  1191  0000                     _TXREG	set	4013
  1192  0000                     _TXSTA	set	4012
  1193  0000                     _TXSTAbits	set	4012
  1194  0000                     _UADDR	set	3939
  1195  0000                     _UCFG	set	3938
  1196  0000                     _UCON	set	3936
  1197  0000                     _UCONbits	set	3936
  1198  0000                     _UEIE	set	3942
  1199  0000                     _UEIR	set	3943
  1200  0000                     _UEP0bits	set	3946
  1201  0000                     _UIE	set	3940
  1202  0000                     _UIEbits	set	3940
  1203  0000                     _UIR	set	3941
  1204  0000                     _UIRbits	set	3941
  1205  0000                     _USTAT	set	3937
  1206  0000                     _VREFCON0	set	3965
  1207  0000                     _WDTCONbits	set	4049
  1208  0000                     _UEP0	set	3946
  1209  0000                     _UEP1	set	3947
  1210  0000                     _CKE	set	32318
  1211  0000                     _CKP	set	32308
  1212  0000                     _GIE	set	32663
  1213  0000                     _PEIE	set	32662
  1214  007B5A                     STR_70:
  1215  007B5A  72                 	db	114	;'r'
  1216  007B5B  61                 	db	97	;'a'
  1217  007B5C  64                 	db	100	;'d'
  1218  007B5D  69                 	db	105	;'i'
  1219  007B5E  6F                 	db	111	;'o'
  1220  007B5F  20                 	db	32
  1221  007B60  74                 	db	116	;'t'
  1222  007B61  78                 	db	120	;'x'
  1223  007B62  20                 	db	32
  1224  007B63  41                 	db	65	;'A'
  1225  007B64  41                 	db	65	;'A'
  1226  007B65  25                 	db	37
  1227  007B66  30                 	db	48	;'0'
  1228  007B67  32                 	db	50	;'2'
  1229  007B68  58                 	db	88	;'X'
  1230  007B69  25                 	db	37
  1231  007B6A  30                 	db	48	;'0'
  1232  007B6B  32                 	db	50	;'2'
  1233  007B6C  58                 	db	88	;'X'
  1234  007B6D  25                 	db	37
  1235  007B6E  30                 	db	48	;'0'
  1236  007B6F  32                 	db	50	;'2'
  1237  007B70  58                 	db	88	;'X'
  1238  007B71  25                 	db	37
  1239  007B72  30                 	db	48	;'0'
  1240  007B73  32                 	db	50	;'2'
  1241  007B74  58                 	db	88	;'X'
  1242  007B75  25                 	db	37
  1243  007B76  30                 	db	48	;'0'
  1244  007B77  32                 	db	50	;'2'
  1245  007B78  58                 	db	88	;'X'
  1246  007B79  00                 	db	0
  1247  007B7A                     STR_103:
  1248  007B7A  73                 	db	115	;'s'
  1249  007B7B  79                 	db	121	;'y'
  1250  007B7C  73                 	db	115	;'s'
  1251  007B7D  20                 	db	32
  1252  007B7E  73                 	db	115	;'s'
  1253  007B7F  65                 	db	101	;'e'
  1254  007B80  74                 	db	116	;'t'
  1255  007B81  20                 	db	32
  1256  007B82  70                 	db	112	;'p'
  1257  007B83  69                 	db	105	;'i'
  1258  007B84  6E                 	db	110	;'n'
  1259  007B85  64                 	db	100	;'d'
  1260  007B86  69                 	db	105	;'i'
  1261  007B87  67                 	db	103	;'g'
  1262  007B88  20                 	db	32
  1263  007B89  47                 	db	71	;'G'
  1264  007B8A  50                 	db	80	;'P'
  1265  007B8B  49                 	db	73	;'I'
  1266  007B8C  4F                 	db	79	;'O'
  1267  007B8D  31                 	db	49	;'1'
  1268  007B8E  30                 	db	48	;'0'
  1269  007B8F  20                 	db	32
  1270  007B90  30                 	db	48	;'0'
  1271  007B91  0D                 	db	13
  1272  007B92  0A                 	db	10
  1273  007B93  00                 	db	0
  1274  007B94  73                 	db	115	;'s'
  1275  007B95  79                 	db	121	;'y'
  1276  007B96  73                 	db	115	;'s'
  1277  007B97  20                 	db	32
  1278  007B98  73                 	db	115	;'s'
  1279  007B99  65                 	db	101	;'e'
  1280  007B9A  74                 	db	116	;'t'
  1281  007B9B  20                 	db	32
  1282  007B9C  70                 	db	112	;'p'
  1283  007B9D  69                 	db	105	;'i'
  1284  007B9E  6E                 	db	110	;'n'
  1285  007B9F  64                 	db	100	;'d'
  1286  007BA0  69                 	db	105	;'i'
  1287  007BA1  67                 	db	103	;'g'
  1288  007BA2  20                 	db	32
  1289  007BA3  47                 	db	71	;'G'
  1290  007BA4  50                 	db	80	;'P'
  1291  007BA5  49                 	db	73	;'I'
  1292  007BA6  4F                 	db	79	;'O'
  1293  007BA7  31                 	db	49	;'1'
  1294  007BA8  31                 	db	49	;'1'
  1295  007BA9  20                 	db	32
  1296  007BAA  30                 	db	48	;'0'
  1297  007BAB  0D                 	db	13
  1298  007BAC  0A                 	db	10
  1299  007BAD  00                 	db	0
  1300  007BAE  73                 	db	115	;'s'
  1301  007BAF  79                 	db	121	;'y'
  1302  007BB0  73                 	db	115	;'s'
  1303  007BB1  20                 	db	32
  1304  007BB2  73                 	db	115	;'s'
  1305  007BB3  65                 	db	101	;'e'
  1306  007BB4  74                 	db	116	;'t'
  1307  007BB5  20                 	db	32
  1308  007BB6  70                 	db	112	;'p'
  1309  007BB7  69                 	db	105	;'i'
  1310  007BB8  6E                 	db	110	;'n'
  1311  007BB9  64                 	db	100	;'d'
  1312  007BBA  69                 	db	105	;'i'
  1313  007BBB  67                 	db	103	;'g'
  1314  007BBC  20                 	db	32
  1315  007BBD  47                 	db	71	;'G'
  1316  007BBE  50                 	db	80	;'P'
  1317  007BBF  49                 	db	73	;'I'
  1318  007BC0  4F                 	db	79	;'O'
  1319  007BC1  31                 	db	49	;'1'
  1320  007BC2  30                 	db	48	;'0'
  1321  007BC3  20                 	db	32
  1322  007BC4  31                 	db	49	;'1'
  1323  007BC5  0D                 	db	13
  1324  007BC6  0A                 	db	10
  1325  007BC7  00                 	db	0
  1326  007BC8  73                 	db	115	;'s'
  1327  007BC9  79                 	db	121	;'y'
  1328  007BCA  73                 	db	115	;'s'
  1329  007BCB  20                 	db	32
  1330  007BCC  73                 	db	115	;'s'
  1331  007BCD  65                 	db	101	;'e'
  1332  007BCE  74                 	db	116	;'t'
  1333  007BCF  20                 	db	32
  1334  007BD0  70                 	db	112	;'p'
  1335  007BD1  69                 	db	105	;'i'
  1336  007BD2  6E                 	db	110	;'n'
  1337  007BD3  64                 	db	100	;'d'
  1338  007BD4  69                 	db	105	;'i'
  1339  007BD5  67                 	db	103	;'g'
  1340  007BD6  20                 	db	32
  1341  007BD7  47                 	db	71	;'G'
  1342  007BD8  50                 	db	80	;'P'
  1343  007BD9  49                 	db	73	;'I'
  1344  007BDA  4F                 	db	79	;'O'
  1345  007BDB  31                 	db	49	;'1'
  1346  007BDC  31                 	db	49	;'1'
  1347  007BDD  20                 	db	32
  1348  007BDE  31                 	db	49	;'1'
  1349  007BDF  0D                 	db	13
  1350  007BE0  0A                 	db	10
  1351  007BE1  00                 	db	0
  1352  007BE2                     STR_73:
  1353  007BE2  72                 	db	114	;'r'
  1354  007BE3  61                 	db	97	;'a'
  1355  007BE4  64                 	db	100	;'d'
  1356  007BE5  69                 	db	105	;'i'
  1357  007BE6  6F                 	db	111	;'o'
  1358  007BE7  20                 	db	32
  1359  007BE8  74                 	db	116	;'t'
  1360  007BE9  78                 	db	120	;'x'
  1361  007BEA  20                 	db	32
  1362  007BEB  41                 	db	65	;'A'
  1363  007BEC  41                 	db	65	;'A'
  1364  007BED  25                 	db	37
  1365  007BEE  30                 	db	48	;'0'
  1366  007BEF  32                 	db	50	;'2'
  1367  007BF0  58                 	db	88	;'X'
  1368  007BF1  25                 	db	37
  1369  007BF2  30                 	db	48	;'0'
  1370  007BF3  32                 	db	50	;'2'
  1371  007BF4  58                 	db	88	;'X'
  1372  007BF5  25                 	db	37
  1373  007BF6  30                 	db	48	;'0'
  1374  007BF7  32                 	db	50	;'2'
  1375  007BF8  58                 	db	88	;'X'
  1376  007BF9  00                 	db	0
  1377  007BFA                     STR_46:
  1378  007BFA  72                 	db	114	;'r'
  1379  007BFB  61                 	db	97	;'a'
  1380  007BFC  64                 	db	100	;'d'
  1381  007BFD  69                 	db	105	;'i'
  1382  007BFE  6F                 	db	111	;'o'
  1383  007BFF  20                 	db	32
  1384  007C00  73                 	db	115	;'s'
  1385  007C01  65                 	db	101	;'e'
  1386  007C02  74                 	db	116	;'t'
  1387  007C03  20                 	db	32
  1388  007C04  66                 	db	102	;'f'
  1389  007C05  64                 	db	100	;'d'
  1390  007C06  65                 	db	101	;'e'
  1391  007C07  76                 	db	118	;'v'
  1392  007C08  20                 	db	32
  1393  007C09  35                 	db	53	;'5'
  1394  007C0A  30                 	db	48	;'0'
  1395  007C0B  30                 	db	48	;'0'
  1396  007C0C  30                 	db	48	;'0'
  1397  007C0D  00                 	db	0
  1398  007C0E                     STR_43:
  1399  007C0E  72                 	db	114	;'r'
  1400  007C0F  61                 	db	97	;'a'
  1401  007C10  64                 	db	100	;'d'
  1402  007C11  69                 	db	105	;'i'
  1403  007C12  6F                 	db	111	;'o'
  1404  007C13  20                 	db	32
  1405  007C14  73                 	db	115	;'s'
  1406  007C15  65                 	db	101	;'e'
  1407  007C16  74                 	db	116	;'t'
  1408  007C17  20                 	db	32
  1409  007C18  61                 	db	97	;'a'
  1410  007C19  66                 	db	102	;'f'
  1411  007C1A  63                 	db	99	;'c'
  1412  007C1B  62                 	db	98	;'b'
  1413  007C1C  77                 	db	119	;'w'
  1414  007C1D  20                 	db	32
  1415  007C1E  31                 	db	49	;'1'
  1416  007C1F  32                 	db	50	;'2'
  1417  007C20  35                 	db	53	;'5'
  1418  007C21  00                 	db	0
  1419  007C22                     STR_22:
  1420  007C22  73                 	db	115	;'s'
  1421  007C23  79                 	db	121	;'y'
  1422  007C24  73                 	db	115	;'s'
  1423  007C25  20                 	db	32
  1424  007C26  73                 	db	115	;'s'
  1425  007C27  6C                 	db	108	;'l'
  1426  007C28  65                 	db	101	;'e'
  1427  007C29  65                 	db	101	;'e'
  1428  007C2A  70                 	db	112	;'p'
  1429  007C2B  20                 	db	32
  1430  007C2C  39                 	db	57	;'9'
  1431  007C2D  39                 	db	57	;'9'
  1432  007C2E  39                 	db	57	;'9'
  1433  007C2F  39                 	db	57	;'9'
  1434  007C30  39                 	db	57	;'9'
  1435  007C31  39                 	db	57	;'9'
  1436  007C32  39                 	db	57	;'9'
  1437  007C33  39                 	db	57	;'9'
  1438  007C34  39                 	db	57	;'9'
  1439  007C35  00                 	db	0
  1440  007C36                     STR_34:
  1441  007C36  72                 	db	114	;'r'
  1442  007C37  61                 	db	97	;'a'
  1443  007C38  64                 	db	100	;'d'
  1444  007C39  69                 	db	105	;'i'
  1445  007C3A  6F                 	db	111	;'o'
  1446  007C3B  20                 	db	32
  1447  007C3C  73                 	db	115	;'s'
  1448  007C3D  65                 	db	101	;'e'
  1449  007C3E  74                 	db	116	;'t'
  1450  007C3F  20                 	db	32
  1451  007C40  6D                 	db	109	;'m'
  1452  007C41  6F                 	db	111	;'o'
  1453  007C42  64                 	db	100	;'d'
  1454  007C43  20                 	db	32
  1455  007C44  6C                 	db	108	;'l'
  1456  007C45  6F                 	db	111	;'o'
  1457  007C46  72                 	db	114	;'r'
  1458  007C47  61                 	db	97	;'a'
  1459  007C48  00                 	db	0
  1460  007C49                     STR_61:
  1461  007C49  72                 	db	114	;'r'
  1462  007C4A  61                 	db	97	;'a'
  1463  007C4B  64                 	db	100	;'d'
  1464  007C4C  69                 	db	105	;'i'
  1465  007C4D  6F                 	db	111	;'o'
  1466  007C4E  20                 	db	32
  1467  007C4F  73                 	db	115	;'s'
  1468  007C50  65                 	db	101	;'e'
  1469  007C51  74                 	db	116	;'t'
  1470  007C52  20                 	db	32
  1471  007C53  73                 	db	115	;'s'
  1472  007C54  79                 	db	121	;'y'
  1473  007C55  6E                 	db	110	;'n'
  1474  007C56  63                 	db	99	;'c'
  1475  007C57  20                 	db	32
  1476  007C58  31                 	db	49	;'1'
  1477  007C59  32                 	db	50	;'2'
  1478  007C5A  00                 	db	0
  1479  007C5B                     STR_40:
  1480  007C5B  72                 	db	114	;'r'
  1481  007C5C  61                 	db	97	;'a'
  1482  007C5D  64                 	db	100	;'d'
  1483  007C5E  69                 	db	105	;'i'
  1484  007C5F  6F                 	db	111	;'o'
  1485  007C60  20                 	db	32
  1486  007C61  73                 	db	115	;'s'
  1487  007C62  65                 	db	101	;'e'
  1488  007C63  74                 	db	116	;'t'
  1489  007C64  20                 	db	32
  1490  007C65  73                 	db	115	;'s'
  1491  007C66  66                 	db	102	;'f'
  1492  007C67  20                 	db	32
  1493  007C68  73                 	db	115	;'s'
  1494  007C69  66                 	db	102	;'f'
  1495  007C6A  31                 	db	49	;'1'
  1496  007C6B  32                 	db	50	;'2'
  1497  007C6C  00                 	db	0
  1498  007C6D                     STR_49:
  1499  007C6D  72                 	db	114	;'r'
  1500  007C6E  61                 	db	97	;'a'
  1501  007C6F  64                 	db	100	;'d'
  1502  007C70  69                 	db	105	;'i'
  1503  007C71  6F                 	db	111	;'o'
  1504  007C72  20                 	db	32
  1505  007C73  73                 	db	115	;'s'
  1506  007C74  65                 	db	101	;'e'
  1507  007C75  74                 	db	116	;'t'
  1508  007C76  20                 	db	32
  1509  007C77  70                 	db	112	;'p'
  1510  007C78  72                 	db	114	;'r'
  1511  007C79  6C                 	db	108	;'l'
  1512  007C7A  65                 	db	101	;'e'
  1513  007C7B  6E                 	db	110	;'n'
  1514  007C7C  20                 	db	32
  1515  007C7D  38                 	db	56	;'8'
  1516  007C7E  00                 	db	0
  1517  007C7F                     STR_108:
  1518  007C7F  30                 	db	48	;'0'
  1519  007C80  31                 	db	49	;'1'
  1520  007C81  32                 	db	50	;'2'
  1521  007C82  33                 	db	51	;'3'
  1522  007C83  34                 	db	52	;'4'
  1523  007C84  35                 	db	53	;'5'
  1524  007C85  36                 	db	54	;'6'
  1525  007C86  37                 	db	55	;'7'
  1526  007C87  38                 	db	56	;'8'
  1527  007C88  39                 	db	57	;'9'
  1528  007C89  41                 	db	65	;'A'
  1529  007C8A  42                 	db	66	;'B'
  1530  007C8B  43                 	db	67	;'C'
  1531  007C8C  44                 	db	68	;'D'
  1532  007C8D  45                 	db	69	;'E'
  1533  007C8E  46                 	db	70	;'F'
  1534  007C8F  00                 	db	0
  1535  007C90                     STR_28:
  1536  007C90  20                 	db	32
  1537  007C91  28                 	db	40
  1538  007C92  53                 	db	83	;'S'
  1539  007C93  31                 	db	49	;'1'
  1540  007C94  29                 	db	41
  1541  007C95  20                 	db	32
  1542  007C96  20                 	db	32
  1543  007C97  20                 	db	32
  1544  007C98  20                 	db	32
  1545  007C99  20                 	db	32
  1546  007C9A  20                 	db	32
  1547  007C9B  28                 	db	40
  1548  007C9C  53                 	db	83	;'S'
  1549  007C9D  32                 	db	50	;'2'
  1550  007C9E  29                 	db	41
  1551  007C9F  20                 	db	32
  1552  007CA0  00                 	db	0
  1553  007CA1                     STR_37:
  1554  007CA1  72                 	db	114	;'r'
  1555  007CA2  61                 	db	97	;'a'
  1556  007CA3  64                 	db	100	;'d'
  1557  007CA4  69                 	db	105	;'i'
  1558  007CA5  6F                 	db	111	;'o'
  1559  007CA6  20                 	db	32
  1560  007CA7  73                 	db	115	;'s'
  1561  007CA8  65                 	db	101	;'e'
  1562  007CA9  74                 	db	116	;'t'
  1563  007CAA  20                 	db	32
  1564  007CAB  70                 	db	112	;'p'
  1565  007CAC  77                 	db	119	;'w'
  1566  007CAD  72                 	db	114	;'r'
  1567  007CAE  20                 	db	32
  1568  007CAF  32                 	db	50	;'2'
  1569  007CB0  30                 	db	48	;'0'
  1570  007CB1  00                 	db	0
  1571  007CB2                     STR_55:
  1572  007CB2  72                 	db	114	;'r'
  1573  007CB3  61                 	db	97	;'a'
  1574  007CB4  64                 	db	100	;'d'
  1575  007CB5  69                 	db	105	;'i'
  1576  007CB6  6F                 	db	111	;'o'
  1577  007CB7  20                 	db	32
  1578  007CB8  73                 	db	115	;'s'
  1579  007CB9  65                 	db	101	;'e'
  1580  007CBA  74                 	db	116	;'t'
  1581  007CBB  20                 	db	32
  1582  007CBC  63                 	db	99	;'c'
  1583  007CBD  72                 	db	114	;'r'
  1584  007CBE  20                 	db	32
  1585  007CBF  34                 	db	52	;'4'
  1586  007CC0  2F                 	db	47
  1587  007CC1  35                 	db	53	;'5'
  1588  007CC2  00                 	db	0
  1589  007CC3                     STR_64:
  1590  007CC3  72                 	db	114	;'r'
  1591  007CC4  61                 	db	97	;'a'
  1592  007CC5  64                 	db	100	;'d'
  1593  007CC6  69                 	db	105	;'i'
  1594  007CC7  6F                 	db	111	;'o'
  1595  007CC8  20                 	db	32
  1596  007CC9  73                 	db	115	;'s'
  1597  007CCA  65                 	db	101	;'e'
  1598  007CCB  74                 	db	116	;'t'
  1599  007CCC  20                 	db	32
  1600  007CCD  62                 	db	98	;'b'
  1601  007CCE  77                 	db	119	;'w'
  1602  007CCF  20                 	db	32
  1603  007CD0  31                 	db	49	;'1'
  1604  007CD1  32                 	db	50	;'2'
  1605  007CD2  35                 	db	53	;'5'
  1606  007CD3  00                 	db	0
  1607  007CD4                     STR_25:
  1608  007CD4  52                 	db	82	;'R'
  1609  007CD5  65                 	db	101	;'e'
  1610  007CD6  52                 	db	82	;'R'
  1611  007CD7  75                 	db	117	;'u'
  1612  007CD8  6E                 	db	110	;'n'
  1613  007CD9  20                 	db	32
  1614  007CDA  50                 	db	80	;'P'
  1615  007CDB  77                 	db	119	;'w'
  1616  007CDC  72                 	db	114	;'r'
  1617  007CDD  54                 	db	84	;'T'
  1618  007CDE  73                 	db	115	;'s'
  1619  007CDF  74                 	db	116	;'t'
  1620  007CE0  3C                 	db	60	;'<'
  1621  007CE1  53                 	db	83	;'S'
  1622  007CE2  32                 	db	50	;'2'
  1623  007CE3  3E                 	db	62	;'>'
  1624  007CE4  00                 	db	0
  1625  007CE5                     STR_83:
  1626  007CE5  49                 	db	73	;'I'
  1627  007CE6  73                 	db	115	;'s'
  1628  007CE7  73                 	db	115	;'s'
  1629  007CE8  75                 	db	117	;'u'
  1630  007CE9  65                 	db	101	;'e'
  1631  007CEA  20                 	db	32
  1632  007CEB  50                 	db	80	;'P'
  1633  007CEC  65                 	db	101	;'e'
  1634  007CED  72                 	db	114	;'r'
  1635  007CEE  6F                 	db	111	;'o'
  1636  007CEF  64                 	db	100	;'d'
  1637  007CF0  69                 	db	105	;'i'
  1638  007CF1  63                 	db	99	;'c'
  1639  007CF2  20                 	db	32
  1640  007CF3  54                 	db	84	;'T'
  1641  007CF4  58                 	db	88	;'X'
  1642  007CF5  00                 	db	0
  1643  007CF6                     STR_52:
  1644  007CF6  72                 	db	114	;'r'
  1645  007CF7  61                 	db	97	;'a'
  1646  007CF8  64                 	db	100	;'d'
  1647  007CF9  69                 	db	105	;'i'
  1648  007CFA  6F                 	db	111	;'o'
  1649  007CFB  20                 	db	32
  1650  007CFC  73                 	db	115	;'s'
  1651  007CFD  65                 	db	101	;'e'
  1652  007CFE  74                 	db	116	;'t'
  1653  007CFF  20                 	db	32
  1654  007D00  63                 	db	99	;'c'
  1655  007D01  72                 	db	114	;'r'
  1656  007D02  63                 	db	99	;'c'
  1657  007D03  20                 	db	32
  1658  007D04  6F                 	db	111	;'o'
  1659  007D05  6E                 	db	110	;'n'
  1660  007D06  00                 	db	0
  1661  007D07                     STR_26:
  1662  007D07  4D                 	db	77	;'M'
  1663  007D08  6F                 	db	111	;'o'
  1664  007D09  62                 	db	98	;'b'
  1665  007D0A  69                 	db	105	;'i'
  1666  007D0B  6C                 	db	108	;'l'
  1667  007D0C  65                 	db	101	;'e'
  1668  007D0D  20                 	db	32
  1669  007D0E  4D                 	db	77	;'M'
  1670  007D0F  6F                 	db	111	;'o'
  1671  007D10  74                 	db	116	;'t'
  1672  007D11  65                 	db	101	;'e'
  1673  007D12  20                 	db	32
  1674  007D13  2D                 	db	45
  1675  007D14  41                 	db	65	;'A'
  1676  007D15  70                 	db	112	;'p'
  1677  007D16  70                 	db	112	;'p'
  1678  007D17  00                 	db	0
  1679  007D18                     STR_27:
  1680  007D18  4E                 	db	78	;'N'
  1681  007D19  61                 	db	97	;'a'
  1682  007D1A  76                 	db	118	;'v'
  1683  007D1B  69                 	db	105	;'i'
  1684  007D1C  67                 	db	103	;'g'
  1685  007D1D  61                 	db	97	;'a'
  1686  007D1E  74                 	db	116	;'t'
  1687  007D1F  65                 	db	101	;'e'
  1688  007D20  20                 	db	32
  1689  007D21  20                 	db	32
  1690  007D22  53                 	db	83	;'S'
  1691  007D23  65                 	db	101	;'e'
  1692  007D24  6C                 	db	108	;'l'
  1693  007D25  65                 	db	101	;'e'
  1694  007D26  63                 	db	99	;'c'
  1695  007D27  74                 	db	116	;'t'
  1696  007D28  00                 	db	0
  1697  007D29                     STR_86:
  1698  007D29  28                 	db	40
  1699  007D2A  4E                 	db	78	;'N'
  1700  007D2B  41                 	db	65	;'A'
  1701  007D2C  56                 	db	86	;'V'
  1702  007D2D  29                 	db	41
  1703  007D2E  20                 	db	32
  1704  007D2F  20                 	db	32
  1705  007D30  20                 	db	32
  1706  007D31  20                 	db	32
  1707  007D32  28                 	db	40
  1708  007D33  53                 	db	83	;'S'
  1709  007D34  45                 	db	69	;'E'
  1710  007D35  4C                 	db	76	;'L'
  1711  007D36  29                 	db	41
  1712  007D37  20                 	db	32
  1713  007D38  00                 	db	0
  1714  007D39                     STR_58:
  1715  007D39  72                 	db	114	;'r'
  1716  007D3A  61                 	db	97	;'a'
  1717  007D3B  64                 	db	100	;'d'
  1718  007D3C  69                 	db	105	;'i'
  1719  007D3D  6F                 	db	111	;'o'
  1720  007D3E  20                 	db	32
  1721  007D3F  73                 	db	115	;'s'
  1722  007D40  65                 	db	101	;'e'
  1723  007D41  74                 	db	116	;'t'
  1724  007D42  20                 	db	32
  1725  007D43  77                 	db	119	;'w'
  1726  007D44  64                 	db	100	;'d'
  1727  007D45  74                 	db	116	;'t'
  1728  007D46  20                 	db	32
  1729  007D47  30                 	db	48	;'0'
  1730  007D48  00                 	db	0
  1731  007D49                     STR_77:
  1732  007D49  47                 	db	71	;'G'
  1733  007D4A  6F                 	db	111	;'o'
  1734  007D4B  74                 	db	116	;'t'
  1735  007D4C  20                 	db	32
  1736  007D4D  52                 	db	82	;'R'
  1737  007D4E  58                 	db	88	;'X'
  1738  007D4F  20                 	db	32
  1739  007D50  4D                 	db	77	;'M'
  1740  007D51  65                 	db	101	;'e'
  1741  007D52  73                 	db	115	;'s'
  1742  007D53  73                 	db	115	;'s'
  1743  007D54  61                 	db	97	;'a'
  1744  007D55  67                 	db	103	;'g'
  1745  007D56  65                 	db	101	;'e'
  1746  007D57  3A                 	db	58	;':'
  1747  007D58  00                 	db	0
  1748  007D59                     STR_68:
  1749  007D59  50                 	db	80	;'P'
  1750  007D5A  75                 	db	117	;'u'
  1751  007D5B  6D                 	db	109	;'m'
  1752  007D5C  70                 	db	112	;'p'
  1753  007D5D  20                 	db	32
  1754  007D5E  64                 	db	100	;'d'
  1755  007D5F  65                 	db	101	;'e'
  1756  007D60  66                 	db	102	;'f'
  1757  007D61  61                 	db	97	;'a'
  1758  007D62  75                 	db	117	;'u'
  1759  007D63  6C                 	db	108	;'l'
  1760  007D64  74                 	db	116	;'t'
  1761  007D65  20                 	db	32
  1762  007D66  4F                 	db	79	;'O'
  1763  007D67  4E                 	db	78	;'N'
  1764  007D68  00                 	db	0
  1765  007D69  6D                 	db	109	;'m'
  1766  007D6A  61                 	db	97	;'a'
  1767  007D6B  63                 	db	99	;'c'
  1768  007D6C  20                 	db	32
  1769  007D6D  73                 	db	115	;'s'
  1770  007D6E  65                 	db	101	;'e'
  1771  007D6F  74                 	db	116	;'t'
  1772  007D70  20                 	db	32
  1773  007D71  61                 	db	97	;'a'
  1774  007D72  64                 	db	100	;'d'
  1775  007D73  72                 	db	114	;'r'
  1776  007D74  20                 	db	32
  1777  007D75  6F                 	db	111	;'o'
  1778  007D76  66                 	db	102	;'f'
  1779  007D77  66                 	db	102	;'f'
  1780  007D78  00                 	db	0
  1781  007D79  42                 	db	66	;'B'
  1782  007D7A  75                 	db	117	;'u'
  1783  007D7B  69                 	db	105	;'i'
  1784  007D7C  6C                 	db	108	;'l'
  1785  007D7D  64                 	db	100	;'d'
  1786  007D7E  20                 	db	32
  1787  007D7F  44                 	db	68	;'D'
  1788  007D80  61                 	db	97	;'a'
  1789  007D81  74                 	db	116	;'t'
  1790  007D82  65                 	db	101	;'e'
  1791  007D83  2F                 	db	47
  1792  007D84  54                 	db	84	;'T'
  1793  007D85  69                 	db	105	;'i'
  1794  007D86  6D                 	db	109	;'m'
  1795  007D87  65                 	db	101	;'e'
  1796  007D88  00                 	db	0
  1797  007D89                     STR_69:
  1798  007D89  57                 	db	87	;'W'
  1799  007D8A  61                 	db	97	;'a'
  1800  007D8B  69                 	db	105	;'i'
  1801  007D8C  74                 	db	116	;'t'
  1802  007D8D  69                 	db	105	;'i'
  1803  007D8E  6E                 	db	110	;'n'
  1804  007D8F  67                 	db	103	;'g'
  1805  007D90  20                 	db	32
  1806  007D91  66                 	db	102	;'f'
  1807  007D92  6F                 	db	111	;'o'
  1808  007D93  72                 	db	114	;'r'
  1809  007D94  20                 	db	32
  1810  007D95  52                 	db	82	;'R'
  1811  007D96  58                 	db	88	;'X'
  1812  007D97  00                 	db	0
  1813  007D98  6D                 	db	109	;'m'
  1814  007D99  61                 	db	97	;'a'
  1815  007D9A  63                 	db	99	;'c'
  1816  007D9B  20                 	db	32
  1817  007D9C  73                 	db	115	;'s'
  1818  007D9D  65                 	db	101	;'e'
  1819  007D9E  74                 	db	116	;'t'
  1820  007D9F  20                 	db	32
  1821  007DA0  61                 	db	97	;'a'
  1822  007DA1  64                 	db	100	;'d'
  1823  007DA2  72                 	db	114	;'r'
  1824  007DA3  20                 	db	32
  1825  007DA4  6F                 	db	111	;'o'
  1826  007DA5  6E                 	db	110	;'n'
  1827  007DA6  00                 	db	0
  1828  007DA7                     STR_2:
  1829  007DA7  20                 	db	32
  1830  007DA8  20                 	db	32
  1831  007DA9  20                 	db	32
  1832  007DAA  50                 	db	80	;'P'
  1833  007DAB  52                 	db	82	;'R'
  1834  007DAC  4F                 	db	79	;'O'
  1835  007DAD  54                 	db	84	;'T'
  1836  007DAE  4F                 	db	79	;'O'
  1837  007DAF  20                 	db	32
  1838  007DB0  20                 	db	32
  1839  007DB1  20                 	db	32
  1840  007DB2  20                 	db	32
  1841  007DB3  20                 	db	32
  1842  007DB4  20                 	db	32
  1843  007DB5  00                 	db	0
  1844  007DB6                     STR_1:
  1845  007DB6  4D                 	db	77	;'M'
  1846  007DB7  45                 	db	69	;'E'
  1847  007DB8  4E                 	db	78	;'N'
  1848  007DB9  43                 	db	67	;'C'
  1849  007DBA  4F                 	db	79	;'O'
  1850  007DBB  2D                 	db	45
  1851  007DBC  4C                 	db	76	;'L'
  1852  007DBD  4F                 	db	79	;'O'
  1853  007DBE  52                 	db	82	;'R'
  1854  007DBF  45                 	db	69	;'E'
  1855  007DC0  58                 	db	88	;'X'
  1856  007DC1  20                 	db	32
  1857  007DC2  20                 	db	32
  1858  007DC3  20                 	db	32
  1859  007DC4  00                 	db	0
  1860  007DC5                     STR_3:
  1861  007DC5  20                 	db	32
  1862  007DC6  20                 	db	32
  1863  007DC7  20                 	db	32
  1864  007DC8  42                 	db	66	;'B'
  1865  007DC9  75                 	db	117	;'u'
  1866  007DCA  69                 	db	105	;'i'
  1867  007DCB  6C                 	db	108	;'l'
  1868  007DCC  64                 	db	100	;'d'
  1869  007DCD  20                 	db	32
  1870  007DCE  30                 	db	48	;'0'
  1871  007DCF  30                 	db	48	;'0'
  1872  007DD0  35                 	db	53	;'5'
  1873  007DD1  20                 	db	32
  1874  007DD2  20                 	db	32
  1875  007DD3  00                 	db	0
  1876  007DD4                     STR_85:
  1877  007DD4  4C                 	db	76	;'L'
  1878  007DD5  3A                 	db	58	;':'
  1879  007DD6  20                 	db	32
  1880  007DD7  20                 	db	32
  1881  007DD8  20                 	db	32
  1882  007DD9  20                 	db	32
  1883  007DDA  20                 	db	32
  1884  007DDB  20                 	db	32
  1885  007DDC  20                 	db	32
  1886  007DDD  54                 	db	84	;'T'
  1887  007DDE  3A                 	db	58	;':'
  1888  007DDF  20                 	db	32
  1889  007DE0  00                 	db	0
  1890  007DE1                     STR_91:
  1891  007DE1  6D                 	db	109	;'m'
  1892  007DE2  61                 	db	97	;'a'
  1893  007DE3  63                 	db	99	;'c'
  1894  007DE4  20                 	db	32
  1895  007DE5  73                 	db	115	;'s'
  1896  007DE6  65                 	db	101	;'e'
  1897  007DE7  74                 	db	116	;'t'
  1898  007DE8  20                 	db	32
  1899  007DE9  64                 	db	100	;'d'
  1900  007DEA  72                 	db	114	;'r'
  1901  007DEB  20                 	db	32
  1902  007DEC  30                 	db	48	;'0'
  1903  007DED  00                 	db	0
  1904  007DEE                     STR_92:
  1905  007DEE  6D                 	db	109	;'m'
  1906  007DEF  61                 	db	97	;'a'
  1907  007DF0  63                 	db	99	;'c'
  1908  007DF1  20                 	db	32
  1909  007DF2  73                 	db	115	;'s'
  1910  007DF3  65                 	db	101	;'e'
  1911  007DF4  74                 	db	116	;'t'
  1912  007DF5  20                 	db	32
  1913  007DF6  64                 	db	100	;'d'
  1914  007DF7  72                 	db	114	;'r'
  1915  007DF8  20                 	db	32
  1916  007DF9  31                 	db	49	;'1'
  1917  007DFA  00                 	db	0
  1918  007DFB  6D                 	db	109	;'m'
  1919  007DFC  61                 	db	97	;'a'
  1920  007DFD  63                 	db	99	;'c'
  1921  007DFE  20                 	db	32
  1922  007DFF  73                 	db	115	;'s'
  1923  007E00  65                 	db	101	;'e'
  1924  007E01  74                 	db	116	;'t'
  1925  007E02  20                 	db	32
  1926  007E03  64                 	db	100	;'d'
  1927  007E04  72                 	db	114	;'r'
  1928  007E05  20                 	db	32
  1929  007E06  32                 	db	50	;'2'
  1930  007E07  00                 	db	0
  1931  007E08  6D                 	db	109	;'m'
  1932  007E09  61                 	db	97	;'a'
  1933  007E0A  63                 	db	99	;'c'
  1934  007E0B  20                 	db	32
  1935  007E0C  73                 	db	115	;'s'
  1936  007E0D  65                 	db	101	;'e'
  1937  007E0E  74                 	db	116	;'t'
  1938  007E0F  20                 	db	32
  1939  007E10  64                 	db	100	;'d'
  1940  007E11  72                 	db	114	;'r'
  1941  007E12  20                 	db	32
  1942  007E13  33                 	db	51	;'3'
  1943  007E14  00                 	db	0
  1944  007E15  6D                 	db	109	;'m'
  1945  007E16  61                 	db	97	;'a'
  1946  007E17  63                 	db	99	;'c'
  1947  007E18  20                 	db	32
  1948  007E19  73                 	db	115	;'s'
  1949  007E1A  65                 	db	101	;'e'
  1950  007E1B  74                 	db	116	;'t'
  1951  007E1C  20                 	db	32
  1952  007E1D  64                 	db	100	;'d'
  1953  007E1E  72                 	db	114	;'r'
  1954  007E1F  20                 	db	32
  1955  007E20  34                 	db	52	;'4'
  1956  007E21  00                 	db	0
  1957  007E22  6D                 	db	109	;'m'
  1958  007E23  61                 	db	97	;'a'
  1959  007E24  63                 	db	99	;'c'
  1960  007E25  20                 	db	32
  1961  007E26  73                 	db	115	;'s'
  1962  007E27  65                 	db	101	;'e'
  1963  007E28  74                 	db	116	;'t'
  1964  007E29  20                 	db	32
  1965  007E2A  64                 	db	100	;'d'
  1966  007E2B  72                 	db	114	;'r'
  1967  007E2C  20                 	db	32
  1968  007E2D  35                 	db	53	;'5'
  1969  007E2E  00                 	db	0
  1970  007E2F  6D                 	db	109	;'m'
  1971  007E30  61                 	db	97	;'a'
  1972  007E31  63                 	db	99	;'c'
  1973  007E32  20                 	db	32
  1974  007E33  73                 	db	115	;'s'
  1975  007E34  65                 	db	101	;'e'
  1976  007E35  74                 	db	116	;'t'
  1977  007E36  20                 	db	32
  1978  007E37  64                 	db	100	;'d'
  1979  007E38  72                 	db	114	;'r'
  1980  007E39  20                 	db	32
  1981  007E3A  36                 	db	54	;'6'
  1982  007E3B  00                 	db	0
  1983  007E3C  6D                 	db	109	;'m'
  1984  007E3D  61                 	db	97	;'a'
  1985  007E3E  63                 	db	99	;'c'
  1986  007E3F  20                 	db	32
  1987  007E40  73                 	db	115	;'s'
  1988  007E41  65                 	db	101	;'e'
  1989  007E42  74                 	db	116	;'t'
  1990  007E43  20                 	db	32
  1991  007E44  64                 	db	100	;'d'
  1992  007E45  72                 	db	114	;'r'
  1993  007E46  20                 	db	32
  1994  007E47  37                 	db	55	;'7'
  1995  007E48  00                 	db	0
  1996  007E49  42                 	db	66	;'B'
  1997  007E4A  75                 	db	117	;'u'
  1998  007E4B  74                 	db	116	;'t'
  1999  007E4C  74                 	db	116	;'t'
  2000  007E4D  6F                 	db	111	;'o'
  2001  007E4E  6E                 	db	110	;'n'
  2002  007E4F  20                 	db	32
  2003  007E50  54                 	db	84	;'T'
  2004  007E51  65                 	db	101	;'e'
  2005  007E52  73                 	db	115	;'s'
  2006  007E53  74                 	db	116	;'t'
  2007  007E54  3A                 	db	58	;':'
  2008  007E55  00                 	db	0
  2009  007E56  42                 	db	66	;'B'
  2010  007E57  75                 	db	117	;'u'
  2011  007E58  74                 	db	116	;'t'
  2012  007E59  74                 	db	116	;'t'
  2013  007E5A  6F                 	db	111	;'o'
  2014  007E5B  6E                 	db	110	;'n'
  2015  007E5C  31                 	db	49	;'1'
  2016  007E5D  20                 	db	32
  2017  007E5E  50                 	db	80	;'P'
  2018  007E5F  41                 	db	65	;'A'
  2019  007E60  53                 	db	83	;'S'
  2020  007E61  53                 	db	83	;'S'
  2021  007E62  00                 	db	0
  2022  007E63  42                 	db	66	;'B'
  2023  007E64  75                 	db	117	;'u'
  2024  007E65  74                 	db	116	;'t'
  2025  007E66  74                 	db	116	;'t'
  2026  007E67  6F                 	db	111	;'o'
  2027  007E68  6E                 	db	110	;'n'
  2028  007E69  32                 	db	50	;'2'
  2029  007E6A  20                 	db	32
  2030  007E6B  50                 	db	80	;'P'
  2031  007E6C  41                 	db	65	;'A'
  2032  007E6D  53                 	db	83	;'S'
  2033  007E6E  53                 	db	83	;'S'
  2034  007E6F  00                 	db	0
  2035  007E70  50                 	db	80	;'P'
  2036  007E71  72                 	db	114	;'r'
  2037  007E72  65                 	db	101	;'e'
  2038  007E73  73                 	db	115	;'s'
  2039  007E74  73                 	db	115	;'s'
  2040  007E75  20                 	db	32
  2041  007E76  42                 	db	66	;'B'
  2042  007E77  75                 	db	117	;'u'
  2043  007E78  74                 	db	116	;'t'
  2044  007E79  74                 	db	116	;'t'
  2045  007E7A  6F                 	db	111	;'o'
  2046  007E7B  6E                 	db	110	;'n'
  2047  007E7C  00                 	db	0
  2048  007E7D                     STR_107:
  2049  007E7D  55                 	db	85	;'U'
  2050  007E7E  53                 	db	83	;'S'
  2051  007E7F  42                 	db	66	;'B'
  2052  007E80  20                 	db	32
  2053  007E81  48                 	db	72	;'H'
  2054  007E82  61                 	db	97	;'a'
  2055  007E83  6E                 	db	110	;'n'
  2056  007E84  64                 	db	100	;'d'
  2057  007E85  6C                 	db	108	;'l'
  2058  007E86  65                 	db	101	;'e'
  2059  007E87  72                 	db	114	;'r'
  2060  007E88  00                 	db	0
  2061  007E89                     STR_84:
  2062  007E89  4F                 	db	79	;'O'
  2063  007E8A  6E                 	db	110	;'n'
  2064  007E8B  20                 	db	32
  2065  007E8C  50                 	db	80	;'P'
  2066  007E8D  6F                 	db	111	;'o'
  2067  007E8E  72                 	db	114	;'r'
  2068  007E8F  74                 	db	116	;'t'
  2069  007E90  20                 	db	32
  2070  007E91  23                 	db	35
  2071  007E92  3A                 	db	58	;':'
  2072  007E93  20                 	db	32
  2073  007E94  00                 	db	0
  2074  007E95                     STR_74:
  2075  007E95  52                 	db	82	;'R'
  2076  007E96  58                 	db	88	;'X'
  2077  007E97  20                 	db	32
  2078  007E98  50                 	db	80	;'P'
  2079  007E99  75                 	db	117	;'u'
  2080  007E9A  6D                 	db	109	;'m'
  2081  007E9B  70                 	db	112	;'p'
  2082  007E9C  20                 	db	32
  2083  007E9D  4F                 	db	79	;'O'
  2084  007E9E  46                 	db	70	;'F'
  2085  007E9F  46                 	db	70	;'F'
  2086  007EA0  00                 	db	0
  2087  007EA1                     STR_79:
  2088  007EA1  72                 	db	114	;'r'
  2089  007EA2  61                 	db	97	;'a'
  2090  007EA3  64                 	db	100	;'d'
  2091  007EA4  69                 	db	105	;'i'
  2092  007EA5  6F                 	db	111	;'o'
  2093  007EA6  5F                 	db	95	;'_'
  2094  007EA7  74                 	db	116	;'t'
  2095  007EA8  78                 	db	120	;'x'
  2096  007EA9  5F                 	db	95	;'_'
  2097  007EAA  6F                 	db	111	;'o'
  2098  007EAB  6B                 	db	107	;'k'
  2099  007EAC  00                 	db	0
  2100  007EAD                     STR_29:
  2101  007EAD  73                 	db	115	;'s'
  2102  007EAE  79                 	db	121	;'y'
  2103  007EAF  73                 	db	115	;'s'
  2104  007EB0  20                 	db	32
  2105  007EB1  67                 	db	103	;'g'
  2106  007EB2  65                 	db	101	;'e'
  2107  007EB3  74                 	db	116	;'t'
  2108  007EB4  20                 	db	32
  2109  007EB5  76                 	db	118	;'v'
  2110  007EB6  65                 	db	101	;'e'
  2111  007EB7  72                 	db	114	;'r'
  2112  007EB8  00                 	db	0
  2113  007EB9  41                 	db	65	;'A'
  2114  007EBA  70                 	db	112	;'p'
  2115  007EBB  72                 	db	114	;'r'
  2116  007EBC  20                 	db	32
  2117  007EBD  32                 	db	50	;'2'
  2118  007EBE  31                 	db	49	;'1'
  2119  007EBF  20                 	db	32
  2120  007EC0  32                 	db	50	;'2'
  2121  007EC1  30                 	db	48	;'0'
  2122  007EC2  31                 	db	49	;'1'
  2123  007EC3  36                 	db	54	;'6'
  2124  007EC4  00                 	db	0
  2125  007EC5  42                 	db	66	;'B'
  2126  007EC6  75                 	db	117	;'u'
  2127  007EC7  74                 	db	116	;'t'
  2128  007EC8  74                 	db	116	;'t'
  2129  007EC9  6F                 	db	111	;'o'
  2130  007ECA  6E                 	db	110	;'n'
  2131  007ECB  20                 	db	32
  2132  007ECC  46                 	db	70	;'F'
  2133  007ECD  41                 	db	65	;'A'
  2134  007ECE  49                 	db	73	;'I'
  2135  007ECF  4C                 	db	76	;'L'
  2136  007ED0  00                 	db	0
  2137  007ED1                     STR_71:
  2138  007ED1  72                 	db	114	;'r'
  2139  007ED2  61                 	db	97	;'a'
  2140  007ED3  64                 	db	100	;'d'
  2141  007ED4  69                 	db	105	;'i'
  2142  007ED5  6F                 	db	111	;'o'
  2143  007ED6  20                 	db	32
  2144  007ED7  74                 	db	116	;'t'
  2145  007ED8  78                 	db	120	;'x'
  2146  007ED9  3A                 	db	58	;':'
  2147  007EDA  20                 	db	32
  2148  007EDB  00                 	db	0
  2149  007EDC                     STR_72:
  2150  007EDC  72                 	db	114	;'r'
  2151  007EDD  61                 	db	97	;'a'
  2152  007EDE  64                 	db	100	;'d'
  2153  007EDF  69                 	db	105	;'i'
  2154  007EE0  6F                 	db	111	;'o'
  2155  007EE1  20                 	db	32
  2156  007EE2  72                 	db	114	;'r'
  2157  007EE3  78                 	db	120	;'x'
  2158  007EE4  20                 	db	32
  2159  007EE5  30                 	db	48	;'0'
  2160  007EE6  00                 	db	0
  2161  007EE7                     STR_75:
  2162  007EE7  52                 	db	82	;'R'
  2163  007EE8  58                 	db	88	;'X'
  2164  007EE9  20                 	db	32
  2165  007EEA  50                 	db	80	;'P'
  2166  007EEB  75                 	db	117	;'u'
  2167  007EEC  6D                 	db	109	;'m'
  2168  007EED  70                 	db	112	;'p'
  2169  007EEE  20                 	db	32
  2170  007EEF  4F                 	db	79	;'O'
  2171  007EF0  4E                 	db	78	;'N'
  2172  007EF1  00                 	db	0
  2173  007EF2  43                 	db	67	;'C'
  2174  007EF3  6F                 	db	111	;'o'
  2175  007EF4  6D                 	db	109	;'m'
  2176  007EF5  6D                 	db	109	;'m'
  2177  007EF6  20                 	db	32
  2178  007EF7  54                 	db	84	;'T'
  2179  007EF8  65                 	db	101	;'e'
  2180  007EF9  73                 	db	115	;'s'
  2181  007EFA  74                 	db	116	;'t'
  2182  007EFB  3A                 	db	58	;':'
  2183  007EFC  00                 	db	0
  2184  007EFD                     STR_88:
  2185  007EFD  72                 	db	114	;'r'
  2186  007EFE  61                 	db	97	;'a'
  2187  007EFF  64                 	db	100	;'d'
  2188  007F00  69                 	db	105	;'i'
  2189  007F01  6F                 	db	111	;'o'
  2190  007F02  20                 	db	32
  2191  007F03  74                 	db	116	;'t'
  2192  007F04  78                 	db	120	;'x'
  2193  007F05  20                 	db	32
  2194  007F06  00                 	db	0
  2195  007F07                     STR_23:
  2196  007F07  4D                 	db	77	;'M'
  2197  007F08  4F                 	db	79	;'O'
  2198  007F09  54                 	db	84	;'T'
  2199  007F0A  45                 	db	69	;'E'
  2200  007F0B  20                 	db	32
  2201  007F0C  4D                 	db	77	;'M'
  2202  007F0D  6F                 	db	111	;'o'
  2203  007F0E  64                 	db	100	;'d'
  2204  007F0F  65                 	db	101	;'e'
  2205  007F10  00                 	db	0
  2206  007F11                     STR_67:
  2207  007F11  6D                 	db	109	;'m'
  2208  007F12  61                 	db	97	;'a'
  2209  007F13  63                 	db	99	;'c'
  2210  007F14  20                 	db	32
  2211  007F15  70                 	db	112	;'p'
  2212  007F16  61                 	db	97	;'a'
  2213  007F17  75                 	db	117	;'u'
  2214  007F18  73                 	db	115	;'s'
  2215  007F19  65                 	db	101	;'e'
  2216  007F1A  00                 	db	0
  2217  007F1B                     STR_50:
  2218  007F1B  73                 	db	115	;'s'
  2219  007F1C  65                 	db	101	;'e'
  2220  007F1D  74                 	db	116	;'t'
  2221  007F1E  20                 	db	32
  2222  007F1F  70                 	db	112	;'p'
  2223  007F20  72                 	db	114	;'r'
  2224  007F21  6C                 	db	108	;'l'
  2225  007F22  65                 	db	101	;'e'
  2226  007F23  6E                 	db	110	;'n'
  2227  007F24  00                 	db	0
  2228  007F25                     STR_44:
  2229  007F25  73                 	db	115	;'s'
  2230  007F26  65                 	db	101	;'e'
  2231  007F27  74                 	db	116	;'t'
  2232  007F28  20                 	db	32
  2233  007F29  61                 	db	97	;'a'
  2234  007F2A  66                 	db	102	;'f'
  2235  007F2B  63                 	db	99	;'c'
  2236  007F2C  62                 	db	98	;'b'
  2237  007F2D  77                 	db	119	;'w'
  2238  007F2E  00                 	db	0
  2239  007F2F  4C                 	db	76	;'L'
  2240  007F30  45                 	db	69	;'E'
  2241  007F31  44                 	db	68	;'D'
  2242  007F32  20                 	db	32
  2243  007F33  54                 	db	84	;'T'
  2244  007F34  65                 	db	101	;'e'
  2245  007F35  73                 	db	115	;'s'
  2246  007F36  74                 	db	116	;'t'
  2247  007F37  3A                 	db	58	;':'
  2248  007F38  00                 	db	0
  2249  007F39                     STR_105:
  2250  007F39  43                 	db	67	;'C'
  2251  007F3A  44                 	db	68	;'D'
  2252  007F3B  43                 	db	67	;'C'
  2253  007F3C  20                 	db	32
  2254  007F3D  4D                 	db	77	;'M'
  2255  007F3E  6F                 	db	111	;'o'
  2256  007F3F  64                 	db	100	;'d'
  2257  007F40  65                 	db	101	;'e'
  2258  007F41  00                 	db	0
  2259  007F42                     STR_82:
  2260  007F42  53                 	db	83	;'S'
  2261  007F43  75                 	db	117	;'u'
  2262  007F44  63                 	db	99	;'c'
  2263  007F45  63                 	db	99	;'c'
  2264  007F46  65                 	db	101	;'e'
  2265  007F47  73                 	db	115	;'s'
  2266  007F48  73                 	db	115	;'s'
  2267  007F49  21                 	db	33
  2268  007F4A  00                 	db	0
  2269  007F4B                     STR_31:
  2270  007F4B  52                 	db	82	;'R'
  2271  007F4C  58                 	db	88	;'X'
  2272  007F4D  20                 	db	32
  2273  007F4E  52                 	db	82	;'R'
  2274  007F4F  45                 	db	69	;'E'
  2275  007F50  53                 	db	83	;'S'
  2276  007F51  45                 	db	69	;'E'
  2277  007F52  54                 	db	84	;'T'
  2278  007F53  00                 	db	0
  2279  007F54                     STR_32:
  2280  007F54  54                 	db	84	;'T'
  2281  007F55  58                 	db	88	;'X'
  2282  007F56  20                 	db	32
  2283  007F57  52                 	db	82	;'R'
  2284  007F58  45                 	db	69	;'E'
  2285  007F59  53                 	db	83	;'S'
  2286  007F5A  45                 	db	69	;'E'
  2287  007F5B  54                 	db	84	;'T'
  2288  007F5C  00                 	db	0
  2289  007F5D                     STR_62:
  2290  007F5D  73                 	db	115	;'s'
  2291  007F5E  65                 	db	101	;'e'
  2292  007F5F  74                 	db	116	;'t'
  2293  007F60  20                 	db	32
  2294  007F61  73                 	db	115	;'s'
  2295  007F62  79                 	db	121	;'y'
  2296  007F63  6E                 	db	110	;'n'
  2297  007F64  63                 	db	99	;'c'
  2298  007F65  00                 	db	0
  2299  007F66  6D                 	db	109	;'m'
  2300  007F67  61                 	db	97	;'a'
  2301  007F68  63                 	db	99	;'c'
  2302  007F69  20                 	db	32
  2303  007F6A  73                 	db	115	;'s'
  2304  007F6B  61                 	db	97	;'a'
  2305  007F6C  76                 	db	118	;'v'
  2306  007F6D  65                 	db	101	;'e'
  2307  007F6E  00                 	db	0
  2308  007F6F                     STR_24:
  2309  007F6F  53                 	db	83	;'S'
  2310  007F70  74                 	db	116	;'t'
  2311  007F71  61                 	db	97	;'a'
  2312  007F72  72                 	db	114	;'r'
  2313  007F73  74                 	db	116	;'t'
  2314  007F74  69                 	db	105	;'i'
  2315  007F75  6E                 	db	110	;'n'
  2316  007F76  67                 	db	103	;'g'
  2317  007F77  00                 	db	0
  2318  007F78                     STR_47:
  2319  007F78  73                 	db	115	;'s'
  2320  007F79  65                 	db	101	;'e'
  2321  007F7A  74                 	db	116	;'t'
  2322  007F7B  20                 	db	32
  2323  007F7C  66                 	db	102	;'f'
  2324  007F7D  64                 	db	100	;'d'
  2325  007F7E  65                 	db	101	;'e'
  2326  007F7F  76                 	db	118	;'v'
  2327  007F80  00                 	db	0
  2328  007F81  4D                 	db	77	;'M'
  2329  007F82  6F                 	db	111	;'o'
  2330  007F83  54                 	db	84	;'T'
  2331  007F84  65                 	db	101	;'e'
  2332  007F85  20                 	db	32
  2333  007F86  76                 	db	118	;'v'
  2334  007F87  20                 	db	32
  2335  007F88  2E                 	db	46
  2336  007F89  00                 	db	0
  2337  007F8A  30                 	db	48	;'0'
  2338  007F8B  33                 	db	51	;'3'
  2339  007F8C  3A                 	db	58	;':'
  2340  007F8D  32                 	db	50	;'2'
  2341  007F8E  30                 	db	48	;'0'
  2342  007F8F  3A                 	db	58	;':'
  2343  007F90  32                 	db	50	;'2'
  2344  007F91  32                 	db	50	;'2'
  2345  007F92  00                 	db	0
  2346  007F93  52                 	db	82	;'R'
  2347  007F94  46                 	db	70	;'F'
  2348  007F95  20                 	db	32
  2349  007F96  54                 	db	84	;'T'
  2350  007F97  65                 	db	101	;'e'
  2351  007F98  73                 	db	115	;'s'
  2352  007F99  74                 	db	116	;'t'
  2353  007F9A  3A                 	db	58	;':'
  2354  007F9B  00                 	db	0
  2355  007F9C  41                 	db	65	;'A'
  2356  007F9D  44                 	db	68	;'D'
  2357  007F9E  43                 	db	67	;'C'
  2358  007F9F  20                 	db	32
  2359  007FA0  54                 	db	84	;'T'
  2360  007FA1  65                 	db	101	;'e'
  2361  007FA2  73                 	db	115	;'s'
  2362  007FA3  74                 	db	116	;'t'
  2363  007FA4  00                 	db	0
  2364  007FA5                     STR_106:
  2365  007FA5  43                 	db	67	;'C'
  2366  007FA6  6F                 	db	111	;'o'
  2367  007FA7  6D                 	db	109	;'m'
  2368  007FA8  6D                 	db	109	;'m'
  2369  007FA9  61                 	db	97	;'a'
  2370  007FAA  6E                 	db	110	;'n'
  2371  007FAB  64                 	db	100	;'d'
  2372  007FAC  00                 	db	0
  2373  007FAD                     STR_53:
  2374  007FAD  73                 	db	115	;'s'
  2375  007FAE  65                 	db	101	;'e'
  2376  007FAF  74                 	db	116	;'t'
  2377  007FB0  20                 	db	32
  2378  007FB1  63                 	db	99	;'c'
  2379  007FB2  72                 	db	114	;'r'
  2380  007FB3  63                 	db	99	;'c'
  2381  007FB4  00                 	db	0
  2382  007FB5                     STR_35:
  2383  007FB5  73                 	db	115	;'s'
  2384  007FB6  65                 	db	101	;'e'
  2385  007FB7  74                 	db	116	;'t'
  2386  007FB8  20                 	db	32
  2387  007FB9  6D                 	db	109	;'m'
  2388  007FBA  6F                 	db	111	;'o'
  2389  007FBB  64                 	db	100	;'d'
  2390  007FBC  00                 	db	0
  2391  007FBD                     STR_38:
  2392  007FBD  73                 	db	115	;'s'
  2393  007FBE  65                 	db	101	;'e'
  2394  007FBF  74                 	db	116	;'t'
  2395  007FC0  20                 	db	32
  2396  007FC1  70                 	db	112	;'p'
  2397  007FC2  77                 	db	119	;'w'
  2398  007FC3  72                 	db	114	;'r'
  2399  007FC4  00                 	db	0
  2400  007FC5                     STR_59:
  2401  007FC5  73                 	db	115	;'s'
  2402  007FC6  65                 	db	101	;'e'
  2403  007FC7  74                 	db	116	;'t'
  2404  007FC8  20                 	db	32
  2405  007FC9  77                 	db	119	;'w'
  2406  007FCA  64                 	db	100	;'d'
  2407  007FCB  74                 	db	116	;'t'
  2408  007FCC  00                 	db	0
  2409  007FCD  54                 	db	84	;'T'
  2410  007FCE  65                 	db	101	;'e'
  2411  007FCF  6D                 	db	109	;'m'
  2412  007FD0  70                 	db	112	;'p'
  2413  007FD1  20                 	db	32
  2414  007FD2  20                 	db	32
  2415  007FD3  3D                 	db	61	;'='
  2416  007FD4  00                 	db	0
  2417  007FD5  4C                 	db	76	;'L'
  2418  007FD6  69                 	db	105	;'i'
  2419  007FD7  67                 	db	103	;'g'
  2420  007FD8  68                 	db	104	;'h'
  2421  007FD9  74                 	db	116	;'t'
  2422  007FDA  20                 	db	32
  2423  007FDB  3D                 	db	61	;'='
  2424  007FDC  00                 	db	0
  2425  007FDD                     STR_41:
  2426  007FDD  73                 	db	115	;'s'
  2427  007FDE  65                 	db	101	;'e'
  2428  007FDF  74                 	db	116	;'t'
  2429  007FE0  20                 	db	32
  2430  007FE1  73                 	db	115	;'s'
  2431  007FE2  66                 	db	102	;'f'
  2432  007FE3  00                 	db	0
  2433  007FE4                     STR_56:
  2434  007FE4  73                 	db	115	;'s'
  2435  007FE5  65                 	db	101	;'e'
  2436  007FE6  74                 	db	116	;'t'
  2437  007FE7  20                 	db	32
  2438  007FE8  63                 	db	99	;'c'
  2439  007FE9  72                 	db	114	;'r'
  2440  007FEA  00                 	db	0
  2441  007FEB                     STR_65:
  2442  007FEB  73                 	db	115	;'s'
  2443  007FEC  65                 	db	101	;'e'
  2444  007FED  74                 	db	116	;'t'
  2445  007FEE  20                 	db	32
  2446  007FEF  62                 	db	98	;'b'
  2447  007FF0  77                 	db	119	;'w'
  2448  007FF1  00                 	db	0
  2449  007FF2                     STR_76:
  2450  007FF2  20                 	db	32
  2451  007FF3  25                 	db	37
  2452  007FF4  64                 	db	100	;'d'
  2453  007FF5  63                 	db	99	;'c'
  2454  007FF6  56                 	db	86	;'V'
  2455  007FF7  00                 	db	0
  2456  007FF8                     STR_33:
  2457  007FF8  52                 	db	82	;'R'
  2458  007FF9  4E                 	db	78	;'N'
  2459  007FFA  00                 	db	0
  2460  007FFB                     STR_87:
  2461  007FFB  43                 	db	67	;'C'
  2462  007FFC  00                 	db	0
  2463  007FFD                     STR_21:
  2464  007FFD  7A                 	db	122	;'z'
  2465  007FFE  00                 	db	0
  2466  0000                     
  2467                           ; #config settings
  2468  007FFF  00                 	db	0	; dummy byte at the end
  2469  0000                     
  2470                           	psect	cinit
  2471  0047D2                     __pcinit:
  2472                           	opt stack 0
  2473  0047D2                     start_initialization:
  2474                           	opt stack 0
  2475  0047D2                     __initialization:
  2476                           	opt stack 0
  2477                           
  2478                           ; Clear objects allocated to BANK2 (128 bytes)
  2479  0047D2  EE02  F000         	lfsr	0,__pbssBANK2
  2480  0047D6  0E80               	movlw	128
  2481  0047D8                     clear_0:
  2482  0047D8  6AEE               	clrf	postinc0,c
  2483  0047DA  06E8               	decf	wreg,f,c
  2484  0047DC  E1FD               	bnz	clear_0
  2485                           
  2486                           ; Clear objects allocated to BANK1 (253 bytes)
  2487  0047DE  EE01  F000         	lfsr	0,__pbssBANK1
  2488  0047E2  0EFD               	movlw	253
  2489  0047E4                     clear_1:
  2490  0047E4  6AEE               	clrf	postinc0,c
  2491  0047E6  06E8               	decf	wreg,f,c
  2492  0047E8  E1FD               	bnz	clear_1
  2493                           
  2494                           ; Clear objects allocated to BANK0 (5 bytes)
  2495  0047EA  0100               	movlb	0
  2496  0047EC  6BF8               	clrf	(__pbssBANK0+4)& (0+255),b
  2497  0047EE  6BF7               	clrf	(__pbssBANK0+3)& (0+255),b
  2498  0047F0  6BF6               	clrf	(__pbssBANK0+2)& (0+255),b
  2499  0047F2  6BF5               	clrf	(__pbssBANK0+1)& (0+255),b
  2500  0047F4  6BF4               	clrf	__pbssBANK0& (0+255),b
  2501                           
  2502                           ; Clear objects allocated to COMRAM (45 bytes)
  2503  0047F6  EE00  F001         	lfsr	0,__pbssCOMRAM
  2504  0047FA  0E2D               	movlw	45
  2505  0047FC                     clear_2:
  2506  0047FC  6AEE               	clrf	postinc0,c
  2507  0047FE  06E8               	decf	wreg,f,c
  2508  004800  E1FD               	bnz	clear_2
  2509                           
  2510                           ; Initialize objects allocated to BANK1 (2 bytes)
  2511                           ; load TBLPTR registers with __pidataBANK1
  2512  004802  0EFA               	movlw	low __pidataBANK1
  2513  004804  6EF6               	movwf	tblptrl,c
  2514  004806  0E3A               	movlw	high __pidataBANK1
  2515  004808  6EF7               	movwf	tblptrh,c
  2516  00480A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2517  00480C  6EF8               	movwf	tblptru,c
  2518  00480E  0009               	tblrd		*+	;fetch initializer
  2519  004810  CFF5 F1FD          	movff	tablat,__pdataBANK1
  2520  004814  0009               	tblrd		*+	;fetch initializer
  2521  004816  CFF5 F1FE          	movff	tablat,__pdataBANK1+1
  2522                           
  2523                           ; Initialize objects allocated to BANK0 (2 bytes)
  2524                           ; load TBLPTR registers with __pidataBANK0
  2525  00481A  0E04               	movlw	low __pidataBANK0
  2526  00481C  6EF6               	movwf	tblptrl,c
  2527  00481E  0E10               	movlw	high __pidataBANK0
  2528  004820  6EF7               	movwf	tblptrh,c
  2529  004822  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2530  004824  6EF8               	movwf	tblptru,c
  2531  004826  0009               	tblrd		*+	;fetch initializer
  2532  004828  CFF5 F0F9          	movff	tablat,__pdataBANK0
  2533  00482C  0009               	tblrd		*+	;fetch initializer
  2534  00482E  CFF5 F0FA          	movff	tablat,__pdataBANK0+1
  2535  004832                     end_of_initialization:
  2536                           	opt stack 0
  2537  004832                     __end_of__initialization:
  2538                           	opt stack 0
  2539  004832  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2540  004834  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2541  004836  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2542  004838  6EF8               	movwf	tblptru,c
  2543  00483A  0100               	movlb	0
  2544  00483C  EF89  F029         	goto	_main	;jump to C main() function
  2545                           tblptru	equ	0xFF8
  2546                           tblptrh	equ	0xFF7
  2547                           tblptrl	equ	0xFF6
  2548                           tablat	equ	0xFF5
  2549                           postinc0	equ	0xFEE
  2550                           wreg	equ	0xFE8
  2551                           
  2552                           	psect	bssCOMRAM
  2553  000001                     __pbssCOMRAM:
  2554                           	opt stack 0
  2555  000001                     _outPipes:
  2556                           	opt stack 0
  2557  000001                     	ds	8
  2558  000009                     _inPipes:
  2559                           	opt stack 0
  2560  000009                     	ds	6
  2561  00000F                     _pBDTEntryIn:
  2562                           	opt stack 0
  2563  00000F                     	ds	6
  2564  000015                     _pBDTEntryEP0OutCurrent:
  2565                           	opt stack 0
  2566  000015                     	ds	2
  2567  000017                     _pBDTEntryEP0OutNext:
  2568                           	opt stack 0
  2569  000017                     	ds	2
  2570  000019                     _LastRS232Out:
  2571                           	opt stack 0
  2572  000019                     	ds	1
  2573  00001A                     _NextUSBOut:
  2574                           	opt stack 0
  2575  00001A                     	ds	1
  2576  00001B                     _RS232_Out_Data_Rdy:
  2577                           	opt stack 0
  2578  00001B                     	ds	1
  2579  00001C                     _RS232cp:
  2580                           	opt stack 0
  2581  00001C                     	ds	1
  2582  00001D                     _USBDeferStatusStagePacket:
  2583                           	opt stack 0
  2584  00001D                     	ds	1
  2585  00001E                     _USBStatusStageTimeoutCounter:
  2586                           	opt stack 0
  2587  00001E                     	ds	1
  2588  00001F                     _cdc_trf_state:
  2589                           	opt stack 0
  2590  00001F                     	ds	1
  2591  000020                     _controlTransferState:
  2592                           	opt stack 0
  2593  000020                     	ds	1
  2594  000021                     _endpoint_number:
  2595                           	opt stack 0
  2596  000021                     	ds	1
  2597  000022                     _eusartRxCount:
  2598                           	opt stack 0
  2599  000022                     	ds	1
  2600  000023                     _eusartTxBufferRemaining:
  2601                           	opt stack 0
  2602  000023                     	ds	1
  2603  000024                     _eusartTxHead:
  2604                           	opt stack 0
  2605  000024                     	ds	1
  2606  000025                     _eusartTxTail:
  2607                           	opt stack 0
  2608  000025                     	ds	1
  2609  000026                     _modemBufferIndex:
  2610                           	opt stack 0
  2611  000026                     	ds	1
  2612  000027                     _runningState:
  2613                           	opt stack 0
  2614  000027                     	ds	1
  2615  000028                     _rxByteFlag:
  2616                           	opt stack 0
  2617  000028                     	ds	1
  2618  000029                     _secTicker:
  2619                           	opt stack 0
  2620  000029                     	ds	1
  2621  00002A                     _shortPacketStatus:
  2622                           	opt stack 0
  2623  00002A                     	ds	1
  2624  00002B                     moteJoiningProcess@pkt_cnt:
  2625                           	opt stack 0
  2626  00002B                     	ds	1
  2627  00002C                     _USBActiveConfiguration:
  2628                           	opt stack 0
  2629  00002C                     	ds	1
  2630  00002D                     _USTATcopy:
  2631                           	opt stack 0
  2632  00002D                     	ds	1
  2633                           tblptru	equ	0xFF8
  2634                           tblptrh	equ	0xFF7
  2635                           tblptrl	equ	0xFF6
  2636                           tablat	equ	0xFF5
  2637                           postinc0	equ	0xFEE
  2638                           wreg	equ	0xFE8
  2639                           
  2640                           	psect	bssBANK0
  2641  0000F4                     __pbssBANK0:
  2642                           	opt stack 0
  2643  0000F4                     _USBDeviceState:
  2644                           	opt stack 0
  2645  0000F4                     	ds	1
  2646  0000F5                     _appTimer:
  2647                           	opt stack 0
  2648  0000F5                     	ds	1
  2649  0000F6                     _cdc_rx_len:
  2650                           	opt stack 0
  2651  0000F6                     	ds	1
  2652  0000F7                     _cdc_tx_len:
  2653                           	opt stack 0
  2654  0000F7                     	ds	1
  2655  0000F8                     _randomPortNum:
  2656                           	opt stack 0
  2657  0000F8                     	ds	1
  2658                           tblptru	equ	0xFF8
  2659                           tblptrh	equ	0xFF7
  2660                           tblptrl	equ	0xFF6
  2661                           tablat	equ	0xFF5
  2662                           postinc0	equ	0xFEE
  2663                           wreg	equ	0xFE8
  2664                           
  2665                           	psect	dataBANK0
  2666  0000F9                     __pdataBANK0:
  2667                           	opt stack 0
  2668  0000F9                     _moteState:
  2669                           	opt stack 0
  2670  0000F9                     	ds	1
  2671  0000FA                     moteJoiningProcess@float_val:
  2672                           	opt stack 0
  2673  0000FA                     	ds	1
  2674                           tblptru	equ	0xFF8
  2675                           tblptrh	equ	0xFF7
  2676                           tblptrl	equ	0xFF6
  2677                           tablat	equ	0xFF5
  2678                           postinc0	equ	0xFEE
  2679                           wreg	equ	0xFE8
  2680                           
  2681                           	psect	bssBANK1
  2682  000100                     __pbssBANK1:
  2683                           	opt stack 0
  2684  000100                     _responseId:
  2685                           	opt stack 0
  2686  000100                     	ds	16
  2687  000110                     _responseData:
  2688                           	opt stack 0
  2689  000110                     	ds	8
  2690  000118                     _pBDTEntryOut:
  2691                           	opt stack 0
  2692  000118                     	ds	6
  2693  00011E                     service_pushbutton@PB_Timer:
  2694                           	opt stack 0
  2695  00011E                     	ds	4
  2696  000122                     _ep_data_in:
  2697                           	opt stack 0
  2698  000122                     	ds	3
  2699  000125                     _ep_data_out:
  2700                           	opt stack 0
  2701  000125                     	ds	3
  2702  000128                     _pCDCDst:
  2703                           	opt stack 0
  2704  000128                     	ds	3
  2705  00012B                     _pCDCSrc:
  2706                           	opt stack 0
  2707  00012B                     	ds	3
  2708  00012E                     _responsePortNum:
  2709                           	opt stack 0
  2710  00012E                     	ds	3
  2711  000131                     _CDCDataInHandle:
  2712                           	opt stack 0
  2713  000131                     	ds	2
  2714  000133                     _CDCDataOutHandle:
  2715                           	opt stack 0
  2716  000133                     	ds	2
  2717  000135                     _light:
  2718                           	opt stack 0
  2719  000135                     	ds	2
  2720  000137                     _pDst:
  2721                           	opt stack 0
  2722  000137                     	ds	2
  2723  000139                     _temperature:
  2724                           	opt stack 0
  2725  000139                     	ds	2
  2726  00013B                     _timer1ReloadVal:
  2727                           	opt stack 0
  2728  00013B                     	ds	2
  2729  00013D                     _timerMinTickCount:
  2730                           	opt stack 0
  2731  00013D                     	ds	2
  2732  00013F                     _timerMsTickCount:
  2733                           	opt stack 0
  2734  00013F                     	ds	2
  2735  000141                     moteJoiningProcess@mode:
  2736                           	opt stack 0
  2737  000141                     	ds	2
  2738  000143                     moteJoiningProcess@skip_count:
  2739                           	opt stack 0
  2740  000143                     	ds	2
  2741  000145                     _BothEP0OutUOWNsSet:
  2742                           	opt stack 0
  2743  000145                     	ds	1
  2744  000146                     _RemoteWakeup:
  2745                           	opt stack 0
  2746  000146                     	ds	1
  2747  000147                     _USBBusIsSuspended:
  2748                           	opt stack 0
  2749  000147                     	ds	1
  2750  000148                     _USBDeferINDataStagePackets:
  2751                           	opt stack 0
  2752  000148                     	ds	1
  2753  000149                     _USBDeferOUTDataStagePackets:
  2754                           	opt stack 0
  2755  000149                     	ds	1
  2756  00014A                     _USBStatusStageEnabledFlag1:
  2757                           	opt stack 0
  2758  00014A                     	ds	1
  2759  00014B                     _USBStatusStageEnabledFlag2:
  2760                           	opt stack 0
  2761  00014B                     	ds	1
  2762  00014C                     _activeState:
  2763                           	opt stack 0
  2764  00014C                     	ds	1
  2765  00014D                     _cdc_mem_type:
  2766                           	opt stack 0
  2767  00014D                     	ds	1
  2768  00014E                     _eusartRxHead:
  2769                           	opt stack 0
  2770  00014E                     	ds	1
  2771  00014F                     _eusartRxTail:
  2772                           	opt stack 0
  2773  00014F                     	ds	1
  2774  000150                     _m10SecTicker:
  2775                           	opt stack 0
  2776  000150                     	ds	1
  2777  000151                     _operationType:
  2778                           	opt stack 0
  2779  000151                     	ds	1
  2780  000152                     _sleepTicker:
  2781                           	opt stack 0
  2782  000152                     	ds	1
  2783  000153                     _usbState:
  2784                           	opt stack 0
  2785  000153                     	ds	1
  2786  000154                     moteJoiningProcess@pending_confirm:
  2787                           	opt stack 0
  2788  000154                     	ds	1
  2789  000155                     service_pushbutton@Release_Timer:
  2790                           	opt stack 0
  2791  000155                     	ds	1
  2792  000156                     _USB_Buffer:
  2793                           	opt stack 0
  2794  000156                     	ds	64
  2795  000196                     _modemResonseBuffer:
  2796                           	opt stack 0
  2797  000196                     	ds	64
  2798  0001D6                     _dataBuffer:
  2799                           	opt stack 0
  2800  0001D6                     	ds	12
  2801  0001E2                     _cdc_notice:
  2802                           	opt stack 0
  2803  0001E2                     	ds	10
  2804  0001EC                     _dummy_encapsulated_cmd_response:
  2805                           	opt stack 0
  2806  0001EC                     	ds	8
  2807  0001F4                     _line_coding:
  2808                           	opt stack 0
  2809  0001F4                     	ds	7
  2810  0001FB                     _USBAlternateInterface:
  2811                           	opt stack 0
  2812  0001FB                     	ds	2
  2813                           tblptru	equ	0xFF8
  2814                           tblptrh	equ	0xFF7
  2815                           tblptrl	equ	0xFF6
  2816                           tablat	equ	0xFF5
  2817                           postinc0	equ	0xFEE
  2818                           wreg	equ	0xFE8
  2819                           
  2820                           	psect	dataBANK1
  2821  0001FD                     __pdataBANK1:
  2822                           	opt stack 0
  2823  0001FD                     _selectedFont:
  2824                           	opt stack 0
  2825  0001FD                     	ds	2
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           postinc0	equ	0xFEE
  2831                           wreg	equ	0xFE8
  2832                           
  2833                           	psect	bssBANK2
  2834  000200                     __pbssBANK2:
  2835                           	opt stack 0
  2836  000200                     _eusartRxBuffer:
  2837                           	opt stack 0
  2838  000200                     	ds	64
  2839  000240                     _eusartTxBuffer:
  2840                           	opt stack 0
  2841  000240                     	ds	64
  2842                           tblptru	equ	0xFF8
  2843                           tblptrh	equ	0xFF7
  2844                           tblptrl	equ	0xFF6
  2845                           tablat	equ	0xFF5
  2846                           postinc0	equ	0xFEE
  2847                           wreg	equ	0xFE8
  2848                           
  2849                           	psect	cstackBANK2
  2850  000280                     __pcstackBANK2:
  2851                           	opt stack 0
  2852  000280                     moteHandler@gotoSleep:
  2853                           	opt stack 0
  2854                           
  2855                           ; 1 bytes @ 0x0
  2856  000280                     	ds	1
  2857  000281                     moteHandler@gotoNextState:
  2858                           	opt stack 0
  2859                           
  2860                           ; 1 bytes @ 0x1
  2861  000281                     	ds	1
  2862  000282                     moteHandler@Traw:
  2863                           	opt stack 0
  2864                           
  2865                           ; 2 bytes @ 0x2
  2866  000282                     	ds	2
  2867  000284                     moteHandler@s2Button:
  2868                           	opt stack 0
  2869                           
  2870                           ; 1 bytes @ 0x4
  2871  000284                     	ds	1
  2872  000285                     moteHandler@buttonPress:
  2873                           	opt stack 0
  2874                           
  2875                           ; 1 bytes @ 0x5
  2876  000285                     	ds	1
  2877  000286                     moteHandler@i:
  2878                           	opt stack 0
  2879                           
  2880                           ; 1 bytes @ 0x6
  2881  000286                     	ds	1
  2882  000287                     moteHandler@i_1501:
  2883                           	opt stack 0
  2884                           
  2885                           ; 1 bytes @ 0x7
  2886  000287                     	ds	1
  2887  000288                     moteHandler@readMessage:
  2888                           	opt stack 0
  2889                           
  2890                           ; 1 bytes @ 0x8
  2891  000288                     	ds	1
  2892                           tblptru	equ	0xFF8
  2893                           tblptrh	equ	0xFF7
  2894                           tblptrl	equ	0xFF6
  2895                           tablat	equ	0xFF5
  2896                           postinc0	equ	0xFEE
  2897                           wreg	equ	0xFE8
  2898                           
  2899                           	psect	cstackBANK0
  2900  000060                     __pcstackBANK0:
  2901                           	opt stack 0
  2902  000060                     ??_TMR1_Initialize:
  2903  000060                     ??_isdigit:
  2904  000060                     ?_ADC_GetConversion:
  2905                           	opt stack 0
  2906  000060                     ?_strncmp:
  2907                           	opt stack 0
  2908  000060                     ?_strcmp:
  2909                           	opt stack 0
  2910  000060                     ?_USBTransferOnePacket:
  2911                           	opt stack 0
  2912  000060                     ?___wmul:
  2913                           	opt stack 0
  2914  000060                     ?___lwdiv:
  2915                           	opt stack 0
  2916  000060                     ?___xxtofl:
  2917                           	opt stack 0
  2918  000060                     nibble2int@c:
  2919                           	opt stack 0
  2920  000060                     MOTEapp_handlerState@state:
  2921                           	opt stack 0
  2922  000060                     MOTEapp_TimerBasedTask@timerTask:
  2923                           	opt stack 0
  2924  000060                     hexToStr@character:
  2925                           	opt stack 0
  2926  000060                     moteApp_clearBuffers@counter:
  2927                           	opt stack 0
  2928  000060                     USBapp_handlerState@state:
  2929                           	opt stack 0
  2930  000060                     service_pushbutton@bs:
  2931                           	opt stack 0
  2932  000060                     EUSART_Read@readValue:
  2933                           	opt stack 0
  2934  000060                     EUSART_Write@txData:
  2935                           	opt stack 0
  2936  000060                     EUSART_FlushBuffer@index:
  2937                           	opt stack 0
  2938  000060                     SPI_Exchange8bit@data:
  2939                           	opt stack 0
  2940  000060                     DATAEE_WriteByte@bData:
  2941                           	opt stack 0
  2942  000060                     DATAEE_ReadByte@bAdd:
  2943                           	opt stack 0
  2944  000060                     TMR2_ReadTimer@readVal:
  2945                           	opt stack 0
  2946  000060                     USBTransferOnePacket@dir:
  2947                           	opt stack 0
  2948  000060                     ___lbdiv@divisor:
  2949                           	opt stack 0
  2950  000060                     ___lbmod@divisor:
  2951                           	opt stack 0
  2952  000060                     moteApp_delayms@length:
  2953                           	opt stack 0
  2954  000060                     oled_setFont@font:
  2955                           	opt stack 0
  2956  000060                     putUSBUSART@data:
  2957                           	opt stack 0
  2958  000060                     ___wmul@multiplier:
  2959                           	opt stack 0
  2960  000060                     ___lwdiv@dividend:
  2961                           	opt stack 0
  2962  000060                     memset@p1:
  2963                           	opt stack 0
  2964  000060                     strcmp@s1:
  2965                           	opt stack 0
  2966  000060                     strncmp@s1:
  2967                           	opt stack 0
  2968  000060                     ___xxtofl@val:
  2969                           	opt stack 0
  2970                           
  2971                           ; 4 bytes @ 0x0
  2972  000060                     	ds	1
  2973  000061                     MOTEapp_getModemResponse@terminatorReceived:
  2974                           	opt stack 0
  2975  000061                     moteApp_clearBuffers@counter_1749:
  2976                           	opt stack 0
  2977  000061                     oled_writeCommand@command:
  2978                           	opt stack 0
  2979  000061                     oled_writeData@data:
  2980                           	opt stack 0
  2981  000061                     DATAEE_WriteByte@bAdd:
  2982                           	opt stack 0
  2983  000061                     _isdigit$6040:
  2984                           	opt stack 0
  2985  000061                     ___lbdiv@dividend:
  2986                           	opt stack 0
  2987  000061                     ___lbmod@dividend:
  2988                           	opt stack 0
  2989  000061                     sendCommand@string:
  2990                           	opt stack 0
  2991  000061                     sendDataCommand@string:
  2992                           	opt stack 0
  2993  000061                     USBTransferOnePacket@data:
  2994                           	opt stack 0
  2995                           
  2996                           ; 2 bytes @ 0x1
  2997  000061                     	ds	1
  2998  000062                     ??_moteApp_delayms:
  2999  000062                     ??_ADC_GetConversion:
  3000  000062                     ??_oled_devInit:
  3001  000062                     MOTEapp_getModemResponse@bufferByte:
  3002                           	opt stack 0
  3003  000062                     moteApp_clearBuffers@counter_1750:
  3004                           	opt stack 0
  3005  000062                     Set_Page_Address@address:
  3006                           	opt stack 0
  3007  000062                     Set_Column_Address@address:
  3008                           	opt stack 0
  3009  000062                     oled_setDisplay@displayType:
  3010                           	opt stack 0
  3011  000062                     oled_displayOff@state:
  3012                           	opt stack 0
  3013  000062                     DATAEE_WriteByte@GIEBitValue:
  3014                           	opt stack 0
  3015  000062                     putUSBUSART@length:
  3016                           	opt stack 0
  3017  000062                     isdigit@c:
  3018                           	opt stack 0
  3019  000062                     ___lbdiv@counter:
  3020                           	opt stack 0
  3021  000062                     ___lbmod@counter:
  3022                           	opt stack 0
  3023  000062                     ___wmul@multiplicand:
  3024                           	opt stack 0
  3025  000062                     ___lwdiv@divisor:
  3026                           	opt stack 0
  3027  000062                     memset@c:
  3028                           	opt stack 0
  3029  000062                     strcmp@s2:
  3030                           	opt stack 0
  3031  000062                     strncmp@s2:
  3032                           	opt stack 0
  3033                           
  3034                           ; 2 bytes @ 0x2
  3035  000062                     	ds	1
  3036  000063                     oled_putChar@station_dot:
  3037                           	opt stack 0
  3038  000063                     USBTransferOnePacket@len:
  3039                           	opt stack 0
  3040  000063                     ___lbdiv@quotient:
  3041                           	opt stack 0
  3042  000063                     ___lbmod@rem:
  3043                           	opt stack 0
  3044  000063                     sendDataCommand@appData:
  3045                           	opt stack 0
  3046  000063                     moteApp_delayms@counter:
  3047                           	opt stack 0
  3048                           
  3049                           ; 2 bytes @ 0x3
  3050  000063                     	ds	1
  3051  000064                     ??_strcmp:
  3052  000064                     ??___xxtofl:
  3053  000064                     moteApp_add8bToDataBuffer@bufferLocation:
  3054                           	opt stack 0
  3055  000064                     oled_putChar@start_page:
  3056                           	opt stack 0
  3057  000064                     ADC_GetConversion@channel:
  3058                           	opt stack 0
  3059  000064                     USBTransferOnePacket@ep:
  3060                           	opt stack 0
  3061  000064                     ___lwdiv@counter:
  3062                           	opt stack 0
  3063  000064                     ___wmul@product:
  3064                           	opt stack 0
  3065  000064                     memset@n:
  3066                           	opt stack 0
  3067  000064                     strncmp@len:
  3068                           	opt stack 0
  3069                           
  3070                           ; 2 bytes @ 0x4
  3071  000064                     	ds	1
  3072  000065                     ??_oled_putChar:
  3073  000065                     sendDataCommand@dataLength:
  3074                           	opt stack 0
  3075  000065                     moteApp_add8bToDataBuffer@number:
  3076                           	opt stack 0
  3077  000065                     modemResync@escapeCounter:
  3078                           	opt stack 0
  3079  000065                     USBTransferOnePacket@handle:
  3080                           	opt stack 0
  3081  000065                     ___lwdiv@quotient:
  3082                           	opt stack 0
  3083                           
  3084                           ; 2 bytes @ 0x5
  3085  000065                     	ds	1
  3086  000066                     ??_strncmp:
  3087  000066                     ??_sendDataCommand:
  3088  000066                     strcmp@t0:
  3089                           	opt stack 0
  3090  000066                     memset@p:
  3091                           	opt stack 0
  3092                           
  3093                           ; 2 bytes @ 0x6
  3094  000066                     	ds	1
  3095  000067                     ?___lwmod:
  3096                           	opt stack 0
  3097  000067                     modemResync@escapeEvent:
  3098                           	opt stack 0
  3099  000067                     sendDataCommand@byteCount:
  3100                           	opt stack 0
  3101  000067                     ADC_TempConversion@tempRaw:
  3102                           	opt stack 0
  3103  000067                     strcmp@t2:
  3104                           	opt stack 0
  3105  000067                     getsUSBUSART@buffer:
  3106                           	opt stack 0
  3107  000067                     _CDCTxService$5711:
  3108                           	opt stack 0
  3109  000067                     ___lwmod@dividend:
  3110                           	opt stack 0
  3111                           
  3112                           ; 2 bytes @ 0x7
  3113  000067                     	ds	1
  3114  000068                     sendDataCommand@byteCount_1682:
  3115                           	opt stack 0
  3116  000068                     ADC_TempConversion@temp:
  3117                           	opt stack 0
  3118  000068                     USBDeviceInit@i:
  3119                           	opt stack 0
  3120  000068                     strcmp@t1:
  3121                           	opt stack 0
  3122  000068                     ___xxtofl@sign:
  3123                           	opt stack 0
  3124                           
  3125                           ; 1 bytes @ 0x8
  3126  000068                     	ds	1
  3127  000069                     getsUSBUSART@len:
  3128                           	opt stack 0
  3129  000069                     CDCTxService@i:
  3130                           	opt stack 0
  3131  000069                     ___xxtofl@exp:
  3132                           	opt stack 0
  3133  000069                     ___lwmod@divisor:
  3134                           	opt stack 0
  3135                           
  3136                           ; 2 bytes @ 0x9
  3137  000069                     	ds	1
  3138  00006A                     CDCTxService@byte_to_send:
  3139                           	opt stack 0
  3140  00006A                     ___xxtofl@arg:
  3141                           	opt stack 0
  3142                           
  3143                           ; 4 bytes @ 0xA
  3144  00006A                     	ds	1
  3145  00006B                     oled_putChar@k:
  3146                           	opt stack 0
  3147  00006B                     ___lwmod@counter:
  3148                           	opt stack 0
  3149  00006B                     _getsUSBUSART$5663:
  3150                           	opt stack 0
  3151                           
  3152                           ; 2 bytes @ 0xB
  3153  00006B                     	ds	1
  3154  00006C                     ?_sprintf:
  3155                           	opt stack 0
  3156  00006C                     oled_putChar@index:
  3157                           	opt stack 0
  3158  00006C                     moteApp_add16bToDataBuffer@number:
  3159                           	opt stack 0
  3160  00006C                     sprintf@f:
  3161                           	opt stack 0
  3162                           
  3163                           ; 2 bytes @ 0xC
  3164  00006C                     	ds	1
  3165  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  3166  00006D                     oled_clearRow@page:
  3167                           	opt stack 0
  3168  00006D                     oled_putString@string:
  3169                           	opt stack 0
  3170                           
  3171                           ; 2 bytes @ 0xD
  3172  00006D                     	ds	1
  3173  00006E                     ?___flmul:
  3174                           	opt stack 0
  3175  00006E                     moteApp_add16bToDataBuffer@bufferLocation:
  3176                           	opt stack 0
  3177  00006E                     oled_clearRow@index:
  3178                           	opt stack 0
  3179  00006E                     ___flmul@b:
  3180                           	opt stack 0
  3181                           
  3182                           ; 4 bytes @ 0xE
  3183  00006E                     	ds	1
  3184  00006F                     oled_putString@station_dot:
  3185                           	opt stack 0
  3186                           
  3187                           ; 1 bytes @ 0xF
  3188  00006F                     	ds	1
  3189  000070                     oled_putString@start_page:
  3190                           	opt stack 0
  3191                           
  3192                           ; 1 bytes @ 0x10
  3193  000070                     	ds	1
  3194  000071                     oled_putString@index:
  3195                           	opt stack 0
  3196                           
  3197                           ; 1 bytes @ 0x11
  3198  000071                     	ds	1
  3199  000072                     oled_putUint8@station_dot:
  3200                           	opt stack 0
  3201  000072                     oled_putUint16@number:
  3202                           	opt stack 0
  3203  000072                     ___flmul@a:
  3204                           	opt stack 0
  3205                           
  3206                           ; 4 bytes @ 0x12
  3207  000072                     	ds	1
  3208  000073                     oled_putUint8@start_page:
  3209                           	opt stack 0
  3210                           
  3211                           ; 1 bytes @ 0x13
  3212  000073                     	ds	1
  3213  000074                     oled_putUint8@number:
  3214                           	opt stack 0
  3215  000074                     oled_putUint16@station_dot:
  3216                           	opt stack 0
  3217                           
  3218                           ; 1 bytes @ 0x14
  3219  000074                     	ds	1
  3220  000075                     oled_putUint16@start_page:
  3221                           	opt stack 0
  3222  000075                     oled_putUint8@numData:
  3223                           	opt stack 0
  3224                           
  3225                           ; 6 bytes @ 0x15
  3226  000075                     	ds	1
  3227  000076                     ??___flmul:
  3228  000076                     oled_putUint16@numData:
  3229                           	opt stack 0
  3230                           
  3231                           ; 6 bytes @ 0x16
  3232  000076                     	ds	2
  3233  000078                     ??_sprintf:
  3234                           
  3235                           ; 1 bytes @ 0x18
  3236  000078                     	ds	2
  3237  00007A                     ___flmul@sign:
  3238                           	opt stack 0
  3239                           
  3240                           ; 1 bytes @ 0x1A
  3241  00007A                     	ds	1
  3242  00007B                     ___flmul@aexp:
  3243                           	opt stack 0
  3244                           
  3245                           ; 1 bytes @ 0x1B
  3246  00007B                     	ds	1
  3247  00007C                     moteRunningProcess@selectButton:
  3248                           	opt stack 0
  3249  00007C                     sprintf@idx:
  3250                           	opt stack 0
  3251  00007C                     ___flmul@bexp:
  3252                           	opt stack 0
  3253                           
  3254                           ; 1 bytes @ 0x1C
  3255  00007C                     	ds	1
  3256  00007D                     moteRunningProcess@messageReady:
  3257                           	opt stack 0
  3258  00007D                     sprintf@ap:
  3259                           	opt stack 0
  3260  00007D                     ___flmul@grs:
  3261                           	opt stack 0
  3262                           
  3263                           ; 4 bytes @ 0x1D
  3264  00007D                     	ds	1
  3265  00007E                     moteRunningProcess@sleepEvent:
  3266                           	opt stack 0
  3267  00007E                     sprintf@prec:
  3268                           	opt stack 0
  3269                           
  3270                           ; 1 bytes @ 0x1E
  3271  00007E                     	ds	1
  3272  00007F                     ??_moteRunningProcess:
  3273  00007F                     sprintf@val:
  3274                           	opt stack 0
  3275                           
  3276                           ; 2 bytes @ 0x1F
  3277  00007F                     	ds	2
  3278  000081                     sprintf@flag:
  3279                           	opt stack 0
  3280  000081                     moteRunningProcess@Traw:
  3281                           	opt stack 0
  3282  000081                     ___flmul@prod:
  3283                           	opt stack 0
  3284                           
  3285                           ; 4 bytes @ 0x21
  3286  000081                     	ds	1
  3287  000082                     sprintf@width:
  3288                           	opt stack 0
  3289                           
  3290                           ; 2 bytes @ 0x22
  3291  000082                     	ds	1
  3292  000083                     moteRunningProcess@i:
  3293                           	opt stack 0
  3294                           
  3295                           ; 1 bytes @ 0x23
  3296  000083                     	ds	1
  3297  000084                     moteRunningProcess@i_1624:
  3298                           	opt stack 0
  3299  000084                     sprintf@sp:
  3300                           	opt stack 0
  3301                           
  3302                           ; 1 bytes @ 0x24
  3303  000084                     	ds	1
  3304  000085                     sprintf@c:
  3305                           	opt stack 0
  3306  000085                     ___flmul@temp:
  3307                           	opt stack 0
  3308                           
  3309                           ; 2 bytes @ 0x25
  3310  000085                     	ds	2
  3311  000087                     ?___fldiv:
  3312                           	opt stack 0
  3313  000087                     ___fldiv@b:
  3314                           	opt stack 0
  3315                           
  3316                           ; 4 bytes @ 0x27
  3317  000087                     	ds	4
  3318  00008B                     ___fldiv@a:
  3319                           	opt stack 0
  3320                           
  3321                           ; 4 bytes @ 0x2B
  3322  00008B                     	ds	4
  3323  00008F                     ??___fldiv:
  3324                           
  3325                           ; 1 bytes @ 0x2F
  3326  00008F                     	ds	4
  3327  000093                     ___fldiv@sign:
  3328                           	opt stack 0
  3329                           
  3330                           ; 1 bytes @ 0x33
  3331  000093                     	ds	1
  3332  000094                     ___fldiv@rem:
  3333                           	opt stack 0
  3334                           
  3335                           ; 4 bytes @ 0x34
  3336  000094                     	ds	4
  3337  000098                     ___fldiv@new_exp:
  3338                           	opt stack 0
  3339                           
  3340                           ; 2 bytes @ 0x38
  3341  000098                     	ds	2
  3342  00009A                     ___fldiv@grs:
  3343                           	opt stack 0
  3344                           
  3345                           ; 4 bytes @ 0x3A
  3346  00009A                     	ds	4
  3347  00009E                     ___fldiv@bexp:
  3348                           	opt stack 0
  3349                           
  3350                           ; 1 bytes @ 0x3E
  3351  00009E                     	ds	1
  3352  00009F                     ___fldiv@aexp:
  3353                           	opt stack 0
  3354                           
  3355                           ; 1 bytes @ 0x3F
  3356  00009F                     	ds	1
  3357  0000A0                     ?___fltol:
  3358                           	opt stack 0
  3359  0000A0                     ___fltol@f1:
  3360                           	opt stack 0
  3361                           
  3362                           ; 4 bytes @ 0x40
  3363  0000A0                     	ds	4
  3364  0000A4                     ??___fltol:
  3365                           
  3366                           ; 1 bytes @ 0x44
  3367  0000A4                     	ds	4
  3368  0000A8                     ___fltol@sign1:
  3369                           	opt stack 0
  3370                           
  3371                           ; 1 bytes @ 0x48
  3372  0000A8                     	ds	1
  3373  0000A9                     ___fltol@exp1:
  3374                           	opt stack 0
  3375                           
  3376                           ; 1 bytes @ 0x49
  3377  0000A9                     	ds	1
  3378  0000AA                     moteJoiningProcess@switchEvent:
  3379                           	opt stack 0
  3380                           
  3381                           ; 1 bytes @ 0x4A
  3382  0000AA                     	ds	1
  3383  0000AB                     ??_moteJoiningProcess:
  3384                           
  3385                           ; 1 bytes @ 0x4B
  3386  0000AB                     	ds	7
  3387  0000B2                     moteJoiningProcess@buf:
  3388                           	opt stack 0
  3389                           
  3390                           ; 50 bytes @ 0x52
  3391  0000B2                     	ds	50
  3392  0000E4                     _moteJoiningProcess$6551:
  3393                           	opt stack 0
  3394                           
  3395                           ; 4 bytes @ 0x84
  3396  0000E4                     	ds	4
  3397  0000E8                     moteJoiningProcess@old_float:
  3398                           	opt stack 0
  3399                           
  3400                           ; 2 bytes @ 0x88
  3401  0000E8                     	ds	2
  3402  0000EA                     moteJoiningProcess@ana:
  3403                           	opt stack 0
  3404                           
  3405                           ; 2 bytes @ 0x8A
  3406  0000EA                     	ds	2
  3407  0000EC                     moteJoiningProcess@cV:
  3408                           	opt stack 0
  3409                           
  3410                           ; 2 bytes @ 0x8C
  3411  0000EC                     	ds	2
  3412  0000EE                     moteJoiningProcess@joiningComplete:
  3413                           	opt stack 0
  3414                           
  3415                           ; 1 bytes @ 0x8E
  3416  0000EE                     	ds	1
  3417  0000EF                     moteJoiningProcess@batt:
  3418                           	opt stack 0
  3419                           
  3420                           ; 2 bytes @ 0x8F
  3421  0000EF                     	ds	2
  3422  0000F1                     moteJoiningProcess@messageReady:
  3423                           	opt stack 0
  3424                           
  3425                           ; 1 bytes @ 0x91
  3426  0000F1                     	ds	1
  3427  0000F2                     ??_moteHandler:
  3428                           
  3429                           ; 1 bytes @ 0x92
  3430  0000F2                     	ds	2
  3431  0000F4                     tblptru	equ	0xFF8
  3432                           tblptrh	equ	0xFF7
  3433                           tblptrl	equ	0xFF6
  3434                           tablat	equ	0xFF5
  3435                           postinc0	equ	0xFEE
  3436                           wreg	equ	0xFE8
  3437                           
  3438                           ; 1 bytes @ 0x94
  3439                           
  3440                           	psect	cstackCOMRAM
  3441  00002E                     __pcstackCOMRAM:
  3442                           	opt stack 0
  3443  00002E                     ??_USBStdGetDscHandler:
  3444  00002E                     ?i2_USBTransferOnePacket:
  3445                           	opt stack 0
  3446  00002E                     ?___lldiv:
  3447                           	opt stack 0
  3448  00002E                     USBConfigureEndpoint@direction:
  3449                           	opt stack 0
  3450  00002E                     USBCtrlTrfTxService@byteToSend:
  3451                           	opt stack 0
  3452  00002E                     i2USBTransferOnePacket@dir:
  3453                           	opt stack 0
  3454  00002E                     USBStdGetStatusHandler@p:
  3455                           	opt stack 0
  3456  00002E                     i2memset@p1:
  3457                           	opt stack 0
  3458  00002E                     ___lldiv@dividend:
  3459                           	opt stack 0
  3460                           
  3461                           ; 4 bytes @ 0x0
  3462  00002E                     	ds	1
  3463  00002F                     ??_USBConfigureEndpoint:
  3464  00002F                     i2USBTransferOnePacket@data:
  3465                           	opt stack 0
  3466                           
  3467                           ; 2 bytes @ 0x1
  3468  00002F                     	ds	1
  3469  000030                     i2memset@c:
  3470                           	opt stack 0
  3471                           
  3472                           ; 2 bytes @ 0x2
  3473  000030                     	ds	1
  3474  000031                     i2USBTransferOnePacket@len:
  3475                           	opt stack 0
  3476                           
  3477                           ; 1 bytes @ 0x3
  3478  000031                     	ds	1
  3479  000032                     i2USBTransferOnePacket@ep:
  3480                           	opt stack 0
  3481  000032                     i2memset@n:
  3482                           	opt stack 0
  3483  000032                     ___lldiv@divisor:
  3484                           	opt stack 0
  3485                           
  3486                           ; 4 bytes @ 0x4
  3487  000032                     	ds	1
  3488  000033                     USBConfigureEndpoint@EPNum:
  3489                           	opt stack 0
  3490  000033                     i2USBTransferOnePacket@handle:
  3491                           	opt stack 0
  3492                           
  3493                           ; 2 bytes @ 0x5
  3494  000033                     	ds	1
  3495  000034                     USBConfigureEndpoint@handle:
  3496                           	opt stack 0
  3497  000034                     i2memset@p:
  3498                           	opt stack 0
  3499                           
  3500                           ; 2 bytes @ 0x6
  3501  000034                     	ds	2
  3502  000036                     USBEnableEndpoint@options:
  3503                           	opt stack 0
  3504  000036                     i2USBDeviceInit@i:
  3505                           	opt stack 0
  3506  000036                     ___lldiv@quotient:
  3507                           	opt stack 0
  3508                           
  3509                           ; 4 bytes @ 0x8
  3510  000036                     	ds	1
  3511  000037                     USBEnableEndpoint@p:
  3512                           	opt stack 0
  3513                           
  3514                           ; 2 bytes @ 0x9
  3515  000037                     	ds	2
  3516  000039                     USBEnableEndpoint@ep:
  3517                           	opt stack 0
  3518                           
  3519                           ; 1 bytes @ 0xB
  3520  000039                     	ds	1
  3521  00003A                     USBapp_CdcEmulatorInitialize@i:
  3522                           	opt stack 0
  3523  00003A                     ___lldiv@counter:
  3524                           	opt stack 0
  3525                           
  3526                           ; 1 bytes @ 0xC
  3527  00003A                     	ds	1
  3528  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3529                           	opt stack 0
  3530  00003B                     USART_mySetLineCodingHandler@dwBaud:
  3531                           	opt stack 0
  3532                           
  3533                           ; 4 bytes @ 0xD
  3534  00003B                     	ds	2
  3535  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3536                           	opt stack 0
  3537                           
  3538                           ; 2 bytes @ 0xF
  3539  00003D                     	ds	2
  3540  00003F                     USBCtrlTrfRxService@i:
  3541                           	opt stack 0
  3542  00003F                     USBCtrlTrfInHandler@lastDTS:
  3543                           	opt stack 0
  3544  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3545                           	opt stack 0
  3546                           
  3547                           ; 2 bytes @ 0x11
  3548  00003F                     	ds	1
  3549  000040                     USBCtrlTrfRxService@byteToRead:
  3550                           	opt stack 0
  3551                           
  3552                           ; 1 bytes @ 0x12
  3553  000040                     	ds	1
  3554  000041                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3555                           
  3556                           ; 1 bytes @ 0x13
  3557  000041                     	ds	2
  3558  000043                     ??_USBStdFeatureReqHandler:
  3559  000043                     USBStdSetCfgHandler@i:
  3560                           	opt stack 0
  3561                           
  3562                           ; 1 bytes @ 0x15
  3563  000043                     	ds	2
  3564  000045                     USBStdFeatureReqHandler@pUEP:
  3565                           	opt stack 0
  3566                           
  3567                           ; 2 bytes @ 0x17
  3568  000045                     	ds	2
  3569  000047                     USBStdFeatureReqHandler@current_ep_data:
  3570                           	opt stack 0
  3571                           
  3572                           ; 1 bytes @ 0x19
  3573  000047                     	ds	1
  3574  000048                     USBStdFeatureReqHandler@p:
  3575                           	opt stack 0
  3576                           
  3577                           ; 2 bytes @ 0x1A
  3578  000048                     	ds	2
  3579  00004A                     ??_USBCtrlEPService:
  3580  00004A                     
  3581                           ; 1 bytes @ 0x1C
  3582  00004A                     	ds	2
  3583  00004C                     USBCtrlEPService@setup_cnt:
  3584                           	opt stack 0
  3585                           
  3586                           ; 1 bytes @ 0x1E
  3587  00004C                     	ds	1
  3588  00004D                     USBDeviceTasks@i:
  3589                           	opt stack 0
  3590                           
  3591                           ; 1 bytes @ 0x1F
  3592  00004D                     	ds	1
  3593  00004E                     ??_INTERRUPT_InterruptManager:
  3594                           
  3595                           ; 1 bytes @ 0x20
  3596  00004E                     	ds	12
  3597                           tblptru	equ	0xFF8
  3598                           tblptrh	equ	0xFF7
  3599                           tblptrl	equ	0xFF6
  3600                           tablat	equ	0xFF5
  3601                           postinc0	equ	0xFEE
  3602                           wreg	equ	0xFE8
  3603                           
  3604 ;;
  3605 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3606 ;;
  3607 ;; *************** function _main *****************
  3608 ;; Defined at:
  3609 ;;		line 54 in file "main.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : F/1
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3623 ;;      Params:         0       0       0       0       0       0       0       0       0
  3624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3626 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3627 ;;Total ram usage:        0 bytes
  3628 ;; Hardware stack levels required when called:   21
  3629 ;; This function calls:
  3630 ;;		_DATAEE_ReadByte
  3631 ;;		_MOTEapp_handlerState
  3632 ;;		_SYSTEM_Initialize
  3633 ;;		_USBDeviceAttach
  3634 ;;		_USBDeviceInit
  3635 ;;		_USBapp_Handler
  3636 ;;		_USBapp_handlerState
  3637 ;;		_modemResync
  3638 ;;		_moteApp_delayms
  3639 ;;		_moteHandler
  3640 ;;		_oled_clear
  3641 ;;		_oled_init
  3642 ;;		_oled_putString
  3643 ;; This function is called by:
  3644 ;;		Startup code after reset
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text0
  3649  005312                     __ptext0:
  3650                           	opt stack 0
  3651  005312                     _main:
  3652                           	opt stack 10
  3653                           
  3654                           ;main.c: 57: SYSTEM_Initialize();
  3655                           
  3656                           ;incstack = 0
  3657  005312  EC30  F01E         	call	_SYSTEM_Initialize	;wreg free
  3658                           
  3659                           ; BSR set to: 1
  3660                           ;main.c: 65: WDTCONbits.SWDTEN = 1;
  3661  005316  80D1               	bsf	4049,0,c	;volatile
  3662  005318  0004               	clrwdt		;# 
  3663                           
  3664                           ;main.c: 68: oled_init();
  3665  00531A  EC98  F01E         	call	_oled_init	;wreg free
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;main.c: 69: USBDeviceInit();
  3669  00531E  EC02  F02C         	call	_USBDeviceInit	;wreg free
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;main.c: 71: USBDeviceAttach();
  3673  005322  EC6D  F01F         	call	_USBDeviceAttach	;wreg free
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;main.c: 73: PEIE = 1;
  3677  005326  8CF2               	bsf	intcon,6,c	;volatile
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;main.c: 74: GIE = 1;
  3681  005328  8EF2               	bsf	intcon,7,c	;volatile
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;main.c: 76: moteApp_delayms(300);
  3685  00532A  0E01               	movlw	1
  3686  00532C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3687  00532E  0E2C               	movlw	44
  3688  005330  6F60               	movwf	moteApp_delayms@length& (0+255),b
  3689  005332  EC06  F01F         	call	_moteApp_delayms	;wreg free
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;main.c: 77: modemResync();
  3693  005336  ECE5  F022         	call	_modemResync	;wreg free
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;main.c: 78: moteApp_delayms(300);
  3697  00533A  0E01               	movlw	1
  3698  00533C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3699  00533E  0E2C               	movlw	44
  3700  005340  6F60               	movwf	moteApp_delayms@length& (0+255),b
  3701  005342  EC06  F01F         	call	_moteApp_delayms	;wreg free
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;main.c: 82: powerOnStatus = DATAEE_ReadByte(0x00);
  3705  005346  0E00               	movlw	0
  3706  005348  ECE6  F01D         	call	_DATAEE_ReadByte
  3707                           
  3708                           ;main.c: 92: operationType = USB;
  3709  00534C  0101               	movlb	1	; () banked
  3710  00534E  6B51               	clrf	_operationType& (0+255),b
  3711                           
  3712                           ; BSR set to: 1
  3713                           ;main.c: 93: USBapp_handlerState(USB_STARTUP);
  3714  005350  0E00               	movlw	0
  3715  005352  EC97  F01D         	call	_USBapp_handlerState
  3716                           
  3717                           ;main.c: 95: oled_clear();
  3718  005356  EC24  F01E         	call	_oled_clear	;wreg free
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;main.c: 96: oled_putString("MENCO-LOREX   ",0,0);
  3722  00535A  0EB6               	movlw	low STR_1
  3723  00535C  6F6D               	movwf	oled_putString@string& (0+255),b
  3724  00535E  0E7D               	movlw	high STR_1
  3725  005360  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  3726  005362  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  3727  005364  6B70               	clrf	oled_putString@start_page& (0+255),b
  3728  005366  EC17  F023         	call	_oled_putString	;wreg free
  3729                           
  3730                           ;main.c: 97: oled_putString("   PROTO      ",0,1);
  3731  00536A  0EA7               	movlw	low STR_2
  3732  00536C  0100               	movlb	0	; () banked
  3733  00536E  6F6D               	movwf	oled_putString@string& (0+255),b
  3734  005370  0E7D               	movlw	high STR_2
  3735  005372  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  3736  005374  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  3737  005376  0E01               	movlw	1
  3738  005378  6F70               	movwf	oled_putString@start_page& (0+255),b
  3739  00537A  EC17  F023         	call	_oled_putString	;wreg free
  3740                           
  3741                           ;main.c: 98: oled_putString("   Build 005  ",0,3);
  3742  00537E  0EC5               	movlw	low STR_3
  3743  005380  0100               	movlb	0	; () banked
  3744  005382  6F6D               	movwf	oled_putString@string& (0+255),b
  3745  005384  0E7D               	movlw	high STR_3
  3746  005386  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  3747  005388  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  3748  00538A  0E03               	movlw	3
  3749  00538C  6F70               	movwf	oled_putString@start_page& (0+255),b
  3750  00538E  EC17  F023         	call	_oled_putString	;wreg free
  3751                           
  3752                           ;main.c: 99: moteApp_delayms(700);
  3753  005392  0E02               	movlw	2
  3754  005394  0100               	movlb	0	; () banked
  3755  005396  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  3756  005398  0EBC               	movlw	188
  3757  00539A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  3758  00539C  EC06  F01F         	call	_moteApp_delayms	;wreg free
  3759  0053A0  D012               	goto	l11475
  3760  0053A2                     l52:
  3761  0053A2  D7FF               	goto	l52
  3762  0053A4                     l11461:
  3763                           
  3764                           ; BSR set to: 1
  3765                           ;main.c: 111: USBapp_Handler();
  3766  0053A4  EC96  F024         	call	_USBapp_Handler	;wreg free
  3767                           
  3768                           ;main.c: 113: operationType = MOTE;
  3769  0053A8  0E01               	movlw	1
  3770  0053AA  0101               	movlb	1	; () banked
  3771  0053AC  6F51               	movwf	_operationType& (0+255),b
  3772                           
  3773                           ; BSR set to: 1
  3774                           ;main.c: 114: MOTEapp_handlerState(MOTE_STARTUP);
  3775  0053AE  EC92  F01D         	call	_MOTEapp_handlerState
  3776                           
  3777                           ;main.c: 115: break;
  3778  0053B2  D009               	goto	l11475
  3779  0053B4                     l11467:
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;main.c: 117: if (moteHandler() == MOTE_SWAP)
  3783  0053B4  EC71  F031         	call	_moteHandler	;wreg free
  3784  0053B8  0A04               	xorlw	4
  3785  0053BA  E105               	bnz	l11475
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;main.c: 118: {
  3789                           ;main.c: 120: operationType = USB;
  3790  0053BC  0101               	movlb	1	; () banked
  3791  0053BE  6B51               	clrf	_operationType& (0+255),b
  3792                           
  3793                           ; BSR set to: 1
  3794                           ;main.c: 121: USBapp_handlerState(USB_STARTUP);
  3795  0053C0  0E00               	movlw	0
  3796  0053C2  EC97  F01D         	call	_USBapp_handlerState
  3797  0053C6                     l11475:
  3798  0053C6  0101               	movlb	1	; () banked
  3799  0053C8  5151               	movf	_operationType& (0+255),w,b
  3800                           
  3801                           ; Switch size 1, requested type "speed"
  3802                           ; Number of cases is 2, Range of values is 0 to 1
  3803                           ; switch strategies available:
  3804                           ; Name         Instructions Cycles
  3805                           ; simple_byte            7     4 (average)
  3806                           ;	Chosen strategy is simple_byte
  3807  0053CA  E0EC               	bz	l11461
  3808  0053CC  0A01               	xorlw	1	; case 1
  3809  0053CE  E0F2               	bz	l11467
  3810  0053D0  D7E8               	goto	l52
  3811  0053D2                     __end_of_main:
  3812                           	opt stack 0
  3813                           tblptru	equ	0xFF8
  3814                           tblptrh	equ	0xFF7
  3815                           tblptrl	equ	0xFF6
  3816                           tablat	equ	0xFF5
  3817                           intcon	equ	0xFF2
  3818                           postinc0	equ	0xFEE
  3819                           wreg	equ	0xFE8
  3820                           
  3821 ;; *************** function _moteHandler *****************
  3822 ;; Defined at:
  3823 ;;		line 173 in file "../Includes/Board/MOTEapp.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;		None
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  i               1    7[BANK2 ] unsigned char 
  3828 ;;  i               1    6[BANK2 ] unsigned char 
  3829 ;;  Traw            2    2[BANK2 ] unsigned int 
  3830 ;;  readMessage     1    8[BANK2 ] unsigned char 
  3831 ;;  buttonPress     1    5[BANK2 ] enum E6327
  3832 ;;  s2Button        1    4[BANK2 ] unsigned char 
  3833 ;;  gotoNextStat    1    1[BANK2 ] unsigned char 
  3834 ;;  gotoSleep       1    0[BANK2 ] unsigned char 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      enum E7241
  3837 ;; Registers used:
  3838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/1
  3841 ;;		On exit  : F/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0
  3845 ;;      Locals:         0       0       0       9       0       0       0       0       0
  3846 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3847 ;;      Totals:         0       2       0       9       0       0       0       0       0
  3848 ;;Total ram usage:       11 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:   20
  3851 ;; This function calls:
  3852 ;;		_ADC_GetConversion
  3853 ;;		_ADC_TempConversion
  3854 ;;		_MOTEapp_TimerBasedTask
  3855 ;;		_MOTEapp_getModemResponse
  3856 ;;		_TMRapp_ClearBitFlags
  3857 ;;		_TMRapp_Handler
  3858 ;;		_moteApp_delayms
  3859 ;;		_moteJoiningProcess
  3860 ;;		_moteRunningProcess
  3861 ;;		_oled_clear
  3862 ;;		_oled_putString
  3863 ;;		_service_pushbutton
  3864 ;; This function is called by:
  3865 ;;		_main
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text1
  3870  0062E2                     __ptext1:
  3871                           	opt stack 0
  3872  0062E2                     _moteHandler:
  3873                           	opt stack 10
  3874                           
  3875                           ;MOTEapp.c: 175: bool gotoSleep = 0;
  3876                           
  3877                           ; BSR set to: 1
  3878                           ;incstack = 0
  3879  0062E2  0102               	movlb	2	; () banked
  3880  0062E4  6B80               	clrf	moteHandler@gotoSleep& (0+255),b
  3881                           
  3882                           ;MOTEapp.c: 176: bool gotoNextState = 0;
  3883  0062E6  6B81               	clrf	moteHandler@gotoNextState& (0+255),b
  3884                           
  3885                           ;MOTEapp.c: 177: bool s2Button = 0;
  3886  0062E8  6B84               	clrf	moteHandler@s2Button& (0+255),b
  3887                           
  3888                           ; BSR set to: 2
  3889                           ;MOTEapp.c: 185: if (PORTAbits.RA0)
  3890                           
  3891                           ; BSR set to: 2
  3892  0062EA  A080               	btfss	3968,0,c	;volatile
  3893  0062EC  D003               	goto	l11317
  3894                           
  3895                           ; BSR set to: 2
  3896                           ;MOTEapp.c: 186: moteState = MOTE_SWAP;
  3897  0062EE  0E04               	movlw	4
  3898  0062F0  0100               	movlb	0	; () banked
  3899  0062F2  6FF9               	movwf	_moteState& (0+255),b
  3900  0062F4                     l11317:
  3901                           
  3902                           ;MOTEapp.c: 189: if ( appTimer.mSecTick )
  3903  0062F4  0100               	movlb	0	; () banked
  3904  0062F6  A1F5               	btfss	_appTimer& (0+255),0,b
  3905  0062F8  D008               	goto	l11325
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;MOTEapp.c: 190: {
  3909                           ;MOTEapp.c: 192: TMRapp_ClearBitFlags();
  3910  0062FA  EC86  F01D         	call	_TMRapp_ClearBitFlags	;wreg free
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;MOTEapp.c: 194: TMRapp_Handler();
  3914  0062FE  EC75  F02C         	call	_TMRapp_Handler	;wreg free
  3915                           
  3916                           ;MOTEapp.c: 195: MOTEapp_TimerBasedTask(appTimer);
  3917  006302  0100               	movlb	0	; () banked
  3918  006304  51F5               	movf	_appTimer& (0+255),w,b
  3919  006306  ECFA  F01D         	call	_MOTEapp_TimerBasedTask
  3920  00630A                     l11325:
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;MOTEapp.c: 196: }
  3924                           ;MOTEapp.c: 199: buttonPress = service_pushbutton();
  3925  00630A  EC5F  F022         	call	_service_pushbutton	;wreg free
  3926  00630E  0102               	movlb	2	; () banked
  3927  006310  6F85               	movwf	moteHandler@buttonPress& (0+255),b
  3928                           
  3929                           ;MOTEapp.c: 200: if (buttonPress == ShortPress1)
  3930  006312  0585               	decf	moteHandler@buttonPress& (0+255),w,b
  3931  006314  E104               	bnz	l11331
  3932                           
  3933                           ; BSR set to: 2
  3934                           ;MOTEapp.c: 201: {
  3935                           ;MOTEapp.c: 202: secTicker = 0;
  3936  006316  6A29               	clrf	_secTicker,c
  3937                           
  3938                           ; BSR set to: 2
  3939                           ;MOTEapp.c: 203: gotoNextState = 1;
  3940  006318  0E01               	movlw	1
  3941  00631A  6F81               	movwf	moteHandler@gotoNextState& (0+255),b
  3942                           
  3943                           ;MOTEapp.c: 204: }
  3944  00631C  D006               	goto	l11337
  3945  00631E                     l11331:
  3946                           
  3947                           ; BSR set to: 2
  3948                           ;MOTEapp.c: 205: else if (buttonPress == ShortPress2)
  3949  00631E  0E02               	movlw	2
  3950  006320  1985               	xorwf	moteHandler@buttonPress& (0+255),w,b
  3951  006322  E103               	bnz	l11337
  3952                           
  3953                           ; BSR set to: 2
  3954                           ;MOTEapp.c: 206: {
  3955                           ;MOTEapp.c: 207: secTicker = 0;
  3956  006324  6A29               	clrf	_secTicker,c
  3957                           
  3958                           ; BSR set to: 2
  3959                           ;MOTEapp.c: 208: s2Button = 1;
  3960  006326  0E01               	movlw	1
  3961  006328  6F84               	movwf	moteHandler@s2Button& (0+255),b
  3962  00632A                     l11337:
  3963                           
  3964                           ; BSR set to: 2
  3965                           ;MOTEapp.c: 209: }
  3966                           ;MOTEapp.c: 212: if ( MOTEapp_getModemResponse() )
  3967  00632A  EC46  F021         	call	_MOTEapp_getModemResponse	;wreg free
  3968  00632E  0900               	iorlw	0
  3969  006330  E004               	bz	l330
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;MOTEapp.c: 213: readMessage = 1;
  3973  006332  0E01               	movlw	1
  3974  006334  0102               	movlb	2	; () banked
  3975  006336  6F88               	movwf	moteHandler@readMessage& (0+255),b
  3976  006338  D002               	goto	l11341
  3977  00633A                     l330:
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;MOTEapp.c: 214: else
  3981                           ;MOTEapp.c: 215: readMessage = 0;
  3982  00633A  0102               	movlb	2	; () banked
  3983  00633C  6B88               	clrf	moteHandler@readMessage& (0+255),b
  3984  00633E                     l11341:
  3985                           
  3986                           ; BSR set to: 2
  3987                           ;MOTEapp.c: 218: if ( (runningState == runningUplink) || (runningState == runningSensorM
      +                          enu) )
  3988  00633E  0E06               	movlw	6
  3989  006340  1827               	xorwf	_runningState,w,c
  3990  006342  E003               	bz	l11345
  3991                           
  3992                           ; BSR set to: 2
  3993  006344  0E02               	movlw	2
  3994  006346  1827               	xorwf	_runningState,w,c
  3995  006348  E14D               	bnz	l11381
  3996  00634A                     l11345:
  3997                           
  3998                           ; BSR set to: 2
  3999                           ;MOTEapp.c: 219: {
  4000                           ;MOTEapp.c: 221: if (m10SecTicker >= 5)
  4001  00634A  0E04               	movlw	4
  4002  00634C  0101               	movlb	1	; () banked
  4003  00634E  6550               	cpfsgt	_m10SecTicker& (0+255),b
  4004  006350  D049               	goto	l11381
  4005                           
  4006                           ; BSR set to: 1
  4007                           ;MOTEapp.c: 222: {
  4008                           ;MOTEapp.c: 223: uint16_t Traw = 0;
  4009  006352  0102               	movlb	2	; () banked
  4010  006354  6B82               	clrf	moteHandler@Traw& (0+255),b
  4011  006356  6B83               	clrf	(moteHandler@Traw+1)& (0+255),b
  4012                           
  4013                           ; BSR set to: 2
  4014                           ;MOTEapp.c: 224: moteApp_delayms(10);
  4015  006358  0100               	movlb	0	; () banked
  4016  00635A  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4017  00635C  0E0A               	movlw	10
  4018  00635E  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4019  006360  EC06  F01F         	call	_moteApp_delayms	;wreg free
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;MOTEapp.c: 225: for(uint8_t i = 32; i>0; i--)
  4023  006364  0E20               	movlw	32
  4024  006366  0102               	movlb	2	; () banked
  4025  006368  6F86               	movwf	moteHandler@i& (0+255),b
  4026  00636A                     l11357:
  4027                           
  4028                           ; BSR set to: 2
  4029                           ;MOTEapp.c: 226: {
  4030                           ;MOTEapp.c: 227: light = (light + ADC_GetConversion(Light_channel)) / 2;
  4031  00636A  0E03               	movlw	3
  4032  00636C  EC67  F020         	call	_ADC_GetConversion
  4033  006370  0101               	movlb	1	; () banked
  4034  006372  5135               	movf	_light& (0+255),w,b
  4035  006374  0100               	movlb	0	; () banked
  4036  006376  2760               	addwf	?_ADC_GetConversion& (0+255),f,b
  4037  006378  0101               	movlb	1	; () banked
  4038  00637A  5136               	movf	(_light+1)& (0+255),w,b
  4039  00637C  0100               	movlb	0	; () banked
  4040  00637E  2361               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4041  006380  90D8               	bcf	status,0,c
  4042  006382  3161               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4043  006384  6FF2               	movwf	??_moteHandler& (0+255),b
  4044  006386  3160               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4045  006388  0101               	movlb	1	; () banked
  4046  00638A  6F35               	movwf	_light& (0+255),b
  4047  00638C  C0F2  F136         	movff	??_moteHandler,_light+1
  4048                           
  4049                           ; BSR set to: 1
  4050  006390  0102               	movlb	2	; () banked
  4051  006392  0786               	decf	moteHandler@i& (0+255),f,b
  4052                           
  4053                           ; BSR set to: 2
  4054  006394  5186               	movf	moteHandler@i& (0+255),w,b
  4055  006396  E1E9               	bnz	l11357
  4056                           
  4057                           ; BSR set to: 2
  4058                           ;MOTEapp.c: 228: }
  4059                           ;MOTEapp.c: 229: moteApp_delayms(10);
  4060  006398  0100               	movlb	0	; () banked
  4061  00639A  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4062  00639C  0E0A               	movlw	10
  4063  00639E  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4064  0063A0  EC06  F01F         	call	_moteApp_delayms	;wreg free
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;MOTEapp.c: 230: for(uint8_t i = 32; i>0; i--)
  4068  0063A4  0E20               	movlw	32
  4069  0063A6  0102               	movlb	2	; () banked
  4070  0063A8  6F87               	movwf	moteHandler@i_1501& (0+255),b
  4071  0063AA                     l11371:
  4072                           
  4073                           ; BSR set to: 2
  4074                           ;MOTEapp.c: 231: {
  4075                           ;MOTEapp.c: 232: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  4076  0063AA  0E02               	movlw	2
  4077  0063AC  EC67  F020         	call	_ADC_GetConversion
  4078  0063B0  0102               	movlb	2	; () banked
  4079  0063B2  5182               	movf	moteHandler@Traw& (0+255),w,b
  4080  0063B4  0100               	movlb	0	; () banked
  4081  0063B6  2760               	addwf	?_ADC_GetConversion& (0+255),f,b
  4082  0063B8  0102               	movlb	2	; () banked
  4083  0063BA  5183               	movf	(moteHandler@Traw+1)& (0+255),w,b
  4084  0063BC  0100               	movlb	0	; () banked
  4085  0063BE  2361               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4086  0063C0  90D8               	bcf	status,0,c
  4087  0063C2  3161               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4088  0063C4  6FF2               	movwf	??_moteHandler& (0+255),b
  4089  0063C6  3160               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4090  0063C8  0102               	movlb	2	; () banked
  4091  0063CA  6F82               	movwf	moteHandler@Traw& (0+255),b
  4092  0063CC  C0F2  F283         	movff	??_moteHandler,moteHandler@Traw+1
  4093                           
  4094                           ; BSR set to: 2
  4095  0063D0  0787               	decf	moteHandler@i_1501& (0+255),f,b
  4096                           
  4097                           ; BSR set to: 2
  4098  0063D2  5187               	movf	moteHandler@i_1501& (0+255),w,b
  4099  0063D4  E1EA               	bnz	l11371
  4100                           
  4101                           ; BSR set to: 2
  4102                           ;MOTEapp.c: 233: }
  4103                           ;MOTEapp.c: 234: temperature = ADC_TempConversion(Traw);
  4104  0063D6  5182               	movf	moteHandler@Traw& (0+255),w,b
  4105  0063D8  ECA9  F01E         	call	_ADC_TempConversion
  4106  0063DC  0101               	movlb	1	; () banked
  4107  0063DE  6F39               	movwf	_temperature& (0+255),b
  4108  0063E0  6B3A               	clrf	(_temperature+1)& (0+255),b
  4109                           
  4110                           ; BSR set to: 1
  4111                           ;MOTEapp.c: 235: m10SecTicker = 0;
  4112  0063E2  6B50               	clrf	_m10SecTicker& (0+255),b
  4113  0063E4                     l11381:
  4114                           
  4115                           ;MOTEapp.c: 236: }
  4116                           ;MOTEapp.c: 237: }
  4117                           ;MOTEapp.c: 239: if(secTicker)
  4118  0063E4  5029               	movf	_secTicker,w,c
  4119  0063E6  E063               	bz	l11419
  4120                           
  4121                           ;MOTEapp.c: 240: {
  4122                           ;MOTEapp.c: 241: if (secTicker >= 10)
  4123  0063E8  0E09               	movlw	9
  4124  0063EA  6429               	cpfsgt	_secTicker,c
  4125  0063EC  D060               	goto	l11419
  4126                           
  4127                           ;MOTEapp.c: 242: {
  4128                           ;MOTEapp.c: 243: gotoSleep = 1;
  4129  0063EE  0E01               	movlw	1
  4130  0063F0  0102               	movlb	2	; () banked
  4131  0063F2  6F80               	movwf	moteHandler@gotoSleep& (0+255),b
  4132                           
  4133                           ; BSR set to: 2
  4134                           ;MOTEapp.c: 244: secTicker = 0;
  4135  0063F4  6A29               	clrf	_secTicker,c
  4136  0063F6  D05B               	goto	l11419
  4137  0063F8                     l344:
  4138  0063F8  D7FF               	goto	l344
  4139  0063FA                     l11389:
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;MOTEapp.c: 254: oled_clear();
  4143  0063FA  EC24  F01E         	call	_oled_clear	;wreg free
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;MOTEapp.c: 255: oled_putString("MOTE Mode",1,0);
  4147  0063FE  0E07               	movlw	low STR_23
  4148  006400  6F6D               	movwf	oled_putString@string& (0+255),b
  4149  006402  0E7F               	movlw	high STR_23
  4150  006404  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4151  006406  0E01               	movlw	1
  4152  006408  6F6F               	movwf	oled_putString@station_dot& (0+255),b
  4153  00640A  6B70               	clrf	oled_putString@start_page& (0+255),b
  4154  00640C  EC17  F023         	call	_oled_putString	;wreg free
  4155                           
  4156                           ;MOTEapp.c: 256: oled_putString("Starting",2,1);
  4157  006410  0E6F               	movlw	low STR_24
  4158  006412  0100               	movlb	0	; () banked
  4159  006414  6F6D               	movwf	oled_putString@string& (0+255),b
  4160  006416  0E7F               	movlw	high STR_24
  4161  006418  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4162  00641A  0E02               	movlw	2
  4163  00641C  6F6F               	movwf	oled_putString@station_dot& (0+255),b
  4164  00641E  0E01               	movlw	1
  4165  006420  6F70               	movwf	oled_putString@start_page& (0+255),b
  4166  006422  EC17  F023         	call	_oled_putString	;wreg free
  4167                           
  4168                           ;MOTEapp.c: 257: oled_putString("ReRun PwrTst<S2>",0,3);
  4169  006426  0ED4               	movlw	low STR_25
  4170  006428  0100               	movlb	0	; () banked
  4171  00642A  6F6D               	movwf	oled_putString@string& (0+255),b
  4172  00642C  0E7C               	movlw	high STR_25
  4173  00642E  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4174  006430  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4175  006432  0E03               	movlw	3
  4176  006434  6F70               	movwf	oled_putString@start_page& (0+255),b
  4177  006436  EC17  F023         	call	_oled_putString	;wreg free
  4178                           
  4179                           ;MOTEapp.c: 258: activeState = moteStartup;
  4180  00643A  0101               	movlb	1	; () banked
  4181  00643C  6B4C               	clrf	_activeState& (0+255),b
  4182                           
  4183                           ; BSR set to: 1
  4184                           ;MOTEapp.c: 259: moteState = MOTE_JOINING;
  4185  00643E  0E02               	movlw	2
  4186  006440  D028               	goto	L1
  4187  006442                     l11401:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;MOTEapp.c: 262: if ( moteJoiningProcess(readMessage, s2Button) )
  4191  006442  C284  F0AA         	movff	moteHandler@s2Button,moteJoiningProcess@switchEvent
  4192  006446  0102               	movlb	2	; () banked
  4193  006448  5188               	movf	moteHandler@readMessage& (0+255),w,b
  4194  00644A  EC30  F037         	call	_moteJoiningProcess
  4195  00644E  0900               	iorlw	0
  4196  006450  E038               	bz	l11421
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;MOTEapp.c: 263: {
  4200                           ;MOTEapp.c: 264: oled_clear();
  4201  006452  EC24  F01E         	call	_oled_clear	;wreg free
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;MOTEapp.c: 265: oled_putString("Mobile Mote -App",0,0);
  4205  006456  0E07               	movlw	low STR_26
  4206  006458  6F6D               	movwf	oled_putString@string& (0+255),b
  4207  00645A  0E7D               	movlw	high STR_26
  4208  00645C  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4209  00645E  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4210  006460  6B70               	clrf	oled_putString@start_page& (0+255),b
  4211  006462  EC17  F023         	call	_oled_putString	;wreg free
  4212                           
  4213                           ;MOTEapp.c: 266: oled_putString("Navigate  Select", 0,2);
  4214  006466  0E18               	movlw	low STR_27
  4215  006468  0100               	movlb	0	; () banked
  4216  00646A  6F6D               	movwf	oled_putString@string& (0+255),b
  4217  00646C  0E7D               	movlw	high STR_27
  4218  00646E  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4219  006470  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4220  006472  0E02               	movlw	2
  4221  006474  6F70               	movwf	oled_putString@start_page& (0+255),b
  4222  006476  EC17  F023         	call	_oled_putString	;wreg free
  4223                           
  4224                           ;MOTEapp.c: 267: oled_putString(" (S1)      (S2) ", 0,3);
  4225  00647A  0E90               	movlw	low STR_28
  4226  00647C  0100               	movlb	0	; () banked
  4227  00647E  6F6D               	movwf	oled_putString@string& (0+255),b
  4228  006480  0E7C               	movlw	high STR_28
  4229  006482  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4230  006484  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4231  006486  0E03               	movlw	3
  4232  006488  6F70               	movwf	oled_putString@start_page& (0+255),b
  4233  00648A  EC17  F023         	call	_oled_putString	;wreg free
  4234                           
  4235                           ;MOTEapp.c: 268: runningState = runningEnter;
  4236  00648E  6A27               	clrf	_runningState,c
  4237                           
  4238                           ;MOTEapp.c: 269: moteState = MOTE_RUNNING;
  4239  006490  0E03               	movlw	3
  4240  006492                     L1:
  4241  006492  0100               	movlb	0	; () banked
  4242  006494  6FF9               	movwf	_moteState& (0+255),b
  4243  006496  D015               	goto	l11421
  4244  006498                     l11415:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;MOTEapp.c: 273: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  4248  006498  C284  F07C         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  4249  00649C  C288  F07D         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  4250  0064A0  C280  F07E         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  4251  0064A4  0102               	movlb	2	; () banked
  4252  0064A6  5181               	movf	moteHandler@gotoNextState& (0+255),w,b
  4253  0064A8  EC9D  F030         	call	_moteRunningProcess
  4254                           
  4255                           ;MOTEapp.c: 274: break;
  4256  0064AC  D00A               	goto	l11421
  4257  0064AE                     l11419:
  4258  0064AE  0100               	movlb	0	; () banked
  4259  0064B0  51F9               	movf	_moteState& (0+255),w,b
  4260                           
  4261                           ; Switch size 1, requested type "speed"
  4262                           ; Number of cases is 4, Range of values is 1 to 4
  4263                           ; switch strategies available:
  4264                           ; Name         Instructions Cycles
  4265                           ; simple_byte           13     7 (average)
  4266                           ;	Chosen strategy is simple_byte
  4267  0064B2  0A01               	xorlw	1	; case 1
  4268  0064B4  E0A2               	bz	l11389
  4269  0064B6  0A03               	xorlw	3	; case 2
  4270  0064B8  E0C4               	bz	l11401
  4271  0064BA  0A01               	xorlw	1	; case 3
  4272  0064BC  E0ED               	bz	l11415
  4273  0064BE  0A07               	xorlw	7	; case 4
  4274  0064C0  E19B               	bnz	l344
  4275  0064C2                     l11421:
  4276                           
  4277                           ;MOTEapp.c: 279: return moteState;
  4278  0064C2  0100               	movlb	0	; () banked
  4279  0064C4  51F9               	movf	_moteState& (0+255),w,b
  4280                           
  4281                           ; BSR set to: 0
  4282  0064C6  0012               	return		;funcret
  4283  0064C8                     __end_of_moteHandler:
  4284                           	opt stack 0
  4285                           tblptru	equ	0xFF8
  4286                           tblptrh	equ	0xFF7
  4287                           tblptrl	equ	0xFF6
  4288                           tablat	equ	0xFF5
  4289                           intcon	equ	0xFF2
  4290                           postinc0	equ	0xFEE
  4291                           wreg	equ	0xFE8
  4292                           status	equ	0xFD8
  4293                           
  4294 ;; *************** function _service_pushbutton *****************
  4295 ;; Defined at:
  4296 ;;		line 14 in file "../Includes/Drivers/buttons.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  bs              1    0[BANK0 ] enum E6178
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      enum E6327
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0
  4305 ;; Tracked objects:
  4306 ;;		On entry : F/0
  4307 ;;		On exit  : F/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4310 ;;      Params:         0       0       0       0       0       0       0       0       0
  4311 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4313 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4314 ;;Total ram usage:        1 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:   11
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_moteHandler
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text2
  4325  0044BE                     __ptext2:
  4326                           	opt stack 0
  4327  0044BE                     _service_pushbutton:
  4328                           	opt stack 18
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;buttons.c: 20: if ((PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;incstack = 0
  4335  0044BE  A082               	btfss	3970,0,c	;volatile
  4336  0044C0  D002               	goto	l10583
  4337                           
  4338                           ; BSR set to: 0
  4339  0044C2  B282               	btfsc	3970,1,c	;volatile
  4340  0044C4  D016               	goto	l10591
  4341  0044C6                     l10583:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;buttons.c: 21: {
  4345                           ;buttons.c: 22: ++PB_Timer;
  4346  0044C6  0101               	movlb	1	; () banked
  4347  0044C8  2B1E               	incf	service_pushbutton@PB_Timer& (0+255),f,b
  4348  0044CA  0E00               	movlw	0
  4349  0044CC  231F               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
  4350  0044CE  2320               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
  4351  0044D0  2321               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
  4352                           
  4353                           ;buttons.c: 26: if (PB_Timer == 55)
  4354  0044D2  0E37               	movlw	55
  4355  0044D4  191E               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
  4356  0044D6  111F               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
  4357  0044D8  1120               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
  4358  0044DA  1121               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
  4359  0044DC  E107               	bnz	l776
  4360                           
  4361                           ; BSR set to: 1
  4362                           ;buttons.c: 27: {
  4363                           ;buttons.c: 28: Release_Timer = 0;
  4364  0044DE  6B55               	clrf	service_pushbutton@Release_Timer& (0+255),b
  4365                           
  4366                           ;buttons.c: 30: if (PORTCbits.RC0 == 0)
  4367  0044E0  B082               	btfsc	3970,0,c	;volatile
  4368  0044E2  D002               	goto	l10589
  4369                           
  4370                           ; BSR set to: 1
  4371                           ;buttons.c: 31: {
  4372                           ;buttons.c: 32: bs = ShortPress1;
  4373  0044E4  0E01               	movlw	1
  4374  0044E6  D011               	goto	L2
  4375  0044E8                     l10589:
  4376                           
  4377                           ; BSR set to: 1
  4378                           ;buttons.c: 34: else
  4379                           ;buttons.c: 35: {
  4380                           ;buttons.c: 36: bs = ShortPress2;
  4381  0044E8  0E02               	movlw	2
  4382  0044EA  D00F               	goto	L2
  4383  0044EC                     l776:
  4384                           
  4385                           ; BSR set to: 1
  4386                           ;buttons.c: 39: else
  4387                           ;buttons.c: 40: {
  4388                           ;buttons.c: 41: bs = NoButton;
  4389  0044EC  0100               	movlb	0	; () banked
  4390  0044EE  6B60               	clrf	service_pushbutton@bs& (0+255),b
  4391  0044F0  D00E               	goto	l10599
  4392  0044F2                     l10591:
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;buttons.c: 44: else
  4396                           ;buttons.c: 45: {
  4397                           ;buttons.c: 46: if (Release_Timer == 20)
  4398  0044F2  0E14               	movlw	20
  4399  0044F4  0101               	movlb	1	; () banked
  4400  0044F6  1955               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
  4401  0044F8  E106               	bnz	l10595
  4402                           
  4403                           ; BSR set to: 1
  4404                           ;buttons.c: 47: {
  4405                           ;buttons.c: 48: PB_Timer = 0;
  4406  0044FA  6B1E               	clrf	service_pushbutton@PB_Timer& (0+255),b
  4407  0044FC  6B1F               	clrf	(service_pushbutton@PB_Timer+1)& (0+255),b
  4408  0044FE  6B20               	clrf	(service_pushbutton@PB_Timer+2)& (0+255),b
  4409  004500  6B21               	clrf	(service_pushbutton@PB_Timer+3)& (0+255),b
  4410                           
  4411                           ;buttons.c: 49: Release_Timer = 0;
  4412  004502  6B55               	clrf	service_pushbutton@Release_Timer& (0+255),b
  4413                           
  4414                           ;buttons.c: 50: }
  4415  004504  D001               	goto	l10597
  4416  004506                     l10595:
  4417                           
  4418                           ; BSR set to: 1
  4419                           ;buttons.c: 51: else
  4420                           ;buttons.c: 52: {
  4421                           ;buttons.c: 53: Release_Timer++;
  4422  004506  2B55               	incf	service_pushbutton@Release_Timer& (0+255),f,b
  4423  004508                     l10597:
  4424                           
  4425                           ; BSR set to: 1
  4426                           ;buttons.c: 54: }
  4427                           ;buttons.c: 55: bs = Released;
  4428  004508  0E03               	movlw	3
  4429  00450A                     L2:
  4430  00450A  0100               	movlb	0	; () banked
  4431  00450C  6F60               	movwf	service_pushbutton@bs& (0+255),b
  4432  00450E                     l10599:
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;buttons.c: 56: }
  4436                           ;buttons.c: 58: return bs;
  4437  00450E  5160               	movf	service_pushbutton@bs& (0+255),w,b
  4438                           
  4439                           ; BSR set to: 0
  4440  004510  0012               	return		;funcret
  4441  004512                     __end_of_service_pushbutton:
  4442                           	opt stack 0
  4443                           tblptru	equ	0xFF8
  4444                           tblptrh	equ	0xFF7
  4445                           tblptrl	equ	0xFF6
  4446                           tablat	equ	0xFF5
  4447                           intcon	equ	0xFF2
  4448                           postinc0	equ	0xFEE
  4449                           wreg	equ	0xFE8
  4450                           status	equ	0xFD8
  4451                           
  4452 ;; *************** function _moteRunningProcess *****************
  4453 ;; Defined at:
  4454 ;;		line 741 in file "../Includes/Board/MOTEapp.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  changeStates    1    wreg     unsigned char 
  4457 ;;  selectButton    1   28[BANK0 ] unsigned char 
  4458 ;;  messageReady    1   29[BANK0 ] unsigned char 
  4459 ;;  sleepEvent      1   30[BANK0 ] unsigned char 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  changeStates    1    0[COMRAM] unsigned char 
  4462 ;;  i               1   36[BANK0 ] unsigned char 
  4463 ;;  i               1   35[BANK0 ] unsigned char 
  4464 ;;  Traw            2   33[BANK0 ] unsigned int 
  4465 ;;  readByte        1    0        unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      enum E6570
  4468 ;; Registers used:
  4469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : F/2
  4472 ;;		On exit  : D/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4475 ;;      Params:         0       3       0       0       0       0       0       0       0
  4476 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4477 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4478 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4479 ;;Total ram usage:        9 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:   19
  4482 ;; This function calls:
  4483 ;;		_ADC_GetConversion
  4484 ;;		_ADC_TempConversion
  4485 ;;		_TMR2_ReadTimer
  4486 ;;		_moteApp_GoToSleep
  4487 ;;		_moteApp_add16bToDataBuffer
  4488 ;;		_moteApp_add8bToDataBuffer
  4489 ;;		_moteApp_clearBuffers
  4490 ;;		_moteApp_delayms
  4491 ;;		_oled_clear
  4492 ;;		_oled_putString
  4493 ;;		_oled_putUint16
  4494 ;;		_oled_putUint8
  4495 ;;		_sendDataCommand
  4496 ;; This function is called by:
  4497 ;;		_moteHandler
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text3
  4502  00613A                     __ptext3:
  4503                           	opt stack 0
  4504  00613A                     _moteRunningProcess:
  4505                           	opt stack 10
  4506                           
  4507                           ; BSR set to: 2
  4508                           ;MOTEapp.c: 745: if ((sleepEvent) && (periodicState))
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;incstack = 0
  4512  00613A  0100               	movlb	0	; () banked
  4513  00613C  517E               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  4514  00613E  E101 D0CD          	bz	l11047
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;MOTEapp.c: 746: {
  4518                           ;MOTEapp.c: 747: if (sleepTicker >= 33)
  4519  006142  0E20               	movlw	32
  4520  006144  0101               	movlb	1	; () banked
  4521  006146  6552               	cpfsgt	_sleepTicker& (0+255),b
  4522  006148  D0C6               	goto	l11041
  4523                           
  4524                           ; BSR set to: 1
  4525                           ;MOTEapp.c: 748: {
  4526                           ;MOTEapp.c: 750: uint16_t Traw = 0;
  4527  00614A  0100               	movlb	0	; () banked
  4528  00614C  6B81               	clrf	moteRunningProcess@Traw& (0+255),b
  4529  00614E  6B82               	clrf	(moteRunningProcess@Traw+1)& (0+255),b
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;MOTEapp.c: 751: moteApp_delayms(10);
  4533  006150  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4534  006152  0E0A               	movlw	10
  4535  006154  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4536  006156  EC06  F01F         	call	_moteApp_delayms	;wreg free
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;MOTEapp.c: 752: for(uint8_t i = 32; i>0; i--)
  4540  00615A  0E20               	movlw	32
  4541  00615C  6F83               	movwf	moteRunningProcess@i& (0+255),b
  4542  00615E                     l10971:
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;MOTEapp.c: 753: {
  4546                           ;MOTEapp.c: 754: light = (light + ADC_GetConversion(Light_channel)) / 2;
  4547  00615E  0E03               	movlw	3
  4548  006160  EC67  F020         	call	_ADC_GetConversion
  4549  006164  0101               	movlb	1	; () banked
  4550  006166  5135               	movf	_light& (0+255),w,b
  4551  006168  0100               	movlb	0	; () banked
  4552  00616A  2760               	addwf	?_ADC_GetConversion& (0+255),f,b
  4553  00616C  0101               	movlb	1	; () banked
  4554  00616E  5136               	movf	(_light+1)& (0+255),w,b
  4555  006170  0100               	movlb	0	; () banked
  4556  006172  2361               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4557  006174  90D8               	bcf	status,0,c
  4558  006176  3161               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4559  006178  6F7F               	movwf	??_moteRunningProcess& (0+255),b
  4560  00617A  3160               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4561  00617C  0101               	movlb	1	; () banked
  4562  00617E  6F35               	movwf	_light& (0+255),b
  4563  006180  C07F  F136         	movff	??_moteRunningProcess,_light+1
  4564                           
  4565                           ; BSR set to: 1
  4566  006184  0100               	movlb	0	; () banked
  4567  006186  0783               	decf	moteRunningProcess@i& (0+255),f,b
  4568                           
  4569                           ; BSR set to: 0
  4570  006188  5183               	movf	moteRunningProcess@i& (0+255),w,b
  4571  00618A  E1E9               	bnz	l10971
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;MOTEapp.c: 755: }
  4575                           ;MOTEapp.c: 756: moteApp_delayms(10);
  4576  00618C  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  4577  00618E  0E0A               	movlw	10
  4578  006190  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4579  006192  EC06  F01F         	call	_moteApp_delayms	;wreg free
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;MOTEapp.c: 757: for(uint8_t i = 32; i>0; i--)
  4583  006196  0E20               	movlw	32
  4584  006198  6F84               	movwf	moteRunningProcess@i_1624& (0+255),b
  4585  00619A                     l10985:
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;MOTEapp.c: 758: {
  4589                           ;MOTEapp.c: 759: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  4590  00619A  0E02               	movlw	2
  4591  00619C  EC67  F020         	call	_ADC_GetConversion
  4592  0061A0  5181               	movf	moteRunningProcess@Traw& (0+255),w,b
  4593  0061A2  2760               	addwf	?_ADC_GetConversion& (0+255),f,b
  4594  0061A4  5182               	movf	(moteRunningProcess@Traw+1)& (0+255),w,b
  4595  0061A6  2361               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  4596  0061A8  90D8               	bcf	status,0,c
  4597  0061AA  3161               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  4598  0061AC  6F7F               	movwf	??_moteRunningProcess& (0+255),b
  4599  0061AE  3160               	rrcf	?_ADC_GetConversion& (0+255),w,b
  4600  0061B0  6F81               	movwf	moteRunningProcess@Traw& (0+255),b
  4601  0061B2  C07F  F082         	movff	??_moteRunningProcess,moteRunningProcess@Traw+1
  4602                           
  4603                           ; BSR set to: 0
  4604  0061B6  0784               	decf	moteRunningProcess@i_1624& (0+255),f,b
  4605                           
  4606                           ; BSR set to: 0
  4607  0061B8  5184               	movf	moteRunningProcess@i_1624& (0+255),w,b
  4608  0061BA  E1EF               	bnz	l10985
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;MOTEapp.c: 760: }
  4612                           ;MOTEapp.c: 761: temperature = ADC_TempConversion(Traw);
  4613  0061BC  5181               	movf	moteRunningProcess@Traw& (0+255),w,b
  4614  0061BE  ECA9  F01E         	call	_ADC_TempConversion
  4615  0061C2  0101               	movlb	1	; () banked
  4616  0061C4  6F39               	movwf	_temperature& (0+255),b
  4617  0061C6  6B3A               	clrf	(_temperature+1)& (0+255),b
  4618                           
  4619                           ; BSR set to: 1
  4620                           ;MOTEapp.c: 763: sleepTicker = 0;
  4621  0061C8  6B52               	clrf	_sleepTicker& (0+255),b
  4622                           
  4623                           ; BSR set to: 1
  4624                           ;MOTEapp.c: 764: oled_clear();
  4625  0061CA  EC24  F01E         	call	_oled_clear	;wreg free
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;MOTEapp.c: 765: oled_putString("Issue Perodic TX",0,0);
  4629  0061CE  0EE5               	movlw	low STR_83
  4630  0061D0  6F6D               	movwf	oled_putString@string& (0+255),b
  4631  0061D2  0E7C               	movlw	high STR_83
  4632  0061D4  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4633  0061D6  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4634  0061D8  6B70               	clrf	oled_putString@start_page& (0+255),b
  4635  0061DA  EC17  F023         	call	_oled_putString	;wreg free
  4636                           
  4637                           ;MOTEapp.c: 766: oled_putString("On Port #: ",0,1);
  4638  0061DE  0E89               	movlw	low STR_84
  4639  0061E0  0100               	movlb	0	; () banked
  4640  0061E2  6F6D               	movwf	oled_putString@string& (0+255),b
  4641  0061E4  0E7E               	movlw	high STR_84
  4642  0061E6  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4643  0061E8  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4644  0061EA  0E01               	movlw	1
  4645  0061EC  6F70               	movwf	oled_putString@start_page& (0+255),b
  4646  0061EE  EC17  F023         	call	_oled_putString	;wreg free
  4647                           
  4648                           ;MOTEapp.c: 767: oled_putUint8(randomPortNum,10,1);
  4649  0061F2  0E0A               	movlw	10
  4650  0061F4  0100               	movlb	0	; () banked
  4651  0061F6  6F72               	movwf	oled_putUint8@station_dot& (0+255),b
  4652  0061F8  0E01               	movlw	1
  4653  0061FA  6F73               	movwf	oled_putUint8@start_page& (0+255),b
  4654  0061FC  51F8               	movf	_randomPortNum& (0+255),w,b
  4655  0061FE  EC89  F022         	call	_oled_putUint8
  4656                           
  4657                           ;MOTEapp.c: 768: oled_putString("L:       T: ",0,2);
  4658  006202  0ED4               	movlw	low STR_85
  4659  006204  0100               	movlb	0	; () banked
  4660  006206  6F6D               	movwf	oled_putString@string& (0+255),b
  4661  006208  0E7D               	movlw	high STR_85
  4662  00620A  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4663  00620C  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4664  00620E  0E02               	movlw	2
  4665  006210  6F70               	movwf	oled_putString@start_page& (0+255),b
  4666  006212  EC17  F023         	call	_oled_putString	;wreg free
  4667                           
  4668                           ;MOTEapp.c: 769: oled_putUint16(light,3,2);
  4669  006216  C135  F072         	movff	_light,oled_putUint16@number
  4670  00621A  C136  F073         	movff	_light+1,oled_putUint16@number+1
  4671  00621E  0E03               	movlw	3
  4672  006220  0100               	movlb	0	; () banked
  4673  006222  6F74               	movwf	oled_putUint16@station_dot& (0+255),b
  4674  006224  0E02               	movlw	2
  4675  006226  6F75               	movwf	oled_putUint16@start_page& (0+255),b
  4676  006228  ECE9  F02C         	call	_oled_putUint16	;wreg free
  4677                           
  4678                           ;MOTEapp.c: 770: oled_putUint8(temperature,12,2);
  4679  00622C  0E0C               	movlw	12
  4680  00622E  0100               	movlb	0	; () banked
  4681  006230  6F72               	movwf	oled_putUint8@station_dot& (0+255),b
  4682  006232  0E02               	movlw	2
  4683  006234  6F73               	movwf	oled_putUint8@start_page& (0+255),b
  4684  006236  0101               	movlb	1	; () banked
  4685  006238  5139               	movf	_temperature& (0+255),w,b
  4686  00623A  EC89  F022         	call	_oled_putUint8
  4687                           
  4688                           ;MOTEapp.c: 771: oled_putString("(NAV)    (SEL) ",0,3);
  4689  00623E  0E29               	movlw	low STR_86
  4690  006240  0100               	movlb	0	; () banked
  4691  006242  6F6D               	movwf	oled_putString@string& (0+255),b
  4692  006244  0E7D               	movlw	high STR_86
  4693  006246  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4694  006248  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  4695  00624A  0E03               	movlw	3
  4696  00624C  6F70               	movwf	oled_putString@start_page& (0+255),b
  4697  00624E  EC17  F023         	call	_oled_putString	;wreg free
  4698                           
  4699                           ;MOTEapp.c: 773: moteApp_clearBuffers();
  4700  006252  EC6B  F021         	call	_moteApp_clearBuffers	;wreg free
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;MOTEapp.c: 774: randomPortNum = TMR2_ReadTimer();
  4704  006256  EC8E  F01D         	call	_TMR2_ReadTimer	;wreg free
  4705  00625A  6FF8               	movwf	_randomPortNum& (0+255),b
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;MOTEapp.c: 776: if (!randomPortNum)
  4709  00625C  51F8               	movf	_randomPortNum& (0+255),w,b
  4710  00625E  E103               	bnz	l11019
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;MOTEapp.c: 777: randomPortNum = 5;
  4714  006260  0E05               	movlw	5
  4715  006262  6FF8               	movwf	_randomPortNum& (0+255),b
  4716  006264  D005               	goto	l11023
  4717  006266                     l11019:
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;MOTEapp.c: 778: else if (randomPortNum > 223)
  4721  006266  0EDF               	movlw	223
  4722  006268  65F8               	cpfsgt	_randomPortNum& (0+255),b
  4723  00626A  D002               	goto	l11023
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;MOTEapp.c: 779: randomPortNum = randomPortNum - 50;
  4727  00626C  0ECE               	movlw	206
  4728  00626E  27F8               	addwf	_randomPortNum& (0+255),f,b
  4729  006270                     l11023:
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;MOTEapp.c: 781: moteApp_add8bToDataBuffer(randomPortNum, 0);
  4733  006270  6B64               	clrf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  4734  006272  51F8               	movf	_randomPortNum& (0+255),w,b
  4735  006274  ECB3  F023         	call	_moteApp_add8bToDataBuffer
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;MOTEapp.c: 782: dataBuffer[3] = 0x20;
  4739  006278  0E20               	movlw	32
  4740  00627A  0101               	movlb	1	; () banked
  4741  00627C  6FD9               	movwf	(_dataBuffer+3)& (0+255),b
  4742                           
  4743                           ; BSR set to: 1
  4744                           ;MOTEapp.c: 783: moteApp_add16bToDataBuffer(light, 4);
  4745  00627E  C135  F06C         	movff	_light,moteApp_add16bToDataBuffer@number
  4746  006282  C136  F06D         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  4747  006286  0E04               	movlw	4
  4748  006288  0100               	movlb	0	; () banked
  4749  00628A  6F6E               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  4750  00628C  EC7E  F02F         	call	_moteApp_add16bToDataBuffer	;wreg free
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;MOTEapp.c: 784: moteApp_add8bToDataBuffer(temperature, 9);
  4754  006290  0E09               	movlw	9
  4755  006292  6F64               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  4756  006294  0101               	movlb	1	; () banked
  4757  006296  5139               	movf	_temperature& (0+255),w,b
  4758  006298  ECB3  F023         	call	_moteApp_add8bToDataBuffer
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;MOTEapp.c: 786: sleepTxOccurances = 0;
  4762  00629C  F000               	nop	
  4763                           
  4764                           ;MOTEapp.c: 787: oled_putString("C",15,1);
  4765  00629E  0EFB               	movlw	low STR_87
  4766  0062A0  0100               	movlb	0	; () banked
  4767  0062A2  6F6D               	movwf	oled_putString@string& (0+255),b
  4768  0062A4  0E7F               	movlw	high STR_87
  4769  0062A6  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  4770  0062A8  0E0F               	movlw	15
  4771  0062AA  6F6F               	movwf	oled_putString@station_dot& (0+255),b
  4772  0062AC  0E01               	movlw	1
  4773  0062AE  6F70               	movwf	oled_putString@start_page& (0+255),b
  4774  0062B0  EC17  F023         	call	_oled_putString	;wreg free
  4775                           
  4776                           ;MOTEapp.c: 788: sendDataCommand("radio tx ", dataBuffer, 12);
  4777  0062B4  0EFD               	movlw	low STR_88
  4778  0062B6  0100               	movlb	0	; () banked
  4779  0062B8  6F61               	movwf	sendDataCommand@string& (0+255),b
  4780  0062BA  0E7E               	movlw	high STR_88
  4781  0062BC  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  4782  0062BE  0ED6               	movlw	low _dataBuffer
  4783  0062C0  6F63               	movwf	sendDataCommand@appData& (0+255),b
  4784  0062C2  0E01               	movlw	high _dataBuffer
  4785  0062C4  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  4786  0062C6  0E0C               	movlw	12
  4787  0062C8  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  4788  0062CA  EC1D  F027         	call	_sendDataCommand	;wreg free
  4789                           
  4790                           ;MOTEapp.c: 789: secTicker = 10 - (10 / 3);
  4791  0062CE  0E07               	movlw	7
  4792  0062D0  6E29               	movwf	_secTicker,c
  4793                           
  4794                           ;MOTEapp.c: 790: runningState = runningUplinkTransmit;
  4795  0062D2  0E08               	movlw	8
  4796  0062D4  D002               	goto	L38
  4797  0062D6                     l11041:
  4798                           
  4799                           ; BSR set to: 1
  4800                           ;MOTEapp.c: 792: else
  4801                           ;MOTEapp.c: 793: {
  4802                           ;MOTEapp.c: 794: sleepTicker++;
  4803  0062D6  2B52               	incf	_sleepTicker& (0+255),f,b
  4804                           
  4805                           ; BSR set to: 1
  4806                           ;MOTEapp.c: 795: runningState = runningSleep;
  4807  0062D8  0E0E               	movlw	14
  4808  0062DA                     L38:
  4809  0062DA  6E27               	movwf	_runningState,c
  4810  0062DC                     l11047:
  4811                           
  4812                           ;MOTEapp.c: 797: }
  4813                           ;MOTEapp.c: 798: }
  4814                           ;MOTEapp.c: 800: moteApp_GoToSleep();
  4815  0062DC  EC7E  F023         	call	_moteApp_GoToSleep	;wreg free
  4816  0062E0                     l490:
  4817  0062E0  D7FF               	goto	l490
  4818  0062E2                     __end_of_moteRunningProcess:
  4819                           	opt stack 0
  4820                           tblptru	equ	0xFF8
  4821                           tblptrh	equ	0xFF7
  4822                           tblptrl	equ	0xFF6
  4823                           tablat	equ	0xFF5
  4824                           intcon	equ	0xFF2
  4825                           postinc0	equ	0xFEE
  4826                           wreg	equ	0xFE8
  4827                           status	equ	0xFD8
  4828                           
  4829 ;; *************** function _sendDataCommand *****************
  4830 ;; Defined at:
  4831 ;;		line 970 in file "../Includes/Board/MOTEapp.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  4834 ;;		 -> STR_88(10), 
  4835 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  4836 ;;		 -> dataBuffer(12), 
  4837 ;;  dataLength      1    5[BANK0 ] unsigned char 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  byteCount       1    8[BANK0 ] unsigned char 
  4840 ;;  byteCount       1    7[BANK0 ] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : F/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4850 ;;      Params:         0       5       0       0       0       0       0       0       0
  4851 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4852 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4853 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4854 ;;Total ram usage:        8 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:   13
  4857 ;; This function calls:
  4858 ;;		_EUSART_Write
  4859 ;;		_EndLine
  4860 ;;		_hexToStr
  4861 ;; This function is called by:
  4862 ;;		_moteRunningProcess
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text4
  4867  004E3A                     __ptext4:
  4868                           	opt stack 0
  4869  004E3A                     _sendDataCommand:
  4870                           	opt stack 15
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;MOTEapp.c: 973: while (*string)
  4874                           
  4875                           ;incstack = 0
  4876  004E3A  D00B               	goto	l9991
  4877  004E3C                     l9987:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;MOTEapp.c: 974: {
  4881                           ;MOTEapp.c: 975: EUSART_Write(*string++);
  4882  004E3C  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  4883  004E40  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  4884  004E44                     	if	0	;tblptru may be non-zero
  4885  004E44                     	endif
  4886  004E44                     	if	0	;tblptru may be non-zero
  4887  004E44                     	endif
  4888  004E44  0008               	tblrd		*
  4889  004E46  50F5               	movf	tablat,w,c
  4890  004E48  ECFB  F01F         	call	_EUSART_Write
  4891  004E4C  0100               	movlb	0	; () banked
  4892  004E4E  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
  4893  004E50  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
  4894  004E52                     l9991:
  4895                           
  4896                           ; BSR set to: 0
  4897  004E52  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  4898  004E56  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  4899  004E5A                     	if	0	;tblptru may be non-zero
  4900  004E5A                     	endif
  4901  004E5A                     	if	0	;tblptru may be non-zero
  4902  004E5A                     	endif
  4903  004E5A  0008               	tblrd		*
  4904  004E5C  50F5               	movf	tablat,w,c
  4905  004E5E  E1EE               	bnz	l9987
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;MOTEapp.c: 976: }
  4909                           ;MOTEapp.c: 978: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  4910  004E60  6B67               	clrf	sendDataCommand@byteCount& (0+255),b
  4911  004E62                     l9997:
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;MOTEapp.c: 979: {
  4915                           ;MOTEapp.c: 980: EUSART_Write(appData[byteCount]);
  4916  004E62  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
  4917  004E64  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  4918  004E66  6ED9               	movwf	fsr2l,c
  4919  004E68  0E00               	movlw	0
  4920  004E6A  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  4921  004E6C  6EDA               	movwf	fsr2h,c
  4922  004E6E  50DF               	movf	indf2,w,c
  4923  004E70  ECFB  F01F         	call	_EUSART_Write
  4924  004E74  0100               	movlb	0	; () banked
  4925  004E76  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
  4926                           
  4927                           ; BSR set to: 0
  4928  004E78  0E02               	movlw	2
  4929  004E7A  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  4930  004E7C  D7F2               	goto	l9997
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;MOTEapp.c: 981: }
  4934                           ;MOTEapp.c: 983: EUSART_Write(appData[3]);
  4935  004E7E  EE20 F003          	lfsr	2,3
  4936  004E82  5163               	movf	sendDataCommand@appData& (0+255),w,b
  4937  004E84  26D9               	addwf	fsr2l,f,c
  4938  004E86  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
  4939  004E88  22DA               	addwfc	fsr2h,f,c
  4940  004E8A  50DF               	movf	indf2,w,c
  4941  004E8C  ECFB  F01F         	call	_EUSART_Write
  4942                           
  4943                           ;MOTEapp.c: 985: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  4944  004E90  0E04               	movlw	4
  4945  004E92  0100               	movlb	0	; () banked
  4946  004E94  6F68               	movwf	sendDataCommand@byteCount_1682& (0+255),b
  4947  004E96  D01D               	goto	l10011
  4948  004E98                     l10007:
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;MOTEapp.c: 986: {
  4952                           ;MOTEapp.c: 987: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  4953  004E98  5168               	movf	sendDataCommand@byteCount_1682& (0+255),w,b
  4954  004E9A  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  4955  004E9C  6ED9               	movwf	fsr2l,c
  4956  004E9E  0E00               	movlw	0
  4957  004EA0  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  4958  004EA2  6EDA               	movwf	fsr2h,c
  4959  004EA4  50DF               	movf	indf2,w,c
  4960  004EA6  6F66               	movwf	??_sendDataCommand& (0+255),b
  4961  004EA8  3966               	swapf	??_sendDataCommand& (0+255),w,b
  4962  004EAA  0B0F               	andlw	15
  4963  004EAC  ECDF  F01E         	call	_hexToStr
  4964  004EB0  ECFB  F01F         	call	_EUSART_Write
  4965                           
  4966                           ;MOTEapp.c: 988: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  4967  004EB4  0100               	movlb	0	; () banked
  4968  004EB6  5168               	movf	sendDataCommand@byteCount_1682& (0+255),w,b
  4969  004EB8  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  4970  004EBA  6ED9               	movwf	fsr2l,c
  4971  004EBC  0E00               	movlw	0
  4972  004EBE  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  4973  004EC0  6EDA               	movwf	fsr2h,c
  4974  004EC2  50DF               	movf	indf2,w,c
  4975  004EC4  0B0F               	andlw	15
  4976  004EC6  ECDF  F01E         	call	_hexToStr
  4977  004ECA  ECFB  F01F         	call	_EUSART_Write
  4978  004ECE  0100               	movlb	0	; () banked
  4979  004ED0  2B68               	incf	sendDataCommand@byteCount_1682& (0+255),f,b
  4980  004ED2                     l10011:
  4981                           
  4982                           ; BSR set to: 0
  4983  004ED2  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
  4984  004ED4  5D68               	subwf	sendDataCommand@byteCount_1682& (0+255),w,b
  4985  004ED6  E3E0               	bnc	l10007
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;MOTEapp.c: 989: }
  4989                           ;MOTEapp.c: 990: EndLine();
  4990  004ED8  EFAE  F01D         	goto	_EndLine	;wreg free
  4991  004EDC                     __end_of_sendDataCommand:
  4992                           	opt stack 0
  4993                           tblptru	equ	0xFF8
  4994                           tblptrh	equ	0xFF7
  4995                           tblptrl	equ	0xFF6
  4996                           tablat	equ	0xFF5
  4997                           intcon	equ	0xFF2
  4998                           postinc0	equ	0xFEE
  4999                           wreg	equ	0xFE8
  5000                           indf2	equ	0xFDF
  5001                           fsr2h	equ	0xFDA
  5002                           fsr2l	equ	0xFD9
  5003                           status	equ	0xFD8
  5004                           
  5005 ;; *************** function _hexToStr *****************
  5006 ;; Defined at:
  5007 ;;		line 1002 in file "../Includes/Board/MOTEapp.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  character       1    wreg     unsigned char 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;  character       1    0[BANK0 ] unsigned char 
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      unsigned char 
  5014 ;; Registers used:
  5015 ;;		wreg, status,2, status,0
  5016 ;; Tracked objects:
  5017 ;;		On entry : F/0
  5018 ;;		On exit  : F/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5021 ;;      Params:         0       0       0       0       0       0       0       0       0
  5022 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5023 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5024 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5025 ;;Total ram usage:        1 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; Hardware stack levels required when called:   11
  5028 ;; This function calls:
  5029 ;;		Nothing
  5030 ;; This function is called by:
  5031 ;;		_sendDataCommand
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           	psect	text5
  5036  003DBE                     __ptext5:
  5037                           	opt stack 0
  5038  003DBE                     _hexToStr:
  5039                           	opt stack 16
  5040                           
  5041                           ;incstack = 0
  5042                           ;hexToStr@character stored from wreg
  5043  003DBE  6F60               	movwf	hexToStr@character& (0+255),b
  5044                           
  5045                           ;MOTEapp.c: 1005: character = character & 0x0F;
  5046  003DC0  0E0F               	movlw	15
  5047  003DC2  0100               	movlb	0	; () banked
  5048  003DC4  1760               	andwf	hexToStr@character& (0+255),f,b
  5049                           
  5050                           ;MOTEapp.c: 1007: if (character < 0x0A)
  5051  003DC6  0E0A               	movlw	10
  5052  003DC8  6160               	cpfslt	hexToStr@character& (0+255),b
  5053  003DCA  D003               	goto	l9471
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;MOTEapp.c: 1008: {
  5057                           ;MOTEapp.c: 1009: return character + '0';
  5058  003DCC  5160               	movf	hexToStr@character& (0+255),w,b
  5059  003DCE  0F30               	addlw	48
  5060  003DD0  0012               	return	
  5061  003DD2                     l9471:
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;MOTEapp.c: 1011: else if ( (character >= 0x0A) && (character <= 0x0F) )
  5065  003DD2  0E09               	movlw	9
  5066  003DD4  6560               	cpfsgt	hexToStr@character& (0+255),b
  5067  003DD6  0C00               	retlw	0
  5068                           
  5069                           ; BSR set to: 0
  5070  003DD8  0E10               	movlw	16
  5071  003DDA  6160               	cpfslt	hexToStr@character& (0+255),b
  5072  003DDC  0C00               	retlw	0
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;MOTEapp.c: 1012: {
  5076                           ;MOTEapp.c: 1013: return character + '0' + 7;
  5077  003DDE  5160               	movf	hexToStr@character& (0+255),w,b
  5078  003DE0  0F37               	addlw	55
  5079  003DE2  0012               	return	
  5080  003DE4                     __end_of_hexToStr:
  5081                           	opt stack 0
  5082                           tblptru	equ	0xFF8
  5083                           tblptrh	equ	0xFF7
  5084                           tblptrl	equ	0xFF6
  5085                           tablat	equ	0xFF5
  5086                           intcon	equ	0xFF2
  5087                           postinc0	equ	0xFEE
  5088                           wreg	equ	0xFE8
  5089                           indf2	equ	0xFDF
  5090                           fsr2h	equ	0xFDA
  5091                           fsr2l	equ	0xFD9
  5092                           status	equ	0xFD8
  5093                           
  5094 ;; *************** function _oled_putUint8 *****************
  5095 ;; Defined at:
  5096 ;;		line 226 in file "../Includes/Drivers/SSD1306oLED.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;  number          1    wreg     unsigned char 
  5099 ;;  station_dot     1   18[BANK0 ] unsigned char 
  5100 ;;  start_page      1   19[BANK0 ] unsigned char 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  number          1   20[BANK0 ] unsigned char 
  5103 ;;  numData         6   21[BANK0 ] struct .
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  1    wreg      void 
  5106 ;; Registers used:
  5107 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5108 ;; Tracked objects:
  5109 ;;		On entry : E/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5113 ;;      Params:         0       2       0       0       0       0       0       0       0
  5114 ;;      Locals:         0       7       0       0       0       0       0       0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5116 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5117 ;;Total ram usage:        9 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; Hardware stack levels required when called:   16
  5120 ;; This function calls:
  5121 ;;		___lbdiv
  5122 ;;		___lbmod
  5123 ;;		_oled_putString
  5124 ;; This function is called by:
  5125 ;;		_moteRunningProcess
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           	psect	text6
  5130  004512                     __ptext6:
  5131                           	opt stack 0
  5132  004512                     _oled_putUint8:
  5133                           	opt stack 12
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;incstack = 0
  5137                           ;oled_putUint8@number stored from wreg
  5138  004512  0100               	movlb	0	; () banked
  5139  004514  6F74               	movwf	oled_putUint8@number& (0+255),b
  5140                           
  5141                           ;SSD1306oLED.c: 228: display_data_t numData;
  5142                           ;SSD1306oLED.c: 229: numData.d2 = '0' + (number % 10);
  5143  004516  0E0A               	movlw	10
  5144  004518  6F60               	movwf	___lbmod@divisor& (0+255),b
  5145  00451A  5174               	movf	oled_putUint8@number& (0+255),w,b
  5146  00451C  EC1A  F01F         	call	___lbmod
  5147  004520  0F30               	addlw	48
  5148  004522  6F77               	movwf	(oled_putUint8@numData+2)& (0+255),b
  5149                           
  5150                           ;SSD1306oLED.c: 230: number /= 10;
  5151  004524  0E0A               	movlw	10
  5152  004526  6F60               	movwf	___lbdiv@divisor& (0+255),b
  5153  004528  5174               	movf	oled_putUint8@number& (0+255),w,b
  5154  00452A  EC30  F020         	call	___lbdiv
  5155  00452E  6F74               	movwf	oled_putUint8@number& (0+255),b
  5156                           
  5157                           ;SSD1306oLED.c: 231: numData.d1 = '0' + (number % 10);
  5158  004530  0E0A               	movlw	10
  5159  004532  6F60               	movwf	___lbmod@divisor& (0+255),b
  5160  004534  5174               	movf	oled_putUint8@number& (0+255),w,b
  5161  004536  EC1A  F01F         	call	___lbmod
  5162  00453A  0F30               	addlw	48
  5163  00453C  6F76               	movwf	(oled_putUint8@numData+1)& (0+255),b
  5164                           
  5165                           ;SSD1306oLED.c: 232: number /= 10;
  5166  00453E  0E0A               	movlw	10
  5167  004540  6F60               	movwf	___lbdiv@divisor& (0+255),b
  5168  004542  5174               	movf	oled_putUint8@number& (0+255),w,b
  5169  004544  EC30  F020         	call	___lbdiv
  5170  004548  6F74               	movwf	oled_putUint8@number& (0+255),b
  5171                           
  5172                           ;SSD1306oLED.c: 233: numData.d0 = '0' + (number % 10);
  5173  00454A  0E0A               	movlw	10
  5174  00454C  6F60               	movwf	___lbmod@divisor& (0+255),b
  5175  00454E  5174               	movf	oled_putUint8@number& (0+255),w,b
  5176  004550  EC1A  F01F         	call	___lbmod
  5177  004554  0F30               	addlw	48
  5178  004556  6F75               	movwf	oled_putUint8@numData& (0+255),b
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;SSD1306oLED.c: 235: numData.b[3]=0;
  5182  004558  6B78               	clrf	(oled_putUint8@numData+3)& (0+255),b
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;SSD1306oLED.c: 237: oled_putString(numData.b,station_dot,start_page);
  5186  00455A  0E75               	movlw	low oled_putUint8@numData
  5187  00455C  6F6D               	movwf	oled_putString@string& (0+255),b
  5188  00455E  6B6E               	clrf	(oled_putString@string+1)& (0+255),b
  5189  004560  C072  F06F         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  5190  004564  C073  F070         	movff	oled_putUint8@start_page,oled_putString@start_page
  5191  004568  EF17  F023         	goto	_oled_putString	;wreg free
  5192  00456C                     __end_of_oled_putUint8:
  5193                           	opt stack 0
  5194                           tblptru	equ	0xFF8
  5195                           tblptrh	equ	0xFF7
  5196                           tblptrl	equ	0xFF6
  5197                           tablat	equ	0xFF5
  5198                           intcon	equ	0xFF2
  5199                           postinc0	equ	0xFEE
  5200                           wreg	equ	0xFE8
  5201                           indf2	equ	0xFDF
  5202                           fsr2h	equ	0xFDA
  5203                           fsr2l	equ	0xFD9
  5204                           status	equ	0xFD8
  5205                           
  5206 ;; *************** function _oled_putUint16 *****************
  5207 ;; Defined at:
  5208 ;;		line 240 in file "../Includes/Drivers/SSD1306oLED.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  number          2   18[BANK0 ] unsigned int 
  5211 ;;  station_dot     1   20[BANK0 ] unsigned char 
  5212 ;;  start_page      1   21[BANK0 ] unsigned char 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  numData         6   22[BANK0 ] struct .
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  1    wreg      void 
  5217 ;; Registers used:
  5218 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5219 ;; Tracked objects:
  5220 ;;		On entry : F/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5224 ;;      Params:         0       4       0       0       0       0       0       0       0
  5225 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5227 ;;      Totals:         0      10       0       0       0       0       0       0       0
  5228 ;;Total ram usage:       10 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:   16
  5231 ;; This function calls:
  5232 ;;		___lwdiv
  5233 ;;		___lwmod
  5234 ;;		_oled_putString
  5235 ;; This function is called by:
  5236 ;;		_moteRunningProcess
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text7
  5241  0059D2                     __ptext7:
  5242                           	opt stack 0
  5243  0059D2                     _oled_putUint16:
  5244                           	opt stack 12
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;SSD1306oLED.c: 242: display_data_t numData;
  5248                           ;SSD1306oLED.c: 243: numData.d4 = '0' + (number % 10);
  5249                           
  5250                           ;incstack = 0
  5251  0059D2  C072  F067         	movff	oled_putUint16@number,___lwmod@dividend
  5252  0059D6  C073  F068         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  5253  0059DA  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5254  0059DC  0E0A               	movlw	10
  5255  0059DE  6F69               	movwf	___lwmod@divisor& (0+255),b
  5256  0059E0  ECDD  F020         	call	___lwmod	;wreg free
  5257  0059E4  5167               	movf	?___lwmod& (0+255),w,b
  5258  0059E6  0F30               	addlw	48
  5259  0059E8  6F7A               	movwf	(oled_putUint16@numData+4)& (0+255),b
  5260                           
  5261                           ;SSD1306oLED.c: 244: number /= 10;
  5262  0059EA  C072  F060         	movff	oled_putUint16@number,___lwdiv@dividend
  5263  0059EE  C073  F061         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  5264  0059F2  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5265  0059F4  0E0A               	movlw	10
  5266  0059F6  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5267  0059F8  EC21  F021         	call	___lwdiv	;wreg free
  5268  0059FC  C060  F072         	movff	?___lwdiv,oled_putUint16@number
  5269  005A00  C061  F073         	movff	?___lwdiv+1,oled_putUint16@number+1
  5270                           
  5271                           ;SSD1306oLED.c: 245: numData.d3 = '0' + (number % 10);
  5272  005A04  C072  F067         	movff	oled_putUint16@number,___lwmod@dividend
  5273  005A08  C073  F068         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  5274  005A0C  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5275  005A0E  0E0A               	movlw	10
  5276  005A10  6F69               	movwf	___lwmod@divisor& (0+255),b
  5277  005A12  ECDD  F020         	call	___lwmod	;wreg free
  5278  005A16  5167               	movf	?___lwmod& (0+255),w,b
  5279  005A18  0F30               	addlw	48
  5280  005A1A  6F79               	movwf	(oled_putUint16@numData+3)& (0+255),b
  5281                           
  5282                           ;SSD1306oLED.c: 246: number /= 10;
  5283  005A1C  C072  F060         	movff	oled_putUint16@number,___lwdiv@dividend
  5284  005A20  C073  F061         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  5285  005A24  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5286  005A26  0E0A               	movlw	10
  5287  005A28  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5288  005A2A  EC21  F021         	call	___lwdiv	;wreg free
  5289  005A2E  C060  F072         	movff	?___lwdiv,oled_putUint16@number
  5290  005A32  C061  F073         	movff	?___lwdiv+1,oled_putUint16@number+1
  5291                           
  5292                           ;SSD1306oLED.c: 247: numData.d2 = '0' + (number % 10);
  5293  005A36  C072  F067         	movff	oled_putUint16@number,___lwmod@dividend
  5294  005A3A  C073  F068         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  5295  005A3E  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5296  005A40  0E0A               	movlw	10
  5297  005A42  6F69               	movwf	___lwmod@divisor& (0+255),b
  5298  005A44  ECDD  F020         	call	___lwmod	;wreg free
  5299  005A48  5167               	movf	?___lwmod& (0+255),w,b
  5300  005A4A  0F30               	addlw	48
  5301  005A4C  6F78               	movwf	(oled_putUint16@numData+2)& (0+255),b
  5302                           
  5303                           ;SSD1306oLED.c: 248: number /= 10;
  5304  005A4E  C072  F060         	movff	oled_putUint16@number,___lwdiv@dividend
  5305  005A52  C073  F061         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  5306  005A56  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5307  005A58  0E0A               	movlw	10
  5308  005A5A  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5309  005A5C  EC21  F021         	call	___lwdiv	;wreg free
  5310  005A60  C060  F072         	movff	?___lwdiv,oled_putUint16@number
  5311  005A64  C061  F073         	movff	?___lwdiv+1,oled_putUint16@number+1
  5312                           
  5313                           ;SSD1306oLED.c: 249: numData.d1 = '0' + (number % 10);
  5314  005A68  C072  F067         	movff	oled_putUint16@number,___lwmod@dividend
  5315  005A6C  C073  F068         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  5316  005A70  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5317  005A72  0E0A               	movlw	10
  5318  005A74  6F69               	movwf	___lwmod@divisor& (0+255),b
  5319  005A76  ECDD  F020         	call	___lwmod	;wreg free
  5320  005A7A  5167               	movf	?___lwmod& (0+255),w,b
  5321  005A7C  0F30               	addlw	48
  5322  005A7E  6F77               	movwf	(oled_putUint16@numData+1)& (0+255),b
  5323                           
  5324                           ;SSD1306oLED.c: 250: number /= 10;
  5325  005A80  C072  F060         	movff	oled_putUint16@number,___lwdiv@dividend
  5326  005A84  C073  F061         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
  5327  005A88  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5328  005A8A  0E0A               	movlw	10
  5329  005A8C  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5330  005A8E  EC21  F021         	call	___lwdiv	;wreg free
  5331  005A92  C060  F072         	movff	?___lwdiv,oled_putUint16@number
  5332  005A96  C061  F073         	movff	?___lwdiv+1,oled_putUint16@number+1
  5333                           
  5334                           ;SSD1306oLED.c: 251: numData.d0 = '0' + (number % 10);
  5335  005A9A  C072  F067         	movff	oled_putUint16@number,___lwmod@dividend
  5336  005A9E  C073  F068         	movff	oled_putUint16@number+1,___lwmod@dividend+1
  5337  005AA2  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5338  005AA4  0E0A               	movlw	10
  5339  005AA6  6F69               	movwf	___lwmod@divisor& (0+255),b
  5340  005AA8  ECDD  F020         	call	___lwmod	;wreg free
  5341  005AAC  5167               	movf	?___lwmod& (0+255),w,b
  5342  005AAE  0F30               	addlw	48
  5343  005AB0  6F76               	movwf	oled_putUint16@numData& (0+255),b
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;SSD1306oLED.c: 253: numData.b[5]=0;
  5347  005AB2  6B7B               	clrf	(oled_putUint16@numData+5)& (0+255),b
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;SSD1306oLED.c: 255: oled_putString(numData.b,station_dot,start_page);
  5351  005AB4  0E76               	movlw	low oled_putUint16@numData
  5352  005AB6  6F6D               	movwf	oled_putString@string& (0+255),b
  5353  005AB8  6B6E               	clrf	(oled_putString@string+1)& (0+255),b
  5354  005ABA  C074  F06F         	movff	oled_putUint16@station_dot,oled_putString@station_dot
  5355  005ABE  C075  F070         	movff	oled_putUint16@start_page,oled_putString@start_page
  5356  005AC2  EF17  F023         	goto	_oled_putString	;wreg free
  5357  005AC6                     __end_of_oled_putUint16:
  5358                           	opt stack 0
  5359                           tblptru	equ	0xFF8
  5360                           tblptrh	equ	0xFF7
  5361                           tblptrl	equ	0xFF6
  5362                           tablat	equ	0xFF5
  5363                           intcon	equ	0xFF2
  5364                           postinc0	equ	0xFEE
  5365                           wreg	equ	0xFE8
  5366                           indf2	equ	0xFDF
  5367                           fsr2h	equ	0xFDA
  5368                           fsr2l	equ	0xFD9
  5369                           status	equ	0xFD8
  5370                           
  5371 ;; *************** function _moteApp_clearBuffers *****************
  5372 ;; Defined at:
  5373 ;;		line 1112 in file "../Includes/Board/MOTEapp.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  counter         1    2[BANK0 ] unsigned char 
  5378 ;;  counter         1    1[BANK0 ] unsigned char 
  5379 ;;  counter         1    0[BANK0 ] unsigned char 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : F/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5389 ;;      Params:         0       0       0       0       0       0       0       0       0
  5390 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5392 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5393 ;;Total ram usage:        3 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:   11
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_moteRunningProcess
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text8
  5404  0042D6                     __ptext8:
  5405                           	opt stack 0
  5406  0042D6                     _moteApp_clearBuffers:
  5407                           	opt stack 17
  5408                           
  5409                           ;MOTEapp.c: 1114: for (uint8_t counter = 0; counter < 3; counter++)
  5410                           
  5411                           ;incstack = 0
  5412  0042D6  0100               	movlb	0	; () banked
  5413  0042D8  6B60               	clrf	moteApp_clearBuffers@counter& (0+255),b
  5414  0042DA                     l9931:
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;MOTEapp.c: 1115: {
  5418                           ;MOTEapp.c: 1116: responsePortNum[counter] = 0;
  5419  0042DA  0E2E               	movlw	low _responsePortNum
  5420  0042DC  2560               	addwf	moteApp_clearBuffers@counter& (0+255),w,b
  5421  0042DE  6ED9               	movwf	fsr2l,c
  5422  0042E0  6ADA               	clrf	fsr2h,c
  5423  0042E2  0E01               	movlw	high _responsePortNum
  5424  0042E4  22DA               	addwfc	fsr2h,f,c
  5425  0042E6  6ADF               	clrf	indf2,c
  5426                           
  5427                           ; BSR set to: 0
  5428  0042E8  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
  5429                           
  5430                           ; BSR set to: 0
  5431  0042EA  0E02               	movlw	2
  5432  0042EC  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
  5433  0042EE  D7F5               	goto	l9931
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;MOTEapp.c: 1117: }
  5437                           ;MOTEapp.c: 1118: for (uint8_t counter = 0; counter < 34; counter++)
  5438  0042F0  6B61               	clrf	moteApp_clearBuffers@counter_1749& (0+255),b
  5439  0042F2                     l9941:
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;MOTEapp.c: 1119: {
  5443                           ;MOTEapp.c: 1120: responseId[counter] = 0;
  5444  0042F2  0E00               	movlw	low _responseId
  5445  0042F4  2561               	addwf	moteApp_clearBuffers@counter_1749& (0+255),w,b
  5446  0042F6  6ED9               	movwf	fsr2l,c
  5447  0042F8  6ADA               	clrf	fsr2h,c
  5448  0042FA  0E01               	movlw	high _responseId
  5449  0042FC  22DA               	addwfc	fsr2h,f,c
  5450  0042FE  6ADF               	clrf	indf2,c
  5451                           
  5452                           ; BSR set to: 0
  5453  004300  2B61               	incf	moteApp_clearBuffers@counter_1749& (0+255),f,b
  5454                           
  5455                           ; BSR set to: 0
  5456  004302  0E21               	movlw	33
  5457  004304  6561               	cpfsgt	moteApp_clearBuffers@counter_1749& (0+255),b
  5458  004306  D7F5               	goto	l9941
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;MOTEapp.c: 1121: }
  5462                           ;MOTEapp.c: 1122: for (uint8_t counter = 0; counter < 10; counter++)
  5463  004308  6B62               	clrf	moteApp_clearBuffers@counter_1750& (0+255),b
  5464  00430A                     l9951:
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;MOTEapp.c: 1123: {
  5468                           ;MOTEapp.c: 1124: responseData[counter] = 0;
  5469  00430A  0E10               	movlw	low _responseData
  5470  00430C  2562               	addwf	moteApp_clearBuffers@counter_1750& (0+255),w,b
  5471  00430E  6ED9               	movwf	fsr2l,c
  5472  004310  6ADA               	clrf	fsr2h,c
  5473  004312  0E01               	movlw	high _responseData
  5474  004314  22DA               	addwfc	fsr2h,f,c
  5475  004316  6ADF               	clrf	indf2,c
  5476                           
  5477                           ; BSR set to: 0
  5478  004318  2B62               	incf	moteApp_clearBuffers@counter_1750& (0+255),f,b
  5479                           
  5480                           ; BSR set to: 0
  5481  00431A  0E09               	movlw	9
  5482  00431C  6562               	cpfsgt	moteApp_clearBuffers@counter_1750& (0+255),b
  5483  00431E  D7F5               	goto	l9951
  5484  004320  0C09               	retlw	9
  5485  004322                     __end_of_moteApp_clearBuffers:
  5486                           	opt stack 0
  5487                           tblptru	equ	0xFF8
  5488                           tblptrh	equ	0xFF7
  5489                           tblptrl	equ	0xFF6
  5490                           tablat	equ	0xFF5
  5491                           intcon	equ	0xFF2
  5492                           postinc0	equ	0xFEE
  5493                           wreg	equ	0xFE8
  5494                           indf2	equ	0xFDF
  5495                           fsr2h	equ	0xFDA
  5496                           fsr2l	equ	0xFD9
  5497                           status	equ	0xFD8
  5498                           
  5499 ;; *************** function _moteApp_add8bToDataBuffer *****************
  5500 ;; Defined at:
  5501 ;;		line 1128 in file "../Includes/Board/MOTEapp.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  number          1    wreg     unsigned char 
  5504 ;;  bufferLocati    1    4[BANK0 ] unsigned char 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  number          1    5[BANK0 ] unsigned char 
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  1    wreg      void 
  5509 ;; Registers used:
  5510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5511 ;; Tracked objects:
  5512 ;;		On entry : E/0
  5513 ;;		On exit  : F/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5516 ;;      Params:         0       1       0       0       0       0       0       0       0
  5517 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5519 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5520 ;;Total ram usage:        2 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:   12
  5523 ;; This function calls:
  5524 ;;		___lbdiv
  5525 ;;		___lbmod
  5526 ;; This function is called by:
  5527 ;;		_moteRunningProcess
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text9
  5532  004766                     __ptext9:
  5533                           	opt stack 0
  5534  004766                     _moteApp_add8bToDataBuffer:
  5535                           	opt stack 16
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;incstack = 0
  5539                           ;moteApp_add8bToDataBuffer@number stored from wreg
  5540  004766  0100               	movlb	0	; () banked
  5541  004768  6F65               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5542                           
  5543                           ;MOTEapp.c: 1130: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  5544  00476A  0ED8               	movlw	low (_dataBuffer+2)
  5545  00476C  2564               	addwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5546  00476E  6ED9               	movwf	fsr2l,c
  5547  004770  6ADA               	clrf	fsr2h,c
  5548  004772  0E01               	movlw	high (_dataBuffer+2)
  5549  004774  22DA               	addwfc	fsr2h,f,c
  5550  004776  0E0A               	movlw	10
  5551  004778  6F60               	movwf	___lbmod@divisor& (0+255),b
  5552  00477A  5165               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5553  00477C  EC1A  F01F         	call	___lbmod
  5554  004780  0F30               	addlw	48
  5555  004782  6EDF               	movwf	indf2,c
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;MOTEapp.c: 1131: number /= 10;
  5559  004784  0E0A               	movlw	10
  5560  004786  6F60               	movwf	___lbdiv@divisor& (0+255),b
  5561  004788  5165               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5562  00478A  EC30  F020         	call	___lbdiv
  5563  00478E  6F65               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;MOTEapp.c: 1132: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  5567  004790  0ED7               	movlw	low (_dataBuffer+1)
  5568  004792  2564               	addwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5569  004794  6ED9               	movwf	fsr2l,c
  5570  004796  6ADA               	clrf	fsr2h,c
  5571  004798  0E01               	movlw	high (_dataBuffer+1)
  5572  00479A  22DA               	addwfc	fsr2h,f,c
  5573  00479C  0E0A               	movlw	10
  5574  00479E  6F60               	movwf	___lbmod@divisor& (0+255),b
  5575  0047A0  5165               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5576  0047A2  EC1A  F01F         	call	___lbmod
  5577  0047A6  0F30               	addlw	48
  5578  0047A8  6EDF               	movwf	indf2,c
  5579                           
  5580                           ;MOTEapp.c: 1133: number /= 10;
  5581  0047AA  0E0A               	movlw	10
  5582  0047AC  6F60               	movwf	___lbdiv@divisor& (0+255),b
  5583  0047AE  5165               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5584  0047B0  EC30  F020         	call	___lbdiv
  5585  0047B4  6F65               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;MOTEapp.c: 1134: dataBuffer[bufferLocation] = '0' + (number % 10);
  5589  0047B6  0ED6               	movlw	low _dataBuffer
  5590  0047B8  2564               	addwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
  5591  0047BA  6ED9               	movwf	fsr2l,c
  5592  0047BC  6ADA               	clrf	fsr2h,c
  5593  0047BE  0E01               	movlw	high _dataBuffer
  5594  0047C0  22DA               	addwfc	fsr2h,f,c
  5595  0047C2  0E0A               	movlw	10
  5596  0047C4  6F60               	movwf	___lbmod@divisor& (0+255),b
  5597  0047C6  5165               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
  5598  0047C8  EC1A  F01F         	call	___lbmod
  5599  0047CC  0F30               	addlw	48
  5600  0047CE  6EDF               	movwf	indf2,c
  5601                           
  5602                           ; BSR set to: 0
  5603  0047D0  0012               	return		;funcret
  5604  0047D2                     __end_of_moteApp_add8bToDataBuffer:
  5605                           	opt stack 0
  5606                           tblptru	equ	0xFF8
  5607                           tblptrh	equ	0xFF7
  5608                           tblptrl	equ	0xFF6
  5609                           tablat	equ	0xFF5
  5610                           intcon	equ	0xFF2
  5611                           postinc0	equ	0xFEE
  5612                           wreg	equ	0xFE8
  5613                           indf2	equ	0xFDF
  5614                           fsr2h	equ	0xFDA
  5615                           fsr2l	equ	0xFD9
  5616                           status	equ	0xFD8
  5617                           
  5618 ;; *************** function ___lbmod *****************
  5619 ;; Defined at:
  5620 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbmod.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  dividend        1    wreg     unsigned char 
  5623 ;;  divisor         1    0[BANK0 ] unsigned char 
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;  dividend        1    1[BANK0 ] unsigned char 
  5626 ;;  rem             1    3[BANK0 ] unsigned char 
  5627 ;;  counter         1    2[BANK0 ] unsigned char 
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      unsigned char 
  5630 ;; Registers used:
  5631 ;;		wreg, status,2, status,0
  5632 ;; Tracked objects:
  5633 ;;		On entry : F/0
  5634 ;;		On exit  : F/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5637 ;;      Params:         0       1       0       0       0       0       0       0       0
  5638 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5640 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5641 ;;Total ram usage:        4 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:   11
  5644 ;; This function calls:
  5645 ;;		Nothing
  5646 ;; This function is called by:
  5647 ;;		_moteApp_add8bToDataBuffer
  5648 ;;		_oled_putUint8
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text10
  5653  003E34                     __ptext10:
  5654                           	opt stack 0
  5655  003E34                     ___lbmod:
  5656                           	opt stack 16
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;incstack = 0
  5660                           ;___lbmod@dividend stored from wreg
  5661  003E34  6F61               	movwf	___lbmod@dividend& (0+255),b
  5662  003E36  0E08               	movlw	8
  5663  003E38  0100               	movlb	0	; () banked
  5664  003E3A  6F62               	movwf	___lbmod@counter& (0+255),b
  5665                           
  5666                           ; BSR set to: 0
  5667  003E3C  6B63               	clrf	___lbmod@rem& (0+255),b
  5668  003E3E                     l9601:
  5669                           
  5670                           ; BSR set to: 0
  5671  003E3E  90D8               	bcf	status,0,c
  5672  003E40  3561               	rlcf	___lbmod@dividend& (0+255),w,b
  5673  003E42  3563               	rlcf	___lbmod@rem& (0+255),w,b
  5674  003E44  6F63               	movwf	___lbmod@rem& (0+255),b
  5675                           
  5676                           ; BSR set to: 0
  5677  003E46  90D8               	bcf	status,0,c
  5678  003E48  3761               	rlcf	___lbmod@dividend& (0+255),f,b
  5679                           
  5680                           ; BSR set to: 0
  5681  003E4A  5160               	movf	___lbmod@divisor& (0+255),w,b
  5682  003E4C  5D63               	subwf	___lbmod@rem& (0+255),w,b
  5683  003E4E  E302               	bnc	l9609
  5684                           
  5685                           ; BSR set to: 0
  5686  003E50  5160               	movf	___lbmod@divisor& (0+255),w,b
  5687  003E52  5F63               	subwf	___lbmod@rem& (0+255),f,b
  5688  003E54                     l9609:
  5689                           
  5690                           ; BSR set to: 0
  5691  003E54  2F62               	decfsz	___lbmod@counter& (0+255),f,b
  5692  003E56  D7F3               	goto	l9601
  5693                           
  5694                           ; BSR set to: 0
  5695  003E58  5163               	movf	___lbmod@rem& (0+255),w,b
  5696                           
  5697                           ; BSR set to: 0
  5698  003E5A  0012               	return		;funcret
  5699  003E5C                     __end_of___lbmod:
  5700                           	opt stack 0
  5701                           tblptru	equ	0xFF8
  5702                           tblptrh	equ	0xFF7
  5703                           tblptrl	equ	0xFF6
  5704                           tablat	equ	0xFF5
  5705                           intcon	equ	0xFF2
  5706                           postinc0	equ	0xFEE
  5707                           wreg	equ	0xFE8
  5708                           indf2	equ	0xFDF
  5709                           fsr2h	equ	0xFDA
  5710                           fsr2l	equ	0xFD9
  5711                           status	equ	0xFD8
  5712                           
  5713 ;; *************** function ___lbdiv *****************
  5714 ;; Defined at:
  5715 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/lbdiv.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;  dividend        1    wreg     unsigned char 
  5718 ;;  divisor         1    0[BANK0 ] unsigned char 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;  dividend        1    1[BANK0 ] unsigned char 
  5721 ;;  quotient        1    3[BANK0 ] unsigned char 
  5722 ;;  counter         1    2[BANK0 ] unsigned char 
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  1    wreg      unsigned char 
  5725 ;; Registers used:
  5726 ;;		wreg, status,2, status,0
  5727 ;; Tracked objects:
  5728 ;;		On entry : F/0
  5729 ;;		On exit  : F/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5732 ;;      Params:         0       1       0       0       0       0       0       0       0
  5733 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5735 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5736 ;;Total ram usage:        4 bytes
  5737 ;; Hardware stack levels used:    1
  5738 ;; Hardware stack levels required when called:   11
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_moteApp_add8bToDataBuffer
  5743 ;;		_oled_putUint8
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text11
  5748  004060                     __ptext11:
  5749                           	opt stack 0
  5750  004060                     ___lbdiv:
  5751                           	opt stack 16
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;incstack = 0
  5755                           ;___lbdiv@dividend stored from wreg
  5756  004060  6F61               	movwf	___lbdiv@dividend& (0+255),b
  5757  004062  0100               	movlb	0	; () banked
  5758  004064  6B63               	clrf	___lbdiv@quotient& (0+255),b
  5759                           
  5760                           ; BSR set to: 0
  5761  004066  5160               	movf	___lbdiv@divisor& (0+255),w,b
  5762  004068  E014               	bz	l9593
  5763                           
  5764                           ; BSR set to: 0
  5765  00406A  0E01               	movlw	1
  5766  00406C  6F62               	movwf	___lbdiv@counter& (0+255),b
  5767  00406E  D003               	goto	l9581
  5768  004070                     l9577:
  5769                           
  5770                           ; BSR set to: 0
  5771  004070  90D8               	bcf	status,0,c
  5772  004072  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
  5773                           
  5774                           ; BSR set to: 0
  5775  004074  2B62               	incf	___lbdiv@counter& (0+255),f,b
  5776  004076                     l9581:
  5777                           
  5778                           ; BSR set to: 0
  5779  004076  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
  5780  004078  D7FB               	goto	l9577
  5781  00407A                     l9583:
  5782                           
  5783                           ; BSR set to: 0
  5784  00407A  90D8               	bcf	status,0,c
  5785  00407C  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
  5786  00407E  5160               	movf	___lbdiv@divisor& (0+255),w,b
  5787  004080  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
  5788  004082  E303               	bnc	l9589
  5789                           
  5790                           ; BSR set to: 0
  5791  004084  5160               	movf	___lbdiv@divisor& (0+255),w,b
  5792  004086  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
  5793                           
  5794                           ; BSR set to: 0
  5795  004088  8163               	bsf	___lbdiv@quotient& (0+255),0,b
  5796  00408A                     l9589:
  5797                           
  5798                           ; BSR set to: 0
  5799  00408A  90D8               	bcf	status,0,c
  5800  00408C  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
  5801                           
  5802                           ; BSR set to: 0
  5803  00408E  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
  5804  004090  D7F4               	goto	l9583
  5805  004092                     l9593:
  5806                           
  5807                           ; BSR set to: 0
  5808  004092  5163               	movf	___lbdiv@quotient& (0+255),w,b
  5809                           
  5810                           ; BSR set to: 0
  5811  004094  0012               	return		;funcret
  5812  004096                     __end_of___lbdiv:
  5813                           	opt stack 0
  5814                           tblptru	equ	0xFF8
  5815                           tblptrh	equ	0xFF7
  5816                           tblptrl	equ	0xFF6
  5817                           tablat	equ	0xFF5
  5818                           intcon	equ	0xFF2
  5819                           postinc0	equ	0xFEE
  5820                           wreg	equ	0xFE8
  5821                           indf2	equ	0xFDF
  5822                           fsr2h	equ	0xFDA
  5823                           fsr2l	equ	0xFD9
  5824                           status	equ	0xFD8
  5825                           
  5826 ;; *************** function _moteApp_add16bToDataBuffer *****************
  5827 ;; Defined at:
  5828 ;;		line 1137 in file "../Includes/Board/MOTEapp.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  number          2   12[BANK0 ] unsigned int 
  5831 ;;  bufferLocati    1   14[BANK0 ] unsigned char 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;		None
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      void 
  5836 ;; Registers used:
  5837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : F/0
  5840 ;;		On exit  : F/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5843 ;;      Params:         0       3       0       0       0       0       0       0       0
  5844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5846 ;;      Totals:         0       3       0       0       0       0       0       0       0
  5847 ;;Total ram usage:        3 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:   12
  5850 ;; This function calls:
  5851 ;;		___lwdiv
  5852 ;;		___lwmod
  5853 ;; This function is called by:
  5854 ;;		_moteRunningProcess
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           	psect	text12
  5859  005EFC                     __ptext12:
  5860                           	opt stack 0
  5861  005EFC                     _moteApp_add16bToDataBuffer:
  5862                           	opt stack 16
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;MOTEapp.c: 1139: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;incstack = 0
  5869  005EFC  0EDA               	movlw	low (_dataBuffer+4)
  5870  005EFE  256E               	addwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5871  005F00  6ED9               	movwf	fsr2l,c
  5872  005F02  6ADA               	clrf	fsr2h,c
  5873  005F04  0E01               	movlw	high (_dataBuffer+4)
  5874  005F06  22DA               	addwfc	fsr2h,f,c
  5875  005F08  C06C  F067         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5876  005F0C  C06D  F068         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5877  005F10  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5878  005F12  0E0A               	movlw	10
  5879  005F14  6F69               	movwf	___lwmod@divisor& (0+255),b
  5880  005F16  ECDD  F020         	call	___lwmod	;wreg free
  5881  005F1A  5167               	movf	?___lwmod& (0+255),w,b
  5882  005F1C  0F30               	addlw	48
  5883  005F1E  6EDF               	movwf	indf2,c
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;MOTEapp.c: 1140: number /= 10;
  5887  005F20  C06C  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5888  005F24  C06D  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5889  005F28  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5890  005F2A  0E0A               	movlw	10
  5891  005F2C  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5892  005F2E  EC21  F021         	call	___lwdiv	;wreg free
  5893  005F32  C060  F06C         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5894  005F36  C061  F06D         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;MOTEapp.c: 1141: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
  5898  005F3A  0ED9               	movlw	low (_dataBuffer+3)
  5899  005F3C  256E               	addwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5900  005F3E  6ED9               	movwf	fsr2l,c
  5901  005F40  6ADA               	clrf	fsr2h,c
  5902  005F42  0E01               	movlw	high (_dataBuffer+3)
  5903  005F44  22DA               	addwfc	fsr2h,f,c
  5904  005F46  C06C  F067         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5905  005F4A  C06D  F068         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5906  005F4E  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5907  005F50  0E0A               	movlw	10
  5908  005F52  6F69               	movwf	___lwmod@divisor& (0+255),b
  5909  005F54  ECDD  F020         	call	___lwmod	;wreg free
  5910  005F58  5167               	movf	?___lwmod& (0+255),w,b
  5911  005F5A  0F30               	addlw	48
  5912  005F5C  6EDF               	movwf	indf2,c
  5913                           
  5914                           ;MOTEapp.c: 1142: number /= 10;
  5915  005F5E  C06C  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5916  005F62  C06D  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5917  005F66  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5918  005F68  0E0A               	movlw	10
  5919  005F6A  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5920  005F6C  EC21  F021         	call	___lwdiv	;wreg free
  5921  005F70  C060  F06C         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5922  005F74  C061  F06D         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;MOTEapp.c: 1143: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
  5926  005F78  0ED8               	movlw	low (_dataBuffer+2)
  5927  005F7A  256E               	addwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5928  005F7C  6ED9               	movwf	fsr2l,c
  5929  005F7E  6ADA               	clrf	fsr2h,c
  5930  005F80  0E01               	movlw	high (_dataBuffer+2)
  5931  005F82  22DA               	addwfc	fsr2h,f,c
  5932  005F84  C06C  F067         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5933  005F88  C06D  F068         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5934  005F8C  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5935  005F8E  0E0A               	movlw	10
  5936  005F90  6F69               	movwf	___lwmod@divisor& (0+255),b
  5937  005F92  ECDD  F020         	call	___lwmod	;wreg free
  5938  005F96  5167               	movf	?___lwmod& (0+255),w,b
  5939  005F98  0F30               	addlw	48
  5940  005F9A  6EDF               	movwf	indf2,c
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;MOTEapp.c: 1144: number /= 10;
  5944  005F9C  C06C  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5945  005FA0  C06D  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5946  005FA4  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5947  005FA6  0E0A               	movlw	10
  5948  005FA8  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5949  005FAA  EC21  F021         	call	___lwdiv	;wreg free
  5950  005FAE  C060  F06C         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5951  005FB2  C061  F06D         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5952                           
  5953                           ;MOTEapp.c: 1145: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
  5954  005FB6  0ED7               	movlw	low (_dataBuffer+1)
  5955  005FB8  256E               	addwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5956  005FBA  6ED9               	movwf	fsr2l,c
  5957  005FBC  6ADA               	clrf	fsr2h,c
  5958  005FBE  0E01               	movlw	high (_dataBuffer+1)
  5959  005FC0  22DA               	addwfc	fsr2h,f,c
  5960  005FC2  C06C  F067         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5961  005FC6  C06D  F068         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5962  005FCA  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5963  005FCC  0E0A               	movlw	10
  5964  005FCE  6F69               	movwf	___lwmod@divisor& (0+255),b
  5965  005FD0  ECDD  F020         	call	___lwmod	;wreg free
  5966  005FD4  5167               	movf	?___lwmod& (0+255),w,b
  5967  005FD6  0F30               	addlw	48
  5968  005FD8  6EDF               	movwf	indf2,c
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;MOTEapp.c: 1146: number /= 10;
  5972  005FDA  C06C  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
  5973  005FDE  C06D  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
  5974  005FE2  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  5975  005FE4  0E0A               	movlw	10
  5976  005FE6  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5977  005FE8  EC21  F021         	call	___lwdiv	;wreg free
  5978  005FEC  C060  F06C         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
  5979  005FF0  C061  F06D         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;MOTEapp.c: 1147: dataBuffer[bufferLocation] = '0' + (number % 10);
  5983  005FF4  0ED6               	movlw	low _dataBuffer
  5984  005FF6  256E               	addwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
  5985  005FF8  6ED9               	movwf	fsr2l,c
  5986  005FFA  6ADA               	clrf	fsr2h,c
  5987  005FFC  0E01               	movlw	high _dataBuffer
  5988  005FFE  22DA               	addwfc	fsr2h,f,c
  5989  006000  C06C  F067         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
  5990  006004  C06D  F068         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
  5991  006008  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  5992  00600A  0E0A               	movlw	10
  5993  00600C  6F69               	movwf	___lwmod@divisor& (0+255),b
  5994  00600E  ECDD  F020         	call	___lwmod	;wreg free
  5995  006012  5167               	movf	?___lwmod& (0+255),w,b
  5996  006014  0F30               	addlw	48
  5997  006016  6EDF               	movwf	indf2,c
  5998                           
  5999                           ; BSR set to: 0
  6000  006018  0012               	return		;funcret
  6001  00601A                     __end_of_moteApp_add16bToDataBuffer:
  6002                           	opt stack 0
  6003                           tblptru	equ	0xFF8
  6004                           tblptrh	equ	0xFF7
  6005                           tblptrl	equ	0xFF6
  6006                           tablat	equ	0xFF5
  6007                           intcon	equ	0xFF2
  6008                           postinc0	equ	0xFEE
  6009                           wreg	equ	0xFE8
  6010                           indf2	equ	0xFDF
  6011                           fsr2h	equ	0xFDA
  6012                           fsr2l	equ	0xFD9
  6013                           status	equ	0xFD8
  6014                           
  6015 ;; *************** function _moteApp_GoToSleep *****************
  6016 ;; Defined at:
  6017 ;;		line 1021 in file "../Includes/Board/MOTEapp.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;		None
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  status          1    0        unsigned char 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  1    wreg      unsigned char 
  6024 ;; Registers used:
  6025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : F/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6031 ;;      Params:         0       0       0       0       0       0       0       0       0
  6032 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6034 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6035 ;;Total ram usage:        1 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; Hardware stack levels required when called:   18
  6038 ;; This function calls:
  6039 ;;		_EUSART_FlushBuffer
  6040 ;;		_EUSART_Initialize
  6041 ;;		_PIN_MANAGER_Initialize
  6042 ;;		_modemResync
  6043 ;;		_modemSleep
  6044 ;;		_oled_displayOff
  6045 ;;		_oled_init
  6046 ;; This function is called by:
  6047 ;;		_moteRunningProcess
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           	psect	text13
  6052  0046FC                     __ptext13:
  6053                           	opt stack 0
  6054  0046FC                     _moteApp_GoToSleep:
  6055                           	opt stack 10
  6056  0046FC                     l576:
  6057  0046FC  A282               	btfss	3970,1,c	;volatile
  6058  0046FE  D7FE               	goto	l576
  6059                           
  6060                           ;MOTEapp.c: 1025: modemSleep();
  6061  004700  EC89  F01E         	call	_modemSleep	;wreg free
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;MOTEapp.c: 1026: oled_displayOff(1);
  6065  004704  0E01               	movlw	1
  6066  004706  ECDD  F01D         	call	_oled_displayOff
  6067                           
  6068                           ;MOTEapp.c: 1027: ADCON0bits.ADON = 0;
  6069  00470A  90C2               	bcf	4034,0,c	;volatile
  6070                           
  6071                           ;MOTEapp.c: 1028: INTCONbits.GIE = 0;
  6072  00470C  9EF2               	bcf	intcon,7,c	;volatile
  6073                           
  6074                           ;MOTEapp.c: 1029: GIE = 0;
  6075  00470E  9EF2               	bcf	intcon,7,c	;volatile
  6076                           
  6077                           ;MOTEapp.c: 1030: PEIE = 0;
  6078  004710  9CF2               	bcf	intcon,6,c	;volatile
  6079                           
  6080                           ;MOTEapp.c: 1032: ANSELAbits.ANSA0 = 1;
  6081  004712  010F               	movlb	15	; () banked
  6082  004714  815B               	bsf	91,0,b	;volatile
  6083                           
  6084                           ; BSR set to: 15
  6085                           ;MOTEapp.c: 1034: PIE2bits.C1IE = 1;
  6086  004716  8CA0               	bsf	4000,6,c	;volatile
  6087                           
  6088                           ; BSR set to: 15
  6089                           ;MOTEapp.c: 1035: IOCCbits.IOCC0 = 1;
  6090  004718  8087               	bsf	3975,0,c	;volatile
  6091                           
  6092                           ; BSR set to: 15
  6093                           ;MOTEapp.c: 1036: IOCCbits.IOCC1 = 1;
  6094  00471A  8287               	bsf	3975,1,c	;volatile
  6095                           
  6096                           ; BSR set to: 15
  6097                           ;MOTEapp.c: 1037: IOCCbits.IOCC2 = 1;
  6098  00471C  8487               	bsf	3975,2,c	;volatile
  6099                           
  6100                           ; BSR set to: 15
  6101                           ;MOTEapp.c: 1038: INTCONbits.IOCIE = 1;
  6102  00471E  86F2               	bsf	intcon,3,c	;volatile
  6103                           
  6104                           ; BSR set to: 15
  6105  004720  5082               	movf	3970,w,c	;volatile
  6106                           
  6107                           ; BSR set to: 15
  6108  004722  5082               	movf	3970,w,c	;volatile
  6109                           
  6110                           ; BSR set to: 15
  6111  004724  5082               	movf	3970,w,c	;volatile
  6112                           
  6113                           ; BSR set to: 15
  6114                           ;MOTEapp.c: 1046: }
  6115                           ;MOTEapp.c: 1047: INTCONbits.IOCIF = 0;
  6116  004726  90F2               	bcf	intcon,0,c	;volatile
  6117                           
  6118                           ; BSR set to: 15
  6119                           ;MOTEapp.c: 1048: PIR2bits.C1IF = 0;
  6120  004728  9CA1               	bcf	4001,6,c	;volatile
  6121                           
  6122                           ; BSR set to: 15
  6123                           ;MOTEapp.c: 1049: __nop();
  6124  00472A  F000               	nop	
  6125  00472C  0003               	sleep		;# 
  6126                           
  6127                           ;MOTEapp.c: 1051: __nop();
  6128  00472E  F000               	nop	
  6129                           
  6130                           ;MOTEapp.c: 1054: EUSART_FlushBuffer();
  6131  004730  EC9A  F01F         	call	_EUSART_FlushBuffer	;wreg free
  6132                           
  6133                           ; BSR set to: 1
  6134                           ;MOTEapp.c: 1056: INTCONbits.IOCIE = 0;
  6135  004734  96F2               	bcf	intcon,3,c	;volatile
  6136                           
  6137                           ; BSR set to: 1
  6138                           ;MOTEapp.c: 1057: IOCCbits.IOCC0 = 0;
  6139  004736  9087               	bcf	3975,0,c	;volatile
  6140                           
  6141                           ; BSR set to: 1
  6142                           ;MOTEapp.c: 1058: IOCCbits.IOCC1 = 0;
  6143  004738  9287               	bcf	3975,1,c	;volatile
  6144                           
  6145                           ; BSR set to: 1
  6146                           ;MOTEapp.c: 1059: IOCCbits.IOCC2 = 0;
  6147  00473A  9487               	bcf	3975,2,c	;volatile
  6148                           
  6149                           ; BSR set to: 1
  6150                           ;MOTEapp.c: 1060: PIE2bits.C1IE = 0;
  6151  00473C  9CA0               	bcf	4000,6,c	;volatile
  6152                           
  6153                           ; BSR set to: 1
  6154                           ;MOTEapp.c: 1061: GIE = 1;
  6155  00473E  8EF2               	bsf	intcon,7,c	;volatile
  6156                           
  6157                           ; BSR set to: 1
  6158                           ;MOTEapp.c: 1063: PIN_MANAGER_Initialize();
  6159  004740  EC91  F021         	call	_PIN_MANAGER_Initialize	;wreg free
  6160                           
  6161                           ; BSR set to: 15
  6162                           ;MOTEapp.c: 1064: EUSART_Initialize();
  6163  004744  ECB1  F01F         	call	_EUSART_Initialize	;wreg free
  6164                           
  6165                           ; BSR set to: 1
  6166                           ;MOTEapp.c: 1066: if (INTCONbits.IOCIF)
  6167  004748  A0F2               	btfss	intcon,0,c	;volatile
  6168  00474A  D002               	goto	l10079
  6169                           
  6170                           ; BSR set to: 1
  6171                           ;MOTEapp.c: 1067: {
  6172                           ;MOTEapp.c: 1068: INTCONbits.IOCIF = 0;
  6173  00474C  90F2               	bcf	intcon,0,c	;volatile
  6174                           
  6175                           ; BSR set to: 1
  6176                           ;MOTEapp.c: 1070: }
  6177  00474E  D002               	goto	l10083
  6178  004750                     l10079:
  6179                           
  6180                           ; BSR set to: 1
  6181                           ;MOTEapp.c: 1076: else
  6182                           ;MOTEapp.c: 1077: {
  6183                           ;MOTEapp.c: 1078: secTicker = 10;
  6184  004750  0E0A               	movlw	10
  6185  004752  6E29               	movwf	_secTicker,c
  6186  004754                     l10083:
  6187                           
  6188                           ; BSR set to: 1
  6189                           ;MOTEapp.c: 1080: }
  6190                           ;MOTEapp.c: 1081: ANSELAbits.ANSA0 = 0;
  6191  004754  010F               	movlb	15	; () banked
  6192  004756  915B               	bcf	91,0,b	;volatile
  6193                           
  6194                           ; BSR set to: 15
  6195                           ;MOTEapp.c: 1082: oled_displayOff(0);
  6196  004758  0E00               	movlw	0
  6197  00475A  ECDD  F01D         	call	_oled_displayOff
  6198                           
  6199                           ;MOTEapp.c: 1083: oled_init();
  6200  00475E  EC98  F01E         	call	_oled_init	;wreg free
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;MOTEapp.c: 1085: modemResync();
  6204  004762  EFE5  F022         	goto	_modemResync	;wreg free
  6205  004766                     __end_of_moteApp_GoToSleep:
  6206                           	opt stack 0
  6207                           tblptru	equ	0xFF8
  6208                           tblptrh	equ	0xFF7
  6209                           tblptrl	equ	0xFF6
  6210                           tablat	equ	0xFF5
  6211                           intcon	equ	0xFF2
  6212                           postinc0	equ	0xFEE
  6213                           wreg	equ	0xFE8
  6214                           indf2	equ	0xFDF
  6215                           fsr2h	equ	0xFDA
  6216                           fsr2l	equ	0xFD9
  6217                           status	equ	0xFD8
  6218                           
  6219 ;; *************** function _oled_displayOff *****************
  6220 ;; Defined at:
  6221 ;;		line 394 in file "../Includes/Drivers/SSD1306oLED.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;  state           1    wreg     unsigned char 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  state           1    2[BANK0 ] unsigned char 
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  1    wreg      void 
  6228 ;; Registers used:
  6229 ;;		wreg, status,2, status,0, cstack
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6235 ;;      Params:         0       0       0       0       0       0       0       0       0
  6236 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6238 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6239 ;;Total ram usage:        1 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:   13
  6242 ;; This function calls:
  6243 ;;		_oled_writeCommand
  6244 ;; This function is called by:
  6245 ;;		_moteApp_GoToSleep
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           	psect	text14
  6250  003BBA                     __ptext14:
  6251                           	opt stack 0
  6252  003BBA                     _oled_displayOff:
  6253                           	opt stack 14
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;incstack = 0
  6257                           ;oled_displayOff@state stored from wreg
  6258  003BBA  0100               	movlb	0	; () banked
  6259  003BBC  6F62               	movwf	oled_displayOff@state& (0+255),b
  6260                           
  6261                           ;SSD1306oLED.c: 396: LATBbits.LATB4 = 0;
  6262  003BBE  988A               	bcf	3978,4,c	;volatile
  6263                           
  6264                           ;SSD1306oLED.c: 397: oled_writeCommand(0xAF - state);
  6265  003BC0  5162               	movf	oled_displayOff@state& (0+255),w,b
  6266  003BC2  08AF               	sublw	175
  6267  003BC4  ECA2  F01D         	call	_oled_writeCommand
  6268                           
  6269                           ;SSD1306oLED.c: 398: LATBbits.LATB4 = 1;
  6270  003BC8  888A               	bsf	3978,4,c	;volatile
  6271  003BCA  0012               	return		;funcret
  6272  003BCC                     __end_of_oled_displayOff:
  6273                           	opt stack 0
  6274                           tblptru	equ	0xFF8
  6275                           tblptrh	equ	0xFF7
  6276                           tblptrl	equ	0xFF6
  6277                           tablat	equ	0xFF5
  6278                           intcon	equ	0xFF2
  6279                           postinc0	equ	0xFEE
  6280                           wreg	equ	0xFE8
  6281                           indf2	equ	0xFDF
  6282                           fsr2h	equ	0xFDA
  6283                           fsr2l	equ	0xFD9
  6284                           status	equ	0xFD8
  6285                           
  6286 ;; *************** function _modemSleep *****************
  6287 ;; Defined at:
  6288 ;;		line 160 in file "../Includes/Board/MOTEapp.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;		None
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      void 
  6295 ;; Registers used:
  6296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : F/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6302 ;;      Params:         0       0       0       0       0       0       0       0       0
  6303 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6305 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6306 ;;Total ram usage:        0 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:   14
  6309 ;; This function calls:
  6310 ;;		_moteApp_delayms
  6311 ;;		_sendCommand
  6312 ;; This function is called by:
  6313 ;;		_moteApp_GoToSleep
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text15
  6318  003D12                     __ptext15:
  6319                           	opt stack 0
  6320  003D12                     _modemSleep:
  6321                           	opt stack 13
  6322                           
  6323                           ;MOTEapp.c: 162: sendCommand("sys sleep 999999999");
  6324                           
  6325                           ;incstack = 0
  6326  003D12  0E22               	movlw	low STR_22
  6327  003D14  0100               	movlb	0	; () banked
  6328  003D16  6F61               	movwf	sendCommand@string& (0+255),b
  6329  003D18  0E7C               	movlw	high STR_22
  6330  003D1A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  6331  003D1C  EC35  F022         	call	_sendCommand	;wreg free
  6332  003D20                     l316:
  6333  003D20  B89D               	btfsc	3997,4,c	;volatile
  6334  003D22  D7FE               	goto	l316
  6335                           
  6336                           ;MOTEapp.c: 165: moteApp_delayms(20);
  6337  003D24  0100               	movlb	0	; () banked
  6338  003D26  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6339  003D28  0E14               	movlw	20
  6340  003D2A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  6341  003D2C  EF06  F01F         	goto	_moteApp_delayms	;wreg free
  6342  003D30                     __end_of_modemSleep:
  6343                           	opt stack 0
  6344                           tblptru	equ	0xFF8
  6345                           tblptrh	equ	0xFF7
  6346                           tblptrl	equ	0xFF6
  6347                           tablat	equ	0xFF5
  6348                           intcon	equ	0xFF2
  6349                           postinc0	equ	0xFEE
  6350                           wreg	equ	0xFE8
  6351                           indf2	equ	0xFDF
  6352                           fsr2h	equ	0xFDA
  6353                           fsr2l	equ	0xFD9
  6354                           status	equ	0xFD8
  6355                           
  6356 ;; *************** function _modemResync *****************
  6357 ;; Defined at:
  6358 ;;		line 123 in file "../Includes/Board/MOTEapp.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;		None
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
  6363 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
  6364 ;; Return value:  Size  Location     Type
  6365 ;;                  1    wreg      void 
  6366 ;; Registers used:
  6367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6368 ;; Tracked objects:
  6369 ;;		On entry : F/0
  6370 ;;		On exit  : F/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6373 ;;      Params:         0       0       0       0       0       0       0       0       0
  6374 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6375 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6376 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6377 ;;Total ram usage:        3 bytes
  6378 ;; Hardware stack levels used:    1
  6379 ;; Hardware stack levels required when called:   14
  6380 ;; This function calls:
  6381 ;;		_MOTEapp_getModemResponse
  6382 ;;		_moteApp_delayms
  6383 ;;		_sendCommand
  6384 ;; This function is called by:
  6385 ;;		_main
  6386 ;;		_moteApp_GoToSleep
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text16
  6391  0045CA                     __ptext16:
  6392                           	opt stack 0
  6393  0045CA                     _modemResync:
  6394                           	opt stack 13
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;MOTEapp.c: 125: bool escapeEvent = 0;
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;incstack = 0
  6401  0045CA  6B67               	clrf	modemResync@escapeEvent& (0+255),b
  6402                           
  6403                           ;MOTEapp.c: 126: uint16_t escapeCounter = 0;
  6404  0045CC  6B65               	clrf	modemResync@escapeCounter& (0+255),b
  6405  0045CE  6B66               	clrf	(modemResync@escapeCounter+1)& (0+255),b
  6406                           
  6407                           ;MOTEapp.c: 134: TXSTAbits.TXEN = 0;
  6408  0045D0  9AAC               	bcf	4012,5,c	;volatile
  6409                           
  6410                           ;MOTEapp.c: 135: LATCbits.LATC6 = 0;
  6411  0045D2  9C8B               	bcf	3979,6,c	;volatile
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;MOTEapp.c: 136: moteApp_delayms(10);
  6415  0045D4  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6416  0045D6  0E0A               	movlw	10
  6417  0045D8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  6418  0045DA  EC06  F01F         	call	_moteApp_delayms	;wreg free
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;MOTEapp.c: 141: TXSTAbits.TXEN = 1;
  6422  0045DE  8AAC               	bsf	4012,5,c	;volatile
  6423                           
  6424                           ;MOTEapp.c: 142: moteApp_delayms(5);
  6425  0045E0  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6426  0045E2  0E05               	movlw	5
  6427  0045E4  6F60               	movwf	moteApp_delayms@length& (0+255),b
  6428  0045E6  EC06  F01F         	call	_moteApp_delayms	;wreg free
  6429                           
  6430                           ; BSR set to: 0
  6431                           ;MOTEapp.c: 144: TXREG = 0x55;
  6432  0045EA  0E55               	movlw	85
  6433  0045EC  6EAD               	movwf	4013,c	;volatile
  6434  0045EE                     l304:
  6435                           
  6436                           ; BSR set to: 0
  6437  0045EE  A2AC               	btfss	4012,1,c	;volatile
  6438  0045F0  D7FE               	goto	l304
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;MOTEapp.c: 148: sendCommand("z");
  6442  0045F2  0EFD               	movlw	low STR_21
  6443  0045F4  6F61               	movwf	sendCommand@string& (0+255),b
  6444  0045F6  0E7F               	movlw	high STR_21
  6445  0045F8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  6446  0045FA  EC35  F022         	call	_sendCommand	;wreg free
  6447                           
  6448                           ;MOTEapp.c: 150: moteApp_delayms(40);
  6449  0045FE  0100               	movlb	0	; () banked
  6450  004600  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  6451  004602  0E28               	movlw	40
  6452  004604  6F60               	movwf	moteApp_delayms@length& (0+255),b
  6453  004606  EC06  F01F         	call	_moteApp_delayms	;wreg free
  6454                           
  6455                           ;MOTEapp.c: 151: while (escapeEvent)
  6456  00460A  D00E               	goto	l307
  6457  00460C                     l9435:
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;MOTEapp.c: 152: {
  6461                           ;MOTEapp.c: 153: if(MOTEapp_getModemResponse())
  6462  00460C  EC46  F021         	call	_MOTEapp_getModemResponse	;wreg free
  6463  004610  0900               	iorlw	0
  6464  004612  E003               	bz	l9439
  6465  004614                     l9437:
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;MOTEapp.c: 154: escapeEvent = 1;
  6469  004614  0E01               	movlw	1
  6470  004616  6F67               	movwf	modemResync@escapeEvent& (0+255),b
  6471  004618  D007               	goto	l307
  6472  00461A                     l9439:
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;MOTEapp.c: 155: else if (++escapeCounter > 5000)
  6476  00461A  4B65               	infsnz	modemResync@escapeCounter& (0+255),f,b
  6477  00461C  2B66               	incf	(modemResync@escapeCounter+1)& (0+255),f,b
  6478  00461E  0E89               	movlw	137
  6479  004620  5D65               	subwf	modemResync@escapeCounter& (0+255),w,b
  6480  004622  0E13               	movlw	19
  6481  004624  5966               	subwfb	(modemResync@escapeCounter+1)& (0+255),w,b
  6482  004626  E2F6               	bc	l9437
  6483  004628                     l307:
  6484                           
  6485                           ; BSR set to: 0
  6486  004628  5167               	movf	modemResync@escapeEvent& (0+255),w,b
  6487  00462A  E1F0               	bnz	l9435
  6488                           
  6489                           ; BSR set to: 0
  6490  00462C  0012               	return		;funcret
  6491  00462E                     __end_of_modemResync:
  6492                           	opt stack 0
  6493                           tblptru	equ	0xFF8
  6494                           tblptrh	equ	0xFF7
  6495                           tblptrl	equ	0xFF6
  6496                           tablat	equ	0xFF5
  6497                           intcon	equ	0xFF2
  6498                           postinc0	equ	0xFEE
  6499                           wreg	equ	0xFE8
  6500                           indf2	equ	0xFDF
  6501                           fsr2h	equ	0xFDA
  6502                           fsr2l	equ	0xFD9
  6503                           status	equ	0xFD8
  6504                           
  6505 ;; *************** function _MOTEapp_getModemResponse *****************
  6506 ;; Defined at:
  6507 ;;		line 921 in file "../Includes/Board/MOTEapp.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;  bufferByte      1    2[BANK0 ] unsigned char 
  6512 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  1    wreg      unsigned char 
  6515 ;; Registers used:
  6516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6517 ;; Tracked objects:
  6518 ;;		On entry : D/2
  6519 ;;		On exit  : F/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6522 ;;      Params:         0       0       0       0       0       0       0       0       0
  6523 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6524 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6525 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6526 ;;Total ram usage:        2 bytes
  6527 ;; Hardware stack levels used:    1
  6528 ;; Hardware stack levels required when called:   12
  6529 ;; This function calls:
  6530 ;;		_EUSART_Read
  6531 ;; This function is called by:
  6532 ;;		_modemResync
  6533 ;;		_moteHandler
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text17
  6538  00428C                     __ptext17:
  6539                           	opt stack 0
  6540  00428C                     _MOTEapp_getModemResponse:
  6541                           	opt stack 14
  6542                           
  6543                           ;MOTEapp.c: 923: bool terminatorReceived = 0;
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;incstack = 0
  6547  00428C  0100               	movlb	0	; () banked
  6548  00428E  6B61               	clrf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;MOTEapp.c: 924: if ((eusartRxCount))
  6552  004290  5022               	movf	_eusartRxCount,w,c	;volatile
  6553  004292  E01F               	bz	l9337
  6554                           
  6555                           ; BSR set to: 0
  6556                           ;MOTEapp.c: 927: bufferByte = EUSART_Read();
  6557                           
  6558                           ; BSR set to: 0
  6559  004294  ECE1  F01F         	call	_EUSART_Read	;wreg free
  6560  004298  6F62               	movwf	MOTEapp_getModemResponse@bufferByte& (0+255),b
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;MOTEapp.c: 929: if (bufferByte == 0x0D)
  6564  00429A  0E0D               	movlw	13
  6565  00429C  1962               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
  6566  00429E  E10B               	bnz	l9329
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;MOTEapp.c: 930: {
  6570                           ;MOTEapp.c: 931: modemResonseBuffer[modemBufferIndex] = 0x00;
  6571  0042A0  0E96               	movlw	low _modemResonseBuffer
  6572  0042A2  2426               	addwf	_modemBufferIndex,w,c
  6573  0042A4  6ED9               	movwf	fsr2l,c
  6574  0042A6  6ADA               	clrf	fsr2h,c
  6575  0042A8  0E01               	movlw	high _modemResonseBuffer
  6576  0042AA  22DA               	addwfc	fsr2h,f,c
  6577  0042AC  6ADF               	clrf	indf2,c
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;MOTEapp.c: 932: terminatorReceived = 1;
  6581  0042AE  0E01               	movlw	1
  6582  0042B0  6F61               	movwf	MOTEapp_getModemResponse@terminatorReceived& (0+255),b
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;MOTEapp.c: 933: modemBufferIndex = 0;
  6586  0042B2  6A26               	clrf	_modemBufferIndex,c
  6587                           
  6588                           ;MOTEapp.c: 934: }
  6589  0042B4  D00E               	goto	l9337
  6590  0042B6                     l9329:
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;MOTEapp.c: 935: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
  6594  0042B6  5162               	movf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
  6595  0042B8  E00C               	bz	l9337
  6596                           
  6597                           ; BSR set to: 0
  6598  0042BA  0E0A               	movlw	10
  6599  0042BC  1962               	xorwf	MOTEapp_getModemResponse@bufferByte& (0+255),w,b
  6600  0042BE  E009               	bz	l9337
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;MOTEapp.c: 939: else
  6604                           ;MOTEapp.c: 940: {
  6605                           ;MOTEapp.c: 941: modemResonseBuffer[modemBufferIndex] = bufferByte;
  6606  0042C0  0E96               	movlw	low _modemResonseBuffer
  6607  0042C2  2426               	addwf	_modemBufferIndex,w,c
  6608  0042C4  6ED9               	movwf	fsr2l,c
  6609  0042C6  6ADA               	clrf	fsr2h,c
  6610  0042C8  0E01               	movlw	high _modemResonseBuffer
  6611  0042CA  22DA               	addwfc	fsr2h,f,c
  6612  0042CC  C062  FFDF         	movff	MOTEapp_getModemResponse@bufferByte,indf2
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;MOTEapp.c: 943: modemBufferIndex++;
  6616  0042D0  2A26               	incf	_modemBufferIndex,f,c
  6617  0042D2                     l9337:
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;MOTEapp.c: 944: }
  6621                           ;MOTEapp.c: 945: }
  6622                           ;MOTEapp.c: 946: return terminatorReceived;
  6623  0042D2  5161               	movf	MOTEapp_getModemResponse@terminatorReceived& (0+255),w,b
  6624                           
  6625                           ; BSR set to: 0
  6626  0042D4  0012               	return		;funcret
  6627  0042D6                     __end_of_MOTEapp_getModemResponse:
  6628                           	opt stack 0
  6629                           tblptru	equ	0xFF8
  6630                           tblptrh	equ	0xFF7
  6631                           tblptrl	equ	0xFF6
  6632                           tablat	equ	0xFF5
  6633                           intcon	equ	0xFF2
  6634                           postinc0	equ	0xFEE
  6635                           wreg	equ	0xFE8
  6636                           indf2	equ	0xFDF
  6637                           fsr2h	equ	0xFDA
  6638                           fsr2l	equ	0xFD9
  6639                           status	equ	0xFD8
  6640                           
  6641 ;; *************** function _EUSART_Initialize *****************
  6642 ;; Defined at:
  6643 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;		None
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;		None
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      void 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2
  6652 ;; Tracked objects:
  6653 ;;		On entry : F/F
  6654 ;;		On exit  : F/1
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6657 ;;      Params:         0       0       0       0       0       0       0       0       0
  6658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6660 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6661 ;;Total ram usage:        0 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; Hardware stack levels required when called:   11
  6664 ;; This function calls:
  6665 ;;		Nothing
  6666 ;; This function is called by:
  6667 ;;		_moteApp_GoToSleep
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text18
  6672  003F62                     __ptext18:
  6673                           	opt stack 0
  6674  003F62                     _EUSART_Initialize:
  6675                           	opt stack 16
  6676                           
  6677                           ; BSR set to: 15
  6678                           ;eusart.c: 80: PIE1bits.RCIE = 0;
  6679                           
  6680                           ; BSR set to: 0
  6681                           ;incstack = 0
  6682  003F62  9A9D               	bcf	3997,5,c	;volatile
  6683                           
  6684                           ;eusart.c: 81: PIE1bits.TXIE = 0;
  6685  003F64  989D               	bcf	3997,4,c	;volatile
  6686                           
  6687                           ; BSR set to: 15
  6688                           ;eusart.c: 85: BAUDCON = 0x48;
  6689  003F66  0E48               	movlw	72
  6690  003F68  6EB8               	movwf	4024,c	;volatile
  6691                           
  6692                           ;eusart.c: 88: RCSTA = 0x90;
  6693  003F6A  0E90               	movlw	144
  6694  003F6C  6EAB               	movwf	4011,c	;volatile
  6695                           
  6696                           ;eusart.c: 91: TXSTA = 0x26;
  6697  003F6E  0E26               	movlw	38
  6698  003F70  6EAC               	movwf	4012,c	;volatile
  6699                           
  6700                           ;eusart.c: 95: SPBRG = 0x71;
  6701  003F72  0E71               	movlw	113
  6702  003F74  6EAF               	movwf	4015,c	;volatile
  6703                           
  6704                           ;eusart.c: 100: SPBRGH = 0x02;
  6705  003F76  0E02               	movlw	2
  6706  003F78  6EB0               	movwf	4016,c	;volatile
  6707                           
  6708                           ; BSR set to: 15
  6709                           ;eusart.c: 103: eusartTxHead = 0;
  6710  003F7A  6A24               	clrf	_eusartTxHead,c
  6711                           
  6712                           ; BSR set to: 15
  6713                           ;eusart.c: 104: eusartTxTail = 0;
  6714  003F7C  6A25               	clrf	_eusartTxTail,c
  6715                           
  6716                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  6717  003F7E  0E40               	movlw	64
  6718  003F80  6E23               	movwf	_eusartTxBufferRemaining,c	;volatile
  6719                           
  6720                           ; BSR set to: 15
  6721                           ;eusart.c: 107: eusartRxHead = 0;
  6722  003F82  0101               	movlb	1	; () banked
  6723  003F84  6B4E               	clrf	_eusartRxHead& (0+255),b
  6724                           
  6725                           ; BSR set to: 1
  6726                           ;eusart.c: 108: eusartRxTail = 0;
  6727  003F86  6B4F               	clrf	_eusartRxTail& (0+255),b
  6728                           
  6729                           ; BSR set to: 1
  6730                           ;eusart.c: 109: eusartRxCount = 0;
  6731  003F88  6A22               	clrf	_eusartRxCount,c	;volatile
  6732                           
  6733                           ; BSR set to: 1
  6734                           ;eusart.c: 112: PIE1bits.RCIE = 1;
  6735  003F8A  8A9D               	bsf	3997,5,c	;volatile
  6736                           
  6737                           ; BSR set to: 1
  6738                           ;eusart.c: 114: RCSTAbits.CREN = 1;
  6739  003F8C  88AB               	bsf	4011,4,c	;volatile
  6740                           
  6741                           ; BSR set to: 1
  6742  003F8E  0012               	return		;funcret
  6743  003F90                     __end_of_EUSART_Initialize:
  6744                           	opt stack 0
  6745                           tblptru	equ	0xFF8
  6746                           tblptrh	equ	0xFF7
  6747                           tblptrl	equ	0xFF6
  6748                           tablat	equ	0xFF5
  6749                           intcon	equ	0xFF2
  6750                           postinc0	equ	0xFEE
  6751                           wreg	equ	0xFE8
  6752                           indf2	equ	0xFDF
  6753                           fsr2h	equ	0xFDA
  6754                           fsr2l	equ	0xFD9
  6755                           status	equ	0xFD8
  6756                           
  6757 ;; *************** function _EUSART_FlushBuffer *****************
  6758 ;; Defined at:
  6759 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;		None
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;  index           1    0[BANK0 ] unsigned char 
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  1    wreg      void 
  6766 ;; Registers used:
  6767 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/F
  6770 ;;		On exit  : F/1
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6773 ;;      Params:         0       0       0       0       0       0       0       0       0
  6774 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6776 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6777 ;;Total ram usage:        1 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; Hardware stack levels required when called:   11
  6780 ;; This function calls:
  6781 ;;		Nothing
  6782 ;; This function is called by:
  6783 ;;		_moteApp_GoToSleep
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           	psect	text19
  6788  003F34                     __ptext19:
  6789                           	opt stack 0
  6790  003F34                     _EUSART_FlushBuffer:
  6791                           	opt stack 16
  6792                           
  6793                           ;eusart.c: 204: uint8_t index;
  6794                           ;eusart.c: 205: for (index=0; index < 64; index++)
  6795                           
  6796                           ; BSR set to: 1
  6797                           ;incstack = 0
  6798  003F34  0100               	movlb	0	; () banked
  6799  003F36  6B60               	clrf	EUSART_FlushBuffer@index& (0+255),b
  6800  003F38                     l9497:
  6801                           
  6802                           ; BSR set to: 0
  6803                           ;eusart.c: 206: {
  6804                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
  6805  003F38  0E00               	movlw	low _eusartRxBuffer
  6806  003F3A  2560               	addwf	EUSART_FlushBuffer@index& (0+255),w,b
  6807  003F3C  6ED9               	movwf	fsr2l,c
  6808  003F3E  6ADA               	clrf	fsr2h,c
  6809  003F40  0E02               	movlw	high _eusartRxBuffer
  6810  003F42  22DA               	addwfc	fsr2h,f,c
  6811  003F44  6ADF               	clrf	indf2,c
  6812                           
  6813                           ; BSR set to: 0
  6814  003F46  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
  6815                           
  6816                           ; BSR set to: 0
  6817  003F48  0E3F               	movlw	63
  6818  003F4A  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
  6819  003F4C  D7F5               	goto	l9497
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;eusart.c: 208: }
  6823                           ;eusart.c: 209: eusartRxHead = 0;
  6824  003F4E  0101               	movlb	1	; () banked
  6825  003F50  6B4E               	clrf	_eusartRxHead& (0+255),b
  6826                           
  6827                           ;eusart.c: 210: eusartRxTail = 0;
  6828  003F52  6B4F               	clrf	_eusartRxTail& (0+255),b
  6829                           
  6830                           ;eusart.c: 211: eusartRxCount = 0;
  6831  003F54  6A22               	clrf	_eusartRxCount,c	;volatile
  6832                           
  6833                           ;eusart.c: 213: PIE1bits.TXIE = 0;
  6834  003F56  989D               	bcf	3997,4,c	;volatile
  6835                           
  6836                           ;eusart.c: 214: eusartTxHead = 0;
  6837  003F58  6A24               	clrf	_eusartTxHead,c
  6838                           
  6839                           ;eusart.c: 215: eusartTxTail = 0;
  6840  003F5A  6A25               	clrf	_eusartTxTail,c
  6841                           
  6842                           ; BSR set to: 1
  6843                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  6844  003F5C  0E40               	movlw	64
  6845  003F5E  6E23               	movwf	_eusartTxBufferRemaining,c	;volatile
  6846                           
  6847                           ; BSR set to: 1
  6848  003F60  0C40               	retlw	64	;funcret
  6849  003F62                     __end_of_EUSART_FlushBuffer:
  6850                           	opt stack 0
  6851                           tblptru	equ	0xFF8
  6852                           tblptrh	equ	0xFF7
  6853                           tblptrl	equ	0xFF6
  6854                           tablat	equ	0xFF5
  6855                           intcon	equ	0xFF2
  6856                           postinc0	equ	0xFEE
  6857                           wreg	equ	0xFE8
  6858                           indf2	equ	0xFDF
  6859                           fsr2h	equ	0xFDA
  6860                           fsr2l	equ	0xFD9
  6861                           status	equ	0xFD8
  6862                           
  6863 ;; *************** function _TMR2_ReadTimer *****************
  6864 ;; Defined at:
  6865 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;		None
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  readVal         1    0[BANK0 ] unsigned char 
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  1    wreg      unsigned char 
  6872 ;; Registers used:
  6873 ;;		wreg, status,2
  6874 ;; Tracked objects:
  6875 ;;		On entry : F/0
  6876 ;;		On exit  : F/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6879 ;;      Params:         0       0       0       0       0       0       0       0       0
  6880 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6882 ;;      Totals:         0       1       0       0       0       0       0       0       0
  6883 ;;Total ram usage:        1 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:   11
  6886 ;; This function calls:
  6887 ;;		Nothing
  6888 ;; This function is called by:
  6889 ;;		_moteRunningProcess
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           	psect	text20
  6894  003B1C                     __ptext20:
  6895                           	opt stack 0
  6896  003B1C                     _TMR2_ReadTimer:
  6897                           	opt stack 17
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;tmr2.c: 88: uint8_t readVal;
  6901                           ;tmr2.c: 90: readVal = TMR2;
  6902                           
  6903                           ; BSR set to: 1
  6904                           ;incstack = 0
  6905  003B1C  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;tmr2.c: 92: return readVal;
  6909  003B20  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
  6910                           
  6911                           ; BSR set to: 0
  6912  003B22  0012               	return		;funcret
  6913  003B24                     __end_of_TMR2_ReadTimer:
  6914                           	opt stack 0
  6915                           tblptru	equ	0xFF8
  6916                           tblptrh	equ	0xFF7
  6917                           tblptrl	equ	0xFF6
  6918                           tablat	equ	0xFF5
  6919                           intcon	equ	0xFF2
  6920                           postinc0	equ	0xFEE
  6921                           wreg	equ	0xFE8
  6922                           indf2	equ	0xFDF
  6923                           fsr2h	equ	0xFDA
  6924                           fsr2l	equ	0xFD9
  6925                           status	equ	0xFD8
  6926                           
  6927 ;; *************** function _ADC_TempConversion *****************
  6928 ;; Defined at:
  6929 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;  tempRaw         1    wreg     enum E6179
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;  tempRaw         1    7[BANK0 ] enum E6179
  6934 ;;  temp            1    8[BANK0 ] unsigned char 
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  1    wreg      unsigned char 
  6937 ;; Registers used:
  6938 ;;		wreg, status,2, status,0, cstack
  6939 ;; Tracked objects:
  6940 ;;		On entry : D/2
  6941 ;;		On exit  : F/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6944 ;;      Params:         0       0       0       0       0       0       0       0       0
  6945 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6947 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6948 ;;Total ram usage:        2 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; Hardware stack levels required when called:   12
  6951 ;; This function calls:
  6952 ;;		___lwdiv
  6953 ;; This function is called by:
  6954 ;;		_moteHandler
  6955 ;;		_moteRunningProcess
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           	psect	text21
  6960  003D52                     __ptext21:
  6961                           	opt stack 0
  6962  003D52                     _ADC_TempConversion:
  6963                           	opt stack 16
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;incstack = 0
  6967                           ;ADC_TempConversion@tempRaw stored from wreg
  6968  003D52  0100               	movlb	0	; () banked
  6969  003D54  6F67               	movwf	ADC_TempConversion@tempRaw& (0+255),b
  6970                           
  6971                           ;adc.c: 138: uint8_t temp;
  6972                           ;adc.c: 140: temp = (uint16_t) (tempRaw - 250) / 5;
  6973  003D56  0E06               	movlw	6
  6974  003D58  2567               	addwf	ADC_TempConversion@tempRaw& (0+255),w,b
  6975  003D5A  6F60               	movwf	___lwdiv@dividend& (0+255),b
  6976  003D5C  6B61               	clrf	(___lwdiv@dividend+1)& (0+255),b
  6977  003D5E  0EFF               	movlw	255
  6978  003D60  2361               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
  6979  003D62  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  6980  003D64  0E05               	movlw	5
  6981  003D66  6F62               	movwf	___lwdiv@divisor& (0+255),b
  6982  003D68  EC21  F021         	call	___lwdiv	;wreg free
  6983  003D6C  5160               	movf	?___lwdiv& (0+255),w,b
  6984  003D6E  6F68               	movwf	ADC_TempConversion@temp& (0+255),b
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;adc.c: 141: return temp;
  6988  003D70  5168               	movf	ADC_TempConversion@temp& (0+255),w,b
  6989                           
  6990                           ; BSR set to: 0
  6991  003D72  0012               	return		;funcret
  6992  003D74                     __end_of_ADC_TempConversion:
  6993                           	opt stack 0
  6994                           tblptru	equ	0xFF8
  6995                           tblptrh	equ	0xFF7
  6996                           tblptrl	equ	0xFF6
  6997                           tablat	equ	0xFF5
  6998                           intcon	equ	0xFF2
  6999                           postinc0	equ	0xFEE
  7000                           wreg	equ	0xFE8
  7001                           indf2	equ	0xFDF
  7002                           fsr2h	equ	0xFDA
  7003                           fsr2l	equ	0xFD9
  7004                           status	equ	0xFD8
  7005                           
  7006 ;; *************** function _moteJoiningProcess *****************
  7007 ;; Defined at:
  7008 ;;		line 285 in file "../Includes/Board/MOTEapp.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;  messageReady    1    wreg     unsigned char 
  7011 ;;  switchEvent     1   74[BANK0 ] unsigned char 
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;  messageReady    1  145[BANK0 ] unsigned char 
  7014 ;;  cV              2  140[BANK0 ] unsigned int 
  7015 ;;  ana             2  138[BANK0 ] unsigned int 
  7016 ;;  old_float       2  136[BANK0 ] int 
  7017 ;;  batt            2  143[BANK0 ] unsigned int 
  7018 ;;  buf            50   82[BANK0 ] unsigned char [50]
  7019 ;;  joiningCompl    1  142[BANK0 ] unsigned char 
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  1    wreg      enum E6542
  7022 ;; Registers used:
  7023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7024 ;; Tracked objects:
  7025 ;;		On entry : F/2
  7026 ;;		On exit  : F/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7029 ;;      Params:         0       1       0       0       0       0       0       0       0
  7030 ;;      Locals:         0      64       0       0       0       0       0       0       0
  7031 ;;      Temps:          0       7       0       0       0       0       0       0       0
  7032 ;;      Totals:         0      72       0       0       0       0       0       0       0
  7033 ;;Total ram usage:       72 bytes
  7034 ;; Hardware stack levels used:    1
  7035 ;; Hardware stack levels required when called:   18
  7036 ;; This function calls:
  7037 ;;		_ADC_GetConversion
  7038 ;;		_DATAEE_WriteByte
  7039 ;;		___fldiv
  7040 ;;		___flmul
  7041 ;;		___fltol
  7042 ;;		___xxtofl
  7043 ;;		_moteApp_delayms
  7044 ;;		_nibble2int
  7045 ;;		_oled_clear
  7046 ;;		_oled_init
  7047 ;;		_oled_putString
  7048 ;;		_sendCommand
  7049 ;;		_sprintf
  7050 ;;		_strcmp
  7051 ;;		_strncmp
  7052 ;; This function is called by:
  7053 ;;		_moteHandler
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           	psect	text22
  7058  006E60                     __ptext22:
  7059                           	opt stack 0
  7060  006E60                     _moteJoiningProcess:
  7061                           	opt stack 11
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;incstack = 0
  7065                           ;moteJoiningProcess@messageReady stored from wreg
  7066  006E60  0100               	movlb	0	; () banked
  7067  006E62  6FF1               	movwf	moteJoiningProcess@messageReady& (0+255),b
  7068                           
  7069                           ;MOTEapp.c: 287: bool joiningComplete = 0;
  7070  006E64  6BEE               	clrf	moteJoiningProcess@joiningComplete& (0+255),b
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;MOTEapp.c: 288: static int mode = 0;
  7074                           ;MOTEapp.c: 289: static unsigned char pkt_cnt = 0;
  7075                           ;MOTEapp.c: 290: static unsigned char float_val = 255;
  7076                           ;MOTEapp.c: 291: static bool pending_confirm = 0;
  7077                           ;MOTEapp.c: 292: char buf[50];
  7078                           ;MOTEapp.c: 293: static int skip_count = 0;
  7079                           ;MOTEapp.c: 296: if (switchEvent)
  7080  006E66  51AA               	movf	moteJoiningProcess@switchEvent& (0+255),w,b
  7081  006E68  E102 EF84  F03B    	bz	l10951
  7082                           
  7083                           ; BSR set to: 0
  7084                           ;MOTEapp.c: 297: {
  7085                           ;MOTEapp.c: 298: activeState = moteComFailure;
  7086  006E6E  0E11               	movlw	17
  7087  006E70  0101               	movlb	1	; () banked
  7088  006E72  6F4C               	movwf	_activeState& (0+255),b
  7089  006E74                     l367:
  7090  006E74  A282               	btfss	3970,1,c	;volatile
  7091  006E76  D7FE               	goto	l367
  7092  006E78  EF84  F03B         	goto	l10951
  7093  006E7C                     l372:
  7094  006E7C  D7FF               	goto	l372
  7095  006E7E                     l10609:
  7096                           
  7097                           ; BSR set to: 1
  7098                           ;MOTEapp.c: 314: sendCommand("sys get ver");
  7099  006E7E  0EAD               	movlw	low STR_29
  7100  006E80  0100               	movlb	0	; () banked
  7101  006E82  6F61               	movwf	sendCommand@string& (0+255),b
  7102  006E84  0E7E               	movlw	high STR_29
  7103  006E86  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7104  006E88  EC35  F022         	call	_sendCommand	;wreg free
  7105                           
  7106                           ;MOTEapp.c: 315: oled_clear();
  7107  006E8C  EC24  F01E         	call	_oled_clear	;wreg free
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;MOTEapp.c: 316: oled_putString("get ver",0,0);
  7111  006E90  0EB1               	movlw	low (STR_29+4)
  7112  006E92  6F6D               	movwf	oled_putString@string& (0+255),b
  7113  006E94  0E7E               	movlw	high (STR_29+4)
  7114  006E96  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7115  006E98  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7116  006E9A  6B70               	clrf	oled_putString@start_page& (0+255),b
  7117  006E9C  EC17  F023         	call	_oled_putString	;wreg free
  7118                           
  7119                           ;MOTEapp.c: 317: moteApp_delayms(50);
  7120  006EA0  0100               	movlb	0	; () banked
  7121  006EA2  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7122  006EA4  0E32               	movlw	50
  7123  006EA6  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7124  006EA8  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;MOTEapp.c: 318: if (PORTBbits.RB0) {
  7128  006EAC  A081               	btfss	3969,0,c	;volatile
  7129  006EAE  D00E               	goto	l10623
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;MOTEapp.c: 319: mode = 2;
  7133  006EB0  0101               	movlb	1	; () banked
  7134  006EB2  6B42               	clrf	(moteJoiningProcess@mode+1)& (0+255),b
  7135  006EB4  0E02               	movlw	2
  7136  006EB6  6F41               	movwf	moteJoiningProcess@mode& (0+255),b
  7137                           
  7138                           ; BSR set to: 1
  7139                           ;MOTEapp.c: 320: oled_putString("RX RESET",0,0);
  7140  006EB8  0E4B               	movlw	low STR_31
  7141  006EBA  0100               	movlb	0	; () banked
  7142  006EBC  6F6D               	movwf	oled_putString@string& (0+255),b
  7143  006EBE  0E7F               	movlw	high STR_31
  7144  006EC0  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7145  006EC2  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7146  006EC4  6B70               	clrf	oled_putString@start_page& (0+255),b
  7147  006EC6  EC17  F023         	call	_oled_putString	;wreg free
  7148                           
  7149                           ;MOTEapp.c: 321: } else {
  7150  006ECA  D00D               	goto	l10627
  7151  006ECC                     l10623:
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;MOTEapp.c: 322: mode = 1;
  7155  006ECC  0101               	movlb	1	; () banked
  7156  006ECE  6B42               	clrf	(moteJoiningProcess@mode+1)& (0+255),b
  7157  006ED0  0E01               	movlw	1
  7158  006ED2  6F41               	movwf	moteJoiningProcess@mode& (0+255),b
  7159                           
  7160                           ; BSR set to: 1
  7161                           ;MOTEapp.c: 323: oled_putString("TX RESET",0,0);
  7162  006ED4  0E54               	movlw	low STR_32
  7163  006ED6  0100               	movlb	0	; () banked
  7164  006ED8  6F6D               	movwf	oled_putString@string& (0+255),b
  7165  006EDA  0E7F               	movlw	high STR_32
  7166  006EDC  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7167  006EDE  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7168  006EE0  6B70               	clrf	oled_putString@start_page& (0+255),b
  7169  006EE2  EC17  F023         	call	_oled_putString	;wreg free
  7170  006EE6                     l10627:
  7171                           
  7172                           ;MOTEapp.c: 324: }
  7173                           ;MOTEapp.c: 325: moteApp_delayms(500);
  7174  006EE6  0E01               	movlw	1
  7175  006EE8  0100               	movlb	0	; () banked
  7176  006EEA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7177  006EEC  0EF4               	movlw	244
  7178  006EEE  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7179  006EF0  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;MOTEapp.c: 326: activeState = moteReset;
  7183  006EF4  0E01               	movlw	1
  7184  006EF6  D3B8               	goto	L16
  7185  006EF8                     l10631:
  7186                           
  7187                           ; BSR set to: 1
  7188                           ;MOTEapp.c: 330: if ( messageReady )
  7189  006EF8  0100               	movlb	0	; () banked
  7190  006EFA  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7191  006EFC  E102 EFBC  F03B    	bz	l10953
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;MOTEapp.c: 331: {
  7195                           ;MOTEapp.c: 332: if(strncmp(modemResonseBuffer, "RN", 2) == 0)
  7196  006F02  0E96               	movlw	low _modemResonseBuffer
  7197  006F04  6F60               	movwf	strncmp@s1& (0+255),b
  7198  006F06  0E01               	movlw	high _modemResonseBuffer
  7199  006F08  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7200  006F0A  0EF8               	movlw	low STR_33
  7201  006F0C  6F62               	movwf	strncmp@s2& (0+255),b
  7202  006F0E  0E7F               	movlw	high STR_33
  7203  006F10  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7204  006F12  6B65               	clrf	(strncmp@len+1)& (0+255),b
  7205  006F14  0E02               	movlw	2
  7206  006F16  6F64               	movwf	strncmp@len& (0+255),b
  7207  006F18  EC4A  F023         	call	_strncmp	;wreg free
  7208  006F1C  5160               	movf	?_strncmp& (0+255),w,b
  7209  006F1E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7210  006F20  E118               	bnz	l381
  7211                           
  7212                           ; BSR set to: 0
  7213                           ;MOTEapp.c: 333: {
  7214                           ;MOTEapp.c: 334: sendCommand("radio set mod lora");
  7215  006F22  0E36               	movlw	low STR_34
  7216  006F24  6F61               	movwf	sendCommand@string& (0+255),b
  7217  006F26  0E7C               	movlw	high STR_34
  7218  006F28  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7219  006F2A  EC35  F022         	call	_sendCommand	;wreg free
  7220                           
  7221                           ;MOTEapp.c: 335: oled_clear();
  7222  006F2E  EC24  F01E         	call	_oled_clear	;wreg free
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;MOTEapp.c: 336: oled_putString("set mod",0,0);
  7226  006F32  0EB5               	movlw	low STR_35
  7227  006F34  6F6D               	movwf	oled_putString@string& (0+255),b
  7228  006F36  0E7F               	movlw	high STR_35
  7229  006F38  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7230  006F3A  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7231  006F3C  6B70               	clrf	oled_putString@start_page& (0+255),b
  7232  006F3E  EC17  F023         	call	_oled_putString	;wreg free
  7233                           
  7234                           ;MOTEapp.c: 337: moteApp_delayms(50);
  7235  006F42  0100               	movlb	0	; () banked
  7236  006F44  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7237  006F46  0E32               	movlw	50
  7238  006F48  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7239  006F4A  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;MOTEapp.c: 338: activeState = moteSetMod;
  7243  006F4E  0E02               	movlw	2
  7244  006F50  D38B               	goto	L16
  7245  006F52                     l381:
  7246                           
  7247                           ; BSR set to: 0
  7248                           ;MOTEapp.c: 340: else
  7249                           ;MOTEapp.c: 341: {
  7250                           ;MOTEapp.c: 342: activeState = moteStartup;
  7251  006F52  0101               	movlb	1	; () banked
  7252  006F54  6B4C               	clrf	_activeState& (0+255),b
  7253  006F56  EFBC  F03B         	goto	l10953
  7254  006F5A                     l10645:
  7255                           
  7256                           ; BSR set to: 1
  7257                           ;MOTEapp.c: 347: if ( messageReady )
  7258  006F5A  0100               	movlb	0	; () banked
  7259  006F5C  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7260  006F5E  E102 EFBC  F03B    	bz	l10953
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;MOTEapp.c: 348: {
  7264                           ;MOTEapp.c: 349: if(strcmp(modemResonseBuffer, "ok") == 0)
  7265  006F64  0E96               	movlw	low _modemResonseBuffer
  7266  006F66  6F60               	movwf	strcmp@s1& (0+255),b
  7267  006F68  0E01               	movlw	high _modemResonseBuffer
  7268  006F6A  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7269  006F6C  0EAA               	movlw	low (STR_79+9)
  7270  006F6E  6F62               	movwf	strcmp@s2& (0+255),b
  7271  006F70  0E7E               	movlw	high (STR_79+9)
  7272  006F72  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7273  006F74  ECD2  F024         	call	_strcmp	;wreg free
  7274  006F78  5160               	movf	?_strcmp& (0+255),w,b
  7275  006F7A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7276  006F7C  E1EA               	bnz	l381
  7277                           
  7278                           ; BSR set to: 0
  7279                           ;MOTEapp.c: 350: {
  7280                           ;MOTEapp.c: 351: sendCommand("radio set pwr 20");
  7281  006F7E  0EA1               	movlw	low STR_37
  7282  006F80  6F61               	movwf	sendCommand@string& (0+255),b
  7283  006F82  0E7C               	movlw	high STR_37
  7284  006F84  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7285  006F86  EC35  F022         	call	_sendCommand	;wreg free
  7286                           
  7287                           ;MOTEapp.c: 352: oled_clear();
  7288  006F8A  EC24  F01E         	call	_oled_clear	;wreg free
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;MOTEapp.c: 353: oled_putString("set pwr",0,0);
  7292  006F8E  0EBD               	movlw	low STR_38
  7293  006F90  6F6D               	movwf	oled_putString@string& (0+255),b
  7294  006F92  0E7F               	movlw	high STR_38
  7295  006F94  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7296  006F96  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7297  006F98  6B70               	clrf	oled_putString@start_page& (0+255),b
  7298  006F9A  EC17  F023         	call	_oled_putString	;wreg free
  7299                           
  7300                           ;MOTEapp.c: 354: moteApp_delayms(50);
  7301  006F9E  0100               	movlb	0	; () banked
  7302  006FA0  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7303  006FA2  0E32               	movlw	50
  7304  006FA4  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7305  006FA6  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;MOTEapp.c: 355: activeState = moteSetPwr;
  7309  006FAA  0E03               	movlw	3
  7310  006FAC  D35D               	goto	L16
  7311  006FAE                     l10659:
  7312                           
  7313                           ; BSR set to: 1
  7314                           ;MOTEapp.c: 364: if ( messageReady )
  7315  006FAE  0100               	movlb	0	; () banked
  7316  006FB0  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7317  006FB2  E101 D3E1          	bz	l10953
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;MOTEapp.c: 365: {
  7321                           ;MOTEapp.c: 366: if(strcmp(modemResonseBuffer, "ok") == 0)
  7322  006FB6  0E96               	movlw	low _modemResonseBuffer
  7323  006FB8  6F60               	movwf	strcmp@s1& (0+255),b
  7324  006FBA  0E01               	movlw	high _modemResonseBuffer
  7325  006FBC  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7326  006FBE  0EAA               	movlw	low (STR_79+9)
  7327  006FC0  6F62               	movwf	strcmp@s2& (0+255),b
  7328  006FC2  0E7E               	movlw	high (STR_79+9)
  7329  006FC4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7330  006FC6  ECD2  F024         	call	_strcmp	;wreg free
  7331  006FCA  5160               	movf	?_strcmp& (0+255),w,b
  7332  006FCC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7333  006FCE  E1C1               	bnz	l381
  7334                           
  7335                           ; BSR set to: 0
  7336                           ;MOTEapp.c: 367: {
  7337                           ;MOTEapp.c: 369: sendCommand("radio set sf sf12");
  7338  006FD0  0E5B               	movlw	low STR_40
  7339  006FD2  6F61               	movwf	sendCommand@string& (0+255),b
  7340  006FD4  0E7C               	movlw	high STR_40
  7341  006FD6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7342  006FD8  EC35  F022         	call	_sendCommand	;wreg free
  7343                           
  7344                           ;MOTEapp.c: 370: oled_clear();
  7345  006FDC  EC24  F01E         	call	_oled_clear	;wreg free
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;MOTEapp.c: 371: oled_putString("set sf",0,0);
  7349  006FE0  0EDD               	movlw	low STR_41
  7350  006FE2  6F6D               	movwf	oled_putString@string& (0+255),b
  7351  006FE4  0E7F               	movlw	high STR_41
  7352  006FE6  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7353  006FE8  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7354  006FEA  6B70               	clrf	oled_putString@start_page& (0+255),b
  7355  006FEC  EC17  F023         	call	_oled_putString	;wreg free
  7356                           
  7357                           ;MOTEapp.c: 372: moteApp_delayms(50);
  7358  006FF0  0100               	movlb	0	; () banked
  7359  006FF2  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7360  006FF4  0E32               	movlw	50
  7361  006FF6  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7362  006FF8  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;MOTEapp.c: 373: activeState = moteSetSf;
  7366  006FFC  0E04               	movlw	4
  7367  006FFE  D334               	goto	L16
  7368  007000                     l10673:
  7369                           
  7370                           ; BSR set to: 1
  7371                           ;MOTEapp.c: 382: if ( messageReady )
  7372  007000  0100               	movlb	0	; () banked
  7373  007002  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7374  007004  E101 D3B8          	bz	l10953
  7375                           
  7376                           ; BSR set to: 0
  7377                           ;MOTEapp.c: 383: {
  7378                           ;MOTEapp.c: 384: if(strcmp(modemResonseBuffer, "ok") == 0)
  7379  007008  0E96               	movlw	low _modemResonseBuffer
  7380  00700A  6F60               	movwf	strcmp@s1& (0+255),b
  7381  00700C  0E01               	movlw	high _modemResonseBuffer
  7382  00700E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7383  007010  0EAA               	movlw	low (STR_79+9)
  7384  007012  6F62               	movwf	strcmp@s2& (0+255),b
  7385  007014  0E7E               	movlw	high (STR_79+9)
  7386  007016  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7387  007018  ECD2  F024         	call	_strcmp	;wreg free
  7388  00701C  5160               	movf	?_strcmp& (0+255),w,b
  7389  00701E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7390  007020  E198               	bnz	l381
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;MOTEapp.c: 385: {
  7394                           ;MOTEapp.c: 387: sendCommand("radio set afcbw 125");
  7395  007022  0E0E               	movlw	low STR_43
  7396  007024  6F61               	movwf	sendCommand@string& (0+255),b
  7397  007026  0E7C               	movlw	high STR_43
  7398  007028  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7399  00702A  EC35  F022         	call	_sendCommand	;wreg free
  7400                           
  7401                           ;MOTEapp.c: 388: oled_clear();
  7402  00702E  EC24  F01E         	call	_oled_clear	;wreg free
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;MOTEapp.c: 389: oled_putString("set afcbw",0,0);
  7406  007032  0E25               	movlw	low STR_44
  7407  007034  6F6D               	movwf	oled_putString@string& (0+255),b
  7408  007036  0E7F               	movlw	high STR_44
  7409  007038  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7410  00703A  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7411  00703C  6B70               	clrf	oled_putString@start_page& (0+255),b
  7412  00703E  EC17  F023         	call	_oled_putString	;wreg free
  7413                           
  7414                           ;MOTEapp.c: 390: moteApp_delayms(50);
  7415  007042  0100               	movlb	0	; () banked
  7416  007044  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7417  007046  0E32               	movlw	50
  7418  007048  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7419  00704A  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;MOTEapp.c: 391: activeState = moteSetAfcbw;
  7423  00704E  0E05               	movlw	5
  7424  007050  D30B               	goto	L16
  7425  007052                     l10687:
  7426                           
  7427                           ; BSR set to: 1
  7428                           ;MOTEapp.c: 400: if ( messageReady )
  7429  007052  0100               	movlb	0	; () banked
  7430  007054  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7431  007056  E101 D38F          	bz	l10953
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;MOTEapp.c: 401: {
  7435                           ;MOTEapp.c: 402: if(strcmp(modemResonseBuffer, "ok") == 0)
  7436  00705A  0E96               	movlw	low _modemResonseBuffer
  7437  00705C  6F60               	movwf	strcmp@s1& (0+255),b
  7438  00705E  0E01               	movlw	high _modemResonseBuffer
  7439  007060  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7440  007062  0EAA               	movlw	low (STR_79+9)
  7441  007064  6F62               	movwf	strcmp@s2& (0+255),b
  7442  007066  0E7E               	movlw	high (STR_79+9)
  7443  007068  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7444  00706A  ECD2  F024         	call	_strcmp	;wreg free
  7445  00706E  5160               	movf	?_strcmp& (0+255),w,b
  7446  007070  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7447  007072  E001 D76E          	bnz	l381
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;MOTEapp.c: 403: {
  7451                           ;MOTEapp.c: 405: sendCommand("radio set fdev 5000");
  7452  007076  0EFA               	movlw	low STR_46
  7453  007078  6F61               	movwf	sendCommand@string& (0+255),b
  7454  00707A  0E7B               	movlw	high STR_46
  7455  00707C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7456  00707E  EC35  F022         	call	_sendCommand	;wreg free
  7457                           
  7458                           ;MOTEapp.c: 406: oled_clear();
  7459  007082  EC24  F01E         	call	_oled_clear	;wreg free
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;MOTEapp.c: 407: oled_putString("set fdev",0,0);
  7463  007086  0E78               	movlw	low STR_47
  7464  007088  6F6D               	movwf	oled_putString@string& (0+255),b
  7465  00708A  0E7F               	movlw	high STR_47
  7466  00708C  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7467  00708E  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7468  007090  6B70               	clrf	oled_putString@start_page& (0+255),b
  7469  007092  EC17  F023         	call	_oled_putString	;wreg free
  7470                           
  7471                           ;MOTEapp.c: 408: moteApp_delayms(50);
  7472  007096  0100               	movlb	0	; () banked
  7473  007098  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7474  00709A  0E32               	movlw	50
  7475  00709C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7476  00709E  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;MOTEapp.c: 409: activeState = moteSetFdev;
  7480  0070A2  0E06               	movlw	6
  7481  0070A4  D2E1               	goto	L16
  7482  0070A6                     l10701:
  7483                           
  7484                           ; BSR set to: 1
  7485                           ;MOTEapp.c: 418: if ( messageReady )
  7486  0070A6  0100               	movlb	0	; () banked
  7487  0070A8  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7488  0070AA  E101 D365          	bz	l10953
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;MOTEapp.c: 419: {
  7492                           ;MOTEapp.c: 420: if(strcmp(modemResonseBuffer, "ok") == 0)
  7493  0070AE  0E96               	movlw	low _modemResonseBuffer
  7494  0070B0  6F60               	movwf	strcmp@s1& (0+255),b
  7495  0070B2  0E01               	movlw	high _modemResonseBuffer
  7496  0070B4  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7497  0070B6  0EAA               	movlw	low (STR_79+9)
  7498  0070B8  6F62               	movwf	strcmp@s2& (0+255),b
  7499  0070BA  0E7E               	movlw	high (STR_79+9)
  7500  0070BC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7501  0070BE  ECD2  F024         	call	_strcmp	;wreg free
  7502  0070C2  5160               	movf	?_strcmp& (0+255),w,b
  7503  0070C4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7504  0070C6  E001 D744          	bnz	l381
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;MOTEapp.c: 421: {
  7508                           ;MOTEapp.c: 423: sendCommand("radio set prlen 8");
  7509  0070CA  0E6D               	movlw	low STR_49
  7510  0070CC  6F61               	movwf	sendCommand@string& (0+255),b
  7511  0070CE  0E7C               	movlw	high STR_49
  7512  0070D0  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7513  0070D2  EC35  F022         	call	_sendCommand	;wreg free
  7514                           
  7515                           ;MOTEapp.c: 424: oled_clear();
  7516  0070D6  EC24  F01E         	call	_oled_clear	;wreg free
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;MOTEapp.c: 425: oled_putString("set prlen",0,0);
  7520  0070DA  0E1B               	movlw	low STR_50
  7521  0070DC  6F6D               	movwf	oled_putString@string& (0+255),b
  7522  0070DE  0E7F               	movlw	high STR_50
  7523  0070E0  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7524  0070E2  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7525  0070E4  6B70               	clrf	oled_putString@start_page& (0+255),b
  7526  0070E6  EC17  F023         	call	_oled_putString	;wreg free
  7527                           
  7528                           ;MOTEapp.c: 426: moteApp_delayms(50);
  7529  0070EA  0100               	movlb	0	; () banked
  7530  0070EC  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7531  0070EE  0E32               	movlw	50
  7532  0070F0  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7533  0070F2  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;MOTEapp.c: 427: activeState = moteSetPrlen;
  7537  0070F6  0E07               	movlw	7
  7538  0070F8  D2B7               	goto	L16
  7539  0070FA                     l10715:
  7540                           
  7541                           ; BSR set to: 1
  7542                           ;MOTEapp.c: 436: if ( messageReady )
  7543  0070FA  0100               	movlb	0	; () banked
  7544  0070FC  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7545  0070FE  E101 D33B          	bz	l10953
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;MOTEapp.c: 437: {
  7549                           ;MOTEapp.c: 438: if(strcmp(modemResonseBuffer, "ok") == 0)
  7550  007102  0E96               	movlw	low _modemResonseBuffer
  7551  007104  6F60               	movwf	strcmp@s1& (0+255),b
  7552  007106  0E01               	movlw	high _modemResonseBuffer
  7553  007108  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7554  00710A  0EAA               	movlw	low (STR_79+9)
  7555  00710C  6F62               	movwf	strcmp@s2& (0+255),b
  7556  00710E  0E7E               	movlw	high (STR_79+9)
  7557  007110  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7558  007112  ECD2  F024         	call	_strcmp	;wreg free
  7559  007116  5160               	movf	?_strcmp& (0+255),w,b
  7560  007118  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7561  00711A  E001 D71A          	bnz	l381
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;MOTEapp.c: 439: {
  7565                           ;MOTEapp.c: 441: sendCommand("radio set crc on");
  7566  00711E  0EF6               	movlw	low STR_52
  7567  007120  6F61               	movwf	sendCommand@string& (0+255),b
  7568  007122  0E7C               	movlw	high STR_52
  7569  007124  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7570  007126  EC35  F022         	call	_sendCommand	;wreg free
  7571                           
  7572                           ;MOTEapp.c: 442: oled_clear();
  7573  00712A  EC24  F01E         	call	_oled_clear	;wreg free
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;MOTEapp.c: 443: oled_putString("set crc",0,0);
  7577  00712E  0EAD               	movlw	low STR_53
  7578  007130  6F6D               	movwf	oled_putString@string& (0+255),b
  7579  007132  0E7F               	movlw	high STR_53
  7580  007134  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7581  007136  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7582  007138  6B70               	clrf	oled_putString@start_page& (0+255),b
  7583  00713A  EC17  F023         	call	_oled_putString	;wreg free
  7584                           
  7585                           ;MOTEapp.c: 444: moteApp_delayms(50);
  7586  00713E  0100               	movlb	0	; () banked
  7587  007140  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7588  007142  0E32               	movlw	50
  7589  007144  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7590  007146  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7591                           
  7592                           ; BSR set to: 0
  7593                           ;MOTEapp.c: 445: activeState = moteSetCrc;
  7594  00714A  0E08               	movlw	8
  7595  00714C  D28D               	goto	L16
  7596  00714E                     l10729:
  7597                           
  7598                           ; BSR set to: 1
  7599                           ;MOTEapp.c: 454: if ( messageReady )
  7600  00714E  0100               	movlb	0	; () banked
  7601  007150  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7602  007152  E101 D311          	bz	l10953
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;MOTEapp.c: 455: {
  7606                           ;MOTEapp.c: 456: if(strcmp(modemResonseBuffer, "ok") == 0)
  7607  007156  0E96               	movlw	low _modemResonseBuffer
  7608  007158  6F60               	movwf	strcmp@s1& (0+255),b
  7609  00715A  0E01               	movlw	high _modemResonseBuffer
  7610  00715C  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7611  00715E  0EAA               	movlw	low (STR_79+9)
  7612  007160  6F62               	movwf	strcmp@s2& (0+255),b
  7613  007162  0E7E               	movlw	high (STR_79+9)
  7614  007164  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7615  007166  ECD2  F024         	call	_strcmp	;wreg free
  7616  00716A  5160               	movf	?_strcmp& (0+255),w,b
  7617  00716C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7618  00716E  E001 D6F0          	bnz	l381
  7619                           
  7620                           ; BSR set to: 0
  7621                           ;MOTEapp.c: 457: {
  7622                           ;MOTEapp.c: 459: sendCommand("radio set cr 4/5");
  7623  007172  0EB2               	movlw	low STR_55
  7624  007174  6F61               	movwf	sendCommand@string& (0+255),b
  7625  007176  0E7C               	movlw	high STR_55
  7626  007178  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7627  00717A  EC35  F022         	call	_sendCommand	;wreg free
  7628                           
  7629                           ;MOTEapp.c: 460: oled_clear();
  7630  00717E  EC24  F01E         	call	_oled_clear	;wreg free
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;MOTEapp.c: 461: oled_putString("set cr",0,0);
  7634  007182  0EE4               	movlw	low STR_56
  7635  007184  6F6D               	movwf	oled_putString@string& (0+255),b
  7636  007186  0E7F               	movlw	high STR_56
  7637  007188  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7638  00718A  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7639  00718C  6B70               	clrf	oled_putString@start_page& (0+255),b
  7640  00718E  EC17  F023         	call	_oled_putString	;wreg free
  7641                           
  7642                           ;MOTEapp.c: 462: moteApp_delayms(50);
  7643  007192  0100               	movlb	0	; () banked
  7644  007194  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7645  007196  0E32               	movlw	50
  7646  007198  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7647  00719A  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;MOTEapp.c: 463: activeState = moteSetCr;
  7651  00719E  0E09               	movlw	9
  7652  0071A0  D263               	goto	L16
  7653  0071A2                     l10743:
  7654                           
  7655                           ; BSR set to: 1
  7656                           ;MOTEapp.c: 472: if ( messageReady )
  7657  0071A2  0100               	movlb	0	; () banked
  7658  0071A4  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7659  0071A6  E101 D2E7          	bz	l10953
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;MOTEapp.c: 473: {
  7663                           ;MOTEapp.c: 474: if(strcmp(modemResonseBuffer, "ok") == 0)
  7664  0071AA  0E96               	movlw	low _modemResonseBuffer
  7665  0071AC  6F60               	movwf	strcmp@s1& (0+255),b
  7666  0071AE  0E01               	movlw	high _modemResonseBuffer
  7667  0071B0  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7668  0071B2  0EAA               	movlw	low (STR_79+9)
  7669  0071B4  6F62               	movwf	strcmp@s2& (0+255),b
  7670  0071B6  0E7E               	movlw	high (STR_79+9)
  7671  0071B8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7672  0071BA  ECD2  F024         	call	_strcmp	;wreg free
  7673  0071BE  5160               	movf	?_strcmp& (0+255),w,b
  7674  0071C0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7675  0071C2  E001 D6C6          	bnz	l381
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;MOTEapp.c: 475: {
  7679                           ;MOTEapp.c: 477: sendCommand("radio set wdt 0");
  7680  0071C6  0E39               	movlw	low STR_58
  7681  0071C8  6F61               	movwf	sendCommand@string& (0+255),b
  7682  0071CA  0E7D               	movlw	high STR_58
  7683  0071CC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7684  0071CE  EC35  F022         	call	_sendCommand	;wreg free
  7685                           
  7686                           ;MOTEapp.c: 478: oled_clear();
  7687  0071D2  EC24  F01E         	call	_oled_clear	;wreg free
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;MOTEapp.c: 479: oled_putString("set wdt",0,0);
  7691  0071D6  0EC5               	movlw	low STR_59
  7692  0071D8  6F6D               	movwf	oled_putString@string& (0+255),b
  7693  0071DA  0E7F               	movlw	high STR_59
  7694  0071DC  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7695  0071DE  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7696  0071E0  6B70               	clrf	oled_putString@start_page& (0+255),b
  7697  0071E2  EC17  F023         	call	_oled_putString	;wreg free
  7698                           
  7699                           ;MOTEapp.c: 480: moteApp_delayms(50);
  7700  0071E6  0100               	movlb	0	; () banked
  7701  0071E8  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7702  0071EA  0E32               	movlw	50
  7703  0071EC  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7704  0071EE  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;MOTEapp.c: 481: activeState = moteSetWdt;
  7708  0071F2  0E0A               	movlw	10
  7709  0071F4  D239               	goto	L16
  7710  0071F6                     l10757:
  7711                           
  7712                           ; BSR set to: 1
  7713                           ;MOTEapp.c: 490: if ( messageReady )
  7714  0071F6  0100               	movlb	0	; () banked
  7715  0071F8  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7716  0071FA  E101 D2BD          	bz	l10953
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;MOTEapp.c: 491: {
  7720                           ;MOTEapp.c: 492: if(strcmp(modemResonseBuffer, "ok") == 0)
  7721  0071FE  0E96               	movlw	low _modemResonseBuffer
  7722  007200  6F60               	movwf	strcmp@s1& (0+255),b
  7723  007202  0E01               	movlw	high _modemResonseBuffer
  7724  007204  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7725  007206  0EAA               	movlw	low (STR_79+9)
  7726  007208  6F62               	movwf	strcmp@s2& (0+255),b
  7727  00720A  0E7E               	movlw	high (STR_79+9)
  7728  00720C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7729  00720E  ECD2  F024         	call	_strcmp	;wreg free
  7730  007212  5160               	movf	?_strcmp& (0+255),w,b
  7731  007214  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7732  007216  E001 D69C          	bnz	l381
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;MOTEapp.c: 493: {
  7736                           ;MOTEapp.c: 495: sendCommand("radio set sync 12");
  7737  00721A  0E49               	movlw	low STR_61
  7738  00721C  6F61               	movwf	sendCommand@string& (0+255),b
  7739  00721E  0E7C               	movlw	high STR_61
  7740  007220  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7741  007222  EC35  F022         	call	_sendCommand	;wreg free
  7742                           
  7743                           ;MOTEapp.c: 496: oled_clear();
  7744  007226  EC24  F01E         	call	_oled_clear	;wreg free
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;MOTEapp.c: 497: oled_putString("set sync",0,0);
  7748  00722A  0E5D               	movlw	low STR_62
  7749  00722C  6F6D               	movwf	oled_putString@string& (0+255),b
  7750  00722E  0E7F               	movlw	high STR_62
  7751  007230  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7752  007232  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7753  007234  6B70               	clrf	oled_putString@start_page& (0+255),b
  7754  007236  EC17  F023         	call	_oled_putString	;wreg free
  7755                           
  7756                           ;MOTEapp.c: 498: moteApp_delayms(50);
  7757  00723A  0100               	movlb	0	; () banked
  7758  00723C  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7759  00723E  0E32               	movlw	50
  7760  007240  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7761  007242  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;MOTEapp.c: 499: activeState = moteSetSync;
  7765  007246  0E0B               	movlw	11
  7766  007248  D20F               	goto	L16
  7767  00724A                     l10771:
  7768                           
  7769                           ; BSR set to: 1
  7770                           ;MOTEapp.c: 508: if ( messageReady )
  7771  00724A  0100               	movlb	0	; () banked
  7772  00724C  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7773  00724E  E101 D293          	bz	l10953
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;MOTEapp.c: 509: {
  7777                           ;MOTEapp.c: 510: if(strcmp(modemResonseBuffer, "ok") == 0)
  7778  007252  0E96               	movlw	low _modemResonseBuffer
  7779  007254  6F60               	movwf	strcmp@s1& (0+255),b
  7780  007256  0E01               	movlw	high _modemResonseBuffer
  7781  007258  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7782  00725A  0EAA               	movlw	low (STR_79+9)
  7783  00725C  6F62               	movwf	strcmp@s2& (0+255),b
  7784  00725E  0E7E               	movlw	high (STR_79+9)
  7785  007260  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7786  007262  ECD2  F024         	call	_strcmp	;wreg free
  7787  007266  5160               	movf	?_strcmp& (0+255),w,b
  7788  007268  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7789  00726A  E001 D672          	bnz	l381
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;MOTEapp.c: 511: {
  7793                           ;MOTEapp.c: 513: sendCommand("radio set bw 125");
  7794  00726E  0EC3               	movlw	low STR_64
  7795  007270  6F61               	movwf	sendCommand@string& (0+255),b
  7796  007272  0E7C               	movlw	high STR_64
  7797  007274  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7798  007276  EC35  F022         	call	_sendCommand	;wreg free
  7799                           
  7800                           ;MOTEapp.c: 514: oled_clear();
  7801  00727A  EC24  F01E         	call	_oled_clear	;wreg free
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;MOTEapp.c: 515: oled_putString("set bw",0,0);
  7805  00727E  0EEB               	movlw	low STR_65
  7806  007280  6F6D               	movwf	oled_putString@string& (0+255),b
  7807  007282  0E7F               	movlw	high STR_65
  7808  007284  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7809  007286  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7810  007288  6B70               	clrf	oled_putString@start_page& (0+255),b
  7811  00728A  EC17  F023         	call	_oled_putString	;wreg free
  7812                           
  7813                           ;MOTEapp.c: 516: moteApp_delayms(50);
  7814  00728E  0100               	movlb	0	; () banked
  7815  007290  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7816  007292  0E32               	movlw	50
  7817  007294  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7818  007296  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;MOTEapp.c: 517: activeState = moteSetBw;
  7822  00729A  0E0C               	movlw	12
  7823  00729C  D1E5               	goto	L16
  7824  00729E                     l10785:
  7825                           
  7826                           ; BSR set to: 1
  7827                           ;MOTEapp.c: 526: if ( messageReady )
  7828  00729E  0100               	movlb	0	; () banked
  7829  0072A0  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7830  0072A2  E101 D269          	bz	l10953
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;MOTEapp.c: 527: {
  7834                           ;MOTEapp.c: 528: if(strcmp(modemResonseBuffer, "ok") == 0)
  7835  0072A6  0E96               	movlw	low _modemResonseBuffer
  7836  0072A8  6F60               	movwf	strcmp@s1& (0+255),b
  7837  0072AA  0E01               	movlw	high _modemResonseBuffer
  7838  0072AC  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7839  0072AE  0EAA               	movlw	low (STR_79+9)
  7840  0072B0  6F62               	movwf	strcmp@s2& (0+255),b
  7841  0072B2  0E7E               	movlw	high (STR_79+9)
  7842  0072B4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7843  0072B6  ECD2  F024         	call	_strcmp	;wreg free
  7844  0072BA  5160               	movf	?_strcmp& (0+255),w,b
  7845  0072BC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7846  0072BE  E001 D648          	bnz	l381
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;MOTEapp.c: 529: {
  7850                           ;MOTEapp.c: 530: sendCommand("mac pause");
  7851  0072C2  0E11               	movlw	low STR_67
  7852  0072C4  6F61               	movwf	sendCommand@string& (0+255),b
  7853  0072C6  0E7F               	movlw	high STR_67
  7854  0072C8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  7855  0072CA  EC35  F022         	call	_sendCommand	;wreg free
  7856                           
  7857                           ;MOTEapp.c: 531: oled_clear();
  7858  0072CE  EC24  F01E         	call	_oled_clear	;wreg free
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;MOTEapp.c: 532: oled_putString("Pump default ON",0,0);
  7862  0072D2  0E59               	movlw	low STR_68
  7863  0072D4  6F6D               	movwf	oled_putString@string& (0+255),b
  7864  0072D6  0E7D               	movlw	high STR_68
  7865  0072D8  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7866  0072DA  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7867  0072DC  6B70               	clrf	oled_putString@start_page& (0+255),b
  7868  0072DE  EC17  F023         	call	_oled_putString	;wreg free
  7869                           
  7870                           ;MOTEapp.c: 533: oled_putString("Waiting for RX",0,1);
  7871  0072E2  0E89               	movlw	low STR_69
  7872  0072E4  0100               	movlb	0	; () banked
  7873  0072E6  6F6D               	movwf	oled_putString@string& (0+255),b
  7874  0072E8  0E7D               	movlw	high STR_69
  7875  0072EA  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  7876  0072EC  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  7877  0072EE  0E01               	movlw	1
  7878  0072F0  6F70               	movwf	oled_putString@start_page& (0+255),b
  7879  0072F2  EC17  F023         	call	_oled_putString	;wreg free
  7880  0072F6                     l10797:
  7881                           
  7882                           ;MOTEapp.c: 534: moteApp_delayms(50);
  7883  0072F6  0100               	movlb	0	; () banked
  7884  0072F8  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7885  0072FA  0E32               	movlw	50
  7886  0072FC  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7887  0072FE  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7888  007302                     l10799:
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;MOTEapp.c: 535: activeState = moteMacPause;
  7892  007302  0E0D               	movlw	13
  7893  007304  D1B1               	goto	L16
  7894  007306                     l10801:
  7895                           
  7896                           ; BSR set to: 1
  7897                           ;MOTEapp.c: 544: if ( messageReady )
  7898  007306  0100               	movlb	0	; () banked
  7899  007308  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  7900  00730A  E101 D235          	bz	l10953
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;MOTEapp.c: 545: {
  7904                           ;MOTEapp.c: 546: if (mode == 1) {
  7905  00730E  0101               	movlb	1	; () banked
  7906  007310  0541               	decf	moteJoiningProcess@mode& (0+255),w,b
  7907  007312  1142               	iorwf	(moteJoiningProcess@mode+1)& (0+255),w,b
  7908  007314  E16D               	bnz	l10841
  7909                           
  7910                           ; BSR set to: 1
  7911                           ;MOTEapp.c: 549: TRISAbits.TRISA5=0;
  7912  007316  9A92               	bcf	3986,5,c	;volatile
  7913                           
  7914                           ;MOTEapp.c: 551: LATBbits.LATB0 = 0;
  7915  007318  908A               	bcf	3978,0,c	;volatile
  7916                           
  7917                           ;MOTEapp.c: 552: LATBbits.LATB1 = 0;
  7918  00731A  928A               	bcf	3978,1,c	;volatile
  7919                           
  7920                           ;MOTEapp.c: 553: LATBbits.LATB2 = 0;
  7921  00731C  948A               	bcf	3978,2,c	;volatile
  7922                           
  7923                           ;MOTEapp.c: 554: LATBbits.LATB3 = 0;
  7924  00731E  968A               	bcf	3978,3,c	;volatile
  7925                           
  7926                           ;MOTEapp.c: 555: LATBbits.LATB5 = 0;
  7927  007320  9A8A               	bcf	3978,5,c	;volatile
  7928                           
  7929                           ;MOTEapp.c: 556: LATBbits.LATB4 = 0;
  7930  007322  988A               	bcf	3978,4,c	;volatile
  7931                           
  7932                           ;MOTEapp.c: 557: LATBbits.LATB6 = 0;
  7933  007324  9C8A               	bcf	3978,6,c	;volatile
  7934  007326                     l10807:
  7935                           
  7936                           ; BSR set to: 1
  7937                           ;MOTEapp.c: 561: moteApp_delayms(100);
  7938  007326  0100               	movlb	0	; () banked
  7939  007328  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7940  00732A  0E64               	movlw	100
  7941  00732C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7942  00732E  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7943                           
  7944                           ; BSR set to: 0
  7945                           ;MOTEapp.c: 564: TRISBbits.TRISB7 = 1;
  7946  007332  8E93               	bsf	3987,7,c	;volatile
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;MOTEapp.c: 565: LATBbits.LATB6 = 1;
  7950  007334  8C8A               	bsf	3978,6,c	;volatile
  7951                           
  7952                           ;MOTEapp.c: 566: moteApp_delayms(5);
  7953  007336  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  7954  007338  0E05               	movlw	5
  7955  00733A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7956  00733C  EC06  F01F         	call	_moteApp_delayms	;wreg free
  7957                           
  7958                           ; BSR set to: 0
  7959                           ;MOTEapp.c: 567: int old_float = float_val;
  7960  007340  C0FA  F0E8         	movff	moteJoiningProcess@float_val,moteJoiningProcess@old_float
  7961  007344  6BE9               	clrf	(moteJoiningProcess@old_float+1)& (0+255),b
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;MOTEapp.c: 568: float_val = (PORTBbits.RB7)?1:0;
  7965  007346  0E00               	movlw	0
  7966  007348  BE81               	btfsc	3969,7,c	;volatile
  7967  00734A  0E01               	movlw	1
  7968  00734C  6FFA               	movwf	moteJoiningProcess@float_val& (0+255),b
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;MOTEapp.c: 569: LATBbits.LATB6 = 0;
  7972  00734E  9C8A               	bcf	3978,6,c	;volatile
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;MOTEapp.c: 571: skip_count++;
  7976  007350  0101               	movlb	1	; () banked
  7977  007352  4B43               	infsnz	moteJoiningProcess@skip_count& (0+255),f,b
  7978  007354  2B44               	incf	(moteJoiningProcess@skip_count+1)& (0+255),f,b
  7979                           
  7980                           ; BSR set to: 1
  7981                           ;MOTEapp.c: 572: if (old_float != float_val || skip_count > 150) {
  7982  007356  0100               	movlb	0	; () banked
  7983  007358  51FA               	movf	moteJoiningProcess@float_val& (0+255),w,b
  7984  00735A  19E8               	xorwf	moteJoiningProcess@old_float& (0+255),w,b
  7985  00735C  11E9               	iorwf	(moteJoiningProcess@old_float+1)& (0+255),w,b
  7986  00735E  E108               	bnz	l434
  7987                           
  7988                           ; BSR set to: 0
  7989  007360  0101               	movlb	1	; () banked
  7990  007362  BF44               	btfsc	(moteJoiningProcess@skip_count+1)& (0+255),7,b
  7991  007364  D7E0               	goto	l10807
  7992  007366  5144               	movf	(moteJoiningProcess@skip_count+1)& (0+255),w,b
  7993  007368  E103               	bnz	u10100
  7994  00736A  0E97               	movlw	151
  7995  00736C  5D43               	subwf	moteJoiningProcess@skip_count& (0+255),w,b
  7996  00736E  E3DB               	bnc	l10807
  7997  007370                     u10100:
  7998  007370                     l434:
  7999                           
  8000                           ;MOTEapp.c: 574: }
  8001                           ;MOTEapp.c: 575: }
  8002                           ;MOTEapp.c: 576: skip_count = 0;
  8003  007370  0101               	movlb	1	; () banked
  8004  007372  6B43               	clrf	moteJoiningProcess@skip_count& (0+255),b
  8005  007374  6B44               	clrf	(moteJoiningProcess@skip_count+1)& (0+255),b
  8006                           
  8007                           ;MOTEapp.c: 580: LATBbits.LATB2 = 1;
  8008  007376  848A               	bsf	3978,2,c	;volatile
  8009                           
  8010                           ;MOTEapp.c: 581: LATBbits.LATB4 = 1;
  8011  007378  888A               	bsf	3978,4,c	;volatile
  8012                           
  8013                           ; BSR set to: 1
  8014                           ;MOTEapp.c: 582: oled_init();
  8015  00737A  EC98  F01E         	call	_oled_init	;wreg free
  8016                           
  8017                           ; BSR set to: 0
  8018                           ;MOTEapp.c: 585: pkt_cnt++;
  8019  00737E  2A2B               	incf	moteJoiningProcess@pkt_cnt,f,c
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;MOTEapp.c: 586: uint16_t batt = ADC_GetConversion(Temp_channel);
  8023  007380  0E02               	movlw	2
  8024  007382  EC67  F020         	call	_ADC_GetConversion
  8025  007386  C060  F0EF         	movff	?_ADC_GetConversion,moteJoiningProcess@batt
  8026  00738A  C061  F0F0         	movff	?_ADC_GetConversion+1,moteJoiningProcess@batt+1
  8027                           
  8028                           ; BSR set to: 0
  8029                           ;MOTEapp.c: 587: sprintf(buf,"radio tx AA%02X%02X%02X%02X%02X",mode,float_val,pkt_cnt,ba
      +                          tt/256,batt%256);
  8030  00738E  0E5A               	movlw	low STR_70
  8031  007390  6F6C               	movwf	sprintf@f& (0+255),b
  8032  007392  0E7B               	movlw	high STR_70
  8033  007394  6F6D               	movwf	(sprintf@f+1)& (0+255),b
  8034  007396  C141  F06E         	movff	moteJoiningProcess@mode,?_sprintf+2
  8035  00739A  C142  F06F         	movff	moteJoiningProcess@mode+1,?_sprintf+3
  8036  00739E  C0FA  F070         	movff	moteJoiningProcess@float_val,?_sprintf+4
  8037  0073A2  6B71               	clrf	(?_sprintf+5)& (0+255),b
  8038  0073A4  C02B  F072         	movff	moteJoiningProcess@pkt_cnt,?_sprintf+6
  8039  0073A8  6B73               	clrf	(?_sprintf+7)& (0+255),b
  8040  0073AA  C0F0  F074         	movff	moteJoiningProcess@batt+1,?_sprintf+8
  8041  0073AE  6B75               	clrf	(?_sprintf+9)& (0+255),b
  8042  0073B0  51EF               	movf	moteJoiningProcess@batt& (0+255),w,b
  8043  0073B2  6F76               	movwf	(?_sprintf+10)& (0+255),b
  8044  0073B4  6B77               	clrf	(?_sprintf+11)& (0+255),b
  8045  0073B6  0EB2               	movlw	moteJoiningProcess@buf& (0+255)
  8046  0073B8  ECBF  F035         	call	_sprintf
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;MOTEapp.c: 588: sendCommand(buf);
  8050  0073BC  0EB2               	movlw	low moteJoiningProcess@buf
  8051  0073BE  6F61               	movwf	sendCommand@string& (0+255),b
  8052  0073C0  6B62               	clrf	(sendCommand@string+1)& (0+255),b
  8053  0073C2  EC35  F022         	call	_sendCommand	;wreg free
  8054  0073C6  0004               	clrwdt		;# 
  8055                           
  8056                           ;MOTEapp.c: 593: oled_clear();
  8057  0073C8  EC24  F01E         	call	_oled_clear	;wreg free
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;MOTEapp.c: 594: oled_putString("radio tx: ",0,0);
  8061  0073CC  0ED1               	movlw	low STR_71
  8062  0073CE  6F6D               	movwf	oled_putString@string& (0+255),b
  8063  0073D0  0E7E               	movlw	high STR_71
  8064  0073D2  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  8065  0073D4  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8066  0073D6  6B70               	clrf	oled_putString@start_page& (0+255),b
  8067  0073D8  EC17  F023         	call	_oled_putString	;wreg free
  8068                           
  8069                           ;MOTEapp.c: 595: oled_putString(&buf[9],0,1);
  8070  0073DC  0EBB               	movlw	low (moteJoiningProcess@buf+9)
  8071  0073DE  0100               	movlb	0	; () banked
  8072  0073E0  6F6D               	movwf	oled_putString@string& (0+255),b
  8073  0073E2  6B6E               	clrf	(oled_putString@string+1)& (0+255),b
  8074  0073E4  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8075  0073E6  0E01               	movlw	1
  8076  0073E8  6F70               	movwf	oled_putString@start_page& (0+255),b
  8077  0073EA  EC17  F023         	call	_oled_putString	;wreg free
  8078                           
  8079                           ;MOTEapp.c: 597: } else {
  8080  0073EE  D116               	goto	l10905
  8081  0073F0                     l10841:
  8082                           
  8083                           ; BSR set to: 1
  8084                           ;MOTEapp.c: 599: if (!pending_confirm) {
  8085  0073F0  5154               	movf	moteJoiningProcess@pending_confirm& (0+255),w,b
  8086  0073F2  E108               	bnz	l10845
  8087                           
  8088                           ; BSR set to: 1
  8089                           ;MOTEapp.c: 601: sendCommand("radio rx 0");
  8090  0073F4  0EDC               	movlw	low STR_72
  8091  0073F6  0100               	movlb	0	; () banked
  8092  0073F8  6F61               	movwf	sendCommand@string& (0+255),b
  8093  0073FA  0E7E               	movlw	high STR_72
  8094  0073FC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  8095  0073FE  EC35  F022         	call	_sendCommand	;wreg free
  8096                           
  8097                           ;MOTEapp.c: 602: } else {
  8098  007402  D01A               	goto	l10853
  8099  007404                     l10845:
  8100                           
  8101                           ; BSR set to: 1
  8102                           ;MOTEapp.c: 604: pkt_cnt++;
  8103  007404  2A2B               	incf	moteJoiningProcess@pkt_cnt,f,c
  8104                           
  8105                           ; BSR set to: 1
  8106                           ;MOTEapp.c: 605: sprintf(buf,"radio tx AA%02X%02X%02X",mode,float_val,pkt_cnt);
  8107  007406  0EE2               	movlw	low STR_73
  8108  007408  0100               	movlb	0	; () banked
  8109  00740A  6F6C               	movwf	sprintf@f& (0+255),b
  8110  00740C  0E7B               	movlw	high STR_73
  8111  00740E  6F6D               	movwf	(sprintf@f+1)& (0+255),b
  8112  007410  C141  F06E         	movff	moteJoiningProcess@mode,?_sprintf+2
  8113  007414  C142  F06F         	movff	moteJoiningProcess@mode+1,?_sprintf+3
  8114  007418  C0FA  F070         	movff	moteJoiningProcess@float_val,?_sprintf+4
  8115  00741C  6B71               	clrf	(?_sprintf+5)& (0+255),b
  8116  00741E  C02B  F072         	movff	moteJoiningProcess@pkt_cnt,?_sprintf+6
  8117  007422  6B73               	clrf	(?_sprintf+7)& (0+255),b
  8118  007424  0EB2               	movlw	moteJoiningProcess@buf& (0+255)
  8119  007426  ECBF  F035         	call	_sprintf
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;MOTEapp.c: 606: sendCommand(buf);
  8123  00742A  0EB2               	movlw	low moteJoiningProcess@buf
  8124  00742C  6F61               	movwf	sendCommand@string& (0+255),b
  8125  00742E  6B62               	clrf	(sendCommand@string+1)& (0+255),b
  8126  007430  EC35  F022         	call	_sendCommand	;wreg free
  8127                           
  8128                           ;MOTEapp.c: 607: pending_confirm = 0;
  8129  007434  0101               	movlb	1	; () banked
  8130  007436  6B54               	clrf	moteJoiningProcess@pending_confirm& (0+255),b
  8131  007438                     l10853:
  8132                           
  8133                           ;MOTEapp.c: 608: }
  8134                           ;MOTEapp.c: 611: if (modemResonseBuffer[0]=='r' &&
  8135                           ;MOTEapp.c: 612: modemResonseBuffer[6]=='r' &&
  8136                           ;MOTEapp.c: 613: modemResonseBuffer[7]=='x' &&
  8137                           ;MOTEapp.c: 614: modemResonseBuffer[10]=='A' &&
  8138                           ;MOTEapp.c: 615: modemResonseBuffer[11]=='A')
  8139  007438  0E72               	movlw	114
  8140  00743A  0101               	movlb	1	; () banked
  8141  00743C  1996               	xorwf	_modemResonseBuffer& (0+255),w,b
  8142  00743E  E001 D0ED          	bnz	l10905
  8143                           
  8144                           ; BSR set to: 1
  8145  007442  0E72               	movlw	114
  8146  007444  199C               	xorwf	(_modemResonseBuffer+6)& (0+255),w,b
  8147  007446  E001 D0E9          	bnz	l10905
  8148                           
  8149                           ; BSR set to: 1
  8150  00744A  0E78               	movlw	120
  8151  00744C  199D               	xorwf	(_modemResonseBuffer+7)& (0+255),w,b
  8152  00744E  E001 D0E5          	bnz	l10905
  8153                           
  8154                           ; BSR set to: 1
  8155  007452  0E41               	movlw	65
  8156  007454  19A0               	xorwf	(_modemResonseBuffer+10)& (0+255),w,b
  8157  007456  E001 D0E1          	bnz	l10905
  8158                           
  8159                           ; BSR set to: 1
  8160  00745A  0E41               	movlw	65
  8161  00745C  19A1               	xorwf	(_modemResonseBuffer+11)& (0+255),w,b
  8162  00745E  E001 D0DD          	bnz	l10905
  8163                           
  8164                           ; BSR set to: 1
  8165                           ;MOTEapp.c: 616: {
  8166                           ;MOTEapp.c: 618: if (modemResonseBuffer[13]=='1')
  8167  007462  0E31               	movlw	49
  8168  007464  19A3               	xorwf	(_modemResonseBuffer+13)& (0+255),w,b
  8169  007466  E001 D0CF          	bnz	l10901
  8170                           
  8171                           ; BSR set to: 1
  8172  00746A  0004               	clrwdt		;# 
  8173                           
  8174                           ;MOTEapp.c: 628: if (modemResonseBuffer[15]=='1') {
  8175  00746C  0E31               	movlw	49
  8176  00746E  19A5               	xorwf	(_modemResonseBuffer+15)& (0+255),w,b
  8177  007470  E111               	bnz	l441
  8178                           
  8179                           ; BSR set to: 1
  8180                           ;MOTEapp.c: 630: TRISBbits.TRISB7 = 0;
  8181  007472  9E93               	bcf	3987,7,c	;volatile
  8182                           
  8183                           ;MOTEapp.c: 631: LATBbits.LATB7 = 1;
  8184  007474  8E8A               	bsf	3978,7,c	;volatile
  8185                           
  8186                           ;MOTEapp.c: 632: TRISBbits.TRISB6 = 1;
  8187  007476  8C93               	bsf	3987,6,c	;volatile
  8188                           
  8189                           ; BSR set to: 1
  8190                           ;MOTEapp.c: 633: float_val = 1;
  8191  007478  0E01               	movlw	1
  8192  00747A  0100               	movlb	0	; () banked
  8193  00747C  6FFA               	movwf	moteJoiningProcess@float_val& (0+255),b
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;MOTEapp.c: 634: oled_clear();
  8197  00747E  EC24  F01E         	call	_oled_clear	;wreg free
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;MOTEapp.c: 635: oled_putString("RX Pump OFF",0,0);
  8201  007482  0E95               	movlw	low STR_74
  8202  007484  6F6D               	movwf	oled_putString@string& (0+255),b
  8203  007486  0E7E               	movlw	high STR_74
  8204  007488  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  8205  00748A  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8206  00748C  6B70               	clrf	oled_putString@start_page& (0+255),b
  8207  00748E  EC17  F023         	call	_oled_putString	;wreg free
  8208                           
  8209                           ;MOTEapp.c: 636: } else {
  8210  007492  D00F               	goto	l10881
  8211  007494                     l441:
  8212                           
  8213                           ; BSR set to: 1
  8214                           ;MOTEapp.c: 638: TRISBbits.TRISB7 = 0;
  8215  007494  9E93               	bcf	3987,7,c	;volatile
  8216                           
  8217                           ;MOTEapp.c: 639: LATBbits.LATB7 = 0;
  8218  007496  9E8A               	bcf	3978,7,c	;volatile
  8219                           
  8220                           ;MOTEapp.c: 640: TRISBbits.TRISB6 = 1;
  8221  007498  8C93               	bsf	3987,6,c	;volatile
  8222                           
  8223                           ;MOTEapp.c: 641: float_val = 0;
  8224  00749A  0100               	movlb	0	; () banked
  8225  00749C  6BFA               	clrf	moteJoiningProcess@float_val& (0+255),b
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;MOTEapp.c: 642: oled_clear();
  8229  00749E  EC24  F01E         	call	_oled_clear	;wreg free
  8230                           
  8231                           ; BSR set to: 0
  8232                           ;MOTEapp.c: 643: oled_putString("RX Pump ON",0,0);
  8233  0074A2  0EE7               	movlw	low STR_75
  8234  0074A4  6F6D               	movwf	oled_putString@string& (0+255),b
  8235  0074A6  0E7E               	movlw	high STR_75
  8236  0074A8  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  8237  0074AA  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8238  0074AC  6B70               	clrf	oled_putString@start_page& (0+255),b
  8239  0074AE  EC17  F023         	call	_oled_putString	;wreg free
  8240  0074B2                     l10881:
  8241                           
  8242                           ;MOTEapp.c: 644: }
  8243                           ;MOTEapp.c: 645: oled_putString(&modemResonseBuffer[18],0,1);
  8244  0074B2  0EA8               	movlw	low (_modemResonseBuffer+18)
  8245  0074B4  0100               	movlb	0	; () banked
  8246  0074B6  6F6D               	movwf	oled_putString@string& (0+255),b
  8247  0074B8  0E01               	movlw	high (_modemResonseBuffer+18)
  8248  0074BA  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  8249  0074BC  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8250  0074BE  0E01               	movlw	1
  8251  0074C0  6F70               	movwf	oled_putString@start_page& (0+255),b
  8252  0074C2  EC17  F023         	call	_oled_putString	;wreg free
  8253                           
  8254                           ;MOTEapp.c: 648: uint16_t ana = 4096*nibble2int(modemResonseBuffer[18])
  8255                           ;MOTEapp.c: 649: + 256*nibble2int(modemResonseBuffer[19])
  8256                           ;MOTEapp.c: 650: + 16*nibble2int(modemResonseBuffer[20])
  8257                           ;MOTEapp.c: 651: + nibble2int(modemResonseBuffer[21]);
  8258  0074C6  0101               	movlb	1	; () banked
  8259  0074C8  51AB               	movf	(_modemResonseBuffer+21)& (0+255),w,b
  8260  0074CA  ECA1  F020         	call	_nibble2int
  8261  0074CE  6FAB               	movwf	??_moteJoiningProcess& (0+255),b
  8262  0074D0  0101               	movlb	1	; () banked
  8263  0074D2  51A9               	movf	(_modemResonseBuffer+19)& (0+255),w,b
  8264  0074D4  ECA1  F020         	call	_nibble2int
  8265  0074D8  6FAD               	movwf	(??_moteJoiningProcess+2)& (0+255),b
  8266  0074DA  6BAC               	clrf	(??_moteJoiningProcess+1)& (0+255),b
  8267  0074DC  0101               	movlb	1	; () banked
  8268  0074DE  51A8               	movf	(_modemResonseBuffer+18)& (0+255),w,b
  8269  0074E0  ECA1  F020         	call	_nibble2int
  8270  0074E4  6FAE               	movwf	(??_moteJoiningProcess+3)& (0+255),b
  8271  0074E6  6BAF               	clrf	(??_moteJoiningProcess+4)& (0+255),b
  8272  0074E8  0E00               	movlw	0
  8273  0074EA  03AE               	mulwf	(??_moteJoiningProcess+3)& (0+255),b
  8274  0074EC  CFF3 F0B0          	movff	prodl,??_moteJoiningProcess+5
  8275  0074F0  CFF4 F0B1          	movff	prodh,??_moteJoiningProcess+6
  8276  0074F4  03AF               	mulwf	(??_moteJoiningProcess+4)& (0+255),b
  8277  0074F6  50F3               	movf	prodl,w,c
  8278  0074F8  27B1               	addwf	(??_moteJoiningProcess+6)& (0+255),f,b
  8279  0074FA  0E10               	movlw	16
  8280  0074FC  03AE               	mulwf	(??_moteJoiningProcess+3)& (0+255),b
  8281  0074FE  50F3               	movf	prodl,w,c
  8282  007500  27B1               	addwf	(??_moteJoiningProcess+6)& (0+255),f,b
  8283  007502  0101               	movlb	1	; () banked
  8284  007504  51AA               	movf	(_modemResonseBuffer+20)& (0+255),w,b
  8285  007506  ECA1  F020         	call	_nibble2int
  8286  00750A  0D10               	mullw	16
  8287  00750C  50F3               	movf	prodl,w,c
  8288  00750E  27B0               	addwf	(??_moteJoiningProcess+5)& (0+255),f,b
  8289  007510  50F4               	movf	prodh,w,c
  8290  007512  23B1               	addwfc	(??_moteJoiningProcess+6)& (0+255),f,b
  8291  007514  51AC               	movf	(??_moteJoiningProcess+1)& (0+255),w,b
  8292  007516  27B0               	addwf	(??_moteJoiningProcess+5)& (0+255),f,b
  8293  007518  51AD               	movf	(??_moteJoiningProcess+2)& (0+255),w,b
  8294  00751A  23B1               	addwfc	(??_moteJoiningProcess+6)& (0+255),f,b
  8295  00751C  51AB               	movf	??_moteJoiningProcess& (0+255),w,b
  8296  00751E  25B0               	addwf	(??_moteJoiningProcess+5)& (0+255),w,b
  8297  007520  6FEA               	movwf	moteJoiningProcess@ana& (0+255),b
  8298  007522  0E00               	movlw	0
  8299  007524  21B1               	addwfc	(??_moteJoiningProcess+6)& (0+255),w,b
  8300  007526  6FEB               	movwf	(moteJoiningProcess@ana+1)& (0+255),b
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;MOTEapp.c: 652: uint16_t cV = ((float)ana)*100.0/828.0*13.22;
  8304  007528  6B8B               	clrf	___fldiv@a& (0+255),b
  8305  00752A  6B8C               	clrf	(___fldiv@a+1)& (0+255),b
  8306  00752C  0E4F               	movlw	79
  8307  00752E  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
  8308  007530  0E44               	movlw	68
  8309  007532  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
  8310  007534  6B72               	clrf	___flmul@a& (0+255),b
  8311  007536  6B73               	clrf	(___flmul@a+1)& (0+255),b
  8312  007538  0EC8               	movlw	200
  8313  00753A  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8314  00753C  0E42               	movlw	66
  8315  00753E  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8316  007540  C0EA  F060         	movff	moteJoiningProcess@ana,___xxtofl@val
  8317  007544  C0EB  F061         	movff	moteJoiningProcess@ana+1,___xxtofl@val+1
  8318  007548  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  8319  00754A  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  8320  00754C  0E00               	movlw	0
  8321  00754E  ECF1  F02E         	call	___xxtofl
  8322  007552  C060  F06E         	movff	?___xxtofl,___flmul@b
  8323  007556  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  8324  00755A  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  8325  00755E  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  8326  007562  EC6D  F034         	call	___flmul	;wreg free
  8327  007566  C06E  F087         	movff	?___flmul,___fldiv@b
  8328  00756A  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
  8329  00756E  C070  F089         	movff	?___flmul+2,___fldiv@b+2
  8330  007572  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
  8331  007576  EC64  F032         	call	___fldiv	;wreg free
  8332  00757A  C087  F0E4         	movff	?___fldiv,_moteJoiningProcess$6551
  8333  00757E  C088  F0E5         	movff	?___fldiv+1,_moteJoiningProcess$6551+1
  8334  007582  C089  F0E6         	movff	?___fldiv+2,_moteJoiningProcess$6551+2
  8335  007586  C08A  F0E7         	movff	?___fldiv+3,_moteJoiningProcess$6551+3
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;MOTEapp.c: 652: uint16_t cV = ((float)ana)*100.0/828.0*13.22;
  8339  00758A  0E1F               	movlw	31
  8340  00758C  6F72               	movwf	___flmul@a& (0+255),b
  8341  00758E  0E85               	movlw	133
  8342  007590  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8343  007592  0E53               	movlw	83
  8344  007594  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8345  007596  0E41               	movlw	65
  8346  007598  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8347  00759A  C0E4  F06E         	movff	_moteJoiningProcess$6551,___flmul@b
  8348  00759E  C0E5  F06F         	movff	_moteJoiningProcess$6551+1,___flmul@b+1
  8349  0075A2  C0E6  F070         	movff	_moteJoiningProcess$6551+2,___flmul@b+2
  8350  0075A6  C0E7  F071         	movff	_moteJoiningProcess$6551+3,___flmul@b+3
  8351  0075AA  EC6D  F034         	call	___flmul	;wreg free
  8352  0075AE  C06E  F0A0         	movff	?___flmul,___fltol@f1
  8353  0075B2  C06F  F0A1         	movff	?___flmul+1,___fltol@f1+1
  8354  0075B6  C070  F0A2         	movff	?___flmul+2,___fltol@f1+2
  8355  0075BA  C071  F0A3         	movff	?___flmul+3,___fltol@f1+3
  8356  0075BE  EC2F  F026         	call	___fltol	;wreg free
  8357  0075C2  C0A0  F0EC         	movff	?___fltol,moteJoiningProcess@cV
  8358  0075C6  C0A1  F0ED         	movff	?___fltol+1,moteJoiningProcess@cV+1
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;MOTEapp.c: 653: sprintf(buf," %dcV",cV);
  8362  0075CA  0EF2               	movlw	low STR_76
  8363  0075CC  6F6C               	movwf	sprintf@f& (0+255),b
  8364  0075CE  0E7F               	movlw	high STR_76
  8365  0075D0  6F6D               	movwf	(sprintf@f+1)& (0+255),b
  8366  0075D2  C0EC  F06E         	movff	moteJoiningProcess@cV,?_sprintf+2
  8367  0075D6  C0ED  F06F         	movff	moteJoiningProcess@cV+1,?_sprintf+3
  8368  0075DA  0EB2               	movlw	moteJoiningProcess@buf& (0+255)
  8369  0075DC  ECBF  F035         	call	_sprintf
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;MOTEapp.c: 654: oled_putString(buf,5,1);
  8373  0075E0  0EB2               	movlw	low moteJoiningProcess@buf
  8374  0075E2  6F6D               	movwf	oled_putString@string& (0+255),b
  8375  0075E4  6B6E               	clrf	(oled_putString@string+1)& (0+255),b
  8376  0075E6  0E05               	movlw	5
  8377  0075E8  6F6F               	movwf	oled_putString@station_dot& (0+255),b
  8378  0075EA  0E01               	movlw	1
  8379  0075EC  6F70               	movwf	oled_putString@start_page& (0+255),b
  8380  0075EE  EC17  F023         	call	_oled_putString	;wreg free
  8381                           
  8382                           ;MOTEapp.c: 657: LATAbits.LATA5 = 1;
  8383  0075F2  8A89               	bsf	3977,5,c	;volatile
  8384                           
  8385                           ;MOTEapp.c: 658: moteApp_delayms(50);
  8386  0075F4  0100               	movlb	0	; () banked
  8387  0075F6  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8388  0075F8  0E32               	movlw	50
  8389  0075FA  6F60               	movwf	moteApp_delayms@length& (0+255),b
  8390  0075FC  EC06  F01F         	call	_moteApp_delayms	;wreg free
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;MOTEapp.c: 659: LATAbits.LATA5 = 0;
  8394  007600  9A89               	bcf	3977,5,c	;volatile
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;MOTEapp.c: 662: pending_confirm = 0;
  8398  007602  0101               	movlb	1	; () banked
  8399  007604  6B54               	clrf	moteJoiningProcess@pending_confirm& (0+255),b
  8400                           
  8401                           ;MOTEapp.c: 663: } else {
  8402  007606  D00A               	goto	l10905
  8403  007608                     l10901:
  8404                           
  8405                           ; BSR set to: 1
  8406                           ;MOTEapp.c: 665: oled_clear();
  8407  007608  EC24  F01E         	call	_oled_clear	;wreg free
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;MOTEapp.c: 666: oled_putString("Got RX Message:",0,0);
  8411  00760C  0E49               	movlw	low STR_77
  8412  00760E  6F6D               	movwf	oled_putString@string& (0+255),b
  8413  007610  0E7D               	movlw	high STR_77
  8414  007612  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  8415  007614  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8416  007616  6B70               	clrf	oled_putString@start_page& (0+255),b
  8417  007618  EC17  F023         	call	_oled_putString	;wreg free
  8418  00761C                     l10905:
  8419                           
  8420                           ;MOTEapp.c: 670: }
  8421                           ;MOTEapp.c: 671: }
  8422                           ;MOTEapp.c: 672: }
  8423                           ;MOTEapp.c: 673: moteApp_delayms(250);
  8424  00761C  0100               	movlb	0	; () banked
  8425  00761E  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8426  007620  0EFA               	movlw	250
  8427  007622  6F60               	movwf	moteApp_delayms@length& (0+255),b
  8428  007624  EC06  F01F         	call	_moteApp_delayms	;wreg free
  8429                           
  8430                           ; BSR set to: 0
  8431                           ;MOTEapp.c: 674: activeState = moteTxJoin;
  8432  007628  0E0E               	movlw	14
  8433  00762A  D01E               	goto	L16
  8434  00762C                     l10909:
  8435                           
  8436                           ; BSR set to: 1
  8437                           ;MOTEapp.c: 678: if ( messageReady )
  8438  00762C  0100               	movlb	0	; () banked
  8439  00762E  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  8440  007630  E101 D0A2          	bz	l10953
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;MOTEapp.c: 679: {
  8444                           ;MOTEapp.c: 680: if (mode == 1) {
  8445  007634  0101               	movlb	1	; () banked
  8446  007636  0541               	decf	moteJoiningProcess@mode& (0+255),w,b
  8447  007638  1142               	iorwf	(moteJoiningProcess@mode+1)& (0+255),w,b
  8448  00763A  E001 D65C          	bnz	l10797
  8449                           
  8450                           ; BSR set to: 1
  8451                           ;MOTEapp.c: 681: if(strcmp(modemResonseBuffer, "ok") == 0)
  8452  00763E  0E96               	movlw	low _modemResonseBuffer
  8453  007640  0100               	movlb	0	; () banked
  8454  007642  6F60               	movwf	strcmp@s1& (0+255),b
  8455  007644  0E01               	movlw	high _modemResonseBuffer
  8456  007646  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  8457  007648  0EAA               	movlw	low (STR_79+9)
  8458  00764A  6F62               	movwf	strcmp@s2& (0+255),b
  8459  00764C  0E7E               	movlw	high (STR_79+9)
  8460  00764E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  8461  007650  ECD2  F024         	call	_strcmp	;wreg free
  8462  007654  5160               	movf	?_strcmp& (0+255),w,b
  8463  007656  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  8464  007658  E001 D47B          	bnz	l381
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;MOTEapp.c: 682: {
  8468                           ;MOTEapp.c: 686: moteApp_delayms(50);
  8469  00765C  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8470  00765E  0E32               	movlw	50
  8471  007660  6F60               	movwf	moteApp_delayms@length& (0+255),b
  8472  007662  EC06  F01F         	call	_moteApp_delayms	;wreg free
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;MOTEapp.c: 687: activeState = moteTxWait;
  8476  007666  0E0F               	movlw	15
  8477  007668                     L16:
  8478  007668  0101               	movlb	1	; () banked
  8479  00766A  6F4C               	movwf	_activeState& (0+255),b
  8480                           
  8481                           ;MOTEapp.c: 688: }
  8482  00766C  D085               	goto	l10953
  8483  00766E                     l10923:
  8484                           
  8485                           ; BSR set to: 1
  8486                           ;MOTEapp.c: 700: if ( messageReady )
  8487  00766E  0100               	movlb	0	; () banked
  8488  007670  51F1               	movf	moteJoiningProcess@messageReady& (0+255),w,b
  8489  007672  E101 D081          	bz	l10953
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;MOTEapp.c: 701: {
  8493                           ;MOTEapp.c: 702: if(strcmp(modemResonseBuffer, "radio_tx_ok") == 0)
  8494  007676  0E96               	movlw	low _modemResonseBuffer
  8495  007678  6F60               	movwf	strcmp@s1& (0+255),b
  8496  00767A  0E01               	movlw	high _modemResonseBuffer
  8497  00767C  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  8498  00767E  0EA1               	movlw	low STR_79
  8499  007680  6F62               	movwf	strcmp@s2& (0+255),b
  8500  007682  0E7E               	movlw	high STR_79
  8501  007684  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  8502  007686  ECD2  F024         	call	_strcmp	;wreg free
  8503  00768A  5160               	movf	?_strcmp& (0+255),w,b
  8504  00768C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  8505  00768E  E001 D460          	bnz	l381
  8506                           
  8507                           ; BSR set to: 0
  8508                           ;MOTEapp.c: 703: {
  8509                           ;MOTEapp.c: 704: sendCommand("mac pause");
  8510  007692  0E11               	movlw	low STR_67
  8511  007694  6F61               	movwf	sendCommand@string& (0+255),b
  8512  007696  0E7F               	movlw	high STR_67
  8513  007698  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  8514  00769A  EC35  F022         	call	_sendCommand	;wreg free
  8515                           
  8516                           ;MOTEapp.c: 705: oled_clear();
  8517  00769E  EC24  F01E         	call	_oled_clear	;wreg free
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;MOTEapp.c: 706: oled_putString("",0,0);
  8521  0076A2  0E93               	movlw	low (STR_103+25)
  8522  0076A4  6F6D               	movwf	oled_putString@string& (0+255),b
  8523  0076A6  0E7B               	movlw	high (STR_103+25)
  8524  0076A8  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  8525  0076AA  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8526  0076AC  6B70               	clrf	oled_putString@start_page& (0+255),b
  8527  0076AE  EC17  F023         	call	_oled_putString	;wreg free
  8528                           
  8529                           ;MOTEapp.c: 707: oled_putString("Success!",0,1);
  8530  0076B2  0E42               	movlw	low STR_82
  8531  0076B4  0100               	movlb	0	; () banked
  8532  0076B6  6F6D               	movwf	oled_putString@string& (0+255),b
  8533  0076B8  0E7F               	movlw	high STR_82
  8534  0076BA  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
  8535  0076BC  6B6F               	clrf	oled_putString@station_dot& (0+255),b
  8536  0076BE  0E01               	movlw	1
  8537  0076C0  6F70               	movwf	oled_putString@start_page& (0+255),b
  8538  0076C2  EC17  F023         	call	_oled_putString	;wreg free
  8539                           
  8540                           ;MOTEapp.c: 708: moteApp_delayms(200);
  8541  0076C6  0100               	movlb	0	; () banked
  8542  0076C8  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8543  0076CA  0EC8               	movlw	200
  8544  0076CC  6F60               	movwf	moteApp_delayms@length& (0+255),b
  8545  0076CE  EC06  F01F         	call	_moteApp_delayms	;wreg free
  8546  0076D2  D617               	goto	l10799
  8547  0076D4                     l10939:
  8548                           
  8549                           ; BSR set to: 1
  8550                           ;MOTEapp.c: 719: joiningComplete = 1;
  8551  0076D4  0E01               	movlw	1
  8552  0076D6  0100               	movlb	0	; () banked
  8553  0076D8  6FEE               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;MOTEapp.c: 720: moteApp_delayms(50);
  8557  0076DA  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8558  0076DC  0E32               	movlw	50
  8559  0076DE  6F60               	movwf	moteApp_delayms@length& (0+255),b
  8560  0076E0  EC06  F01F         	call	_moteApp_delayms	;wreg free
  8561                           
  8562                           ;MOTEapp.c: 721: break;
  8563  0076E4  D049               	goto	l10953
  8564  0076E6                     l10943:
  8565                           
  8566                           ; BSR set to: 1
  8567                           ;MOTEapp.c: 723: DATAEE_WriteByte(0x00, 0x00);
  8568  0076E6  0E00               	movlw	0
  8569  0076E8  0100               	movlb	0	; () banked
  8570  0076EA  6B60               	clrf	DATAEE_WriteByte@bData& (0+255),b
  8571  0076EC  EC84  F020         	call	_DATAEE_WriteByte
  8572  0076F0                     l456:
  8573  0076F0  B082               	btfsc	3970,0,c	;volatile
  8574  0076F2  D002               	goto	l10947
  8575  0076F4  A282               	btfss	3970,1,c	;volatile
  8576  0076F6  D7FC               	goto	l456
  8577  0076F8                     l10947:
  8578                           
  8579                           ;MOTEapp.c: 725: moteApp_delayms(40);
  8580  0076F8  0100               	movlb	0	; () banked
  8581  0076FA  6B61               	clrf	(moteApp_delayms@length+1)& (0+255),b
  8582  0076FC  0E28               	movlw	40
  8583  0076FE  6F60               	movwf	moteApp_delayms@length& (0+255),b
  8584  007700  EC06  F01F         	call	_moteApp_delayms	;wreg free
  8585  007704  00FF               	reset		;# 
  8586                           
  8587                           ;MOTEapp.c: 728: break;
  8588  007706  D038               	goto	l10953
  8589  007708                     l10951:
  8590  007708  0101               	movlb	1	; () banked
  8591  00770A  514C               	movf	_activeState& (0+255),w,b
  8592                           
  8593                           ; Switch size 1, requested type "speed"
  8594                           ; Number of cases is 18, Range of values is 0 to 17
  8595                           ; switch strategies available:
  8596                           ; Name         Instructions Cycles
  8597                           ; simple_byte           55    28 (average)
  8598                           ;	Chosen strategy is simple_byte
  8599  00770C  E102 EF3F  F037    	bz	l10609
  8600  007712  0A01               	xorlw	1	; case 1
  8601  007714  E102 EF7C  F037    	bz	l10631
  8602  00771A  0A03               	xorlw	3	; case 2
  8603  00771C  E101 D41D          	bz	l10645
  8604  007720  0A01               	xorlw	1	; case 3
  8605  007722  E101 D444          	bz	l10659
  8606  007726  0A07               	xorlw	7	; case 4
  8607  007728  E101 D46A          	bz	l10673
  8608  00772C  0A01               	xorlw	1	; case 5
  8609  00772E  E101 D490          	bz	l10687
  8610  007732  0A03               	xorlw	3	; case 6
  8611  007734  E101 D4B7          	bz	l10701
  8612  007738  0A01               	xorlw	1	; case 7
  8613  00773A  E101 D4DE          	bz	l10715
  8614  00773E  0A0F               	xorlw	15	; case 8
  8615  007740  E101 D505          	bz	l10729
  8616  007744  0A01               	xorlw	1	; case 9
  8617  007746  E101 D52C          	bz	l10743
  8618  00774A  0A03               	xorlw	3	; case 10
  8619  00774C  E101 D553          	bz	l10757
  8620  007750  0A01               	xorlw	1	; case 11
  8621  007752  E101 D57A          	bz	l10771
  8622  007756  0A07               	xorlw	7	; case 12
  8623  007758  E101 D5A1          	bz	l10785
  8624  00775C  0A01               	xorlw	1	; case 13
  8625  00775E  E101 D5D2          	bz	l10801
  8626  007762  0A03               	xorlw	3	; case 14
  8627  007764  E101 D762          	bz	l10909
  8628  007768  0A01               	xorlw	1	; case 15
  8629  00776A  E081               	bz	l10923
  8630  00776C  0A1F               	xorlw	31	; case 16
  8631  00776E  E0B2               	bz	l10939
  8632  007770  0A01               	xorlw	1	; case 17
  8633  007772  E0B9               	bz	l10943
  8634  007774  EF3E  F037         	goto	l372
  8635  007778                     l10953:
  8636                           
  8637                           ;MOTEapp.c: 730: return joiningComplete;
  8638  007778  0100               	movlb	0	; () banked
  8639  00777A  51EE               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
  8640                           
  8641                           ; BSR set to: 0
  8642  00777C  0012               	return		;funcret
  8643  00777E                     __end_of_moteJoiningProcess:
  8644                           	opt stack 0
  8645                           tblptru	equ	0xFF8
  8646                           tblptrh	equ	0xFF7
  8647                           tblptrl	equ	0xFF6
  8648                           tablat	equ	0xFF5
  8649                           prodh	equ	0xFF4
  8650                           prodl	equ	0xFF3
  8651                           intcon	equ	0xFF2
  8652                           postinc0	equ	0xFEE
  8653                           wreg	equ	0xFE8
  8654                           indf2	equ	0xFDF
  8655                           fsr2h	equ	0xFDA
  8656                           fsr2l	equ	0xFD9
  8657                           status	equ	0xFD8
  8658                           
  8659 ;; *************** function _strncmp *****************
  8660 ;; Defined at:
  8661 ;;		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/strncmp.c"
  8662 ;; Parameters:    Size  Location     Type
  8663 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  8664 ;;		 -> modemResonseBuffer(64), 
  8665 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  8666 ;;		 -> STR_33(3), 
  8667 ;;  len             2    4[BANK0 ] unsigned int 
  8668 ;; Auto vars:     Size  Location     Type
  8669 ;;		None
  8670 ;; Return value:  Size  Location     Type
  8671 ;;                  2    0[BANK0 ] int 
  8672 ;; Registers used:
  8673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8674 ;; Tracked objects:
  8675 ;;		On entry : F/0
  8676 ;;		On exit  : F/0
  8677 ;;		Unchanged: 0/0
  8678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8679 ;;      Params:         0       6       0       0       0       0       0       0       0
  8680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8681 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8682 ;;      Totals:         0       7       0       0       0       0       0       0       0
  8683 ;;Total ram usage:        7 bytes
  8684 ;; Hardware stack levels used:    1
  8685 ;; Hardware stack levels required when called:   11
  8686 ;; This function calls:
  8687 ;;		Nothing
  8688 ;; This function is called by:
  8689 ;;		_moteJoiningProcess
  8690 ;; This function uses a non-reentrant model
  8691 ;;
  8692                           
  8693                           	psect	text23
  8694  004694                     __ptext23:
  8695                           	opt stack 0
  8696  004694                     _strncmp:
  8697                           	opt stack 17
  8698                           
  8699                           ; BSR set to: 0
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;incstack = 0
  8703  004694  D029               	goto	l9729
  8704  004696                     l9719:
  8705                           
  8706                           ; BSR set to: 0
  8707  004696  C060  FFD9         	movff	strncmp@s1,fsr2l
  8708  00469A  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  8709  00469E  50DF               	movf	indf2,w,c
  8710  0046A0  E00D               	bz	l9723
  8711                           
  8712                           ; BSR set to: 0
  8713  0046A2  C060  FFD9         	movff	strncmp@s1,fsr2l
  8714  0046A6  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  8715  0046AA  50DF               	movf	indf2,w,c
  8716  0046AC  6F66               	movwf	??_strncmp& (0+255),b
  8717  0046AE  C062  FFF6         	movff	strncmp@s2,tblptrl
  8718  0046B2  C063  FFF7         	movff	strncmp@s2+1,tblptrh
  8719  0046B6                     	if	0	;tblptru may be non-zero
  8720  0046B6                     	endif
  8721  0046B6                     	if	0	;tblptru may be non-zero
  8722  0046B6                     	endif
  8723  0046B6  0008               	tblrd		*
  8724  0046B8  18F5               	xorwf	tablat,w,c
  8725  0046BA  E012               	bz	l9727
  8726  0046BC                     l9723:
  8727                           
  8728                           ; BSR set to: 0
  8729  0046BC  C060  FFD9         	movff	strncmp@s1,fsr2l
  8730  0046C0  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  8731  0046C4  50DF               	movf	indf2,w,c
  8732  0046C6  6F66               	movwf	??_strncmp& (0+255),b
  8733  0046C8  C062  FFF6         	movff	strncmp@s2,tblptrl
  8734  0046CC  C063  FFF7         	movff	strncmp@s2+1,tblptrh
  8735  0046D0                     	if	0	;tblptru may be non-zero
  8736  0046D0                     	endif
  8737  0046D0                     	if	0	;tblptru may be non-zero
  8738  0046D0                     	endif
  8739  0046D0  0008               	tblrd		*
  8740  0046D2  50F5               	movf	tablat,w,c
  8741  0046D4  5D66               	subwf	??_strncmp& (0+255),w,b
  8742  0046D6  6F60               	movwf	?_strncmp& (0+255),b
  8743  0046D8  6B61               	clrf	(?_strncmp+1)& (0+255),b
  8744  0046DA  A0D8               	btfss	status,0,c
  8745  0046DC  0761               	decf	(?_strncmp+1)& (0+255),f,b
  8746  0046DE  0012               	return	
  8747  0046E0                     l9727:
  8748                           
  8749                           ; BSR set to: 0
  8750  0046E0  4B60               	infsnz	strncmp@s1& (0+255),f,b
  8751  0046E2  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
  8752  0046E4  4B62               	infsnz	strncmp@s2& (0+255),f,b
  8753  0046E6  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
  8754  0046E8                     l9729:
  8755                           
  8756                           ; BSR set to: 0
  8757  0046E8  0764               	decf	strncmp@len& (0+255),f,b
  8758  0046EA  A0D8               	btfss	status,0,c
  8759  0046EC  0765               	decf	(strncmp@len+1)& (0+255),f,b
  8760  0046EE  2964               	incf	strncmp@len& (0+255),w,b
  8761  0046F0  E1D2               	bnz	l9719
  8762  0046F2  2965               	incf	(strncmp@len+1)& (0+255),w,b
  8763  0046F4  E1D0               	bnz	l9719
  8764                           
  8765                           ; BSR set to: 0
  8766  0046F6  6B60               	clrf	?_strncmp& (0+255),b
  8767  0046F8  6B61               	clrf	(?_strncmp+1)& (0+255),b
  8768                           
  8769                           ; BSR set to: 0
  8770  0046FA  0012               	return		;funcret
  8771  0046FC                     __end_of_strncmp:
  8772                           	opt stack 0
  8773                           tblptru	equ	0xFF8
  8774                           tblptrh	equ	0xFF7
  8775                           tblptrl	equ	0xFF6
  8776                           tablat	equ	0xFF5
  8777                           prodh	equ	0xFF4
  8778                           prodl	equ	0xFF3
  8779                           intcon	equ	0xFF2
  8780                           postinc0	equ	0xFEE
  8781                           wreg	equ	0xFE8
  8782                           indf2	equ	0xFDF
  8783                           fsr2h	equ	0xFDA
  8784                           fsr2l	equ	0xFD9
  8785                           status	equ	0xFD8
  8786                           
  8787 ;; *************** function _strcmp *****************
  8788 ;; Defined at:
  8789 ;;		line 5 in file "/opt/microchip/xc8/v1.36/sources/common/strcmp.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  8792 ;;		 -> modemResonseBuffer(64), 
  8793 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  8794 ;;		 -> STR_79(12), STR_78(3), STR_66(3), STR_63(3), 
  8795 ;;		 -> STR_60(3), STR_57(3), STR_54(3), STR_51(3), 
  8796 ;;		 -> STR_48(3), STR_45(3), STR_42(3), STR_39(3), 
  8797 ;;		 -> STR_36(3), 
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;  t1              1    8[BANK0 ] unsigned char 
  8800 ;;  t2              1    7[BANK0 ] unsigned char 
  8801 ;;  t0              1    6[BANK0 ] unsigned char 
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  2    0[BANK0 ] int 
  8804 ;; Registers used:
  8805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8806 ;; Tracked objects:
  8807 ;;		On entry : F/0
  8808 ;;		On exit  : F/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8811 ;;      Params:         0       4       0       0       0       0       0       0       0
  8812 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8813 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8814 ;;      Totals:         0       9       0       0       0       0       0       0       0
  8815 ;;Total ram usage:        9 bytes
  8816 ;; Hardware stack levels used:    1
  8817 ;; Hardware stack levels required when called:   11
  8818 ;; This function calls:
  8819 ;;		Nothing
  8820 ;; This function is called by:
  8821 ;;		_moteJoiningProcess
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824                           
  8825                           	psect	text24
  8826  0049A4                     __ptext24:
  8827                           	opt stack 0
  8828  0049A4                     _strcmp:
  8829                           	opt stack 17
  8830  0049A4                     l9731:
  8831                           
  8832                           ; BSR set to: 0
  8833  0049A4  C060  FFD9         	movff	strcmp@s1,fsr2l
  8834  0049A8  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  8835  0049AC  50DF               	movf	indf2,w,c
  8836  0049AE  6F66               	movwf	strcmp@t0& (0+255),b
  8837                           
  8838                           ; BSR set to: 0
  8839  0049B0  C062  FFF6         	movff	strcmp@s2,tblptrl
  8840  0049B4  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  8841  0049B8                     	if	0	;tblptru may be non-zero
  8842  0049B8                     	endif
  8843  0049B8                     	if	0	;tblptru may be non-zero
  8844  0049B8                     	endif
  8845  0049B8  0008               	tblrd		*
  8846  0049BA  CFF5 F068          	movff	tablat,strcmp@t1
  8847                           
  8848                           ; BSR set to: 0
  8849  0049BE  5166               	movf	strcmp@t0& (0+255),w,b
  8850  0049C0  E02C               	bz	l9761
  8851                           
  8852                           ; BSR set to: 0
  8853  0049C2  0E02               	movlw	2
  8854  0049C4  2760               	addwf	strcmp@s1& (0+255),f,b
  8855  0049C6  0E00               	movlw	0
  8856  0049C8  2361               	addwfc	(strcmp@s1+1)& (0+255),f,b
  8857  0049CA  5168               	movf	strcmp@t1& (0+255),w,b
  8858  0049CC  1966               	xorwf	strcmp@t0& (0+255),w,b
  8859  0049CE  E125               	bnz	l9761
  8860                           
  8861                           ; BSR set to: 0
  8862  0049D0  EE2F F0FF          	lfsr	2,-1
  8863  0049D4  5160               	movf	strcmp@s1& (0+255),w,b
  8864  0049D6  26D9               	addwf	fsr2l,f,c
  8865  0049D8  5161               	movf	(strcmp@s1+1)& (0+255),w,b
  8866  0049DA  22DA               	addwfc	fsr2h,f,c
  8867  0049DC  50DF               	movf	indf2,w,c
  8868  0049DE  6F67               	movwf	strcmp@t2& (0+255),b
  8869                           
  8870                           ; BSR set to: 0
  8871  0049E0  2962               	incf	strcmp@s2& (0+255),w,b
  8872  0049E2  6F64               	movwf	??_strcmp& (0+255),b
  8873  0049E4  0E00               	movlw	0
  8874  0049E6  2163               	addwfc	(strcmp@s2+1)& (0+255),w,b
  8875  0049E8  6F65               	movwf	(??_strcmp+1)& (0+255),b
  8876  0049EA  C064  FFF6         	movff	??_strcmp,tblptrl
  8877  0049EE  C065  FFF7         	movff	??_strcmp+1,tblptrh
  8878  0049F2                     	if	0	;tblptru may be non-zero
  8879  0049F2                     	endif
  8880  0049F2                     	if	0	;tblptru may be non-zero
  8881  0049F2                     	endif
  8882  0049F2  0008               	tblrd		*
  8883  0049F4  CFF5 F068          	movff	tablat,strcmp@t1
  8884                           
  8885                           ; BSR set to: 0
  8886  0049F8  5167               	movf	strcmp@t2& (0+255),w,b
  8887  0049FA  E107               	bnz	l9753
  8888  0049FC                     l9749:
  8889                           
  8890                           ; BSR set to: 0
  8891  0049FC  5168               	movf	strcmp@t1& (0+255),w,b
  8892  0049FE  5D67               	subwf	strcmp@t2& (0+255),w,b
  8893  004A00  6F60               	movwf	?_strcmp& (0+255),b
  8894  004A02  6B61               	clrf	(?_strcmp+1)& (0+255),b
  8895  004A04  A0D8               	btfss	status,0,c
  8896  004A06  0761               	decf	(?_strcmp+1)& (0+255),f,b
  8897  004A08  0012               	return	
  8898  004A0A                     l9753:
  8899                           
  8900                           ; BSR set to: 0
  8901  004A0A  0E02               	movlw	2
  8902  004A0C  2762               	addwf	strcmp@s2& (0+255),f,b
  8903  004A0E  0E00               	movlw	0
  8904  004A10  2363               	addwfc	(strcmp@s2+1)& (0+255),f,b
  8905  004A12  5167               	movf	strcmp@t2& (0+255),w,b
  8906  004A14  1968               	xorwf	strcmp@t1& (0+255),w,b
  8907  004A16  E1F2               	bnz	l9749
  8908  004A18  D7C5               	goto	l9731
  8909  004A1A                     l9761:
  8910                           
  8911                           ; BSR set to: 0
  8912  004A1A  5168               	movf	strcmp@t1& (0+255),w,b
  8913  004A1C  5D66               	subwf	strcmp@t0& (0+255),w,b
  8914  004A1E  6F60               	movwf	?_strcmp& (0+255),b
  8915  004A20  6B61               	clrf	(?_strcmp+1)& (0+255),b
  8916  004A22  A0D8               	btfss	status,0,c
  8917  004A24  0761               	decf	(?_strcmp+1)& (0+255),f,b
  8918                           
  8919                           ; BSR set to: 0
  8920  004A26  0012               	return		;funcret
  8921  004A28                     __end_of_strcmp:
  8922                           	opt stack 0
  8923                           tblptru	equ	0xFF8
  8924                           tblptrh	equ	0xFF7
  8925                           tblptrl	equ	0xFF6
  8926                           tablat	equ	0xFF5
  8927                           prodh	equ	0xFF4
  8928                           prodl	equ	0xFF3
  8929                           intcon	equ	0xFF2
  8930                           postinc0	equ	0xFEE
  8931                           wreg	equ	0xFE8
  8932                           indf2	equ	0xFDF
  8933                           fsr2h	equ	0xFDA
  8934                           fsr2l	equ	0xFD9
  8935                           status	equ	0xFD8
  8936                           
  8937 ;; *************** function _sprintf *****************
  8938 ;; Defined at:
  8939 ;;		line 492 in file "/opt/microchip/xc8/v1.36/sources/common/doprnt.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;  sp              1    wreg     PTR unsigned char 
  8942 ;;		 -> moteJoiningProcess@buf(50), 
  8943 ;;  f               2   12[BANK0 ] PTR const unsigned char 
  8944 ;;		 -> STR_76(6), STR_73(24), STR_70(32), 
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;  sp              1   36[BANK0 ] PTR unsigned char 
  8947 ;;		 -> moteJoiningProcess@buf(50), 
  8948 ;;  idx             1   28[BANK0 ] unsigned char 
  8949 ;;  tmpval          4    0        struct .
  8950 ;;  cp              3    0        PTR const unsigned char 
  8951 ;;  width           2   34[BANK0 ] int 
  8952 ;;  val             2   31[BANK0 ] unsigned int 
  8953 ;;  len             2    0        unsigned int 
  8954 ;;  c               1   37[BANK0 ] char 
  8955 ;;  flag            1   33[BANK0 ] unsigned char 
  8956 ;;  prec            1   30[BANK0 ] char 
  8957 ;;  ap              1   29[BANK0 ] PTR void [1]
  8958 ;;		 -> ?_sprintf(2), 
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  2   12[BANK0 ] int 
  8961 ;; Registers used:
  8962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8963 ;; Tracked objects:
  8964 ;;		On entry : F/0
  8965 ;;		On exit  : F/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8968 ;;      Params:         0      12       0       0       0       0       0       0       0
  8969 ;;      Locals:         0      10       0       0       0       0       0       0       0
  8970 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8971 ;;      Totals:         0      26       0       0       0       0       0       0       0
  8972 ;;Total ram usage:       26 bytes
  8973 ;; Hardware stack levels used:    1
  8974 ;; Hardware stack levels required when called:   12
  8975 ;; This function calls:
  8976 ;;		___lwdiv
  8977 ;;		___lwmod
  8978 ;;		___wmul
  8979 ;;		_isdigit
  8980 ;; This function is called by:
  8981 ;;		_moteJoiningProcess
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           	psect	text25
  8986  006B7E                     __ptext25:
  8987                           	opt stack 0
  8988  006B7E                     _sprintf:
  8989                           	opt stack 16
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;incstack = 0
  8993                           ;sprintf@sp stored from wreg
  8994  006B7E  6F84               	movwf	sprintf@sp& (0+255),b
  8995                           
  8996                           ;doprnt.c: 494: va_list ap;
  8997                           ;doprnt.c: 499: signed char c;
  8998                           ;doprnt.c: 501: int width;
  8999                           ;doprnt.c: 506: signed char prec;
  9000                           ;doprnt.c: 508: unsigned char flag;
  9001                           ;doprnt.c: 523: union {
  9002                           ;doprnt.c: 524: unsigned long vd;
  9003                           ;doprnt.c: 525: double integ;
  9004                           ;doprnt.c: 526: } tmpval;
  9005                           ;doprnt.c: 528: unsigned int val;
  9006                           ;doprnt.c: 529: unsigned len;
  9007                           ;doprnt.c: 530: const char * cp;
  9008                           ;doprnt.c: 533: *ap = __va_start();
  9009  006B80  0E6E               	movlw	low (?_sprintf+2)
  9010  006B82  0100               	movlb	0	; () banked
  9011  006B84  6F7D               	movwf	sprintf@ap& (0+255),b
  9012                           
  9013                           ;doprnt.c: 536: while(c = *f++) {
  9014  006B86  D15B               	goto	l9899
  9015  006B88                     l9767:
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;doprnt.c: 538: if(c != '%')
  9019  006B88  0E25               	movlw	37
  9020  006B8A  1985               	xorwf	sprintf@c& (0+255),w,b
  9021  006B8C  E007               	bz	l1848
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;doprnt.c: 540: {
  9025                           ;doprnt.c: 541: ((*sp++ = (c)));
  9026  006B8E  5184               	movf	sprintf@sp& (0+255),w,b
  9027  006B90  6ED9               	movwf	fsr2l,c
  9028  006B92  6ADA               	clrf	fsr2h,c
  9029  006B94  C085  FFDF         	movff	sprintf@c,indf2
  9030                           
  9031                           ; BSR set to: 0
  9032  006B98  2B84               	incf	sprintf@sp& (0+255),f,b
  9033                           
  9034                           ;doprnt.c: 542: continue;
  9035  006B9A  D151               	goto	l9899
  9036  006B9C                     l1848:
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;doprnt.c: 543: }
  9040                           ;doprnt.c: 546: width = 0;
  9041  006B9C  6B82               	clrf	sprintf@width& (0+255),b
  9042  006B9E  6B83               	clrf	(sprintf@width+1)& (0+255),b
  9043                           
  9044                           ;doprnt.c: 548: flag = 0;
  9045  006BA0  6B81               	clrf	sprintf@flag& (0+255),b
  9046  006BA2  D003               	goto	l9777
  9047  006BA4                     l9773:
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;doprnt.c: 580: flag |= 0x04;
  9051  006BA4  8581               	bsf	sprintf@flag& (0+255),2,b
  9052                           
  9053                           ;doprnt.c: 581: f++;
  9054  006BA6  4B6C               	infsnz	sprintf@f& (0+255),f,b
  9055  006BA8  2B6D               	incf	(sprintf@f+1)& (0+255),f,b
  9056  006BAA                     l9777:
  9057                           
  9058                           ; BSR set to: 0
  9059  006BAA  C06C  FFF6         	movff	sprintf@f,tblptrl
  9060  006BAE  C06D  FFF7         	movff	sprintf@f+1,tblptrh
  9061  006BB2                     	if	0	;tblptru may be non-zero
  9062  006BB2                     	endif
  9063  006BB2                     	if	0	;tblptru may be non-zero
  9064  006BB2                     	endif
  9065  006BB2  0008               	tblrd		*
  9066  006BB4  50F5               	movf	tablat,w,c
  9067                           
  9068                           ; Switch size 1, requested type "speed"
  9069                           ; Number of cases is 1, Range of values is 48 to 48
  9070                           ; switch strategies available:
  9071                           ; Name         Instructions Cycles
  9072                           ; simple_byte            4     3 (average)
  9073                           ;	Chosen strategy is simple_byte
  9074  006BB6  0A30               	xorlw	48	; case 48
  9075  006BB8  E0F5               	bz	l9773
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  9079  006BBA  C06C  FFF6         	movff	sprintf@f,tblptrl
  9080  006BBE  C06D  FFF7         	movff	sprintf@f+1,tblptrh
  9081  006BC2                     	if	0	;tblptru may be non-zero
  9082  006BC2                     	endif
  9083  006BC2                     	if	0	;tblptru may be non-zero
  9084  006BC2                     	endif
  9085  006BC2  0008               	tblrd		*
  9086  006BC4  50F5               	movf	tablat,w,c
  9087  006BC6  EC7A  F01E         	call	_isdigit
  9088  006BCA  E330               	bnc	l9795
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;doprnt.c: 598: width = 0;
  9092  006BCC  6B82               	clrf	sprintf@width& (0+255),b
  9093  006BCE  6B83               	clrf	(sprintf@width+1)& (0+255),b
  9094  006BD0                     l9783:
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;doprnt.c: 600: width *= 10;
  9098  006BD0  C082  F060         	movff	sprintf@width,___wmul@multiplier
  9099  006BD4  C083  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  9100  006BD8  6B63               	clrf	(___wmul@multiplicand+1)& (0+255),b
  9101  006BDA  0E0A               	movlw	10
  9102  006BDC  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9103  006BDE  ECCC  F01E         	call	___wmul	;wreg free
  9104  006BE2  C060  F082         	movff	?___wmul,sprintf@width
  9105  006BE6  C061  F083         	movff	?___wmul+1,sprintf@width+1
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;doprnt.c: 601: width += *f++ - '0';
  9109  006BEA  0ED0               	movlw	208
  9110  006BEC  6F78               	movwf	??_sprintf& (0+255),b
  9111  006BEE  6979               	setf	(??_sprintf+1)& (0+255),b
  9112  006BF0  C06C  FFF6         	movff	sprintf@f,tblptrl
  9113  006BF4  C06D  FFF7         	movff	sprintf@f+1,tblptrh
  9114  006BF8                     	if	0	;tblptru may be non-zero
  9115  006BF8                     	endif
  9116  006BF8                     	if	0	;tblptru may be non-zero
  9117  006BF8                     	endif
  9118  006BF8  0008               	tblrd		*
  9119  006BFA  50F5               	movf	tablat,w,c
  9120  006BFC  6F7A               	movwf	(??_sprintf+2)& (0+255),b
  9121  006BFE  6B7B               	clrf	(??_sprintf+3)& (0+255),b
  9122  006C00  5178               	movf	??_sprintf& (0+255),w,b
  9123  006C02  277A               	addwf	(??_sprintf+2)& (0+255),f,b
  9124  006C04  5179               	movf	(??_sprintf+1)& (0+255),w,b
  9125  006C06  237B               	addwfc	(??_sprintf+3)& (0+255),f,b
  9126  006C08  517A               	movf	(??_sprintf+2)& (0+255),w,b
  9127  006C0A  2782               	addwf	sprintf@width& (0+255),f,b
  9128  006C0C  517B               	movf	(??_sprintf+3)& (0+255),w,b
  9129  006C0E  2383               	addwfc	(sprintf@width+1)& (0+255),f,b
  9130                           
  9131                           ; BSR set to: 0
  9132  006C10  4B6C               	infsnz	sprintf@f& (0+255),f,b
  9133  006C12  2B6D               	incf	(sprintf@f+1)& (0+255),f,b
  9134                           
  9135                           ; BSR set to: 0
  9136                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  9137  006C14  C06C  FFF6         	movff	sprintf@f,tblptrl
  9138  006C18  C06D  FFF7         	movff	sprintf@f+1,tblptrh
  9139  006C1C                     	if	0	;tblptru may be non-zero
  9140  006C1C                     	endif
  9141  006C1C                     	if	0	;tblptru may be non-zero
  9142  006C1C                     	endif
  9143  006C1C  0008               	tblrd		*
  9144  006C1E  50F5               	movf	tablat,w,c
  9145  006C20  EC7A  F01E         	call	_isdigit
  9146  006C24  E303               	bnc	l9795
  9147  006C26  D7D4               	goto	l9783
  9148  006C28                     l9791:
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;doprnt.c: 718: case 'x':
  9152                           ;doprnt.c: 721: flag |= 0x80;
  9153  006C28  8F81               	bsf	sprintf@flag& (0+255),7,b
  9154                           
  9155                           ;doprnt.c: 723: break;
  9156  006C2A  D015               	goto	l1863
  9157  006C2C                     l9795:
  9158                           
  9159                           ; BSR set to: 0
  9160  006C2C  C06C  FFF6         	movff	sprintf@f,tblptrl
  9161  006C30  C06D  FFF7         	movff	sprintf@f+1,tblptrh
  9162  006C34  4B6C               	infsnz	sprintf@f& (0+255),f,b
  9163  006C36  2B6D               	incf	(sprintf@f+1)& (0+255),f,b
  9164  006C38                     	if	0	;tblptru may be non-zero
  9165  006C38                     	endif
  9166  006C38                     	if	0	;tblptru may be non-zero
  9167  006C38                     	endif
  9168  006C38  0008               	tblrd		*
  9169  006C3A  CFF5 F085          	movff	tablat,sprintf@c
  9170  006C3E  5185               	movf	sprintf@c& (0+255),w,b
  9171                           
  9172                           ; Switch size 1, requested type "speed"
  9173                           ; Number of cases is 5, Range of values is 0 to 120
  9174                           ; switch strategies available:
  9175                           ; Name         Instructions Cycles
  9176                           ; simple_byte           16     9 (average)
  9177                           ;	Chosen strategy is simple_byte
  9178  006C40  E101 D109          	bz	l9901
  9179  006C44  0A58               	xorlw	88	; case 88
  9180  006C46  E0F0               	bz	l9791
  9181  006C48  0A3C               	xorlw	60	; case 100
  9182  006C4A  E005               	bz	l1863
  9183  006C4C  0A0D               	xorlw	13	; case 105
  9184  006C4E  E003               	bz	l1863
  9185  006C50  0A11               	xorlw	17	; case 120
  9186  006C52  E0EA               	bz	l9791
  9187  006C54  D0F4               	goto	l9899
  9188  006C56                     l1863:
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  9192  006C56  BF81               	btfsc	sprintf@flag& (0+255),7,b
  9193  006C58  D012               	goto	l9807
  9194                           
  9195                           ; BSR set to: 0
  9196                           ;doprnt.c: 1253: {
  9197                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  9198  006C5A  517D               	movf	sprintf@ap& (0+255),w,b
  9199  006C5C  6ED9               	movwf	fsr2l,c
  9200  006C5E  6ADA               	clrf	fsr2h,c
  9201  006C60  CFDE F07F          	movff	postinc2,sprintf@val
  9202  006C64  CFDD F080          	movff	postdec2,sprintf@val+1
  9203                           
  9204                           ; BSR set to: 0
  9205  006C68  0E02               	movlw	2
  9206  006C6A  277D               	addwf	sprintf@ap& (0+255),f,b
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;doprnt.c: 1261: if((int)val < 0) {
  9210  006C6C  AF80               	btfss	(sprintf@val+1)& (0+255),7,b
  9211  006C6E  D03D               	goto	l9841
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;doprnt.c: 1262: flag |= 0x03;
  9215  006C70  0E03               	movlw	3
  9216  006C72  1381               	iorwf	sprintf@flag& (0+255),f,b
  9217                           
  9218                           ; BSR set to: 0
  9219                           ;doprnt.c: 1263: val = -val;
  9220  006C74  6D7F               	negf	sprintf@val& (0+255),b
  9221  006C76  1F80               	comf	(sprintf@val+1)& (0+255),f,b
  9222  006C78  B0D8               	btfsc	status,0,c
  9223  006C7A  2B80               	incf	(sprintf@val+1)& (0+255),f,b
  9224  006C7C  D036               	goto	l9841
  9225  006C7E                     l9807:
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;doprnt.c: 1268: else
  9229                           ;doprnt.c: 1273: {
  9230                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  9231  006C7E  517D               	movf	sprintf@ap& (0+255),w,b
  9232  006C80  6ED9               	movwf	fsr2l,c
  9233  006C82  6ADA               	clrf	fsr2h,c
  9234  006C84  CFDE F07F          	movff	postinc2,sprintf@val
  9235  006C88  CFDD F080          	movff	postdec2,sprintf@val+1
  9236                           
  9237                           ; BSR set to: 0
  9238  006C8C  0E02               	movlw	2
  9239  006C8E  277D               	addwf	sprintf@ap& (0+255),f,b
  9240  006C90  D02C               	goto	l9841
  9241  006C92                     l9811:
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9245  006C92  0E01               	movlw	1
  9246  006C94  6F85               	movwf	sprintf@c& (0+255),b
  9247  006C96                     l9817:
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;doprnt.c: 1306: if(val < dpowers[c])
  9251  006C96  5185               	movf	sprintf@c& (0+255),w,b
  9252  006C98  0D02               	mullw	2
  9253  006C9A  0E7F               	movlw	low _dpowers
  9254  006C9C  24F3               	addwf	prodl,w,c
  9255  006C9E  6EF6               	movwf	tblptrl,c
  9256  006CA0  0E77               	movlw	high _dpowers
  9257  006CA2  20F4               	addwfc	prodh,w,c
  9258  006CA4  6EF7               	movwf	tblptrh,c
  9259  006CA6                     	if	0	;There are less than 3 active tblptr bytes
  9260  006CA6                     	endif
  9261  006CA6  0009               	tblrd		*+
  9262  006CA8  50F5               	movf	tablat,w,c
  9263  006CAA  5D7F               	subwf	sprintf@val& (0+255),w,b
  9264  006CAC  0009               	tblrd		*+
  9265  006CAE  50F5               	movf	tablat,w,c
  9266  006CB0  5980               	subwfb	(sprintf@val+1)& (0+255),w,b
  9267  006CB2  E320               	bnc	l9843
  9268                           
  9269                           ; BSR set to: 0
  9270  006CB4  2B85               	incf	sprintf@c& (0+255),f,b
  9271                           
  9272                           ; BSR set to: 0
  9273  006CB6  0E05               	movlw	5
  9274  006CB8  1985               	xorwf	sprintf@c& (0+255),w,b
  9275  006CBA  E01C               	bz	l9843
  9276  006CBC  D7EC               	goto	l9817
  9277  006CBE                     l9825:
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  9281  006CBE  0E01               	movlw	1
  9282  006CC0  6F85               	movwf	sprintf@c& (0+255),b
  9283  006CC2                     l9831:
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;doprnt.c: 1317: if(val < hexpowers[c])
  9287  006CC2  5185               	movf	sprintf@c& (0+255),w,b
  9288  006CC4  0D02               	mullw	2
  9289  006CC6  0E89               	movlw	low _hexpowers
  9290  006CC8  24F3               	addwf	prodl,w,c
  9291  006CCA  6EF6               	movwf	tblptrl,c
  9292  006CCC  0E77               	movlw	high _hexpowers
  9293  006CCE  20F4               	addwfc	prodh,w,c
  9294  006CD0  6EF7               	movwf	tblptrh,c
  9295  006CD2                     	if	0	;There are less than 3 active tblptr bytes
  9296  006CD2                     	endif
  9297  006CD2  0009               	tblrd		*+
  9298  006CD4  50F5               	movf	tablat,w,c
  9299  006CD6  5D7F               	subwf	sprintf@val& (0+255),w,b
  9300  006CD8  0009               	tblrd		*+
  9301  006CDA  50F5               	movf	tablat,w,c
  9302  006CDC  5980               	subwfb	(sprintf@val+1)& (0+255),w,b
  9303  006CDE  E30A               	bnc	l9843
  9304                           
  9305                           ; BSR set to: 0
  9306  006CE0  2B85               	incf	sprintf@c& (0+255),f,b
  9307                           
  9308                           ; BSR set to: 0
  9309  006CE2  0E04               	movlw	4
  9310  006CE4  1985               	xorwf	sprintf@c& (0+255),w,b
  9311  006CE6  E006               	bz	l9843
  9312  006CE8  D7EC               	goto	l9831
  9313  006CEA                     l9841:
  9314                           
  9315                           ; BSR set to: 0
  9316  006CEA  5181               	movf	sprintf@flag& (0+255),w,b
  9317  006CEC  0B80               	andlw	128
  9318                           
  9319                           ; Switch size 1, requested type "speed"
  9320                           ; Number of cases is 2, Range of values is 0 to 128
  9321                           ; switch strategies available:
  9322                           ; Name         Instructions Cycles
  9323                           ; simple_byte            7     4 (average)
  9324                           ;	Chosen strategy is simple_byte
  9325  006CEE  E0D1               	bz	l9811
  9326  006CF0  0A80               	xorlw	128	; case 128
  9327  006CF2  E0E5               	bz	l9825
  9328  006CF4                     l9843:
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9332  006CF4  5182               	movf	sprintf@width& (0+255),w,b
  9333  006CF6  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
  9334  006CF8  E008               	bz	l9849
  9335                           
  9336                           ; BSR set to: 0
  9337  006CFA  C081  F078         	movff	sprintf@flag,??_sprintf
  9338  006CFE  0E03               	movlw	3
  9339  006D00  1778               	andwf	??_sprintf& (0+255),f,b
  9340  006D02  E003               	bz	l9849
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;doprnt.c: 1346: width--;
  9344  006D04  0782               	decf	sprintf@width& (0+255),f,b
  9345  006D06  A0D8               	btfss	status,0,c
  9346  006D08  0783               	decf	(sprintf@width+1)& (0+255),f,b
  9347  006D0A                     l9849:
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;doprnt.c: 1381: if(width > c)
  9351  006D0A  0E80               	movlw	128
  9352  006D0C  BF85               	btfsc	sprintf@c& (0+255),7,b
  9353  006D0E  0E7F               	movlw	127
  9354  006D10  6F78               	movwf	??_sprintf& (0+255),b
  9355  006D12  5182               	movf	sprintf@width& (0+255),w,b
  9356  006D14  5D85               	subwf	sprintf@c& (0+255),w,b
  9357  006D16  5183               	movf	(sprintf@width+1)& (0+255),w,b
  9358  006D18  0A80               	xorlw	128
  9359  006D1A  5978               	subwfb	??_sprintf& (0+255),w,b
  9360  006D1C  E207               	bc	l1881
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;doprnt.c: 1382: width -= c;
  9364  006D1E  5185               	movf	sprintf@c& (0+255),w,b
  9365  006D20  5F82               	subwf	sprintf@width& (0+255),f,b
  9366  006D22  0E00               	movlw	0
  9367  006D24  BF85               	btfsc	sprintf@c& (0+255),7,b
  9368  006D26  0EFF               	movlw	255
  9369  006D28  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
  9370  006D2A  D002               	goto	l1882
  9371  006D2C                     l1881:
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;doprnt.c: 1383: else
  9375                           ;doprnt.c: 1384: width = 0;
  9376  006D2C  6B82               	clrf	sprintf@width& (0+255),b
  9377  006D2E  6B83               	clrf	(sprintf@width+1)& (0+255),b
  9378  006D30                     l1882:
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;doprnt.c: 1387: if(flag & 0x04) {
  9382  006D30  A581               	btfss	sprintf@flag& (0+255),2,b
  9383  006D32  D018               	goto	l9867
  9384                           
  9385                           ; BSR set to: 0
  9386                           ;doprnt.c: 1392: if(flag & 0x03)
  9387  006D34  C081  F078         	movff	sprintf@flag,??_sprintf
  9388  006D38  0E03               	movlw	3
  9389  006D3A  1778               	andwf	??_sprintf& (0+255),f,b
  9390  006D3C  E006               	bz	l9859
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  9394  006D3E  5184               	movf	sprintf@sp& (0+255),w,b
  9395  006D40  6ED9               	movwf	fsr2l,c
  9396  006D42  6ADA               	clrf	fsr2h,c
  9397  006D44  0E2D               	movlw	45
  9398  006D46  6EDF               	movwf	indf2,c
  9399                           
  9400                           ; BSR set to: 0
  9401  006D48  2B84               	incf	sprintf@sp& (0+255),f,b
  9402  006D4A                     l9859:
  9403                           
  9404                           ; BSR set to: 0
  9405                           ;doprnt.c: 1415: if(width)
  9406  006D4A  5182               	movf	sprintf@width& (0+255),w,b
  9407  006D4C  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
  9408  006D4E  E024               	bz	l9881
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  9412  006D50  5184               	movf	sprintf@sp& (0+255),w,b
  9413  006D52  6ED9               	movwf	fsr2l,c
  9414  006D54  6ADA               	clrf	fsr2h,c
  9415  006D56  0E30               	movlw	48
  9416  006D58  6EDF               	movwf	indf2,c
  9417                           
  9418                           ; BSR set to: 0
  9419  006D5A  2B84               	incf	sprintf@sp& (0+255),f,b
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;doprnt.c: 1418: while(--width);
  9423  006D5C  0782               	decf	sprintf@width& (0+255),f,b
  9424  006D5E  A0D8               	btfss	status,0,c
  9425  006D60  0783               	decf	(sprintf@width+1)& (0+255),f,b
  9426  006D62  D7F3               	goto	l9859
  9427  006D64                     l9867:
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;doprnt.c: 1422: {
  9431                           ;doprnt.c: 1424: if(width
  9432                           ;doprnt.c: 1428: )
  9433  006D64  5182               	movf	sprintf@width& (0+255),w,b
  9434  006D66  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
  9435  006D68  E00C               	bz	l9875
  9436  006D6A                     l9869:
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  9440  006D6A  5184               	movf	sprintf@sp& (0+255),w,b
  9441  006D6C  6ED9               	movwf	fsr2l,c
  9442  006D6E  6ADA               	clrf	fsr2h,c
  9443  006D70  0E20               	movlw	32
  9444  006D72  6EDF               	movwf	indf2,c
  9445                           
  9446                           ; BSR set to: 0
  9447  006D74  2B84               	incf	sprintf@sp& (0+255),f,b
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;doprnt.c: 1431: while(--width);
  9451  006D76  0782               	decf	sprintf@width& (0+255),f,b
  9452  006D78  A0D8               	btfss	status,0,c
  9453  006D7A  0783               	decf	(sprintf@width+1)& (0+255),f,b
  9454  006D7C  5182               	movf	sprintf@width& (0+255),w,b
  9455  006D7E  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
  9456  006D80  E1F4               	bnz	l9869
  9457  006D82                     l9875:
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;doprnt.c: 1438: if(flag & 0x03)
  9461  006D82  C081  F078         	movff	sprintf@flag,??_sprintf
  9462  006D86  0E03               	movlw	3
  9463  006D88  1778               	andwf	??_sprintf& (0+255),f,b
  9464  006D8A  E006               	bz	l9881
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9468  006D8C  5184               	movf	sprintf@sp& (0+255),w,b
  9469  006D8E  6ED9               	movwf	fsr2l,c
  9470  006D90  6ADA               	clrf	fsr2h,c
  9471  006D92  0E2D               	movlw	45
  9472  006D94  6EDF               	movwf	indf2,c
  9473                           
  9474                           ; BSR set to: 0
  9475  006D96  2B84               	incf	sprintf@sp& (0+255),f,b
  9476  006D98                     l9881:
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;doprnt.c: 1469: }
  9480                           ;doprnt.c: 1472: prec = c;
  9481  006D98  C085  F07E         	movff	sprintf@c,sprintf@prec
  9482                           
  9483                           ;doprnt.c: 1474: while(prec--) {
  9484  006D9C  D04D               	goto	l9897
  9485  006D9E                     l9883:
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9489  006D9E  517E               	movf	sprintf@prec& (0+255),w,b
  9490  006DA0  0D02               	mullw	2
  9491  006DA2  0E7F               	movlw	low _dpowers
  9492  006DA4  24F3               	addwf	prodl,w,c
  9493  006DA6  6EF6               	movwf	tblptrl,c
  9494  006DA8  0E77               	movlw	high _dpowers
  9495  006DAA  20F4               	addwfc	prodh,w,c
  9496  006DAC  6EF7               	movwf	tblptrh,c
  9497  006DAE                     	if	0	;There are less than 3 active tblptr bytes
  9498  006DAE                     	endif
  9499  006DAE  0009               	tblrd		*+
  9500  006DB0  CFF5 F062          	movff	tablat,___lwdiv@divisor
  9501  006DB4  000A               	tblrd		*-
  9502  006DB6  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  9503  006DBA  C07F  F060         	movff	sprintf@val,___lwdiv@dividend
  9504  006DBE  C080  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  9505  006DC2  EC21  F021         	call	___lwdiv	;wreg free
  9506  006DC6  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  9507  006DCA  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  9508  006DCE  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
  9509  006DD0  0E0A               	movlw	10
  9510  006DD2  6F69               	movwf	___lwmod@divisor& (0+255),b
  9511  006DD4  ECDD  F020         	call	___lwmod	;wreg free
  9512  006DD8  5167               	movf	?___lwmod& (0+255),w,b
  9513  006DDA  0F30               	addlw	48
  9514  006DDC  6F85               	movwf	sprintf@c& (0+255),b
  9515                           
  9516                           ;doprnt.c: 1491: break;
  9517  006DDE  D026               	goto	l9893
  9518  006DE0                     l9885:
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;doprnt.c: 1499: {
  9522                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  9523  006DE0  C07F  F060         	movff	sprintf@val,___lwdiv@dividend
  9524  006DE4  C080  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  9525  006DE8  517E               	movf	sprintf@prec& (0+255),w,b
  9526  006DEA  0D02               	mullw	2
  9527  006DEC  0E89               	movlw	low _hexpowers
  9528  006DEE  24F3               	addwf	prodl,w,c
  9529  006DF0  6EF6               	movwf	tblptrl,c
  9530  006DF2  0E77               	movlw	high _hexpowers
  9531  006DF4  20F4               	addwfc	prodh,w,c
  9532  006DF6  6EF7               	movwf	tblptrh,c
  9533  006DF8                     	if	0	;There are less than 3 active tblptr bytes
  9534  006DF8                     	endif
  9535  006DF8  0009               	tblrd		*+
  9536  006DFA  CFF5 F062          	movff	tablat,___lwdiv@divisor
  9537  006DFE  000A               	tblrd		*-
  9538  006E00  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  9539  006E04  EC21  F021         	call	___lwdiv	;wreg free
  9540  006E08  5160               	movf	?___lwdiv& (0+255),w,b
  9541  006E0A  0B0F               	andlw	15
  9542  006E0C  6F7C               	movwf	sprintf@idx& (0+255),b
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  9546  006E0E  0E7F               	movlw	low STR_108
  9547  006E10  257C               	addwf	sprintf@idx& (0+255),w,b
  9548  006E12  6EF6               	movwf	tblptrl,c
  9549  006E14  6AF7               	clrf	tblptrh,c
  9550  006E16  0E7C               	movlw	high STR_108
  9551  006E18  22F7               	addwfc	tblptrh,f,c
  9552  006E1A                     	if	0	;There are less than 3 active tblptr bytes
  9553  006E1A                     	endif
  9554  006E1A  0008               	tblrd		*
  9555  006E1C  CFF5 F085          	movff	tablat,sprintf@c
  9556                           
  9557                           ;doprnt.c: 1508: }
  9558                           ;doprnt.c: 1510: break;
  9559  006E20  D005               	goto	l9893
  9560  006E22                     l9891:
  9561                           
  9562                           ; BSR set to: 0
  9563  006E22  5181               	movf	sprintf@flag& (0+255),w,b
  9564  006E24  0B80               	andlw	128
  9565                           
  9566                           ; Switch size 1, requested type "speed"
  9567                           ; Number of cases is 2, Range of values is 0 to 128
  9568                           ; switch strategies available:
  9569                           ; Name         Instructions Cycles
  9570                           ; simple_byte            7     4 (average)
  9571                           ;	Chosen strategy is simple_byte
  9572  006E26  E0BB               	bz	l9883
  9573  006E28  0A80               	xorlw	128	; case 128
  9574  006E2A  E0DA               	bz	l9885
  9575  006E2C                     l9893:
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;doprnt.c: 1524: ((*sp++ = (c)));
  9579  006E2C  5184               	movf	sprintf@sp& (0+255),w,b
  9580  006E2E  6ED9               	movwf	fsr2l,c
  9581  006E30  6ADA               	clrf	fsr2h,c
  9582  006E32  C085  FFDF         	movff	sprintf@c,indf2
  9583                           
  9584                           ; BSR set to: 0
  9585  006E36  2B84               	incf	sprintf@sp& (0+255),f,b
  9586  006E38                     l9897:
  9587                           
  9588                           ; BSR set to: 0
  9589  006E38  077E               	decf	sprintf@prec& (0+255),f,b
  9590  006E3A  297E               	incf	sprintf@prec& (0+255),w,b
  9591  006E3C  E1F2               	bnz	l9891
  9592  006E3E                     l9899:
  9593                           
  9594                           ; BSR set to: 0
  9595  006E3E  C06C  FFF6         	movff	sprintf@f,tblptrl
  9596  006E42  C06D  FFF7         	movff	sprintf@f+1,tblptrh
  9597  006E46  4B6C               	infsnz	sprintf@f& (0+255),f,b
  9598  006E48  2B6D               	incf	(sprintf@f+1)& (0+255),f,b
  9599  006E4A                     	if	0	;tblptru may be non-zero
  9600  006E4A                     	endif
  9601  006E4A                     	if	0	;tblptru may be non-zero
  9602  006E4A                     	endif
  9603  006E4A  0008               	tblrd		*
  9604  006E4C  CFF5 F085          	movff	tablat,sprintf@c
  9605  006E50  5185               	movf	sprintf@c& (0+255),w,b
  9606  006E52  E001 D699          	bnz	l9767
  9607  006E56                     l9901:
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;doprnt.c: 1538: *sp = 0;
  9611  006E56  5184               	movf	sprintf@sp& (0+255),w,b
  9612  006E58  6ED9               	movwf	fsr2l,c
  9613  006E5A  6ADA               	clrf	fsr2h,c
  9614  006E5C  6ADF               	clrf	indf2,c
  9615                           
  9616                           ; BSR set to: 0
  9617  006E5E  0C00               	retlw	0	;funcret
  9618  006E60                     __end_of_sprintf:
  9619                           	opt stack 0
  9620                           tblptru	equ	0xFF8
  9621                           tblptrh	equ	0xFF7
  9622                           tblptrl	equ	0xFF6
  9623                           tablat	equ	0xFF5
  9624                           prodh	equ	0xFF4
  9625                           prodl	equ	0xFF3
  9626                           intcon	equ	0xFF2
  9627                           postinc0	equ	0xFEE
  9628                           wreg	equ	0xFE8
  9629                           indf2	equ	0xFDF
  9630                           postinc2	equ	0xFDE
  9631                           postdec2	equ	0xFDD
  9632                           fsr2h	equ	0xFDA
  9633                           fsr2l	equ	0xFD9
  9634                           status	equ	0xFD8
  9635                           
  9636 ;; *************** function _isdigit *****************
  9637 ;; Defined at:
  9638 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/isdigit.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;  c               1    wreg     unsigned char 
  9641 ;; Auto vars:     Size  Location     Type
  9642 ;;  c               1    2[BANK0 ] unsigned char 
  9643 ;; Return value:  Size  Location     Type
  9644 ;;		None               void
  9645 ;; Registers used:
  9646 ;;		wreg, status,2, status,0
  9647 ;; Tracked objects:
  9648 ;;		On entry : F/0
  9649 ;;		On exit  : F/0
  9650 ;;		Unchanged: 0/0
  9651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9652 ;;      Params:         0       0       0       0       0       0       0       0       0
  9653 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9654 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9655 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9656 ;;Total ram usage:        3 bytes
  9657 ;; Hardware stack levels used:    1
  9658 ;; Hardware stack levels required when called:   11
  9659 ;; This function calls:
  9660 ;;		Nothing
  9661 ;; This function is called by:
  9662 ;;		_sprintf
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666                           	psect	text26
  9667  003CF4                     __ptext26:
  9668                           	opt stack 0
  9669  003CF4                     _isdigit:
  9670                           	opt stack 16
  9671                           
  9672                           ; BSR set to: 0
  9673                           ;incstack = 0
  9674                           ;isdigit@c stored from wreg
  9675  003CF4  6F62               	movwf	isdigit@c& (0+255),b
  9676  003CF6  0100               	movlb	0	; () banked
  9677  003CF8  6B61               	clrf	_isdigit$6040& (0+255),b
  9678                           
  9679                           ; BSR set to: 0
  9680  003CFA  0E3A               	movlw	58
  9681  003CFC  6162               	cpfslt	isdigit@c& (0+255),b
  9682  003CFE  D005               	goto	l9561
  9683                           
  9684                           ; BSR set to: 0
  9685  003D00  0E2F               	movlw	47
  9686  003D02  6562               	cpfsgt	isdigit@c& (0+255),b
  9687  003D04  D002               	goto	l9561
  9688                           
  9689                           ; BSR set to: 0
  9690  003D06  0E01               	movlw	1
  9691  003D08  6F61               	movwf	_isdigit$6040& (0+255),b
  9692  003D0A                     l9561:
  9693                           
  9694                           ; BSR set to: 0
  9695  003D0A  C061  F060         	movff	_isdigit$6040,??_isdigit
  9696  003D0E  3160               	rrcf	??_isdigit& (0+255),w,b
  9697                           
  9698                           ; BSR set to: 0
  9699  003D10  0012               	return		;funcret
  9700  003D12                     __end_of_isdigit:
  9701                           	opt stack 0
  9702                           tblptru	equ	0xFF8
  9703                           tblptrh	equ	0xFF7
  9704                           tblptrl	equ	0xFF6
  9705                           tablat	equ	0xFF5
  9706                           prodh	equ	0xFF4
  9707                           prodl	equ	0xFF3
  9708                           intcon	equ	0xFF2
  9709                           postinc0	equ	0xFEE
  9710                           wreg	equ	0xFE8
  9711                           indf2	equ	0xFDF
  9712                           postinc2	equ	0xFDE
  9713                           postdec2	equ	0xFDD
  9714                           fsr2h	equ	0xFDA
  9715                           fsr2l	equ	0xFD9
  9716                           status	equ	0xFD8
  9717                           
  9718 ;; *************** function ___wmul *****************
  9719 ;; Defined at:
  9720 ;;		line 15 in file "/opt/microchip/xc8/v1.36/sources/common/Umul16.c"
  9721 ;; Parameters:    Size  Location     Type
  9722 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9723 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;  product         2    4[BANK0 ] unsigned int 
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  2    0[BANK0 ] unsigned int 
  9728 ;; Registers used:
  9729 ;;		wreg, status,2, status,0, prodl, prodh
  9730 ;; Tracked objects:
  9731 ;;		On entry : F/0
  9732 ;;		On exit  : F/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9735 ;;      Params:         0       4       0       0       0       0       0       0       0
  9736 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9738 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9739 ;;Total ram usage:        6 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:   11
  9742 ;; This function calls:
  9743 ;;		Nothing
  9744 ;; This function is called by:
  9745 ;;		_sprintf
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           	psect	text27
  9750  003D98                     __ptext27:
  9751                           	opt stack 0
  9752  003D98                     ___wmul:
  9753                           	opt stack 16
  9754                           
  9755                           ; BSR set to: 0
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;incstack = 0
  9759  003D98  5160               	movf	___wmul@multiplier& (0+255),w,b
  9760  003D9A  0362               	mulwf	___wmul@multiplicand& (0+255),b
  9761  003D9C  CFF3 F064          	movff	prodl,___wmul@product
  9762  003DA0  CFF4 F065          	movff	prodh,___wmul@product+1
  9763  003DA4  5160               	movf	___wmul@multiplier& (0+255),w,b
  9764  003DA6  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9765  003DA8  50F3               	movf	prodl,w,c
  9766  003DAA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  9767  003DAC  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9768  003DAE  0362               	mulwf	___wmul@multiplicand& (0+255),b
  9769  003DB0  50F3               	movf	prodl,w,c
  9770  003DB2  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  9771                           
  9772                           ; BSR set to: 0
  9773  003DB4  C064  F060         	movff	___wmul@product,?___wmul
  9774  003DB8  C065  F061         	movff	___wmul@product+1,?___wmul+1
  9775                           
  9776                           ; BSR set to: 0
  9777  003DBC  0012               	return		;funcret
  9778  003DBE                     __end_of___wmul:
  9779                           	opt stack 0
  9780                           tblptru	equ	0xFF8
  9781                           tblptrh	equ	0xFF7
  9782                           tblptrl	equ	0xFF6
  9783                           tablat	equ	0xFF5
  9784                           prodh	equ	0xFF4
  9785                           prodl	equ	0xFF3
  9786                           intcon	equ	0xFF2
  9787                           postinc0	equ	0xFEE
  9788                           wreg	equ	0xFE8
  9789                           indf2	equ	0xFDF
  9790                           postinc2	equ	0xFDE
  9791                           postdec2	equ	0xFDD
  9792                           fsr2h	equ	0xFDA
  9793                           fsr2l	equ	0xFD9
  9794                           status	equ	0xFD8
  9795                           
  9796 ;; *************** function ___lwdiv *****************
  9797 ;; Defined at:
  9798 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwdiv.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  dividend        2    0[BANK0 ] unsigned int 
  9801 ;;  divisor         2    2[BANK0 ] unsigned int 
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;  quotient        2    5[BANK0 ] unsigned int 
  9804 ;;  counter         1    4[BANK0 ] unsigned char 
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  2    0[BANK0 ] unsigned int 
  9807 ;; Registers used:
  9808 ;;		wreg, status,2, status,0
  9809 ;; Tracked objects:
  9810 ;;		On entry : F/0
  9811 ;;		On exit  : F/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9814 ;;      Params:         0       4       0       0       0       0       0       0       0
  9815 ;;      Locals:         0       3       0       0       0       0       0       0       0
  9816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9817 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9818 ;;Total ram usage:        7 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; Hardware stack levels required when called:   11
  9821 ;; This function calls:
  9822 ;;		Nothing
  9823 ;; This function is called by:
  9824 ;;		_moteApp_add16bToDataBuffer
  9825 ;;		_oled_putUint16
  9826 ;;		_ADC_TempConversion
  9827 ;;		_sprintf
  9828 ;; This function uses a non-reentrant model
  9829 ;;
  9830                           
  9831                           	psect	text28
  9832  004242                     __ptext28:
  9833                           	opt stack 0
  9834  004242                     ___lwdiv:
  9835                           	opt stack 16
  9836                           
  9837                           ; BSR set to: 0
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;incstack = 0
  9841  004242  6B65               	clrf	___lwdiv@quotient& (0+255),b
  9842  004244  6B66               	clrf	(___lwdiv@quotient+1)& (0+255),b
  9843                           
  9844                           ; BSR set to: 0
  9845  004246  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9846  004248  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  9847  00424A  E01B               	bz	l2303
  9848                           
  9849                           ; BSR set to: 0
  9850  00424C  0E01               	movlw	1
  9851  00424E  6F64               	movwf	___lwdiv@counter& (0+255),b
  9852  004250  D004               	goto	l9623
  9853  004252                     l9621:
  9854                           
  9855                           ; BSR set to: 0
  9856  004252  90D8               	bcf	status,0,c
  9857  004254  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  9858  004256  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9859  004258  2B64               	incf	___lwdiv@counter& (0+255),f,b
  9860  00425A                     l9623:
  9861                           
  9862                           ; BSR set to: 0
  9863  00425A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  9864  00425C  D7FA               	goto	l9621
  9865  00425E                     l9625:
  9866                           
  9867                           ; BSR set to: 0
  9868  00425E  90D8               	bcf	status,0,c
  9869  004260  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  9870  004262  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9871                           
  9872                           ; BSR set to: 0
  9873  004264  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9874  004266  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  9875  004268  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9876  00426A  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9877  00426C  E305               	bnc	l9633
  9878                           
  9879                           ; BSR set to: 0
  9880  00426E  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9881  004270  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  9882  004272  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9883  004274  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9884                           
  9885                           ; BSR set to: 0
  9886  004276  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  9887  004278                     l9633:
  9888                           
  9889                           ; BSR set to: 0
  9890  004278  90D8               	bcf	status,0,c
  9891  00427A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9892  00427C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  9893                           
  9894                           ; BSR set to: 0
  9895  00427E  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  9896  004280  D7EE               	goto	l9625
  9897  004282                     l2303:
  9898                           
  9899                           ; BSR set to: 0
  9900  004282  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  9901  004286  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9902                           
  9903                           ; BSR set to: 0
  9904  00428A  0012               	return		;funcret
  9905  00428C                     __end_of___lwdiv:
  9906                           	opt stack 0
  9907                           tblptru	equ	0xFF8
  9908                           tblptrh	equ	0xFF7
  9909                           tblptrl	equ	0xFF6
  9910                           tablat	equ	0xFF5
  9911                           prodh	equ	0xFF4
  9912                           prodl	equ	0xFF3
  9913                           intcon	equ	0xFF2
  9914                           postinc0	equ	0xFEE
  9915                           wreg	equ	0xFE8
  9916                           indf2	equ	0xFDF
  9917                           postinc2	equ	0xFDE
  9918                           postdec2	equ	0xFDD
  9919                           fsr2h	equ	0xFDA
  9920                           fsr2l	equ	0xFD9
  9921                           status	equ	0xFD8
  9922                           
  9923 ;; *************** function _sendCommand *****************
  9924 ;; Defined at:
  9925 ;;		line 960 in file "../Includes/Board/MOTEapp.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9928 ;;		 -> STR_104(26), STR_103(26), STR_102(26), STR_101(26), 
  9929 ;;		 -> STR_100(1), STR_99(9), STR_98(13), STR_97(13), 
  9930 ;;		 -> STR_96(13), STR_95(13), STR_94(13), STR_93(13), 
  9931 ;;		 -> STR_92(13), STR_91(13), STR_90(16), STR_89(15), 
  9932 ;;		 -> STR_80(10), STR_72(11), moteJoiningProcess@buf(50), STR_67(10), 
  9933 ;;		 -> STR_64(17), STR_61(18), STR_58(16), STR_55(17), 
  9934 ;;		 -> STR_52(17), STR_49(18), STR_46(20), STR_43(20), 
  9935 ;;		 -> STR_40(18), STR_37(17), STR_34(19), STR_29(12), 
  9936 ;;		 -> STR_22(20), STR_21(2), 
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;		None
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  1    wreg      void 
  9941 ;; Registers used:
  9942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9943 ;; Tracked objects:
  9944 ;;		On entry : F/0
  9945 ;;		On exit  : 0/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9948 ;;      Params:         0       2       0       0       0       0       0       0       0
  9949 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9951 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9952 ;;Total ram usage:        2 bytes
  9953 ;; Hardware stack levels used:    1
  9954 ;; Hardware stack levels required when called:   13
  9955 ;; This function calls:
  9956 ;;		_EUSART_Write
  9957 ;;		_EndLine
  9958 ;; This function is called by:
  9959 ;;		_modemResync
  9960 ;;		_modemSleep
  9961 ;;		_moteJoiningProcess
  9962 ;; This function uses a non-reentrant model
  9963 ;;
  9964                           
  9965                           	psect	text29
  9966  00446A                     __ptext29:
  9967                           	opt stack 0
  9968  00446A                     _sendCommand:
  9969                           	opt stack 13
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;MOTEapp.c: 963: while (*string)
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;incstack = 0
  9976  00446A  D015               	goto	l9309
  9977  00446C                     l9305:
  9978                           
  9979                           ;MOTEapp.c: 964: {
  9980                           ;MOTEapp.c: 965: EUSART_Write(*string++);
  9981  00446C  C061  FFF6         	movff	sendCommand@string,tblptrl
  9982  004470  C062  FFF7         	movff	sendCommand@string+1,tblptrh
  9983  004474  6AF8               	clrf	tblptru,c
  9984  004476  0E07               	movlw	(high __ramtop+-1)
  9985  004478  64F7               	cpfsgt	tblptrh,c
  9986  00447A  D003               	bra	u8087
  9987  00447C  0008               	tblrd		*
  9988  00447E  50F5               	movf	tablat,w,c
  9989  004480  D005               	bra	u8080
  9990  004482                     u8087:
  9991  004482  CFF6 FFE1          	movff	tblptrl,fsr1l
  9992  004486  CFF7 FFE2          	movff	tblptrh,fsr1h
  9993  00448A  50E7               	movf	indf1,w,c
  9994  00448C                     u8080:
  9995  00448C  ECFB  F01F         	call	_EUSART_Write
  9996  004490  0100               	movlb	0	; () banked
  9997  004492  4B61               	infsnz	sendCommand@string& (0+255),f,b
  9998  004494  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
  9999  004496                     l9309:
 10000                           
 10001                           ; BSR set to: 0
 10002  004496  C061  FFF6         	movff	sendCommand@string,tblptrl
 10003  00449A  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 10004  00449E  6AF8               	clrf	tblptru,c
 10005  0044A0  0E07               	movlw	(high __ramtop+-1)
 10006  0044A2  64F7               	cpfsgt	tblptrh,c
 10007  0044A4  D003               	bra	u8097
 10008  0044A6  0008               	tblrd		*
 10009  0044A8  50F5               	movf	tablat,w,c
 10010  0044AA  D005               	bra	u8090
 10011  0044AC                     u8097:
 10012  0044AC  CFF6 FFE1          	movff	tblptrl,fsr1l
 10013  0044B0  CFF7 FFE2          	movff	tblptrh,fsr1h
 10014  0044B4  50E7               	movf	indf1,w,c
 10015  0044B6                     u8090:
 10016  0044B6  0900               	iorlw	0
 10017  0044B8  E1D9               	bnz	l9305
 10018                           
 10019                           ;MOTEapp.c: 966: }
 10020                           ;MOTEapp.c: 967: EndLine();
 10021  0044BA  EFAE  F01D         	goto	_EndLine	;wreg free
 10022  0044BE                     __end_of_sendCommand:
 10023                           	opt stack 0
 10024                           tblptru	equ	0xFF8
 10025                           tblptrh	equ	0xFF7
 10026                           tblptrl	equ	0xFF6
 10027                           tablat	equ	0xFF5
 10028                           prodh	equ	0xFF4
 10029                           prodl	equ	0xFF3
 10030                           intcon	equ	0xFF2
 10031                           postinc0	equ	0xFEE
 10032                           wreg	equ	0xFE8
 10033                           indf1	equ	0xFE7
 10034                           fsr1h	equ	0xFE2
 10035                           fsr1l	equ	0xFE1
 10036                           indf2	equ	0xFDF
 10037                           postinc2	equ	0xFDE
 10038                           postdec2	equ	0xFDD
 10039                           fsr2h	equ	0xFDA
 10040                           fsr2l	equ	0xFD9
 10041                           status	equ	0xFD8
 10042                           
 10043 ;; *************** function _EndLine *****************
 10044 ;; Defined at:
 10045 ;;		line 954 in file "../Includes/Board/MOTEapp.c"
 10046 ;; Parameters:    Size  Location     Type
 10047 ;;		None
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;		None
 10050 ;; Return value:  Size  Location     Type
 10051 ;;                  1    wreg      void 
 10052 ;; Registers used:
 10053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10054 ;; Tracked objects:
 10055 ;;		On entry : 0/0
 10056 ;;		On exit  : 0/0
 10057 ;;		Unchanged: 0/0
 10058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10059 ;;      Params:         0       0       0       0       0       0       0       0       0
 10060 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10061 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10062 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10063 ;;Total ram usage:        0 bytes
 10064 ;; Hardware stack levels used:    1
 10065 ;; Hardware stack levels required when called:   12
 10066 ;; This function calls:
 10067 ;;		_EUSART_Write
 10068 ;; This function is called by:
 10069 ;;		_sendCommand
 10070 ;;		_sendDataCommand
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           	psect	text30
 10075  003B5C                     __ptext30:
 10076                           	opt stack 0
 10077  003B5C                     _EndLine:
 10078                           	opt stack 15
 10079                           
 10080                           ;MOTEapp.c: 956: EUSART_Write(0x0D);
 10081                           
 10082                           ;incstack = 0
 10083  003B5C  0E0D               	movlw	13
 10084  003B5E  ECFB  F01F         	call	_EUSART_Write
 10085                           
 10086                           ;MOTEapp.c: 957: EUSART_Write(0x0A);
 10087  003B62  0E0A               	movlw	10
 10088  003B64  EFFB  F01F         	goto	_EUSART_Write
 10089  003B68                     __end_of_EndLine:
 10090                           	opt stack 0
 10091                           tblptru	equ	0xFF8
 10092                           tblptrh	equ	0xFF7
 10093                           tblptrl	equ	0xFF6
 10094                           tablat	equ	0xFF5
 10095                           prodh	equ	0xFF4
 10096                           prodl	equ	0xFF3
 10097                           intcon	equ	0xFF2
 10098                           postinc0	equ	0xFEE
 10099                           wreg	equ	0xFE8
 10100                           indf1	equ	0xFE7
 10101                           fsr1h	equ	0xFE2
 10102                           fsr1l	equ	0xFE1
 10103                           indf2	equ	0xFDF
 10104                           postinc2	equ	0xFDE
 10105                           postdec2	equ	0xFDD
 10106                           fsr2h	equ	0xFDA
 10107                           fsr2l	equ	0xFD9
 10108                           status	equ	0xFD8
 10109                           
 10110 ;; *************** function _oled_init *****************
 10111 ;; Defined at:
 10112 ;;		line 308 in file "../Includes/Drivers/SSD1306oLED.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;		None
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      void 
 10119 ;; Registers used:
 10120 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/1
 10123 ;;		On exit  : F/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10126 ;;      Params:         0       0       0       0       0       0       0       0       0
 10127 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10128 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10129 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10130 ;;Total ram usage:        0 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:   17
 10133 ;; This function calls:
 10134 ;;		_oled_clear
 10135 ;;		_oled_devInit
 10136 ;;		_oled_setDisplay
 10137 ;;		_oled_setFont
 10138 ;; This function is called by:
 10139 ;;		_main
 10140 ;;		_moteJoiningProcess
 10141 ;;		_moteApp_GoToSleep
 10142 ;; This function uses a non-reentrant model
 10143 ;;
 10144                           
 10145                           	psect	text31
 10146  003D30                     __ptext31:
 10147                           	opt stack 0
 10148  003D30                     _oled_init:
 10149                           	opt stack 13
 10150                           
 10151                           ;SSD1306oLED.c: 311: TRISBbits.TRISB2=0;
 10152                           
 10153                           ;incstack = 0
 10154  003D30  9493               	bcf	3987,2,c	;volatile
 10155                           
 10156                           ;SSD1306oLED.c: 312: TRISBbits.TRISB4=0;
 10157  003D32  9893               	bcf	3987,4,c	;volatile
 10158                           
 10159                           ;SSD1306oLED.c: 313: TRISBbits.TRISB5=0;
 10160  003D34  9A93               	bcf	3987,5,c	;volatile
 10161                           
 10162                           ;SSD1306oLED.c: 315: oled_devInit();
 10163  003D36  ECB2  F02A         	call	_oled_devInit	;wreg free
 10164                           
 10165                           ;SSD1306oLED.c: 316: oled_setDisplay(Normal);
 10166  003D3A  0E00               	movlw	0
 10167  003D3C  EC04  F01E         	call	_oled_setDisplay
 10168                           
 10169                           ;SSD1306oLED.c: 318: oled_setFont(OledFont0);
 10170  003D40  0E99               	movlw	low _OledFont0
 10171  003D42  0100               	movlb	0	; () banked
 10172  003D44  6F60               	movwf	oled_setFont@font& (0+255),b
 10173  003D46  0E77               	movlw	high _OledFont0
 10174  003D48  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
 10175  003D4A  ECD4  F01D         	call	_oled_setFont	;wreg free
 10176                           
 10177                           ; BSR set to: 0
 10178                           ;SSD1306oLED.c: 319: oled_clear();
 10179  003D4E  EF24  F01E         	goto	_oled_clear	;wreg free
 10180  003D52                     __end_of_oled_init:
 10181                           	opt stack 0
 10182                           tblptru	equ	0xFF8
 10183                           tblptrh	equ	0xFF7
 10184                           tblptrl	equ	0xFF6
 10185                           tablat	equ	0xFF5
 10186                           prodh	equ	0xFF4
 10187                           prodl	equ	0xFF3
 10188                           intcon	equ	0xFF2
 10189                           postinc0	equ	0xFEE
 10190                           wreg	equ	0xFE8
 10191                           indf1	equ	0xFE7
 10192                           fsr1h	equ	0xFE2
 10193                           fsr1l	equ	0xFE1
 10194                           indf2	equ	0xFDF
 10195                           postinc2	equ	0xFDE
 10196                           postdec2	equ	0xFDD
 10197                           fsr2h	equ	0xFDA
 10198                           fsr2l	equ	0xFD9
 10199                           status	equ	0xFD8
 10200                           
 10201 ;; *************** function _oled_setFont *****************
 10202 ;; Defined at:
 10203 ;;		line 218 in file "../Includes/Drivers/SSD1306oLED.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 10206 ;;		 -> OledFont0(768), 
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;		None
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      void 
 10211 ;; Registers used:
 10212 ;;		wreg, status,2, status,0
 10213 ;; Tracked objects:
 10214 ;;		On entry : F/0
 10215 ;;		On exit  : F/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10218 ;;      Params:         0       2       0       0       0       0       0       0       0
 10219 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10220 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10221 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10222 ;;Total ram usage:        2 bytes
 10223 ;; Hardware stack levels used:    1
 10224 ;; Hardware stack levels required when called:   11
 10225 ;; This function calls:
 10226 ;;		Nothing
 10227 ;; This function is called by:
 10228 ;;		_oled_init
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           	psect	text32
 10233  003BA8                     __ptext32:
 10234                           	opt stack 0
 10235  003BA8                     _oled_setFont:
 10236                           	opt stack 18
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;SSD1306oLED.c: 220: if(font!=0)
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;incstack = 0
 10243  003BA8  5160               	movf	oled_setFont@font& (0+255),w,b
 10244  003BAA  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 10245  003BAC  B4D8               	btfsc	status,2,c
 10246  003BAE  0012               	return	
 10247                           
 10248                           ; BSR set to: 0
 10249                           ;SSD1306oLED.c: 221: {
 10250                           ;SSD1306oLED.c: 222: selectedFont=font;
 10251  003BB0  C060  F1FD         	movff	oled_setFont@font,_selectedFont
 10252  003BB4  C061  F1FE         	movff	oled_setFont@font+1,_selectedFont+1
 10253                           
 10254                           ; BSR set to: 0
 10255  003BB8  0012               	return		;funcret
 10256  003BBA                     __end_of_oled_setFont:
 10257                           	opt stack 0
 10258                           tblptru	equ	0xFF8
 10259                           tblptrh	equ	0xFF7
 10260                           tblptrl	equ	0xFF6
 10261                           tablat	equ	0xFF5
 10262                           prodh	equ	0xFF4
 10263                           prodl	equ	0xFF3
 10264                           intcon	equ	0xFF2
 10265                           postinc0	equ	0xFEE
 10266                           wreg	equ	0xFE8
 10267                           indf1	equ	0xFE7
 10268                           fsr1h	equ	0xFE2
 10269                           fsr1l	equ	0xFE1
 10270                           indf2	equ	0xFDF
 10271                           postinc2	equ	0xFDE
 10272                           postdec2	equ	0xFDD
 10273                           fsr2h	equ	0xFDA
 10274                           fsr2l	equ	0xFD9
 10275                           status	equ	0xFD8
 10276                           
 10277 ;; *************** function _oled_setDisplay *****************
 10278 ;; Defined at:
 10279 ;;		line 383 in file "../Includes/Drivers/SSD1306oLED.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;  displayType     1    wreg     enum E6298
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;  displayType     1    2[BANK0 ] enum E6298
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  1    wreg      void 
 10286 ;; Registers used:
 10287 ;;		wreg, status,2, status,0, cstack
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/1
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10293 ;;      Params:         0       0       0       0       0       0       0       0       0
 10294 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10295 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10296 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10297 ;;Total ram usage:        1 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:   13
 10300 ;; This function calls:
 10301 ;;		_oled_writeCommand
 10302 ;; This function is called by:
 10303 ;;		_oled_init
 10304 ;; This function uses a non-reentrant model
 10305 ;;
 10306                           
 10307                           	psect	text33
 10308  003C08                     __ptext33:
 10309                           	opt stack 0
 10310  003C08                     _oled_setDisplay:
 10311                           	opt stack 16
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;incstack = 0
 10315                           ;oled_setDisplay@displayType stored from wreg
 10316  003C08  0100               	movlb	0	; () banked
 10317  003C0A  6F62               	movwf	oled_setDisplay@displayType& (0+255),b
 10318                           
 10319                           ;SSD1306oLED.c: 385: displayType = 0xA6 + displayType;
 10320  003C0C  0EA6               	movlw	166
 10321  003C0E  2762               	addwf	oled_setDisplay@displayType& (0+255),f,b
 10322                           
 10323                           ; BSR set to: 0
 10324                           ;SSD1306oLED.c: 387: LATBbits.LATB4 = 0;
 10325  003C10  988A               	bcf	3978,4,c	;volatile
 10326                           
 10327                           ; BSR set to: 0
 10328                           ;SSD1306oLED.c: 389: oled_writeCommand(displayType);
 10329  003C12  5162               	movf	oled_setDisplay@displayType& (0+255),w,b
 10330  003C14  ECA2  F01D         	call	_oled_writeCommand
 10331                           
 10332                           ;SSD1306oLED.c: 391: LATBbits.LATB4 = 1;
 10333  003C18  888A               	bsf	3978,4,c	;volatile
 10334  003C1A  0012               	return		;funcret
 10335  003C1C                     __end_of_oled_setDisplay:
 10336                           	opt stack 0
 10337                           tblptru	equ	0xFF8
 10338                           tblptrh	equ	0xFF7
 10339                           tblptrl	equ	0xFF6
 10340                           tablat	equ	0xFF5
 10341                           prodh	equ	0xFF4
 10342                           prodl	equ	0xFF3
 10343                           intcon	equ	0xFF2
 10344                           postinc0	equ	0xFEE
 10345                           wreg	equ	0xFE8
 10346                           indf1	equ	0xFE7
 10347                           fsr1h	equ	0xFE2
 10348                           fsr1l	equ	0xFE1
 10349                           indf2	equ	0xFDF
 10350                           postinc2	equ	0xFDE
 10351                           postdec2	equ	0xFDD
 10352                           fsr2h	equ	0xFDA
 10353                           fsr2l	equ	0xFD9
 10354                           status	equ	0xFD8
 10355                           
 10356 ;; *************** function _oled_devInit *****************
 10357 ;; Defined at:
 10358 ;;		line 322 in file "../Includes/Drivers/SSD1306oLED.c"
 10359 ;; Parameters:    Size  Location     Type
 10360 ;;		None
 10361 ;; Auto vars:     Size  Location     Type
 10362 ;;		None
 10363 ;; Return value:  Size  Location     Type
 10364 ;;                  1    wreg      void 
 10365 ;; Registers used:
 10366 ;;		wreg, status,2, cstack
 10367 ;; Tracked objects:
 10368 ;;		On entry : 0/1
 10369 ;;		On exit  : 0/0
 10370 ;;		Unchanged: 0/0
 10371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10372 ;;      Params:         0       0       0       0       0       0       0       0       0
 10373 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10374 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10375 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10376 ;;Total ram usage:        1 bytes
 10377 ;; Hardware stack levels used:    1
 10378 ;; Hardware stack levels required when called:   13
 10379 ;; This function calls:
 10380 ;;		_oled_writeCommand
 10381 ;; This function is called by:
 10382 ;;		_oled_init
 10383 ;; This function uses a non-reentrant model
 10384 ;;
 10385                           
 10386                           	psect	text34
 10387  005564                     __ptext34:
 10388                           	opt stack 0
 10389  005564                     _oled_devInit:
 10390                           	opt stack 16
 10391                           
 10392                           ;SSD1306oLED.c: 324: LATBbits.LATB4 = 1;
 10393                           
 10394                           ;incstack = 0
 10395  005564  888A               	bsf	3978,4,c	;volatile
 10396                           
 10397                           ;SSD1306oLED.c: 326: LATBbits.LATB5 = 1;
 10398  005566  8A8A               	bsf	3978,5,c	;volatile
 10399                           
 10400                           ;SSD1306oLED.c: 330: LATBbits.LATB2 = 1;
 10401  005568  848A               	bsf	3978,2,c	;volatile
 10402                           
 10403                           ;SSD1306oLED.c: 331: _delay((unsigned long)((20)*(48000000/4000000.0)));
 10404  00556A  0E50               	movlw	80
 10405  00556C                     u10677:
 10406  00556C  2EE8               	decfsz	wreg,f,c
 10407  00556E  D7FE               	goto	u10677
 10408                           
 10409                           ;SSD1306oLED.c: 332: LATBbits.LATB2 = 0;
 10410  005570  948A               	bcf	3978,2,c	;volatile
 10411                           
 10412                           ;SSD1306oLED.c: 333: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10413  005572  0E04               	movlw	4
 10414  005574  0100               	movlb	0	; () banked
 10415  005576  6F62               	movwf	??_oled_devInit& (0+255),b
 10416  005578  0E1C               	movlw	28
 10417  00557A                     u10687:
 10418  00557A  2EE8               	decfsz	wreg,f,c
 10419  00557C  D7FE               	goto	u10687
 10420  00557E  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 10421  005580  D7FC               	goto	u10687
 10422  005582  D000               	nop2	
 10423                           
 10424                           ;SSD1306oLED.c: 334: LATBbits.LATB2 = 1;
 10425  005584  848A               	bsf	3978,2,c	;volatile
 10426                           
 10427                           ;SSD1306oLED.c: 336: LATBbits.LATB4 = 0;
 10428  005586  988A               	bcf	3978,4,c	;volatile
 10429                           
 10430                           ;SSD1306oLED.c: 337: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10431  005588  0E04               	movlw	4
 10432  00558A  0100               	movlb	0	; () banked
 10433  00558C  6F62               	movwf	??_oled_devInit& (0+255),b
 10434  00558E  0E1C               	movlw	28
 10435  005590                     u10697:
 10436  005590  2EE8               	decfsz	wreg,f,c
 10437  005592  D7FE               	goto	u10697
 10438  005594  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 10439  005596  D7FC               	goto	u10697
 10440  005598  D000               	nop2	
 10441                           
 10442                           ;SSD1306oLED.c: 338: LATBbits.LATB5 = 0;
 10443  00559A  9A8A               	bcf	3978,5,c	;volatile
 10444                           
 10445                           ;SSD1306oLED.c: 339: _delay((unsigned long)((200)*(48000000/4000000.0)));
 10446  00559C  0E04               	movlw	4
 10447  00559E  0100               	movlb	0	; () banked
 10448  0055A0  6F62               	movwf	??_oled_devInit& (0+255),b
 10449  0055A2  0E1C               	movlw	28
 10450  0055A4                     u10707:
 10451  0055A4  2EE8               	decfsz	wreg,f,c
 10452  0055A6  D7FE               	goto	u10707
 10453  0055A8  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 10454  0055AA  D7FC               	goto	u10707
 10455  0055AC  D000               	nop2	
 10456                           
 10457                           ;SSD1306oLED.c: 342: oled_writeCommand(0xAE);
 10458  0055AE  0EAE               	movlw	174
 10459  0055B0  ECA2  F01D         	call	_oled_writeCommand
 10460                           
 10461                           ;SSD1306oLED.c: 344: oled_writeCommand(0xD5);
 10462  0055B4  0ED5               	movlw	213
 10463  0055B6  ECA2  F01D         	call	_oled_writeCommand
 10464                           
 10465                           ;SSD1306oLED.c: 345: oled_writeCommand(0x80);
 10466  0055BA  0E80               	movlw	128
 10467  0055BC  ECA2  F01D         	call	_oled_writeCommand
 10468                           
 10469                           ;SSD1306oLED.c: 347: oled_writeCommand(0xA8);
 10470  0055C0  0EA8               	movlw	168
 10471  0055C2  ECA2  F01D         	call	_oled_writeCommand
 10472                           
 10473                           ;SSD1306oLED.c: 348: oled_writeCommand(0x1F);
 10474  0055C6  0E1F               	movlw	31
 10475  0055C8  ECA2  F01D         	call	_oled_writeCommand
 10476                           
 10477                           ;SSD1306oLED.c: 350: oled_writeCommand(0xD3);
 10478  0055CC  0ED3               	movlw	211
 10479  0055CE  ECA2  F01D         	call	_oled_writeCommand
 10480                           
 10481                           ;SSD1306oLED.c: 351: oled_writeCommand(0x00);
 10482  0055D2  0E00               	movlw	0
 10483  0055D4  ECA2  F01D         	call	_oled_writeCommand
 10484                           
 10485                           ;SSD1306oLED.c: 353: oled_writeCommand(0x8D);
 10486  0055D8  0E8D               	movlw	141
 10487  0055DA  ECA2  F01D         	call	_oled_writeCommand
 10488                           
 10489                           ;SSD1306oLED.c: 354: oled_writeCommand(0x14);
 10490  0055DE  0E14               	movlw	20
 10491  0055E0  ECA2  F01D         	call	_oled_writeCommand
 10492                           
 10493                           ;SSD1306oLED.c: 356: oled_writeCommand(0x40);
 10494  0055E4  0E40               	movlw	64
 10495  0055E6  ECA2  F01D         	call	_oled_writeCommand
 10496                           
 10497                           ;SSD1306oLED.c: 358: oled_writeCommand(0xA6);
 10498  0055EA  0EA6               	movlw	166
 10499  0055EC  ECA2  F01D         	call	_oled_writeCommand
 10500                           
 10501                           ;SSD1306oLED.c: 360: oled_writeCommand(0xA4);
 10502  0055F0  0EA4               	movlw	164
 10503  0055F2  ECA2  F01D         	call	_oled_writeCommand
 10504                           
 10505                           ;SSD1306oLED.c: 362: oled_writeCommand(0xA0);
 10506  0055F6  0EA0               	movlw	160
 10507  0055F8  ECA2  F01D         	call	_oled_writeCommand
 10508                           
 10509                           ;SSD1306oLED.c: 364: oled_writeCommand(0xC0);
 10510  0055FC  0EC0               	movlw	192
 10511  0055FE  ECA2  F01D         	call	_oled_writeCommand
 10512                           
 10513                           ;SSD1306oLED.c: 366: oled_writeCommand(0xDA);
 10514  005602  0EDA               	movlw	218
 10515  005604  ECA2  F01D         	call	_oled_writeCommand
 10516                           
 10517                           ;SSD1306oLED.c: 367: oled_writeCommand(0x42);
 10518  005608  0E42               	movlw	66
 10519  00560A  ECA2  F01D         	call	_oled_writeCommand
 10520                           
 10521                           ;SSD1306oLED.c: 369: oled_writeCommand(0x81);
 10522  00560E  0E81               	movlw	129
 10523  005610  ECA2  F01D         	call	_oled_writeCommand
 10524                           
 10525                           ;SSD1306oLED.c: 370: oled_writeCommand(0x7F);
 10526  005614  0E7F               	movlw	127
 10527  005616  ECA2  F01D         	call	_oled_writeCommand
 10528                           
 10529                           ;SSD1306oLED.c: 372: oled_writeCommand(0xD9);
 10530  00561A  0ED9               	movlw	217
 10531  00561C  ECA2  F01D         	call	_oled_writeCommand
 10532                           
 10533                           ;SSD1306oLED.c: 373: oled_writeCommand(0xF1);
 10534  005620  0EF1               	movlw	241
 10535  005622  ECA2  F01D         	call	_oled_writeCommand
 10536                           
 10537                           ;SSD1306oLED.c: 375: oled_writeCommand(0xDB);
 10538  005626  0EDB               	movlw	219
 10539  005628  ECA2  F01D         	call	_oled_writeCommand
 10540                           
 10541                           ;SSD1306oLED.c: 376: oled_writeCommand(0x40);
 10542  00562C  0E40               	movlw	64
 10543  00562E  ECA2  F01D         	call	_oled_writeCommand
 10544                           
 10545                           ;SSD1306oLED.c: 378: oled_writeCommand(0xAF);
 10546  005632  0EAF               	movlw	175
 10547  005634  ECA2  F01D         	call	_oled_writeCommand
 10548                           
 10549                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 1;
 10550  005638  888A               	bsf	3978,4,c	;volatile
 10551  00563A  0012               	return		;funcret
 10552  00563C                     __end_of_oled_devInit:
 10553                           	opt stack 0
 10554                           tblptru	equ	0xFF8
 10555                           tblptrh	equ	0xFF7
 10556                           tblptrl	equ	0xFF6
 10557                           tablat	equ	0xFF5
 10558                           prodh	equ	0xFF4
 10559                           prodl	equ	0xFF3
 10560                           intcon	equ	0xFF2
 10561                           postinc0	equ	0xFEE
 10562                           wreg	equ	0xFE8
 10563                           indf1	equ	0xFE7
 10564                           fsr1h	equ	0xFE2
 10565                           fsr1l	equ	0xFE1
 10566                           indf2	equ	0xFDF
 10567                           postinc2	equ	0xFDE
 10568                           postdec2	equ	0xFDD
 10569                           fsr2h	equ	0xFDA
 10570                           fsr2l	equ	0xFD9
 10571                           status	equ	0xFD8
 10572                           
 10573 ;; *************** function _nibble2int *****************
 10574 ;; Defined at:
 10575 ;;		line 110 in file "../Includes/Board/MOTEapp.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;  c               1    wreg     unsigned char 
 10578 ;; Auto vars:     Size  Location     Type
 10579 ;;  c               1    0[BANK0 ] unsigned char 
 10580 ;; Return value:  Size  Location     Type
 10581 ;;                  1    wreg      unsigned char 
 10582 ;; Registers used:
 10583 ;;		wreg, status,2, status,0
 10584 ;; Tracked objects:
 10585 ;;		On entry : F/1
 10586 ;;		On exit  : F/0
 10587 ;;		Unchanged: 0/0
 10588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10589 ;;      Params:         0       0       0       0       0       0       0       0       0
 10590 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10591 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10592 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10593 ;;Total ram usage:        1 bytes
 10594 ;; Hardware stack levels used:    1
 10595 ;; Hardware stack levels required when called:   11
 10596 ;; This function calls:
 10597 ;;		Nothing
 10598 ;; This function is called by:
 10599 ;;		_moteJoiningProcess
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           	psect	text35
 10604  004142                     __ptext35:
 10605                           	opt stack 0
 10606  004142                     _nibble2int:
 10607                           	opt stack 17
 10608                           
 10609                           ;incstack = 0
 10610                           ;nibble2int@c stored from wreg
 10611  004142  0100               	movlb	0	; () banked
 10612  004144  6F60               	movwf	nibble2int@c& (0+255),b
 10613                           
 10614                           ;MOTEapp.c: 112: if (c>='0' && c<='9') {
 10615  004146  0E2F               	movlw	47
 10616  004148  6560               	cpfsgt	nibble2int@c& (0+255),b
 10617  00414A  D006               	goto	l9693
 10618                           
 10619                           ; BSR set to: 0
 10620  00414C  0E3A               	movlw	58
 10621  00414E  6160               	cpfslt	nibble2int@c& (0+255),b
 10622  004150  D003               	goto	l9693
 10623                           
 10624                           ; BSR set to: 0
 10625                           ;MOTEapp.c: 113: return c-'0';
 10626  004152  5160               	movf	nibble2int@c& (0+255),w,b
 10627  004154  0FD0               	addlw	208
 10628  004156  0012               	return	
 10629  004158                     l9693:
 10630                           
 10631                           ; BSR set to: 0
 10632  004158  0E40               	movlw	64
 10633  00415A  6560               	cpfsgt	nibble2int@c& (0+255),b
 10634  00415C  D006               	goto	l9703
 10635                           
 10636                           ; BSR set to: 0
 10637  00415E  0E47               	movlw	71
 10638  004160  6160               	cpfslt	nibble2int@c& (0+255),b
 10639  004162  D003               	goto	l9703
 10640                           
 10641                           ; BSR set to: 0
 10642                           ;MOTEapp.c: 115: return 10+c-'A';
 10643  004164  5160               	movf	nibble2int@c& (0+255),w,b
 10644  004166  0FC9               	addlw	201
 10645  004168  0012               	return	
 10646  00416A                     l9703:
 10647                           
 10648                           ; BSR set to: 0
 10649  00416A  0E60               	movlw	96
 10650  00416C  6560               	cpfsgt	nibble2int@c& (0+255),b
 10651  00416E  0C00               	retlw	0
 10652                           
 10653                           ; BSR set to: 0
 10654  004170  0E67               	movlw	103
 10655  004172  6160               	cpfslt	nibble2int@c& (0+255),b
 10656  004174  0C00               	retlw	0
 10657                           
 10658                           ; BSR set to: 0
 10659                           ;MOTEapp.c: 117: return 10+c-'a';
 10660  004176  5160               	movf	nibble2int@c& (0+255),w,b
 10661  004178  0FA9               	addlw	169
 10662  00417A  0012               	return	
 10663  00417C                     __end_of_nibble2int:
 10664                           	opt stack 0
 10665                           tblptru	equ	0xFF8
 10666                           tblptrh	equ	0xFF7
 10667                           tblptrl	equ	0xFF6
 10668                           tablat	equ	0xFF5
 10669                           prodh	equ	0xFF4
 10670                           prodl	equ	0xFF3
 10671                           intcon	equ	0xFF2
 10672                           postinc0	equ	0xFEE
 10673                           wreg	equ	0xFE8
 10674                           indf1	equ	0xFE7
 10675                           fsr1h	equ	0xFE2
 10676                           fsr1l	equ	0xFE1
 10677                           indf2	equ	0xFDF
 10678                           postinc2	equ	0xFDE
 10679                           postdec2	equ	0xFDD
 10680                           fsr2h	equ	0xFDA
 10681                           fsr2l	equ	0xFD9
 10682                           status	equ	0xFD8
 10683                           
 10684 ;; *************** function _moteApp_delayms *****************
 10685 ;; Defined at:
 10686 ;;		line 1150 in file "../Includes/Board/MOTEapp.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;  length          2    0[BANK0 ] unsigned int 
 10689 ;; Auto vars:     Size  Location     Type
 10690 ;;  counter         2    3[BANK0 ] unsigned int 
 10691 ;; Return value:  Size  Location     Type
 10692 ;;                  1    wreg      void 
 10693 ;; Registers used:
 10694 ;;		wreg, status,2, status,0
 10695 ;; Tracked objects:
 10696 ;;		On entry : F/0
 10697 ;;		On exit  : F/0
 10698 ;;		Unchanged: 0/0
 10699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10700 ;;      Params:         0       2       0       0       0       0       0       0       0
 10701 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10702 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10703 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10704 ;;Total ram usage:        5 bytes
 10705 ;; Hardware stack levels used:    1
 10706 ;; Hardware stack levels required when called:   11
 10707 ;; This function calls:
 10708 ;;		Nothing
 10709 ;; This function is called by:
 10710 ;;		_main
 10711 ;;		_modemResync
 10712 ;;		_modemSleep
 10713 ;;		_moteHandler
 10714 ;;		_moteJoiningProcess
 10715 ;;		_moteRunningProcess
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           	psect	text36
 10720  003E0C                     __ptext36:
 10721                           	opt stack 0
 10722  003E0C                     _moteApp_delayms:
 10723                           	opt stack 17
 10724                           
 10725                           ; BSR set to: 0
 10726                           ;MOTEapp.c: 1152: uint16_t counter;
 10727                           ;MOTEapp.c: 1153: for(counter = 0; counter < length; counter++)
 10728                           
 10729                           ; BSR set to: 0
 10730                           ;incstack = 0
 10731  003E0C  6B63               	clrf	moteApp_delayms@counter& (0+255),b
 10732  003E0E  6B64               	clrf	(moteApp_delayms@counter+1)& (0+255),b
 10733  003E10  D00B               	goto	l608
 10734  003E12                     l9297:
 10735                           
 10736                           ; BSR set to: 0
 10737                           ;MOTEapp.c: 1154: {
 10738                           ;MOTEapp.c: 1155: _delay((unsigned long)((1)*(48000000/4000.0)));
 10739  003E12  0E10               	movlw	16
 10740  003E14  6F62               	movwf	??_moteApp_delayms& (0+255),b
 10741  003E16  0E94               	movlw	148
 10742  003E18                     u10717:
 10743  003E18  2EE8               	decfsz	wreg,f,c
 10744  003E1A  D7FE               	goto	u10717
 10745  003E1C  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 10746  003E1E  D7FC               	goto	u10717
 10747  003E20  D000               	nop2	
 10748  003E22  0100               	movlb	0	; () banked
 10749  003E24  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 10750  003E26  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 10751  003E28                     l608:
 10752                           
 10753                           ; BSR set to: 0
 10754  003E28  5160               	movf	moteApp_delayms@length& (0+255),w,b
 10755  003E2A  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 10756  003E2C  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 10757  003E2E  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 10758  003E30  E3F0               	bnc	l9297
 10759                           
 10760                           ; BSR set to: 0
 10761  003E32  0012               	return		;funcret
 10762  003E34                     __end_of_moteApp_delayms:
 10763                           	opt stack 0
 10764                           tblptru	equ	0xFF8
 10765                           tblptrh	equ	0xFF7
 10766                           tblptrl	equ	0xFF6
 10767                           tablat	equ	0xFF5
 10768                           prodh	equ	0xFF4
 10769                           prodl	equ	0xFF3
 10770                           intcon	equ	0xFF2
 10771                           postinc0	equ	0xFEE
 10772                           wreg	equ	0xFE8
 10773                           indf1	equ	0xFE7
 10774                           fsr1h	equ	0xFE2
 10775                           fsr1l	equ	0xFE1
 10776                           indf2	equ	0xFDF
 10777                           postinc2	equ	0xFDE
 10778                           postdec2	equ	0xFDD
 10779                           fsr2h	equ	0xFDA
 10780                           fsr2l	equ	0xFD9
 10781                           status	equ	0xFD8
 10782                           
 10783 ;; *************** function ___xxtofl *****************
 10784 ;; Defined at:
 10785 ;;		line 10 in file "/opt/microchip/xc8/v1.36/sources/common/xxtofl.c"
 10786 ;; Parameters:    Size  Location     Type
 10787 ;;  sign            1    wreg     unsigned char 
 10788 ;;  val             4    0[BANK0 ] long 
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;  sign            1    8[BANK0 ] unsigned char 
 10791 ;;  arg             4   10[BANK0 ] unsigned long 
 10792 ;;  exp             1    9[BANK0 ] unsigned char 
 10793 ;; Return value:  Size  Location     Type
 10794 ;;                  4    0[BANK0 ] unsigned char 
 10795 ;; Registers used:
 10796 ;;		wreg, status,2, status,0
 10797 ;; Tracked objects:
 10798 ;;		On entry : F/0
 10799 ;;		On exit  : F/0
 10800 ;;		Unchanged: 0/0
 10801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10802 ;;      Params:         0       4       0       0       0       0       0       0       0
 10803 ;;      Locals:         0       6       0       0       0       0       0       0       0
 10804 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10805 ;;      Totals:         0      14       0       0       0       0       0       0       0
 10806 ;;Total ram usage:       14 bytes
 10807 ;; Hardware stack levels used:    1
 10808 ;; Hardware stack levels required when called:   11
 10809 ;; This function calls:
 10810 ;;		Nothing
 10811 ;; This function is called by:
 10812 ;;		_moteJoiningProcess
 10813 ;; This function uses a non-reentrant model
 10814 ;;
 10815                           
 10816                           	psect	text37
 10817  005DE2                     __ptext37:
 10818                           	opt stack 0
 10819  005DE2                     ___xxtofl:
 10820                           	opt stack 17
 10821                           
 10822                           ; BSR set to: 0
 10823                           ;incstack = 0
 10824                           ;___xxtofl@sign stored from wreg
 10825  005DE2  6F68               	movwf	___xxtofl@sign& (0+255),b
 10826  005DE4  0100               	movlb	0	; () banked
 10827  005DE6  5168               	movf	___xxtofl@sign& (0+255),w,b
 10828  005DE8  E01C               	bz	l2473
 10829                           
 10830                           ; BSR set to: 0
 10831  005DEA  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10832  005DEC  D01A               	goto	l2473
 10833                           
 10834                           ; BSR set to: 0
 10835  005DEE  C060  F064         	movff	___xxtofl@val,??___xxtofl
 10836  005DF2  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 10837  005DF6  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 10838  005DFA  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 10839  005DFE  1F64               	comf	??___xxtofl& (0+255),f,b
 10840  005E00  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 10841  005E02  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 10842  005E04  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 10843  005E06  2B64               	incf	??___xxtofl& (0+255),f,b
 10844  005E08  0E00               	movlw	0
 10845  005E0A  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10846  005E0C  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10847  005E0E  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10848  005E10  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 10849  005E14  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 10850  005E18  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 10851  005E1C  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 10852  005E20  D008               	goto	l10493
 10853  005E22                     l2473:
 10854                           
 10855                           ; BSR set to: 0
 10856  005E22  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 10857  005E26  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10858  005E2A  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10859  005E2E  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10860  005E32                     l10493:
 10861                           
 10862                           ; BSR set to: 0
 10863  005E32  5160               	movf	___xxtofl@val& (0+255),w,b
 10864  005E34  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10865  005E36  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10866  005E38  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10867  005E3A  E105               	bnz	l10497
 10868                           
 10869                           ; BSR set to: 0
 10870  005E3C  6B60               	clrf	?___xxtofl& (0+255),b
 10871  005E3E  6B61               	clrf	(?___xxtofl+1)& (0+255),b
 10872  005E40  6B62               	clrf	(?___xxtofl+2)& (0+255),b
 10873  005E42  6B63               	clrf	(?___xxtofl+3)& (0+255),b
 10874  005E44  0012               	return	
 10875  005E46                     l10497:
 10876                           
 10877                           ; BSR set to: 0
 10878  005E46  0E96               	movlw	150
 10879  005E48  6F69               	movwf	___xxtofl@exp& (0+255),b
 10880  005E4A  D006               	goto	l10501
 10881  005E4C                     l10499:
 10882                           
 10883                           ; BSR set to: 0
 10884  005E4C  2B69               	incf	___xxtofl@exp& (0+255),f,b
 10885  005E4E  90D8               	bcf	status,0,c
 10886  005E50  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10887  005E52  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10888  005E54  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10889  005E56  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 10890  005E58                     l10501:
 10891                           
 10892                           ; BSR set to: 0
 10893  005E58  6B64               	clrf	??___xxtofl& (0+255),b
 10894  005E5A  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 10895  005E5C  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 10896  005E5E  0EFE               	movlw	254
 10897  005E60  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10898  005E62  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 10899  005E64  5164               	movf	??___xxtofl& (0+255),w,b
 10900  005E66  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10901  005E68  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10902  005E6A  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10903  005E6C  E00C               	bz	l2480
 10904  005E6E  D7EE               	goto	l10499
 10905  005E70                     l10503:
 10906                           
 10907                           ; BSR set to: 0
 10908  005E70  2B69               	incf	___xxtofl@exp& (0+255),f,b
 10909                           
 10910                           ; BSR set to: 0
 10911  005E72  2B6A               	incf	___xxtofl@arg& (0+255),f,b
 10912  005E74  0E00               	movlw	0
 10913  005E76  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10914  005E78  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10915  005E7A  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10916                           
 10917                           ; BSR set to: 0
 10918  005E7C  90D8               	bcf	status,0,c
 10919  005E7E  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10920  005E80  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10921  005E82  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10922  005E84  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 10923  005E86                     l2480:
 10924                           
 10925                           ; BSR set to: 0
 10926  005E86  6B64               	clrf	??___xxtofl& (0+255),b
 10927  005E88  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 10928  005E8A  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 10929  005E8C  516D               	movf	(___xxtofl@arg+3)& (0+255),w,b
 10930  005E8E  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 10931  005E90  5164               	movf	??___xxtofl& (0+255),w,b
 10932  005E92  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10933  005E94  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10934  005E96  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10935  005E98  E007               	bz	l10511
 10936  005E9A  D7EA               	goto	l10503
 10937  005E9C                     l10509:
 10938                           
 10939                           ; BSR set to: 0
 10940  005E9C  0769               	decf	___xxtofl@exp& (0+255),f,b
 10941  005E9E  90D8               	bcf	status,0,c
 10942  005EA0  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 10943  005EA2  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10944  005EA4  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10945  005EA6  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10946  005EA8                     l10511:
 10947                           
 10948                           ; BSR set to: 0
 10949  005EA8  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10950  005EAA  D003               	goto	l2487
 10951                           
 10952                           ; BSR set to: 0
 10953  005EAC  0E02               	movlw	2
 10954  005EAE  6169               	cpfslt	___xxtofl@exp& (0+255),b
 10955  005EB0  D7F5               	goto	l10509
 10956  005EB2                     l2487:
 10957                           
 10958                           ; BSR set to: 0
 10959  005EB2  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 10960  005EB4  D002               	goto	l2488
 10961                           
 10962                           ; BSR set to: 0
 10963  005EB6  0E7F               	movlw	127
 10964  005EB8  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10965  005EBA                     l2488:
 10966                           
 10967                           ; BSR set to: 0
 10968  005EBA  90D8               	bcf	status,0,c
 10969  005EBC  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 10970  005EBE  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 10971  005EC2  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 10972  005EC4  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 10973  005EC6  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 10974  005EC8  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 10975  005ECC  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 10976  005ECE  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 10977  005ED0  6B64               	clrf	??___xxtofl& (0+255),b
 10978  005ED2  5164               	movf	??___xxtofl& (0+255),w,b
 10979  005ED4  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 10980  005ED6  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 10981  005ED8  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10982  005EDA  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 10983  005EDC  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10984  005EDE  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 10985  005EE0  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10986                           
 10987                           ; BSR set to: 0
 10988  005EE2  5168               	movf	___xxtofl@sign& (0+255),w,b
 10989  005EE4  E002               	bz	l10523
 10990                           
 10991                           ; BSR set to: 0
 10992  005EE6  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 10993                           
 10994                           ; BSR set to: 0
 10995  005EE8  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10996  005EEA                     l10523:
 10997                           
 10998                           ; BSR set to: 0
 10999  005EEA  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 11000  005EEE  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 11001  005EF2  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 11002  005EF6  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 11003                           
 11004                           ; BSR set to: 0
 11005  005EFA  0012               	return		;funcret
 11006  005EFC                     __end_of___xxtofl:
 11007                           	opt stack 0
 11008                           tblptru	equ	0xFF8
 11009                           tblptrh	equ	0xFF7
 11010                           tblptrl	equ	0xFF6
 11011                           tablat	equ	0xFF5
 11012                           prodh	equ	0xFF4
 11013                           prodl	equ	0xFF3
 11014                           intcon	equ	0xFF2
 11015                           postinc0	equ	0xFEE
 11016                           wreg	equ	0xFE8
 11017                           indf1	equ	0xFE7
 11018                           fsr1h	equ	0xFE2
 11019                           fsr1l	equ	0xFE1
 11020                           indf2	equ	0xFDF
 11021                           postinc2	equ	0xFDE
 11022                           postdec2	equ	0xFDD
 11023                           fsr2h	equ	0xFDA
 11024                           fsr2l	equ	0xFD9
 11025                           status	equ	0xFD8
 11026                           
 11027 ;; *************** function ___fltol *****************
 11028 ;; Defined at:
 11029 ;;		line 43 in file "/opt/microchip/xc8/v1.36/sources/common/fltol.c"
 11030 ;; Parameters:    Size  Location     Type
 11031 ;;  f1              4   64[BANK0 ] unsigned char 
 11032 ;; Auto vars:     Size  Location     Type
 11033 ;;  exp1            1   73[BANK0 ] unsigned char 
 11034 ;;  sign1           1   72[BANK0 ] unsigned char 
 11035 ;; Return value:  Size  Location     Type
 11036 ;;                  4   64[BANK0 ] long 
 11037 ;; Registers used:
 11038 ;;		wreg, status,2, status,0
 11039 ;; Tracked objects:
 11040 ;;		On entry : F/0
 11041 ;;		On exit  : F/0
 11042 ;;		Unchanged: 0/0
 11043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11044 ;;      Params:         0       4       0       0       0       0       0       0       0
 11045 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11046 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11047 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11048 ;;Total ram usage:       10 bytes
 11049 ;; Hardware stack levels used:    1
 11050 ;; Hardware stack levels required when called:   11
 11051 ;; This function calls:
 11052 ;;		Nothing
 11053 ;; This function is called by:
 11054 ;;		_moteJoiningProcess
 11055 ;; This function uses a non-reentrant model
 11056 ;;
 11057                           
 11058                           	psect	text38
 11059  004C5E                     __ptext38:
 11060                           	opt stack 0
 11061  004C5E                     ___fltol:
 11062                           	opt stack 17
 11063                           
 11064                           ; BSR set to: 0
 11065                           
 11066                           ; BSR set to: 0
 11067                           ;incstack = 0
 11068  004C5E  35A2               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11069  004C60  35A3               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11070  004C62  6FA9               	movwf	___fltol@exp1& (0+255),b
 11071  004C64  51A9               	movf	___fltol@exp1& (0+255),w,b
 11072  004C66  E105               	bnz	l10453
 11073  004C68                     l10451:
 11074                           
 11075                           ; BSR set to: 0
 11076  004C68  6BA0               	clrf	?___fltol& (0+255),b
 11077  004C6A  6BA1               	clrf	(?___fltol+1)& (0+255),b
 11078  004C6C  6BA2               	clrf	(?___fltol+2)& (0+255),b
 11079  004C6E  6BA3               	clrf	(?___fltol+3)& (0+255),b
 11080  004C70  0012               	return	
 11081  004C72                     l10453:
 11082                           
 11083                           ; BSR set to: 0
 11084  004C72  C0A0  F0A4         	movff	___fltol@f1,??___fltol
 11085  004C76  C0A1  F0A5         	movff	___fltol@f1+1,??___fltol+1
 11086  004C7A  C0A2  F0A6         	movff	___fltol@f1+2,??___fltol+2
 11087  004C7E  C0A3  F0A7         	movff	___fltol@f1+3,??___fltol+3
 11088  004C82  0E20               	movlw	32
 11089  004C84  D005               	goto	u9500
 11090  004C86                     u9505:
 11091  004C86  90D8               	bcf	status,0,c
 11092  004C88  33A7               	rrcf	(??___fltol+3)& (0+255),f,b
 11093  004C8A  33A6               	rrcf	(??___fltol+2)& (0+255),f,b
 11094  004C8C  33A5               	rrcf	(??___fltol+1)& (0+255),f,b
 11095  004C8E  33A4               	rrcf	??___fltol& (0+255),f,b
 11096  004C90                     u9500:
 11097  004C90  2EE8               	decfsz	wreg,f,c
 11098  004C92  D7F9               	goto	u9505
 11099  004C94  51A4               	movf	??___fltol& (0+255),w,b
 11100  004C96  6FA8               	movwf	___fltol@sign1& (0+255),b
 11101                           
 11102                           ; BSR set to: 0
 11103  004C98  8FA2               	bsf	(___fltol@f1+2)& (0+255),7,b
 11104                           
 11105                           ; BSR set to: 0
 11106  004C9A  6BA3               	clrf	(___fltol@f1+3)& (0+255),b
 11107                           
 11108                           ; BSR set to: 0
 11109  004C9C  0E96               	movlw	150
 11110  004C9E  5FA9               	subwf	___fltol@exp1& (0+255),f,b
 11111                           
 11112                           ; BSR set to: 0
 11113  004CA0  AFA9               	btfss	___fltol@exp1& (0+255),7,b
 11114  004CA2  D00C               	goto	l10471
 11115                           
 11116                           ; BSR set to: 0
 11117  004CA4  51A9               	movf	___fltol@exp1& (0+255),w,b
 11118  004CA6  0A80               	xorlw	128
 11119  004CA8  0F97               	addlw	151
 11120  004CAA  E3DE               	bnc	l10451
 11121  004CAC                     l10467:
 11122                           
 11123                           ; BSR set to: 0
 11124  004CAC  90D8               	bcf	status,0,c
 11125  004CAE  33A3               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11126  004CB0  33A2               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11127  004CB2  33A1               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11128  004CB4  33A0               	rrcf	___fltol@f1& (0+255),f,b
 11129                           
 11130                           ; BSR set to: 0
 11131  004CB6  3FA9               	incfsz	___fltol@exp1& (0+255),f,b
 11132  004CB8  D7F9               	goto	l10467
 11133  004CBA  D00C               	goto	l10479
 11134  004CBC                     l10471:
 11135                           
 11136                           ; BSR set to: 0
 11137  004CBC  0E1F               	movlw	31
 11138  004CBE  65A9               	cpfsgt	___fltol@exp1& (0+255),b
 11139  004CC0  D007               	goto	l10477
 11140  004CC2  D7D2               	goto	l10451
 11141  004CC4                     l10475:
 11142                           
 11143                           ; BSR set to: 0
 11144  004CC4  90D8               	bcf	status,0,c
 11145  004CC6  37A0               	rlcf	___fltol@f1& (0+255),f,b
 11146  004CC8  37A1               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11147  004CCA  37A2               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11148  004CCC  37A3               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11149  004CCE  07A9               	decf	___fltol@exp1& (0+255),f,b
 11150  004CD0                     l10477:
 11151                           
 11152                           ; BSR set to: 0
 11153  004CD0  51A9               	movf	___fltol@exp1& (0+255),w,b
 11154  004CD2  E1F8               	bnz	l10475
 11155  004CD4                     l10479:
 11156                           
 11157                           ; BSR set to: 0
 11158  004CD4  51A8               	movf	___fltol@sign1& (0+255),w,b
 11159  004CD6  E008               	bz	l10483
 11160                           
 11161                           ; BSR set to: 0
 11162  004CD8  1FA3               	comf	(___fltol@f1+3)& (0+255),f,b
 11163  004CDA  1FA2               	comf	(___fltol@f1+2)& (0+255),f,b
 11164  004CDC  1FA1               	comf	(___fltol@f1+1)& (0+255),f,b
 11165  004CDE  6DA0               	negf	___fltol@f1& (0+255),b
 11166  004CE0  0E00               	movlw	0
 11167  004CE2  23A1               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11168  004CE4  23A2               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11169  004CE6  23A3               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11170  004CE8                     l10483:
 11171                           
 11172                           ; BSR set to: 0
 11173  004CE8  C0A0  F0A0         	movff	___fltol@f1,?___fltol
 11174  004CEC  C0A1  F0A1         	movff	___fltol@f1+1,?___fltol+1
 11175  004CF0  C0A2  F0A2         	movff	___fltol@f1+2,?___fltol+2
 11176  004CF4  C0A3  F0A3         	movff	___fltol@f1+3,?___fltol+3
 11177                           
 11178                           ; BSR set to: 0
 11179  004CF8  0012               	return		;funcret
 11180  004CFA                     __end_of___fltol:
 11181                           	opt stack 0
 11182                           tblptru	equ	0xFF8
 11183                           tblptrh	equ	0xFF7
 11184                           tblptrl	equ	0xFF6
 11185                           tablat	equ	0xFF5
 11186                           prodh	equ	0xFF4
 11187                           prodl	equ	0xFF3
 11188                           intcon	equ	0xFF2
 11189                           postinc0	equ	0xFEE
 11190                           wreg	equ	0xFE8
 11191                           indf1	equ	0xFE7
 11192                           fsr1h	equ	0xFE2
 11193                           fsr1l	equ	0xFE1
 11194                           indf2	equ	0xFDF
 11195                           postinc2	equ	0xFDE
 11196                           postdec2	equ	0xFDD
 11197                           fsr2h	equ	0xFDA
 11198                           fsr2l	equ	0xFD9
 11199                           status	equ	0xFD8
 11200                           
 11201 ;; *************** function ___flmul *****************
 11202 ;; Defined at:
 11203 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/sprcmul.c"
 11204 ;; Parameters:    Size  Location     Type
 11205 ;;  b               4   14[BANK0 ] long 
 11206 ;;  a               4   18[BANK0 ] long 
 11207 ;; Auto vars:     Size  Location     Type
 11208 ;;  prod            4   33[BANK0 ] struct .
 11209 ;;  grs             4   29[BANK0 ] unsigned long 
 11210 ;;  temp            2   37[BANK0 ] struct .
 11211 ;;  bexp            1   28[BANK0 ] unsigned char 
 11212 ;;  aexp            1   27[BANK0 ] unsigned char 
 11213 ;;  sign            1   26[BANK0 ] unsigned char 
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  4   14[BANK0 ] unsigned char 
 11216 ;; Registers used:
 11217 ;;		wreg, status,2, status,0, prodl, prodh
 11218 ;; Tracked objects:
 11219 ;;		On entry : F/0
 11220 ;;		On exit  : F/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11223 ;;      Params:         0       8       0       0       0       0       0       0       0
 11224 ;;      Locals:         0      13       0       0       0       0       0       0       0
 11225 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11226 ;;      Totals:         0      25       0       0       0       0       0       0       0
 11227 ;;Total ram usage:       25 bytes
 11228 ;; Hardware stack levels used:    1
 11229 ;; Hardware stack levels required when called:   11
 11230 ;; This function calls:
 11231 ;;		Nothing
 11232 ;; This function is called by:
 11233 ;;		_moteJoiningProcess
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237                           	psect	text39
 11238  0068DA                     __ptext39:
 11239                           	opt stack 0
 11240  0068DA                     ___flmul:
 11241                           	opt stack 17
 11242                           
 11243                           ; BSR set to: 0
 11244                           
 11245                           ; BSR set to: 0
 11246                           ;incstack = 0
 11247  0068DA  5171               	movf	(___flmul@b+3)& (0+255),w,b
 11248  0068DC  0B80               	andlw	128
 11249  0068DE  6F7A               	movwf	___flmul@sign& (0+255),b
 11250  0068E0  5171               	movf	(___flmul@b+3)& (0+255),w,b
 11251  0068E2  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 11252  0068E4  6F7C               	movwf	___flmul@bexp& (0+255),b
 11253                           
 11254                           ; BSR set to: 0
 11255  0068E6  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 11256                           
 11257                           ; BSR set to: 0
 11258  0068E8  817C               	bsf	___flmul@bexp& (0+255),0,b
 11259                           
 11260                           ; BSR set to: 0
 11261  0068EA  517C               	movf	___flmul@bexp& (0+255),w,b
 11262  0068EC  E008               	bz	l2426
 11263                           
 11264                           ; BSR set to: 0
 11265  0068EE  297C               	incf	___flmul@bexp& (0+255),w,b
 11266  0068F0  E104               	bnz	l10343
 11267                           
 11268                           ; BSR set to: 0
 11269  0068F2  6B6E               	clrf	___flmul@b& (0+255),b
 11270  0068F4  6B6F               	clrf	(___flmul@b+1)& (0+255),b
 11271  0068F6  6B70               	clrf	(___flmul@b+2)& (0+255),b
 11272  0068F8  6B71               	clrf	(___flmul@b+3)& (0+255),b
 11273  0068FA                     l10343:
 11274                           
 11275                           ; BSR set to: 0
 11276  0068FA  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 11277  0068FC  D004               	goto	l10345
 11278  0068FE                     l2426:
 11279                           
 11280                           ; BSR set to: 0
 11281  0068FE  6B6E               	clrf	___flmul@b& (0+255),b
 11282  006900  6B6F               	clrf	(___flmul@b+1)& (0+255),b
 11283  006902  6B70               	clrf	(___flmul@b+2)& (0+255),b
 11284  006904  6B71               	clrf	(___flmul@b+3)& (0+255),b
 11285  006906                     l10345:
 11286                           
 11287                           ; BSR set to: 0
 11288  006906  5175               	movf	(___flmul@a+3)& (0+255),w,b
 11289  006908  0B80               	andlw	128
 11290  00690A  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 11291  00690C  5175               	movf	(___flmul@a+3)& (0+255),w,b
 11292  00690E  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 11293  006910  6F7B               	movwf	___flmul@aexp& (0+255),b
 11294                           
 11295                           ; BSR set to: 0
 11296  006912  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 11297                           
 11298                           ; BSR set to: 0
 11299  006914  817B               	bsf	___flmul@aexp& (0+255),0,b
 11300                           
 11301                           ; BSR set to: 0
 11302  006916  517B               	movf	___flmul@aexp& (0+255),w,b
 11303  006918  E008               	bz	l2430
 11304                           
 11305                           ; BSR set to: 0
 11306  00691A  297B               	incf	___flmul@aexp& (0+255),w,b
 11307  00691C  E104               	bnz	l10357
 11308                           
 11309                           ; BSR set to: 0
 11310  00691E  6B72               	clrf	___flmul@a& (0+255),b
 11311  006920  6B73               	clrf	(___flmul@a+1)& (0+255),b
 11312  006922  6B74               	clrf	(___flmul@a+2)& (0+255),b
 11313  006924  6B75               	clrf	(___flmul@a+3)& (0+255),b
 11314  006926                     l10357:
 11315                           
 11316                           ; BSR set to: 0
 11317  006926  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 11318  006928  D004               	goto	l10359
 11319  00692A                     l2430:
 11320                           
 11321                           ; BSR set to: 0
 11322  00692A  6B72               	clrf	___flmul@a& (0+255),b
 11323  00692C  6B73               	clrf	(___flmul@a+1)& (0+255),b
 11324  00692E  6B74               	clrf	(___flmul@a+2)& (0+255),b
 11325  006930  6B75               	clrf	(___flmul@a+3)& (0+255),b
 11326  006932                     l10359:
 11327                           
 11328                           ; BSR set to: 0
 11329  006932  517B               	movf	___flmul@aexp& (0+255),w,b
 11330  006934  E002               	bz	l2435
 11331                           
 11332                           ; BSR set to: 0
 11333  006936  517C               	movf	___flmul@bexp& (0+255),w,b
 11334  006938  E105               	bnz	l10363
 11335  00693A                     l2435:
 11336                           
 11337                           ; BSR set to: 0
 11338  00693A  6B6E               	clrf	?___flmul& (0+255),b
 11339  00693C  6B6F               	clrf	(?___flmul+1)& (0+255),b
 11340  00693E  6B70               	clrf	(?___flmul+2)& (0+255),b
 11341  006940  6B71               	clrf	(?___flmul+3)& (0+255),b
 11342  006942  0012               	return	
 11343  006944                     l10363:
 11344                           
 11345                           ; BSR set to: 0
 11346  006944  5174               	movf	(___flmul@a+2)& (0+255),w,b
 11347  006946  036E               	mulwf	___flmul@b& (0+255),b
 11348  006948  CFF3 F085          	movff	prodl,___flmul@temp
 11349  00694C  CFF4 F086          	movff	prodh,___flmul@temp+1
 11350                           
 11351                           ; BSR set to: 0
 11352  006950  5185               	movf	___flmul@temp& (0+255),w,b
 11353  006952  6F7D               	movwf	___flmul@grs& (0+255),b
 11354  006954  6B7E               	clrf	(___flmul@grs+1)& (0+255),b
 11355  006956  6B7F               	clrf	(___flmul@grs+2)& (0+255),b
 11356  006958  6B80               	clrf	(___flmul@grs+3)& (0+255),b
 11357                           
 11358                           ; BSR set to: 0
 11359  00695A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11360  00695C  6F81               	movwf	___flmul@prod& (0+255),b
 11361  00695E  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 11362  006960  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 11363  006962  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 11364  006964  5173               	movf	(___flmul@a+1)& (0+255),w,b
 11365  006966  036F               	mulwf	(___flmul@b+1)& (0+255),b
 11366  006968  CFF3 F085          	movff	prodl,___flmul@temp
 11367  00696C  CFF4 F086          	movff	prodh,___flmul@temp+1
 11368                           
 11369                           ; BSR set to: 0
 11370  006970  5185               	movf	___flmul@temp& (0+255),w,b
 11371  006972  277D               	addwf	___flmul@grs& (0+255),f,b
 11372  006974  0E00               	movlw	0
 11373  006976  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11374  006978  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11375  00697A  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11376                           
 11377                           ; BSR set to: 0
 11378  00697C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11379  00697E  2781               	addwf	___flmul@prod& (0+255),f,b
 11380  006980  0E00               	movlw	0
 11381  006982  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11382  006984  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11383  006986  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11384  006988  5172               	movf	___flmul@a& (0+255),w,b
 11385  00698A  0370               	mulwf	(___flmul@b+2)& (0+255),b
 11386  00698C  CFF3 F085          	movff	prodl,___flmul@temp
 11387  006990  CFF4 F086          	movff	prodh,___flmul@temp+1
 11388                           
 11389                           ; BSR set to: 0
 11390  006994  5185               	movf	___flmul@temp& (0+255),w,b
 11391  006996  277D               	addwf	___flmul@grs& (0+255),f,b
 11392  006998  0E00               	movlw	0
 11393  00699A  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11394  00699C  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11395  00699E  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11396                           
 11397                           ; BSR set to: 0
 11398  0069A0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11399  0069A2  2781               	addwf	___flmul@prod& (0+255),f,b
 11400  0069A4  0E00               	movlw	0
 11401  0069A6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11402  0069A8  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11403  0069AA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11404                           
 11405                           ; BSR set to: 0
 11406  0069AC  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 11407  0069B0  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 11408  0069B4  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 11409  0069B8  6B7D               	clrf	___flmul@grs& (0+255),b
 11410                           
 11411                           ; BSR set to: 0
 11412  0069BA  5172               	movf	___flmul@a& (0+255),w,b
 11413  0069BC  036F               	mulwf	(___flmul@b+1)& (0+255),b
 11414  0069BE  CFF3 F085          	movff	prodl,___flmul@temp
 11415  0069C2  CFF4 F086          	movff	prodh,___flmul@temp+1
 11416                           
 11417                           ; BSR set to: 0
 11418  0069C6  5185               	movf	___flmul@temp& (0+255),w,b
 11419  0069C8  277D               	addwf	___flmul@grs& (0+255),f,b
 11420  0069CA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11421  0069CC  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11422  0069CE  0E00               	movlw	0
 11423  0069D0  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11424  0069D2  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11425                           
 11426                           ; BSR set to: 0
 11427  0069D4  5173               	movf	(___flmul@a+1)& (0+255),w,b
 11428  0069D6  036E               	mulwf	___flmul@b& (0+255),b
 11429  0069D8  CFF3 F085          	movff	prodl,___flmul@temp
 11430  0069DC  CFF4 F086          	movff	prodh,___flmul@temp+1
 11431                           
 11432                           ; BSR set to: 0
 11433  0069E0  5185               	movf	___flmul@temp& (0+255),w,b
 11434  0069E2  277D               	addwf	___flmul@grs& (0+255),f,b
 11435  0069E4  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11436  0069E6  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11437  0069E8  0E00               	movlw	0
 11438  0069EA  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11439  0069EC  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11440                           
 11441                           ; BSR set to: 0
 11442  0069EE  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 11443  0069F2  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 11444  0069F6  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 11445  0069FA  6B7D               	clrf	___flmul@grs& (0+255),b
 11446  0069FC  5172               	movf	___flmul@a& (0+255),w,b
 11447  0069FE  036E               	mulwf	___flmul@b& (0+255),b
 11448  006A00  CFF3 F085          	movff	prodl,___flmul@temp
 11449  006A04  CFF4 F086          	movff	prodh,___flmul@temp+1
 11450                           
 11451                           ; BSR set to: 0
 11452  006A08  5185               	movf	___flmul@temp& (0+255),w,b
 11453  006A0A  277D               	addwf	___flmul@grs& (0+255),f,b
 11454  006A0C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11455  006A0E  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11456  006A10  0E00               	movlw	0
 11457  006A12  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11458  006A14  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11459                           
 11460                           ; BSR set to: 0
 11461  006A16  5174               	movf	(___flmul@a+2)& (0+255),w,b
 11462  006A18  036F               	mulwf	(___flmul@b+1)& (0+255),b
 11463  006A1A  CFF3 F085          	movff	prodl,___flmul@temp
 11464  006A1E  CFF4 F086          	movff	prodh,___flmul@temp+1
 11465  006A22  5185               	movf	___flmul@temp& (0+255),w,b
 11466  006A24  2781               	addwf	___flmul@prod& (0+255),f,b
 11467  006A26  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11468  006A28  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11469  006A2A  0E00               	movlw	0
 11470  006A2C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11471  006A2E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11472                           
 11473                           ; BSR set to: 0
 11474  006A30  5173               	movf	(___flmul@a+1)& (0+255),w,b
 11475  006A32  0370               	mulwf	(___flmul@b+2)& (0+255),b
 11476  006A34  CFF3 F085          	movff	prodl,___flmul@temp
 11477  006A38  CFF4 F086          	movff	prodh,___flmul@temp+1
 11478                           
 11479                           ; BSR set to: 0
 11480  006A3C  5185               	movf	___flmul@temp& (0+255),w,b
 11481  006A3E  2781               	addwf	___flmul@prod& (0+255),f,b
 11482  006A40  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11483  006A42  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11484  006A44  0E00               	movlw	0
 11485  006A46  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11486  006A48  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11487  006A4A  5174               	movf	(___flmul@a+2)& (0+255),w,b
 11488  006A4C  0370               	mulwf	(___flmul@b+2)& (0+255),b
 11489  006A4E  CFF3 F085          	movff	prodl,___flmul@temp
 11490  006A52  CFF4 F086          	movff	prodh,___flmul@temp+1
 11491                           
 11492                           ; BSR set to: 0
 11493  006A56  5185               	movf	___flmul@temp& (0+255),w,b
 11494  006A58  6F76               	movwf	??___flmul& (0+255),b
 11495  006A5A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11496  006A5C  6F77               	movwf	(??___flmul+1)& (0+255),b
 11497  006A5E  6B78               	clrf	(??___flmul+2)& (0+255),b
 11498  006A60  6B79               	clrf	(??___flmul+3)& (0+255),b
 11499  006A62  C078  F079         	movff	??___flmul+2,??___flmul+3
 11500  006A66  C077  F078         	movff	??___flmul+1,??___flmul+2
 11501  006A6A  C076  F077         	movff	??___flmul,??___flmul+1
 11502  006A6E  6B76               	clrf	??___flmul& (0+255),b
 11503  006A70  5176               	movf	??___flmul& (0+255),w,b
 11504  006A72  2781               	addwf	___flmul@prod& (0+255),f,b
 11505  006A74  5177               	movf	(??___flmul+1)& (0+255),w,b
 11506  006A76  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11507  006A78  5178               	movf	(??___flmul+2)& (0+255),w,b
 11508  006A7A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11509  006A7C  5179               	movf	(??___flmul+3)& (0+255),w,b
 11510  006A7E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11511                           
 11512                           ; BSR set to: 0
 11513  006A80  5180               	movf	(___flmul@grs+3)& (0+255),w,b
 11514  006A82  2781               	addwf	___flmul@prod& (0+255),f,b
 11515  006A84  0E00               	movlw	0
 11516  006A86  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11517  006A88  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11518  006A8A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11519                           
 11520                           ; BSR set to: 0
 11521  006A8C  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 11522  006A90  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 11523  006A94  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 11524  006A98  6B7D               	clrf	___flmul@grs& (0+255),b
 11525                           
 11526                           ; BSR set to: 0
 11527  006A9A  517B               	movf	___flmul@aexp& (0+255),w,b
 11528  006A9C  C07C  F076         	movff	___flmul@bexp,??___flmul
 11529  006AA0  6B77               	clrf	(??___flmul+1)& (0+255),b
 11530  006AA2  2776               	addwf	??___flmul& (0+255),f,b
 11531  006AA4  0E00               	movlw	0
 11532  006AA6  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 11533  006AA8  0E82               	movlw	130
 11534  006AAA  2576               	addwf	??___flmul& (0+255),w,b
 11535  006AAC  6F85               	movwf	___flmul@temp& (0+255),b
 11536  006AAE  0EFF               	movlw	255
 11537  006AB0  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 11538  006AB2  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 11539  006AB4  D00F               	goto	l10411
 11540  006AB6                     l10405:
 11541                           
 11542                           ; BSR set to: 0
 11543  006AB6  90D8               	bcf	status,0,c
 11544  006AB8  3781               	rlcf	___flmul@prod& (0+255),f,b
 11545  006ABA  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 11546  006ABC  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 11547  006ABE  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 11548                           
 11549                           ; BSR set to: 0
 11550  006AC0  BF80               	btfsc	(___flmul@grs+3)& (0+255),7,b
 11551                           
 11552                           ; BSR set to: 0
 11553  006AC2  8181               	bsf	___flmul@prod& (0+255),0,b
 11554                           
 11555                           ; BSR set to: 0
 11556  006AC4  90D8               	bcf	status,0,c
 11557  006AC6  377D               	rlcf	___flmul@grs& (0+255),f,b
 11558  006AC8  377E               	rlcf	(___flmul@grs+1)& (0+255),f,b
 11559  006ACA  377F               	rlcf	(___flmul@grs+2)& (0+255),f,b
 11560  006ACC  3780               	rlcf	(___flmul@grs+3)& (0+255),f,b
 11561  006ACE  0785               	decf	___flmul@temp& (0+255),f,b
 11562  006AD0  A0D8               	btfss	status,0,c
 11563  006AD2  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 11564  006AD4                     l10411:
 11565                           
 11566                           ; BSR set to: 0
 11567  006AD4  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 11568  006AD6  D7EF               	goto	l10405
 11569                           
 11570                           ; BSR set to: 0
 11571  006AD8  6B7B               	clrf	___flmul@aexp& (0+255),b
 11572  006ADA  AF80               	btfss	(___flmul@grs+3)& (0+255),7,b
 11573  006ADC  D013               	goto	l2441
 11574                           
 11575                           ; BSR set to: 0
 11576  006ADE  517D               	movf	___flmul@grs& (0+255),w,b
 11577  006AE0  6F76               	movwf	??___flmul& (0+255),b
 11578  006AE2  517E               	movf	(___flmul@grs+1)& (0+255),w,b
 11579  006AE4  6F77               	movwf	(??___flmul+1)& (0+255),b
 11580  006AE6  517F               	movf	(___flmul@grs+2)& (0+255),w,b
 11581  006AE8  6F78               	movwf	(??___flmul+2)& (0+255),b
 11582  006AEA  0E7F               	movlw	127
 11583  006AEC  1580               	andwf	(___flmul@grs+3)& (0+255),w,b
 11584  006AEE  6F79               	movwf	(??___flmul+3)& (0+255),b
 11585  006AF0  5176               	movf	??___flmul& (0+255),w,b
 11586  006AF2  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 11587  006AF4  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 11588  006AF6  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 11589  006AF8  E003               	bz	l2442
 11590  006AFA                     l10415:
 11591                           
 11592                           ; BSR set to: 0
 11593  006AFA  0E01               	movlw	1
 11594  006AFC  6F7B               	movwf	___flmul@aexp& (0+255),b
 11595  006AFE  D002               	goto	l2441
 11596  006B00                     l2442:
 11597                           
 11598                           ; BSR set to: 0
 11599  006B00  B181               	btfsc	___flmul@prod& (0+255),0,b
 11600  006B02  D7FB               	goto	l10415
 11601  006B04                     l2441:
 11602                           
 11603                           ; BSR set to: 0
 11604  006B04  517B               	movf	___flmul@aexp& (0+255),w,b
 11605  006B06  E00E               	bz	l10427
 11606                           
 11607                           ; BSR set to: 0
 11608  006B08  2B81               	incf	___flmul@prod& (0+255),f,b
 11609  006B0A  0E00               	movlw	0
 11610  006B0C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11611  006B0E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11612  006B10  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11613                           
 11614                           ; BSR set to: 0
 11615  006B12  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 11616  006B14  D007               	goto	l10427
 11617                           
 11618                           ; BSR set to: 0
 11619  006B16  3584               	rlcf	(___flmul@prod+3)& (0+255),w,b
 11620  006B18  3384               	rrcf	(___flmul@prod+3)& (0+255),f,b
 11621  006B1A  3383               	rrcf	(___flmul@prod+2)& (0+255),f,b
 11622  006B1C  3382               	rrcf	(___flmul@prod+1)& (0+255),f,b
 11623  006B1E  3381               	rrcf	___flmul@prod& (0+255),f,b
 11624                           
 11625                           ; BSR set to: 0
 11626  006B20  4B85               	infsnz	___flmul@temp& (0+255),f,b
 11627  006B22  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 11628  006B24                     l10427:
 11629                           
 11630                           ; BSR set to: 0
 11631  006B24  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11632  006B26  D00A               	goto	l10431
 11633  006B28  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11634  006B2A  E102               	bnz	u9460
 11635  006B2C  2985               	incf	___flmul@temp& (0+255),w,b
 11636  006B2E  E306               	bnc	l10431
 11637  006B30                     u9460:
 11638                           
 11639                           ; BSR set to: 0
 11640  006B30  6B81               	clrf	___flmul@prod& (0+255),b
 11641  006B32  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 11642  006B34  0E80               	movlw	128
 11643  006B36  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 11644  006B38  0E7F               	movlw	127
 11645  006B3A  D015               	goto	L17
 11646  006B3C                     l10431:
 11647                           
 11648                           ; BSR set to: 0
 11649  006B3C  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11650  006B3E  D004               	goto	l10433
 11651  006B40  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11652  006B42  E108               	bnz	l2449
 11653  006B44  0585               	decf	___flmul@temp& (0+255),w,b
 11654  006B46  E206               	bc	l2449
 11655  006B48                     l10433:
 11656                           
 11657                           ; BSR set to: 0
 11658  006B48  6B81               	clrf	___flmul@prod& (0+255),b
 11659  006B4A  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 11660  006B4C  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 11661  006B4E  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 11662  006B50  6B7A               	clrf	___flmul@sign& (0+255),b
 11663  006B52  D00A               	goto	l10443
 11664  006B54                     l2449:
 11665                           
 11666                           ; BSR set to: 0
 11667  006B54  C085  F07C         	movff	___flmul@temp,___flmul@bexp
 11668                           
 11669                           ; BSR set to: 0
 11670  006B58  0E7F               	movlw	127
 11671  006B5A  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 11672  006B5C  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 11673                           
 11674                           ; BSR set to: 0
 11675  006B5E  B17C               	btfsc	___flmul@bexp& (0+255),0,b
 11676                           
 11677                           ; BSR set to: 0
 11678  006B60  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 11679                           
 11680                           ; BSR set to: 0
 11681  006B62  90D8               	bcf	status,0,c
 11682  006B64  317C               	rrcf	___flmul@bexp& (0+255),w,b
 11683  006B66                     L17:
 11684  006B66  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 11685  006B68                     l10443:
 11686                           
 11687                           ; BSR set to: 0
 11688  006B68  517A               	movf	___flmul@sign& (0+255),w,b
 11689  006B6A  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 11690                           
 11691                           ; BSR set to: 0
 11692  006B6C  C081  F06E         	movff	___flmul@prod,?___flmul
 11693  006B70  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 11694  006B74  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 11695  006B78  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 11696                           
 11697                           ; BSR set to: 0
 11698  006B7C  0012               	return		;funcret
 11699  006B7E                     __end_of___flmul:
 11700                           	opt stack 0
 11701                           tblptru	equ	0xFF8
 11702                           tblptrh	equ	0xFF7
 11703                           tblptrl	equ	0xFF6
 11704                           tablat	equ	0xFF5
 11705                           prodh	equ	0xFF4
 11706                           prodl	equ	0xFF3
 11707                           intcon	equ	0xFF2
 11708                           postinc0	equ	0xFEE
 11709                           wreg	equ	0xFE8
 11710                           indf1	equ	0xFE7
 11711                           fsr1h	equ	0xFE2
 11712                           fsr1l	equ	0xFE1
 11713                           indf2	equ	0xFDF
 11714                           postinc2	equ	0xFDE
 11715                           postdec2	equ	0xFDD
 11716                           fsr2h	equ	0xFDA
 11717                           fsr2l	equ	0xFD9
 11718                           status	equ	0xFD8
 11719                           
 11720 ;; *************** function ___fldiv *****************
 11721 ;; Defined at:
 11722 ;;		line 11 in file "/opt/microchip/xc8/v1.36/sources/common/sprcdiv.c"
 11723 ;; Parameters:    Size  Location     Type
 11724 ;;  b               4   39[BANK0 ] unsigned char 
 11725 ;;  a               4   43[BANK0 ] unsigned char 
 11726 ;; Auto vars:     Size  Location     Type
 11727 ;;  grs             4   58[BANK0 ] unsigned long 
 11728 ;;  rem             4   52[BANK0 ] unsigned long 
 11729 ;;  new_exp         2   56[BANK0 ] int 
 11730 ;;  aexp            1   63[BANK0 ] unsigned char 
 11731 ;;  bexp            1   62[BANK0 ] unsigned char 
 11732 ;;  sign            1   51[BANK0 ] unsigned char 
 11733 ;; Return value:  Size  Location     Type
 11734 ;;                  4   39[BANK0 ] unsigned char 
 11735 ;; Registers used:
 11736 ;;		wreg, status,2, status,0
 11737 ;; Tracked objects:
 11738 ;;		On entry : F/0
 11739 ;;		On exit  : F/0
 11740 ;;		Unchanged: 0/0
 11741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11742 ;;      Params:         0       8       0       0       0       0       0       0       0
 11743 ;;      Locals:         0      13       0       0       0       0       0       0       0
 11744 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11745 ;;      Totals:         0      25       0       0       0       0       0       0       0
 11746 ;;Total ram usage:       25 bytes
 11747 ;; Hardware stack levels used:    1
 11748 ;; Hardware stack levels required when called:   11
 11749 ;; This function calls:
 11750 ;;		Nothing
 11751 ;; This function is called by:
 11752 ;;		_moteJoiningProcess
 11753 ;; This function uses a non-reentrant model
 11754 ;;
 11755                           
 11756                           	psect	text40
 11757  0064C8                     __ptext40:
 11758                           	opt stack 0
 11759  0064C8                     ___fldiv:
 11760                           	opt stack 17
 11761                           
 11762                           ; BSR set to: 0
 11763                           
 11764                           ; BSR set to: 0
 11765                           ;incstack = 0
 11766  0064C8  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 11767  0064CA  0B80               	andlw	128
 11768  0064CC  6F93               	movwf	___fldiv@sign& (0+255),b
 11769  0064CE  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 11770  0064D0  258A               	addwf	(___fldiv@b+3)& (0+255),w,b
 11771  0064D2  6F9E               	movwf	___fldiv@bexp& (0+255),b
 11772                           
 11773                           ; BSR set to: 0
 11774  0064D4  BF89               	btfsc	(___fldiv@b+2)& (0+255),7,b
 11775                           
 11776                           ; BSR set to: 0
 11777  0064D6  819E               	bsf	___fldiv@bexp& (0+255),0,b
 11778                           
 11779                           ; BSR set to: 0
 11780  0064D8  519E               	movf	___fldiv@bexp& (0+255),w,b
 11781  0064DA  E008               	bz	l2392
 11782                           
 11783                           ; BSR set to: 0
 11784  0064DC  299E               	incf	___fldiv@bexp& (0+255),w,b
 11785  0064DE  E104               	bnz	l10223
 11786                           
 11787                           ; BSR set to: 0
 11788  0064E0  6B87               	clrf	___fldiv@b& (0+255),b
 11789  0064E2  6B88               	clrf	(___fldiv@b+1)& (0+255),b
 11790  0064E4  6B89               	clrf	(___fldiv@b+2)& (0+255),b
 11791  0064E6  6B8A               	clrf	(___fldiv@b+3)& (0+255),b
 11792  0064E8                     l10223:
 11793                           
 11794                           ; BSR set to: 0
 11795  0064E8  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 11796  0064EA  D003               	goto	L18
 11797  0064EC                     l2392:
 11798                           
 11799                           ; BSR set to: 0
 11800  0064EC  6B87               	clrf	___fldiv@b& (0+255),b
 11801  0064EE  6B88               	clrf	(___fldiv@b+1)& (0+255),b
 11802  0064F0  6B89               	clrf	(___fldiv@b+2)& (0+255),b
 11803  0064F2                     L18:
 11804  0064F2  6B8A               	clrf	(___fldiv@b+3)& (0+255),b
 11805                           
 11806                           ; BSR set to: 0
 11807  0064F4  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 11808  0064F6  0B80               	andlw	128
 11809  0064F8  1B93               	xorwf	___fldiv@sign& (0+255),f,b
 11810  0064FA  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 11811  0064FC  258E               	addwf	(___fldiv@a+3)& (0+255),w,b
 11812  0064FE  6F9F               	movwf	___fldiv@aexp& (0+255),b
 11813                           
 11814                           ; BSR set to: 0
 11815  006500  BF8D               	btfsc	(___fldiv@a+2)& (0+255),7,b
 11816                           
 11817                           ; BSR set to: 0
 11818  006502  819F               	bsf	___fldiv@aexp& (0+255),0,b
 11819                           
 11820                           ; BSR set to: 0
 11821  006504  519F               	movf	___fldiv@aexp& (0+255),w,b
 11822  006506  E008               	bz	l2396
 11823                           
 11824                           ; BSR set to: 0
 11825  006508  299F               	incf	___fldiv@aexp& (0+255),w,b
 11826  00650A  E104               	bnz	l10239
 11827                           
 11828                           ; BSR set to: 0
 11829  00650C  6B8B               	clrf	___fldiv@a& (0+255),b
 11830  00650E  6B8C               	clrf	(___fldiv@a+1)& (0+255),b
 11831  006510  6B8D               	clrf	(___fldiv@a+2)& (0+255),b
 11832  006512  6B8E               	clrf	(___fldiv@a+3)& (0+255),b
 11833  006514                     l10239:
 11834                           
 11835                           ; BSR set to: 0
 11836  006514  8F8D               	bsf	(___fldiv@a+2)& (0+255),7,b
 11837  006516  D003               	goto	L19
 11838  006518                     l2396:
 11839                           
 11840                           ; BSR set to: 0
 11841  006518  6B8B               	clrf	___fldiv@a& (0+255),b
 11842  00651A  6B8C               	clrf	(___fldiv@a+1)& (0+255),b
 11843  00651C  6B8D               	clrf	(___fldiv@a+2)& (0+255),b
 11844  00651E                     L19:
 11845  00651E  6B8E               	clrf	(___fldiv@a+3)& (0+255),b
 11846                           
 11847                           ; BSR set to: 0
 11848  006520  518B               	movf	___fldiv@a& (0+255),w,b
 11849  006522  118C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 11850  006524  118D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 11851  006526  118E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 11852  006528  E111               	bnz	l10253
 11853                           
 11854                           ; BSR set to: 0
 11855  00652A  6B87               	clrf	___fldiv@b& (0+255),b
 11856  00652C  6B88               	clrf	(___fldiv@b+1)& (0+255),b
 11857  00652E  6B89               	clrf	(___fldiv@b+2)& (0+255),b
 11858  006530  6B8A               	clrf	(___fldiv@b+3)& (0+255),b
 11859                           
 11860                           ; BSR set to: 0
 11861  006532  0E80               	movlw	128
 11862  006534  1389               	iorwf	(___fldiv@b+2)& (0+255),f,b
 11863  006536  0E7F               	movlw	127
 11864  006538  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11865                           
 11866                           ; BSR set to: 0
 11867  00653A  C087  F087         	movff	___fldiv@b,?___fldiv
 11868  00653E  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 11869  006542  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 11870  006546  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 11871  00654A  0012               	return	
 11872  00654C                     l10253:
 11873                           
 11874                           ; BSR set to: 0
 11875  00654C  519E               	movf	___fldiv@bexp& (0+255),w,b
 11876  00654E  E105               	bnz	l10257
 11877                           
 11878                           ; BSR set to: 0
 11879  006550  6B87               	clrf	?___fldiv& (0+255),b
 11880  006552  6B88               	clrf	(?___fldiv+1)& (0+255),b
 11881  006554  6B89               	clrf	(?___fldiv+2)& (0+255),b
 11882  006556  6B8A               	clrf	(?___fldiv+3)& (0+255),b
 11883  006558  0012               	return	
 11884  00655A                     l10257:
 11885                           
 11886                           ; BSR set to: 0
 11887  00655A  519F               	movf	___fldiv@aexp& (0+255),w,b
 11888  00655C  C09E  F08F         	movff	___fldiv@bexp,??___fldiv
 11889  006560  6B90               	clrf	(??___fldiv+1)& (0+255),b
 11890  006562  5F8F               	subwf	??___fldiv& (0+255),f,b
 11891  006564  0E00               	movlw	0
 11892  006566  5B90               	subwfb	(??___fldiv+1)& (0+255),f,b
 11893  006568  0E7F               	movlw	127
 11894  00656A  258F               	addwf	??___fldiv& (0+255),w,b
 11895  00656C  6F98               	movwf	___fldiv@new_exp& (0+255),b
 11896  00656E  0E00               	movlw	0
 11897  006570  2190               	addwfc	(??___fldiv+1)& (0+255),w,b
 11898  006572  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11899                           
 11900                           ; BSR set to: 0
 11901  006574  C087  F094         	movff	___fldiv@b,___fldiv@rem
 11902  006578  C088  F095         	movff	___fldiv@b+1,___fldiv@rem+1
 11903  00657C  C089  F096         	movff	___fldiv@b+2,___fldiv@rem+2
 11904  006580  C08A  F097         	movff	___fldiv@b+3,___fldiv@rem+3
 11905                           
 11906                           ; BSR set to: 0
 11907  006584  6B87               	clrf	___fldiv@b& (0+255),b
 11908  006586  6B88               	clrf	(___fldiv@b+1)& (0+255),b
 11909  006588  6B89               	clrf	(___fldiv@b+2)& (0+255),b
 11910  00658A  6B8A               	clrf	(___fldiv@b+3)& (0+255),b
 11911                           
 11912                           ; BSR set to: 0
 11913  00658C  6B9A               	clrf	___fldiv@grs& (0+255),b
 11914  00658E  6B9B               	clrf	(___fldiv@grs+1)& (0+255),b
 11915  006590  6B9C               	clrf	(___fldiv@grs+2)& (0+255),b
 11916  006592  6B9D               	clrf	(___fldiv@grs+3)& (0+255),b
 11917                           
 11918                           ; BSR set to: 0
 11919  006594  6B9F               	clrf	___fldiv@aexp& (0+255),b
 11920  006596  D026               	goto	l2402
 11921  006598                     l10267:
 11922                           
 11923                           ; BSR set to: 0
 11924  006598  519F               	movf	___fldiv@aexp& (0+255),w,b
 11925  00659A  E011               	bz	l10275
 11926                           
 11927                           ; BSR set to: 0
 11928  00659C  90D8               	bcf	status,0,c
 11929  00659E  3794               	rlcf	___fldiv@rem& (0+255),f,b
 11930  0065A0  3795               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11931  0065A2  3796               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11932  0065A4  3797               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11933  0065A6  90D8               	bcf	status,0,c
 11934  0065A8  3787               	rlcf	___fldiv@b& (0+255),f,b
 11935  0065AA  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11936  0065AC  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11937  0065AE  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11938                           
 11939                           ; BSR set to: 0
 11940  0065B0  BF9D               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 11941                           
 11942                           ; BSR set to: 0
 11943  0065B2  8187               	bsf	___fldiv@b& (0+255),0,b
 11944                           
 11945                           ; BSR set to: 0
 11946  0065B4  90D8               	bcf	status,0,c
 11947  0065B6  379A               	rlcf	___fldiv@grs& (0+255),f,b
 11948  0065B8  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11949  0065BA  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11950  0065BC  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11951  0065BE                     l10275:
 11952                           
 11953                           ; BSR set to: 0
 11954  0065BE  518B               	movf	___fldiv@a& (0+255),w,b
 11955  0065C0  5D94               	subwf	___fldiv@rem& (0+255),w,b
 11956  0065C2  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 11957  0065C4  5995               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 11958  0065C6  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 11959  0065C8  5996               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 11960  0065CA  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 11961  0065CC  5997               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 11962  0065CE  E309               	bnc	l10281
 11963                           
 11964                           ; BSR set to: 0
 11965  0065D0  8D9D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 11966                           
 11967                           ; BSR set to: 0
 11968  0065D2  518B               	movf	___fldiv@a& (0+255),w,b
 11969  0065D4  5F94               	subwf	___fldiv@rem& (0+255),f,b
 11970  0065D6  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 11971  0065D8  5B95               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 11972  0065DA  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 11973  0065DC  5B96               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 11974  0065DE  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 11975  0065E0  5B97               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 11976  0065E2                     l10281:
 11977                           
 11978                           ; BSR set to: 0
 11979  0065E2  2B9F               	incf	___fldiv@aexp& (0+255),f,b
 11980  0065E4                     l2402:
 11981                           
 11982                           ; BSR set to: 0
 11983  0065E4  0E19               	movlw	25
 11984  0065E6  659F               	cpfsgt	___fldiv@aexp& (0+255),b
 11985  0065E8  D7D7               	goto	l10267
 11986                           
 11987                           ; BSR set to: 0
 11988  0065EA  5194               	movf	___fldiv@rem& (0+255),w,b
 11989  0065EC  1195               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 11990  0065EE  1196               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 11991  0065F0  1197               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 11992  0065F2  E011               	bz	l10293
 11993                           
 11994                           ; BSR set to: 0
 11995  0065F4  819A               	bsf	___fldiv@grs& (0+255),0,b
 11996  0065F6  D00F               	goto	l10293
 11997  0065F8                     l10287:
 11998                           
 11999                           ; BSR set to: 0
 12000  0065F8  90D8               	bcf	status,0,c
 12001  0065FA  3787               	rlcf	___fldiv@b& (0+255),f,b
 12002  0065FC  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12003  0065FE  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12004  006600  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12005                           
 12006                           ; BSR set to: 0
 12007  006602  BF9D               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 12008                           
 12009                           ; BSR set to: 0
 12010  006604  8187               	bsf	___fldiv@b& (0+255),0,b
 12011                           
 12012                           ; BSR set to: 0
 12013  006606  90D8               	bcf	status,0,c
 12014  006608  379A               	rlcf	___fldiv@grs& (0+255),f,b
 12015  00660A  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12016  00660C  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12017  00660E  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12018  006610  0798               	decf	___fldiv@new_exp& (0+255),f,b
 12019  006612  A0D8               	btfss	status,0,c
 12020  006614  0799               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 12021  006616                     l10293:
 12022                           
 12023                           ; BSR set to: 0
 12024  006616  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 12025  006618  D7EF               	goto	l10287
 12026                           
 12027                           ; BSR set to: 0
 12028  00661A  6B9F               	clrf	___fldiv@aexp& (0+255),b
 12029  00661C  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12030  00661E  D013               	goto	l2413
 12031                           
 12032                           ; BSR set to: 0
 12033  006620  519A               	movf	___fldiv@grs& (0+255),w,b
 12034  006622  6F8F               	movwf	??___fldiv& (0+255),b
 12035  006624  519B               	movf	(___fldiv@grs+1)& (0+255),w,b
 12036  006626  6F90               	movwf	(??___fldiv+1)& (0+255),b
 12037  006628  519C               	movf	(___fldiv@grs+2)& (0+255),w,b
 12038  00662A  6F91               	movwf	(??___fldiv+2)& (0+255),b
 12039  00662C  0E7F               	movlw	127
 12040  00662E  159D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12041  006630  6F92               	movwf	(??___fldiv+3)& (0+255),b
 12042  006632  518F               	movf	??___fldiv& (0+255),w,b
 12043  006634  1190               	iorwf	(??___fldiv+1)& (0+255),w,b
 12044  006636  1191               	iorwf	(??___fldiv+2)& (0+255),w,b
 12045  006638  1192               	iorwf	(??___fldiv+3)& (0+255),w,b
 12046  00663A  E003               	bz	l2414
 12047  00663C                     l10297:
 12048                           
 12049                           ; BSR set to: 0
 12050  00663C  0E01               	movlw	1
 12051  00663E  6F9F               	movwf	___fldiv@aexp& (0+255),b
 12052  006640  D002               	goto	l2413
 12053  006642                     l2414:
 12054                           
 12055                           ; BSR set to: 0
 12056  006642  B187               	btfsc	___fldiv@b& (0+255),0,b
 12057  006644  D7FB               	goto	l10297
 12058  006646                     l2413:
 12059                           
 12060                           ; BSR set to: 0
 12061  006646  519F               	movf	___fldiv@aexp& (0+255),w,b
 12062  006648  E00E               	bz	l10309
 12063                           
 12064                           ; BSR set to: 0
 12065  00664A  2B87               	incf	___fldiv@b& (0+255),f,b
 12066  00664C  0E00               	movlw	0
 12067  00664E  2388               	addwfc	(___fldiv@b+1)& (0+255),f,b
 12068  006650  2389               	addwfc	(___fldiv@b+2)& (0+255),f,b
 12069  006652  238A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 12070                           
 12071                           ; BSR set to: 0
 12072  006654  A18A               	btfss	(___fldiv@b+3)& (0+255),0,b
 12073  006656  D007               	goto	l10309
 12074                           
 12075                           ; BSR set to: 0
 12076  006658  358A               	rlcf	(___fldiv@b+3)& (0+255),w,b
 12077  00665A  338A               	rrcf	(___fldiv@b+3)& (0+255),f,b
 12078  00665C  3389               	rrcf	(___fldiv@b+2)& (0+255),f,b
 12079  00665E  3388               	rrcf	(___fldiv@b+1)& (0+255),f,b
 12080  006660  3387               	rrcf	___fldiv@b& (0+255),f,b
 12081                           
 12082                           ; BSR set to: 0
 12083  006662  4B98               	infsnz	___fldiv@new_exp& (0+255),f,b
 12084  006664  2B99               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12085  006666                     l10309:
 12086                           
 12087                           ; BSR set to: 0
 12088  006666  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12089  006668  D00A               	goto	l10315
 12090  00666A  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12091  00666C  E102               	bnz	u9280
 12092  00666E  2998               	incf	___fldiv@new_exp& (0+255),w,b
 12093  006670  E306               	bnc	l10315
 12094  006672                     u9280:
 12095                           
 12096                           ; BSR set to: 0
 12097  006672  6B99               	clrf	(___fldiv@new_exp+1)& (0+255),b
 12098  006674  6998               	setf	___fldiv@new_exp& (0+255),b
 12099                           
 12100                           ; BSR set to: 0
 12101  006676  6B87               	clrf	___fldiv@b& (0+255),b
 12102  006678  6B88               	clrf	(___fldiv@b+1)& (0+255),b
 12103  00667A  6B89               	clrf	(___fldiv@b+2)& (0+255),b
 12104  00667C  6B8A               	clrf	(___fldiv@b+3)& (0+255),b
 12105  00667E                     l10315:
 12106                           
 12107                           ; BSR set to: 0
 12108  00667E  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12109  006680  D004               	goto	l10317
 12110  006682  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12111  006684  E109               	bnz	l2420
 12112  006686  0598               	decf	___fldiv@new_exp& (0+255),w,b
 12113  006688  E207               	bc	l2420
 12114  00668A                     l10317:
 12115                           
 12116                           ; BSR set to: 0
 12117  00668A  6B98               	clrf	___fldiv@new_exp& (0+255),b
 12118  00668C  6B99               	clrf	(___fldiv@new_exp+1)& (0+255),b
 12119  00668E  6B87               	clrf	___fldiv@b& (0+255),b
 12120  006690  6B88               	clrf	(___fldiv@b+1)& (0+255),b
 12121  006692  6B89               	clrf	(___fldiv@b+2)& (0+255),b
 12122  006694  6B8A               	clrf	(___fldiv@b+3)& (0+255),b
 12123  006696  6B93               	clrf	___fldiv@sign& (0+255),b
 12124  006698                     l2420:
 12125                           
 12126                           ; BSR set to: 0
 12127  006698  C098  F09E         	movff	___fldiv@new_exp,___fldiv@bexp
 12128  00669C  A19E               	btfss	___fldiv@bexp& (0+255),0,b
 12129  00669E  D002               	goto	l10321
 12130                           
 12131                           ; BSR set to: 0
 12132  0066A0  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 12133  0066A2  D001               	goto	l10323
 12134  0066A4                     l10321:
 12135                           
 12136                           ; BSR set to: 0
 12137  0066A4  9F89               	bcf	(___fldiv@b+2)& (0+255),7,b
 12138  0066A6                     l10323:
 12139                           
 12140                           ; BSR set to: 0
 12141  0066A6  90D8               	bcf	status,0,c
 12142  0066A8  319E               	rrcf	___fldiv@bexp& (0+255),w,b
 12143  0066AA  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 12144                           
 12145                           ; BSR set to: 0
 12146  0066AC  5193               	movf	___fldiv@sign& (0+255),w,b
 12147  0066AE  D744               	goto	L20
 12148  0066B0                     __end_of___fldiv:
 12149                           	opt stack 0
 12150                           tblptru	equ	0xFF8
 12151                           tblptrh	equ	0xFF7
 12152                           tblptrl	equ	0xFF6
 12153                           tablat	equ	0xFF5
 12154                           prodh	equ	0xFF4
 12155                           prodl	equ	0xFF3
 12156                           intcon	equ	0xFF2
 12157                           postinc0	equ	0xFEE
 12158                           wreg	equ	0xFE8
 12159                           indf1	equ	0xFE7
 12160                           fsr1h	equ	0xFE2
 12161                           fsr1l	equ	0xFE1
 12162                           indf2	equ	0xFDF
 12163                           postinc2	equ	0xFDE
 12164                           postdec2	equ	0xFDD
 12165                           fsr2h	equ	0xFDA
 12166                           fsr2l	equ	0xFD9
 12167                           status	equ	0xFD8
 12168                           
 12169 ;; *************** function _DATAEE_WriteByte *****************
 12170 ;; Defined at:
 12171 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 12172 ;; Parameters:    Size  Location     Type
 12173 ;;  bAdd            1    wreg     unsigned char 
 12174 ;;  bData           1    0[BANK0 ] unsigned char 
 12175 ;; Auto vars:     Size  Location     Type
 12176 ;;  bAdd            1    1[BANK0 ] unsigned char 
 12177 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  1    wreg      void 
 12180 ;; Registers used:
 12181 ;;		wreg, status,2
 12182 ;; Tracked objects:
 12183 ;;		On entry : F/0
 12184 ;;		On exit  : 0/0
 12185 ;;		Unchanged: 0/0
 12186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12187 ;;      Params:         0       1       0       0       0       0       0       0       0
 12188 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12189 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12190 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12191 ;;Total ram usage:        3 bytes
 12192 ;; Hardware stack levels used:    1
 12193 ;; Hardware stack levels required when called:   11
 12194 ;; This function calls:
 12195 ;;		Nothing
 12196 ;; This function is called by:
 12197 ;;		_moteJoiningProcess
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           
 12201                           	psect	text41
 12202  004108                     __ptext41:
 12203                           	opt stack 0
 12204  004108                     _DATAEE_WriteByte:
 12205                           	opt stack 17
 12206                           
 12207                           ; BSR set to: 0
 12208                           ;incstack = 0
 12209                           ;DATAEE_WriteByte@bAdd stored from wreg
 12210  004108  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 12211                           
 12212                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 12213  00410A  0E00               	movlw	0
 12214  00410C  BEF2               	btfsc	intcon,7,c	;volatile
 12215  00410E  0E01               	movlw	1
 12216  004110  0100               	movlb	0	; () banked
 12217  004112  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 12221  004114  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 12222                           
 12223                           ; BSR set to: 0
 12224                           ;memory.c: 171: EEDATA = bData;
 12225  004118  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 12229  00411C  9EA6               	bcf	4006,7,c	;volatile
 12230                           
 12231                           ; BSR set to: 0
 12232                           ;memory.c: 173: EECON1bits.CFGS = 0;
 12233  00411E  9CA6               	bcf	4006,6,c	;volatile
 12234                           
 12235                           ; BSR set to: 0
 12236                           ;memory.c: 174: EECON1bits.WREN = 1;
 12237  004120  84A6               	bsf	4006,2,c	;volatile
 12238                           
 12239                           ; BSR set to: 0
 12240                           ;memory.c: 175: INTCONbits.GIE = 0;
 12241  004122  9EF2               	bcf	intcon,7,c	;volatile
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;memory.c: 176: EECON2 = 0x55;
 12245  004124  0E55               	movlw	85
 12246  004126  6EA7               	movwf	4007,c	;volatile
 12247                           
 12248                           ; BSR set to: 0
 12249                           ;memory.c: 177: EECON2 = 0xAA;
 12250  004128  0EAA               	movlw	170
 12251  00412A  6EA7               	movwf	4007,c	;volatile
 12252                           
 12253                           ; BSR set to: 0
 12254                           ;memory.c: 178: EECON1bits.WR = 1;
 12255  00412C  82A6               	bsf	4006,1,c	;volatile
 12256  00412E                     l1229:
 12257  00412E  B2A6               	btfsc	4006,1,c	;volatile
 12258  004130  D7FE               	goto	l1229
 12259                           
 12260                           ;memory.c: 182: }
 12261                           ;memory.c: 184: EECON1bits.WREN = 0;
 12262  004132  94A6               	bcf	4006,2,c	;volatile
 12263                           
 12264                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 12265  004134  0100               	movlb	0	; () banked
 12266  004136  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 12267  004138  D002               	bra	u8805
 12268  00413A  9EF2               	bcf	intcon,7,c	;volatile
 12269  00413C  D001               	bra	u8806
 12270  00413E                     u8805:
 12271  00413E  8EF2               	bsf	intcon,7,c	;volatile
 12272  004140                     u8806:
 12273  004140  0012               	return		;funcret
 12274  004142                     __end_of_DATAEE_WriteByte:
 12275                           	opt stack 0
 12276                           tblptru	equ	0xFF8
 12277                           tblptrh	equ	0xFF7
 12278                           tblptrl	equ	0xFF6
 12279                           tablat	equ	0xFF5
 12280                           prodh	equ	0xFF4
 12281                           prodl	equ	0xFF3
 12282                           intcon	equ	0xFF2
 12283                           postinc0	equ	0xFEE
 12284                           wreg	equ	0xFE8
 12285                           indf1	equ	0xFE7
 12286                           fsr1h	equ	0xFE2
 12287                           fsr1l	equ	0xFE1
 12288                           indf2	equ	0xFDF
 12289                           postinc2	equ	0xFDE
 12290                           postdec2	equ	0xFDD
 12291                           fsr2h	equ	0xFDA
 12292                           fsr2l	equ	0xFD9
 12293                           status	equ	0xFD8
 12294                           
 12295 ;; *************** function _ADC_GetConversion *****************
 12296 ;; Defined at:
 12297 ;;		line 113 in file "../Includes/MccGenerated/adc.c"
 12298 ;; Parameters:    Size  Location     Type
 12299 ;;  channel         1    wreg     enum E6179
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;  channel         1    4[BANK0 ] enum E6179
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  2    0[BANK0 ] unsigned int 
 12304 ;; Registers used:
 12305 ;;		wreg, status,2, status,0
 12306 ;; Tracked objects:
 12307 ;;		On entry : C/2
 12308 ;;		On exit  : F/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12311 ;;      Params:         0       2       0       0       0       0       0       0       0
 12312 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12313 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12314 ;;      Totals:         0       5       0       0       0       0       0       0       0
 12315 ;;Total ram usage:        5 bytes
 12316 ;; Hardware stack levels used:    1
 12317 ;; Hardware stack levels required when called:   11
 12318 ;; This function calls:
 12319 ;;		Nothing
 12320 ;; This function is called by:
 12321 ;;		_moteHandler
 12322 ;;		_moteJoiningProcess
 12323 ;;		_moteRunningProcess
 12324 ;; This function uses a non-reentrant model
 12325 ;;
 12326                           
 12327                           	psect	text42
 12328  0040CE                     __ptext42:
 12329                           	opt stack 0
 12330  0040CE                     _ADC_GetConversion:
 12331                           	opt stack 17
 12332                           
 12333                           ;incstack = 0
 12334                           ;ADC_GetConversion@channel stored from wreg
 12335  0040CE  0100               	movlb	0	; () banked
 12336  0040D0  6F64               	movwf	ADC_GetConversion@channel& (0+255),b
 12337                           
 12338                           ;adc.c: 116: ADCON0bits.CHS = channel;
 12339  0040D2  C064  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 12340  0040D6  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 12341  0040D8  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 12342  0040DA  50C2               	movf	4034,w,c	;volatile
 12343  0040DC  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 12344  0040DE  0B83               	andlw	-125
 12345  0040E0  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 12346  0040E2  6EC2               	movwf	4034,c	;volatile
 12347                           
 12348                           ; BSR set to: 0
 12349                           ;adc.c: 119: ADCON0bits.ADON = 1;
 12350  0040E4  80C2               	bsf	4034,0,c	;volatile
 12351                           
 12352                           ; BSR set to: 0
 12353                           ;adc.c: 122: _delay((unsigned long)((5)*(48000000/4000000.0)));
 12354  0040E6  0E14               	movlw	20
 12355  0040E8                     u10727:
 12356  0040E8  2EE8               	decfsz	wreg,f,c
 12357  0040EA  D7FE               	goto	u10727
 12358                           
 12359                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
 12360  0040EC  82C2               	bsf	4034,1,c	;volatile
 12361  0040EE                     l1057:
 12362  0040EE  B2C2               	btfsc	4034,1,c	;volatile
 12363  0040F0  D7FE               	goto	l1057
 12364                           
 12365                           ;adc.c: 130: }
 12366                           ;adc.c: 133: return ((ADRESH << 8) + ADRESL);
 12367  0040F2  50C4               	movf	4036,w,c	;volatile
 12368  0040F4  0100               	movlb	0	; () banked
 12369  0040F6  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 12370  0040F8  6B62               	clrf	??_ADC_GetConversion& (0+255),b
 12371  0040FA  50C3               	movf	4035,w,c	;volatile
 12372  0040FC  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
 12373  0040FE  6F60               	movwf	?_ADC_GetConversion& (0+255),b
 12374  004100  0E00               	movlw	0
 12375  004102  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 12376  004104  6F61               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 12377                           
 12378                           ; BSR set to: 0
 12379  004106  0012               	return		;funcret
 12380  004108                     __end_of_ADC_GetConversion:
 12381                           	opt stack 0
 12382                           tblptru	equ	0xFF8
 12383                           tblptrh	equ	0xFF7
 12384                           tblptrl	equ	0xFF6
 12385                           tablat	equ	0xFF5
 12386                           prodh	equ	0xFF4
 12387                           prodl	equ	0xFF3
 12388                           intcon	equ	0xFF2
 12389                           postinc0	equ	0xFEE
 12390                           wreg	equ	0xFE8
 12391                           indf1	equ	0xFE7
 12392                           fsr1h	equ	0xFE2
 12393                           fsr1l	equ	0xFE1
 12394                           indf2	equ	0xFDF
 12395                           postinc2	equ	0xFDE
 12396                           postdec2	equ	0xFDD
 12397                           fsr2h	equ	0xFDA
 12398                           fsr2l	equ	0xFD9
 12399                           status	equ	0xFD8
 12400                           
 12401 ;; *************** function _TMRapp_Handler *****************
 12402 ;; Defined at:
 12403 ;;		line 22 in file "../Includes/Drivers/TMRapp.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;		None
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;		None
 12408 ;; Return value:  Size  Location     Type
 12409 ;;                  1    wreg      void 
 12410 ;; Registers used:
 12411 ;;		wreg, status,2, status,0, cstack
 12412 ;; Tracked objects:
 12413 ;;		On entry : F/0
 12414 ;;		On exit  : E/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12417 ;;      Params:         0       0       0       0       0       0       0       0       0
 12418 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12419 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12420 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12421 ;;Total ram usage:        0 bytes
 12422 ;; Hardware stack levels used:    1
 12423 ;; Hardware stack levels required when called:   12
 12424 ;; This function calls:
 12425 ;;		___lwmod
 12426 ;; This function is called by:
 12427 ;;		_moteHandler
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           	psect	text43
 12432  0058EA                     __ptext43:
 12433                           	opt stack 0
 12434  0058EA                     _TMRapp_Handler:
 12435                           	opt stack 17
 12436                           
 12437                           ; BSR set to: 0
 12438                           ;TMRapp.c: 25: timerMsTickCount++;
 12439                           
 12440                           ; BSR set to: 0
 12441                           ;incstack = 0
 12442  0058EA  0101               	movlb	1	; () banked
 12443  0058EC  4B3F               	infsnz	_timerMsTickCount& (0+255),f,b
 12444  0058EE  2B40               	incf	(_timerMsTickCount+1)& (0+255),f,b
 12445                           
 12446                           ; BSR set to: 1
 12447                           ;TMRapp.c: 27: if ( (timerMsTickCount % 10) == 0)
 12448  0058F0  C13F  F067         	movff	_timerMsTickCount,___lwmod@dividend
 12449  0058F4  C140  F068         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 12450  0058F8  0100               	movlb	0	; () banked
 12451  0058FA  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
 12452  0058FC  0E0A               	movlw	10
 12453  0058FE  6F69               	movwf	___lwmod@divisor& (0+255),b
 12454  005900  ECDD  F020         	call	___lwmod	;wreg free
 12455  005904  5167               	movf	?___lwmod& (0+255),w,b
 12456  005906  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12457  005908  A4D8               	btfss	status,2,c
 12458  00590A  0012               	return	
 12459                           
 12460                           ; BSR set to: 0
 12461                           ;TMRapp.c: 28: {
 12462                           ;TMRapp.c: 29: appTimer.mSecTenTick = 1;
 12463  00590C  83F5               	bsf	_appTimer& (0+255),1,b
 12464                           
 12465                           ; BSR set to: 0
 12466                           ;TMRapp.c: 30: if ( (timerMsTickCount % 100) == 0)
 12467  00590E  C13F  F067         	movff	_timerMsTickCount,___lwmod@dividend
 12468  005912  C140  F068         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 12469  005916  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
 12470  005918  0E64               	movlw	100
 12471  00591A  6F69               	movwf	___lwmod@divisor& (0+255),b
 12472  00591C  ECDD  F020         	call	___lwmod	;wreg free
 12473  005920  5167               	movf	?___lwmod& (0+255),w,b
 12474  005922  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12475  005924  A4D8               	btfss	status,2,c
 12476  005926  0012               	return	
 12477                           
 12478                           ; BSR set to: 0
 12479                           ;TMRapp.c: 31: {
 12480                           ;TMRapp.c: 32: appTimer.mSecHundredTick = 1;
 12481  005928  85F5               	bsf	_appTimer& (0+255),2,b
 12482                           
 12483                           ; BSR set to: 0
 12484                           ;TMRapp.c: 33: if ( (timerMsTickCount % 1000) == 0)
 12485  00592A  C13F  F067         	movff	_timerMsTickCount,___lwmod@dividend
 12486  00592E  C140  F068         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 12487  005932  0E03               	movlw	3
 12488  005934  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 12489  005936  0EE8               	movlw	232
 12490  005938  6F69               	movwf	___lwmod@divisor& (0+255),b
 12491  00593A  ECDD  F020         	call	___lwmod	;wreg free
 12492  00593E  5167               	movf	?___lwmod& (0+255),w,b
 12493  005940  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12494  005942  A4D8               	btfss	status,2,c
 12495  005944  0012               	return	
 12496                           
 12497                           ; BSR set to: 0
 12498                           ;TMRapp.c: 34: {
 12499                           ;TMRapp.c: 35: appTimer.SecTick = 1;
 12500  005946  87F5               	bsf	_appTimer& (0+255),3,b
 12501                           
 12502                           ; BSR set to: 0
 12503                           ;TMRapp.c: 36: if ( (timerMsTickCount % 60000) == 0)
 12504  005948  C13F  F067         	movff	_timerMsTickCount,___lwmod@dividend
 12505  00594C  C140  F068         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 12506  005950  0EEA               	movlw	234
 12507  005952  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 12508  005954  0E60               	movlw	96
 12509  005956  6F69               	movwf	___lwmod@divisor& (0+255),b
 12510  005958  ECDD  F020         	call	___lwmod	;wreg free
 12511  00595C  5167               	movf	?___lwmod& (0+255),w,b
 12512  00595E  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12513  005960  A4D8               	btfss	status,2,c
 12514  005962  0012               	return	
 12515                           
 12516                           ; BSR set to: 0
 12517                           ;TMRapp.c: 37: {
 12518                           ;TMRapp.c: 38: timerMinTickCount++;
 12519  005964  0101               	movlb	1	; () banked
 12520  005966  4B3D               	infsnz	_timerMinTickCount& (0+255),f,b
 12521  005968  2B3E               	incf	(_timerMinTickCount+1)& (0+255),f,b
 12522                           
 12523                           ; BSR set to: 1
 12524                           ;TMRapp.c: 39: appTimer.MinTick = 1;
 12525  00596A  0100               	movlb	0	; () banked
 12526  00596C  89F5               	bsf	_appTimer& (0+255),4,b
 12527                           
 12528                           ; BSR set to: 0
 12529                           ;TMRapp.c: 40: if ( (timerMinTickCount % 60) == 0)
 12530  00596E  C13D  F067         	movff	_timerMinTickCount,___lwmod@dividend
 12531  005972  C13E  F068         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 12532  005976  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
 12533  005978  0E3C               	movlw	60
 12534  00597A  6F69               	movwf	___lwmod@divisor& (0+255),b
 12535  00597C  ECDD  F020         	call	___lwmod	;wreg free
 12536  005980  5167               	movf	?___lwmod& (0+255),w,b
 12537  005982  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12538  005984  A4D8               	btfss	status,2,c
 12539  005986  0012               	return	
 12540                           
 12541                           ; BSR set to: 0
 12542                           ;TMRapp.c: 41: {
 12543                           ;TMRapp.c: 42: appTimer.HourTick = 1;
 12544  005988  8BF5               	bsf	_appTimer& (0+255),5,b
 12545                           
 12546                           ; BSR set to: 0
 12547                           ;TMRapp.c: 43: if ( (timerMinTickCount % 720) == 0)
 12548  00598A  C13D  F067         	movff	_timerMinTickCount,___lwmod@dividend
 12549  00598E  C13E  F068         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 12550  005992  0E02               	movlw	2
 12551  005994  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 12552  005996  0ED0               	movlw	208
 12553  005998  6F69               	movwf	___lwmod@divisor& (0+255),b
 12554  00599A  ECDD  F020         	call	___lwmod	;wreg free
 12555  00599E  5167               	movf	?___lwmod& (0+255),w,b
 12556  0059A0  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12557  0059A2  A4D8               	btfss	status,2,c
 12558  0059A4  0012               	return	
 12559                           
 12560                           ; BSR set to: 0
 12561                           ;TMRapp.c: 44: {
 12562                           ;TMRapp.c: 45: appTimer.HalfDayTick = 1;
 12563  0059A6  8DF5               	bsf	_appTimer& (0+255),6,b
 12564                           
 12565                           ; BSR set to: 0
 12566                           ;TMRapp.c: 46: if ( (timerMinTickCount % 1440) == 0)
 12567  0059A8  C13D  F067         	movff	_timerMinTickCount,___lwmod@dividend
 12568  0059AC  C13E  F068         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 12569  0059B0  0E05               	movlw	5
 12570  0059B2  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 12571  0059B4  0EA0               	movlw	160
 12572  0059B6  6F69               	movwf	___lwmod@divisor& (0+255),b
 12573  0059B8  ECDD  F020         	call	___lwmod	;wreg free
 12574  0059BC  5167               	movf	?___lwmod& (0+255),w,b
 12575  0059BE  1168               	iorwf	(?___lwmod+1)& (0+255),w,b
 12576  0059C0  A4D8               	btfss	status,2,c
 12577  0059C2  0012               	return	
 12578                           
 12579                           ; BSR set to: 0
 12580                           ;TMRapp.c: 47: {
 12581                           ;TMRapp.c: 48: appTimer.DayTick = 1;
 12582  0059C4  8FF5               	bsf	_appTimer& (0+255),7,b
 12583                           
 12584                           ;TMRapp.c: 50: timerMsTickCount = 0;
 12585  0059C6  0101               	movlb	1	; () banked
 12586  0059C8  6B3F               	clrf	_timerMsTickCount& (0+255),b
 12587  0059CA  6B40               	clrf	(_timerMsTickCount+1)& (0+255),b
 12588                           
 12589                           ;TMRapp.c: 51: timerMinTickCount = 0;
 12590  0059CC  6B3D               	clrf	_timerMinTickCount& (0+255),b
 12591  0059CE  6B3E               	clrf	(_timerMinTickCount+1)& (0+255),b
 12592  0059D0  0012               	return	
 12593  0059D2                     __end_of_TMRapp_Handler:
 12594                           	opt stack 0
 12595                           tblptru	equ	0xFF8
 12596                           tblptrh	equ	0xFF7
 12597                           tblptrl	equ	0xFF6
 12598                           tablat	equ	0xFF5
 12599                           prodh	equ	0xFF4
 12600                           prodl	equ	0xFF3
 12601                           intcon	equ	0xFF2
 12602                           postinc0	equ	0xFEE
 12603                           wreg	equ	0xFE8
 12604                           indf1	equ	0xFE7
 12605                           fsr1h	equ	0xFE2
 12606                           fsr1l	equ	0xFE1
 12607                           indf2	equ	0xFDF
 12608                           postinc2	equ	0xFDE
 12609                           postdec2	equ	0xFDD
 12610                           fsr2h	equ	0xFDA
 12611                           fsr2l	equ	0xFD9
 12612                           status	equ	0xFD8
 12613                           
 12614 ;; *************** function ___lwmod *****************
 12615 ;; Defined at:
 12616 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lwmod.c"
 12617 ;; Parameters:    Size  Location     Type
 12618 ;;  dividend        2    7[BANK0 ] unsigned int 
 12619 ;;  divisor         2    9[BANK0 ] unsigned int 
 12620 ;; Auto vars:     Size  Location     Type
 12621 ;;  counter         1   11[BANK0 ] unsigned char 
 12622 ;; Return value:  Size  Location     Type
 12623 ;;                  2    7[BANK0 ] unsigned int 
 12624 ;; Registers used:
 12625 ;;		wreg, status,2, status,0
 12626 ;; Tracked objects:
 12627 ;;		On entry : F/0
 12628 ;;		On exit  : F/0
 12629 ;;		Unchanged: 0/0
 12630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12631 ;;      Params:         0       4       0       0       0       0       0       0       0
 12632 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12633 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12634 ;;      Totals:         0       5       0       0       0       0       0       0       0
 12635 ;;Total ram usage:        5 bytes
 12636 ;; Hardware stack levels used:    1
 12637 ;; Hardware stack levels required when called:   11
 12638 ;; This function calls:
 12639 ;;		Nothing
 12640 ;; This function is called by:
 12641 ;;		_moteApp_add16bToDataBuffer
 12642 ;;		_TMRapp_Handler
 12643 ;;		_oled_putUint16
 12644 ;;		_sprintf
 12645 ;; This function uses a non-reentrant model
 12646 ;;
 12647                           
 12648                           	psect	text44
 12649  0041BA                     __ptext44:
 12650                           	opt stack 0
 12651  0041BA                     ___lwmod:
 12652                           	opt stack 16
 12653                           
 12654                           ; BSR set to: 0
 12655                           
 12656                           ;incstack = 0
 12657  0041BA  5169               	movf	___lwmod@divisor& (0+255),w,b
 12658  0041BC  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 12659  0041BE  E017               	bz	l2313
 12660                           
 12661                           ; BSR set to: 0
 12662  0041C0  0E01               	movlw	1
 12663  0041C2  6F6B               	movwf	___lwmod@counter& (0+255),b
 12664  0041C4  D004               	goto	l9643
 12665  0041C6                     l9641:
 12666                           
 12667                           ; BSR set to: 0
 12668  0041C6  90D8               	bcf	status,0,c
 12669  0041C8  3769               	rlcf	___lwmod@divisor& (0+255),f,b
 12670  0041CA  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 12671  0041CC  2B6B               	incf	___lwmod@counter& (0+255),f,b
 12672  0041CE                     l9643:
 12673                           
 12674                           ; BSR set to: 0
 12675  0041CE  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 12676  0041D0  D7FA               	goto	l9641
 12677  0041D2                     l9645:
 12678                           
 12679                           ; BSR set to: 0
 12680  0041D2  5169               	movf	___lwmod@divisor& (0+255),w,b
 12681  0041D4  5D67               	subwf	___lwmod@dividend& (0+255),w,b
 12682  0041D6  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12683  0041D8  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 12684  0041DA  E304               	bnc	l9649
 12685                           
 12686                           ; BSR set to: 0
 12687  0041DC  5169               	movf	___lwmod@divisor& (0+255),w,b
 12688  0041DE  5F67               	subwf	___lwmod@dividend& (0+255),f,b
 12689  0041E0  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 12690  0041E2  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 12691  0041E4                     l9649:
 12692                           
 12693                           ; BSR set to: 0
 12694  0041E4  90D8               	bcf	status,0,c
 12695  0041E6  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 12696  0041E8  3369               	rrcf	___lwmod@divisor& (0+255),f,b
 12697                           
 12698                           ; BSR set to: 0
 12699  0041EA  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
 12700  0041EC  D7F2               	goto	l9645
 12701  0041EE                     l2313:
 12702                           
 12703                           ; BSR set to: 0
 12704  0041EE  C067  F067         	movff	___lwmod@dividend,?___lwmod
 12705  0041F2  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
 12706                           
 12707                           ; BSR set to: 0
 12708  0041F6  0012               	return		;funcret
 12709  0041F8                     __end_of___lwmod:
 12710                           	opt stack 0
 12711                           tblptru	equ	0xFF8
 12712                           tblptrh	equ	0xFF7
 12713                           tblptrl	equ	0xFF6
 12714                           tablat	equ	0xFF5
 12715                           prodh	equ	0xFF4
 12716                           prodl	equ	0xFF3
 12717                           intcon	equ	0xFF2
 12718                           postinc0	equ	0xFEE
 12719                           wreg	equ	0xFE8
 12720                           indf1	equ	0xFE7
 12721                           fsr1h	equ	0xFE2
 12722                           fsr1l	equ	0xFE1
 12723                           indf2	equ	0xFDF
 12724                           postinc2	equ	0xFDE
 12725                           postdec2	equ	0xFDD
 12726                           fsr2h	equ	0xFDA
 12727                           fsr2l	equ	0xFD9
 12728                           status	equ	0xFD8
 12729                           
 12730 ;; *************** function _TMRapp_ClearBitFlags *****************
 12731 ;; Defined at:
 12732 ;;		line 16 in file "../Includes/Drivers/TMRapp.c"
 12733 ;; Parameters:    Size  Location     Type
 12734 ;;		None
 12735 ;; Auto vars:     Size  Location     Type
 12736 ;;		None
 12737 ;; Return value:  Size  Location     Type
 12738 ;;                  1    wreg      void 
 12739 ;; Registers used:
 12740 ;;		None
 12741 ;; Tracked objects:
 12742 ;;		On entry : F/0
 12743 ;;		On exit  : F/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12746 ;;      Params:         0       0       0       0       0       0       0       0       0
 12747 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12748 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12749 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12750 ;;Total ram usage:        0 bytes
 12751 ;; Hardware stack levels used:    1
 12752 ;; Hardware stack levels required when called:   11
 12753 ;; This function calls:
 12754 ;;		Nothing
 12755 ;; This function is called by:
 12756 ;;		_moteHandler
 12757 ;; This function uses a non-reentrant model
 12758 ;;
 12759                           
 12760                           	psect	text45
 12761  003B0C                     __ptext45:
 12762                           	opt stack 0
 12763  003B0C                     _TMRapp_ClearBitFlags:
 12764                           	opt stack 18
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;TMRapp.c: 19: appTimer.TicksBitMap = 0x00;
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;incstack = 0
 12771  003B0C  6BF5               	clrf	_appTimer& (0+255),b
 12772                           
 12773                           ; BSR set to: 0
 12774  003B0E  0012               	return		;funcret
 12775  003B10                     __end_of_TMRapp_ClearBitFlags:
 12776                           	opt stack 0
 12777                           tblptru	equ	0xFF8
 12778                           tblptrh	equ	0xFF7
 12779                           tblptrl	equ	0xFF6
 12780                           tablat	equ	0xFF5
 12781                           prodh	equ	0xFF4
 12782                           prodl	equ	0xFF3
 12783                           intcon	equ	0xFF2
 12784                           postinc0	equ	0xFEE
 12785                           wreg	equ	0xFE8
 12786                           indf1	equ	0xFE7
 12787                           fsr1h	equ	0xFE2
 12788                           fsr1l	equ	0xFE1
 12789                           indf2	equ	0xFDF
 12790                           postinc2	equ	0xFDE
 12791                           postdec2	equ	0xFDD
 12792                           fsr2h	equ	0xFDA
 12793                           fsr2l	equ	0xFD9
 12794                           status	equ	0xFD8
 12795                           
 12796 ;; *************** function _MOTEapp_TimerBasedTask *****************
 12797 ;; Defined at:
 12798 ;;		line 882 in file "../Includes/Board/MOTEapp.c"
 12799 ;; Parameters:    Size  Location     Type
 12800 ;;  timerTask       1    wreg     struct .
 12801 ;; Auto vars:     Size  Location     Type
 12802 ;;  timerTask       1    0[BANK0 ] struct .
 12803 ;; Return value:  Size  Location     Type
 12804 ;;                  1    wreg      void 
 12805 ;; Registers used:
 12806 ;;		wreg, status,2, status,0
 12807 ;; Tracked objects:
 12808 ;;		On entry : F/0
 12809 ;;		On exit  : F/0
 12810 ;;		Unchanged: 0/0
 12811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12812 ;;      Params:         0       0       0       0       0       0       0       0       0
 12813 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12814 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12815 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12816 ;;Total ram usage:        1 bytes
 12817 ;; Hardware stack levels used:    1
 12818 ;; Hardware stack levels required when called:   11
 12819 ;; This function calls:
 12820 ;;		Nothing
 12821 ;; This function is called by:
 12822 ;;		_moteHandler
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           	psect	text46
 12827  003BF4                     __ptext46:
 12828                           	opt stack 0
 12829  003BF4                     _MOTEapp_TimerBasedTask:
 12830                           	opt stack 18
 12831                           
 12832                           ; BSR set to: 0
 12833                           ;incstack = 0
 12834                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 12835  003BF4  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 12836                           
 12837                           ;MOTEapp.c: 887: if (timerTask.mSecTenTick)
 12838  003BF6  0100               	movlb	0	; () banked
 12839  003BF8  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 12840  003BFA  D002               	goto	l10567
 12841                           
 12842                           ; BSR set to: 0
 12843                           ;MOTEapp.c: 888: {
 12844                           ;MOTEapp.c: 890: m10SecTicker++;
 12845  003BFC  0101               	movlb	1	; () banked
 12846  003BFE  2B50               	incf	_m10SecTicker& (0+255),f,b
 12847  003C00                     l10567:
 12848                           
 12849                           ;MOTEapp.c: 896: }
 12850                           ;MOTEapp.c: 897: if (timerTask.SecTick)
 12851  003C00  0100               	movlb	0	; () banked
 12852  003C02  B760               	btfsc	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 12853                           
 12854                           ; BSR set to: 0
 12855                           ;MOTEapp.c: 898: {
 12856                           ;MOTEapp.c: 900: secTicker++;
 12857  003C04  2A29               	incf	_secTicker,f,c
 12858  003C06  0012               	return	
 12859  003C08                     __end_of_MOTEapp_TimerBasedTask:
 12860                           	opt stack 0
 12861                           tblptru	equ	0xFF8
 12862                           tblptrh	equ	0xFF7
 12863                           tblptrl	equ	0xFF6
 12864                           tablat	equ	0xFF5
 12865                           prodh	equ	0xFF4
 12866                           prodl	equ	0xFF3
 12867                           intcon	equ	0xFF2
 12868                           postinc0	equ	0xFEE
 12869                           wreg	equ	0xFE8
 12870                           indf1	equ	0xFE7
 12871                           fsr1h	equ	0xFE2
 12872                           fsr1l	equ	0xFE1
 12873                           indf2	equ	0xFDF
 12874                           postinc2	equ	0xFDE
 12875                           postdec2	equ	0xFDD
 12876                           fsr2h	equ	0xFDA
 12877                           fsr2l	equ	0xFD9
 12878                           status	equ	0xFD8
 12879                           
 12880 ;; *************** function _USBapp_handlerState *****************
 12881 ;; Defined at:
 12882 ;;		line 63 in file "../Includes/Board/USBapp.c"
 12883 ;; Parameters:    Size  Location     Type
 12884 ;;  state           1    wreg     enum E6263
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;  state           1    0[BANK0 ] enum E6263
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  1    wreg      void 
 12889 ;; Registers used:
 12890 ;;		wreg
 12891 ;; Tracked objects:
 12892 ;;		On entry : F/1
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12896 ;;      Params:         0       0       0       0       0       0       0       0       0
 12897 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12898 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12899 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12900 ;;Total ram usage:        1 bytes
 12901 ;; Hardware stack levels used:    1
 12902 ;; Hardware stack levels required when called:   11
 12903 ;; This function calls:
 12904 ;;		Nothing
 12905 ;; This function is called by:
 12906 ;;		_main
 12907 ;; This function uses a non-reentrant model
 12908 ;;
 12909                           
 12910                           	psect	text47
 12911  003B2E                     __ptext47:
 12912                           	opt stack 0
 12913  003B2E                     _USBapp_handlerState:
 12914                           	opt stack 19
 12915                           
 12916                           ; BSR set to: 0
 12917                           ;incstack = 0
 12918                           ;USBapp_handlerState@state stored from wreg
 12919  003B2E  0100               	movlb	0	; () banked
 12920  003B30  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 12921                           
 12922                           ;USBapp.c: 65: usbState = state;
 12923  003B32  C060  F153         	movff	USBapp_handlerState@state,_usbState
 12924  003B36  0012               	return		;funcret
 12925  003B38                     __end_of_USBapp_handlerState:
 12926                           	opt stack 0
 12927                           tblptru	equ	0xFF8
 12928                           tblptrh	equ	0xFF7
 12929                           tblptrl	equ	0xFF6
 12930                           tablat	equ	0xFF5
 12931                           prodh	equ	0xFF4
 12932                           prodl	equ	0xFF3
 12933                           intcon	equ	0xFF2
 12934                           postinc0	equ	0xFEE
 12935                           wreg	equ	0xFE8
 12936                           indf1	equ	0xFE7
 12937                           fsr1h	equ	0xFE2
 12938                           fsr1l	equ	0xFE1
 12939                           indf2	equ	0xFDF
 12940                           postinc2	equ	0xFDE
 12941                           postdec2	equ	0xFDD
 12942                           fsr2h	equ	0xFDA
 12943                           fsr2l	equ	0xFD9
 12944                           status	equ	0xFD8
 12945                           
 12946 ;; *************** function _USBapp_Handler *****************
 12947 ;; Defined at:
 12948 ;;		line 68 in file "../Includes/Board/USBapp.c"
 12949 ;; Parameters:    Size  Location     Type
 12950 ;;		None
 12951 ;; Auto vars:     Size  Location     Type
 12952 ;;		None
 12953 ;; Return value:  Size  Location     Type
 12954 ;;                  1    wreg      void 
 12955 ;; Registers used:
 12956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12957 ;; Tracked objects:
 12958 ;;		On entry : 0/1
 12959 ;;		On exit  : 0/0
 12960 ;;		Unchanged: 0/0
 12961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12962 ;;      Params:         0       0       0       0       0       0       0       0       0
 12963 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12964 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12965 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12966 ;;Total ram usage:        0 bytes
 12967 ;; Hardware stack levels used:    1
 12968 ;; Hardware stack levels required when called:   17
 12969 ;; This function calls:
 12970 ;;		_USBapp_DeviceCdcEmulatorHandler
 12971 ;;		_oled_clear
 12972 ;;		_oled_putString
 12973 ;; This function is called by:
 12974 ;;		_main
 12975 ;; This function uses a non-reentrant model
 12976 ;;
 12977                           
 12978                           	psect	text48
 12979  00492C                     __ptext48:
 12980                           	opt stack 0
 12981  00492C                     _USBapp_Handler:
 12982                           	opt stack 13
 12983                           
 12984                           ;USBapp.c: 72: {
 12985                           ;USBapp.c: 73: switch(usbState)
 12986                           
 12987                           ;incstack = 0
 12988                           ;USBapp.c: 71: do
 12989  00492C  D02F               	goto	l11305
 12990  00492E                     l692:
 12991                           
 12992                           ; BSR set to: 1
 12993  00492E  D7FF               	goto	l692
 12994  004930                     l11285:
 12995                           
 12996                           ; BSR set to: 1
 12997                           ;USBapp.c: 80: oled_clear();
 12998  004930  EC24  F01E         	call	_oled_clear	;wreg free
 12999                           
 13000                           ; BSR set to: 0
 13001                           ;USBapp.c: 81: oled_putString("CDC Mode",1,0);
 13002  004934  0E39               	movlw	low STR_105
 13003  004936  6F6D               	movwf	oled_putString@string& (0+255),b
 13004  004938  0E7F               	movlw	high STR_105
 13005  00493A  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
 13006  00493C  0E01               	movlw	1
 13007  00493E  6F6F               	movwf	oled_putString@station_dot& (0+255),b
 13008  004940  6B70               	clrf	oled_putString@start_page& (0+255),b
 13009  004942  EC17  F023         	call	_oled_putString	;wreg free
 13010                           
 13011                           ;USBapp.c: 82: oled_putString("Command",2,1);
 13012  004946  0EA5               	movlw	low STR_106
 13013  004948  0100               	movlb	0	; () banked
 13014  00494A  6F6D               	movwf	oled_putString@string& (0+255),b
 13015  00494C  0E7F               	movlw	high STR_106
 13016  00494E  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
 13017  004950  0E02               	movlw	2
 13018  004952  6F6F               	movwf	oled_putString@station_dot& (0+255),b
 13019  004954  0E01               	movlw	1
 13020  004956  6F70               	movwf	oled_putString@start_page& (0+255),b
 13021  004958  EC17  F023         	call	_oled_putString	;wreg free
 13022                           
 13023                           ;USBapp.c: 83: oled_putString("USB Handler",0,2);
 13024  00495C  0E7D               	movlw	low STR_107
 13025  00495E  0100               	movlb	0	; () banked
 13026  004960  6F6D               	movwf	oled_putString@string& (0+255),b
 13027  004962  0E7E               	movlw	high STR_107
 13028  004964  6F6E               	movwf	(oled_putString@string+1)& (0+255),b
 13029  004966  6B6F               	clrf	oled_putString@station_dot& (0+255),b
 13030  004968  0E02               	movlw	2
 13031  00496A  6F70               	movwf	oled_putString@start_page& (0+255),b
 13032  00496C  EC17  F023         	call	_oled_putString	;wreg free
 13033                           
 13034                           ;USBapp.c: 85: usbState = USB_RUNNING;
 13035  004970  0E01               	movlw	1
 13036  004972  D006               	goto	L21
 13037  004974                     l11295:
 13038                           
 13039                           ; BSR set to: 1
 13040                           ;USBapp.c: 89: if( USBDeviceState < CONFIGURED_STATE )
 13041  004974  0E20               	movlw	32
 13042  004976  0100               	movlb	0	; () banked
 13043  004978  61F4               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 13044  00497A  D001               	goto	l11299
 13045  00497C  D00F               	goto	l699
 13046  00497E                     l11299:
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;USBapp.c: 93: }
 13050                           ;USBapp.c: 94: usbState = USB_CDC;
 13051  00497E  0E02               	movlw	2
 13052  004980                     L21:
 13053  004980  0101               	movlb	1	; () banked
 13054  004982  6F53               	movwf	_usbState& (0+255),b
 13055                           
 13056                           ;USBapp.c: 95: break;
 13057  004984  D00B               	goto	l699
 13058  004986                     l11301:
 13059                           
 13060                           ; BSR set to: 1
 13061                           ;USBapp.c: 98: USBapp_DeviceCdcEmulatorHandler();
 13062  004986  ECCF  F028         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 13063                           
 13064                           ;USBapp.c: 101: break;
 13065  00498A  D008               	goto	l699
 13066  00498C                     l11305:
 13067  00498C  0101               	movlb	1	; () banked
 13068  00498E  5153               	movf	_usbState& (0+255),w,b
 13069                           
 13070                           ; Switch size 1, requested type "speed"
 13071                           ; Number of cases is 3, Range of values is 0 to 2
 13072                           ; switch strategies available:
 13073                           ; Name         Instructions Cycles
 13074                           ; simple_byte           10     6 (average)
 13075                           ;	Chosen strategy is simple_byte
 13076  004990  E0CF               	bz	l11285
 13077  004992  0A01               	xorlw	1	; case 1
 13078  004994  E0EF               	bz	l11295
 13079  004996  0A03               	xorlw	3	; case 2
 13080  004998  E0F6               	bz	l11301
 13081  00499A  D7C9               	goto	l692
 13082  00499C                     l699:
 13083                           
 13084                           ;USBapp.c: 103: }while(PORTAbits.RA0);
 13085  00499C  B080               	btfsc	3968,0,c	;volatile
 13086  00499E  D7F6               	goto	l11305
 13087                           
 13088                           ;USBapp.c: 104: __nop();
 13089  0049A0  F000               	nop	
 13090  0049A2  0012               	return		;funcret
 13091  0049A4                     __end_of_USBapp_Handler:
 13092                           	opt stack 0
 13093                           tblptru	equ	0xFF8
 13094                           tblptrh	equ	0xFF7
 13095                           tblptrl	equ	0xFF6
 13096                           tablat	equ	0xFF5
 13097                           prodh	equ	0xFF4
 13098                           prodl	equ	0xFF3
 13099                           intcon	equ	0xFF2
 13100                           postinc0	equ	0xFEE
 13101                           wreg	equ	0xFE8
 13102                           indf1	equ	0xFE7
 13103                           fsr1h	equ	0xFE2
 13104                           fsr1l	equ	0xFE1
 13105                           indf2	equ	0xFDF
 13106                           postinc2	equ	0xFDE
 13107                           postdec2	equ	0xFDD
 13108                           fsr2h	equ	0xFDA
 13109                           fsr2l	equ	0xFD9
 13110                           status	equ	0xFD8
 13111                           
 13112 ;; *************** function _oled_putString *****************
 13113 ;; Defined at:
 13114 ;;		line 273 in file "../Includes/Drivers/SSD1306oLED.c"
 13115 ;; Parameters:    Size  Location     Type
 13116 ;;  string          2   13[BANK0 ] PTR const unsigned char 
 13117 ;;		 -> oled_putUint16@numData(6), oled_putUint8@numData(6), STR_107(12), STR_106(8), 
 13118 ;;		 -> STR_105(9), STR_87(2), STR_86(16), STR_85(13), 
 13119 ;;		 -> STR_84(12), STR_83(17), STR_82(9), STR_81(1), 
 13120 ;;		 -> STR_77(16), STR_75(11), STR_74(12), STR_71(11), 
 13121 ;;		 -> moteJoiningProcess@buf(50), STR_69(15), STR_68(16), STR_65(7), 
 13122 ;;		 -> STR_62(9), STR_59(8), STR_56(7), STR_53(8), 
 13123 ;;		 -> STR_50(10), STR_47(9), STR_44(10), STR_41(7), 
 13124 ;;		 -> STR_38(8), STR_35(8), modemResonseBuffer(64), STR_32(9), 
 13125 ;;		 -> STR_31(9), STR_30(8), STR_28(17), STR_27(17), 
 13126 ;;		 -> STR_26(17), STR_25(17), STR_24(9), STR_23(10), 
 13127 ;;		 -> STR_20(9), STR_19(8), STR_18(8), STR_17(9), 
 13128 ;;		 -> STR_16(10), STR_15(11), STR_14(13), STR_13(13), 
 13129 ;;		 -> STR_12(13), STR_11(12), STR_10(13), STR_9(9), 
 13130 ;;		 -> STR_8(12), STR_7(16), STR_6(2), STR_5(2), 
 13131 ;;		 -> STR_4(9), STR_3(15), STR_2(15), STR_1(15), 
 13132 ;;  station_dot     1   15[BANK0 ] unsigned char 
 13133 ;;  start_page      1   16[BANK0 ] unsigned char 
 13134 ;; Auto vars:     Size  Location     Type
 13135 ;;  index           1   17[BANK0 ] unsigned char 
 13136 ;; Return value:  Size  Location     Type
 13137 ;;                  1    wreg      void 
 13138 ;; Registers used:
 13139 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13140 ;; Tracked objects:
 13141 ;;		On entry : F/0
 13142 ;;		On exit  : 0/0
 13143 ;;		Unchanged: 0/0
 13144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13145 ;;      Params:         0       4       0       0       0       0       0       0       0
 13146 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13147 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13148 ;;      Totals:         0       5       0       0       0       0       0       0       0
 13149 ;;Total ram usage:        5 bytes
 13150 ;; Hardware stack levels used:    1
 13151 ;; Hardware stack levels required when called:   15
 13152 ;; This function calls:
 13153 ;;		_oled_putChar
 13154 ;; This function is called by:
 13155 ;;		_main
 13156 ;;		_moteHandler
 13157 ;;		_moteJoiningProcess
 13158 ;;		_moteRunningProcess
 13159 ;;		_USBapp_Handler
 13160 ;;		_oled_putUint8
 13161 ;;		_oled_putUint16
 13162 ;; This function uses a non-reentrant model
 13163 ;;
 13164                           
 13165                           	psect	text49
 13166  00462E                     __ptext49:
 13167                           	opt stack 0
 13168  00462E                     _oled_putString:
 13169                           	opt stack 15
 13170                           
 13171                           ; BSR set to: 0
 13172                           ;SSD1306oLED.c: 275: uint8_t index;
 13173                           ;SSD1306oLED.c: 276: for(index = station_dot; index < 16; index++)
 13174                           
 13175                           ;incstack = 0
 13176  00462E  C06F  F071         	movff	oled_putString@station_dot,oled_putString@index
 13177  004632                     l9445:
 13178                           
 13179                           ; BSR set to: 0
 13180  004632  0E0F               	movlw	15
 13181  004634  6571               	cpfsgt	oled_putString@index& (0+255),b
 13182  004636  D001               	goto	l9449
 13183  004638  0C0F               	retlw	15
 13184  00463A                     l9449:
 13185                           
 13186                           ; BSR set to: 0
 13187                           ;SSD1306oLED.c: 277: {
 13188                           ;SSD1306oLED.c: 278: if (*string != 0)
 13189  00463A  C06D  FFF6         	movff	oled_putString@string,tblptrl
 13190  00463E  C06E  FFF7         	movff	oled_putString@string+1,tblptrh
 13191  004642  6AF8               	clrf	tblptru,c
 13192  004644  0E07               	movlw	(high __ramtop+-1)
 13193  004646  64F7               	cpfsgt	tblptrh,c
 13194  004648  D003               	bra	u8217
 13195  00464A  0008               	tblrd		*
 13196  00464C  50F5               	movf	tablat,w,c
 13197  00464E  D005               	bra	u8210
 13198  004650                     u8217:
 13199  004650  CFF6 FFE1          	movff	tblptrl,fsr1l
 13200  004654  CFF7 FFE2          	movff	tblptrh,fsr1h
 13201  004658  50E7               	movf	indf1,w,c
 13202  00465A                     u8210:
 13203  00465A  0900               	iorlw	0
 13204  00465C  B4D8               	btfsc	status,2,c
 13205  00465E  0012               	return	
 13206                           
 13207                           ;SSD1306oLED.c: 279: {
 13208                           ;SSD1306oLED.c: 280: oled_putChar(*string, index, start_page);
 13209  004660  C071  F063         	movff	oled_putString@index,oled_putChar@station_dot
 13210  004664  C070  F064         	movff	oled_putString@start_page,oled_putChar@start_page
 13211  004668  C06D  FFF6         	movff	oled_putString@string,tblptrl
 13212  00466C  C06E  FFF7         	movff	oled_putString@string+1,tblptrh
 13213  004670  6AF8               	clrf	tblptru,c
 13214  004672  0E07               	movlw	(high __ramtop+-1)
 13215  004674  64F7               	cpfsgt	tblptrh,c
 13216  004676  D003               	bra	u8237
 13217  004678  0008               	tblrd		*
 13218  00467A  50F5               	movf	tablat,w,c
 13219  00467C  D005               	bra	u8230
 13220  00467E                     u8237:
 13221  00467E  CFF6 FFE1          	movff	tblptrl,fsr1l
 13222  004682  CFF7 FFE2          	movff	tblptrh,fsr1h
 13223  004686  50E7               	movf	indf1,w,c
 13224  004688                     u8230:
 13225  004688  EC5B  F024         	call	_oled_putChar
 13226                           
 13227                           ; BSR set to: 0
 13228                           ;SSD1306oLED.c: 281: *string++;
 13229  00468C  4B6D               	infsnz	oled_putString@string& (0+255),f,b
 13230  00468E  2B6E               	incf	(oled_putString@string+1)& (0+255),f,b
 13231                           
 13232                           ; BSR set to: 0
 13233                           
 13234                           ;SSD1306oLED.c: 282: }
 13235  004690  2B71               	incf	oled_putString@index& (0+255),f,b
 13236  004692  D7CF               	goto	l9445
 13237  004694                     __end_of_oled_putString:
 13238                           	opt stack 0
 13239                           tblptru	equ	0xFF8
 13240                           tblptrh	equ	0xFF7
 13241                           tblptrl	equ	0xFF6
 13242                           tablat	equ	0xFF5
 13243                           prodh	equ	0xFF4
 13244                           prodl	equ	0xFF3
 13245                           intcon	equ	0xFF2
 13246                           postinc0	equ	0xFEE
 13247                           wreg	equ	0xFE8
 13248                           indf1	equ	0xFE7
 13249                           fsr1h	equ	0xFE2
 13250                           fsr1l	equ	0xFE1
 13251                           indf2	equ	0xFDF
 13252                           postinc2	equ	0xFDE
 13253                           postdec2	equ	0xFDD
 13254                           fsr2h	equ	0xFDA
 13255                           fsr2l	equ	0xFD9
 13256                           status	equ	0xFD8
 13257                           
 13258 ;; *************** function _oled_clear *****************
 13259 ;; Defined at:
 13260 ;;		line 290 in file "../Includes/Drivers/SSD1306oLED.c"
 13261 ;; Parameters:    Size  Location     Type
 13262 ;;		None
 13263 ;; Auto vars:     Size  Location     Type
 13264 ;;		None
 13265 ;; Return value:  Size  Location     Type
 13266 ;;                  1    wreg      void 
 13267 ;; Registers used:
 13268 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13269 ;; Tracked objects:
 13270 ;;		On entry : 0/1
 13271 ;;		On exit  : F/0
 13272 ;;		Unchanged: 0/0
 13273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13274 ;;      Params:         0       0       0       0       0       0       0       0       0
 13275 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13276 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13277 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13278 ;;Total ram usage:        0 bytes
 13279 ;; Hardware stack levels used:    1
 13280 ;; Hardware stack levels required when called:   16
 13281 ;; This function calls:
 13282 ;;		_oled_clearRow
 13283 ;; This function is called by:
 13284 ;;		_main
 13285 ;;		_moteHandler
 13286 ;;		_moteJoiningProcess
 13287 ;;		_moteRunningProcess
 13288 ;;		_USBapp_Handler
 13289 ;;		_oled_init
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293                           	psect	text50
 13294  003C48                     __ptext50:
 13295                           	opt stack 0
 13296  003C48                     _oled_clear:
 13297                           	opt stack 13
 13298                           
 13299                           ;SSD1306oLED.c: 292: oled_clearRow(0);
 13300                           
 13301                           ;incstack = 0
 13302  003C48  0E00               	movlw	0
 13303  003C4A  EC6B  F01E         	call	_oled_clearRow
 13304                           
 13305                           ;SSD1306oLED.c: 293: oled_clearRow(1);
 13306  003C4E  0E01               	movlw	1
 13307  003C50  EC6B  F01E         	call	_oled_clearRow
 13308                           
 13309                           ;SSD1306oLED.c: 294: oled_clearRow(2);
 13310  003C54  0E02               	movlw	2
 13311  003C56  EC6B  F01E         	call	_oled_clearRow
 13312                           
 13313                           ;SSD1306oLED.c: 295: oled_clearRow(3);
 13314  003C5A  0E03               	movlw	3
 13315  003C5C  EF6B  F01E         	goto	_oled_clearRow
 13316  003C60                     __end_of_oled_clear:
 13317                           	opt stack 0
 13318                           tblptru	equ	0xFF8
 13319                           tblptrh	equ	0xFF7
 13320                           tblptrl	equ	0xFF6
 13321                           tablat	equ	0xFF5
 13322                           prodh	equ	0xFF4
 13323                           prodl	equ	0xFF3
 13324                           intcon	equ	0xFF2
 13325                           postinc0	equ	0xFEE
 13326                           wreg	equ	0xFE8
 13327                           indf1	equ	0xFE7
 13328                           fsr1h	equ	0xFE2
 13329                           fsr1l	equ	0xFE1
 13330                           indf2	equ	0xFDF
 13331                           postinc2	equ	0xFDE
 13332                           postdec2	equ	0xFDD
 13333                           fsr2h	equ	0xFDA
 13334                           fsr2l	equ	0xFD9
 13335                           status	equ	0xFD8
 13336                           
 13337 ;; *************** function _oled_clearRow *****************
 13338 ;; Defined at:
 13339 ;;		line 298 in file "../Includes/Drivers/SSD1306oLED.c"
 13340 ;; Parameters:    Size  Location     Type
 13341 ;;  page            1    wreg     unsigned char 
 13342 ;; Auto vars:     Size  Location     Type
 13343 ;;  page            1   13[BANK0 ] unsigned char 
 13344 ;;  index           1   14[BANK0 ] unsigned char 
 13345 ;; Return value:  Size  Location     Type
 13346 ;;                  1    wreg      void 
 13347 ;; Registers used:
 13348 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13349 ;; Tracked objects:
 13350 ;;		On entry : 0/1
 13351 ;;		On exit  : F/0
 13352 ;;		Unchanged: 0/0
 13353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13354 ;;      Params:         0       0       0       0       0       0       0       0       0
 13355 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13356 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13357 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13358 ;;Total ram usage:        2 bytes
 13359 ;; Hardware stack levels used:    1
 13360 ;; Hardware stack levels required when called:   15
 13361 ;; This function calls:
 13362 ;;		_oled_putChar
 13363 ;; This function is called by:
 13364 ;;		_oled_clear
 13365 ;; This function uses a non-reentrant model
 13366 ;;
 13367                           
 13368                           	psect	text51
 13369  003CD6                     __ptext51:
 13370                           	opt stack 0
 13371  003CD6                     _oled_clearRow:
 13372                           	opt stack 13
 13373                           
 13374                           ; BSR set to: 0
 13375                           ;incstack = 0
 13376                           ;oled_clearRow@page stored from wreg
 13377  003CD6  0100               	movlb	0	; () banked
 13378  003CD8  6F6D               	movwf	oled_clearRow@page& (0+255),b
 13379                           
 13380                           ;SSD1306oLED.c: 300: uint8_t index;
 13381                           ;SSD1306oLED.c: 302: for(index = 0; index < 16; index++)
 13382  003CDA  6B6E               	clrf	oled_clearRow@index& (0+255),b
 13383  003CDC                     l9289:
 13384                           
 13385                           ; BSR set to: 0
 13386                           ;SSD1306oLED.c: 303: {
 13387                           ;SSD1306oLED.c: 304: oled_putChar( ' ', index, page);
 13388  003CDC  C06E  F063         	movff	oled_clearRow@index,oled_putChar@station_dot
 13389  003CE0  C06D  F064         	movff	oled_clearRow@page,oled_putChar@start_page
 13390  003CE4  0E20               	movlw	32
 13391  003CE6  EC5B  F024         	call	_oled_putChar
 13392                           
 13393                           ; BSR set to: 0
 13394  003CEA  2B6E               	incf	oled_clearRow@index& (0+255),f,b
 13395                           
 13396                           ; BSR set to: 0
 13397  003CEC  0E0F               	movlw	15
 13398  003CEE  656E               	cpfsgt	oled_clearRow@index& (0+255),b
 13399  003CF0  D7F5               	goto	l9289
 13400  003CF2  0C0F               	retlw	15
 13401  003CF4                     __end_of_oled_clearRow:
 13402                           	opt stack 0
 13403                           tblptru	equ	0xFF8
 13404                           tblptrh	equ	0xFF7
 13405                           tblptrl	equ	0xFF6
 13406                           tablat	equ	0xFF5
 13407                           prodh	equ	0xFF4
 13408                           prodl	equ	0xFF3
 13409                           intcon	equ	0xFF2
 13410                           postinc0	equ	0xFEE
 13411                           wreg	equ	0xFE8
 13412                           indf1	equ	0xFE7
 13413                           fsr1h	equ	0xFE2
 13414                           fsr1l	equ	0xFE1
 13415                           indf2	equ	0xFDF
 13416                           postinc2	equ	0xFDE
 13417                           postdec2	equ	0xFDD
 13418                           fsr2h	equ	0xFDA
 13419                           fsr2l	equ	0xFD9
 13420                           status	equ	0xFD8
 13421                           
 13422 ;; *************** function _oled_putChar *****************
 13423 ;; Defined at:
 13424 ;;		line 258 in file "../Includes/Drivers/SSD1306oLED.c"
 13425 ;; Parameters:    Size  Location     Type
 13426 ;;  k               1    wreg     unsigned char 
 13427 ;;  station_dot     1    3[BANK0 ] unsigned char 
 13428 ;;  start_page      1    4[BANK0 ] unsigned char 
 13429 ;; Auto vars:     Size  Location     Type
 13430 ;;  k               1   11[BANK0 ] unsigned char 
 13431 ;;  index           1   12[BANK0 ] unsigned char 
 13432 ;; Return value:  Size  Location     Type
 13433 ;;                  1    wreg      void 
 13434 ;; Registers used:
 13435 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13436 ;; Tracked objects:
 13437 ;;		On entry : 0/0
 13438 ;;		On exit  : F/0
 13439 ;;		Unchanged: 0/0
 13440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13441 ;;      Params:         0       2       0       0       0       0       0       0       0
 13442 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13443 ;;      Temps:          0       6       0       0       0       0       0       0       0
 13444 ;;      Totals:         0      10       0       0       0       0       0       0       0
 13445 ;;Total ram usage:       10 bytes
 13446 ;; Hardware stack levels used:    1
 13447 ;; Hardware stack levels required when called:   14
 13448 ;; This function calls:
 13449 ;;		_Set_Column_Address
 13450 ;;		_Set_Page_Address
 13451 ;;		_oled_writeData
 13452 ;; This function is called by:
 13453 ;;		_oled_putString
 13454 ;;		_oled_clearRow
 13455 ;; This function uses a non-reentrant model
 13456 ;;
 13457                           
 13458                           	psect	text52
 13459  0048B6                     __ptext52:
 13460                           	opt stack 0
 13461  0048B6                     _oled_putChar:
 13462                           	opt stack 15
 13463                           
 13464                           ; BSR set to: 0
 13465                           ;incstack = 0
 13466                           ;oled_putChar@k stored from wreg
 13467  0048B6  0100               	movlb	0	; () banked
 13468  0048B8  6F6B               	movwf	oled_putChar@k& (0+255),b
 13469                           
 13470                           ;SSD1306oLED.c: 260: uint8_t index;
 13471                           ;SSD1306oLED.c: 262: Set_Page_Address(start_page);
 13472  0048BA  5164               	movf	oled_putChar@start_page& (0+255),w,b
 13473  0048BC  ECF0  F01D         	call	_Set_Page_Address
 13474                           
 13475                           ;SSD1306oLED.c: 263: Set_Column_Address(0x00 + station_dot * 8);
 13476  0048C0  0100               	movlb	0	; () banked
 13477  0048C2  5163               	movf	oled_putChar@station_dot& (0+255),w,b
 13478  0048C4  0D08               	mullw	8
 13479  0048C6  50F3               	movf	prodl,w,c
 13480  0048C8  EC5C  F01E         	call	_Set_Column_Address
 13481                           
 13482                           ;SSD1306oLED.c: 265: LATBbits.LATB4 = 0;
 13483  0048CC  988A               	bcf	3978,4,c	;volatile
 13484                           
 13485                           ;SSD1306oLED.c: 266: for(index = 0; index < 8; index++)
 13486  0048CE  0100               	movlb	0	; () banked
 13487  0048D0  6B6C               	clrf	oled_putChar@index& (0+255),b
 13488  0048D2                     l9237:
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;SSD1306oLED.c: 267: {
 13492                           ;SSD1306oLED.c: 268: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 13493  0048D2  6B65               	clrf	??_oled_putChar& (0+255),b
 13494  0048D4  6966               	setf	(??_oled_putChar+1)& (0+255),b
 13495  0048D6  516B               	movf	oled_putChar@k& (0+255),w,b
 13496  0048D8  6F67               	movwf	(??_oled_putChar+2)& (0+255),b
 13497  0048DA  6B68               	clrf	(??_oled_putChar+3)& (0+255),b
 13498  0048DC  90D8               	bcf	status,0,c
 13499  0048DE  3767               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 13500  0048E0  3768               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 13501  0048E2  90D8               	bcf	status,0,c
 13502  0048E4  3767               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 13503  0048E6  3768               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 13504  0048E8  90D8               	bcf	status,0,c
 13505  0048EA  3767               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 13506  0048EC  3768               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 13507  0048EE  C1FD  F069         	movff	_selectedFont,??_oled_putChar+4
 13508  0048F2  C1FE  F06A         	movff	_selectedFont+1,??_oled_putChar+5
 13509  0048F6  5167               	movf	(??_oled_putChar+2)& (0+255),w,b
 13510  0048F8  2769               	addwf	(??_oled_putChar+4)& (0+255),f,b
 13511  0048FA  5168               	movf	(??_oled_putChar+3)& (0+255),w,b
 13512  0048FC  236A               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 13513  0048FE  516C               	movf	oled_putChar@index& (0+255),w,b
 13514  004900  2769               	addwf	(??_oled_putChar+4)& (0+255),f,b
 13515  004902  0E00               	movlw	0
 13516  004904  236A               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 13517  004906  5165               	movf	??_oled_putChar& (0+255),w,b
 13518  004908  2769               	addwf	(??_oled_putChar+4)& (0+255),f,b
 13519  00490A  5166               	movf	(??_oled_putChar+1)& (0+255),w,b
 13520  00490C  236A               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 13521  00490E  C069  FFF6         	movff	??_oled_putChar+4,tblptrl
 13522  004912  C06A  FFF7         	movff	??_oled_putChar+5,tblptrh
 13523  004916                     	if	0	;tblptru may be non-zero
 13524  004916                     	endif
 13525  004916                     	if	0	;tblptru may be non-zero
 13526  004916                     	endif
 13527  004916  0008               	tblrd		*
 13528  004918  50F5               	movf	tablat,w,c
 13529  00491A  ECA8  F01D         	call	_oled_writeData
 13530  00491E  0100               	movlb	0	; () banked
 13531  004920  2B6C               	incf	oled_putChar@index& (0+255),f,b
 13532                           
 13533                           ; BSR set to: 0
 13534  004922  0E07               	movlw	7
 13535  004924  656C               	cpfsgt	oled_putChar@index& (0+255),b
 13536  004926  D7D5               	goto	l9237
 13537                           
 13538                           ; BSR set to: 0
 13539                           ;SSD1306oLED.c: 269: }
 13540                           ;SSD1306oLED.c: 270: LATBbits.LATB4 = 1;
 13541  004928  888A               	bsf	3978,4,c	;volatile
 13542                           
 13543                           ; BSR set to: 0
 13544  00492A  0C07               	retlw	7	;funcret
 13545  00492C                     __end_of_oled_putChar:
 13546                           	opt stack 0
 13547                           tblptru	equ	0xFF8
 13548                           tblptrh	equ	0xFF7
 13549                           tblptrl	equ	0xFF6
 13550                           tablat	equ	0xFF5
 13551                           prodh	equ	0xFF4
 13552                           prodl	equ	0xFF3
 13553                           intcon	equ	0xFF2
 13554                           postinc0	equ	0xFEE
 13555                           wreg	equ	0xFE8
 13556                           indf1	equ	0xFE7
 13557                           fsr1h	equ	0xFE2
 13558                           fsr1l	equ	0xFE1
 13559                           indf2	equ	0xFDF
 13560                           postinc2	equ	0xFDE
 13561                           postdec2	equ	0xFDD
 13562                           fsr2h	equ	0xFDA
 13563                           fsr2l	equ	0xFD9
 13564                           status	equ	0xFD8
 13565                           
 13566 ;; *************** function _oled_writeData *****************
 13567 ;; Defined at:
 13568 ;;		line 407 in file "../Includes/Drivers/SSD1306oLED.c"
 13569 ;; Parameters:    Size  Location     Type
 13570 ;;  data            1    wreg     unsigned char 
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;  data            1    1[BANK0 ] unsigned char 
 13573 ;; Return value:  Size  Location     Type
 13574 ;;                  1    wreg      void 
 13575 ;; Registers used:
 13576 ;;		wreg, status,2, cstack
 13577 ;; Tracked objects:
 13578 ;;		On entry : F/0
 13579 ;;		On exit  : 0/0
 13580 ;;		Unchanged: 0/0
 13581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13582 ;;      Params:         0       0       0       0       0       0       0       0       0
 13583 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13584 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13585 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13586 ;;Total ram usage:        1 bytes
 13587 ;; Hardware stack levels used:    1
 13588 ;; Hardware stack levels required when called:   12
 13589 ;; This function calls:
 13590 ;;		_SPI_Exchange8bit
 13591 ;; This function is called by:
 13592 ;;		_oled_putChar
 13593 ;; This function uses a non-reentrant model
 13594 ;;
 13595                           
 13596                           	psect	text53
 13597  003B50                     __ptext53:
 13598                           	opt stack 0
 13599  003B50                     _oled_writeData:
 13600                           	opt stack 16
 13601                           
 13602                           ; BSR set to: 0
 13603                           ;incstack = 0
 13604                           ;oled_writeData@data stored from wreg
 13605  003B50  6F61               	movwf	oled_writeData@data& (0+255),b
 13606                           
 13607                           ;SSD1306oLED.c: 409: LATBbits.LATB5 = 1;
 13608  003B52  8A8A               	bsf	3978,5,c	;volatile
 13609                           
 13610                           ;SSD1306oLED.c: 410: SPI_Exchange8bit(data);
 13611  003B54  0100               	movlb	0	; () banked
 13612  003B56  5161               	movf	oled_writeData@data& (0+255),w,b
 13613  003B58  EFC3  F01D         	goto	_SPI_Exchange8bit
 13614  003B5C                     __end_of_oled_writeData:
 13615                           	opt stack 0
 13616                           tblptru	equ	0xFF8
 13617                           tblptrh	equ	0xFF7
 13618                           tblptrl	equ	0xFF6
 13619                           tablat	equ	0xFF5
 13620                           prodh	equ	0xFF4
 13621                           prodl	equ	0xFF3
 13622                           intcon	equ	0xFF2
 13623                           postinc0	equ	0xFEE
 13624                           wreg	equ	0xFE8
 13625                           indf1	equ	0xFE7
 13626                           fsr1h	equ	0xFE2
 13627                           fsr1l	equ	0xFE1
 13628                           indf2	equ	0xFDF
 13629                           postinc2	equ	0xFDE
 13630                           postdec2	equ	0xFDD
 13631                           fsr2h	equ	0xFDA
 13632                           fsr2l	equ	0xFD9
 13633                           status	equ	0xFD8
 13634                           
 13635 ;; *************** function _Set_Page_Address *****************
 13636 ;; Defined at:
 13637 ;;		line 201 in file "../Includes/Drivers/SSD1306oLED.c"
 13638 ;; Parameters:    Size  Location     Type
 13639 ;;  address         1    wreg     unsigned char 
 13640 ;; Auto vars:     Size  Location     Type
 13641 ;;  address         1    2[BANK0 ] unsigned char 
 13642 ;; Return value:  Size  Location     Type
 13643 ;;                  1    wreg      void 
 13644 ;; Registers used:
 13645 ;;		wreg, status,2, status,0, cstack
 13646 ;; Tracked objects:
 13647 ;;		On entry : F/0
 13648 ;;		On exit  : 0/0
 13649 ;;		Unchanged: 0/0
 13650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13651 ;;      Params:         0       0       0       0       0       0       0       0       0
 13652 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13653 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13654 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13655 ;;Total ram usage:        1 bytes
 13656 ;; Hardware stack levels used:    1
 13657 ;; Hardware stack levels required when called:   13
 13658 ;; This function calls:
 13659 ;;		_oled_writeCommand
 13660 ;; This function is called by:
 13661 ;;		_oled_putChar
 13662 ;; This function uses a non-reentrant model
 13663 ;;
 13664                           
 13665                           	psect	text54
 13666  003BE0                     __ptext54:
 13667                           	opt stack 0
 13668  003BE0                     _Set_Page_Address:
 13669                           	opt stack 15
 13670                           
 13671                           ;incstack = 0
 13672                           ;Set_Page_Address@address stored from wreg
 13673  003BE0  6F62               	movwf	Set_Page_Address@address& (0+255),b
 13674                           
 13675                           ;SSD1306oLED.c: 203: address = 0xB0 | address;
 13676  003BE2  0EB0               	movlw	176
 13677  003BE4  0100               	movlb	0	; () banked
 13678  003BE6  1362               	iorwf	Set_Page_Address@address& (0+255),f,b
 13679                           
 13680                           ; BSR set to: 0
 13681                           ;SSD1306oLED.c: 204: LATBbits.LATB4 = 0;
 13682  003BE8  988A               	bcf	3978,4,c	;volatile
 13683                           
 13684                           ; BSR set to: 0
 13685                           ;SSD1306oLED.c: 205: oled_writeCommand(address);
 13686  003BEA  5162               	movf	Set_Page_Address@address& (0+255),w,b
 13687  003BEC  ECA2  F01D         	call	_oled_writeCommand
 13688                           
 13689                           ;SSD1306oLED.c: 206: LATBbits.LATB4 = 1;
 13690  003BF0  888A               	bsf	3978,4,c	;volatile
 13691  003BF2  0012               	return		;funcret
 13692  003BF4                     __end_of_Set_Page_Address:
 13693                           	opt stack 0
 13694                           tblptru	equ	0xFF8
 13695                           tblptrh	equ	0xFF7
 13696                           tblptrl	equ	0xFF6
 13697                           tablat	equ	0xFF5
 13698                           prodh	equ	0xFF4
 13699                           prodl	equ	0xFF3
 13700                           intcon	equ	0xFF2
 13701                           postinc0	equ	0xFEE
 13702                           wreg	equ	0xFE8
 13703                           indf1	equ	0xFE7
 13704                           fsr1h	equ	0xFE2
 13705                           fsr1l	equ	0xFE1
 13706                           indf2	equ	0xFDF
 13707                           postinc2	equ	0xFDE
 13708                           postdec2	equ	0xFDD
 13709                           fsr2h	equ	0xFDA
 13710                           fsr2l	equ	0xFD9
 13711                           status	equ	0xFD8
 13712                           
 13713 ;; *************** function _Set_Column_Address *****************
 13714 ;; Defined at:
 13715 ;;		line 210 in file "../Includes/Drivers/SSD1306oLED.c"
 13716 ;; Parameters:    Size  Location     Type
 13717 ;;  address         1    wreg     unsigned char 
 13718 ;; Auto vars:     Size  Location     Type
 13719 ;;  address         1    2[BANK0 ] unsigned char 
 13720 ;; Return value:  Size  Location     Type
 13721 ;;                  1    wreg      void 
 13722 ;; Registers used:
 13723 ;;		wreg, status,2, status,0, cstack
 13724 ;; Tracked objects:
 13725 ;;		On entry : F/0
 13726 ;;		On exit  : 0/0
 13727 ;;		Unchanged: 0/0
 13728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13729 ;;      Params:         0       0       0       0       0       0       0       0       0
 13730 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13731 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13732 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13733 ;;Total ram usage:        1 bytes
 13734 ;; Hardware stack levels used:    1
 13735 ;; Hardware stack levels required when called:   13
 13736 ;; This function calls:
 13737 ;;		_oled_writeCommand
 13738 ;; This function is called by:
 13739 ;;		_oled_putChar
 13740 ;; This function uses a non-reentrant model
 13741 ;;
 13742                           
 13743                           	psect	text55
 13744  003CB8                     __ptext55:
 13745                           	opt stack 0
 13746  003CB8                     _Set_Column_Address:
 13747                           	opt stack 15
 13748                           
 13749                           ;incstack = 0
 13750                           ;Set_Column_Address@address stored from wreg
 13751  003CB8  6F62               	movwf	Set_Column_Address@address& (0+255),b
 13752                           
 13753                           ;SSD1306oLED.c: 212: LATBbits.LATB4 = 0;
 13754  003CBA  988A               	bcf	3978,4,c	;volatile
 13755                           
 13756                           ;SSD1306oLED.c: 213: oled_writeCommand(0x10 | (address >> 4) );
 13757  003CBC  0100               	movlb	0	; () banked
 13758  003CBE  3962               	swapf	Set_Column_Address@address& (0+255),w,b
 13759  003CC0  0B0F               	andlw	15
 13760  003CC2  0910               	iorlw	16
 13761  003CC4  ECA2  F01D         	call	_oled_writeCommand
 13762                           
 13763                           ;SSD1306oLED.c: 214: oled_writeCommand(0x0F & address);
 13764  003CC8  0100               	movlb	0	; () banked
 13765  003CCA  5162               	movf	Set_Column_Address@address& (0+255),w,b
 13766  003CCC  0B0F               	andlw	15
 13767  003CCE  ECA2  F01D         	call	_oled_writeCommand
 13768                           
 13769                           ;SSD1306oLED.c: 215: LATBbits.LATB4 = 1;
 13770  003CD2  888A               	bsf	3978,4,c	;volatile
 13771  003CD4  0012               	return		;funcret
 13772  003CD6                     __end_of_Set_Column_Address:
 13773                           	opt stack 0
 13774                           tblptru	equ	0xFF8
 13775                           tblptrh	equ	0xFF7
 13776                           tblptrl	equ	0xFF6
 13777                           tablat	equ	0xFF5
 13778                           prodh	equ	0xFF4
 13779                           prodl	equ	0xFF3
 13780                           intcon	equ	0xFF2
 13781                           postinc0	equ	0xFEE
 13782                           wreg	equ	0xFE8
 13783                           indf1	equ	0xFE7
 13784                           fsr1h	equ	0xFE2
 13785                           fsr1l	equ	0xFE1
 13786                           indf2	equ	0xFDF
 13787                           postinc2	equ	0xFDE
 13788                           postdec2	equ	0xFDD
 13789                           fsr2h	equ	0xFDA
 13790                           fsr2l	equ	0xFD9
 13791                           status	equ	0xFD8
 13792                           
 13793 ;; *************** function _oled_writeCommand *****************
 13794 ;; Defined at:
 13795 ;;		line 401 in file "../Includes/Drivers/SSD1306oLED.c"
 13796 ;; Parameters:    Size  Location     Type
 13797 ;;  command         1    wreg     unsigned char 
 13798 ;; Auto vars:     Size  Location     Type
 13799 ;;  command         1    1[BANK0 ] unsigned char 
 13800 ;; Return value:  Size  Location     Type
 13801 ;;                  1    wreg      void 
 13802 ;; Registers used:
 13803 ;;		wreg, status,2, cstack
 13804 ;; Tracked objects:
 13805 ;;		On entry : 0/0
 13806 ;;		On exit  : 0/0
 13807 ;;		Unchanged: 0/0
 13808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13809 ;;      Params:         0       0       0       0       0       0       0       0       0
 13810 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13811 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13812 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13813 ;;Total ram usage:        1 bytes
 13814 ;; Hardware stack levels used:    1
 13815 ;; Hardware stack levels required when called:   12
 13816 ;; This function calls:
 13817 ;;		_SPI_Exchange8bit
 13818 ;; This function is called by:
 13819 ;;		_Set_Page_Address
 13820 ;;		_Set_Column_Address
 13821 ;;		_oled_devInit
 13822 ;;		_oled_setDisplay
 13823 ;;		_oled_displayOff
 13824 ;; This function uses a non-reentrant model
 13825 ;;
 13826                           
 13827                           	psect	text56
 13828  003B44                     __ptext56:
 13829                           	opt stack 0
 13830  003B44                     _oled_writeCommand:
 13831                           	opt stack 15
 13832                           
 13833                           ;incstack = 0
 13834                           ;oled_writeCommand@command stored from wreg
 13835  003B44  0100               	movlb	0	; () banked
 13836  003B46  6F61               	movwf	oled_writeCommand@command& (0+255),b
 13837                           
 13838                           ;SSD1306oLED.c: 403: LATBbits.LATB5 = 0;
 13839  003B48  9A8A               	bcf	3978,5,c	;volatile
 13840                           
 13841                           ;SSD1306oLED.c: 404: SPI_Exchange8bit(command);
 13842  003B4A  5161               	movf	oled_writeCommand@command& (0+255),w,b
 13843  003B4C  EFC3  F01D         	goto	_SPI_Exchange8bit
 13844  003B50                     __end_of_oled_writeCommand:
 13845                           	opt stack 0
 13846                           tblptru	equ	0xFF8
 13847                           tblptrh	equ	0xFF7
 13848                           tblptrl	equ	0xFF6
 13849                           tablat	equ	0xFF5
 13850                           prodh	equ	0xFF4
 13851                           prodl	equ	0xFF3
 13852                           intcon	equ	0xFF2
 13853                           postinc0	equ	0xFEE
 13854                           wreg	equ	0xFE8
 13855                           indf1	equ	0xFE7
 13856                           fsr1h	equ	0xFE2
 13857                           fsr1l	equ	0xFE1
 13858                           indf2	equ	0xFDF
 13859                           postinc2	equ	0xFDE
 13860                           postdec2	equ	0xFDD
 13861                           fsr2h	equ	0xFDA
 13862                           fsr2l	equ	0xFD9
 13863                           status	equ	0xFD8
 13864                           
 13865 ;; *************** function _SPI_Exchange8bit *****************
 13866 ;; Defined at:
 13867 ;;		line 81 in file "../Includes/MccGenerated/spi.c"
 13868 ;; Parameters:    Size  Location     Type
 13869 ;;  data            1    wreg     unsigned char 
 13870 ;; Auto vars:     Size  Location     Type
 13871 ;;  data            1    0[BANK0 ] unsigned char 
 13872 ;; Return value:  Size  Location     Type
 13873 ;;                  1    wreg      unsigned char 
 13874 ;; Registers used:
 13875 ;;		wreg, status,2
 13876 ;; Tracked objects:
 13877 ;;		On entry : F/0
 13878 ;;		On exit  : 0/0
 13879 ;;		Unchanged: 0/0
 13880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13881 ;;      Params:         0       0       0       0       0       0       0       0       0
 13882 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13883 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13884 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13885 ;;Total ram usage:        1 bytes
 13886 ;; Hardware stack levels used:    1
 13887 ;; Hardware stack levels required when called:   11
 13888 ;; This function calls:
 13889 ;;		Nothing
 13890 ;; This function is called by:
 13891 ;;		_oled_writeCommand
 13892 ;;		_oled_writeData
 13893 ;; This function uses a non-reentrant model
 13894 ;;
 13895                           
 13896                           	psect	text57
 13897  003B86                     __ptext57:
 13898                           	opt stack 0
 13899  003B86                     _SPI_Exchange8bit:
 13900                           	opt stack 16
 13901                           
 13902                           ;incstack = 0
 13903                           ;SPI_Exchange8bit@data stored from wreg
 13904  003B86  6F60               	movwf	SPI_Exchange8bit@data& (0+255),b
 13905                           
 13906                           ;spi.c: 84: SSP1CON1bits.WCOL = 0;
 13907  003B88  9EC6               	bcf	4038,7,c	;volatile
 13908                           
 13909                           ;spi.c: 86: SSPBUF = data;
 13910  003B8A  C060  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 13911  003B8E                     l1085:
 13912  003B8E  A0C7               	btfss	4039,0,c	;volatile
 13913  003B90  D7FE               	goto	l1085
 13914                           
 13915                           ;spi.c: 90: }
 13916                           ;spi.c: 92: return (SSPBUF);
 13917  003B92  50C9               	movf	4041,w,c	;volatile
 13918  003B94  0012               	return		;funcret
 13919  003B96                     __end_of_SPI_Exchange8bit:
 13920                           	opt stack 0
 13921                           tblptru	equ	0xFF8
 13922                           tblptrh	equ	0xFF7
 13923                           tblptrl	equ	0xFF6
 13924                           tablat	equ	0xFF5
 13925                           prodh	equ	0xFF4
 13926                           prodl	equ	0xFF3
 13927                           intcon	equ	0xFF2
 13928                           postinc0	equ	0xFEE
 13929                           wreg	equ	0xFE8
 13930                           indf1	equ	0xFE7
 13931                           fsr1h	equ	0xFE2
 13932                           fsr1l	equ	0xFE1
 13933                           indf2	equ	0xFDF
 13934                           postinc2	equ	0xFDE
 13935                           postdec2	equ	0xFDD
 13936                           fsr2h	equ	0xFDA
 13937                           fsr2l	equ	0xFD9
 13938                           status	equ	0xFD8
 13939                           
 13940 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 13941 ;; Defined at:
 13942 ;;		line 125 in file "../Includes/Board/USBapp.c"
 13943 ;; Parameters:    Size  Location     Type
 13944 ;;		None
 13945 ;; Auto vars:     Size  Location     Type
 13946 ;;		None
 13947 ;; Return value:  Size  Location     Type
 13948 ;;                  1    wreg      void 
 13949 ;; Registers used:
 13950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13951 ;; Tracked objects:
 13952 ;;		On entry : F/1
 13953 ;;		On exit  : F/0
 13954 ;;		Unchanged: 0/0
 13955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13956 ;;      Params:         0       0       0       0       0       0       0       0       0
 13957 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13958 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13959 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13960 ;;Total ram usage:        1 bytes
 13961 ;; Hardware stack levels used:    1
 13962 ;; Hardware stack levels required when called:   13
 13963 ;; This function calls:
 13964 ;;		_CDCTxService
 13965 ;;		_EUSART_Read
 13966 ;;		_EUSART_Write
 13967 ;;		_MOTEapp_setResponseReady
 13968 ;;		_USBapp_getrxByteFlag
 13969 ;;		_getsUSBUSART
 13970 ;;		_putUSBUSART
 13971 ;; This function is called by:
 13972 ;;		_USBapp_Handler
 13973 ;; This function uses a non-reentrant model
 13974 ;;
 13975                           
 13976                           	psect	text58
 13977  00519E                     __ptext58:
 13978                           	opt stack 0
 13979  00519E                     _USBapp_DeviceCdcEmulatorHandler:
 13980                           	opt stack 16
 13981                           
 13982                           ; BSR set to: 1
 13983                           ;USBapp.c: 128: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13984                           
 13985                           ;incstack = 0
 13986  00519E  0E1F               	movlw	31
 13987  0051A0  0100               	movlb	0	; () banked
 13988  0051A2  65F4               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 13989  0051A4  0C1F               	retlw	31
 13990                           
 13991                           ; BSR set to: 0
 13992  0051A6  B260               	btfsc	3936,1,c	;volatile
 13993  0051A8  0C1F               	retlw	31
 13994                           
 13995                           ; BSR set to: 0
 13996                           ;USBapp.c: 131: if (RS232_Out_Data_Rdy == 0)
 13997  0051AA  501B               	movf	_RS232_Out_Data_Rdy,w,c
 13998  0051AC  E10E               	bnz	l714
 13999                           
 14000                           ; BSR set to: 0
 14001                           ;USBapp.c: 132: {
 14002                           ;USBapp.c: 133: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 14003  0051AE  0E56               	movlw	low _USB_Buffer
 14004  0051B0  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 14005  0051B2  0E01               	movlw	high _USB_Buffer
 14006  0051B4  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14007  0051B6  0E40               	movlw	64
 14008  0051B8  6F69               	movwf	getsUSBUSART@len& (0+255),b
 14009  0051BA  EC7D  F026         	call	_getsUSBUSART	;wreg free
 14010  0051BE  6E19               	movwf	_LastRS232Out,c
 14011                           
 14012                           ; BSR set to: 0
 14013                           ;USBapp.c: 134: if(LastRS232Out > 0)
 14014  0051C0  5019               	movf	_LastRS232Out,w,c
 14015  0051C2  E003               	bz	l714
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;USBapp.c: 135: {
 14019                           ;USBapp.c: 136: RS232_Out_Data_Rdy = 1;
 14020  0051C4  0E01               	movlw	1
 14021  0051C6  6E1B               	movwf	_RS232_Out_Data_Rdy,c
 14022                           
 14023                           ; BSR set to: 0
 14024                           ;USBapp.c: 137: RS232cp = 0;
 14025  0051C8  6A1C               	clrf	_RS232cp,c
 14026  0051CA                     l714:
 14027                           
 14028                           ; BSR set to: 0
 14029                           ;USBapp.c: 138: }
 14030                           ;USBapp.c: 139: }
 14031                           ;USBapp.c: 142: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 14032  0051CA  501B               	movf	_RS232_Out_Data_Rdy,w,c
 14033  0051CC  E010               	bz	l11075
 14034                           
 14035                           ; BSR set to: 0
 14036  0051CE  A2AC               	btfss	4012,1,c	;volatile
 14037  0051D0  D00E               	goto	l11075
 14038                           
 14039                           ; BSR set to: 0
 14040                           ;USBapp.c: 143: {
 14041                           ;USBapp.c: 145: EUSART_Write(USB_Buffer[RS232cp]);
 14042  0051D2  0E56               	movlw	low _USB_Buffer
 14043  0051D4  241C               	addwf	_RS232cp,w,c
 14044  0051D6  6ED9               	movwf	fsr2l,c
 14045  0051D8  6ADA               	clrf	fsr2h,c
 14046  0051DA  0E01               	movlw	high _USB_Buffer
 14047  0051DC  22DA               	addwfc	fsr2h,f,c
 14048  0051DE  50DF               	movf	indf2,w,c
 14049  0051E0  ECFB  F01F         	call	_EUSART_Write
 14050                           
 14051                           ;USBapp.c: 146: ++RS232cp;
 14052  0051E4  2A1C               	incf	_RS232cp,f,c
 14053                           
 14054                           ;USBapp.c: 147: if (RS232cp == LastRS232Out)
 14055  0051E6  5019               	movf	_LastRS232Out,w,c
 14056  0051E8  181C               	xorwf	_RS232cp,w,c
 14057  0051EA  E101               	bnz	l11075
 14058                           
 14059                           ;USBapp.c: 148: RS232_Out_Data_Rdy = 0;
 14060  0051EC  6A1B               	clrf	_RS232_Out_Data_Rdy,c
 14061  0051EE                     l11075:
 14062                           
 14063                           ;USBapp.c: 149: }
 14064                           ;USBapp.c: 152: if ((eusartRxCount))
 14065  0051EE  5022               	movf	_eusartRxCount,w,c	;volatile
 14066  0051F0  E01C               	bz	l11091
 14067                           
 14068                           ;USBapp.c: 153: {
 14069                           ;USBapp.c: 154: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 14070  0051F2  EC84  F01D         	call	_USBapp_getrxByteFlag	;wreg free
 14071  0051F6  0900               	iorlw	0
 14072  0051F8  E018               	bz	l11091
 14073  0051FA  0E3F               	movlw	63
 14074  0051FC  601A               	cpfslt	_NextUSBOut,c
 14075  0051FE  D015               	goto	l11091
 14076                           
 14077                           ;USBapp.c: 155: {
 14078                           ;USBapp.c: 156: __nop();
 14079  005200  F000               	nop	
 14080                           
 14081                           ;USBapp.c: 157: USB_Buffer[NextUSBOut] = EUSART_Read();
 14082  005202  ECE1  F01F         	call	_EUSART_Read	;wreg free
 14083  005206  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 14084  005208  0E56               	movlw	low _USB_Buffer
 14085  00520A  241A               	addwf	_NextUSBOut,w,c
 14086  00520C  6ED9               	movwf	fsr2l,c
 14087  00520E  6ADA               	clrf	fsr2h,c
 14088  005210  0E01               	movlw	high _USB_Buffer
 14089  005212  22DA               	addwfc	fsr2h,f,c
 14090  005214  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 14091                           
 14092                           ; BSR set to: 0
 14093                           ;USBapp.c: 158: ++NextUSBOut;
 14094  005218  2A1A               	incf	_NextUSBOut,f,c
 14095                           
 14096                           ; BSR set to: 0
 14097                           ;USBapp.c: 159: USB_Buffer[NextUSBOut] = 0;
 14098  00521A  0E56               	movlw	low _USB_Buffer
 14099  00521C  241A               	addwf	_NextUSBOut,w,c
 14100  00521E  6ED9               	movwf	fsr2l,c
 14101  005220  6ADA               	clrf	fsr2h,c
 14102  005222  0E01               	movlw	high _USB_Buffer
 14103  005224  22DA               	addwfc	fsr2h,f,c
 14104  005226  6ADF               	clrf	indf2,c
 14105                           
 14106                           ; BSR set to: 0
 14107                           ;USBapp.c: 160: rxByteFlag = 0;
 14108  005228  6A28               	clrf	_rxByteFlag,c	;volatile
 14109  00522A                     l11091:
 14110                           
 14111                           ;USBapp.c: 161: }
 14112                           ;USBapp.c: 162: }
 14113                           ;USBapp.c: 166: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 14114  00522A  501F               	movf	_cdc_trf_state,w,c
 14115  00522C  E002 EF68  F02E    	bnz	_CDCTxService
 14116  005232  501A               	movf	_NextUSBOut,w,c
 14117  005234  E102 EF68  F02E    	bz	_CDCTxService
 14118                           
 14119                           ;USBapp.c: 167: {
 14120                           ;USBapp.c: 168: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 14121  00523A  0E56               	movlw	low _USB_Buffer
 14122  00523C  0100               	movlb	0	; () banked
 14123  00523E  6F60               	movwf	putUSBUSART@data& (0+255),b
 14124  005240  0E01               	movlw	high _USB_Buffer
 14125  005242  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 14126  005244  C01A  F062         	movff	_NextUSBOut,putUSBUSART@length
 14127  005248  EC4D  F01E         	call	_putUSBUSART	;wreg free
 14128                           
 14129                           ;USBapp.c: 169: MOTEapp_setResponseReady();
 14130  00524C  EC7C  F01D         	call	_MOTEapp_setResponseReady	;wreg free
 14131                           
 14132                           ;USBapp.c: 170: NextUSBOut = 0;
 14133  005250  6A1A               	clrf	_NextUSBOut,c
 14134                           
 14135                           ;USBapp.c: 171: }
 14136                           ;USBapp.c: 173: CDCTxService();
 14137  005252  EF68  F02E         	goto	_CDCTxService	;wreg free
 14138  005256                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 14139                           	opt stack 0
 14140                           tblptru	equ	0xFF8
 14141                           tblptrh	equ	0xFF7
 14142                           tblptrl	equ	0xFF6
 14143                           tablat	equ	0xFF5
 14144                           prodh	equ	0xFF4
 14145                           prodl	equ	0xFF3
 14146                           intcon	equ	0xFF2
 14147                           postinc0	equ	0xFEE
 14148                           wreg	equ	0xFE8
 14149                           indf1	equ	0xFE7
 14150                           fsr1h	equ	0xFE2
 14151                           fsr1l	equ	0xFE1
 14152                           indf2	equ	0xFDF
 14153                           postinc2	equ	0xFDE
 14154                           postdec2	equ	0xFDD
 14155                           fsr2h	equ	0xFDA
 14156                           fsr2l	equ	0xFD9
 14157                           status	equ	0xFD8
 14158                           
 14159 ;; *************** function _putUSBUSART *****************
 14160 ;; Defined at:
 14161 ;;		line 503 in file "../Includes/Usb/framework/usb_device_cdc.c"
 14162 ;; Parameters:    Size  Location     Type
 14163 ;;  data            2    0[BANK0 ] PTR unsigned char 
 14164 ;;		 -> USB_Buffer(64), 
 14165 ;;  length          1    2[BANK0 ] unsigned char 
 14166 ;; Auto vars:     Size  Location     Type
 14167 ;;		None
 14168 ;; Return value:  Size  Location     Type
 14169 ;;                  1    wreg      void 
 14170 ;; Registers used:
 14171 ;;		wreg, status,2, status,0
 14172 ;; Tracked objects:
 14173 ;;		On entry : F/0
 14174 ;;		On exit  : E/0
 14175 ;;		Unchanged: 0/0
 14176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14177 ;;      Params:         0       3       0       0       0       0       0       0       0
 14178 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14179 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14180 ;;      Totals:         0       3       0       0       0       0       0       0       0
 14181 ;;Total ram usage:        3 bytes
 14182 ;; Hardware stack levels used:    1
 14183 ;; Hardware stack levels required when called:   11
 14184 ;; This function calls:
 14185 ;;		Nothing
 14186 ;; This function is called by:
 14187 ;;		_USBapp_DeviceCdcEmulatorHandler
 14188 ;; This function uses a non-reentrant model
 14189 ;;
 14190                           
 14191                           	psect	text59
 14192  003C9A                     __ptext59:
 14193                           	opt stack 0
 14194  003C9A                     _putUSBUSART:
 14195                           	opt stack 17
 14196                           
 14197                           ; BSR set to: 0
 14198                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 14199                           
 14200                           ; BSR set to: 0
 14201                           ;incstack = 0
 14202  003C9A  94A3               	bcf	4003,2,c	;volatile
 14203                           
 14204                           ; BSR set to: 0
 14205                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 14206  003C9C  501F               	movf	_cdc_trf_state,w,c
 14207  003C9E  E10A               	bnz	l10135
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;usb_device_cdc.c: 530: {
 14211                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 14212  003CA0  C060  F12B         	movff	putUSBUSART@data,_pCDCSrc
 14213  003CA4  C061  F12C         	movff	putUSBUSART@data+1,_pCDCSrc+1
 14214                           
 14215                           ; BSR set to: 0
 14216  003CA8  C062  F0F7         	movff	putUSBUSART@length,_cdc_tx_len
 14217                           
 14218                           ; BSR set to: 0
 14219  003CAC  0E01               	movlw	1
 14220  003CAE  0101               	movlb	1	; () banked
 14221  003CB0  6F4D               	movwf	_cdc_mem_type& (0+255),b
 14222                           
 14223                           ; BSR set to: 1
 14224  003CB2  6E1F               	movwf	_cdc_trf_state,c
 14225  003CB4                     l10135:
 14226                           
 14227                           ;usb_device_cdc.c: 532: }
 14228                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 14229  003CB4  84A3               	bsf	4003,2,c	;volatile
 14230  003CB6  0012               	return		;funcret
 14231  003CB8                     __end_of_putUSBUSART:
 14232                           	opt stack 0
 14233                           tblptru	equ	0xFF8
 14234                           tblptrh	equ	0xFF7
 14235                           tblptrl	equ	0xFF6
 14236                           tablat	equ	0xFF5
 14237                           prodh	equ	0xFF4
 14238                           prodl	equ	0xFF3
 14239                           intcon	equ	0xFF2
 14240                           postinc0	equ	0xFEE
 14241                           wreg	equ	0xFE8
 14242                           indf1	equ	0xFE7
 14243                           fsr1h	equ	0xFE2
 14244                           fsr1l	equ	0xFE1
 14245                           indf2	equ	0xFDF
 14246                           postinc2	equ	0xFDE
 14247                           postdec2	equ	0xFDD
 14248                           fsr2h	equ	0xFDA
 14249                           fsr2l	equ	0xFD9
 14250                           status	equ	0xFD8
 14251                           
 14252 ;; *************** function _getsUSBUSART *****************
 14253 ;; Defined at:
 14254 ;;		line 432 in file "../Includes/Usb/framework/usb_device_cdc.c"
 14255 ;; Parameters:    Size  Location     Type
 14256 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 14257 ;;		 -> USB_Buffer(64), 
 14258 ;;  len             1    9[BANK0 ] unsigned char 
 14259 ;; Auto vars:     Size  Location     Type
 14260 ;;		None
 14261 ;; Return value:  Size  Location     Type
 14262 ;;                  1    wreg      unsigned char 
 14263 ;; Registers used:
 14264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14265 ;; Tracked objects:
 14266 ;;		On entry : F/0
 14267 ;;		On exit  : F/0
 14268 ;;		Unchanged: 0/0
 14269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14270 ;;      Params:         0       3       0       0       0       0       0       0       0
 14271 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14272 ;;      Temps:          0       1       0       0       0       0       0       0       0
 14273 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14274 ;;Total ram usage:        6 bytes
 14275 ;; Hardware stack levels used:    1
 14276 ;; Hardware stack levels required when called:   12
 14277 ;; This function calls:
 14278 ;;		_USBTransferOnePacket
 14279 ;; This function is called by:
 14280 ;;		_USBapp_DeviceCdcEmulatorHandler
 14281 ;; This function uses a non-reentrant model
 14282 ;;
 14283                           
 14284                           	psect	text60
 14285  004CFA                     __ptext60:
 14286                           	opt stack 0
 14287  004CFA                     _getsUSBUSART:
 14288                           	opt stack 16
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 14292                           
 14293                           ;incstack = 0
 14294  004CFA  6BF6               	clrf	_cdc_rx_len& (0+255),b
 14295                           
 14296                           ; BSR set to: 0
 14297                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 14298  004CFC  0101               	movlb	1	; () banked
 14299  004CFE  5133               	movf	_CDCDataOutHandle& (0+255),w,b
 14300  004D00  1134               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 14301  004D02  E00A               	bz	l1768
 14302                           
 14303                           ; BSR set to: 1
 14304  004D04  C133  FFD9         	movff	_CDCDataOutHandle,fsr2l
 14305  004D08  C134  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 14306  004D0C  0E01               	movlw	1
 14307  004D0E  AEDF               	btfss	indf2,7,c
 14308  004D10  0E00               	movlw	0
 14309  004D12  0100               	movlb	0	; () banked
 14310  004D14  6F6B               	movwf	_getsUSBUSART$5663& (0+255),b
 14311  004D16  D002               	goto	L22
 14312  004D18                     l1768:
 14313                           
 14314                           ; BSR set to: 1
 14315  004D18  0100               	movlb	0	; () banked
 14316  004D1A  6B6B               	clrf	_getsUSBUSART$5663& (0+255),b
 14317  004D1C                     L22:
 14318  004D1C  6B6C               	clrf	(_getsUSBUSART$5663+1)& (0+255),b
 14319                           
 14320                           ; BSR set to: 0
 14321  004D1E  516B               	movf	_getsUSBUSART$5663& (0+255),w,b
 14322  004D20  116C               	iorwf	(_getsUSBUSART$5663+1)& (0+255),w,b
 14323  004D22  E138               	bnz	l10115
 14324                           
 14325                           ; BSR set to: 0
 14326                           ;usb_device_cdc.c: 437: {
 14327                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 14328  004D24  0101               	movlb	1	; () banked
 14329  004D26  EE20 F001          	lfsr	2,1
 14330  004D2A  5133               	movf	_CDCDataOutHandle& (0+255),w,b
 14331  004D2C  26D9               	addwf	fsr2l,f,c
 14332  004D2E  5134               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 14333  004D30  22DA               	addwfc	fsr2h,f,c
 14334  004D32  0100               	movlb	0	; () banked
 14335  004D34  5169               	movf	getsUSBUSART@len& (0+255),w,b
 14336  004D36  5CDE               	subwf	postinc2,w,c
 14337  004D38  E20A               	bc	l10105
 14338                           
 14339                           ; BSR set to: 0
 14340                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 14341  004D3A  0101               	movlb	1	; () banked
 14342  004D3C  EE20 F001          	lfsr	2,1
 14343  004D40  5133               	movf	_CDCDataOutHandle& (0+255),w,b
 14344  004D42  26D9               	addwf	fsr2l,f,c
 14345  004D44  5134               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 14346  004D46  22DA               	addwfc	fsr2h,f,c
 14347  004D48  50DF               	movf	indf2,w,c
 14348  004D4A  0100               	movlb	0	; () banked
 14349  004D4C  6F69               	movwf	getsUSBUSART@len& (0+255),b
 14350  004D4E                     l10105:
 14351                           
 14352                           ; BSR set to: 0
 14353                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 14354  004D4E  6BF6               	clrf	_cdc_rx_len& (0+255),b
 14355  004D50  D00F               	goto	l10111
 14356  004D52                     l10107:
 14357                           
 14358                           ; BSR set to: 0
 14359                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 14360  004D52  0E40               	movlw	64
 14361  004D54  25F6               	addwf	_cdc_rx_len& (0+255),w,b
 14362  004D56  6ED9               	movwf	fsr2l,c
 14363  004D58  6ADA               	clrf	fsr2h,c
 14364  004D5A  0E05               	movlw	5
 14365  004D5C  22DA               	addwfc	fsr2h,f,c
 14366  004D5E  51F6               	movf	_cdc_rx_len& (0+255),w,b
 14367  004D60  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 14368  004D62  6EE1               	movwf	fsr1l,c
 14369  004D64  0E00               	movlw	0
 14370  004D66  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 14371  004D68  6EE2               	movwf	fsr1h,c
 14372  004D6A  CFDF FFE7          	movff	indf2,indf1
 14373                           
 14374                           ; BSR set to: 0
 14375  004D6E  2BF6               	incf	_cdc_rx_len& (0+255),f,b
 14376  004D70                     l10111:
 14377                           
 14378                           ; BSR set to: 0
 14379  004D70  5169               	movf	getsUSBUSART@len& (0+255),w,b
 14380  004D72  5DF6               	subwf	_cdc_rx_len& (0+255),w,b
 14381  004D74  E3EE               	bnc	l10107
 14382                           
 14383                           ; BSR set to: 0
 14384                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 14385  004D76  0E00               	movlw	0
 14386  004D78  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 14387  004D7A  0E40               	movlw	64
 14388  004D7C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 14389  004D7E  0E05               	movlw	5
 14390  004D80  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14391  004D82  0E40               	movlw	64
 14392  004D84  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 14393  004D86  0E02               	movlw	2
 14394  004D88  ECC5  F027         	call	_USBTransferOnePacket
 14395  004D8C  C060  F133         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 14396  004D90  C061  F134         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 14397  004D94                     l10115:
 14398                           
 14399                           ; BSR set to: 0
 14400                           ;usb_device_cdc.c: 457: }
 14401                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 14402  004D94  51F6               	movf	_cdc_rx_len& (0+255),w,b
 14403                           
 14404                           ; BSR set to: 0
 14405  004D96  0012               	return		;funcret
 14406  004D98                     __end_of_getsUSBUSART:
 14407                           	opt stack 0
 14408                           tblptru	equ	0xFF8
 14409                           tblptrh	equ	0xFF7
 14410                           tblptrl	equ	0xFF6
 14411                           tablat	equ	0xFF5
 14412                           prodh	equ	0xFF4
 14413                           prodl	equ	0xFF3
 14414                           intcon	equ	0xFF2
 14415                           postinc0	equ	0xFEE
 14416                           wreg	equ	0xFE8
 14417                           indf1	equ	0xFE7
 14418                           fsr1h	equ	0xFE2
 14419                           fsr1l	equ	0xFE1
 14420                           indf2	equ	0xFDF
 14421                           postinc2	equ	0xFDE
 14422                           postdec2	equ	0xFDD
 14423                           fsr2h	equ	0xFDA
 14424                           fsr2l	equ	0xFD9
 14425                           status	equ	0xFD8
 14426                           
 14427 ;; *************** function _USBapp_getrxByteFlag *****************
 14428 ;; Defined at:
 14429 ;;		line 231 in file "../Includes/Board/USBapp.c"
 14430 ;; Parameters:    Size  Location     Type
 14431 ;;		None
 14432 ;; Auto vars:     Size  Location     Type
 14433 ;;		None
 14434 ;; Return value:  Size  Location     Type
 14435 ;;                  1    wreg      unsigned char 
 14436 ;; Registers used:
 14437 ;;		wreg, status,2
 14438 ;; Tracked objects:
 14439 ;;		On entry : 0/0
 14440 ;;		On exit  : 0/0
 14441 ;;		Unchanged: 0/0
 14442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14443 ;;      Params:         0       0       0       0       0       0       0       0       0
 14444 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14445 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14446 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14447 ;;Total ram usage:        0 bytes
 14448 ;; Hardware stack levels used:    1
 14449 ;; Hardware stack levels required when called:   11
 14450 ;; This function calls:
 14451 ;;		Nothing
 14452 ;; This function is called by:
 14453 ;;		_USBapp_DeviceCdcEmulatorHandler
 14454 ;; This function uses a non-reentrant model
 14455 ;;
 14456                           
 14457                           	psect	text61
 14458  003B08                     __ptext61:
 14459                           	opt stack 0
 14460  003B08                     _USBapp_getrxByteFlag:
 14461                           	opt stack 17
 14462                           
 14463                           ;USBapp.c: 233: return rxByteFlag;
 14464                           
 14465                           ; BSR set to: 0
 14466                           ;incstack = 0
 14467  003B08  5028               	movf	_rxByteFlag,w,c	;volatile
 14468  003B0A  0012               	return		;funcret
 14469  003B0C                     __end_of_USBapp_getrxByteFlag:
 14470                           	opt stack 0
 14471                           tblptru	equ	0xFF8
 14472                           tblptrh	equ	0xFF7
 14473                           tblptrl	equ	0xFF6
 14474                           tablat	equ	0xFF5
 14475                           prodh	equ	0xFF4
 14476                           prodl	equ	0xFF3
 14477                           intcon	equ	0xFF2
 14478                           postinc0	equ	0xFEE
 14479                           wreg	equ	0xFE8
 14480                           indf1	equ	0xFE7
 14481                           fsr1h	equ	0xFE2
 14482                           fsr1l	equ	0xFE1
 14483                           indf2	equ	0xFDF
 14484                           postinc2	equ	0xFDE
 14485                           postdec2	equ	0xFDD
 14486                           fsr2h	equ	0xFDA
 14487                           fsr2l	equ	0xFD9
 14488                           status	equ	0xFD8
 14489                           
 14490 ;; *************** function _MOTEapp_setResponseReady *****************
 14491 ;; Defined at:
 14492 ;;		line 949 in file "../Includes/Board/MOTEapp.c"
 14493 ;; Parameters:    Size  Location     Type
 14494 ;;		None
 14495 ;; Auto vars:     Size  Location     Type
 14496 ;;		None
 14497 ;; Return value:  Size  Location     Type
 14498 ;;                  1    wreg      void 
 14499 ;; Registers used:
 14500 ;;		None
 14501 ;; Tracked objects:
 14502 ;;		On entry : E/0
 14503 ;;		On exit  : E/0
 14504 ;;		Unchanged: E/0
 14505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14506 ;;      Params:         0       0       0       0       0       0       0       0       0
 14507 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14508 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14509 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14510 ;;Total ram usage:        0 bytes
 14511 ;; Hardware stack levels used:    1
 14512 ;; Hardware stack levels required when called:   11
 14513 ;; This function calls:
 14514 ;;		Nothing
 14515 ;; This function is called by:
 14516 ;;		_USBapp_DeviceCdcEmulatorHandler
 14517 ;; This function uses a non-reentrant model
 14518 ;;
 14519                           
 14520                           	psect	text62
 14521  003AF8                     __ptext62:
 14522                           	opt stack 0
 14523  003AF8                     _MOTEapp_setResponseReady:
 14524                           	opt stack 17
 14525                           
 14526                           ;incstack = 0
 14527  003AF8  0012               	return		;funcret
 14528  003AFA                     __end_of_MOTEapp_setResponseReady:
 14529                           	opt stack 0
 14530                           tblptru	equ	0xFF8
 14531                           tblptrh	equ	0xFF7
 14532                           tblptrl	equ	0xFF6
 14533                           tablat	equ	0xFF5
 14534                           prodh	equ	0xFF4
 14535                           prodl	equ	0xFF3
 14536                           intcon	equ	0xFF2
 14537                           postinc0	equ	0xFEE
 14538                           wreg	equ	0xFE8
 14539                           indf1	equ	0xFE7
 14540                           fsr1h	equ	0xFE2
 14541                           fsr1l	equ	0xFE1
 14542                           indf2	equ	0xFDF
 14543                           postinc2	equ	0xFDE
 14544                           postdec2	equ	0xFDD
 14545                           fsr2h	equ	0xFDA
 14546                           fsr2l	equ	0xFD9
 14547                           status	equ	0xFD8
 14548                           
 14549 ;; *************** function _EUSART_Write *****************
 14550 ;; Defined at:
 14551 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;  txData          1    wreg     unsigned char 
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;  txData          1    0[BANK0 ] unsigned char 
 14556 ;; Return value:  Size  Location     Type
 14557 ;;                  1    wreg      void 
 14558 ;; Registers used:
 14559 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14565 ;;      Params:         0       0       0       0       0       0       0       0       0
 14566 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14567 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14568 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14569 ;;Total ram usage:        1 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; Hardware stack levels required when called:   11
 14572 ;; This function calls:
 14573 ;;		Nothing
 14574 ;; This function is called by:
 14575 ;;		_EndLine
 14576 ;;		_sendCommand
 14577 ;;		_sendDataCommand
 14578 ;;		_USBapp_DeviceCdcEmulatorHandler
 14579 ;; This function uses a non-reentrant model
 14580 ;;
 14581                           
 14582                           	psect	text63
 14583  003FF6                     __ptext63:
 14584                           	opt stack 0
 14585  003FF6                     _EUSART_Write:
 14586                           	opt stack 15
 14587                           
 14588                           ;incstack = 0
 14589                           ;EUSART_Write@txData stored from wreg
 14590  003FF6  0100               	movlb	0	; () banked
 14591  003FF8  6F60               	movwf	EUSART_Write@txData& (0+255),b
 14592  003FFA                     l9245:
 14593  003FFA  5023               	movf	_eusartTxBufferRemaining,w,c	;volatile
 14594  003FFC  E0FE               	bz	l9245
 14595                           
 14596                           ;eusart.c: 143: }
 14597                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 14598  003FFE  B89D               	btfsc	3997,4,c	;volatile
 14599  004000  D003               	goto	l938
 14600                           
 14601                           ;eusart.c: 146: {
 14602                           ;eusart.c: 147: TXREG = txData;
 14603  004002  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 14604                           
 14605                           ;eusart.c: 148: }
 14606  004006  D00F               	goto	l9259
 14607  004008                     l938:
 14608                           
 14609                           ;eusart.c: 149: else
 14610                           ;eusart.c: 150: {
 14611                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 14612  004008  989D               	bcf	3997,4,c	;volatile
 14613                           
 14614                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 14615  00400A  0E40               	movlw	low _eusartTxBuffer
 14616  00400C  2424               	addwf	_eusartTxHead,w,c
 14617  00400E  6ED9               	movwf	fsr2l,c
 14618  004010  6ADA               	clrf	fsr2h,c
 14619  004012  0E02               	movlw	high _eusartTxBuffer
 14620  004014  22DA               	addwfc	fsr2h,f,c
 14621  004016  C060  FFDF         	movff	EUSART_Write@txData,indf2
 14622  00401A  2A24               	incf	_eusartTxHead,f,c
 14623                           
 14624                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 14625  00401C  0E3F               	movlw	63
 14626  00401E  6424               	cpfsgt	_eusartTxHead,c
 14627  004020  D001               	goto	l9257
 14628                           
 14629                           ;eusart.c: 154: {
 14630                           ;eusart.c: 155: eusartTxHead = 0;
 14631  004022  6A24               	clrf	_eusartTxHead,c
 14632  004024                     l9257:
 14633                           
 14634                           ;eusart.c: 156: }
 14635                           ;eusart.c: 157: eusartTxBufferRemaining--;
 14636  004024  0623               	decf	_eusartTxBufferRemaining,f,c	;volatile
 14637  004026                     l9259:
 14638                           
 14639                           ;eusart.c: 158: }
 14640                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 14641  004026  889D               	bsf	3997,4,c	;volatile
 14642  004028  0012               	return		;funcret
 14643  00402A                     __end_of_EUSART_Write:
 14644                           	opt stack 0
 14645                           tblptru	equ	0xFF8
 14646                           tblptrh	equ	0xFF7
 14647                           tblptrl	equ	0xFF6
 14648                           tablat	equ	0xFF5
 14649                           prodh	equ	0xFF4
 14650                           prodl	equ	0xFF3
 14651                           intcon	equ	0xFF2
 14652                           postinc0	equ	0xFEE
 14653                           wreg	equ	0xFE8
 14654                           indf1	equ	0xFE7
 14655                           fsr1h	equ	0xFE2
 14656                           fsr1l	equ	0xFE1
 14657                           indf2	equ	0xFDF
 14658                           postinc2	equ	0xFDE
 14659                           postdec2	equ	0xFDD
 14660                           fsr2h	equ	0xFDA
 14661                           fsr2l	equ	0xFD9
 14662                           status	equ	0xFD8
 14663                           
 14664 ;; *************** function _EUSART_Read *****************
 14665 ;; Defined at:
 14666 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 14667 ;; Parameters:    Size  Location     Type
 14668 ;;		None
 14669 ;; Auto vars:     Size  Location     Type
 14670 ;;  readValue       1    0[BANK0 ] unsigned char 
 14671 ;; Return value:  Size  Location     Type
 14672 ;;                  1    wreg      unsigned char 
 14673 ;; Registers used:
 14674 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14675 ;; Tracked objects:
 14676 ;;		On entry : 0/0
 14677 ;;		On exit  : F/0
 14678 ;;		Unchanged: 0/0
 14679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14680 ;;      Params:         0       0       0       0       0       0       0       0       0
 14681 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14682 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14683 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14684 ;;Total ram usage:        1 bytes
 14685 ;; Hardware stack levels used:    1
 14686 ;; Hardware stack levels required when called:   11
 14687 ;; This function calls:
 14688 ;;		Nothing
 14689 ;; This function is called by:
 14690 ;;		_MOTEapp_getModemResponse
 14691 ;;		_USBapp_DeviceCdcEmulatorHandler
 14692 ;; This function uses a non-reentrant model
 14693 ;;
 14694                           
 14695                           	psect	text64
 14696  003FC2                     __ptext64:
 14697                           	opt stack 0
 14698  003FC2                     _EUSART_Read:
 14699                           	opt stack 14
 14700                           
 14701                           ;eusart.c: 121: while(0 == eusartRxCount)
 14702                           
 14703                           ;incstack = 0
 14704  003FC2  D001               	goto	l9263
 14705  003FC4                     l929:
 14706                           
 14707                           ;eusart.c: 122: {
 14708                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 14709  003FC4  8E89               	bsf	3977,7,c	;volatile
 14710  003FC6                     l9263:
 14711  003FC6  5022               	movf	_eusartRxCount,w,c	;volatile
 14712  003FC8  E0FD               	bz	l929
 14713                           
 14714                           ;eusart.c: 124: }
 14715                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 14716  003FCA  9A9D               	bcf	3997,5,c	;volatile
 14717                           
 14718                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 14719  003FCC  0E00               	movlw	low _eusartRxBuffer
 14720  003FCE  0101               	movlb	1	; () banked
 14721  003FD0  254F               	addwf	_eusartRxTail& (0+255),w,b
 14722  003FD2  6ED9               	movwf	fsr2l,c
 14723  003FD4  6ADA               	clrf	fsr2h,c
 14724  003FD6  0E02               	movlw	high _eusartRxBuffer
 14725  003FD8  22DA               	addwfc	fsr2h,f,c
 14726  003FDA  50DF               	movf	indf2,w,c
 14727  003FDC  0100               	movlb	0	; () banked
 14728  003FDE  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 14729                           
 14730                           ; BSR set to: 0
 14731  003FE0  0101               	movlb	1	; () banked
 14732  003FE2  2B4F               	incf	_eusartRxTail& (0+255),f,b
 14733                           
 14734                           ; BSR set to: 1
 14735                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 14736  003FE4  0E3F               	movlw	63
 14737  003FE6  654F               	cpfsgt	_eusartRxTail& (0+255),b
 14738  003FE8  D001               	goto	l9273
 14739                           
 14740                           ; BSR set to: 1
 14741                           ;eusart.c: 130: {
 14742                           ;eusart.c: 131: eusartRxTail = 0;
 14743  003FEA  6B4F               	clrf	_eusartRxTail& (0+255),b
 14744  003FEC                     l9273:
 14745                           
 14746                           ; BSR set to: 1
 14747                           ;eusart.c: 132: }
 14748                           ;eusart.c: 133: eusartRxCount--;
 14749  003FEC  0622               	decf	_eusartRxCount,f,c	;volatile
 14750                           
 14751                           ; BSR set to: 1
 14752                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 14753  003FEE  8A9D               	bsf	3997,5,c	;volatile
 14754                           
 14755                           ; BSR set to: 1
 14756                           ;eusart.c: 136: return readValue;
 14757  003FF0  0100               	movlb	0	; () banked
 14758  003FF2  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 14759                           
 14760                           ; BSR set to: 0
 14761  003FF4  0012               	return		;funcret
 14762  003FF6                     __end_of_EUSART_Read:
 14763                           	opt stack 0
 14764                           tblptru	equ	0xFF8
 14765                           tblptrh	equ	0xFF7
 14766                           tblptrl	equ	0xFF6
 14767                           tablat	equ	0xFF5
 14768                           prodh	equ	0xFF4
 14769                           prodl	equ	0xFF3
 14770                           intcon	equ	0xFF2
 14771                           postinc0	equ	0xFEE
 14772                           wreg	equ	0xFE8
 14773                           indf1	equ	0xFE7
 14774                           fsr1h	equ	0xFE2
 14775                           fsr1l	equ	0xFE1
 14776                           indf2	equ	0xFDF
 14777                           postinc2	equ	0xFDE
 14778                           postdec2	equ	0xFDD
 14779                           fsr2h	equ	0xFDA
 14780                           fsr2l	equ	0xFD9
 14781                           status	equ	0xFD8
 14782                           
 14783 ;; *************** function _CDCTxService *****************
 14784 ;; Defined at:
 14785 ;;		line 783 in file "../Includes/Usb/framework/usb_device_cdc.c"
 14786 ;; Parameters:    Size  Location     Type
 14787 ;;		None
 14788 ;; Auto vars:     Size  Location     Type
 14789 ;;  byte_to_send    1   10[BANK0 ] unsigned char 
 14790 ;;  i               1    9[BANK0 ] unsigned char 
 14791 ;; Return value:  Size  Location     Type
 14792 ;;                  1    wreg      void 
 14793 ;; Registers used:
 14794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14795 ;; Tracked objects:
 14796 ;;		On entry : 0/0
 14797 ;;		On exit  : F/0
 14798 ;;		Unchanged: 0/0
 14799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14800 ;;      Params:         0       0       0       0       0       0       0       0       0
 14801 ;;      Locals:         0       4       0       0       0       0       0       0       0
 14802 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14803 ;;      Totals:         0       4       0       0       0       0       0       0       0
 14804 ;;Total ram usage:        4 bytes
 14805 ;; Hardware stack levels used:    1
 14806 ;; Hardware stack levels required when called:   12
 14807 ;; This function calls:
 14808 ;;		_USBTransferOnePacket
 14809 ;; This function is called by:
 14810 ;;		_USBapp_DeviceCdcEmulatorHandler
 14811 ;; This function uses a non-reentrant model
 14812 ;;
 14813                           
 14814                           	psect	text65
 14815  005CD0                     __ptext65:
 14816                           	opt stack 0
 14817  005CD0                     _CDCTxService:
 14818                           	opt stack 16
 14819                           
 14820                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 14821                           ;usb_device_cdc.c: 786: uint8_t i;
 14822                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 14823                           
 14824                           ; BSR set to: 0
 14825                           ;incstack = 0
 14826  005CD0  94A3               	bcf	4003,2,c	;volatile
 14827                           
 14828                           ;usb_device_cdc.c: 790: {};
 14829                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 14830  005CD2  0101               	movlb	1	; () banked
 14831  005CD4  5131               	movf	_CDCDataInHandle& (0+255),w,b
 14832  005CD6  1132               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 14833  005CD8  E00A               	bz	l1798
 14834                           
 14835                           ; BSR set to: 1
 14836  005CDA  C131  FFD9         	movff	_CDCDataInHandle,fsr2l
 14837  005CDE  C132  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 14838  005CE2  0E01               	movlw	1
 14839  005CE4  AEDF               	btfss	indf2,7,c
 14840  005CE6  0E00               	movlw	0
 14841  005CE8  0100               	movlb	0	; () banked
 14842  005CEA  6F67               	movwf	_CDCTxService$5711& (0+255),b
 14843  005CEC  D002               	goto	L23
 14844  005CEE                     l1798:
 14845                           
 14846                           ; BSR set to: 1
 14847  005CEE  0100               	movlb	0	; () banked
 14848  005CF0  6B67               	clrf	_CDCTxService$5711& (0+255),b
 14849  005CF2                     L23:
 14850  005CF2  6B68               	clrf	(_CDCTxService$5711+1)& (0+255),b
 14851                           
 14852                           ; BSR set to: 0
 14853  005CF4  5167               	movf	_CDCTxService$5711& (0+255),w,b
 14854  005CF6  1168               	iorwf	(_CDCTxService$5711+1)& (0+255),w,b
 14855  005CF8  E002               	bz	l10147
 14856                           
 14857                           ; BSR set to: 0
 14858                           ;usb_device_cdc.c: 793: {
 14859                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 14860  005CFA  84A3               	bsf	4003,2,c	;volatile
 14861                           
 14862                           ;usb_device_cdc.c: 795: return;
 14863  005CFC  0012               	return	
 14864  005CFE                     l10147:
 14865                           
 14866                           ; BSR set to: 0
 14867                           ;usb_device_cdc.c: 796: }
 14868                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 14869  005CFE  0E03               	movlw	3
 14870  005D00  181F               	xorwf	_cdc_trf_state,w,c
 14871  005D02  E101               	bnz	l10151
 14872                           
 14873                           ; BSR set to: 0
 14874                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 14875  005D04  6A1F               	clrf	_cdc_trf_state,c
 14876  005D06                     l10151:
 14877                           
 14878                           ; BSR set to: 0
 14879                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 14880  005D06  501F               	movf	_cdc_trf_state,w,c
 14881  005D08  E102               	bnz	l10155
 14882                           
 14883                           ; BSR set to: 0
 14884                           ;usb_device_cdc.c: 810: {
 14885                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 14886  005D0A  84A3               	bsf	4003,2,c	;volatile
 14887                           
 14888                           ;usb_device_cdc.c: 812: return;
 14889  005D0C  0012               	return	
 14890  005D0E                     l10155:
 14891                           
 14892                           ; BSR set to: 0
 14893                           ;usb_device_cdc.c: 813: }
 14894                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 14895  005D0E  0E02               	movlw	2
 14896  005D10  181F               	xorwf	_cdc_trf_state,w,c
 14897  005D12  E110               	bnz	l10161
 14898                           
 14899                           ; BSR set to: 0
 14900                           ;usb_device_cdc.c: 819: {
 14901                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 14902  005D14  0E01               	movlw	1
 14903  005D16  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 14904  005D18  0E00               	movlw	0
 14905  005D1A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 14906  005D1C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14907  005D1E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 14908  005D20  0E02               	movlw	2
 14909  005D22  ECC5  F027         	call	_USBTransferOnePacket
 14910  005D26  C060  F131         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 14911  005D2A  C061  F132         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 14912                           
 14913                           ; BSR set to: 0
 14914                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 14915  005D2E  0E03               	movlw	3
 14916  005D30  6E1F               	movwf	_cdc_trf_state,c
 14917                           
 14918                           ;usb_device_cdc.c: 823: }
 14919  005D32  D055               	goto	l10205
 14920  005D34                     l10161:
 14921                           
 14922                           ; BSR set to: 0
 14923                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 14924  005D34  041F               	decf	_cdc_trf_state,w,c
 14925  005D36  E153               	bnz	l10205
 14926                           
 14927                           ; BSR set to: 0
 14928                           ;usb_device_cdc.c: 825: {
 14929                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 14930  005D38  0E40               	movlw	64
 14931  005D3A  65F7               	cpfsgt	_cdc_tx_len& (0+255),b
 14932  005D3C  D002               	goto	l1807
 14933                           
 14934                           ; BSR set to: 0
 14935                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 14936  005D3E  6F6A               	movwf	CDCTxService@byte_to_send& (0+255),b
 14937  005D40  D002               	goto	l10167
 14938  005D42                     l1807:
 14939                           
 14940                           ; BSR set to: 0
 14941                           ;usb_device_cdc.c: 831: else
 14942                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 14943  005D42  C0F7  F06A         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 14944  005D46                     l10167:
 14945                           
 14946                           ; BSR set to: 0
 14947                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 14948  005D46  516A               	movf	CDCTxService@byte_to_send& (0+255),w,b
 14949  005D48  5FF7               	subwf	_cdc_tx_len& (0+255),f,b
 14950                           
 14951                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 14952  005D4A  0E00               	movlw	0
 14953  005D4C  0101               	movlb	1	; () banked
 14954  005D4E  6F28               	movwf	_pCDCDst& (0+255),b
 14955  005D50  0E05               	movlw	5
 14956  005D52  6F29               	movwf	(_pCDCDst+1)& (0+255),b
 14957                           
 14958                           ; BSR set to: 1
 14959                           ;usb_device_cdc.c: 841: i = byte_to_send;
 14960  005D54  C06A  F069         	movff	CDCTxService@byte_to_send,CDCTxService@i
 14961                           
 14962                           ; BSR set to: 1
 14963                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 14964  005D58  514D               	movf	_cdc_mem_type& (0+255),w,b
 14965  005D5A  E012               	bz	l10183
 14966  005D5C  D026               	goto	l10193
 14967  005D5E                     l10175:
 14968                           
 14969                           ; BSR set to: 0
 14970                           ;usb_device_cdc.c: 845: {
 14971                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 14972  005D5E  C12B  FFD9         	movff	_pCDCSrc,fsr2l
 14973  005D62  C12C  FFDA         	movff	_pCDCSrc+1,fsr2h
 14974  005D66  C128  FFE1         	movff	_pCDCDst,fsr1l
 14975  005D6A  C129  FFE2         	movff	_pCDCDst+1,fsr1h
 14976  005D6E  CFDF FFE7          	movff	indf2,indf1
 14977                           
 14978                           ; BSR set to: 0
 14979                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 14980  005D72  0101               	movlb	1	; () banked
 14981  005D74  4B28               	infsnz	_pCDCDst& (0+255),f,b
 14982  005D76  2B29               	incf	(_pCDCDst+1)& (0+255),f,b
 14983                           
 14984                           ; BSR set to: 1
 14985                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 14986  005D78  4B2B               	infsnz	_pCDCSrc& (0+255),f,b
 14987  005D7A  2B2C               	incf	(_pCDCSrc+1)& (0+255),f,b
 14988                           
 14989                           ; BSR set to: 1
 14990                           ;usb_device_cdc.c: 849: i--;
 14991  005D7C  0100               	movlb	0	; () banked
 14992  005D7E  0769               	decf	CDCTxService@i& (0+255),f,b
 14993  005D80                     l10183:
 14994  005D80  0100               	movlb	0	; () banked
 14995  005D82  5169               	movf	CDCTxService@i& (0+255),w,b
 14996  005D84  E015               	bz	l10195
 14997  005D86  D7EB               	goto	l10175
 14998  005D88                     l10185:
 14999                           
 15000                           ; BSR set to: 0
 15001                           ;usb_device_cdc.c: 855: {
 15002                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 15003  005D88  C12B  FFD9         	movff	_pCDCSrc,fsr2l
 15004  005D8C  C12C  FFDA         	movff	_pCDCSrc+1,fsr2h
 15005  005D90  C128  FFE1         	movff	_pCDCDst,fsr1l
 15006  005D94  C129  FFE2         	movff	_pCDCDst+1,fsr1h
 15007  005D98  CFDF FFE7          	movff	indf2,indf1
 15008                           
 15009                           ; BSR set to: 0
 15010                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 15011  005D9C  0101               	movlb	1	; () banked
 15012  005D9E  4B28               	infsnz	_pCDCDst& (0+255),f,b
 15013  005DA0  2B29               	incf	(_pCDCDst+1)& (0+255),f,b
 15014                           
 15015                           ; BSR set to: 1
 15016                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 15017  005DA2  4B2B               	infsnz	_pCDCSrc& (0+255),f,b
 15018  005DA4  2B2C               	incf	(_pCDCSrc+1)& (0+255),f,b
 15019                           
 15020                           ; BSR set to: 1
 15021                           ;usb_device_cdc.c: 859: i--;
 15022  005DA6  0100               	movlb	0	; () banked
 15023  005DA8  0769               	decf	CDCTxService@i& (0+255),f,b
 15024  005DAA                     l10193:
 15025  005DAA  0100               	movlb	0	; () banked
 15026  005DAC  5169               	movf	CDCTxService@i& (0+255),w,b
 15027  005DAE  E1EC               	bnz	l10185
 15028  005DB0                     l10195:
 15029                           
 15030                           ; BSR set to: 0
 15031                           ;usb_device_cdc.c: 860: }
 15032                           ;usb_device_cdc.c: 861: }
 15033                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 15034  005DB0  51F7               	movf	_cdc_tx_len& (0+255),w,b
 15035  005DB2  E106               	bnz	l10203
 15036                           
 15037                           ; BSR set to: 0
 15038                           ;usb_device_cdc.c: 868: {
 15039                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 15040  005DB4  0E40               	movlw	64
 15041  005DB6  196A               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 15042                           
 15043                           ; BSR set to: 0
 15044                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 15045  005DB8  0E02               	movlw	2
 15046  005DBA  A4D8               	btfss	status,2,c
 15047                           
 15048                           ; BSR set to: 0
 15049                           ;usb_device_cdc.c: 871: else
 15050                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 15051  005DBC  0E03               	movlw	3
 15052  005DBE  6E1F               	movwf	_cdc_trf_state,c
 15053  005DC0                     l10203:
 15054                           
 15055                           ; BSR set to: 0
 15056                           ;usb_device_cdc.c: 873: }
 15057                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 15058  005DC0  0E01               	movlw	1
 15059  005DC2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 15060  005DC4  0E00               	movlw	0
 15061  005DC6  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 15062  005DC8  0E05               	movlw	5
 15063  005DCA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 15064  005DCC  C06A  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 15065  005DD0  0E02               	movlw	2
 15066  005DD2  ECC5  F027         	call	_USBTransferOnePacket
 15067  005DD6  C060  F131         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 15068  005DDA  C061  F132         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 15069  005DDE                     l10205:
 15070                           
 15071                           ; BSR set to: 0
 15072                           ;usb_device_cdc.c: 876: }
 15073                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 15074  005DDE  84A3               	bsf	4003,2,c	;volatile
 15075                           
 15076                           ; BSR set to: 0
 15077  005DE0  0012               	return		;funcret
 15078  005DE2                     __end_of_CDCTxService:
 15079                           	opt stack 0
 15080                           tblptru	equ	0xFF8
 15081                           tblptrh	equ	0xFF7
 15082                           tblptrl	equ	0xFF6
 15083                           tablat	equ	0xFF5
 15084                           prodh	equ	0xFF4
 15085                           prodl	equ	0xFF3
 15086                           intcon	equ	0xFF2
 15087                           postinc0	equ	0xFEE
 15088                           wreg	equ	0xFE8
 15089                           indf1	equ	0xFE7
 15090                           fsr1h	equ	0xFE2
 15091                           fsr1l	equ	0xFE1
 15092                           indf2	equ	0xFDF
 15093                           postinc2	equ	0xFDE
 15094                           postdec2	equ	0xFDD
 15095                           fsr2h	equ	0xFDA
 15096                           fsr2l	equ	0xFD9
 15097                           status	equ	0xFD8
 15098                           
 15099 ;; *************** function _USBTransferOnePacket *****************
 15100 ;; Defined at:
 15101 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 15102 ;; Parameters:    Size  Location     Type
 15103 ;;  ep              1    wreg     unsigned char 
 15104 ;;  dir             1    0[BANK0 ] unsigned char 
 15105 ;;  data            2    1[BANK0 ] PTR unsigned char 
 15106 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 15107 ;;  len             1    3[BANK0 ] unsigned char 
 15108 ;; Auto vars:     Size  Location     Type
 15109 ;;  ep              1    4[BANK0 ] unsigned char 
 15110 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 15111 ;;		 -> BDT(48), NULL(0), 
 15112 ;; Return value:  Size  Location     Type
 15113 ;;                  2    0[BANK0 ] PTR void 
 15114 ;; Registers used:
 15115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15116 ;; Tracked objects:
 15117 ;;		On entry : F/0
 15118 ;;		On exit  : F/0
 15119 ;;		Unchanged: 0/0
 15120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15121 ;;      Params:         0       4       0       0       0       0       0       0       0
 15122 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15123 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15124 ;;      Totals:         0       7       0       0       0       0       0       0       0
 15125 ;;Total ram usage:        7 bytes
 15126 ;; Hardware stack levels used:    1
 15127 ;; Hardware stack levels required when called:   11
 15128 ;; This function calls:
 15129 ;;		Nothing
 15130 ;; This function is called by:
 15131 ;;		_getsUSBUSART
 15132 ;;		_CDCTxService
 15133 ;; This function uses a non-reentrant model
 15134 ;;
 15135                           
 15136                           	psect	text66
 15137  004F8A                     __ptext66:
 15138                           	opt stack 0
 15139  004F8A                     _USBTransferOnePacket:
 15140                           	opt stack 16
 15141                           
 15142                           ; BSR set to: 0
 15143                           ;incstack = 0
 15144                           ;USBTransferOnePacket@ep stored from wreg
 15145  004F8A  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 15146                           
 15147                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 15148                           ;usb_device.c: 762: if(dir != 0)
 15149  004F8C  0100               	movlb	0	; () banked
 15150  004F8E  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 15151  004F90  E007               	bz	l9529
 15152                           
 15153                           ; BSR set to: 0
 15154                           ;usb_device.c: 763: {
 15155                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 15156  004F92  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15157  004F94  0D02               	mullw	2
 15158  004F96  50F3               	movf	prodl,w,c
 15159  004F98  0F0F               	addlw	low _pBDTEntryIn
 15160  004F9A  6ED9               	movwf	fsr2l,c
 15161  004F9C  6ADA               	clrf	fsr2h,c
 15162  004F9E  D008               	goto	L25
 15163  004FA0                     l9529:
 15164                           
 15165                           ; BSR set to: 0
 15166                           ;usb_device.c: 767: else
 15167                           ;usb_device.c: 768: {
 15168                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 15169  004FA0  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15170  004FA2  0D02               	mullw	2
 15171  004FA4  0E18               	movlw	low _pBDTEntryOut
 15172  004FA6  24F3               	addwf	prodl,w,c
 15173  004FA8  6ED9               	movwf	fsr2l,c
 15174  004FAA  0E01               	movlw	high _pBDTEntryOut
 15175  004FAC  20F4               	addwfc	prodh,w,c
 15176  004FAE  6EDA               	movwf	fsr2h,c
 15177  004FB0                     L25:
 15178  004FB0  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 15179  004FB4  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 15180                           
 15181                           ; BSR set to: 0
 15182                           ;usb_device.c: 771: }
 15183                           ;usb_device.c: 775: if(handle == 0)
 15184  004FB8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15185  004FBA  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15186  004FBC  E103               	bnz	l9535
 15187                           
 15188                           ; BSR set to: 0
 15189                           ;usb_device.c: 776: {
 15190                           ;usb_device.c: 777: return 0;
 15191  004FBE  6B60               	clrf	?_USBTransferOnePacket& (0+255),b
 15192  004FC0  6B61               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
 15193  004FC2  0012               	return	
 15194  004FC4                     l9535:
 15195                           
 15196                           ; BSR set to: 0
 15197                           ;usb_device.c: 778: }
 15198                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 15199  004FC4  EE20 F002          	lfsr	2,2
 15200  004FC8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15201  004FCA  26D9               	addwf	fsr2l,f,c
 15202  004FCC  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15203  004FCE  22DA               	addwfc	fsr2h,f,c
 15204  004FD0  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 15205  004FD4  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 15206                           
 15207                           ;usb_device.c: 781: handle->CNT = len;
 15208  004FD8  EE20 F001          	lfsr	2,1
 15209  004FDC  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15210  004FDE  26D9               	addwf	fsr2l,f,c
 15211  004FE0  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15212  004FE2  22DA               	addwfc	fsr2h,f,c
 15213  004FE4  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 15214                           
 15215                           ; BSR set to: 0
 15216                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 15217  004FE8  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15218  004FEC  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15219  004FF0  0E40               	movlw	64
 15220  004FF2  16DF               	andwf	indf2,f,c
 15221                           
 15222                           ; BSR set to: 0
 15223                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 15224  004FF4  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15225  004FF8  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15226  004FFC  0E00               	movlw	0
 15227  004FFE  86DB               	bsf	plusw2,3,c
 15228                           
 15229                           ; BSR set to: 0
 15230                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 15231  005000  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15232  005004  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15233  005008  8EDB               	bsf	plusw2,7,c
 15234                           
 15235                           ; BSR set to: 0
 15236                           ;usb_device.c: 787: if(dir != 0)
 15237  00500A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 15238  00500C  E007               	bz	l9547
 15239                           
 15240                           ; BSR set to: 0
 15241                           ;usb_device.c: 788: {
 15242                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 15243  00500E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15244  005010  0D02               	mullw	2
 15245  005012  50F3               	movf	prodl,w,c
 15246  005014  0F0F               	addlw	low _pBDTEntryIn
 15247  005016  6ED9               	movwf	fsr2l,c
 15248  005018  6ADA               	clrf	fsr2h,c
 15249  00501A  D008               	goto	L26
 15250  00501C                     l9547:
 15251                           
 15252                           ; BSR set to: 0
 15253                           ;usb_device.c: 792: else
 15254                           ;usb_device.c: 793: {
 15255                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 15256  00501C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15257  00501E  0D02               	mullw	2
 15258  005020  0E18               	movlw	low _pBDTEntryOut
 15259  005022  24F3               	addwf	prodl,w,c
 15260  005024  6ED9               	movwf	fsr2l,c
 15261  005026  0E01               	movlw	high _pBDTEntryOut
 15262  005028  20F4               	addwfc	prodh,w,c
 15263  00502A  6EDA               	movwf	fsr2h,c
 15264  00502C                     L26:
 15265  00502C  0E04               	movlw	4
 15266  00502E  1ADF               	xorwf	indf2,f,c
 15267                           
 15268                           ; BSR set to: 0
 15269                           ;usb_device.c: 796: }
 15270                           ;usb_device.c: 797: return (void*)handle;
 15271  005030  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 15272  005034  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 15273                           
 15274                           ; BSR set to: 0
 15275  005038  0C04               	retlw	4	;funcret
 15276  00503A                     __end_of_USBTransferOnePacket:
 15277                           	opt stack 0
 15278                           tblptru	equ	0xFF8
 15279                           tblptrh	equ	0xFF7
 15280                           tblptrl	equ	0xFF6
 15281                           tablat	equ	0xFF5
 15282                           prodh	equ	0xFF4
 15283                           prodl	equ	0xFF3
 15284                           intcon	equ	0xFF2
 15285                           postinc0	equ	0xFEE
 15286                           wreg	equ	0xFE8
 15287                           indf1	equ	0xFE7
 15288                           fsr1h	equ	0xFE2
 15289                           fsr1l	equ	0xFE1
 15290                           indf2	equ	0xFDF
 15291                           postinc2	equ	0xFDE
 15292                           postdec2	equ	0xFDD
 15293                           plusw2	equ	0xFDB
 15294                           fsr2h	equ	0xFDA
 15295                           fsr2l	equ	0xFD9
 15296                           status	equ	0xFD8
 15297                           
 15298 ;; *************** function _USBDeviceInit *****************
 15299 ;; Defined at:
 15300 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 15301 ;; Parameters:    Size  Location     Type
 15302 ;;		None
 15303 ;; Auto vars:     Size  Location     Type
 15304 ;;  i               1    8[BANK0 ] unsigned char 
 15305 ;; Return value:  Size  Location     Type
 15306 ;;                  1    wreg      void 
 15307 ;; Registers used:
 15308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15309 ;; Tracked objects:
 15310 ;;		On entry : F/0
 15311 ;;		On exit  : F/0
 15312 ;;		Unchanged: 0/0
 15313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15314 ;;      Params:         0       0       0       0       0       0       0       0       0
 15315 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15316 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15317 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15318 ;;Total ram usage:        1 bytes
 15319 ;; Hardware stack levels used:    1
 15320 ;; Hardware stack levels required when called:   12
 15321 ;; This function calls:
 15322 ;;		_memset
 15323 ;; This function is called by:
 15324 ;;		_main
 15325 ;; This function uses a non-reentrant model
 15326 ;;
 15327                           
 15328                           	psect	text67
 15329  005804                     __ptext67:
 15330                           	opt stack 0
 15331  005804                     _USBDeviceInit:
 15332                           	opt stack 18
 15333                           
 15334                           ; BSR set to: 0
 15335                           ;usb_device.c: 239: uint8_t i;
 15336                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 15337                           
 15338                           ; BSR set to: 0
 15339                           ;incstack = 0
 15340  005804  94A3               	bcf	4003,2,c	;volatile
 15341                           
 15342                           ;usb_device.c: 244: {UEIR = 0;};
 15343  005806  6A67               	clrf	3943,c	;volatile
 15344                           
 15345                           ;usb_device.c: 247: {UIR = 0;};
 15346  005808  6A65               	clrf	3941,c	;volatile
 15347                           
 15348                           ;usb_device.c: 250: UEP0 = 0;
 15349  00580A  6A6A               	clrf	3946,c	;volatile
 15350                           
 15351                           ; BSR set to: 0
 15352                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 15353  00580C  0E6B               	movlw	107
 15354  00580E  6F60               	movwf	memset@p1& (0+255),b
 15355  005810  0E0F               	movlw	15
 15356  005812  6F61               	movwf	(memset@p1+1)& (0+255),b
 15357  005814  6B63               	clrf	(memset@c+1)& (0+255),b
 15358  005816  6B62               	clrf	memset@c& (0+255),b
 15359  005818  6B65               	clrf	(memset@n+1)& (0+255),b
 15360  00581A  0E02               	movlw	2
 15361  00581C  6F64               	movwf	memset@n& (0+255),b
 15362  00581E  EC58  F01F         	call	_memset	;wreg free
 15363                           
 15364                           ; BSR set to: 0
 15365                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 15366  005822  0E16               	movlw	22
 15367  005824  6E62               	movwf	3938,c	;volatile
 15368                           
 15369                           ; BSR set to: 0
 15370  005826  0E9F               	movlw	159
 15371  005828  6E66               	movwf	3942,c	;volatile
 15372                           
 15373                           ; BSR set to: 0
 15374  00582A  0E7B               	movlw	123
 15375  00582C  6E64               	movwf	3940,c	;volatile
 15376                           
 15377                           ; BSR set to: 0
 15378                           ;usb_device.c: 257: ;
 15379                           ;usb_device.c: 260: ;
 15380                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 15381  00582E  6B68               	clrf	USBDeviceInit@i& (0+255),b
 15382  005830                     l11195:
 15383                           
 15384                           ; BSR set to: 0
 15385                           ;usb_device.c: 264: {
 15386                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 15387  005830  5168               	movf	USBDeviceInit@i& (0+255),w,b
 15388  005832  0D04               	mullw	4
 15389  005834  0E00               	movlw	0
 15390  005836  24F3               	addwf	prodl,w,c
 15391  005838  6ED9               	movwf	fsr2l,c
 15392  00583A  0E04               	movlw	4
 15393  00583C  20F4               	addwfc	prodh,w,c
 15394  00583E  6EDA               	movwf	fsr2h,c
 15395  005840  6ADE               	clrf	postinc2,c
 15396  005842  6ADE               	clrf	postinc2,c
 15397  005844  6ADE               	clrf	postinc2,c
 15398  005846  6ADD               	clrf	postdec2,c
 15399                           
 15400                           ; BSR set to: 0
 15401  005848  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 15402                           
 15403                           ; BSR set to: 0
 15404  00584A  0E0B               	movlw	11
 15405  00584C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 15406  00584E  D7F0               	goto	l11195
 15407                           
 15408                           ; BSR set to: 0
 15409                           ;usb_device.c: 266: }
 15410                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 15411  005850  8C60               	bsf	3936,6,c	;volatile
 15412                           
 15413                           ;usb_device.c: 272: UADDR = 0x00;
 15414  005852  6A63               	clrf	3939,c	;volatile
 15415                           
 15416                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 15417  005854  9860               	bcf	3936,4,c	;volatile
 15418                           
 15419                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 15420  005856  9C60               	bcf	3936,6,c	;volatile
 15421                           
 15422                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 15423  005858  D005               	goto	l11209
 15424  00585A                     l11201:
 15425                           
 15426                           ; BSR set to: 0
 15427                           ;usb_device.c: 282: {
 15428                           ;usb_device.c: 283: (UIR &= 0xF7);
 15429  00585A  9665               	bcf	3941,3,c	;volatile
 15430                           
 15431                           ; BSR set to: 0
 15432                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 15433  00585C  6A0C               	clrf	_inPipes+3,c	;volatile
 15434                           
 15435                           ; BSR set to: 0
 15436                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 15437  00585E  6A04               	clrf	_outPipes+3,c	;volatile
 15438                           
 15439                           ; BSR set to: 0
 15440                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 15441  005860  6A05               	clrf	_outPipes+4,c	;volatile
 15442  005862  6A06               	clrf	_outPipes+5,c	;volatile
 15443  005864                     l11209:
 15444                           
 15445                           ; BSR set to: 0
 15446  005864  B665               	btfsc	3941,3,c	;volatile
 15447  005866  D7F9               	goto	l11201
 15448                           
 15449                           ; BSR set to: 0
 15450                           ;usb_device.c: 288: }
 15451                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 15452  005868  0E01               	movlw	1
 15453  00586A  0101               	movlb	1	; () banked
 15454  00586C  6F4A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 15455                           
 15456                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 15457  00586E  6F4B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 15458                           
 15459                           ; BSR set to: 1
 15460                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 15461  005870  6B48               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 15462                           
 15463                           ; BSR set to: 1
 15464                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 15465  005872  6B49               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 15466                           
 15467                           ; BSR set to: 1
 15468                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 15469  005874  6B47               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 15470                           
 15471                           ; BSR set to: 1
 15472                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 15473  005876  0100               	movlb	0	; () banked
 15474  005878  6B68               	clrf	USBDeviceInit@i& (0+255),b
 15475  00587A                     l11225:
 15476                           
 15477                           ; BSR set to: 0
 15478                           ;usb_device.c: 302: {
 15479                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 15480  00587A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 15481  00587C  0D02               	mullw	2
 15482  00587E  50F3               	movf	prodl,w,c
 15483  005880  0F0F               	addlw	low _pBDTEntryIn
 15484  005882  6ED9               	movwf	fsr2l,c
 15485  005884  6ADA               	clrf	fsr2h,c
 15486  005886  6ADE               	clrf	postinc2,c
 15487  005888  6ADD               	clrf	postdec2,c
 15488                           
 15489                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 15490  00588A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 15491  00588C  0D02               	mullw	2
 15492  00588E  0E18               	movlw	low _pBDTEntryOut
 15493  005890  24F3               	addwf	prodl,w,c
 15494  005892  6ED9               	movwf	fsr2l,c
 15495  005894  0E01               	movlw	high _pBDTEntryOut
 15496  005896  20F4               	addwfc	prodh,w,c
 15497  005898  6EDA               	movwf	fsr2h,c
 15498  00589A  6ADE               	clrf	postinc2,c
 15499  00589C  6ADD               	clrf	postdec2,c
 15500                           
 15501                           ; BSR set to: 0
 15502                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 15503  00589E  0E22               	movlw	low _ep_data_in
 15504  0058A0  2568               	addwf	USBDeviceInit@i& (0+255),w,b
 15505  0058A2  6ED9               	movwf	fsr2l,c
 15506  0058A4  6ADA               	clrf	fsr2h,c
 15507  0058A6  0E01               	movlw	high _ep_data_in
 15508  0058A8  22DA               	addwfc	fsr2h,f,c
 15509  0058AA  6ADF               	clrf	indf2,c
 15510                           
 15511                           ; BSR set to: 0
 15512                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 15513  0058AC  0E25               	movlw	low _ep_data_out
 15514  0058AE  2568               	addwf	USBDeviceInit@i& (0+255),w,b
 15515  0058B0  6ED9               	movwf	fsr2l,c
 15516  0058B2  6ADA               	clrf	fsr2h,c
 15517  0058B4  0E01               	movlw	high _ep_data_out
 15518  0058B6  22DA               	addwfc	fsr2h,f,c
 15519  0058B8  6ADF               	clrf	indf2,c
 15520                           
 15521                           ; BSR set to: 0
 15522  0058BA  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 15523                           
 15524                           ; BSR set to: 0
 15525  0058BC  0E02               	movlw	2
 15526  0058BE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 15527  0058C0  D7DC               	goto	l11225
 15528                           
 15529                           ; BSR set to: 0
 15530                           ;usb_device.c: 307: }
 15531                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15532  0058C2  0E08               	movlw	8
 15533  0058C4  6E0F               	movwf	_pBDTEntryIn,c
 15534  0058C6  0E04               	movlw	4
 15535  0058C8  6E10               	movwf	_pBDTEntryIn+1,c
 15536                           
 15537                           ; BSR set to: 0
 15538                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 15539  0058CA  0E16               	movlw	22
 15540  0058CC  6E6A               	movwf	3946,c	;volatile
 15541                           
 15542                           ; BSR set to: 0
 15543                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 15544  0058CE  0E04               	movlw	4
 15545  0058D0  0104               	movlb	4	; () banked
 15546  0058D2  6F03               	movwf	3,b	;volatile
 15547  0058D4  0E30               	movlw	48
 15548  0058D6  6F02               	movwf	2,b	;volatile
 15549                           
 15550                           ; BSR set to: 4
 15551                           ;usb_device.c: 315: BDT[0].CNT = 8;
 15552  0058D8  0E08               	movlw	8
 15553  0058DA  6F01               	movwf	1,b	;volatile
 15554                           
 15555                           ; BSR set to: 4
 15556                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 15557  0058DC  0E04               	movlw	4
 15558  0058DE  6F00               	movwf	0,b	;volatile
 15559                           
 15560                           ; BSR set to: 4
 15561                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 15562  0058E0  8F00               	bsf	0,7,b	;volatile
 15563                           
 15564                           ; BSR set to: 4
 15565                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 15566  0058E2  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 15567                           
 15568                           ; BSR set to: 4
 15569                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 15570  0058E4  0100               	movlb	0	; () banked
 15571  0058E6  6BF4               	clrf	_USBDeviceState& (0+255),b	;volatile
 15572                           
 15573                           ; BSR set to: 0
 15574  0058E8  0012               	return		;funcret
 15575  0058EA                     __end_of_USBDeviceInit:
 15576                           	opt stack 0
 15577                           tblptru	equ	0xFF8
 15578                           tblptrh	equ	0xFF7
 15579                           tblptrl	equ	0xFF6
 15580                           tablat	equ	0xFF5
 15581                           prodh	equ	0xFF4
 15582                           prodl	equ	0xFF3
 15583                           intcon	equ	0xFF2
 15584                           postinc0	equ	0xFEE
 15585                           wreg	equ	0xFE8
 15586                           indf1	equ	0xFE7
 15587                           fsr1h	equ	0xFE2
 15588                           fsr1l	equ	0xFE1
 15589                           indf2	equ	0xFDF
 15590                           postinc2	equ	0xFDE
 15591                           postdec2	equ	0xFDD
 15592                           plusw2	equ	0xFDB
 15593                           fsr2h	equ	0xFDA
 15594                           fsr2l	equ	0xFD9
 15595                           status	equ	0xFD8
 15596                           
 15597 ;; *************** function _memset *****************
 15598 ;; Defined at:
 15599 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 15600 ;; Parameters:    Size  Location     Type
 15601 ;;  p1              2    0[BANK0 ] PTR void 
 15602 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15603 ;;  c               2    2[BANK0 ] int 
 15604 ;;  n               2    4[BANK0 ] unsigned int 
 15605 ;; Auto vars:     Size  Location     Type
 15606 ;;  p               2    6[BANK0 ] PTR unsigned char 
 15607 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15608 ;; Return value:  Size  Location     Type
 15609 ;;                  2    0[BANK0 ] PTR void 
 15610 ;; Registers used:
 15611 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15612 ;; Tracked objects:
 15613 ;;		On entry : F/0
 15614 ;;		On exit  : F/0
 15615 ;;		Unchanged: 0/0
 15616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15617 ;;      Params:         0       6       0       0       0       0       0       0       0
 15618 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15619 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15620 ;;      Totals:         0       8       0       0       0       0       0       0       0
 15621 ;;Total ram usage:        8 bytes
 15622 ;; Hardware stack levels used:    1
 15623 ;; Hardware stack levels required when called:   11
 15624 ;; This function calls:
 15625 ;;		Nothing
 15626 ;; This function is called by:
 15627 ;;		_USBDeviceInit
 15628 ;; This function uses a non-reentrant model
 15629 ;;
 15630                           
 15631                           	psect	text68
 15632  003EB0                     __ptext68:
 15633                           	opt stack 0
 15634  003EB0                     _memset:
 15635                           	opt stack 18
 15636                           
 15637                           ; BSR set to: 0
 15638                           
 15639                           ; BSR set to: 0
 15640                           ;incstack = 0
 15641  003EB0  C060  F066         	movff	memset@p1,memset@p
 15642  003EB4  C061  F067         	movff	memset@p1+1,memset@p+1
 15643  003EB8  D008               	goto	l11163
 15644  003EBA                     l11159:
 15645                           
 15646                           ; BSR set to: 0
 15647  003EBA  C066  FFD9         	movff	memset@p,fsr2l
 15648  003EBE  C067  FFDA         	movff	memset@p+1,fsr2h
 15649  003EC2  C062  FFDF         	movff	memset@c,indf2
 15650                           
 15651                           ; BSR set to: 0
 15652  003EC6  4B66               	infsnz	memset@p& (0+255),f,b
 15653  003EC8  2B67               	incf	(memset@p+1)& (0+255),f,b
 15654  003ECA                     l11163:
 15655                           
 15656                           ; BSR set to: 0
 15657  003ECA  0764               	decf	memset@n& (0+255),f,b
 15658  003ECC  A0D8               	btfss	status,0,c
 15659  003ECE  0765               	decf	(memset@n+1)& (0+255),f,b
 15660  003ED0  2964               	incf	memset@n& (0+255),w,b
 15661  003ED2  E1F3               	bnz	l11159
 15662  003ED4  2965               	incf	(memset@n+1)& (0+255),w,b
 15663  003ED6  E1F1               	bnz	l11159
 15664                           
 15665                           ; BSR set to: 0
 15666  003ED8  0012               	return		;funcret
 15667  003EDA                     __end_of_memset:
 15668                           	opt stack 0
 15669                           tblptru	equ	0xFF8
 15670                           tblptrh	equ	0xFF7
 15671                           tblptrl	equ	0xFF6
 15672                           tablat	equ	0xFF5
 15673                           prodh	equ	0xFF4
 15674                           prodl	equ	0xFF3
 15675                           intcon	equ	0xFF2
 15676                           postinc0	equ	0xFEE
 15677                           wreg	equ	0xFE8
 15678                           indf1	equ	0xFE7
 15679                           fsr1h	equ	0xFE2
 15680                           fsr1l	equ	0xFE1
 15681                           indf2	equ	0xFDF
 15682                           postinc2	equ	0xFDE
 15683                           postdec2	equ	0xFDD
 15684                           plusw2	equ	0xFDB
 15685                           fsr2h	equ	0xFDA
 15686                           fsr2l	equ	0xFD9
 15687                           status	equ	0xFD8
 15688                           
 15689 ;; *************** function _USBDeviceAttach *****************
 15690 ;; Defined at:
 15691 ;;		line 1046 in file "../Includes/Usb/framework/usb_device.c"
 15692 ;; Parameters:    Size  Location     Type
 15693 ;;		None
 15694 ;; Auto vars:     Size  Location     Type
 15695 ;;		None
 15696 ;; Return value:  Size  Location     Type
 15697 ;;                  1    wreg      void 
 15698 ;; Registers used:
 15699 ;;		wreg, status,2
 15700 ;; Tracked objects:
 15701 ;;		On entry : F/0
 15702 ;;		On exit  : F/0
 15703 ;;		Unchanged: 0/0
 15704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15705 ;;      Params:         0       0       0       0       0       0       0       0       0
 15706 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15707 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15708 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15709 ;;Total ram usage:        0 bytes
 15710 ;; Hardware stack levels used:    1
 15711 ;; Hardware stack levels required when called:   11
 15712 ;; This function calls:
 15713 ;;		Nothing
 15714 ;; This function is called by:
 15715 ;;		_main
 15716 ;; This function uses a non-reentrant model
 15717 ;;
 15718                           
 15719                           	psect	text69
 15720  003EDA                     __ptext69:
 15721                           	opt stack 0
 15722  003EDA                     _USBDeviceAttach:
 15723                           	opt stack 19
 15724                           
 15725                           ; BSR set to: 0
 15726                           ;usb_device.c: 1050: {
 15727                           ;usb_device.c: 1051: if(1 == 1)
 15728                           
 15729                           ; BSR set to: 0
 15730                           ;incstack = 0
 15731  003EDA  51F4               	movf	_USBDeviceState& (0+255),w,b	;volatile
 15732  003EDC  A4D8               	btfss	status,2,c
 15733  003EDE  0012               	return	
 15734                           
 15735                           ; BSR set to: 0
 15736                           ;usb_device.c: 1052: {
 15737                           ;usb_device.c: 1054: UCON = 0;
 15738  003EE0  6A60               	clrf	3936,c	;volatile
 15739                           
 15740                           ;usb_device.c: 1057: UIE = 0;
 15741  003EE2  6A64               	clrf	3940,c	;volatile
 15742                           
 15743                           ; BSR set to: 0
 15744                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 15745  003EE4  0E16               	movlw	22
 15746  003EE6  6E62               	movwf	3938,c	;volatile
 15747  003EE8  0E9F               	movlw	159
 15748  003EEA  6E66               	movwf	3942,c	;volatile
 15749  003EEC  0E7B               	movlw	123
 15750  003EEE  6E64               	movwf	3940,c	;volatile
 15751                           
 15752                           ; BSR set to: 0
 15753                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 15754  003EF0  8ED0               	bsf	4048,7,c	;volatile
 15755                           
 15756                           ; BSR set to: 0
 15757  003EF2  84A5               	bsf	4005,2,c	;volatile
 15758                           
 15759                           ; BSR set to: 0
 15760  003EF4  84A3               	bsf	4003,2,c	;volatile
 15761                           
 15762                           ; BSR set to: 0
 15763  003EF6  8EF2               	bsf	intcon,7,c	;volatile
 15764                           
 15765                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 15766  003EF8  D001               	goto	l1503
 15767  003EFA                     l1504:
 15768                           
 15769                           ; BSR set to: 0
 15770  003EFA  8660               	bsf	3936,3,c	;volatile
 15771  003EFC                     l1503:
 15772                           
 15773                           ; BSR set to: 0
 15774  003EFC  A660               	btfss	3936,3,c	;volatile
 15775  003EFE  D7FD               	goto	l1504
 15776                           
 15777                           ; BSR set to: 0
 15778                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 15779  003F00  0E01               	movlw	1
 15780  003F02  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 15781                           
 15782                           ; BSR set to: 0
 15783  003F04  0C01               	retlw	1	;funcret
 15784  003F06                     __end_of_USBDeviceAttach:
 15785                           	opt stack 0
 15786                           tblptru	equ	0xFF8
 15787                           tblptrh	equ	0xFF7
 15788                           tblptrl	equ	0xFF6
 15789                           tablat	equ	0xFF5
 15790                           prodh	equ	0xFF4
 15791                           prodl	equ	0xFF3
 15792                           intcon	equ	0xFF2
 15793                           postinc0	equ	0xFEE
 15794                           wreg	equ	0xFE8
 15795                           indf1	equ	0xFE7
 15796                           fsr1h	equ	0xFE2
 15797                           fsr1l	equ	0xFE1
 15798                           indf2	equ	0xFDF
 15799                           postinc2	equ	0xFDE
 15800                           postdec2	equ	0xFDD
 15801                           plusw2	equ	0xFDB
 15802                           fsr2h	equ	0xFDA
 15803                           fsr2l	equ	0xFD9
 15804                           status	equ	0xFD8
 15805                           
 15806 ;; *************** function _SYSTEM_Initialize *****************
 15807 ;; Defined at:
 15808 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 15809 ;; Parameters:    Size  Location     Type
 15810 ;;		None
 15811 ;; Auto vars:     Size  Location     Type
 15812 ;;		None
 15813 ;; Return value:  Size  Location     Type
 15814 ;;                  1    wreg      void 
 15815 ;; Registers used:
 15816 ;;		wreg, status,2, status,0, cstack
 15817 ;; Tracked objects:
 15818 ;;		On entry : 0/0
 15819 ;;		On exit  : F/1
 15820 ;;		Unchanged: 0/0
 15821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15822 ;;      Params:         0       0       0       0       0       0       0       0       0
 15823 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15824 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15825 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15826 ;;Total ram usage:        0 bytes
 15827 ;; Hardware stack levels used:    1
 15828 ;; Hardware stack levels required when called:   13
 15829 ;; This function calls:
 15830 ;;		_ADC_Initialize
 15831 ;;		_CMP1_Initialize
 15832 ;;		_OSCILLATOR_Initialize
 15833 ;;		_PIN_MANAGER_Initialize
 15834 ;;		_SPI_Initialize
 15835 ;;		_TMR1_Initialize
 15836 ;;		_TMR2_Initialize
 15837 ;; This function is called by:
 15838 ;;		_main
 15839 ;; This function uses a non-reentrant model
 15840 ;;
 15841                           
 15842                           	psect	text70
 15843  003C60                     __ptext70:
 15844                           	opt stack 0
 15845  003C60                     _SYSTEM_Initialize:
 15846                           	opt stack 17
 15847                           
 15848                           ;mcc.c: 95: OSCILLATOR_Initialize();
 15849                           
 15850                           ; BSR set to: 0
 15851                           ;incstack = 0
 15852  003C60  EC19  F01E         	call	_OSCILLATOR_Initialize	;wreg free
 15853                           
 15854                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 15855  003C64  EC91  F021         	call	_PIN_MANAGER_Initialize	;wreg free
 15856                           
 15857                           ; BSR set to: 15
 15858                           ;mcc.c: 97: SPI_Initialize();
 15859  003C68  ECB4  F01D         	call	_SPI_Initialize	;wreg free
 15860                           
 15861                           ; BSR set to: 15
 15862                           ;mcc.c: 98: TMR1_Initialize();
 15863  003C6C  ECC8  F01F         	call	_TMR1_Initialize	;wreg free
 15864                           
 15865                           ; BSR set to: 1
 15866                           ;mcc.c: 99: TMR2_Initialize();
 15867  003C70  ECBB  F01D         	call	_TMR2_Initialize	;wreg free
 15868                           
 15869                           ; BSR set to: 1
 15870                           ;mcc.c: 101: ADC_Initialize();
 15871  003C74  EC0E  F01E         	call	_ADC_Initialize	;wreg free
 15872                           
 15873                           ; BSR set to: 1
 15874                           ;mcc.c: 102: CMP1_Initialize();
 15875  003C78  EFCB  F01D         	goto	_CMP1_Initialize	;wreg free
 15876  003C7C                     __end_of_SYSTEM_Initialize:
 15877                           	opt stack 0
 15878                           tblptru	equ	0xFF8
 15879                           tblptrh	equ	0xFF7
 15880                           tblptrl	equ	0xFF6
 15881                           tablat	equ	0xFF5
 15882                           prodh	equ	0xFF4
 15883                           prodl	equ	0xFF3
 15884                           intcon	equ	0xFF2
 15885                           postinc0	equ	0xFEE
 15886                           wreg	equ	0xFE8
 15887                           indf1	equ	0xFE7
 15888                           fsr1h	equ	0xFE2
 15889                           fsr1l	equ	0xFE1
 15890                           indf2	equ	0xFDF
 15891                           postinc2	equ	0xFDE
 15892                           postdec2	equ	0xFDD
 15893                           plusw2	equ	0xFDB
 15894                           fsr2h	equ	0xFDA
 15895                           fsr2l	equ	0xFD9
 15896                           status	equ	0xFD8
 15897                           
 15898 ;; *************** function _TMR2_Initialize *****************
 15899 ;; Defined at:
 15900 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 15901 ;; Parameters:    Size  Location     Type
 15902 ;;		None
 15903 ;; Auto vars:     Size  Location     Type
 15904 ;;		None
 15905 ;; Return value:  Size  Location     Type
 15906 ;;                  1    wreg      void 
 15907 ;; Registers used:
 15908 ;;		wreg, status,2, cstack
 15909 ;; Tracked objects:
 15910 ;;		On entry : F/1
 15911 ;;		On exit  : F/1
 15912 ;;		Unchanged: F/0
 15913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15914 ;;      Params:         0       0       0       0       0       0       0       0       0
 15915 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15916 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15917 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15918 ;;Total ram usage:        0 bytes
 15919 ;; Hardware stack levels used:    1
 15920 ;; Hardware stack levels required when called:   12
 15921 ;; This function calls:
 15922 ;;		_TMR2_StartTimer
 15923 ;; This function is called by:
 15924 ;;		_SYSTEM_Initialize
 15925 ;; This function uses a non-reentrant model
 15926 ;;
 15927                           
 15928                           	psect	text71
 15929  003B76                     __ptext71:
 15930                           	opt stack 0
 15931  003B76                     _TMR2_Initialize:
 15932                           	opt stack 17
 15933                           
 15934                           ; BSR set to: 1
 15935                           ;tmr2.c: 62: T2CON = 0x7A;
 15936                           
 15937                           ; BSR set to: 1
 15938                           ;incstack = 0
 15939  003B76  0E7A               	movlw	122
 15940  003B78  6EBA               	movwf	4026,c	;volatile
 15941                           
 15942                           ;tmr2.c: 65: PR2 = 0x9B;
 15943  003B7A  0E9B               	movlw	155
 15944  003B7C  6EBB               	movwf	4027,c	;volatile
 15945                           
 15946                           ; BSR set to: 1
 15947                           ;tmr2.c: 68: TMR2 = 0x00;
 15948  003B7E  6ABC               	clrf	4028,c	;volatile
 15949                           
 15950                           ; BSR set to: 1
 15951                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 15952  003B80  929E               	bcf	3998,1,c	;volatile
 15953                           
 15954                           ; BSR set to: 1
 15955                           ;tmr2.c: 74: TMR2_StartTimer();
 15956  003B82  EF82  F01D         	goto	_TMR2_StartTimer	;wreg free
 15957  003B86                     __end_of_TMR2_Initialize:
 15958                           	opt stack 0
 15959                           tblptru	equ	0xFF8
 15960                           tblptrh	equ	0xFF7
 15961                           tblptrl	equ	0xFF6
 15962                           tablat	equ	0xFF5
 15963                           prodh	equ	0xFF4
 15964                           prodl	equ	0xFF3
 15965                           intcon	equ	0xFF2
 15966                           postinc0	equ	0xFEE
 15967                           wreg	equ	0xFE8
 15968                           indf1	equ	0xFE7
 15969                           fsr1h	equ	0xFE2
 15970                           fsr1l	equ	0xFE1
 15971                           indf2	equ	0xFDF
 15972                           postinc2	equ	0xFDE
 15973                           postdec2	equ	0xFDD
 15974                           plusw2	equ	0xFDB
 15975                           fsr2h	equ	0xFDA
 15976                           fsr2l	equ	0xFD9
 15977                           status	equ	0xFD8
 15978                           
 15979 ;; *************** function _TMR2_StartTimer *****************
 15980 ;; Defined at:
 15981 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 15982 ;; Parameters:    Size  Location     Type
 15983 ;;		None
 15984 ;; Auto vars:     Size  Location     Type
 15985 ;;		None
 15986 ;; Return value:  Size  Location     Type
 15987 ;;                  1    wreg      void 
 15988 ;; Registers used:
 15989 ;;		None
 15990 ;; Tracked objects:
 15991 ;;		On entry : F/1
 15992 ;;		On exit  : F/1
 15993 ;;		Unchanged: F/0
 15994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15995 ;;      Params:         0       0       0       0       0       0       0       0       0
 15996 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15997 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15998 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15999 ;;Total ram usage:        0 bytes
 16000 ;; Hardware stack levels used:    1
 16001 ;; Hardware stack levels required when called:   11
 16002 ;; This function calls:
 16003 ;;		Nothing
 16004 ;; This function is called by:
 16005 ;;		_TMR2_Initialize
 16006 ;; This function uses a non-reentrant model
 16007 ;;
 16008                           
 16009                           	psect	text72
 16010  003B04                     __ptext72:
 16011                           	opt stack 0
 16012  003B04                     _TMR2_StartTimer:
 16013                           	opt stack 17
 16014                           
 16015                           ; BSR set to: 1
 16016                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 16017                           
 16018                           ; BSR set to: 1
 16019                           ;incstack = 0
 16020  003B04  84BA               	bsf	4026,2,c	;volatile
 16021                           
 16022                           ; BSR set to: 1
 16023  003B06  0012               	return		;funcret
 16024  003B08                     __end_of_TMR2_StartTimer:
 16025                           	opt stack 0
 16026                           tblptru	equ	0xFF8
 16027                           tblptrh	equ	0xFF7
 16028                           tblptrl	equ	0xFF6
 16029                           tablat	equ	0xFF5
 16030                           prodh	equ	0xFF4
 16031                           prodl	equ	0xFF3
 16032                           intcon	equ	0xFF2
 16033                           postinc0	equ	0xFEE
 16034                           wreg	equ	0xFE8
 16035                           indf1	equ	0xFE7
 16036                           fsr1h	equ	0xFE2
 16037                           fsr1l	equ	0xFE1
 16038                           indf2	equ	0xFDF
 16039                           postinc2	equ	0xFDE
 16040                           postdec2	equ	0xFDD
 16041                           plusw2	equ	0xFDB
 16042                           fsr2h	equ	0xFDA
 16043                           fsr2l	equ	0xFD9
 16044                           status	equ	0xFD8
 16045                           
 16046 ;; *************** function _TMR1_Initialize *****************
 16047 ;; Defined at:
 16048 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 16049 ;; Parameters:    Size  Location     Type
 16050 ;;		None
 16051 ;; Auto vars:     Size  Location     Type
 16052 ;;		None
 16053 ;; Return value:  Size  Location     Type
 16054 ;;                  1    wreg      void 
 16055 ;; Registers used:
 16056 ;;		wreg, status,2, status,0, cstack
 16057 ;; Tracked objects:
 16058 ;;		On entry : F/F
 16059 ;;		On exit  : F/1
 16060 ;;		Unchanged: 0/0
 16061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16062 ;;      Params:         0       0       0       0       0       0       0       0       0
 16063 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16064 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16065 ;;      Totals:         0       2       0       0       0       0       0       0       0
 16066 ;;Total ram usage:        2 bytes
 16067 ;; Hardware stack levels used:    1
 16068 ;; Hardware stack levels required when called:   12
 16069 ;; This function calls:
 16070 ;;		_TMR1_StartTimer
 16071 ;; This function is called by:
 16072 ;;		_SYSTEM_Initialize
 16073 ;; This function uses a non-reentrant model
 16074 ;;
 16075                           
 16076                           	psect	text73
 16077  003F90                     __ptext73:
 16078                           	opt stack 0
 16079  003F90                     _TMR1_Initialize:
 16080                           	opt stack 17
 16081                           
 16082                           ; BSR set to: 15
 16083                           ;tmr1.c: 68: T1CON = 0x00;
 16084                           
 16085                           ; BSR set to: 1
 16086                           ;incstack = 0
 16087  003F90  6ACD               	clrf	4045,c	;volatile
 16088                           
 16089                           ;tmr1.c: 71: T1GCON = 0x00;
 16090  003F92  6ACC               	clrf	4044,c	;volatile
 16091                           
 16092                           ; BSR set to: 15
 16093                           ;tmr1.c: 74: TMR1H = 0xD0;
 16094  003F94  0ED0               	movlw	208
 16095  003F96  6ECF               	movwf	4047,c	;volatile
 16096                           
 16097                           ;tmr1.c: 77: TMR1L = 0x20;
 16098  003F98  0E20               	movlw	32
 16099  003F9A  6ECE               	movwf	4046,c	;volatile
 16100                           
 16101                           ; BSR set to: 15
 16102                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 16103  003F9C  50CE               	movf	4046,w,c	;volatile
 16104  003F9E  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 16105  003FA2  0100               	movlb	0	; () banked
 16106  003FA4  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 16107  003FA6  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 16108  003FAA  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 16109  003FAC  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 16110  003FAE  0101               	movlb	1	; () banked
 16111  003FB0  6F3B               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 16112  003FB2  0100               	movlb	0	; () banked
 16113  003FB4  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 16114  003FB6  0101               	movlb	1	; () banked
 16115  003FB8  6F3C               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 16116                           
 16117                           ; BSR set to: 1
 16118                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 16119  003FBA  909E               	bcf	3998,0,c	;volatile
 16120                           
 16121                           ; BSR set to: 1
 16122                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 16123  003FBC  809D               	bsf	3997,0,c	;volatile
 16124                           
 16125                           ; BSR set to: 1
 16126                           ;tmr1.c: 89: TMR1_StartTimer();
 16127  003FBE  EF80  F01D         	goto	_TMR1_StartTimer	;wreg free
 16128  003FC2                     __end_of_TMR1_Initialize:
 16129                           	opt stack 0
 16130                           tblptru	equ	0xFF8
 16131                           tblptrh	equ	0xFF7
 16132                           tblptrl	equ	0xFF6
 16133                           tablat	equ	0xFF5
 16134                           prodh	equ	0xFF4
 16135                           prodl	equ	0xFF3
 16136                           intcon	equ	0xFF2
 16137                           postinc0	equ	0xFEE
 16138                           wreg	equ	0xFE8
 16139                           indf1	equ	0xFE7
 16140                           fsr1h	equ	0xFE2
 16141                           fsr1l	equ	0xFE1
 16142                           indf2	equ	0xFDF
 16143                           postinc2	equ	0xFDE
 16144                           postdec2	equ	0xFDD
 16145                           plusw2	equ	0xFDB
 16146                           fsr2h	equ	0xFDA
 16147                           fsr2l	equ	0xFD9
 16148                           status	equ	0xFD8
 16149                           
 16150 ;; *************** function _TMR1_StartTimer *****************
 16151 ;; Defined at:
 16152 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 16153 ;; Parameters:    Size  Location     Type
 16154 ;;		None
 16155 ;; Auto vars:     Size  Location     Type
 16156 ;;		None
 16157 ;; Return value:  Size  Location     Type
 16158 ;;                  1    wreg      void 
 16159 ;; Registers used:
 16160 ;;		None
 16161 ;; Tracked objects:
 16162 ;;		On entry : F/1
 16163 ;;		On exit  : F/1
 16164 ;;		Unchanged: F/0
 16165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16166 ;;      Params:         0       0       0       0       0       0       0       0       0
 16167 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16168 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16169 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16170 ;;Total ram usage:        0 bytes
 16171 ;; Hardware stack levels used:    1
 16172 ;; Hardware stack levels required when called:   11
 16173 ;; This function calls:
 16174 ;;		Nothing
 16175 ;; This function is called by:
 16176 ;;		_TMR1_Initialize
 16177 ;; This function uses a non-reentrant model
 16178 ;;
 16179                           
 16180                           	psect	text74
 16181  003B00                     __ptext74:
 16182                           	opt stack 0
 16183  003B00                     _TMR1_StartTimer:
 16184                           	opt stack 17
 16185                           
 16186                           ; BSR set to: 1
 16187                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 16188                           
 16189                           ; BSR set to: 1
 16190                           ;incstack = 0
 16191  003B00  80CD               	bsf	4045,0,c	;volatile
 16192                           
 16193                           ; BSR set to: 1
 16194  003B02  0012               	return		;funcret
 16195  003B04                     __end_of_TMR1_StartTimer:
 16196                           	opt stack 0
 16197                           tblptru	equ	0xFF8
 16198                           tblptrh	equ	0xFF7
 16199                           tblptrl	equ	0xFF6
 16200                           tablat	equ	0xFF5
 16201                           prodh	equ	0xFF4
 16202                           prodl	equ	0xFF3
 16203                           intcon	equ	0xFF2
 16204                           postinc0	equ	0xFEE
 16205                           wreg	equ	0xFE8
 16206                           indf1	equ	0xFE7
 16207                           fsr1h	equ	0xFE2
 16208                           fsr1l	equ	0xFE1
 16209                           indf2	equ	0xFDF
 16210                           postinc2	equ	0xFDE
 16211                           postdec2	equ	0xFDD
 16212                           plusw2	equ	0xFDB
 16213                           fsr2h	equ	0xFDA
 16214                           fsr2l	equ	0xFD9
 16215                           status	equ	0xFD8
 16216                           
 16217 ;; *************** function _SPI_Initialize *****************
 16218 ;; Defined at:
 16219 ;;		line 64 in file "../Includes/MccGenerated/spi.c"
 16220 ;; Parameters:    Size  Location     Type
 16221 ;;		None
 16222 ;; Auto vars:     Size  Location     Type
 16223 ;;		None
 16224 ;; Return value:  Size  Location     Type
 16225 ;;                  1    wreg      void 
 16226 ;; Registers used:
 16227 ;;		wreg, status,2
 16228 ;; Tracked objects:
 16229 ;;		On entry : F/F
 16230 ;;		On exit  : F/F
 16231 ;;		Unchanged: E/0
 16232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16233 ;;      Params:         0       0       0       0       0       0       0       0       0
 16234 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16235 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16236 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16237 ;;Total ram usage:        0 bytes
 16238 ;; Hardware stack levels used:    1
 16239 ;; Hardware stack levels required when called:   11
 16240 ;; This function calls:
 16241 ;;		Nothing
 16242 ;; This function is called by:
 16243 ;;		_SYSTEM_Initialize
 16244 ;; This function uses a non-reentrant model
 16245 ;;
 16246                           
 16247                           	psect	text75
 16248  003B68                     __ptext75:
 16249                           	opt stack 0
 16250  003B68                     _SPI_Initialize:
 16251                           	opt stack 18
 16252                           
 16253                           ; BSR set to: 15
 16254                           ;spi.c: 69: SSP1STAT = 0x00;
 16255                           
 16256                           ; BSR set to: 1
 16257                           ;incstack = 0
 16258  003B68  6AC7               	clrf	4039,c	;volatile
 16259                           
 16260                           ; BSR set to: 15
 16261                           ;spi.c: 72: SSP1CON1 = 0x21;
 16262  003B6A  0E21               	movlw	33
 16263  003B6C  6EC6               	movwf	4038,c	;volatile
 16264                           
 16265                           ; BSR set to: 15
 16266                           ;spi.c: 75: SSP1ADD = 0x00;
 16267  003B6E  6AC8               	clrf	4040,c	;volatile
 16268                           
 16269                           ; BSR set to: 15
 16270                           ;spi.c: 77: CKP = 1;
 16271  003B70  88C6               	bsf	4038,4,c	;volatile
 16272                           
 16273                           ; BSR set to: 15
 16274                           ;spi.c: 78: CKE = 0;
 16275  003B72  9CC7               	bcf	4039,6,c	;volatile
 16276                           
 16277                           ; BSR set to: 15
 16278  003B74  0012               	return		;funcret
 16279  003B76                     __end_of_SPI_Initialize:
 16280                           	opt stack 0
 16281                           tblptru	equ	0xFF8
 16282                           tblptrh	equ	0xFF7
 16283                           tblptrl	equ	0xFF6
 16284                           tablat	equ	0xFF5
 16285                           prodh	equ	0xFF4
 16286                           prodl	equ	0xFF3
 16287                           intcon	equ	0xFF2
 16288                           postinc0	equ	0xFEE
 16289                           wreg	equ	0xFE8
 16290                           indf1	equ	0xFE7
 16291                           fsr1h	equ	0xFE2
 16292                           fsr1l	equ	0xFE1
 16293                           indf2	equ	0xFDF
 16294                           postinc2	equ	0xFDE
 16295                           postdec2	equ	0xFDD
 16296                           plusw2	equ	0xFDB
 16297                           fsr2h	equ	0xFDA
 16298                           fsr2l	equ	0xFD9
 16299                           status	equ	0xFD8
 16300                           
 16301 ;; *************** function _PIN_MANAGER_Initialize *****************
 16302 ;; Defined at:
 16303 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 16304 ;; Parameters:    Size  Location     Type
 16305 ;;		None
 16306 ;; Auto vars:     Size  Location     Type
 16307 ;;		None
 16308 ;; Return value:  Size  Location     Type
 16309 ;;                  1    wreg      void 
 16310 ;; Registers used:
 16311 ;;		None
 16312 ;; Tracked objects:
 16313 ;;		On entry : 0/1
 16314 ;;		On exit  : F/F
 16315 ;;		Unchanged: 0/0
 16316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16317 ;;      Params:         0       0       0       0       0       0       0       0       0
 16318 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16319 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16320 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16321 ;;Total ram usage:        0 bytes
 16322 ;; Hardware stack levels used:    1
 16323 ;; Hardware stack levels required when called:   11
 16324 ;; This function calls:
 16325 ;;		Nothing
 16326 ;; This function is called by:
 16327 ;;		_moteApp_GoToSleep
 16328 ;;		_SYSTEM_Initialize
 16329 ;; This function uses a non-reentrant model
 16330 ;;
 16331                           
 16332                           	psect	text76
 16333  004322                     __ptext76:
 16334                           	opt stack 0
 16335  004322                     _PIN_MANAGER_Initialize:
 16336                           	opt stack 16
 16337                           
 16338                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 16339                           
 16340                           ; BSR set to: 15
 16341                           ;incstack = 0
 16342  004322  8092               	bsf	3986,0,c	;volatile
 16343                           
 16344                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 16345  004324  8292               	bsf	3986,1,c	;volatile
 16346                           
 16347                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 16348  004326  8492               	bsf	3986,2,c	;volatile
 16349                           
 16350                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 16351  004328  8692               	bsf	3986,3,c	;volatile
 16352                           
 16353                           ;pin_manager.c: 59: TRISAbits.TRISA4 = 0;
 16354  00432A  9892               	bcf	3986,4,c	;volatile
 16355                           
 16356                           ;pin_manager.c: 60: TRISAbits.TRISA5 = 0;
 16357  00432C  9A92               	bcf	3986,5,c	;volatile
 16358                           
 16359                           ;pin_manager.c: 61: TRISAbits.TRISA6 = 0;
 16360  00432E  9C92               	bcf	3986,6,c	;volatile
 16361                           
 16362                           ;pin_manager.c: 62: TRISAbits.TRISA7 = 0;
 16363  004330  9E92               	bcf	3986,7,c	;volatile
 16364                           
 16365                           ;pin_manager.c: 64: TRISBbits.TRISB0 = 0;
 16366  004332  9093               	bcf	3987,0,c	;volatile
 16367                           
 16368                           ;pin_manager.c: 65: TRISBbits.TRISB1 = 0;
 16369  004334  9293               	bcf	3987,1,c	;volatile
 16370                           
 16371                           ;pin_manager.c: 66: TRISBbits.TRISB2 = 0;
 16372  004336  9493               	bcf	3987,2,c	;volatile
 16373                           
 16374                           ;pin_manager.c: 67: TRISBbits.TRISB3 = 0;
 16375  004338  9693               	bcf	3987,3,c	;volatile
 16376                           
 16377                           ;pin_manager.c: 68: TRISBbits.TRISB5 = 0;
 16378  00433A  9A93               	bcf	3987,5,c	;volatile
 16379                           
 16380                           ;pin_manager.c: 70: TRISCbits.TRISC0 = 1;
 16381  00433C  8094               	bsf	3988,0,c	;volatile
 16382                           
 16383                           ;pin_manager.c: 71: TRISCbits.TRISC1 = 1;
 16384  00433E  8294               	bsf	3988,1,c	;volatile
 16385                           
 16386                           ;pin_manager.c: 72: TRISCbits.TRISC2 = 1;
 16387  004340  8494               	bsf	3988,2,c	;volatile
 16388                           
 16389                           ;pin_manager.c: 73: TRISCbits.TRISC6 = 0;
 16390  004342  9C94               	bcf	3988,6,c	;volatile
 16391                           
 16392                           ;pin_manager.c: 74: TRISCbits.TRISC7 = 1;
 16393  004344  8E94               	bsf	3988,7,c	;volatile
 16394                           
 16395                           ;pin_manager.c: 75: TRISBbits.TRISB6 = 0;
 16396  004346  9C93               	bcf	3987,6,c	;volatile
 16397                           
 16398                           ;pin_manager.c: 76: TRISBbits.TRISB7 = 1;
 16399  004348  8E93               	bsf	3987,7,c	;volatile
 16400                           
 16401                           ;pin_manager.c: 79: LATAbits.LATA4 = 1;
 16402  00434A  8889               	bsf	3977,4,c	;volatile
 16403                           
 16404                           ;pin_manager.c: 80: LATAbits.LATA5 = 0;
 16405  00434C  9A89               	bcf	3977,5,c	;volatile
 16406                           
 16407                           ;pin_manager.c: 81: LATAbits.LATA6 = 0;
 16408  00434E  9C89               	bcf	3977,6,c	;volatile
 16409                           
 16410                           ;pin_manager.c: 82: LATAbits.LATA7 = 0;
 16411  004350  9E89               	bcf	3977,7,c	;volatile
 16412                           
 16413                           ;pin_manager.c: 84: LATBbits.LATB2 = 0;
 16414  004352  948A               	bcf	3978,2,c	;volatile
 16415                           
 16416                           ;pin_manager.c: 85: LATBbits.LATB0 = 0;
 16417  004354  908A               	bcf	3978,0,c	;volatile
 16418                           
 16419                           ;pin_manager.c: 86: LATBbits.LATB5 = 0;
 16420  004356  9A8A               	bcf	3978,5,c	;volatile
 16421                           
 16422                           ;pin_manager.c: 87: LATBbits.LATB6 = 0;
 16423  004358  9C8A               	bcf	3978,6,c	;volatile
 16424                           
 16425                           ;pin_manager.c: 88: LATBbits.LATB7 = 0;
 16426  00435A  9E8A               	bcf	3978,7,c	;volatile
 16427                           
 16428                           ;pin_manager.c: 90: LATCbits.LATC2 = 0;
 16429  00435C  948B               	bcf	3979,2,c	;volatile
 16430                           
 16431                           ;pin_manager.c: 91: LATCbits.LATC6 = 0;
 16432  00435E  9C8B               	bcf	3979,6,c	;volatile
 16433                           
 16434                           ;pin_manager.c: 93: ANSELAbits.ANSA0 = 0;
 16435  004360  010F               	movlb	15	; () banked
 16436  004362  915B               	bcf	91,0,b	;volatile
 16437                           
 16438                           ;pin_manager.c: 94: ANSELAbits.ANSA1 = 1;
 16439  004364  835B               	bsf	91,1,b	;volatile
 16440                           
 16441                           ;pin_manager.c: 95: ANSELAbits.ANSA2 = 1;
 16442  004366  855B               	bsf	91,2,b	;volatile
 16443                           
 16444                           ;pin_manager.c: 96: ANSELAbits.ANSA3 = 1;
 16445  004368  875B               	bsf	91,3,b	;volatile
 16446                           
 16447                           ;pin_manager.c: 97: ANSELCbits.ANSC7 = 0;
 16448  00436A  9F5D               	bcf	93,7,b	;volatile
 16449                           
 16450                           ;pin_manager.c: 98: ANSELCbits.ANSC6 = 0;
 16451  00436C  9D5D               	bcf	93,6,b	;volatile
 16452                           
 16453                           ; BSR set to: 15
 16454  00436E  0012               	return		;funcret
 16455  004370                     __end_of_PIN_MANAGER_Initialize:
 16456                           	opt stack 0
 16457                           tblptru	equ	0xFF8
 16458                           tblptrh	equ	0xFF7
 16459                           tblptrl	equ	0xFF6
 16460                           tablat	equ	0xFF5
 16461                           prodh	equ	0xFF4
 16462                           prodl	equ	0xFF3
 16463                           intcon	equ	0xFF2
 16464                           postinc0	equ	0xFEE
 16465                           wreg	equ	0xFE8
 16466                           indf1	equ	0xFE7
 16467                           fsr1h	equ	0xFE2
 16468                           fsr1l	equ	0xFE1
 16469                           indf2	equ	0xFDF
 16470                           postinc2	equ	0xFDE
 16471                           postdec2	equ	0xFDD
 16472                           plusw2	equ	0xFDB
 16473                           fsr2h	equ	0xFDA
 16474                           fsr2l	equ	0xFD9
 16475                           status	equ	0xFD8
 16476                           
 16477 ;; *************** function _OSCILLATOR_Initialize *****************
 16478 ;; Defined at:
 16479 ;;		line 105 in file "../Includes/MccGenerated/mcc.c"
 16480 ;; Parameters:    Size  Location     Type
 16481 ;;		None
 16482 ;; Auto vars:     Size  Location     Type
 16483 ;;		None
 16484 ;; Return value:  Size  Location     Type
 16485 ;;                  1    wreg      void 
 16486 ;; Registers used:
 16487 ;;		wreg, status,2
 16488 ;; Tracked objects:
 16489 ;;		On entry : 0/0
 16490 ;;		On exit  : 0/0
 16491 ;;		Unchanged: 0/0
 16492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16493 ;;      Params:         0       0       0       0       0       0       0       0       0
 16494 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16495 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16496 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16497 ;;Total ram usage:        0 bytes
 16498 ;; Hardware stack levels used:    1
 16499 ;; Hardware stack levels required when called:   11
 16500 ;; This function calls:
 16501 ;;		Nothing
 16502 ;; This function is called by:
 16503 ;;		_SYSTEM_Initialize
 16504 ;; This function uses a non-reentrant model
 16505 ;;
 16506                           
 16507                           	psect	text77
 16508  003C32                     __ptext77:
 16509                           	opt stack 0
 16510  003C32                     _OSCILLATOR_Initialize:
 16511                           	opt stack 18
 16512                           
 16513                           ;mcc.c: 107: OSCTUNE = 0x80;
 16514                           
 16515                           ; BSR set to: 15
 16516                           ;incstack = 0
 16517  003C32  0E80               	movlw	128
 16518  003C34  6E9B               	movwf	3995,c	;volatile
 16519                           
 16520                           ;mcc.c: 108: OSCCON = 0x70;
 16521  003C36  0E70               	movlw	112
 16522  003C38  6ED3               	movwf	4051,c	;volatile
 16523                           
 16524                           ;mcc.c: 109: OSCCON2 = 0x10;
 16525  003C3A  0E10               	movlw	16
 16526  003C3C  6ED2               	movwf	4050,c	;volatile
 16527  003C3E                     l1023:
 16528  003C3E  AED2               	btfss	4050,7,c	;volatile
 16529  003C40  D7FE               	goto	l1023
 16530                           
 16531                           ;mcc.c: 111: ACTCON = 0x90;
 16532  003C42  0E90               	movlw	144
 16533  003C44  6EB5               	movwf	4021,c	;volatile
 16534  003C46  0C90               	retlw	144	;funcret
 16535  003C48                     __end_of_OSCILLATOR_Initialize:
 16536                           	opt stack 0
 16537                           tblptru	equ	0xFF8
 16538                           tblptrh	equ	0xFF7
 16539                           tblptrl	equ	0xFF6
 16540                           tablat	equ	0xFF5
 16541                           prodh	equ	0xFF4
 16542                           prodl	equ	0xFF3
 16543                           intcon	equ	0xFF2
 16544                           postinc0	equ	0xFEE
 16545                           wreg	equ	0xFE8
 16546                           indf1	equ	0xFE7
 16547                           fsr1h	equ	0xFE2
 16548                           fsr1l	equ	0xFE1
 16549                           indf2	equ	0xFDF
 16550                           postinc2	equ	0xFDE
 16551                           postdec2	equ	0xFDD
 16552                           plusw2	equ	0xFDB
 16553                           fsr2h	equ	0xFDA
 16554                           fsr2l	equ	0xFD9
 16555                           status	equ	0xFD8
 16556                           
 16557 ;; *************** function _CMP1_Initialize *****************
 16558 ;; Defined at:
 16559 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 16560 ;; Parameters:    Size  Location     Type
 16561 ;;		None
 16562 ;; Auto vars:     Size  Location     Type
 16563 ;;		None
 16564 ;; Return value:  Size  Location     Type
 16565 ;;                  1    wreg      void 
 16566 ;; Registers used:
 16567 ;;		wreg, status,2
 16568 ;; Tracked objects:
 16569 ;;		On entry : F/1
 16570 ;;		On exit  : F/1
 16571 ;;		Unchanged: F/0
 16572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16573 ;;      Params:         0       0       0       0       0       0       0       0       0
 16574 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16575 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16576 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16577 ;;Total ram usage:        0 bytes
 16578 ;; Hardware stack levels used:    1
 16579 ;; Hardware stack levels required when called:   11
 16580 ;; This function calls:
 16581 ;;		Nothing
 16582 ;; This function is called by:
 16583 ;;		_SYSTEM_Initialize
 16584 ;; This function uses a non-reentrant model
 16585 ;;
 16586                           
 16587                           	psect	text78
 16588  003B96                     __ptext78:
 16589                           	opt stack 0
 16590  003B96                     _CMP1_Initialize:
 16591                           	opt stack 18
 16592                           
 16593                           ; BSR set to: 1
 16594                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 16595                           
 16596                           ;incstack = 0
 16597  003B96  9CA0               	bcf	4000,6,c	;volatile
 16598                           
 16599                           ; BSR set to: 1
 16600                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 16601  003B98  0E9C               	movlw	156
 16602  003B9A  6E98               	movwf	3992,c	;volatile
 16603                           
 16604                           ; BSR set to: 1
 16605                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 16606  003B9C  8A9A               	bsf	3994,5,c	;volatile
 16607                           
 16608                           ; BSR set to: 1
 16609                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 16610  003B9E  929A               	bcf	3994,1,c	;volatile
 16611                           
 16612                           ; BSR set to: 1
 16613                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 16614  003BA0  969A               	bcf	3994,3,c	;volatile
 16615                           
 16616                           ; BSR set to: 1
 16617                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 16618  003BA2  9CA1               	bcf	4001,6,c	;volatile
 16619                           
 16620                           ; BSR set to: 1
 16621                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 16622  003BA4  9CA0               	bcf	4000,6,c	;volatile
 16623                           
 16624                           ; BSR set to: 1
 16625  003BA6  0C9C               	retlw	156	;funcret
 16626  003BA8                     __end_of_CMP1_Initialize:
 16627                           	opt stack 0
 16628                           tblptru	equ	0xFF8
 16629                           tblptrh	equ	0xFF7
 16630                           tblptrl	equ	0xFF6
 16631                           tablat	equ	0xFF5
 16632                           prodh	equ	0xFF4
 16633                           prodl	equ	0xFF3
 16634                           intcon	equ	0xFF2
 16635                           postinc0	equ	0xFEE
 16636                           wreg	equ	0xFE8
 16637                           indf1	equ	0xFE7
 16638                           fsr1h	equ	0xFE2
 16639                           fsr1l	equ	0xFE1
 16640                           indf2	equ	0xFDF
 16641                           postinc2	equ	0xFDE
 16642                           postdec2	equ	0xFDD
 16643                           plusw2	equ	0xFDB
 16644                           fsr2h	equ	0xFDA
 16645                           fsr2l	equ	0xFD9
 16646                           status	equ	0xFD8
 16647                           
 16648 ;; *************** function _ADC_Initialize *****************
 16649 ;; Defined at:
 16650 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 16651 ;; Parameters:    Size  Location     Type
 16652 ;;		None
 16653 ;; Auto vars:     Size  Location     Type
 16654 ;;		None
 16655 ;; Return value:  Size  Location     Type
 16656 ;;                  1    wreg      void 
 16657 ;; Registers used:
 16658 ;;		wreg, status,2
 16659 ;; Tracked objects:
 16660 ;;		On entry : F/1
 16661 ;;		On exit  : F/1
 16662 ;;		Unchanged: F/0
 16663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16664 ;;      Params:         0       0       0       0       0       0       0       0       0
 16665 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16666 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16667 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16668 ;;Total ram usage:        0 bytes
 16669 ;; Hardware stack levels used:    1
 16670 ;; Hardware stack levels required when called:   11
 16671 ;; This function calls:
 16672 ;;		Nothing
 16673 ;; This function is called by:
 16674 ;;		_SYSTEM_Initialize
 16675 ;; This function uses a non-reentrant model
 16676 ;;
 16677                           
 16678                           	psect	text79
 16679  003C1C                     __ptext79:
 16680                           	opt stack 0
 16681  003C1C                     _ADC_Initialize:
 16682                           	opt stack 18
 16683                           
 16684                           ; BSR set to: 1
 16685                           ;adc.c: 68: VREFCON0 = 0b10100000;
 16686                           
 16687                           ; BSR set to: 1
 16688                           ;incstack = 0
 16689  003C1C  0EA0               	movlw	160
 16690  003C1E  6E7D               	movwf	3965,c	;volatile
 16691                           
 16692                           ;adc.c: 70: ADCON0 = 0x01;
 16693  003C20  0E01               	movlw	1
 16694  003C22  6EC2               	movwf	4034,c	;volatile
 16695                           
 16696                           ;adc.c: 73: ADCON1 = 0x08;
 16697  003C24  0E08               	movlw	8
 16698  003C26  6EC1               	movwf	4033,c	;volatile
 16699                           
 16700                           ;adc.c: 76: ADCON2 = 0b10001110;
 16701  003C28  0E8E               	movlw	142
 16702  003C2A  6EC0               	movwf	4032,c	;volatile
 16703                           
 16704                           ; BSR set to: 1
 16705                           ;adc.c: 79: ADRESL = 0x00;
 16706  003C2C  6AC3               	clrf	4035,c	;volatile
 16707                           
 16708                           ; BSR set to: 1
 16709                           ;adc.c: 82: ADRESH = 0x00;
 16710  003C2E  6AC4               	clrf	4036,c	;volatile
 16711                           
 16712                           ; BSR set to: 1
 16713  003C30  0012               	return		;funcret
 16714  003C32                     __end_of_ADC_Initialize:
 16715                           	opt stack 0
 16716                           tblptru	equ	0xFF8
 16717                           tblptrh	equ	0xFF7
 16718                           tblptrl	equ	0xFF6
 16719                           tablat	equ	0xFF5
 16720                           prodh	equ	0xFF4
 16721                           prodl	equ	0xFF3
 16722                           intcon	equ	0xFF2
 16723                           postinc0	equ	0xFEE
 16724                           wreg	equ	0xFE8
 16725                           indf1	equ	0xFE7
 16726                           fsr1h	equ	0xFE2
 16727                           fsr1l	equ	0xFE1
 16728                           indf2	equ	0xFDF
 16729                           postinc2	equ	0xFDE
 16730                           postdec2	equ	0xFDD
 16731                           plusw2	equ	0xFDB
 16732                           fsr2h	equ	0xFDA
 16733                           fsr2l	equ	0xFD9
 16734                           status	equ	0xFD8
 16735                           
 16736 ;; *************** function _MOTEapp_handlerState *****************
 16737 ;; Defined at:
 16738 ;;		line 168 in file "../Includes/Board/MOTEapp.c"
 16739 ;; Parameters:    Size  Location     Type
 16740 ;;  state           1    wreg     enum E6355
 16741 ;; Auto vars:     Size  Location     Type
 16742 ;;  state           1    0[BANK0 ] enum E6355
 16743 ;; Return value:  Size  Location     Type
 16744 ;;                  1    wreg      void 
 16745 ;; Registers used:
 16746 ;;		wreg
 16747 ;; Tracked objects:
 16748 ;;		On entry : F/1
 16749 ;;		On exit  : 0/0
 16750 ;;		Unchanged: 0/0
 16751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16752 ;;      Params:         0       0       0       0       0       0       0       0       0
 16753 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16754 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16755 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16756 ;;Total ram usage:        1 bytes
 16757 ;; Hardware stack levels used:    1
 16758 ;; Hardware stack levels required when called:   11
 16759 ;; This function calls:
 16760 ;;		Nothing
 16761 ;; This function is called by:
 16762 ;;		_main
 16763 ;; This function uses a non-reentrant model
 16764 ;;
 16765                           
 16766                           	psect	text80
 16767  003B24                     __ptext80:
 16768                           	opt stack 0
 16769  003B24                     _MOTEapp_handlerState:
 16770                           	opt stack 19
 16771                           
 16772                           ; BSR set to: 1
 16773                           ;incstack = 0
 16774                           ;MOTEapp_handlerState@state stored from wreg
 16775  003B24  0100               	movlb	0	; () banked
 16776  003B26  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 16777                           
 16778                           ;MOTEapp.c: 170: moteState = state;
 16779  003B28  C060  F0F9         	movff	MOTEapp_handlerState@state,_moteState
 16780  003B2C  0012               	return		;funcret
 16781  003B2E                     __end_of_MOTEapp_handlerState:
 16782                           	opt stack 0
 16783                           tblptru	equ	0xFF8
 16784                           tblptrh	equ	0xFF7
 16785                           tblptrl	equ	0xFF6
 16786                           tablat	equ	0xFF5
 16787                           prodh	equ	0xFF4
 16788                           prodl	equ	0xFF3
 16789                           intcon	equ	0xFF2
 16790                           postinc0	equ	0xFEE
 16791                           wreg	equ	0xFE8
 16792                           indf1	equ	0xFE7
 16793                           fsr1h	equ	0xFE2
 16794                           fsr1l	equ	0xFE1
 16795                           indf2	equ	0xFDF
 16796                           postinc2	equ	0xFDE
 16797                           postdec2	equ	0xFDD
 16798                           plusw2	equ	0xFDB
 16799                           fsr2h	equ	0xFDA
 16800                           fsr2l	equ	0xFD9
 16801                           status	equ	0xFD8
 16802                           
 16803 ;; *************** function _DATAEE_ReadByte *****************
 16804 ;; Defined at:
 16805 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 16806 ;; Parameters:    Size  Location     Type
 16807 ;;  bAdd            1    wreg     unsigned char 
 16808 ;; Auto vars:     Size  Location     Type
 16809 ;;  bAdd            1    0[BANK0 ] unsigned char 
 16810 ;; Return value:  Size  Location     Type
 16811 ;;                  1    wreg      unsigned char 
 16812 ;; Registers used:
 16813 ;;		wreg, status,2
 16814 ;; Tracked objects:
 16815 ;;		On entry : F/0
 16816 ;;		On exit  : 0/0
 16817 ;;		Unchanged: 0/0
 16818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16819 ;;      Params:         0       0       0       0       0       0       0       0       0
 16820 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16821 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16822 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16823 ;;Total ram usage:        1 bytes
 16824 ;; Hardware stack levels used:    1
 16825 ;; Hardware stack levels required when called:   11
 16826 ;; This function calls:
 16827 ;;		Nothing
 16828 ;; This function is called by:
 16829 ;;		_main
 16830 ;; This function uses a non-reentrant model
 16831 ;;
 16832                           
 16833                           	psect	text81
 16834  003BCC                     __ptext81:
 16835                           	opt stack 0
 16836  003BCC                     _DATAEE_ReadByte:
 16837                           	opt stack 19
 16838                           
 16839                           ;incstack = 0
 16840                           ;DATAEE_ReadByte@bAdd stored from wreg
 16841  003BCC  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 16842                           
 16843                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 16844  003BCE  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 16845                           
 16846                           ;memory.c: 191: EECON1bits.CFGS = 0;
 16847  003BD2  9CA6               	bcf	4006,6,c	;volatile
 16848                           
 16849                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 16850  003BD4  9EA6               	bcf	4006,7,c	;volatile
 16851                           
 16852                           ;memory.c: 193: EECON1bits.RD = 1;
 16853  003BD6  80A6               	bsf	4006,0,c	;volatile
 16854                           
 16855                           ;memory.c: 194: __nop();
 16856  003BD8  F000               	nop	
 16857                           
 16858                           ;memory.c: 195: __nop();
 16859  003BDA  F000               	nop	
 16860                           
 16861                           ;memory.c: 197: return (EEDATA);
 16862  003BDC  50A8               	movf	4008,w,c	;volatile
 16863  003BDE  0012               	return		;funcret
 16864  003BE0                     __end_of_DATAEE_ReadByte:
 16865                           	opt stack 0
 16866                           tblptru	equ	0xFF8
 16867                           tblptrh	equ	0xFF7
 16868                           tblptrl	equ	0xFF6
 16869                           tablat	equ	0xFF5
 16870                           prodh	equ	0xFF4
 16871                           prodl	equ	0xFF3
 16872                           intcon	equ	0xFF2
 16873                           postinc0	equ	0xFEE
 16874                           wreg	equ	0xFE8
 16875                           indf1	equ	0xFE7
 16876                           fsr1h	equ	0xFE2
 16877                           fsr1l	equ	0xFE1
 16878                           indf2	equ	0xFDF
 16879                           postinc2	equ	0xFDE
 16880                           postdec2	equ	0xFDD
 16881                           plusw2	equ	0xFDB
 16882                           fsr2h	equ	0xFDA
 16883                           fsr2l	equ	0xFD9
 16884                           status	equ	0xFD8
 16885                           
 16886 ;; *************** function _INTERRUPT_InterruptManager *****************
 16887 ;; Defined at:
 16888 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 16889 ;; Parameters:    Size  Location     Type
 16890 ;;		None
 16891 ;; Auto vars:     Size  Location     Type
 16892 ;;		None
 16893 ;; Return value:  Size  Location     Type
 16894 ;;                  1    wreg      void 
 16895 ;; Registers used:
 16896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16897 ;; Tracked objects:
 16898 ;;		On entry : 0/0
 16899 ;;		On exit  : 0/0
 16900 ;;		Unchanged: 0/0
 16901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16902 ;;      Params:         0       0       0       0       0       0       0       0       0
 16903 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16904 ;;      Temps:         12       0       0       0       0       0       0       0       0
 16905 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16906 ;;Total ram usage:       12 bytes
 16907 ;; Hardware stack levels used:    1
 16908 ;; Hardware stack levels required when called:   10
 16909 ;; This function calls:
 16910 ;;		_CMP1_ISR
 16911 ;;		_EUSART_Receive_ISR
 16912 ;;		_EUSART_Transmit_ISR
 16913 ;;		_TMR1_ISR
 16914 ;;		_TMRapp_Tick
 16915 ;;		_USBDeviceTasks
 16916 ;;		_USBapp_setrxByteFlag
 16917 ;; This function is called by:
 16918 ;;		Interrupt level 2
 16919 ;; This function uses a non-reentrant model
 16920 ;;
 16921                           
 16922                           	psect	intcode
 16923  001008                     __pintcode:
 16924                           	opt stack 0
 16925  001008                     _INTERRUPT_InterruptManager:
 16926                           	opt stack 10
 16927                           
 16928                           ;incstack = 0
 16929  001008  825A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16930  00100A  CFFA F04E          	movff	pclath,??_INTERRUPT_InterruptManager
 16931  00100E  CFFB F04F          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 16932  001012  CFE1 F050          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 16933  001016  CFE2 F051          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 16934  00101A  CFD9 F052          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 16935  00101E  CFDA F053          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 16936  001022  CFF3 F054          	movff	prodl,??_INTERRUPT_InterruptManager+6
 16937  001026  CFF4 F055          	movff	prodh,??_INTERRUPT_InterruptManager+7
 16938  00102A  CFF6 F056          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 16939  00102E  CFF7 F057          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 16940  001032  CFF8 F058          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 16941  001036  CFF5 F059          	movff	tablat,??_INTERRUPT_InterruptManager+11
 16942                           
 16943                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 16944  00103A  B09D               	btfsc	3997,0,c	;volatile
 16945  00103C  A09E               	btfss	3998,0,c	;volatile
 16946  00103E  D005               	goto	i2l985
 16947                           
 16948                           ;interrupt_manager.c: 59: {
 16949                           ;interrupt_manager.c: 60: TMR1_ISR();
 16950  001040  EC9C  F01D         	call	_TMR1_ISR	;wreg free
 16951                           
 16952                           ;interrupt_manager.c: 62: TMRapp_Tick();
 16953  001044  EC88  F01D         	call	_TMRapp_Tick	;wreg free
 16954                           
 16955                           ;interrupt_manager.c: 63: }
 16956  001048  D016               	goto	i2l993
 16957  00104A                     i2l985:
 16958                           
 16959                           ;interrupt_manager.c: 64: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 16960  00104A  BA9D               	btfsc	3997,5,c	;volatile
 16961  00104C  AA9E               	btfss	3998,5,c	;volatile
 16962  00104E  D005               	goto	i2l987
 16963                           
 16964                           ;interrupt_manager.c: 65: {
 16965                           ;interrupt_manager.c: 66: USBapp_setrxByteFlag();
 16966  001050  EC8B  F01D         	call	_USBapp_setrxByteFlag	;wreg free
 16967                           
 16968                           ;interrupt_manager.c: 67: EUSART_Receive_ISR();
 16969  001054  EC2E  F01F         	call	_EUSART_Receive_ISR	;wreg free
 16970                           
 16971                           ;interrupt_manager.c: 68: }
 16972  001058  D00E               	goto	i2l993
 16973  00105A                     i2l987:
 16974                           
 16975                           ;interrupt_manager.c: 69: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 16976  00105A  B89D               	btfsc	3997,4,c	;volatile
 16977  00105C  A89E               	btfss	3998,4,c	;volatile
 16978  00105E  D003               	goto	i2l989
 16979                           
 16980                           ;interrupt_manager.c: 70: {
 16981                           ;interrupt_manager.c: 71: EUSART_Transmit_ISR();
 16982  001060  ECF2  F01E         	call	_EUSART_Transmit_ISR	;wreg free
 16983                           
 16984                           ;interrupt_manager.c: 72: }
 16985  001064  D008               	goto	i2l993
 16986  001066                     i2l989:
 16987                           
 16988                           ;interrupt_manager.c: 73: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 16989  001066  BCA0               	btfsc	4000,6,c	;volatile
 16990  001068  ACA1               	btfss	4001,6,c	;volatile
 16991  00106A  D003               	goto	i2l9157
 16992                           
 16993                           ;interrupt_manager.c: 74: {
 16994                           ;interrupt_manager.c: 75: CMP1_ISR();
 16995  00106C  EC7E  F01D         	call	_CMP1_ISR	;wreg free
 16996                           
 16997                           ;interrupt_manager.c: 76: }
 16998  001070  D002               	goto	i2l993
 16999  001072                     i2l9157:
 17000                           
 17001                           ;interrupt_manager.c: 77: else
 17002                           ;interrupt_manager.c: 78: {
 17003                           ;interrupt_manager.c: 80: USBDeviceTasks();
 17004  001072  ECE4  F02D         	call	_USBDeviceTasks	;wreg free
 17005  001076                     i2l993:
 17006  001076  C059  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 17007  00107A  C058  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 17008  00107E  C057  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 17009  001082  C056  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 17010  001086  C055  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 17011  00108A  C054  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 17012  00108E  C053  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 17013  001092  C052  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 17014  001096  C051  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 17015  00109A  C050  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 17016  00109E  C04F  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17017  0010A2  C04E  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 17018  0010A6  925A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17019  0010A8  0011               	retfie		f
 17020  0010AA                     __end_of_INTERRUPT_InterruptManager:
 17021                           	opt stack 0
 17022                           pclatu	equ	0xFFB
 17023                           pclath	equ	0xFFA
 17024                           tblptru	equ	0xFF8
 17025                           tblptrh	equ	0xFF7
 17026                           tblptrl	equ	0xFF6
 17027                           tablat	equ	0xFF5
 17028                           prodh	equ	0xFF4
 17029                           prodl	equ	0xFF3
 17030                           intcon	equ	0xFF2
 17031                           postinc0	equ	0xFEE
 17032                           wreg	equ	0xFE8
 17033                           indf1	equ	0xFE7
 17034                           fsr1h	equ	0xFE2
 17035                           fsr1l	equ	0xFE1
 17036                           indf2	equ	0xFDF
 17037                           postinc2	equ	0xFDE
 17038                           postdec2	equ	0xFDD
 17039                           plusw2	equ	0xFDB
 17040                           fsr2h	equ	0xFDA
 17041                           fsr2l	equ	0xFD9
 17042                           status	equ	0xFD8
 17043                           
 17044 ;; *************** function _USBapp_setrxByteFlag *****************
 17045 ;; Defined at:
 17046 ;;		line 226 in file "../Includes/Board/USBapp.c"
 17047 ;; Parameters:    Size  Location     Type
 17048 ;;		None
 17049 ;; Auto vars:     Size  Location     Type
 17050 ;;		None
 17051 ;; Return value:  Size  Location     Type
 17052 ;;                  1    wreg      void 
 17053 ;; Registers used:
 17054 ;;		wreg, status,2
 17055 ;; Tracked objects:
 17056 ;;		On entry : 0/0
 17057 ;;		On exit  : 0/0
 17058 ;;		Unchanged: 0/0
 17059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17060 ;;      Params:         0       0       0       0       0       0       0       0       0
 17061 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17062 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17063 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17064 ;;Total ram usage:        0 bytes
 17065 ;; Hardware stack levels used:    1
 17066 ;; This function calls:
 17067 ;;		Nothing
 17068 ;; This function is called by:
 17069 ;;		_INTERRUPT_InterruptManager
 17070 ;; This function uses a non-reentrant model
 17071 ;;
 17072                           
 17073                           	psect	text83
 17074  003B16                     __ptext83:
 17075                           	opt stack 0
 17076  003B16                     _USBapp_setrxByteFlag:
 17077                           	opt stack 19
 17078                           
 17079                           ;USBapp.c: 228: rxByteFlag = 1;
 17080                           
 17081                           ;incstack = 0
 17082  003B16  0E01               	movlw	1
 17083  003B18  6E28               	movwf	_rxByteFlag,c	;volatile
 17084  003B1A  0C01               	retlw	1	;funcret
 17085  003B1C                     __end_of_USBapp_setrxByteFlag:
 17086                           	opt stack 0
 17087                           pclatu	equ	0xFFB
 17088                           pclath	equ	0xFFA
 17089                           tblptru	equ	0xFF8
 17090                           tblptrh	equ	0xFF7
 17091                           tblptrl	equ	0xFF6
 17092                           tablat	equ	0xFF5
 17093                           prodh	equ	0xFF4
 17094                           prodl	equ	0xFF3
 17095                           intcon	equ	0xFF2
 17096                           postinc0	equ	0xFEE
 17097                           wreg	equ	0xFE8
 17098                           indf1	equ	0xFE7
 17099                           fsr1h	equ	0xFE2
 17100                           fsr1l	equ	0xFE1
 17101                           indf2	equ	0xFDF
 17102                           postinc2	equ	0xFDE
 17103                           postdec2	equ	0xFDD
 17104                           plusw2	equ	0xFDB
 17105                           fsr2h	equ	0xFDA
 17106                           fsr2l	equ	0xFD9
 17107                           status	equ	0xFD8
 17108                           
 17109 ;; *************** function _USBDeviceTasks *****************
 17110 ;; Defined at:
 17111 ;;		line 428 in file "../Includes/Usb/framework/usb_device.c"
 17112 ;; Parameters:    Size  Location     Type
 17113 ;;		None
 17114 ;; Auto vars:     Size  Location     Type
 17115 ;;  i               1   31[COMRAM] unsigned char 
 17116 ;; Return value:  Size  Location     Type
 17117 ;;                  1    wreg      void 
 17118 ;; Registers used:
 17119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17120 ;; Tracked objects:
 17121 ;;		On entry : 0/0
 17122 ;;		On exit  : 0/0
 17123 ;;		Unchanged: 0/0
 17124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17125 ;;      Params:         0       0       0       0       0       0       0       0       0
 17126 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17127 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17128 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17129 ;;Total ram usage:        1 bytes
 17130 ;; Hardware stack levels used:    1
 17131 ;; Hardware stack levels required when called:    9
 17132 ;; This function calls:
 17133 ;;		_USBCtrlEPAllowStatusStage
 17134 ;;		_USBCtrlEPService
 17135 ;;		_USBStallHandler
 17136 ;;		_USBSuspend
 17137 ;;		_USBWakeFromSuspend
 17138 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17139 ;;		i2_USBDeviceInit
 17140 ;; This function is called by:
 17141 ;;		_INTERRUPT_InterruptManager
 17142 ;; This function uses a non-reentrant model
 17143 ;;
 17144                           
 17145                           	psect	text84
 17146  005BC8                     __ptext84:
 17147                           	opt stack 0
 17148  005BC8                     _USBDeviceTasks:
 17149                           	opt stack 10
 17150                           
 17151                           ;usb_device.c: 430: uint8_t i;
 17152                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 17153                           
 17154                           ;incstack = 0
 17155  005BC8  0100               	movlb	0	; () banked
 17156  005BCA  05F4               	decf	_USBDeviceState& (0+255),w,b	;volatile
 17157  005BCC  E107               	bnz	i2l8993
 17158                           
 17159                           ; BSR set to: 0
 17160                           ;usb_device.c: 433: {
 17161                           ;usb_device.c: 443: if(!UCONbits.SE0)
 17162  005BCE  BA60               	btfsc	3936,5,c	;volatile
 17163  005BD0  D005               	goto	i2l8993
 17164                           
 17165                           ; BSR set to: 0
 17166                           ;usb_device.c: 444: {
 17167                           ;usb_device.c: 445: {UIR = 0;};
 17168  005BD2  6A65               	clrf	3941,c	;volatile
 17169                           
 17170                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 17171  005BD4  8064               	bsf	3940,0,c	;volatile
 17172                           
 17173                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 17174  005BD6  8864               	bsf	3940,4,c	;volatile
 17175                           
 17176                           ; BSR set to: 0
 17177                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 17178  005BD8  0E02               	movlw	2
 17179  005BDA  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 17180  005BDC                     i2l8993:
 17181                           
 17182                           ; BSR set to: 0
 17183                           ;usb_device.c: 449: }
 17184                           ;usb_device.c: 450: }
 17185                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 17186  005BDC  B465               	btfsc	3941,2,c	;volatile
 17187                           
 17188                           ; BSR set to: 0
 17189  005BDE  A464               	btfss	3940,2,c	;volatile
 17190  005BE0  D003               	goto	i2l9001
 17191                           
 17192                           ; BSR set to: 0
 17193                           ;usb_device.c: 455: {
 17194                           ;usb_device.c: 456: (UIR &= 0xFB);
 17195  005BE2  9465               	bcf	3941,2,c	;volatile
 17196                           
 17197                           ; BSR set to: 0
 17198                           ;usb_device.c: 457: USBWakeFromSuspend();
 17199  005BE4  ECBA  F01E         	call	_USBWakeFromSuspend	;wreg free
 17200  005BE8                     i2l9001:
 17201                           
 17202                           ;usb_device.c: 458: }
 17203                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 17204  005BE8  A260               	btfss	3936,1,c	;volatile
 17205  005BEA  D002               	goto	i2l1454
 17206                           
 17207                           ;usb_device.c: 464: {
 17208                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 17209  005BEC  94A4               	bcf	4004,2,c	;volatile
 17210                           
 17211                           ;usb_device.c: 466: return;
 17212  005BEE  0012               	return	
 17213  005BF0                     i2l1454:
 17214                           
 17215                           ;usb_device.c: 467: }
 17216                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 17217  005BF0  B065               	btfsc	3941,0,c	;volatile
 17218  005BF2  A064               	btfss	3940,0,c	;volatile
 17219  005BF4  D006               	goto	i2l9015
 17220                           
 17221                           ;usb_device.c: 480: {
 17222                           ;usb_device.c: 481: USBDeviceInit();
 17223  005BF6  EC90  F02B         	call	i2_USBDeviceInit	;wreg free
 17224                           
 17225                           ; BSR set to: 0
 17226                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 17227  005BFA  84A3               	bsf	4003,2,c	;volatile
 17228                           
 17229                           ; BSR set to: 0
 17230                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 17231  005BFC  0E04               	movlw	4
 17232  005BFE  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 17233                           
 17234                           ; BSR set to: 0
 17235                           ;usb_device.c: 489: (UIR &= 0xFE);
 17236  005C00  9065               	bcf	3941,0,c	;volatile
 17237  005C02                     i2l9015:
 17238                           
 17239                           ;usb_device.c: 490: }
 17240                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 17241  005C02  B865               	btfsc	3941,4,c	;volatile
 17242  005C04  A864               	btfss	3940,4,c	;volatile
 17243  005C06  D003               	goto	i2l9023
 17244                           
 17245                           ;usb_device.c: 496: {
 17246                           ;usb_device.c: 497: USBSuspend();
 17247  005C08  EC3E  F01E         	call	_USBSuspend	;wreg free
 17248                           
 17249                           ;usb_device.c: 498: (UIR &= 0xEF);
 17250  005C0C  9865               	bcf	3941,4,c	;volatile
 17251  005C0E                     i2l9023:
 17252                           
 17253                           ;usb_device.c: 499: }
 17254                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 17255  005C0E  AC65               	btfss	3941,6,c	;volatile
 17256  005C10  D014               	goto	i2l9039
 17257                           
 17258                           ;usb_device.c: 502: {
 17259                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 17260  005C12  AC64               	btfss	3940,6,c	;volatile
 17261  005C14  D00A               	goto	i2l9029
 17262                           
 17263                           ;usb_device.c: 504: {
 17264                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 17265  005C16  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17266  005C18  0E73               	movlw	115
 17267  005C1A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17268  005C1C  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17269  005C1E  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17270  005C20  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17271  005C22  0E01               	movlw	1
 17272  005C24  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17273  005C26  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17274  005C2A                     i2l9029:
 17275                           
 17276                           ;usb_device.c: 506: }
 17277                           ;usb_device.c: 507: (UIR &= 0xBF);
 17278  005C2A  9C65               	bcf	3941,6,c	;volatile
 17279                           
 17280                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 17281  005C2C  501E               	movf	_USBStatusStageTimeoutCounter,w,c
 17282  005C2E  E001               	bz	i2l9035
 17283                           
 17284                           ;usb_device.c: 513: {
 17285                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 17286  005C30  061E               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 17287  005C32                     i2l9035:
 17288                           
 17289                           ;usb_device.c: 515: }
 17290                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 17291  005C32  501E               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 17292  005C34  E102               	bnz	i2l9039
 17293                           
 17294                           ;usb_device.c: 522: {
 17295                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 17296  005C36  EC2B  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17297  005C3A                     i2l9039:
 17298                           
 17299                           ;usb_device.c: 524: }
 17300                           ;usb_device.c: 525: }
 17301                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 17302  005C3A  BA65               	btfsc	3941,5,c	;volatile
 17303  005C3C  AA64               	btfss	3940,5,c	;volatile
 17304  005C3E  D002               	goto	i2l9045
 17305                           
 17306                           ;usb_device.c: 528: {
 17307                           ;usb_device.c: 529: USBStallHandler();
 17308  005C40  ECBE  F020         	call	_USBStallHandler	;wreg free
 17309  005C44                     i2l9045:
 17310                           
 17311                           ;usb_device.c: 530: }
 17312                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 17313  005C44  B265               	btfsc	3941,1,c	;volatile
 17314  005C46  A264               	btfss	3940,1,c	;volatile
 17315  005C48  D00B               	goto	i2l9053
 17316                           
 17317                           ;usb_device.c: 533: {
 17318                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 17319  005C4A  0E7F               	movlw	127
 17320  005C4C  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17321  005C4E  683B               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17322  005C50  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17323  005C52  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17324  005C54  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17325  005C56  0E01               	movlw	1
 17326  005C58  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17327  005C5A  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17328                           
 17329                           ;usb_device.c: 535: {UEIR = 0;};
 17330  005C5E  6A67               	clrf	3943,c	;volatile
 17331  005C60                     i2l9053:
 17332                           
 17333                           ;usb_device.c: 536: }
 17334                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 17335  005C60  0E04               	movlw	4
 17336  005C62  0100               	movlb	0	; () banked
 17337  005C64  61F4               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 17338  005C66  D002               	goto	i2l1464
 17339                           
 17340                           ; BSR set to: 0
 17341                           ;usb_device.c: 544: {
 17342                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 17343  005C68  94A4               	bcf	4004,2,c	;volatile
 17344                           
 17345                           ;usb_device.c: 546: return;
 17346  005C6A  0C04               	retlw	4
 17347  005C6C                     i2l1464:
 17348                           
 17349                           ; BSR set to: 0
 17350                           ;usb_device.c: 547: }
 17351                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 17352  005C6C  A664               	btfss	3940,3,c	;volatile
 17353  005C6E  D02E               	goto	i2l1465
 17354                           
 17355                           ; BSR set to: 0
 17356                           ;usb_device.c: 553: {
 17357                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 17358  005C70  6A4D               	clrf	USBDeviceTasks@i,c
 17359  005C72                     i2l1466:
 17360                           
 17361                           ;usb_device.c: 555: {
 17362                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 17363  005C72  A665               	btfss	3941,3,c	;volatile
 17364  005C74  D02B               	goto	i2l1465
 17365                           
 17366                           ;usb_device.c: 557: {
 17367                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 17368  005C76  CF61 F02D          	movff	3937,_USTATcopy	;volatile
 17369                           
 17370                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 17371  005C7A  302D               	rrcf	_USTATcopy,w,c	;volatile
 17372  005C7C  32E8               	rrcf	wreg,f,c
 17373  005C7E  32E8               	rrcf	wreg,f,c
 17374  005C80  0B0F               	andlw	15
 17375  005C82  6E21               	movwf	_endpoint_number,c	;volatile
 17376                           
 17377                           ;usb_device.c: 562: (UIR &= 0xF7);
 17378  005C84  9665               	bcf	3941,3,c	;volatile
 17379                           
 17380                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 17381  005C86  B42D               	btfsc	_USTATcopy,2,c	;volatile
 17382  005C88  D006               	goto	i2l9073
 17383                           
 17384                           ;usb_device.c: 567: {
 17385                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 17386  005C8A  0E25               	movlw	low _ep_data_out
 17387  005C8C  2421               	addwf	_endpoint_number,w,c	;volatile
 17388  005C8E  6ED9               	movwf	fsr2l,c
 17389  005C90  6ADA               	clrf	fsr2h,c
 17390  005C92  0E01               	movlw	high _ep_data_out
 17391  005C94  D005               	goto	L27
 17392  005C96                     i2l9073:
 17393                           
 17394                           ;usb_device.c: 570: else
 17395                           ;usb_device.c: 571: {
 17396                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 17397  005C96  0E22               	movlw	low _ep_data_in
 17398  005C98  2421               	addwf	_endpoint_number,w,c	;volatile
 17399  005C9A  6ED9               	movwf	fsr2l,c
 17400  005C9C  6ADA               	clrf	fsr2h,c
 17401  005C9E  0E01               	movlw	high _ep_data_in
 17402  005CA0                     L27:
 17403  005CA0  22DA               	addwfc	fsr2h,f,c
 17404  005CA2  0101               	movlb	1	; () banked
 17405  005CA4  70DF               	btg	indf2,0,c
 17406                           
 17407                           ; BSR set to: 1
 17408                           ;usb_device.c: 573: }
 17409                           ;usb_device.c: 577: if(endpoint_number == 0)
 17410  005CA6  5021               	movf	_endpoint_number,w,c	;volatile
 17411  005CA8  E103               	bnz	i2l9079
 17412                           
 17413                           ; BSR set to: 1
 17414                           ;usb_device.c: 578: {
 17415                           ;usb_device.c: 579: USBCtrlEPService();
 17416  005CAA  EC76  F028         	call	_USBCtrlEPService	;wreg free
 17417                           
 17418                           ;usb_device.c: 580: }
 17419  005CAE  D00A               	goto	i2l9081
 17420  005CB0                     i2l9079:
 17421                           
 17422                           ; BSR set to: 1
 17423                           ;usb_device.c: 581: else
 17424                           ;usb_device.c: 582: {
 17425                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 17426  005CB0  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17427  005CB2  0E72               	movlw	114
 17428  005CB4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17429  005CB6  0E2D               	movlw	low _USTATcopy
 17430  005CB8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17431  005CBA  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17432  005CBC  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17433  005CBE  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17434  005CC0  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17435  005CC4                     i2l9081:
 17436  005CC4  2A4D               	incf	USBDeviceTasks@i,f,c
 17437  005CC6  0E03               	movlw	3
 17438  005CC8  644D               	cpfsgt	USBDeviceTasks@i,c
 17439  005CCA  D7D3               	goto	i2l1466
 17440  005CCC                     i2l1465:
 17441                           
 17442                           ;usb_device.c: 589: }
 17443                           ;usb_device.c: 590: }
 17444                           ;usb_device.c: 591: }
 17445                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 17446  005CCC  94A4               	bcf	4004,2,c	;volatile
 17447  005CCE  0012               	return		;funcret
 17448  005CD0                     __end_of_USBDeviceTasks:
 17449                           	opt stack 0
 17450                           pclatu	equ	0xFFB
 17451                           pclath	equ	0xFFA
 17452                           tblptru	equ	0xFF8
 17453                           tblptrh	equ	0xFF7
 17454                           tblptrl	equ	0xFF6
 17455                           tablat	equ	0xFF5
 17456                           prodh	equ	0xFF4
 17457                           prodl	equ	0xFF3
 17458                           intcon	equ	0xFF2
 17459                           postinc0	equ	0xFEE
 17460                           wreg	equ	0xFE8
 17461                           indf1	equ	0xFE7
 17462                           fsr1h	equ	0xFE2
 17463                           fsr1l	equ	0xFE1
 17464                           indf2	equ	0xFDF
 17465                           postinc2	equ	0xFDE
 17466                           postdec2	equ	0xFDD
 17467                           plusw2	equ	0xFDB
 17468                           fsr2h	equ	0xFDA
 17469                           fsr2l	equ	0xFD9
 17470                           status	equ	0xFD8
 17471                           
 17472 ;; *************** function i2_USBDeviceInit *****************
 17473 ;; Defined at:
 17474 ;;		line 237 in file "../Includes/Usb/framework/usb_device.c"
 17475 ;; Parameters:    Size  Location     Type
 17476 ;;		None
 17477 ;; Auto vars:     Size  Location     Type
 17478 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 17479 ;; Return value:  Size  Location     Type
 17480 ;;                  1    wreg      void 
 17481 ;; Registers used:
 17482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17483 ;; Tracked objects:
 17484 ;;		On entry : 0/0
 17485 ;;		On exit  : F/0
 17486 ;;		Unchanged: 0/0
 17487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17488 ;;      Params:         0       0       0       0       0       0       0       0       0
 17489 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17490 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17491 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17492 ;;Total ram usage:        1 bytes
 17493 ;; Hardware stack levels used:    1
 17494 ;; Hardware stack levels required when called:    1
 17495 ;; This function calls:
 17496 ;;		i2_memset
 17497 ;; This function is called by:
 17498 ;;		_USBDeviceTasks
 17499 ;; This function uses a non-reentrant model
 17500 ;;
 17501                           
 17502                           	psect	text85
 17503  005720                     __ptext85:
 17504                           	opt stack 0
 17505  005720                     i2_USBDeviceInit:
 17506                           	opt stack 17
 17507                           
 17508                           ;usb_device.c: 239: uint8_t i;
 17509                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 17510                           
 17511                           ;incstack = 0
 17512  005720  94A3               	bcf	4003,2,c	;volatile
 17513                           
 17514                           ;usb_device.c: 244: {UEIR = 0;};
 17515  005722  6A67               	clrf	3943,c	;volatile
 17516                           
 17517                           ;usb_device.c: 247: {UIR = 0;};
 17518  005724  6A65               	clrf	3941,c	;volatile
 17519                           
 17520                           ;usb_device.c: 250: UEP0 = 0;
 17521  005726  6A6A               	clrf	3946,c	;volatile
 17522                           
 17523                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 17524  005728  0E6B               	movlw	107
 17525  00572A  6E2E               	movwf	i2memset@p1,c
 17526  00572C  0E0F               	movlw	15
 17527  00572E  6E2F               	movwf	i2memset@p1+1,c
 17528  005730  6A31               	clrf	i2memset@c+1,c
 17529  005732  6A30               	clrf	i2memset@c,c
 17530  005734  6A33               	clrf	i2memset@n+1,c
 17531  005736  0E02               	movlw	2
 17532  005738  6E32               	movwf	i2memset@n,c
 17533  00573A  EC43  F01F         	call	i2_memset	;wreg free
 17534                           
 17535                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 17536  00573E  0E16               	movlw	22
 17537  005740  6E62               	movwf	3938,c	;volatile
 17538  005742  0E9F               	movlw	159
 17539  005744  6E66               	movwf	3942,c	;volatile
 17540  005746  0E7B               	movlw	123
 17541  005748  6E64               	movwf	3940,c	;volatile
 17542                           
 17543                           ;usb_device.c: 257: ;
 17544                           ;usb_device.c: 260: ;
 17545                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 17546  00574A  6A36               	clrf	i2USBDeviceInit@i,c
 17547  00574C                     i2l8639:
 17548                           
 17549                           ;usb_device.c: 264: {
 17550                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 17551  00574C  5036               	movf	i2USBDeviceInit@i,w,c
 17552  00574E  0D04               	mullw	4
 17553  005750  0E00               	movlw	0
 17554  005752  24F3               	addwf	prodl,w,c
 17555  005754  6ED9               	movwf	fsr2l,c
 17556  005756  0E04               	movlw	4
 17557  005758  20F4               	addwfc	prodh,w,c
 17558  00575A  6EDA               	movwf	fsr2h,c
 17559  00575C  6ADE               	clrf	postinc2,c
 17560  00575E  6ADE               	clrf	postinc2,c
 17561  005760  6ADE               	clrf	postinc2,c
 17562  005762  6ADD               	clrf	postdec2,c
 17563  005764  2A36               	incf	i2USBDeviceInit@i,f,c
 17564  005766  0E0B               	movlw	11
 17565  005768  6436               	cpfsgt	i2USBDeviceInit@i,c
 17566  00576A  D7F0               	goto	i2l8639
 17567                           
 17568                           ;usb_device.c: 266: }
 17569                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 17570  00576C  8C60               	bsf	3936,6,c	;volatile
 17571                           
 17572                           ;usb_device.c: 272: UADDR = 0x00;
 17573  00576E  6A63               	clrf	3939,c	;volatile
 17574                           
 17575                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 17576  005770  9860               	bcf	3936,4,c	;volatile
 17577                           
 17578                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 17579  005772  9C60               	bcf	3936,6,c	;volatile
 17580                           
 17581                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 17582  005774  D005               	goto	i2l8653
 17583  005776                     i2l8645:
 17584                           
 17585                           ;usb_device.c: 282: {
 17586                           ;usb_device.c: 283: (UIR &= 0xF7);
 17587  005776  9665               	bcf	3941,3,c	;volatile
 17588                           
 17589                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 17590  005778  6A0C               	clrf	_inPipes+3,c	;volatile
 17591                           
 17592                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 17593  00577A  6A04               	clrf	_outPipes+3,c	;volatile
 17594                           
 17595                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 17596  00577C  6A05               	clrf	_outPipes+4,c	;volatile
 17597  00577E  6A06               	clrf	_outPipes+5,c	;volatile
 17598  005780                     i2l8653:
 17599  005780  B665               	btfsc	3941,3,c	;volatile
 17600  005782  D7F9               	goto	i2l8645
 17601                           
 17602                           ;usb_device.c: 288: }
 17603                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 17604  005784  0E01               	movlw	1
 17605  005786  0101               	movlb	1	; () banked
 17606  005788  6F4A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17607                           
 17608                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 17609  00578A  6F4B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17610                           
 17611                           ; BSR set to: 1
 17612                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 17613  00578C  6B48               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17614                           
 17615                           ; BSR set to: 1
 17616                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 17617  00578E  6B49               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17618                           
 17619                           ; BSR set to: 1
 17620                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 17621  005790  6B47               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 17622                           
 17623                           ; BSR set to: 1
 17624                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 17625  005792  6A36               	clrf	i2USBDeviceInit@i,c
 17626  005794                     i2l8669:
 17627                           
 17628                           ;usb_device.c: 302: {
 17629                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 17630  005794  5036               	movf	i2USBDeviceInit@i,w,c
 17631  005796  0D02               	mullw	2
 17632  005798  50F3               	movf	prodl,w,c
 17633  00579A  0F0F               	addlw	low _pBDTEntryIn
 17634  00579C  6ED9               	movwf	fsr2l,c
 17635  00579E  6ADA               	clrf	fsr2h,c
 17636  0057A0  6ADE               	clrf	postinc2,c
 17637  0057A2  6ADD               	clrf	postdec2,c
 17638                           
 17639                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 17640  0057A4  5036               	movf	i2USBDeviceInit@i,w,c
 17641  0057A6  0D02               	mullw	2
 17642  0057A8  0E18               	movlw	low _pBDTEntryOut
 17643  0057AA  24F3               	addwf	prodl,w,c
 17644  0057AC  6ED9               	movwf	fsr2l,c
 17645  0057AE  0E01               	movlw	high _pBDTEntryOut
 17646  0057B0  20F4               	addwfc	prodh,w,c
 17647  0057B2  6EDA               	movwf	fsr2h,c
 17648  0057B4  6ADE               	clrf	postinc2,c
 17649  0057B6  6ADD               	clrf	postdec2,c
 17650                           
 17651                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 17652  0057B8  0E22               	movlw	low _ep_data_in
 17653  0057BA  2436               	addwf	i2USBDeviceInit@i,w,c
 17654  0057BC  6ED9               	movwf	fsr2l,c
 17655  0057BE  6ADA               	clrf	fsr2h,c
 17656  0057C0  0E01               	movlw	high _ep_data_in
 17657  0057C2  22DA               	addwfc	fsr2h,f,c
 17658  0057C4  6ADF               	clrf	indf2,c
 17659                           
 17660                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 17661  0057C6  0E25               	movlw	low _ep_data_out
 17662  0057C8  2436               	addwf	i2USBDeviceInit@i,w,c
 17663  0057CA  6ED9               	movwf	fsr2l,c
 17664  0057CC  6ADA               	clrf	fsr2h,c
 17665  0057CE  0E01               	movlw	high _ep_data_out
 17666  0057D0  22DA               	addwfc	fsr2h,f,c
 17667  0057D2  6ADF               	clrf	indf2,c
 17668  0057D4  2A36               	incf	i2USBDeviceInit@i,f,c
 17669  0057D6  0E02               	movlw	2
 17670  0057D8  6436               	cpfsgt	i2USBDeviceInit@i,c
 17671  0057DA  D7DC               	goto	i2l8669
 17672                           
 17673                           ;usb_device.c: 307: }
 17674                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17675  0057DC  0E08               	movlw	8
 17676  0057DE  6E0F               	movwf	_pBDTEntryIn,c
 17677  0057E0  0E04               	movlw	4
 17678  0057E2  6E10               	movwf	_pBDTEntryIn+1,c
 17679                           
 17680                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 17681  0057E4  0E16               	movlw	22
 17682  0057E6  6E6A               	movwf	3946,c	;volatile
 17683                           
 17684                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 17685  0057E8  0E04               	movlw	4
 17686  0057EA  0104               	movlb	4	; () banked
 17687  0057EC  6F03               	movwf	3,b	;volatile
 17688  0057EE  0E30               	movlw	48
 17689  0057F0  6F02               	movwf	2,b	;volatile
 17690                           
 17691                           ; BSR set to: 4
 17692                           ;usb_device.c: 315: BDT[0].CNT = 8;
 17693  0057F2  0E08               	movlw	8
 17694  0057F4  6F01               	movwf	1,b	;volatile
 17695                           
 17696                           ; BSR set to: 4
 17697                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 17698  0057F6  0E04               	movlw	4
 17699  0057F8  6F00               	movwf	0,b	;volatile
 17700                           
 17701                           ; BSR set to: 4
 17702                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 17703  0057FA  8F00               	bsf	0,7,b	;volatile
 17704                           
 17705                           ; BSR set to: 4
 17706                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 17707  0057FC  6A2C               	clrf	_USBActiveConfiguration,c	;volatile
 17708                           
 17709                           ; BSR set to: 4
 17710                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 17711  0057FE  0100               	movlb	0	; () banked
 17712  005800  6BF4               	clrf	_USBDeviceState& (0+255),b	;volatile
 17713                           
 17714                           ; BSR set to: 0
 17715  005802  0012               	return		;funcret
 17716  005804                     __end_ofi2_USBDeviceInit:
 17717                           	opt stack 0
 17718                           pclatu	equ	0xFFB
 17719                           pclath	equ	0xFFA
 17720                           tblptru	equ	0xFF8
 17721                           tblptrh	equ	0xFF7
 17722                           tblptrl	equ	0xFF6
 17723                           tablat	equ	0xFF5
 17724                           prodh	equ	0xFF4
 17725                           prodl	equ	0xFF3
 17726                           intcon	equ	0xFF2
 17727                           postinc0	equ	0xFEE
 17728                           wreg	equ	0xFE8
 17729                           indf1	equ	0xFE7
 17730                           fsr1h	equ	0xFE2
 17731                           fsr1l	equ	0xFE1
 17732                           indf2	equ	0xFDF
 17733                           postinc2	equ	0xFDE
 17734                           postdec2	equ	0xFDD
 17735                           plusw2	equ	0xFDB
 17736                           fsr2h	equ	0xFDA
 17737                           fsr2l	equ	0xFD9
 17738                           status	equ	0xFD8
 17739                           
 17740 ;; *************** function _USBWakeFromSuspend *****************
 17741 ;; Defined at:
 17742 ;;		line 1944 in file "../Includes/Usb/framework/usb_device.c"
 17743 ;; Parameters:    Size  Location     Type
 17744 ;;		None
 17745 ;; Auto vars:     Size  Location     Type
 17746 ;;		None
 17747 ;; Return value:  Size  Location     Type
 17748 ;;                  1    wreg      void 
 17749 ;; Registers used:
 17750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17751 ;; Tracked objects:
 17752 ;;		On entry : F/0
 17753 ;;		On exit  : 0/0
 17754 ;;		Unchanged: 0/0
 17755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17756 ;;      Params:         0       0       0       0       0       0       0       0       0
 17757 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17758 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17759 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17760 ;;Total ram usage:        0 bytes
 17761 ;; Hardware stack levels used:    1
 17762 ;; Hardware stack levels required when called:    5
 17763 ;; This function calls:
 17764 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17765 ;; This function is called by:
 17766 ;;		_USBDeviceTasks
 17767 ;; This function uses a non-reentrant model
 17768 ;;
 17769                           
 17770                           	psect	text86
 17771  003D74                     __ptext86:
 17772                           	opt stack 0
 17773  003D74                     _USBWakeFromSuspend:
 17774                           	opt stack 13
 17775                           
 17776                           ; BSR set to: 0
 17777                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 17778                           
 17779                           ; BSR set to: 0
 17780                           ;incstack = 0
 17781  003D74  0101               	movlb	1	; () banked
 17782  003D76  6B47               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 17783                           
 17784                           ; BSR set to: 1
 17785                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 17786  003D78  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17787  003D7A  0E74               	movlw	116
 17788  003D7C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17789  003D7E  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17790  003D80  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17791  003D82  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17792  003D84  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17793  003D86  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17794                           
 17795                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 17796  003D8A  9260               	bcf	3936,1,c	;volatile
 17797                           
 17798                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 17799  003D8C  9464               	bcf	3940,2,c	;volatile
 17800                           
 17801                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 17802  003D8E  D001               	goto	i2l8563
 17803  003D90                     i2l8561:
 17804                           
 17805                           ;usb_device.c: 1977: {
 17806                           ;usb_device.c: 1978: (UIR &= 0xFB);
 17807  003D90  9465               	bcf	3941,2,c	;volatile
 17808  003D92                     i2l8563:
 17809  003D92  A465               	btfss	3941,2,c	;volatile
 17810  003D94  0012               	return		;funcret
 17811  003D96  D7FC               	goto	i2l8561
 17812  003D98                     __end_of_USBWakeFromSuspend:
 17813                           	opt stack 0
 17814                           pclatu	equ	0xFFB
 17815                           pclath	equ	0xFFA
 17816                           tblptru	equ	0xFF8
 17817                           tblptrh	equ	0xFF7
 17818                           tblptrl	equ	0xFF6
 17819                           tablat	equ	0xFF5
 17820                           prodh	equ	0xFF4
 17821                           prodl	equ	0xFF3
 17822                           intcon	equ	0xFF2
 17823                           postinc0	equ	0xFEE
 17824                           wreg	equ	0xFE8
 17825                           indf1	equ	0xFE7
 17826                           fsr1h	equ	0xFE2
 17827                           fsr1l	equ	0xFE1
 17828                           indf2	equ	0xFDF
 17829                           postinc2	equ	0xFDE
 17830                           postdec2	equ	0xFDD
 17831                           plusw2	equ	0xFDB
 17832                           fsr2h	equ	0xFDA
 17833                           fsr2l	equ	0xFD9
 17834                           status	equ	0xFD8
 17835                           
 17836 ;; *************** function _USBSuspend *****************
 17837 ;; Defined at:
 17838 ;;		line 1889 in file "../Includes/Usb/framework/usb_device.c"
 17839 ;; Parameters:    Size  Location     Type
 17840 ;;		None
 17841 ;; Auto vars:     Size  Location     Type
 17842 ;;		None
 17843 ;; Return value:  Size  Location     Type
 17844 ;;                  1    wreg      void 
 17845 ;; Registers used:
 17846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17847 ;; Tracked objects:
 17848 ;;		On entry : 0/0
 17849 ;;		On exit  : 0/0
 17850 ;;		Unchanged: 0/0
 17851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17852 ;;      Params:         0       0       0       0       0       0       0       0       0
 17853 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17854 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17855 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17856 ;;Total ram usage:        0 bytes
 17857 ;; Hardware stack levels used:    1
 17858 ;; Hardware stack levels required when called:    5
 17859 ;; This function calls:
 17860 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17861 ;; This function is called by:
 17862 ;;		_USBDeviceTasks
 17863 ;; This function uses a non-reentrant model
 17864 ;;
 17865                           
 17866                           	psect	text87
 17867  003C7C                     __ptext87:
 17868                           	opt stack 0
 17869  003C7C                     _USBSuspend:
 17870                           	opt stack 13
 17871                           
 17872                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 17873                           
 17874                           ;incstack = 0
 17875  003C7C  8464               	bsf	3940,2,c	;volatile
 17876                           
 17877                           ;usb_device.c: 1915: (UIR &= 0xEF);
 17878  003C7E  9865               	bcf	3941,4,c	;volatile
 17879                           
 17880                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 17881  003C80  8260               	bsf	3936,1,c	;volatile
 17882                           
 17883                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 17884  003C82  0E01               	movlw	1
 17885  003C84  0101               	movlb	1	; () banked
 17886  003C86  6F47               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 17887                           
 17888                           ; BSR set to: 1
 17889                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 17890  003C88  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17891  003C8A  0E75               	movlw	117
 17892  003C8C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17893  003C8E  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17894  003C90  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17895  003C92  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17896  003C94  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17897  003C96  EFFC  F020         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17898  003C9A                     __end_of_USBSuspend:
 17899                           	opt stack 0
 17900                           pclatu	equ	0xFFB
 17901                           pclath	equ	0xFFA
 17902                           tblptru	equ	0xFF8
 17903                           tblptrh	equ	0xFF7
 17904                           tblptrl	equ	0xFF6
 17905                           tablat	equ	0xFF5
 17906                           prodh	equ	0xFF4
 17907                           prodl	equ	0xFF3
 17908                           intcon	equ	0xFF2
 17909                           postinc0	equ	0xFEE
 17910                           wreg	equ	0xFE8
 17911                           indf1	equ	0xFE7
 17912                           fsr1h	equ	0xFE2
 17913                           fsr1l	equ	0xFE1
 17914                           indf2	equ	0xFDF
 17915                           postinc2	equ	0xFDE
 17916                           postdec2	equ	0xFDD
 17917                           plusw2	equ	0xFDB
 17918                           fsr2h	equ	0xFDA
 17919                           fsr2l	equ	0xFD9
 17920                           status	equ	0xFD8
 17921                           
 17922 ;; *************** function _USBStallHandler *****************
 17923 ;; Defined at:
 17924 ;;		line 1846 in file "../Includes/Usb/framework/usb_device.c"
 17925 ;; Parameters:    Size  Location     Type
 17926 ;;		None
 17927 ;; Auto vars:     Size  Location     Type
 17928 ;;		None
 17929 ;; Return value:  Size  Location     Type
 17930 ;;                  1    wreg      void 
 17931 ;; Registers used:
 17932 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17933 ;; Tracked objects:
 17934 ;;		On entry : 0/0
 17935 ;;		On exit  : 0/0
 17936 ;;		Unchanged: 0/0
 17937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17938 ;;      Params:         0       0       0       0       0       0       0       0       0
 17939 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17940 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17941 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17942 ;;Total ram usage:        1 bytes
 17943 ;; Hardware stack levels used:    1
 17944 ;; This function calls:
 17945 ;;		Nothing
 17946 ;; This function is called by:
 17947 ;;		_USBDeviceTasks
 17948 ;; This function uses a non-reentrant model
 17949 ;;
 17950                           
 17951                           	psect	text88
 17952  00417C                     __ptext88:
 17953                           	opt stack 0
 17954  00417C                     _USBStallHandler:
 17955                           	opt stack 18
 17956                           
 17957                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 17958                           
 17959                           ;incstack = 0
 17960  00417C  A06A               	btfss	3946,0,c	;volatile
 17961  00417E  D01B               	goto	i2l1604
 17962                           
 17963                           ;usb_device.c: 1859: {
 17964                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 17965  004180  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17966  004184  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17967  004188  0E80               	movlw	128
 17968  00418A  18DE               	xorwf	postinc2,w,c
 17969  00418C  E113               	bnz	i2l8585
 17970  00418E  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 17971  004192  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17972  004196  0E84               	movlw	132
 17973  004198  18DE               	xorwf	postinc2,w,c
 17974  00419A  E10C               	bnz	i2l8585
 17975                           
 17976                           ;usb_device.c: 1862: {
 17977                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17978  00419C  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17979  0041A0  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17980  0041A4  0E0C               	movlw	12
 17981  0041A6  6EDF               	movwf	indf2,c
 17982                           
 17983                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 17984  0041A8  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17985  0041AC  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17986  0041B0  0E00               	movlw	0
 17987  0041B2  8EDB               	bsf	plusw2,7,c
 17988  0041B4                     i2l8585:
 17989                           
 17990                           ;usb_device.c: 1866: }
 17991                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 17992  0041B4  906A               	bcf	3946,0,c	;volatile
 17993  0041B6                     i2l1604:
 17994                           
 17995                           ;usb_device.c: 1868: }
 17996                           ;usb_device.c: 1870: (UIR &= 0xDF);
 17997  0041B6  9A65               	bcf	3941,5,c	;volatile
 17998  0041B8  0012               	return		;funcret
 17999  0041BA                     __end_of_USBStallHandler:
 18000                           	opt stack 0
 18001                           pclatu	equ	0xFFB
 18002                           pclath	equ	0xFFA
 18003                           tblptru	equ	0xFF8
 18004                           tblptrh	equ	0xFF7
 18005                           tblptrl	equ	0xFF6
 18006                           tablat	equ	0xFF5
 18007                           prodh	equ	0xFF4
 18008                           prodl	equ	0xFF3
 18009                           intcon	equ	0xFF2
 18010                           postinc0	equ	0xFEE
 18011                           wreg	equ	0xFE8
 18012                           indf1	equ	0xFE7
 18013                           fsr1h	equ	0xFE2
 18014                           fsr1l	equ	0xFE1
 18015                           indf2	equ	0xFDF
 18016                           postinc2	equ	0xFDE
 18017                           postdec2	equ	0xFDD
 18018                           plusw2	equ	0xFDB
 18019                           fsr2h	equ	0xFDA
 18020                           fsr2l	equ	0xFD9
 18021                           status	equ	0xFD8
 18022                           
 18023 ;; *************** function _USBCtrlEPService *****************
 18024 ;; Defined at:
 18025 ;;		line 2004 in file "../Includes/Usb/framework/usb_device.c"
 18026 ;; Parameters:    Size  Location     Type
 18027 ;;		None
 18028 ;; Auto vars:     Size  Location     Type
 18029 ;;  setup_cnt       1   30[COMRAM] unsigned char 
 18030 ;; Return value:  Size  Location     Type
 18031 ;;                  1    wreg      void 
 18032 ;; Registers used:
 18033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18034 ;; Tracked objects:
 18035 ;;		On entry : F/1
 18036 ;;		On exit  : 0/0
 18037 ;;		Unchanged: 0/0
 18038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18039 ;;      Params:         0       0       0       0       0       0       0       0       0
 18040 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18041 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18042 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18043 ;;Total ram usage:        3 bytes
 18044 ;; Hardware stack levels used:    1
 18045 ;; Hardware stack levels required when called:    8
 18046 ;; This function calls:
 18047 ;;		_USBCtrlTrfInHandler
 18048 ;;		_USBCtrlTrfOutHandler
 18049 ;;		_USBCtrlTrfSetupHandler
 18050 ;; This function is called by:
 18051 ;;		_USBDeviceTasks
 18052 ;; This function uses a non-reentrant model
 18053 ;;
 18054                           
 18055                           	psect	text89
 18056  0050EC                     __ptext89:
 18057                           	opt stack 0
 18058  0050EC                     _USBCtrlEPService:
 18059                           	opt stack 10
 18060                           
 18061                           ; BSR set to: 1
 18062                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 18063                           
 18064                           ;incstack = 0
 18065  0050EC  0E2D               	movlw	45
 18066  0050EE  6E1E               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 18067                           
 18068                           ; BSR set to: 1
 18069                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 18070  0050F0  C02D  F04A         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 18071  0050F4  0EFD               	movlw	253
 18072  0050F6  164A               	andwf	??_USBCtrlEPService,f,c
 18073  0050F8  E14B               	bnz	i2l8619
 18074                           
 18075                           ; BSR set to: 1
 18076                           ;usb_device.c: 2013: {
 18077                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 18078  0050FA  90D8               	bcf	status,0,c
 18079  0050FC  302D               	rrcf	_USTATcopy,w,c	;volatile
 18080  0050FE  0B3F               	andlw	63
 18081  005100  0D04               	mullw	4
 18082  005102  0E00               	movlw	0
 18083  005104  24F3               	addwf	prodl,w,c
 18084  005106  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 18085  005108  0E04               	movlw	4
 18086  00510A  20F4               	addwfc	prodh,w,c
 18087  00510C  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 18088                           
 18089                           ; BSR set to: 1
 18090                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 18091  00510E  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 18092  005112  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 18093                           
 18094                           ; BSR set to: 1
 18095                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 18096  005116  0E04               	movlw	4
 18097  005118  1A17               	xorwf	_pBDTEntryEP0OutNext,f,c
 18098                           
 18099                           ; BSR set to: 1
 18100                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 18101  00511A  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18102  00511E  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18103  005122  30DF               	rrcf	indf2,w,c
 18104  005124  32E8               	rrcf	wreg,f,c
 18105  005126  0B0F               	andlw	15
 18106  005128  0A0D               	xorlw	13
 18107  00512A  E002 EFB8  F021    	bnz	_USBCtrlTrfOutHandler
 18108                           
 18109                           ; BSR set to: 1
 18110                           ;usb_device.c: 2025: {
 18111                           ;usb_device.c: 2026: unsigned char setup_cnt;
 18112                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 18113  005130  6A4C               	clrf	USBCtrlEPService@setup_cnt,c
 18114  005132                     i2l8605:
 18115                           
 18116                           ; BSR set to: 1
 18117                           ;usb_device.c: 2033: {
 18118                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 18119  005132  EE20 F002          	lfsr	2,2
 18120  005136  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 18121  005138  26D9               	addwf	fsr2l,f,c
 18122  00513A  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18123  00513C  22DA               	addwfc	fsr2h,f,c
 18124  00513E  CFDE F04A          	movff	postinc2,??_USBCtrlEPService
 18125  005142  CFDD F04B          	movff	postdec2,??_USBCtrlEPService+1
 18126  005146  C04A  FFD9         	movff	??_USBCtrlEPService,fsr2l
 18127  00514A  C04B  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 18128  00514E  0E30               	movlw	48
 18129  005150  244C               	addwf	USBCtrlEPService@setup_cnt,w,c
 18130  005152  6EE1               	movwf	fsr1l,c
 18131  005154  6AE2               	clrf	fsr1h,c
 18132  005156  0E04               	movlw	4
 18133  005158  22E2               	addwfc	fsr1h,f,c
 18134  00515A  CFDF FFE7          	movff	indf2,indf1
 18135                           
 18136                           ; BSR set to: 1
 18137                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 18138  00515E  EE20 F002          	lfsr	2,2
 18139  005162  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 18140  005164  26D9               	addwf	fsr2l,f,c
 18141  005166  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18142  005168  22DA               	addwfc	fsr2h,f,c
 18143  00516A  2ADE               	incf	postinc2,f,c
 18144  00516C  0E00               	movlw	0
 18145  00516E  22DD               	addwfc	postdec2,f,c
 18146                           
 18147                           ; BSR set to: 1
 18148  005170  2A4C               	incf	USBCtrlEPService@setup_cnt,f,c
 18149                           
 18150                           ; BSR set to: 1
 18151  005172  0E07               	movlw	7
 18152  005174  644C               	cpfsgt	USBCtrlEPService@setup_cnt,c
 18153  005176  D7DD               	goto	i2l8605
 18154                           
 18155                           ; BSR set to: 1
 18156                           ;usb_device.c: 2036: }
 18157                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 18158  005178  EE20 F002          	lfsr	2,2
 18159  00517C  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 18160  00517E  26D9               	addwf	fsr2l,f,c
 18161  005180  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18162  005182  22DA               	addwfc	fsr2h,f,c
 18163  005184  0E30               	movlw	48
 18164  005186  6EDE               	movwf	postinc2,c
 18165  005188  0E04               	movlw	4
 18166  00518A  6EDD               	movwf	postdec2,c
 18167                           
 18168                           ; BSR set to: 1
 18169                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 18170  00518C  EFB6  F022         	goto	_USBCtrlTrfSetupHandler	;wreg free
 18171  005190                     i2l8619:
 18172                           
 18173                           ; BSR set to: 1
 18174                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 18175  005190  502D               	movf	_USTATcopy,w,c	;volatile
 18176  005192  0BFD               	andlw	253
 18177  005194  0A04               	xorlw	4
 18178  005196  B4D8               	btfsc	status,2,c
 18179                           
 18180                           ; BSR set to: 1
 18181                           ;usb_device.c: 2049: {
 18182                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 18183  005198  EC4A  F02A         	call	_USBCtrlTrfInHandler	;wreg free
 18184  00519C  0012               	return		;funcret
 18185  00519E                     __end_of_USBCtrlEPService:
 18186                           	opt stack 0
 18187                           pclatu	equ	0xFFB
 18188                           pclath	equ	0xFFA
 18189                           tblptru	equ	0xFF8
 18190                           tblptrh	equ	0xFF7
 18191                           tblptrl	equ	0xFF6
 18192                           tablat	equ	0xFF5
 18193                           prodh	equ	0xFF4
 18194                           prodl	equ	0xFF3
 18195                           intcon	equ	0xFF2
 18196                           postinc0	equ	0xFEE
 18197                           wreg	equ	0xFE8
 18198                           indf1	equ	0xFE7
 18199                           fsr1h	equ	0xFE2
 18200                           fsr1l	equ	0xFE1
 18201                           indf2	equ	0xFDF
 18202                           postinc2	equ	0xFDE
 18203                           postdec2	equ	0xFDD
 18204                           plusw2	equ	0xFDB
 18205                           fsr2h	equ	0xFDA
 18206                           fsr2l	equ	0xFD9
 18207                           status	equ	0xFD8
 18208                           
 18209 ;; *************** function _USBCtrlTrfSetupHandler *****************
 18210 ;; Defined at:
 18211 ;;		line 2097 in file "../Includes/Usb/framework/usb_device.c"
 18212 ;; Parameters:    Size  Location     Type
 18213 ;;		None
 18214 ;; Auto vars:     Size  Location     Type
 18215 ;;		None
 18216 ;; Return value:  Size  Location     Type
 18217 ;;                  1    wreg      void 
 18218 ;; Registers used:
 18219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18220 ;; Tracked objects:
 18221 ;;		On entry : F/1
 18222 ;;		On exit  : 0/0
 18223 ;;		Unchanged: 0/0
 18224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18225 ;;      Params:         0       0       0       0       0       0       0       0       0
 18226 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18227 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18228 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18229 ;;Total ram usage:        0 bytes
 18230 ;; Hardware stack levels used:    1
 18231 ;; Hardware stack levels required when called:    7
 18232 ;; This function calls:
 18233 ;;		_USBCheckStdRequest
 18234 ;;		_USBCtrlEPServiceComplete
 18235 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18236 ;; This function is called by:
 18237 ;;		_USBCtrlEPService
 18238 ;; This function uses a non-reentrant model
 18239 ;;
 18240                           
 18241                           	psect	text90
 18242  00456C                     __ptext90:
 18243                           	opt stack 0
 18244  00456C                     _USBCtrlTrfSetupHandler:
 18245                           	opt stack 10
 18246                           
 18247                           ; BSR set to: 1
 18248                           ;usb_device.c: 2102: shortPacketStatus = 0;
 18249                           
 18250                           ;incstack = 0
 18251  00456C  6A2A               	clrf	_shortPacketStatus,c	;volatile
 18252                           
 18253                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 18254  00456E  6A1D               	clrf	_USBDeferStatusStagePacket,c	;volatile
 18255                           
 18256                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 18257  004570  6B48               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 18258                           
 18259                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 18260  004572  6B49               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 18261                           
 18262                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 18263  004574  6B45               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 18264                           
 18265                           ;usb_device.c: 2107: controlTransferState = 0;
 18266  004576  6A20               	clrf	_controlTransferState,c	;volatile
 18267                           
 18268                           ; BSR set to: 1
 18269                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 18270  004578  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18271  00457C  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18272  004580  0E7F               	movlw	127
 18273  004582  16DF               	andwf	indf2,f,c
 18274                           
 18275                           ; BSR set to: 1
 18276                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 18277  004584  0E04               	movlw	4
 18278  004586  1A0F               	xorwf	_pBDTEntryIn,f,c
 18279                           
 18280                           ; BSR set to: 1
 18281                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 18282  004588  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18283  00458C  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18284  004590  0E7F               	movlw	127
 18285  004592  16DF               	andwf	indf2,f,c
 18286                           
 18287                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 18288  004594  0E04               	movlw	4
 18289  004596  1A0F               	xorwf	_pBDTEntryIn,f,c
 18290                           
 18291                           ; BSR set to: 1
 18292                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 18293  004598  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18294  00459C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18295  0045A0  0E7F               	movlw	127
 18296  0045A2  16DF               	andwf	indf2,f,c
 18297                           
 18298                           ; BSR set to: 1
 18299                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 18300  0045A4  6A0C               	clrf	_inPipes+3,c	;volatile
 18301                           
 18302                           ; BSR set to: 1
 18303                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 18304  0045A6  6A0D               	clrf	_inPipes+4,c	;volatile
 18305  0045A8  6A0E               	clrf	_inPipes+5,c	;volatile
 18306                           
 18307                           ; BSR set to: 1
 18308                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 18309  0045AA  6A04               	clrf	_outPipes+3,c	;volatile
 18310                           
 18311                           ; BSR set to: 1
 18312                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 18313  0045AC  6A05               	clrf	_outPipes+4,c	;volatile
 18314  0045AE  6A06               	clrf	_outPipes+5,c	;volatile
 18315                           
 18316                           ; BSR set to: 1
 18317                           ;usb_device.c: 2131: USBCheckStdRequest();
 18318  0045B0  ECCC  F026         	call	_USBCheckStdRequest	;wreg free
 18319                           
 18320                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 18321  0045B4  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18322  0045B6  0E03               	movlw	3
 18323  0045B8  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18324  0045BA  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18325  0045BC  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18326  0045BE  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18327  0045C0  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18328  0045C2  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18329                           
 18330                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 18331  0045C6  EF1E  F02B         	goto	_USBCtrlEPServiceComplete	;wreg free
 18332  0045CA                     __end_of_USBCtrlTrfSetupHandler:
 18333                           	opt stack 0
 18334                           pclatu	equ	0xFFB
 18335                           pclath	equ	0xFFA
 18336                           tblptru	equ	0xFF8
 18337                           tblptrh	equ	0xFF7
 18338                           tblptrl	equ	0xFF6
 18339                           tablat	equ	0xFF5
 18340                           prodh	equ	0xFF4
 18341                           prodl	equ	0xFF3
 18342                           intcon	equ	0xFF2
 18343                           postinc0	equ	0xFEE
 18344                           wreg	equ	0xFE8
 18345                           indf1	equ	0xFE7
 18346                           fsr1h	equ	0xFE2
 18347                           fsr1l	equ	0xFE1
 18348                           indf2	equ	0xFDF
 18349                           postinc2	equ	0xFDE
 18350                           postdec2	equ	0xFDD
 18351                           plusw2	equ	0xFDB
 18352                           fsr2h	equ	0xFDA
 18353                           fsr2l	equ	0xFD9
 18354                           status	equ	0xFD8
 18355                           
 18356 ;; *************** function _USBCtrlEPServiceComplete *****************
 18357 ;; Defined at:
 18358 ;;		line 1282 in file "../Includes/Usb/framework/usb_device.c"
 18359 ;; Parameters:    Size  Location     Type
 18360 ;;		None
 18361 ;; Auto vars:     Size  Location     Type
 18362 ;;		None
 18363 ;; Return value:  Size  Location     Type
 18364 ;;                  1    wreg      void 
 18365 ;; Registers used:
 18366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18367 ;; Tracked objects:
 18368 ;;		On entry : 0/1
 18369 ;;		On exit  : 0/0
 18370 ;;		Unchanged: 0/0
 18371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18372 ;;      Params:         0       0       0       0       0       0       0       0       0
 18373 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18374 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18375 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18376 ;;Total ram usage:        0 bytes
 18377 ;; Hardware stack levels used:    1
 18378 ;; Hardware stack levels required when called:    2
 18379 ;; This function calls:
 18380 ;;		_USBCtrlEPAllowDataStage
 18381 ;;		_USBCtrlEPAllowStatusStage
 18382 ;; This function is called by:
 18383 ;;		_USBCtrlTrfSetupHandler
 18384 ;; This function uses a non-reentrant model
 18385 ;;
 18386                           
 18387                           	psect	text91
 18388  00563C                     __ptext91:
 18389                           	opt stack 0
 18390  00563C                     _USBCtrlEPServiceComplete:
 18391                           	opt stack 14
 18392                           
 18393                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 18394                           
 18395                           ;incstack = 0
 18396  00563C  9860               	bcf	3936,4,c	;volatile
 18397                           
 18398                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 18399  00563E  BE0C               	btfsc	_inPipes+3,7,c	;volatile
 18400  005640  D037               	goto	i2l1528
 18401                           
 18402                           ;usb_device.c: 1295: {
 18403                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 18404  005642  AE04               	btfss	_outPipes+3,7,c	;volatile
 18405  005644  D00A               	goto	i2l6737
 18406                           
 18407                           ;usb_device.c: 1297: {
 18408                           ;usb_device.c: 1298: controlTransferState = 2;
 18409  005646  0E02               	movlw	2
 18410  005648  6E20               	movwf	_controlTransferState,c	;volatile
 18411                           
 18412                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 18413  00564A  0101               	movlb	1	; () banked
 18414  00564C  5149               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 18415  00564E  E102               	bnz	i2l6733
 18416                           
 18417                           ; BSR set to: 1
 18418                           ;usb_device.c: 1310: {
 18419                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 18420  005650  ECA0  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
 18421  005654                     i2l6733:
 18422                           
 18423                           ; BSR set to: 1
 18424                           ;usb_device.c: 1312: }
 18425                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 18426  005654  6B4B               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18427                           
 18428                           ; BSR set to: 1
 18429                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 18430  005656  6B4A               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18431                           
 18432                           ;usb_device.c: 1318: }
 18433  005658  0012               	return	
 18434  00565A                     i2l6737:
 18435                           
 18436                           ;usb_device.c: 1319: else
 18437                           ;usb_device.c: 1320: {
 18438                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 18439  00565A  EE20 F001          	lfsr	2,1
 18440  00565E  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18441  005660  26D9               	addwf	fsr2l,f,c
 18442  005662  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18443  005664  22DA               	addwfc	fsr2h,f,c
 18444  005666  0E08               	movlw	8
 18445  005668  6EDF               	movwf	indf2,c
 18446                           
 18447                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18448  00566A  EE20 F002          	lfsr	2,2
 18449  00566E  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18450  005670  26D9               	addwf	fsr2l,f,c
 18451  005672  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18452  005674  22DA               	addwfc	fsr2h,f,c
 18453  005676  0E30               	movlw	48
 18454  005678  6EDE               	movwf	postinc2,c
 18455  00567A  0E04               	movlw	4
 18456  00567C  6EDD               	movwf	postdec2,c
 18457                           
 18458                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 18459  00567E  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18460  005682  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18461  005686  0E0C               	movlw	12
 18462  005688  6EDF               	movwf	indf2,c
 18463                           
 18464                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18465  00568A  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18466  00568E  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18467  005692  0E00               	movlw	0
 18468  005694  8EDB               	bsf	plusw2,7,c
 18469                           
 18470                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 18471  005696  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18472  00569A  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18473  00569E  0E04               	movlw	4
 18474  0056A0  6EDF               	movwf	indf2,c
 18475                           
 18476                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18477  0056A2  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18478  0056A6  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18479  0056AA  0E00               	movlw	0
 18480  0056AC  8EDB               	bsf	plusw2,7,c
 18481  0056AE  0C00               	retlw	0
 18482  0056B0                     i2l1528:
 18483                           
 18484                           ;usb_device.c: 1333: else
 18485                           ;usb_device.c: 1334: {
 18486                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 18487  0056B0  0104               	movlb	4	; () banked
 18488  0056B2  AF30               	btfss	48,7,b	;volatile
 18489  0056B4  D00E               	goto	i2l6757
 18490                           
 18491                           ; BSR set to: 4
 18492                           ;usb_device.c: 1336: {
 18493                           ;usb_device.c: 1337: controlTransferState = 1;
 18494  0056B6  0E01               	movlw	1
 18495  0056B8  6E20               	movwf	_controlTransferState,c	;volatile
 18496                           
 18497                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 18498  0056BA  0101               	movlb	1	; () banked
 18499  0056BC  5148               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 18500  0056BE  E102               	bnz	i2l6749
 18501                           
 18502                           ; BSR set to: 1
 18503                           ;usb_device.c: 1352: {
 18504                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 18505  0056C0  ECA0  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
 18506  0056C4                     i2l6749:
 18507                           
 18508                           ; BSR set to: 1
 18509                           ;usb_device.c: 1354: }
 18510                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 18511  0056C4  6B4B               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18512                           
 18513                           ; BSR set to: 1
 18514                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 18515  0056C6  6B4A               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18516                           
 18517                           ; BSR set to: 1
 18518                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 18519  0056C8  501D               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 18520  0056CA  A4D8               	btfss	status,2,c
 18521  0056CC  0012               	return	
 18522                           
 18523                           ; BSR set to: 1
 18524                           ;usb_device.c: 1379: {
 18525                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 18526  0056CE  EF2B  F029         	goto	_USBCtrlEPAllowStatusStage	;wreg free
 18527  0056D2                     i2l6757:
 18528                           
 18529                           ; BSR set to: 4
 18530                           ;usb_device.c: 1383: else
 18531                           ;usb_device.c: 1384: {
 18532                           ;usb_device.c: 1395: controlTransferState = 2;
 18533  0056D2  0E02               	movlw	2
 18534  0056D4  6E20               	movwf	_controlTransferState,c	;volatile
 18535                           
 18536                           ; BSR set to: 4
 18537                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 18538  0056D6  EE20 F001          	lfsr	2,1
 18539  0056DA  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18540  0056DC  26D9               	addwf	fsr2l,f,c
 18541  0056DE  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18542  0056E0  22DA               	addwfc	fsr2h,f,c
 18543  0056E2  0E08               	movlw	8
 18544  0056E4  6EDF               	movwf	indf2,c
 18545                           
 18546                           ; BSR set to: 4
 18547                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18548  0056E6  EE20 F002          	lfsr	2,2
 18549  0056EA  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18550  0056EC  26D9               	addwf	fsr2l,f,c
 18551  0056EE  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18552  0056F0  22DA               	addwfc	fsr2h,f,c
 18553  0056F2  0E30               	movlw	48
 18554  0056F4  6EDE               	movwf	postinc2,c
 18555  0056F6  0E04               	movlw	4
 18556  0056F8  6EDD               	movwf	postdec2,c
 18557                           
 18558                           ; BSR set to: 4
 18559                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 18560  0056FA  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18561  0056FE  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18562  005702  6EDF               	movwf	indf2,c
 18563                           
 18564                           ; BSR set to: 4
 18565                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18566  005704  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18567  005708  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18568  00570C  0E00               	movlw	0
 18569  00570E  8EDB               	bsf	plusw2,7,c
 18570                           
 18571                           ; BSR set to: 4
 18572                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 18573  005710  0101               	movlb	1	; () banked
 18574  005712  6B4B               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18575                           
 18576                           ; BSR set to: 1
 18577                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 18578  005714  6B4A               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18579                           
 18580                           ; BSR set to: 1
 18581                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 18582  005716  501D               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 18583  005718  E102 EF2B  F029    	bz	_USBCtrlEPAllowStatusStage
 18584  00571E  0012               	return	
 18585  005720                     __end_of_USBCtrlEPServiceComplete:
 18586                           	opt stack 0
 18587                           pclatu	equ	0xFFB
 18588                           pclath	equ	0xFFA
 18589                           tblptru	equ	0xFF8
 18590                           tblptrh	equ	0xFF7
 18591                           tblptrl	equ	0xFF6
 18592                           tablat	equ	0xFF5
 18593                           prodh	equ	0xFF4
 18594                           prodl	equ	0xFF3
 18595                           intcon	equ	0xFF2
 18596                           postinc0	equ	0xFEE
 18597                           wreg	equ	0xFE8
 18598                           indf1	equ	0xFE7
 18599                           fsr1h	equ	0xFE2
 18600                           fsr1l	equ	0xFE1
 18601                           indf2	equ	0xFDF
 18602                           postinc2	equ	0xFDE
 18603                           postdec2	equ	0xFDD
 18604                           plusw2	equ	0xFDB
 18605                           fsr2h	equ	0xFDA
 18606                           fsr2l	equ	0xFD9
 18607                           status	equ	0xFD8
 18608                           
 18609 ;; *************** function _USBCtrlEPAllowDataStage *****************
 18610 ;; Defined at:
 18611 ;;		line 1173 in file "../Includes/Usb/framework/usb_device.c"
 18612 ;; Parameters:    Size  Location     Type
 18613 ;;		None
 18614 ;; Auto vars:     Size  Location     Type
 18615 ;;		None
 18616 ;; Return value:  Size  Location     Type
 18617 ;;                  1    wreg      void 
 18618 ;; Registers used:
 18619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18620 ;; Tracked objects:
 18621 ;;		On entry : F/1
 18622 ;;		On exit  : F/1
 18623 ;;		Unchanged: 0/0
 18624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18625 ;;      Params:         0       0       0       0       0       0       0       0       0
 18626 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18627 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18628 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18629 ;;Total ram usage:        0 bytes
 18630 ;; Hardware stack levels used:    1
 18631 ;; Hardware stack levels required when called:    1
 18632 ;; This function calls:
 18633 ;;		_USBCtrlTrfTxService
 18634 ;; This function is called by:
 18635 ;;		_USBCtrlEPServiceComplete
 18636 ;; This function uses a non-reentrant model
 18637 ;;
 18638                           
 18639                           	psect	text92
 18640  004B40                     __ptext92:
 18641                           	opt stack 0
 18642  004B40                     _USBCtrlEPAllowDataStage:
 18643                           	opt stack 14
 18644                           
 18645                           ; BSR set to: 1
 18646                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 18647                           
 18648                           ;incstack = 0
 18649  004B40  6B48               	clrf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 18650                           
 18651                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 18652  004B42  6B49               	clrf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 18653                           
 18654                           ; BSR set to: 1
 18655                           ;usb_device.c: 1178: if(controlTransferState == 2)
 18656  004B44  0E02               	movlw	2
 18657  004B46  1820               	xorwf	_controlTransferState,w,c	;volatile
 18658  004B48  E11F               	bnz	i2l6397
 18659                           
 18660                           ; BSR set to: 1
 18661                           ;usb_device.c: 1179: {
 18662                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 18663  004B4A  EE20 F001          	lfsr	2,1
 18664  004B4E  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18665  004B50  26D9               	addwf	fsr2l,f,c
 18666  004B52  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18667  004B54  22DA               	addwfc	fsr2h,f,c
 18668  004B56  0E08               	movlw	8
 18669  004B58  6EDF               	movwf	indf2,c
 18670                           
 18671                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18672  004B5A  EE20 F002          	lfsr	2,2
 18673  004B5E  5017               	movf	_pBDTEntryEP0OutNext,w,c
 18674  004B60  26D9               	addwf	fsr2l,f,c
 18675  004B62  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 18676  004B64  22DA               	addwfc	fsr2h,f,c
 18677  004B66  0E38               	movlw	56
 18678  004B68  6EDE               	movwf	postinc2,c
 18679  004B6A  0E04               	movlw	4
 18680  004B6C  6EDD               	movwf	postdec2,c
 18681                           
 18682                           ; BSR set to: 1
 18683                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 18684  004B6E  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18685  004B72  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18686  004B76  0E48               	movlw	72
 18687  004B78  6EDF               	movwf	indf2,c
 18688                           
 18689                           ; BSR set to: 1
 18690                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18691  004B7A  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18692  004B7E  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18693  004B82  0E00               	movlw	0
 18694  004B84  8EDB               	bsf	plusw2,7,c
 18695                           
 18696                           ;usb_device.c: 1185: }
 18697  004B86  0C00               	retlw	0
 18698  004B88                     i2l6397:
 18699                           
 18700                           ; BSR set to: 1
 18701                           ;usb_device.c: 1186: else
 18702                           ;usb_device.c: 1187: {
 18703                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 18704  004B88  500D               	movf	_inPipes+4,w,c	;volatile
 18705  004B8A  0104               	movlb	4	; () banked
 18706  004B8C  5D36               	subwf	54,w,b	;volatile
 18707  004B8E  500E               	movf	_inPipes+5,w,c	;volatile
 18708  004B90  5937               	subwfb	55,w,b	;volatile
 18709  004B92  E204               	bc	i2l6401
 18710                           
 18711                           ; BSR set to: 4
 18712                           ;usb_device.c: 1191: {
 18713                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 18714  004B94  C436 F00D          	movff	1078,_inPipes+4	;volatile
 18715  004B98  C437 F00E          	movff	1079,_inPipes+5	;volatile
 18716  004B9C                     i2l6401:
 18717                           
 18718                           ; BSR set to: 4
 18719                           ;usb_device.c: 1193: }
 18720                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 18721  004B9C  ECE9  F029         	call	_USBCtrlTrfTxService	;wreg free
 18722                           
 18723                           ; BSR set to: 1
 18724                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 18725  004BA0  EE20 F002          	lfsr	2,2
 18726  004BA4  500F               	movf	_pBDTEntryIn,w,c
 18727  004BA6  26D9               	addwf	fsr2l,f,c
 18728  004BA8  5010               	movf	_pBDTEntryIn+1,w,c
 18729  004BAA  22DA               	addwfc	fsr2h,f,c
 18730  004BAC  0E38               	movlw	56
 18731  004BAE  6EDE               	movwf	postinc2,c
 18732  004BB0  0E04               	movlw	4
 18733  004BB2  6EDD               	movwf	postdec2,c
 18734                           
 18735                           ; BSR set to: 1
 18736                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18737  004BB4  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18738  004BB8  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18739  004BBC  0E48               	movlw	72
 18740  004BBE  6EDF               	movwf	indf2,c
 18741                           
 18742                           ; BSR set to: 1
 18743                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18744  004BC0  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 18745  004BC4  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18746  004BC8  0E00               	movlw	0
 18747  004BCA  8EDB               	bsf	plusw2,7,c
 18748                           
 18749                           ; BSR set to: 1
 18750  004BCC  0C00               	retlw	0	;funcret
 18751  004BCE                     __end_of_USBCtrlEPAllowDataStage:
 18752                           	opt stack 0
 18753                           pclatu	equ	0xFFB
 18754                           pclath	equ	0xFFA
 18755                           tblptru	equ	0xFF8
 18756                           tblptrh	equ	0xFF7
 18757                           tblptrl	equ	0xFF6
 18758                           tablat	equ	0xFF5
 18759                           prodh	equ	0xFF4
 18760                           prodl	equ	0xFF3
 18761                           intcon	equ	0xFF2
 18762                           postinc0	equ	0xFEE
 18763                           wreg	equ	0xFE8
 18764                           indf1	equ	0xFE7
 18765                           fsr1h	equ	0xFE2
 18766                           fsr1l	equ	0xFE1
 18767                           indf2	equ	0xFDF
 18768                           postinc2	equ	0xFDE
 18769                           postdec2	equ	0xFDD
 18770                           plusw2	equ	0xFDB
 18771                           fsr2h	equ	0xFDA
 18772                           fsr2l	equ	0xFD9
 18773                           status	equ	0xFD8
 18774                           
 18775 ;; *************** function _USBCheckStdRequest *****************
 18776 ;; Defined at:
 18777 ;;		line 2317 in file "../Includes/Usb/framework/usb_device.c"
 18778 ;; Parameters:    Size  Location     Type
 18779 ;;		None
 18780 ;; Auto vars:     Size  Location     Type
 18781 ;;		None
 18782 ;; Return value:  Size  Location     Type
 18783 ;;                  1    wreg      void 
 18784 ;; Registers used:
 18785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18786 ;; Tracked objects:
 18787 ;;		On entry : F/1
 18788 ;;		On exit  : 0/0
 18789 ;;		Unchanged: 0/0
 18790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18791 ;;      Params:         0       0       0       0       0       0       0       0       0
 18792 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18793 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18794 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18795 ;;Total ram usage:        0 bytes
 18796 ;; Hardware stack levels used:    1
 18797 ;; Hardware stack levels required when called:    6
 18798 ;; This function calls:
 18799 ;;		_USBStdFeatureReqHandler
 18800 ;;		_USBStdGetDscHandler
 18801 ;;		_USBStdGetStatusHandler
 18802 ;;		_USBStdSetCfgHandler
 18803 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18804 ;; This function is called by:
 18805 ;;		_USBCtrlTrfSetupHandler
 18806 ;; This function uses a non-reentrant model
 18807 ;;
 18808                           
 18809                           	psect	text93
 18810  004D98                     __ptext93:
 18811                           	opt stack 0
 18812  004D98                     _USBCheckStdRequest:
 18813                           	opt stack 10
 18814                           
 18815                           ; BSR set to: 1
 18816                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 18817                           
 18818                           ; BSR set to: 1
 18819                           ;incstack = 0
 18820  004D98  0104               	movlb	4	; () banked
 18821  004D9A  3930               	swapf	48,w,b	;volatile
 18822  004D9C  32E8               	rrcf	wreg,f,c
 18823  004D9E  0B03               	andlw	3
 18824  004DA0  E02C               	bz	i2l6859
 18825  004DA2  0012               	return	
 18826  004DA4                     i2l1655:
 18827                           
 18828                           ; BSR set to: 4
 18829                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 18830  004DA4  8E0C               	bsf	_inPipes+3,7,c	;volatile
 18831                           
 18832                           ; BSR set to: 4
 18833                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 18834  004DA6  0E08               	movlw	8
 18835  004DA8  0100               	movlb	0	; () banked
 18836  004DAA  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 18837                           
 18838                           ;usb_device.c: 2327: break;
 18839  004DAC  0C08               	retlw	8
 18840  004DAE                     i2l6833:
 18841                           
 18842                           ; BSR set to: 4
 18843                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 18844  004DAE  0E2C               	movlw	low _USBActiveConfiguration
 18845  004DB0  6E09               	movwf	_inPipes,c	;volatile
 18846  004DB2  6A0A               	clrf	_inPipes+1,c	;volatile
 18847                           
 18848                           ; BSR set to: 4
 18849                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18850  004DB4  800C               	bsf	_inPipes+3,0,c	;volatile
 18851                           
 18852                           ; BSR set to: 4
 18853                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 18854  004DB6  0E01               	movlw	1
 18855  004DB8  6E0D               	movwf	_inPipes+4,c	;volatile
 18856                           
 18857                           ; BSR set to: 4
 18858                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 18859  004DBA  8E0C               	bsf	_inPipes+3,7,c	;volatile
 18860                           
 18861                           ;usb_device.c: 2339: break;
 18862  004DBC  0C01               	retlw	1
 18863  004DBE                     i2l6845:
 18864                           
 18865                           ; BSR set to: 4
 18866                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 18867  004DBE  0EFB               	movlw	low _USBAlternateInterface
 18868  004DC0  2534               	addwf	52,w,b	;volatile
 18869  004DC2  6E09               	movwf	_inPipes,c	;volatile
 18870  004DC4  6A0A               	clrf	_inPipes+1,c	;volatile
 18871  004DC6  0E01               	movlw	high _USBAlternateInterface
 18872  004DC8  220A               	addwfc	_inPipes+1,f,c	;volatile
 18873                           
 18874                           ; BSR set to: 4
 18875                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18876  004DCA  800C               	bsf	_inPipes+3,0,c	;volatile
 18877                           
 18878                           ; BSR set to: 4
 18879                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 18880  004DCC  0E01               	movlw	1
 18881  004DCE  6E0D               	movwf	_inPipes+4,c	;volatile
 18882                           
 18883                           ; BSR set to: 4
 18884                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 18885  004DD0  8E0C               	bsf	_inPipes+3,7,c	;volatile
 18886                           
 18887                           ;usb_device.c: 2352: break;
 18888  004DD2  0C01               	retlw	1
 18889  004DD4                     i2l1664:
 18890                           
 18891                           ; BSR set to: 4
 18892                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 18893  004DD4  8E0C               	bsf	_inPipes+3,7,c	;volatile
 18894                           
 18895                           ; BSR set to: 4
 18896                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 18897  004DD6  0EFB               	movlw	low _USBAlternateInterface
 18898  004DD8  2534               	addwf	52,w,b	;volatile
 18899  004DDA  6ED9               	movwf	fsr2l,c
 18900  004DDC  6ADA               	clrf	fsr2h,c
 18901  004DDE  0E01               	movlw	high _USBAlternateInterface
 18902  004DE0  22DA               	addwfc	fsr2h,f,c
 18903  004DE2  C432 FFDF          	movff	1074,indf2	;volatile
 18904                           
 18905                           ;usb_device.c: 2356: break;
 18906  004DE6  0012               	return	
 18907  004DE8                     i2l6855:
 18908                           
 18909                           ; BSR set to: 4
 18910                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 18911  004DE8  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18912  004DEA  0E02               	movlw	2
 18913  004DEC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18914  004DEE  6A3D               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18915  004DF0  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18916  004DF2  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18917  004DF4  6A3F               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18918  004DF6  EFFC  F020         	goto	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18919  004DFA                     i2l6859:
 18920                           
 18921                           ; BSR set to: 4
 18922  004DFA  5131               	movf	49,w,b	;volatile
 18923                           
 18924                           ; Switch size 1, requested type "speed"
 18925                           ; Number of cases is 11, Range of values is 0 to 12
 18926                           ; switch strategies available:
 18927                           ; Name         Instructions Cycles
 18928                           ; simple_byte           34    18 (average)
 18929                           ;	Chosen strategy is simple_byte
 18930  004DFC  E102 EF14  F025    	bz	_USBStdGetStatusHandler
 18931  004E02  0A01               	xorlw	1	; case 1
 18932  004E04  E102 EF58  F033    	bz	_USBStdFeatureReqHandler
 18933  004E0A  0A02               	xorlw	2	; case 3
 18934  004E0C  E102 EF58  F033    	bz	_USBStdFeatureReqHandler
 18935  004E12  0A06               	xorlw	6	; case 5
 18936  004E14  E0C7               	bz	i2l1655
 18937  004E16  0A03               	xorlw	3	; case 6
 18938  004E18  E102 EF63  F02D    	bz	_USBStdGetDscHandler
 18939  004E1E  0A01               	xorlw	1	; case 7
 18940  004E20  E0E3               	bz	i2l6855
 18941  004E22  0A0F               	xorlw	15	; case 8
 18942  004E24  E0C4               	bz	i2l6833
 18943  004E26  0A01               	xorlw	1	; case 9
 18944  004E28  E102 EF1D  F028    	bz	_USBStdSetCfgHandler
 18945  004E2E  0A03               	xorlw	3	; case 10
 18946  004E30  E0C6               	bz	i2l6845
 18947  004E32  0A01               	xorlw	1	; case 11
 18948  004E34  E0CF               	bz	i2l1664
 18949  004E36  0A07               	xorlw	7	; case 12
 18950  004E38  0012               	return	
 18951  004E3A                     __end_of_USBCheckStdRequest:
 18952                           	opt stack 0
 18953                           pclatu	equ	0xFFB
 18954                           pclath	equ	0xFFA
 18955                           tblptru	equ	0xFF8
 18956                           tblptrh	equ	0xFF7
 18957                           tblptrl	equ	0xFF6
 18958                           tablat	equ	0xFF5
 18959                           prodh	equ	0xFF4
 18960                           prodl	equ	0xFF3
 18961                           intcon	equ	0xFF2
 18962                           postinc0	equ	0xFEE
 18963                           wreg	equ	0xFE8
 18964                           indf1	equ	0xFE7
 18965                           fsr1h	equ	0xFE2
 18966                           fsr1l	equ	0xFE1
 18967                           indf2	equ	0xFDF
 18968                           postinc2	equ	0xFDE
 18969                           postdec2	equ	0xFDD
 18970                           plusw2	equ	0xFDB
 18971                           fsr2h	equ	0xFDA
 18972                           fsr2l	equ	0xFD9
 18973                           status	equ	0xFD8
 18974                           
 18975 ;; *************** function _USBStdSetCfgHandler *****************
 18976 ;; Defined at:
 18977 ;;		line 1629 in file "../Includes/Usb/framework/usb_device.c"
 18978 ;; Parameters:    Size  Location     Type
 18979 ;;		None
 18980 ;; Auto vars:     Size  Location     Type
 18981 ;;  i               1   21[COMRAM] unsigned char 
 18982 ;; Return value:  Size  Location     Type
 18983 ;;                  1    wreg      void 
 18984 ;; Registers used:
 18985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18986 ;; Tracked objects:
 18987 ;;		On entry : A/4
 18988 ;;		On exit  : F/0
 18989 ;;		Unchanged: 0/0
 18990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18991 ;;      Params:         0       0       0       0       0       0       0       0       0
 18992 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18993 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18994 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18995 ;;Total ram usage:        1 bytes
 18996 ;; Hardware stack levels used:    1
 18997 ;; Hardware stack levels required when called:    5
 18998 ;; This function calls:
 18999 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19000 ;;		i2_memset
 19001 ;; This function is called by:
 19002 ;;		_USBCheckStdRequest
 19003 ;; This function uses a non-reentrant model
 19004 ;;
 19005                           
 19006                           	psect	text94
 19007  00503A                     __ptext94:
 19008                           	opt stack 0
 19009  00503A                     _USBStdSetCfgHandler:
 19010                           	opt stack 10
 19011                           
 19012                           ;usb_device.c: 1631: uint8_t i;
 19013                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 19014                           
 19015                           ;incstack = 0
 19016  00503A  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19017                           
 19018                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 19019  00503C  0E6B               	movlw	107
 19020  00503E  6E2E               	movwf	i2memset@p1,c
 19021  005040  0E0F               	movlw	15
 19022  005042  6E2F               	movwf	i2memset@p1+1,c
 19023  005044  6A31               	clrf	i2memset@c+1,c
 19024  005046  6A30               	clrf	i2memset@c,c
 19025  005048  6A33               	clrf	i2memset@n+1,c
 19026  00504A  0E02               	movlw	2
 19027  00504C  6E32               	movwf	i2memset@n,c
 19028  00504E  EC43  F01F         	call	i2_memset	;wreg free
 19029                           
 19030                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 19031  005052  6A2E               	clrf	i2memset@p1,c
 19032  005054  0E04               	movlw	4
 19033  005056  6E2F               	movwf	i2memset@p1+1,c
 19034  005058  6A31               	clrf	i2memset@c+1,c
 19035  00505A  6A30               	clrf	i2memset@c,c
 19036  00505C  6A33               	clrf	i2memset@n+1,c
 19037  00505E  0E30               	movlw	48
 19038  005060  6E32               	movwf	i2memset@n,c
 19039  005062  EC43  F01F         	call	i2_memset	;wreg free
 19040                           
 19041                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 19042  005066  8C60               	bsf	3936,6,c	;volatile
 19043                           
 19044                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 19045  005068  6A43               	clrf	USBStdSetCfgHandler@i,c
 19046  00506A                     i2l6421:
 19047                           
 19048                           ;usb_device.c: 1649: {
 19049                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 19050  00506A  0E22               	movlw	low _ep_data_in
 19051  00506C  2443               	addwf	USBStdSetCfgHandler@i,w,c
 19052  00506E  6ED9               	movwf	fsr2l,c
 19053  005070  6ADA               	clrf	fsr2h,c
 19054  005072  0E01               	movlw	high _ep_data_in
 19055  005074  22DA               	addwfc	fsr2h,f,c
 19056  005076  6ADF               	clrf	indf2,c
 19057                           
 19058                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 19059  005078  0E25               	movlw	low _ep_data_out
 19060  00507A  2443               	addwf	USBStdSetCfgHandler@i,w,c
 19061  00507C  6ED9               	movwf	fsr2l,c
 19062  00507E  6ADA               	clrf	fsr2h,c
 19063  005080  0E01               	movlw	high _ep_data_out
 19064  005082  22DA               	addwfc	fsr2h,f,c
 19065  005084  6ADF               	clrf	indf2,c
 19066  005086  2A43               	incf	USBStdSetCfgHandler@i,f,c
 19067  005088  0E02               	movlw	2
 19068  00508A  6443               	cpfsgt	USBStdSetCfgHandler@i,c
 19069  00508C  D7EE               	goto	i2l6421
 19070                           
 19071                           ;usb_device.c: 1652: }
 19072                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 19073  00508E  0EFB               	movlw	low _USBAlternateInterface
 19074  005090  6E2E               	movwf	i2memset@p1,c
 19075  005092  0E01               	movlw	high _USBAlternateInterface
 19076  005094  6E2F               	movwf	i2memset@p1+1,c
 19077  005096  6A31               	clrf	i2memset@c+1,c
 19078  005098  6A30               	clrf	i2memset@c,c
 19079  00509A  6A33               	clrf	i2memset@n+1,c
 19080  00509C  0E02               	movlw	2
 19081  00509E  6E32               	movwf	i2memset@n,c
 19082  0050A0  EC43  F01F         	call	i2_memset	;wreg free
 19083                           
 19084                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 19085  0050A4  9C60               	bcf	3936,6,c	;volatile
 19086                           
 19087                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 19088  0050A6  0E08               	movlw	8
 19089  0050A8  6E0F               	movwf	_pBDTEntryIn,c
 19090  0050AA  0E04               	movlw	4
 19091  0050AC  6E10               	movwf	_pBDTEntryIn+1,c
 19092                           
 19093                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 19094  0050AE  0E00               	movlw	0
 19095  0050B0  6E15               	movwf	_pBDTEntryEP0OutCurrent,c
 19096  0050B2  0E04               	movlw	4
 19097  0050B4  6E16               	movwf	_pBDTEntryEP0OutCurrent+1,c
 19098                           
 19099                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 19100  0050B6  C015  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 19101  0050BA  C016  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 19102                           
 19103                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 19104  0050BE  C432 F02C          	movff	1074,_USBActiveConfiguration	;volatile
 19105                           
 19106                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 19107  0050C2  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 19108  0050C4  E104               	bnz	i2l6443
 19109                           
 19110                           ;usb_device.c: 1671: {
 19111                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 19112  0050C6  0E10               	movlw	16
 19113  0050C8  0100               	movlb	0	; () banked
 19114  0050CA  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 19115                           
 19116                           ;usb_device.c: 1674: }
 19117  0050CC  0C10               	retlw	16
 19118  0050CE                     i2l6443:
 19119                           
 19120                           ;usb_device.c: 1675: else
 19121                           ;usb_device.c: 1676: {
 19122                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 19123  0050CE  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19124  0050D0  0E01               	movlw	1
 19125  0050D2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19126  0050D4  0E2C               	movlw	low _USBActiveConfiguration
 19127  0050D6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19128  0050D8  6A3E               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19129  0050DA  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19130  0050DC  0E01               	movlw	1
 19131  0050DE  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19132  0050E0  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19133                           
 19134                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 19135  0050E4  0E20               	movlw	32
 19136  0050E6  0100               	movlb	0	; () banked
 19137  0050E8  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 19138                           
 19139                           ; BSR set to: 0
 19140  0050EA  0C20               	retlw	32	;funcret
 19141  0050EC                     __end_of_USBStdSetCfgHandler:
 19142                           	opt stack 0
 19143                           pclatu	equ	0xFFB
 19144                           pclath	equ	0xFFA
 19145                           tblptru	equ	0xFF8
 19146                           tblptrh	equ	0xFF7
 19147                           tblptrl	equ	0xFF6
 19148                           tablat	equ	0xFF5
 19149                           prodh	equ	0xFF4
 19150                           prodl	equ	0xFF3
 19151                           intcon	equ	0xFF2
 19152                           postinc0	equ	0xFEE
 19153                           wreg	equ	0xFE8
 19154                           indf1	equ	0xFE7
 19155                           fsr1h	equ	0xFE2
 19156                           fsr1l	equ	0xFE1
 19157                           indf2	equ	0xFDF
 19158                           postinc2	equ	0xFDE
 19159                           postdec2	equ	0xFDD
 19160                           plusw2	equ	0xFDB
 19161                           fsr2h	equ	0xFDA
 19162                           fsr2l	equ	0xFD9
 19163                           status	equ	0xFD8
 19164                           
 19165 ;; *************** function i2_memset *****************
 19166 ;; Defined at:
 19167 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/memset.c"
 19168 ;; Parameters:    Size  Location     Type
 19169 ;;  p1              2    0[COMRAM] PTR void 
 19170 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 19171 ;;  c               2    2[COMRAM] int 
 19172 ;;  n               2    4[COMRAM] unsigned int 
 19173 ;; Auto vars:     Size  Location     Type
 19174 ;;  memset          2    6[COMRAM] PTR unsigned char 
 19175 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 19176 ;; Return value:  Size  Location     Type
 19177 ;;                  2    0[COMRAM] PTR void 
 19178 ;; Registers used:
 19179 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19180 ;; Tracked objects:
 19181 ;;		On entry : 0/0
 19182 ;;		On exit  : 0/0
 19183 ;;		Unchanged: 0/0
 19184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19185 ;;      Params:         6       0       0       0       0       0       0       0       0
 19186 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19187 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19188 ;;      Totals:         8       0       0       0       0       0       0       0       0
 19189 ;;Total ram usage:        8 bytes
 19190 ;; Hardware stack levels used:    1
 19191 ;; This function calls:
 19192 ;;		Nothing
 19193 ;; This function is called by:
 19194 ;;		_USBStdSetCfgHandler
 19195 ;;		i2_USBDeviceInit
 19196 ;; This function uses a non-reentrant model
 19197 ;;
 19198                           
 19199                           	psect	text95
 19200  003E86                     __ptext95:
 19201                           	opt stack 0
 19202  003E86                     i2_memset:
 19203                           	opt stack 17
 19204                           
 19205                           ; BSR set to: 0
 19206                           ;incstack = 0
 19207  003E86  C02E  F034         	movff	i2memset@p1,i2memset@p
 19208  003E8A  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 19209  003E8E  D008               	goto	i2l6225
 19210  003E90                     i2l6221:
 19211  003E90  C034  FFD9         	movff	i2memset@p,fsr2l
 19212  003E94  C035  FFDA         	movff	i2memset@p+1,fsr2h
 19213  003E98  C030  FFDF         	movff	i2memset@c,indf2
 19214  003E9C  4A34               	infsnz	i2memset@p,f,c
 19215  003E9E  2A35               	incf	i2memset@p+1,f,c
 19216  003EA0                     i2l6225:
 19217  003EA0  0632               	decf	i2memset@n,f,c
 19218  003EA2  A0D8               	btfss	status,0,c
 19219  003EA4  0633               	decf	i2memset@n+1,f,c
 19220  003EA6  2832               	incf	i2memset@n,w,c
 19221  003EA8  E1F3               	bnz	i2l6221
 19222  003EAA  2833               	incf	i2memset@n+1,w,c
 19223  003EAC  E1F1               	bnz	i2l6221
 19224  003EAE  0012               	return		;funcret
 19225  003EB0                     __end_ofi2_memset:
 19226                           	opt stack 0
 19227                           pclatu	equ	0xFFB
 19228                           pclath	equ	0xFFA
 19229                           tblptru	equ	0xFF8
 19230                           tblptrh	equ	0xFF7
 19231                           tblptrl	equ	0xFF6
 19232                           tablat	equ	0xFF5
 19233                           prodh	equ	0xFF4
 19234                           prodl	equ	0xFF3
 19235                           intcon	equ	0xFF2
 19236                           postinc0	equ	0xFEE
 19237                           wreg	equ	0xFE8
 19238                           indf1	equ	0xFE7
 19239                           fsr1h	equ	0xFE2
 19240                           fsr1l	equ	0xFE1
 19241                           indf2	equ	0xFDF
 19242                           postinc2	equ	0xFDE
 19243                           postdec2	equ	0xFDD
 19244                           plusw2	equ	0xFDB
 19245                           fsr2h	equ	0xFDA
 19246                           fsr2l	equ	0xFD9
 19247                           status	equ	0xFD8
 19248                           
 19249 ;; *************** function _USBStdGetStatusHandler *****************
 19250 ;; Defined at:
 19251 ;;		line 1773 in file "../Includes/Usb/framework/usb_device.c"
 19252 ;; Parameters:    Size  Location     Type
 19253 ;;		None
 19254 ;; Auto vars:     Size  Location     Type
 19255 ;;  p               2    0[COMRAM] PTR struct __BDT
 19256 ;;		 -> BDT(48), NULL(0), 
 19257 ;; Return value:  Size  Location     Type
 19258 ;;                  1    wreg      void 
 19259 ;; Registers used:
 19260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19261 ;; Tracked objects:
 19262 ;;		On entry : A/4
 19263 ;;		On exit  : A/0
 19264 ;;		Unchanged: 0/0
 19265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19266 ;;      Params:         0       0       0       0       0       0       0       0       0
 19267 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19268 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19269 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19270 ;;Total ram usage:        2 bytes
 19271 ;; Hardware stack levels used:    1
 19272 ;; This function calls:
 19273 ;;		Nothing
 19274 ;; This function is called by:
 19275 ;;		_USBCheckStdRequest
 19276 ;; This function uses a non-reentrant model
 19277 ;;
 19278                           
 19279                           	psect	text96
 19280  004A28                     __ptext96:
 19281                           	opt stack 0
 19282  004A28                     _USBStdGetStatusHandler:
 19283                           	opt stack 15
 19284                           
 19285                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 19286                           
 19287                           ;incstack = 0
 19288  004A28  0104               	movlb	4	; () banked
 19289  004A2A  6B38               	clrf	56,b	;volatile
 19290                           
 19291                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 19292  004A2C  6B39               	clrf	57,b	;volatile
 19293                           
 19294                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 19295  004A2E  D030               	goto	i2l6493
 19296  004A30                     i2l1591:
 19297                           
 19298                           ; BSR set to: 4
 19299                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 19300  004A30  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19301                           
 19302                           ; BSR set to: 4
 19303                           ;usb_device.c: 1789: }
 19304                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 19305                           
 19306                           ;usb_device.c: 1786: if(0 == 1)
 19307  004A32  0101               	movlb	1	; () banked
 19308  004A34  0546               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 19309  004A36  E133               	bnz	i2l1594
 19310                           
 19311                           ; BSR set to: 1
 19312                           ;usb_device.c: 1792: {
 19313                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 19314  004A38  0104               	movlb	4	; () banked
 19315  004A3A  8338               	bsf	56,1,b	;volatile
 19316  004A3C  D030               	goto	i2l1594
 19317  004A3E                     i2l1595:
 19318                           
 19319                           ; BSR set to: 4
 19320                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 19321  004A3E  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19322                           
 19323                           ;usb_device.c: 1798: break;
 19324  004A40  D02E               	goto	i2l1594
 19325  004A42                     i2l1596:
 19326                           
 19327                           ; BSR set to: 4
 19328                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 19329  004A42  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19330                           
 19331                           ;usb_device.c: 1804: {
 19332                           ;usb_device.c: 1805: BDT_ENTRY *p;
 19333                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 19334  004A44  BF34               	btfsc	52,7,b	;volatile
 19335  004A46  D00A               	goto	i2l6483
 19336                           
 19337                           ; BSR set to: 4
 19338                           ;usb_device.c: 1808: {
 19339                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 19340  004A48  5134               	movf	52,w,b	;volatile
 19341  004A4A  0B0F               	andlw	15
 19342  004A4C  0D02               	mullw	2
 19343  004A4E  0E18               	movlw	low _pBDTEntryOut
 19344  004A50  24F3               	addwf	prodl,w,c
 19345  004A52  6ED9               	movwf	fsr2l,c
 19346  004A54  0E01               	movlw	high _pBDTEntryOut
 19347  004A56  20F4               	addwfc	prodh,w,c
 19348  004A58  6EDA               	movwf	fsr2h,c
 19349  004A5A  D007               	goto	L28
 19350  004A5C                     i2l6483:
 19351                           
 19352                           ; BSR set to: 4
 19353                           ;usb_device.c: 1811: else
 19354                           ;usb_device.c: 1812: {
 19355                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 19356  004A5C  5134               	movf	52,w,b	;volatile
 19357  004A5E  0B0F               	andlw	15
 19358  004A60  0D02               	mullw	2
 19359  004A62  50F3               	movf	prodl,w,c
 19360  004A64  0F0F               	addlw	low _pBDTEntryIn
 19361  004A66  6ED9               	movwf	fsr2l,c
 19362  004A68  6ADA               	clrf	fsr2h,c
 19363  004A6A                     L28:
 19364  004A6A  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 19365  004A6E  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 19366                           
 19367                           ; BSR set to: 4
 19368                           ;usb_device.c: 1814: }
 19369                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 19370  004A72  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 19371  004A76  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 19372  004A7A  AEDF               	btfss	indf2,7,c
 19373  004A7C  D010               	goto	i2l1594
 19374                           
 19375                           ; BSR set to: 4
 19376  004A7E  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 19377  004A82  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 19378  004A86  A4DF               	btfss	indf2,2,c
 19379  004A88  D00A               	goto	i2l1594
 19380                           
 19381                           ; BSR set to: 4
 19382                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 19383  004A8A  0E01               	movlw	1
 19384  004A8C  6F38               	movwf	56,b	;volatile
 19385  004A8E  D007               	goto	i2l1594
 19386  004A90                     i2l6493:
 19387                           
 19388                           ; BSR set to: 4
 19389  004A90  5130               	movf	48,w,b	;volatile
 19390  004A92  0B1F               	andlw	31
 19391                           
 19392                           ; Switch size 1, requested type "speed"
 19393                           ; Number of cases is 3, Range of values is 0 to 2
 19394                           ; switch strategies available:
 19395                           ; Name         Instructions Cycles
 19396                           ; simple_byte           10     6 (average)
 19397                           ;	Chosen strategy is simple_byte
 19398  004A94  E0CD               	bz	i2l1591
 19399  004A96  0A01               	xorlw	1	; case 1
 19400  004A98  E0D2               	bz	i2l1595
 19401  004A9A  0A03               	xorlw	3	; case 2
 19402  004A9C  E0D2               	bz	i2l1596
 19403  004A9E                     i2l1594:
 19404                           
 19405                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 19406  004A9E  AE0C               	btfss	_inPipes+3,7,c	;volatile
 19407  004AA0  0012               	return	
 19408                           
 19409                           ;usb_device.c: 1823: {
 19410                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 19411  004AA2  0E38               	movlw	56
 19412  004AA4  6E09               	movwf	_inPipes,c	;volatile
 19413  004AA6  0E04               	movlw	4
 19414  004AA8  6E0A               	movwf	_inPipes+1,c	;volatile
 19415                           
 19416                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 19417  004AAA  800C               	bsf	_inPipes+3,0,c	;volatile
 19418                           
 19419                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 19420  004AAC  0E02               	movlw	2
 19421  004AAE  6E0D               	movwf	_inPipes+4,c	;volatile
 19422  004AB0  0C02               	retlw	2	;funcret
 19423  004AB2                     __end_of_USBStdGetStatusHandler:
 19424                           	opt stack 0
 19425                           pclatu	equ	0xFFB
 19426                           pclath	equ	0xFFA
 19427                           tblptru	equ	0xFF8
 19428                           tblptrh	equ	0xFF7
 19429                           tblptrl	equ	0xFF6
 19430                           tablat	equ	0xFF5
 19431                           prodh	equ	0xFF4
 19432                           prodl	equ	0xFF3
 19433                           intcon	equ	0xFF2
 19434                           postinc0	equ	0xFEE
 19435                           wreg	equ	0xFE8
 19436                           indf1	equ	0xFE7
 19437                           fsr1h	equ	0xFE2
 19438                           fsr1l	equ	0xFE1
 19439                           indf2	equ	0xFDF
 19440                           postinc2	equ	0xFDE
 19441                           postdec2	equ	0xFDD
 19442                           plusw2	equ	0xFDB
 19443                           fsr2h	equ	0xFDA
 19444                           fsr2l	equ	0xFD9
 19445                           status	equ	0xFD8
 19446                           
 19447 ;; *************** function _USBStdGetDscHandler *****************
 19448 ;; Defined at:
 19449 ;;		line 1704 in file "../Includes/Usb/framework/usb_device.c"
 19450 ;; Parameters:    Size  Location     Type
 19451 ;;		None
 19452 ;; Auto vars:     Size  Location     Type
 19453 ;;		None
 19454 ;; Return value:  Size  Location     Type
 19455 ;;                  1    wreg      void 
 19456 ;; Registers used:
 19457 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19458 ;; Tracked objects:
 19459 ;;		On entry : A/4
 19460 ;;		On exit  : 0/0
 19461 ;;		Unchanged: 0/0
 19462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19463 ;;      Params:         0       0       0       0       0       0       0       0       0
 19464 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19465 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19466 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19467 ;;Total ram usage:        2 bytes
 19468 ;; Hardware stack levels used:    1
 19469 ;; This function calls:
 19470 ;;		Nothing
 19471 ;; This function is called by:
 19472 ;;		_USBCheckStdRequest
 19473 ;; This function uses a non-reentrant model
 19474 ;;
 19475                           
 19476                           	psect	text97
 19477  005AC6                     __ptext97:
 19478                           	opt stack 0
 19479  005AC6                     _USBStdGetDscHandler:
 19480                           	opt stack 15
 19481                           
 19482                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 19483                           
 19484                           ;incstack = 0
 19485  005AC6  0E80               	movlw	128
 19486  005AC8  0104               	movlb	4	; () banked
 19487  005ACA  1930               	xorwf	48,w,b	;volatile
 19488  005ACC  A4D8               	btfss	status,2,c
 19489  005ACE  0012               	return	
 19490                           
 19491                           ; BSR set to: 4
 19492                           ;usb_device.c: 1707: {
 19493                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 19494  005AD0  0EC0               	movlw	192
 19495  005AD2  6E0C               	movwf	_inPipes+3,c	;volatile
 19496                           
 19497                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 19498  005AD4  D071               	goto	i2l6471
 19499  005AD6                     i2l6451:
 19500                           
 19501                           ; BSR set to: 4
 19502                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 19503  005AD6  0E44               	movlw	low _device_dsc
 19504  005AD8  6E09               	movwf	_inPipes,c	;volatile
 19505  005ADA  0E7B               	movlw	high _device_dsc
 19506  005ADC  6E0A               	movwf	_inPipes+1,c	;volatile
 19507                           
 19508                           ; BSR set to: 4
 19509                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 19510  005ADE  6A0E               	clrf	_inPipes+5,c	;volatile
 19511  005AE0  0E12               	movlw	18
 19512  005AE2  6E0D               	movwf	_inPipes+4,c	;volatile
 19513                           
 19514                           ;usb_device.c: 1715: break;
 19515  005AE4  0C12               	retlw	18
 19516  005AE6                     i2l6455:
 19517                           
 19518                           ; BSR set to: 4
 19519                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 19520  005AE6  5132               	movf	50,w,b	;volatile
 19521  005AE8  E13D               	bnz	i2l1581
 19522                           
 19523                           ; BSR set to: 4
 19524                           ;usb_device.c: 1721: {
 19525                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 19526  005AEA  5132               	movf	50,w,b	;volatile
 19527  005AEC  0D02               	mullw	2
 19528  005AEE  0E97               	movlw	low _USB_CD_Ptr
 19529  005AF0  24F3               	addwf	prodl,w,c
 19530  005AF2  6EF6               	movwf	tblptrl,c
 19531  005AF4  0E77               	movlw	high _USB_CD_Ptr
 19532  005AF6  20F4               	addwfc	prodh,w,c
 19533  005AF8  6EF7               	movwf	tblptrh,c
 19534  005AFA                     	if	0	;There are less than 3 active tblptr bytes
 19535  005AFA                     	endif
 19536  005AFA  0009               	tblrd		*+
 19537  005AFC  CFF5 F009          	movff	tablat,_inPipes	;volatile
 19538  005B00  000A               	tblrd		*-
 19539  005B02  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 19540                           
 19541                           ; BSR set to: 4
 19542                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 19543  005B06  0E02               	movlw	2
 19544  005B08  2409               	addwf	_inPipes,w,c	;volatile
 19545  005B0A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 19546  005B0C  0E00               	movlw	0
 19547  005B0E  200A               	addwfc	_inPipes+1,w,c	;volatile
 19548  005B10  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 19549  005B12  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 19550  005B16  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 19551  005B1A  6AF8               	clrf	tblptru,c
 19552  005B1C  0E07               	movlw	(high __ramtop+-1)
 19553  005B1E  64F7               	cpfsgt	tblptrh,c
 19554  005B20  D003               	bra	i2u450_47
 19555  005B22  0008               	tblrd		*
 19556  005B24  50F5               	movf	tablat,w,c
 19557  005B26  D005               	bra	i2u450_40
 19558  005B28                     i2u450_47:
 19559  005B28  CFF6 FFE1          	movff	tblptrl,fsr1l
 19560  005B2C  CFF7 FFE2          	movff	tblptrh,fsr1h
 19561  005B30  50E7               	movf	indf1,w,c
 19562  005B32                     i2u450_40:
 19563  005B32  6E0D               	movwf	_inPipes+4,c	;volatile
 19564                           
 19565                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 19566  005B34  0E03               	movlw	3
 19567  005B36  2409               	addwf	_inPipes,w,c	;volatile
 19568  005B38  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 19569  005B3A  0E00               	movlw	0
 19570  005B3C  200A               	addwfc	_inPipes+1,w,c	;volatile
 19571  005B3E  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 19572  005B40  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 19573  005B44  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 19574  005B48  6AF8               	clrf	tblptru,c
 19575  005B4A  0E07               	movlw	(high __ramtop+-1)
 19576  005B4C  64F7               	cpfsgt	tblptrh,c
 19577  005B4E  D003               	bra	i2u451_47
 19578  005B50  0008               	tblrd		*
 19579  005B52  50F5               	movf	tablat,w,c
 19580  005B54  D005               	bra	i2u451_40
 19581  005B56                     i2u451_47:
 19582  005B56  CFF6 FFE1          	movff	tblptrl,fsr1l
 19583  005B5A  CFF7 FFE2          	movff	tblptrh,fsr1h
 19584  005B5E  50E7               	movf	indf1,w,c
 19585  005B60                     i2u451_40:
 19586  005B60  6E0E               	movwf	_inPipes+5,c	;volatile
 19587                           
 19588                           ;usb_device.c: 1729: }
 19589  005B62  0012               	return	
 19590  005B64                     i2l1581:
 19591                           
 19592                           ; BSR set to: 4
 19593                           ;usb_device.c: 1730: else
 19594                           ;usb_device.c: 1731: {
 19595                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 19596  005B64  6A0C               	clrf	_inPipes+3,c	;volatile
 19597  005B66  0012               	return	
 19598  005B68                     i2l6463:
 19599                           
 19600                           ; BSR set to: 4
 19601                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 19602  005B68  0E03               	movlw	3
 19603  005B6A  6132               	cpfslt	50,b	;volatile
 19604  005B6C  D021               	goto	i2l1584
 19605                           
 19606                           ; BSR set to: 4
 19607                           ;usb_device.c: 1740: {
 19608                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 19609  005B6E  5132               	movf	50,w,b	;volatile
 19610  005B70  0D02               	mullw	2
 19611  005B72  0E91               	movlw	low _USB_SD_Ptr
 19612  005B74  24F3               	addwf	prodl,w,c
 19613  005B76  6EF6               	movwf	tblptrl,c
 19614  005B78  0E77               	movlw	high _USB_SD_Ptr
 19615  005B7A  20F4               	addwfc	prodh,w,c
 19616  005B7C  6EF7               	movwf	tblptrh,c
 19617  005B7E                     	if	0	;There are less than 3 active tblptr bytes
 19618  005B7E                     	endif
 19619  005B7E  0009               	tblrd		*+
 19620  005B80  CFF5 F009          	movff	tablat,_inPipes	;volatile
 19621  005B84  000A               	tblrd		*-
 19622  005B86  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 19623                           
 19624                           ; BSR set to: 4
 19625                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 19626  005B8A  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 19627  005B8E  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19628  005B92  6AF8               	clrf	tblptru,c
 19629  005B94  0E07               	movlw	(high __ramtop+-1)
 19630  005B96  64F7               	cpfsgt	tblptrh,c
 19631  005B98  D003               	bra	i2u453_47
 19632  005B9A  0008               	tblrd		*
 19633  005B9C  50F5               	movf	tablat,w,c
 19634  005B9E  D005               	bra	i2u453_40
 19635  005BA0                     i2u453_47:
 19636  005BA0  CFF6 FFE1          	movff	tblptrl,fsr1l
 19637  005BA4  CFF7 FFE2          	movff	tblptrh,fsr1h
 19638  005BA8  50E7               	movf	indf1,w,c
 19639  005BAA                     i2u453_40:
 19640  005BAA  6E0D               	movwf	_inPipes+4,c	;volatile
 19641  005BAC  6A0E               	clrf	_inPipes+5,c	;volatile
 19642                           
 19643                           ;usb_device.c: 1745: }
 19644  005BAE  0012               	return	
 19645  005BB0                     i2l1584:
 19646                           
 19647                           ; BSR set to: 4
 19648                           ;usb_device.c: 1746: else
 19649                           ;usb_device.c: 1747: {
 19650                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 19651  005BB0  6A0C               	clrf	_inPipes+3,c	;volatile
 19652  005BB2  0012               	return	
 19653  005BB4                     i2l1586:
 19654                           
 19655                           ; BSR set to: 4
 19656                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 19657  005BB4  6A0C               	clrf	_inPipes+3,c	;volatile
 19658                           
 19659                           ;usb_device.c: 1753: break;
 19660  005BB6  0012               	return	
 19661  005BB8                     i2l6471:
 19662                           
 19663                           ; BSR set to: 4
 19664  005BB8  5133               	movf	51,w,b	;volatile
 19665                           
 19666                           ; Switch size 1, requested type "speed"
 19667                           ; Number of cases is 3, Range of values is 1 to 3
 19668                           ; switch strategies available:
 19669                           ; Name         Instructions Cycles
 19670                           ; simple_byte           10     6 (average)
 19671                           ;	Chosen strategy is simple_byte
 19672  005BBA  0A01               	xorlw	1	; case 1
 19673  005BBC  E08C               	bz	i2l6451
 19674  005BBE  0A03               	xorlw	3	; case 2
 19675  005BC0  E092               	bz	i2l6455
 19676  005BC2  0A01               	xorlw	1	; case 3
 19677  005BC4  E0D1               	bz	i2l6463
 19678  005BC6  D7F6               	goto	i2l1586
 19679  005BC8                     __end_of_USBStdGetDscHandler:
 19680                           	opt stack 0
 19681                           pclatu	equ	0xFFB
 19682                           pclath	equ	0xFFA
 19683                           tblptru	equ	0xFF8
 19684                           tblptrh	equ	0xFF7
 19685                           tblptrl	equ	0xFF6
 19686                           tablat	equ	0xFF5
 19687                           prodh	equ	0xFF4
 19688                           prodl	equ	0xFF3
 19689                           intcon	equ	0xFF2
 19690                           postinc0	equ	0xFEE
 19691                           wreg	equ	0xFE8
 19692                           indf1	equ	0xFE7
 19693                           fsr1h	equ	0xFE2
 19694                           fsr1l	equ	0xFE1
 19695                           indf2	equ	0xFDF
 19696                           postinc2	equ	0xFDE
 19697                           postdec2	equ	0xFDD
 19698                           plusw2	equ	0xFDB
 19699                           fsr2h	equ	0xFDA
 19700                           fsr2l	equ	0xFD9
 19701                           status	equ	0xFD8
 19702                           
 19703 ;; *************** function _USBStdFeatureReqHandler *****************
 19704 ;; Defined at:
 19705 ;;		line 2385 in file "../Includes/Usb/framework/usb_device.c"
 19706 ;; Parameters:    Size  Location     Type
 19707 ;;		None
 19708 ;; Auto vars:     Size  Location     Type
 19709 ;;  p               2   26[COMRAM] PTR struct __BDT
 19710 ;;		 -> BDT(48), NULL(0), 
 19711 ;;  pUEP            2   23[COMRAM] PTR unsigned char 
 19712 ;;		 -> UEP0(1), 
 19713 ;;  current_ep_d    1   25[COMRAM] struct .
 19714 ;; Return value:  Size  Location     Type
 19715 ;;                  1    wreg      void 
 19716 ;; Registers used:
 19717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19718 ;; Tracked objects:
 19719 ;;		On entry : A/4
 19720 ;;		On exit  : A/0
 19721 ;;		Unchanged: 0/0
 19722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19723 ;;      Params:         0       0       0       0       0       0       0       0       0
 19724 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19725 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19726 ;;      Totals:         7       0       0       0       0       0       0       0       0
 19727 ;;Total ram usage:        7 bytes
 19728 ;; Hardware stack levels used:    1
 19729 ;; Hardware stack levels required when called:    5
 19730 ;; This function calls:
 19731 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19732 ;; This function is called by:
 19733 ;;		_USBCheckStdRequest
 19734 ;; This function uses a non-reentrant model
 19735 ;;
 19736                           
 19737                           	psect	text98
 19738  0066B0                     __ptext98:
 19739                           	opt stack 0
 19740  0066B0                     _USBStdFeatureReqHandler:
 19741                           	opt stack 10
 19742                           
 19743                           ;usb_device.c: 2387: BDT_ENTRY *p;
 19744                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 19745                           ;usb_device.c: 2390: unsigned char* pUEP;
 19746                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 19747                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 19748                           
 19749                           ;incstack = 0
 19750  0066B0  0104               	movlb	4	; () banked
 19751  0066B2  0532               	decf	50,w,b	;volatile
 19752  0066B4  E10D               	bnz	i2l6511
 19753                           
 19754                           ; BSR set to: 4
 19755  0066B6  5130               	movf	48,w,b	;volatile
 19756  0066B8  0B1F               	andlw	31
 19757  0066BA  E10A               	bnz	i2l6511
 19758                           
 19759                           ; BSR set to: 4
 19760                           ;usb_device.c: 2395: {
 19761                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 19762  0066BC  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19763                           
 19764                           ; BSR set to: 4
 19765                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 19766  0066BE  0E03               	movlw	3
 19767  0066C0  1931               	xorwf	49,w,b	;volatile
 19768  0066C2  E104               	bnz	i2l1671
 19769                           
 19770                           ; BSR set to: 4
 19771                           ;usb_device.c: 2398: RemoteWakeup = 1;
 19772  0066C4  0E01               	movlw	1
 19773  0066C6  0101               	movlb	1	; () banked
 19774  0066C8  6F46               	movwf	_RemoteWakeup& (0+255),b	;volatile
 19775  0066CA  D002               	goto	i2l6511
 19776  0066CC                     i2l1671:
 19777                           
 19778                           ; BSR set to: 4
 19779                           ;usb_device.c: 2399: else
 19780                           ;usb_device.c: 2400: RemoteWakeup = 0;
 19781  0066CC  0101               	movlb	1	; () banked
 19782  0066CE  6B46               	clrf	_RemoteWakeup& (0+255),b	;volatile
 19783  0066D0                     i2l6511:
 19784                           
 19785                           ;usb_device.c: 2401: }
 19786                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 19787                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 19788                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 19789                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 19790  0066D0  0104               	movlb	4	; () banked
 19791  0066D2  5132               	movf	50,w,b	;volatile
 19792  0066D4  A4D8               	btfss	status,2,c
 19793  0066D6  0012               	return	
 19794                           
 19795                           ; BSR set to: 4
 19796  0066D8  5130               	movf	48,w,b	;volatile
 19797  0066DA  0B1F               	andlw	31
 19798  0066DC  0A02               	xorlw	2
 19799  0066DE  A4D8               	btfss	status,2,c
 19800  0066E0  0012               	return	
 19801                           
 19802                           ; BSR set to: 4
 19803  0066E2  5134               	movf	52,w,b	;volatile
 19804  0066E4  0B0F               	andlw	15
 19805  0066E6  B4D8               	btfsc	status,2,c
 19806  0066E8  0012               	return	
 19807                           
 19808                           ; BSR set to: 4
 19809  0066EA  5134               	movf	52,w,b	;volatile
 19810  0066EC  0B0F               	andlw	15
 19811  0066EE  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19812  0066F0  0E03               	movlw	3
 19813  0066F2  6043               	cpfslt	??_USBStdFeatureReqHandler,c
 19814  0066F4  0C03               	retlw	3
 19815                           
 19816                           ; BSR set to: 4
 19817  0066F6  0E20               	movlw	32
 19818  0066F8  0100               	movlb	0	; () banked
 19819  0066FA  19F4               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 19820  0066FC  A4D8               	btfss	status,2,c
 19821  0066FE  0012               	return	
 19822                           
 19823                           ; BSR set to: 0
 19824                           ;usb_device.c: 2408: {
 19825                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 19826  006700  8E0C               	bsf	_inPipes+3,7,c	;volatile
 19827                           
 19828                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 19829  006702  0104               	movlb	4	; () banked
 19830  006704  BF34               	btfsc	52,7,b	;volatile
 19831  006706  D016               	goto	i2l6527
 19832                           
 19833                           ; BSR set to: 4
 19834                           ;usb_device.c: 2415: {
 19835                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 19836  006708  5134               	movf	52,w,b	;volatile
 19837  00670A  0B0F               	andlw	15
 19838  00670C  0D02               	mullw	2
 19839  00670E  0E18               	movlw	low _pBDTEntryOut
 19840  006710  24F3               	addwf	prodl,w,c
 19841  006712  6ED9               	movwf	fsr2l,c
 19842  006714  0E01               	movlw	high _pBDTEntryOut
 19843  006716  20F4               	addwfc	prodh,w,c
 19844  006718  6EDA               	movwf	fsr2h,c
 19845  00671A  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 19846  00671E  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19847                           
 19848                           ; BSR set to: 4
 19849                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 19850  006722  5134               	movf	52,w,b	;volatile
 19851  006724  0B0F               	andlw	15
 19852  006726  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19853  006728  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 19854  00672A  0E25               	movlw	low _ep_data_out
 19855  00672C  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 19856  00672E  6ED9               	movwf	fsr2l,c
 19857  006730  0E01               	movlw	high _ep_data_out
 19858  006732  D013               	goto	L29
 19859  006734                     i2l6527:
 19860                           
 19861                           ; BSR set to: 4
 19862                           ;usb_device.c: 2419: else
 19863                           ;usb_device.c: 2420: {
 19864                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 19865  006734  5134               	movf	52,w,b	;volatile
 19866  006736  0B0F               	andlw	15
 19867  006738  0D02               	mullw	2
 19868  00673A  50F3               	movf	prodl,w,c
 19869  00673C  0F0F               	addlw	low _pBDTEntryIn
 19870  00673E  6ED9               	movwf	fsr2l,c
 19871  006740  6ADA               	clrf	fsr2h,c
 19872  006742  CFDE F048          	movff	postinc2,USBStdFeatureReqHandler@p
 19873  006746  CFDD F049          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19874                           
 19875                           ; BSR set to: 4
 19876                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 19877  00674A  5134               	movf	52,w,b	;volatile
 19878  00674C  0B0F               	andlw	15
 19879  00674E  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19880  006750  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 19881  006752  0E22               	movlw	low _ep_data_in
 19882  006754  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 19883  006756  6ED9               	movwf	fsr2l,c
 19884  006758  0E01               	movlw	high _ep_data_in
 19885  00675A                     L29:
 19886  00675A  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 19887  00675C  6EDA               	movwf	fsr2h,c
 19888  00675E  50DF               	movf	indf2,w,c
 19889  006760  6E47               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 19890                           
 19891                           ; BSR set to: 4
 19892                           ;usb_device.c: 2423: }
 19893                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 19894  006762  B047               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 19895  006764  D002               	goto	i2l6535
 19896                           
 19897                           ; BSR set to: 4
 19898                           ;usb_device.c: 2429: {
 19899                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 19900  006766  9448               	bcf	USBStdFeatureReqHandler@p,2,c
 19901                           
 19902                           ;usb_device.c: 2431: }
 19903  006768  D001               	goto	i2l6537
 19904  00676A                     i2l6535:
 19905                           
 19906                           ; BSR set to: 4
 19907                           ;usb_device.c: 2432: else
 19908                           ;usb_device.c: 2433: {
 19909                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 19910  00676A  8448               	bsf	USBStdFeatureReqHandler@p,2,c
 19911  00676C                     i2l6537:
 19912                           
 19913                           ; BSR set to: 4
 19914                           ;usb_device.c: 2435: }
 19915                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 19916  00676C  BF34               	btfsc	52,7,b	;volatile
 19917  00676E  D00A               	goto	i2l6541
 19918                           
 19919                           ; BSR set to: 4
 19920                           ;usb_device.c: 2440: {
 19921                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 19922  006770  5134               	movf	52,w,b	;volatile
 19923  006772  0B0F               	andlw	15
 19924  006774  0D02               	mullw	2
 19925  006776  0E18               	movlw	low _pBDTEntryOut
 19926  006778  24F3               	addwf	prodl,w,c
 19927  00677A  6ED9               	movwf	fsr2l,c
 19928  00677C  0E01               	movlw	high _pBDTEntryOut
 19929  00677E  20F4               	addwfc	prodh,w,c
 19930  006780  6EDA               	movwf	fsr2h,c
 19931  006782  D007               	goto	L30
 19932  006784                     i2l6541:
 19933                           
 19934                           ; BSR set to: 4
 19935                           ;usb_device.c: 2443: else
 19936                           ;usb_device.c: 2444: {
 19937                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 19938  006784  5134               	movf	52,w,b	;volatile
 19939  006786  0B0F               	andlw	15
 19940  006788  0D02               	mullw	2
 19941  00678A  50F3               	movf	prodl,w,c
 19942  00678C  0F0F               	addlw	low _pBDTEntryIn
 19943  00678E  6ED9               	movwf	fsr2l,c
 19944  006790  6ADA               	clrf	fsr2h,c
 19945  006792                     L30:
 19946  006792  C048  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 19947  006796  C049  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 19948                           
 19949                           ; BSR set to: 4
 19950                           ;usb_device.c: 2446: }
 19951                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 19952  00679A  0E03               	movlw	3
 19953  00679C  1931               	xorwf	49,w,b	;volatile
 19954  00679E  E129               	bnz	i2l6553
 19955                           
 19956                           ; BSR set to: 4
 19957                           ;usb_device.c: 2450: {
 19958                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 19959  0067A0  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19960  0067A4  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19961  0067A8  AEDF               	btfss	indf2,7,c
 19962  0067AA  D017               	goto	i2l1681
 19963                           
 19964                           ; BSR set to: 4
 19965                           ;usb_device.c: 2452: {
 19966                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 19967  0067AC  BF34               	btfsc	52,7,b	;volatile
 19968  0067AE  D009               	goto	i2l6551
 19969                           
 19970                           ; BSR set to: 4
 19971                           ;usb_device.c: 2456: {
 19972                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 19973  0067B0  5134               	movf	52,w,b	;volatile
 19974  0067B2  0B0F               	andlw	15
 19975  0067B4  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19976  0067B6  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 19977  0067B8  0E25               	movlw	low _ep_data_out
 19978  0067BA  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 19979  0067BC  6ED9               	movwf	fsr2l,c
 19980  0067BE  0E01               	movlw	high _ep_data_out
 19981  0067C0  D008               	goto	L31
 19982  0067C2                     i2l6551:
 19983                           
 19984                           ; BSR set to: 4
 19985                           ;usb_device.c: 2459: else
 19986                           ;usb_device.c: 2460: {
 19987                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 19988  0067C2  5134               	movf	52,w,b	;volatile
 19989  0067C4  0B0F               	andlw	15
 19990  0067C6  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19991  0067C8  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 19992  0067CA  0E22               	movlw	low _ep_data_in
 19993  0067CC  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 19994  0067CE  6ED9               	movwf	fsr2l,c
 19995  0067D0  0E01               	movlw	high _ep_data_in
 19996  0067D2                     L31:
 19997  0067D2  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 19998  0067D4  6EDA               	movwf	fsr2h,c
 19999  0067D6  0101               	movlb	1	; () banked
 20000  0067D8  82DF               	bsf	indf2,1,c
 20001  0067DA                     i2l1681:
 20002                           
 20003                           ;usb_device.c: 2462: }
 20004                           ;usb_device.c: 2463: }
 20005                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 20006  0067DA  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20007  0067DE  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20008  0067E2  0E00               	movlw	0
 20009  0067E4  84DB               	bsf	plusw2,2,c
 20010                           
 20011                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 20012  0067E6  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20013  0067EA  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20014  0067EE  8EDB               	bsf	plusw2,7,c
 20015                           
 20016                           ;usb_device.c: 2468: }
 20017  0067F0  0C00               	retlw	0
 20018  0067F2                     i2l6553:
 20019                           
 20020                           ; BSR set to: 4
 20021                           ;usb_device.c: 2469: else
 20022                           ;usb_device.c: 2470: {
 20023                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 20024  0067F2  0E04               	movlw	4
 20025  0067F4  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 20026                           
 20027                           ; BSR set to: 4
 20028                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 20029  0067F6  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20030  0067FA  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20031  0067FE  AEDF               	btfss	indf2,7,c
 20032  006800  D019               	goto	i2l6563
 20033                           
 20034                           ; BSR set to: 4
 20035                           ;usb_device.c: 2476: {
 20036                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 20037  006802  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20038  006806  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20039  00680A  0E7F               	movlw	127
 20040  00680C  16DF               	andwf	indf2,f,c
 20041                           
 20042                           ; BSR set to: 4
 20043                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 20044  00680E  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20045  006812  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20046  006816  0E00               	movlw	0
 20047  006818  8CDB               	bsf	plusw2,6,c
 20048                           
 20049                           ; BSR set to: 4
 20050                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 20051  00681A  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20052  00681C  0E05               	movlw	5
 20053  00681E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20054  006820  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 20055  006824  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 20056  006828  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20057  00682A  0E02               	movlw	2
 20058  00682C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20059  00682E  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20060                           
 20061                           ;usb_device.c: 2482: }
 20062  006832  D006               	goto	i2l6565
 20063  006834                     i2l6563:
 20064                           
 20065                           ; BSR set to: 4
 20066                           ;usb_device.c: 2483: else
 20067                           ;usb_device.c: 2484: {
 20068                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 20069  006834  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20070  006838  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20071  00683C  0E00               	movlw	0
 20072  00683E  8CDB               	bsf	plusw2,6,c
 20073  006840                     i2l6565:
 20074                           
 20075                           ;usb_device.c: 2487: }
 20076                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 20077  006840  0E04               	movlw	4
 20078  006842  1A48               	xorwf	USBStdFeatureReqHandler@p,f,c
 20079                           
 20080                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 20081  006844  B247               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 20082  006846  D006               	goto	i2l1689
 20083  006848  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20084  00684C  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20085  006850  AEDF               	btfss	indf2,7,c
 20086  006852  D02B               	goto	i2l6579
 20087  006854                     i2l1689:
 20088                           
 20089                           ;usb_device.c: 2498: {
 20090                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 20091  006854  0104               	movlb	4	; () banked
 20092  006856  BF34               	btfsc	52,7,b	;volatile
 20093  006858  D009               	goto	i2l6573
 20094                           
 20095                           ; BSR set to: 4
 20096                           ;usb_device.c: 2500: {
 20097                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 20098  00685A  5134               	movf	52,w,b	;volatile
 20099  00685C  0B0F               	andlw	15
 20100  00685E  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20101  006860  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 20102  006862  0E25               	movlw	low _ep_data_out
 20103  006864  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 20104  006866  6ED9               	movwf	fsr2l,c
 20105  006868  0E01               	movlw	high _ep_data_out
 20106  00686A  D008               	goto	L32
 20107  00686C                     i2l6573:
 20108                           
 20109                           ; BSR set to: 4
 20110                           ;usb_device.c: 2503: else
 20111                           ;usb_device.c: 2504: {
 20112                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 20113  00686C  5134               	movf	52,w,b	;volatile
 20114  00686E  0B0F               	andlw	15
 20115  006870  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20116  006872  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 20117  006874  0E22               	movlw	low _ep_data_in
 20118  006876  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 20119  006878  6ED9               	movwf	fsr2l,c
 20120  00687A  0E01               	movlw	high _ep_data_in
 20121  00687C                     L32:
 20122  00687C  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 20123  00687E  6EDA               	movwf	fsr2h,c
 20124  006880  0101               	movlb	1	; () banked
 20125  006882  92DF               	bcf	indf2,1,c
 20126                           
 20127                           ; BSR set to: 1
 20128                           ;usb_device.c: 2506: }
 20129                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 20130  006884  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20131  006888  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20132  00688C  0E3B               	movlw	59
 20133  00688E  16DF               	andwf	indf2,f,c
 20134                           
 20135                           ; BSR set to: 1
 20136                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 20137  006890  6A3C               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20138  006892  0E05               	movlw	5
 20139  006894  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20140  006896  C048  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 20141  00689A  C049  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 20142  00689E  6A40               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20143  0068A0  0E02               	movlw	2
 20144  0068A2  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20145  0068A4  ECFC  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20146                           
 20147                           ;usb_device.c: 2512: }
 20148  0068A8  D006               	goto	i2l6581
 20149  0068AA                     i2l6579:
 20150                           
 20151                           ;usb_device.c: 2513: else
 20152                           ;usb_device.c: 2514: {
 20153                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 20154  0068AA  C048  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20155  0068AE  C049  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20156  0068B2  0E3B               	movlw	59
 20157  0068B4  16DF               	andwf	indf2,f,c
 20158  0068B6                     i2l6581:
 20159                           
 20160                           ;usb_device.c: 2517: }
 20161                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 20162  0068B6  0104               	movlb	4	; () banked
 20163  0068B8  5134               	movf	52,w,b	;volatile
 20164  0068BA  0B0F               	andlw	15
 20165  0068BC  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20166  0068BE  6A44               	clrf	(??_USBStdFeatureReqHandler+1)& (0+255),c
 20167  0068C0  0E6A               	movlw	106
 20168  0068C2  2443               	addwf	??_USBStdFeatureReqHandler,w,c
 20169  0068C4  6E45               	movwf	USBStdFeatureReqHandler@pUEP,c
 20170  0068C6  0E0F               	movlw	15
 20171  0068C8  2044               	addwfc	??_USBStdFeatureReqHandler+1,w,c
 20172  0068CA  6E46               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 20173                           
 20174                           ; BSR set to: 4
 20175                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 20176  0068CC  C045  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 20177  0068D0  C046  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 20178  0068D4  0EFE               	movlw	254
 20179  0068D6  16DF               	andwf	indf2,f,c
 20180  0068D8  0CFE               	retlw	254	;funcret
 20181  0068DA                     __end_of_USBStdFeatureReqHandler:
 20182                           	opt stack 0
 20183                           pclatu	equ	0xFFB
 20184                           pclath	equ	0xFFA
 20185                           tblptru	equ	0xFF8
 20186                           tblptrh	equ	0xFF7
 20187                           tblptrl	equ	0xFF6
 20188                           tablat	equ	0xFF5
 20189                           prodh	equ	0xFF4
 20190                           prodl	equ	0xFF3
 20191                           intcon	equ	0xFF2
 20192                           postinc0	equ	0xFEE
 20193                           wreg	equ	0xFE8
 20194                           indf1	equ	0xFE7
 20195                           fsr1h	equ	0xFE2
 20196                           fsr1l	equ	0xFE1
 20197                           indf2	equ	0xFDF
 20198                           postinc2	equ	0xFDE
 20199                           postdec2	equ	0xFDD
 20200                           plusw2	equ	0xFDB
 20201                           fsr2h	equ	0xFDA
 20202                           fsr2l	equ	0xFD9
 20203                           status	equ	0xFD8
 20204                           
 20205 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 20206 ;; Defined at:
 20207 ;;		line 271 in file "../Includes/Board/USBapp.c"
 20208 ;; Parameters:    Size  Location     Type
 20209 ;;  event           2   13[COMRAM] enum E6400
 20210 ;;  pdata           2   15[COMRAM] PTR void 
 20211 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 20212 ;;  size            2   17[COMRAM] unsigned int 
 20213 ;; Auto vars:     Size  Location     Type
 20214 ;;		None
 20215 ;; Return value:  Size  Location     Type
 20216 ;;                  1    wreg      unsigned char 
 20217 ;; Registers used:
 20218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20219 ;; Tracked objects:
 20220 ;;		On entry : 0/0
 20221 ;;		On exit  : 0/0
 20222 ;;		Unchanged: 0/0
 20223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20224 ;;      Params:         6       0       0       0       0       0       0       0       0
 20225 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20226 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20227 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20228 ;;Total ram usage:        8 bytes
 20229 ;; Hardware stack levels used:    1
 20230 ;; Hardware stack levels required when called:    4
 20231 ;; This function calls:
 20232 ;;		_USBCheckCDCRequest
 20233 ;;		_USBapp_CdcEmulatorInitialize
 20234 ;; This function is called by:
 20235 ;;		_USBDeviceTasks
 20236 ;;		_USBStdSetCfgHandler
 20237 ;;		_USBSuspend
 20238 ;;		_USBWakeFromSuspend
 20239 ;;		_USBCtrlTrfSetupHandler
 20240 ;;		_USBCheckStdRequest
 20241 ;;		_USBStdFeatureReqHandler
 20242 ;; This function uses a non-reentrant model
 20243 ;;
 20244                           
 20245                           	psect	text99
 20246  0041F8                     __ptext99:
 20247                           	opt stack 0
 20248  0041F8                     _USER_USB_CALLBACK_EVENT_HANDLER:
 20249                           	opt stack 14
 20250                           
 20251                           ;USBapp.c: 307: break;
 20252                           
 20253                           ;USBapp.c: 306: USBCheckCDCRequest();
 20254                           
 20255                           ;USBapp.c: 298: break;
 20256                           
 20257                           ;USBapp.c: 297: USBapp_CdcEmulatorInitialize();
 20258                           
 20259                           ;USBapp.c: 273: switch( (int) event )
 20260                           
 20261                           ;incstack = 0
 20262  0041F8  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 20263  0041FC  C03C  F042         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 20264                           
 20265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 20266                           ; Switch size 1, requested type "speed"
 20267                           ; Number of cases is 2, Range of values is 0 to 127
 20268                           ; switch strategies available:
 20269                           ; Name         Instructions Cycles
 20270                           ; simple_byte            7     4 (average)
 20271                           ;	Chosen strategy is simple_byte
 20272  004200  5042               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 20273  004202  E004               	bz	i2l11517
 20274  004204  0A7F               	xorlw	127	; case 127
 20275  004206  A4D8               	btfss	status,2,c
 20276  004208  0012               	return	
 20277  00420A  D019               	goto	i2l11519
 20278  00420C                     i2l11517:
 20279                           
 20280                           ; Switch size 1, requested type "speed"
 20281                           ; Number of cases is 8, Range of values is 1 to 117
 20282                           ; switch strategies available:
 20283                           ; Name         Instructions Cycles
 20284                           ; simple_byte           25    13 (average)
 20285                           ;	Chosen strategy is simple_byte
 20286  00420C  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 20287  00420E  0A01               	xorlw	1	; case 1
 20288  004210  E102 EF4B  F020    	bz	_USBapp_CdcEmulatorInitialize
 20289  004216  0A03               	xorlw	3	; case 2
 20290  004218  B4D8               	btfsc	status,2,c
 20291  00421A  0012               	return	
 20292  00421C  0A01               	xorlw	1	; case 3
 20293  00421E  E102 EF59  F025    	bz	_USBCheckCDCRequest
 20294  004224  0A06               	xorlw	6	; case 5
 20295  004226  B4D8               	btfsc	status,2,c
 20296  004228  0012               	return	
 20297  00422A  0A77               	xorlw	119	; case 114
 20298  00422C  B4D8               	btfsc	status,2,c
 20299  00422E  0012               	return	
 20300  004230  0A01               	xorlw	1	; case 115
 20301  004232  B4D8               	btfsc	status,2,c
 20302  004234  0012               	return	
 20303  004236  0A07               	xorlw	7	; case 116
 20304  004238  A4D8               	btfss	status,2,c
 20305  00423A  0A01               	xorlw	1	; case 117
 20306  00423C  0012               	return	
 20307  00423E                     i2l11519:
 20308                           
 20309                           ; Switch size 1, requested type "speed"
 20310                           ; Number of cases is 1, Range of values is 255 to 255
 20311                           ; switch strategies available:
 20312                           ; Name         Instructions Cycles
 20313                           ; simple_byte            4     3 (average)
 20314                           ;	Chosen strategy is simple_byte
 20315  00423E  1C41               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 20316  004240  0012               	return	
 20317  004242                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 20318                           	opt stack 0
 20319                           pclatu	equ	0xFFB
 20320                           pclath	equ	0xFFA
 20321                           tblptru	equ	0xFF8
 20322                           tblptrh	equ	0xFF7
 20323                           tblptrl	equ	0xFF6
 20324                           tablat	equ	0xFF5
 20325                           prodh	equ	0xFF4
 20326                           prodl	equ	0xFF3
 20327                           intcon	equ	0xFF2
 20328                           postinc0	equ	0xFEE
 20329                           wreg	equ	0xFE8
 20330                           indf1	equ	0xFE7
 20331                           fsr1h	equ	0xFE2
 20332                           fsr1l	equ	0xFE1
 20333                           indf2	equ	0xFDF
 20334                           postinc2	equ	0xFDE
 20335                           postdec2	equ	0xFDD
 20336                           plusw2	equ	0xFDB
 20337                           fsr2h	equ	0xFDA
 20338                           fsr2l	equ	0xFD9
 20339                           status	equ	0xFD8
 20340                           
 20341 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 20342 ;; Defined at:
 20343 ;;		line 107 in file "../Includes/Board/USBapp.c"
 20344 ;; Parameters:    Size  Location     Type
 20345 ;;		None
 20346 ;; Auto vars:     Size  Location     Type
 20347 ;;  i               1   12[COMRAM] unsigned char 
 20348 ;; Return value:  Size  Location     Type
 20349 ;;                  1    wreg      void 
 20350 ;; Registers used:
 20351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20352 ;; Tracked objects:
 20353 ;;		On entry : 0/0
 20354 ;;		On exit  : 0/0
 20355 ;;		Unchanged: 0/0
 20356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20357 ;;      Params:         0       0       0       0       0       0       0       0       0
 20358 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20359 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20360 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20361 ;;Total ram usage:        1 bytes
 20362 ;; Hardware stack levels used:    1
 20363 ;; Hardware stack levels required when called:    3
 20364 ;; This function calls:
 20365 ;;		_CDCInitEP
 20366 ;;		i2_EUSART_Initialize
 20367 ;; This function is called by:
 20368 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20369 ;; This function uses a non-reentrant model
 20370 ;;
 20371                           
 20372                           	psect	text100
 20373  004096                     __ptext100:
 20374                           	opt stack 0
 20375  004096                     _USBapp_CdcEmulatorInitialize:
 20376                           	opt stack 14
 20377                           
 20378                           ;USBapp.c: 110: CDCInitEP();
 20379                           
 20380                           ;incstack = 0
 20381  004096  EC0B  F022         	call	_CDCInitEP	;wreg free
 20382                           
 20383                           ; BSR set to: 1
 20384                           ;USBapp.c: 111: line_coding.bCharFormat = 0;
 20385  00409A  6BF8               	clrf	(_line_coding+4)& (0+255),b
 20386                           
 20387                           ; BSR set to: 1
 20388                           ;USBapp.c: 112: line_coding.bDataBits = 8;
 20389  00409C  0E08               	movlw	8
 20390  00409E  6FFA               	movwf	(_line_coding+6)& (0+255),b
 20391                           
 20392                           ; BSR set to: 1
 20393                           ;USBapp.c: 113: line_coding.bParityType = 0;
 20394  0040A0  6BF9               	clrf	(_line_coding+5)& (0+255),b
 20395                           
 20396                           ; BSR set to: 1
 20397                           ;USBapp.c: 114: line_coding.dwDTERate = 19200;
 20398  0040A2  6BF4               	clrf	_line_coding& (0+255),b
 20399  0040A4  0E4B               	movlw	75
 20400  0040A6  6FF5               	movwf	(_line_coding+1)& (0+255),b
 20401  0040A8  6BF6               	clrf	(_line_coding+2)& (0+255),b
 20402  0040AA  6BF7               	clrf	(_line_coding+3)& (0+255),b
 20403                           
 20404                           ; BSR set to: 1
 20405                           ;USBapp.c: 115: EUSART_Initialize();
 20406  0040AC  EC83  F01F         	call	i2_EUSART_Initialize	;wreg free
 20407                           
 20408                           ; BSR set to: 1
 20409                           ;USBapp.c: 117: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 20410  0040B0  6A3A               	clrf	USBapp_CdcEmulatorInitialize@i,c
 20411  0040B2                     i2l6051:
 20412                           
 20413                           ;USBapp.c: 118: {
 20414                           ;USBapp.c: 119: USB_Buffer[i] = 0;
 20415  0040B2  0E56               	movlw	low _USB_Buffer
 20416  0040B4  243A               	addwf	USBapp_CdcEmulatorInitialize@i,w,c
 20417  0040B6  6ED9               	movwf	fsr2l,c
 20418  0040B8  6ADA               	clrf	fsr2h,c
 20419  0040BA  0E01               	movlw	high _USB_Buffer
 20420  0040BC  22DA               	addwfc	fsr2h,f,c
 20421  0040BE  6ADF               	clrf	indf2,c
 20422  0040C0  2A3A               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 20423  0040C2  0E3F               	movlw	63
 20424  0040C4  643A               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 20425  0040C6  D7F5               	goto	i2l6051
 20426                           
 20427                           ;USBapp.c: 120: }
 20428                           ;USBapp.c: 121: NextUSBOut = 0;
 20429  0040C8  6A1A               	clrf	_NextUSBOut,c
 20430                           
 20431                           ;USBapp.c: 122: LastRS232Out = 0;
 20432  0040CA  6A19               	clrf	_LastRS232Out,c
 20433  0040CC  0012               	return		;funcret
 20434  0040CE                     __end_of_USBapp_CdcEmulatorInitialize:
 20435                           	opt stack 0
 20436                           pclatu	equ	0xFFB
 20437                           pclath	equ	0xFFA
 20438                           tblptru	equ	0xFF8
 20439                           tblptrh	equ	0xFF7
 20440                           tblptrl	equ	0xFF6
 20441                           tablat	equ	0xFF5
 20442                           prodh	equ	0xFF4
 20443                           prodl	equ	0xFF3
 20444                           intcon	equ	0xFF2
 20445                           postinc0	equ	0xFEE
 20446                           wreg	equ	0xFE8
 20447                           indf1	equ	0xFE7
 20448                           fsr1h	equ	0xFE2
 20449                           fsr1l	equ	0xFE1
 20450                           indf2	equ	0xFDF
 20451                           postinc2	equ	0xFDE
 20452                           postdec2	equ	0xFDD
 20453                           plusw2	equ	0xFDB
 20454                           fsr2h	equ	0xFDA
 20455                           fsr2l	equ	0xFD9
 20456                           status	equ	0xFD8
 20457                           
 20458 ;; *************** function _CDCInitEP *****************
 20459 ;; Defined at:
 20460 ;;		line 296 in file "../Includes/Usb/framework/usb_device_cdc.c"
 20461 ;; Parameters:    Size  Location     Type
 20462 ;;		None
 20463 ;; Auto vars:     Size  Location     Type
 20464 ;;		None
 20465 ;; Return value:  Size  Location     Type
 20466 ;;                  1    wreg      void 
 20467 ;; Registers used:
 20468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20469 ;; Tracked objects:
 20470 ;;		On entry : 0/0
 20471 ;;		On exit  : F/1
 20472 ;;		Unchanged: 0/0
 20473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20474 ;;      Params:         0       0       0       0       0       0       0       0       0
 20475 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20476 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20477 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20478 ;;Total ram usage:        0 bytes
 20479 ;; Hardware stack levels used:    1
 20480 ;; Hardware stack levels required when called:    2
 20481 ;; This function calls:
 20482 ;;		_USBEnableEndpoint
 20483 ;;		i2_USBTransferOnePacket
 20484 ;; This function is called by:
 20485 ;;		_USBapp_CdcEmulatorInitialize
 20486 ;; This function uses a non-reentrant model
 20487 ;;
 20488                           
 20489                           	psect	text101
 20490  004416                     __ptext101:
 20491                           	opt stack 0
 20492  004416                     _CDCInitEP:
 20493                           	opt stack 14
 20494                           
 20495                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 20496                           
 20497                           ;incstack = 0
 20498  004416  0101               	movlb	1	; () banked
 20499  004418  6BF4               	clrf	_line_coding& (0+255),b
 20500  00441A  0E4B               	movlw	75
 20501  00441C  6FF5               	movwf	(_line_coding+1)& (0+255),b
 20502  00441E  6BF6               	clrf	(_line_coding+2)& (0+255),b
 20503  004420  6BF7               	clrf	(_line_coding+3)& (0+255),b
 20504                           
 20505                           ; BSR set to: 1
 20506                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 20507  004422  6BF8               	clrf	(_line_coding+4)& (0+255),b
 20508                           
 20509                           ; BSR set to: 1
 20510                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 20511  004424  6BF9               	clrf	(_line_coding+5)& (0+255),b
 20512                           
 20513                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 20514  004426  0E08               	movlw	8
 20515  004428  6FFA               	movwf	(_line_coding+6)& (0+255),b
 20516                           
 20517                           ; BSR set to: 1
 20518                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 20519  00442A  0100               	movlb	0	; () banked
 20520  00442C  6BF6               	clrf	_cdc_rx_len& (0+255),b
 20521                           
 20522                           ; BSR set to: 0
 20523                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 20524  00442E  0E1A               	movlw	26
 20525  004430  6E36               	movwf	USBEnableEndpoint@options,c
 20526  004432  0E01               	movlw	1
 20527  004434  EC15  F020         	call	_USBEnableEndpoint
 20528                           
 20529                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 20530  004438  0E1E               	movlw	30
 20531  00443A  6E36               	movwf	USBEnableEndpoint@options,c
 20532  00443C  0E02               	movlw	2
 20533  00443E  EC15  F020         	call	_USBEnableEndpoint
 20534                           
 20535                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 20536  004442  0E00               	movlw	0
 20537  004444  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 20538  004446  0E40               	movlw	64
 20539  004448  6E2F               	movwf	i2USBTransferOnePacket@data,c
 20540  00444A  0E05               	movlw	5
 20541  00444C  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 20542  00444E  0E40               	movlw	64
 20543  004450  6E31               	movwf	i2USBTransferOnePacket@len,c
 20544  004452  0E02               	movlw	2
 20545  004454  EC6E  F027         	call	i2_USBTransferOnePacket
 20546  004458  C02E  F133         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 20547  00445C  C02F  F134         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 20548                           
 20549                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 20550  004460  0101               	movlb	1	; () banked
 20551  004462  6B31               	clrf	_CDCDataInHandle& (0+255),b
 20552  004464  6B32               	clrf	(_CDCDataInHandle+1)& (0+255),b
 20553                           
 20554                           ; BSR set to: 1
 20555                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 20556  004466  6A1F               	clrf	_cdc_trf_state,c
 20557                           
 20558                           ; BSR set to: 1
 20559  004468  0012               	return		;funcret
 20560  00446A                     __end_of_CDCInitEP:
 20561                           	opt stack 0
 20562                           pclatu	equ	0xFFB
 20563                           pclath	equ	0xFFA
 20564                           tblptru	equ	0xFF8
 20565                           tblptrh	equ	0xFF7
 20566                           tblptrl	equ	0xFF6
 20567                           tablat	equ	0xFF5
 20568                           prodh	equ	0xFF4
 20569                           prodl	equ	0xFF3
 20570                           intcon	equ	0xFF2
 20571                           postinc0	equ	0xFEE
 20572                           wreg	equ	0xFE8
 20573                           indf1	equ	0xFE7
 20574                           fsr1h	equ	0xFE2
 20575                           fsr1l	equ	0xFE1
 20576                           indf2	equ	0xFDF
 20577                           postinc2	equ	0xFDE
 20578                           postdec2	equ	0xFDD
 20579                           plusw2	equ	0xFDB
 20580                           fsr2h	equ	0xFDA
 20581                           fsr2l	equ	0xFD9
 20582                           status	equ	0xFD8
 20583                           
 20584 ;; *************** function i2_USBTransferOnePacket *****************
 20585 ;; Defined at:
 20586 ;;		line 757 in file "../Includes/Usb/framework/usb_device.c"
 20587 ;; Parameters:    Size  Location     Type
 20588 ;;  ep              1    wreg     unsigned char 
 20589 ;;  dir             1    0[COMRAM] unsigned char 
 20590 ;;  data            2    1[COMRAM] PTR unsigned char 
 20591 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 20592 ;;  len             1    3[COMRAM] unsigned char 
 20593 ;; Auto vars:     Size  Location     Type
 20594 ;;  ep              1    4[COMRAM] unsigned char 
 20595 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 20596 ;;		 -> BDT(48), NULL(0), 
 20597 ;; Return value:  Size  Location     Type
 20598 ;;                  2    0[COMRAM] PTR void 
 20599 ;; Registers used:
 20600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20601 ;; Tracked objects:
 20602 ;;		On entry : 0/0
 20603 ;;		On exit  : 0/0
 20604 ;;		Unchanged: 0/0
 20605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20606 ;;      Params:         4       0       0       0       0       0       0       0       0
 20607 ;;      Locals:         3       0       0       0       0       0       0       0       0
 20608 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20609 ;;      Totals:         7       0       0       0       0       0       0       0       0
 20610 ;;Total ram usage:        7 bytes
 20611 ;; Hardware stack levels used:    1
 20612 ;; This function calls:
 20613 ;;		Nothing
 20614 ;; This function is called by:
 20615 ;;		_CDCInitEP
 20616 ;; This function uses a non-reentrant model
 20617 ;;
 20618                           
 20619                           	psect	text102
 20620  004EDC                     __ptext102:
 20621                           	opt stack 0
 20622  004EDC                     i2_USBTransferOnePacket:
 20623                           	opt stack 15
 20624                           
 20625                           ; BSR set to: 1
 20626                           ;incstack = 0
 20627                           ;i2USBTransferOnePacket@ep stored from wreg
 20628  004EDC  6E32               	movwf	i2USBTransferOnePacket@ep,c
 20629                           
 20630                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 20631                           ;usb_device.c: 762: if(dir != 0)
 20632  004EDE  502E               	movf	i2USBTransferOnePacket@dir,w,c
 20633  004EE0  E007               	bz	i2l5919
 20634                           
 20635                           ;usb_device.c: 763: {
 20636                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 20637  004EE2  5032               	movf	i2USBTransferOnePacket@ep,w,c
 20638  004EE4  0D02               	mullw	2
 20639  004EE6  50F3               	movf	prodl,w,c
 20640  004EE8  0F0F               	addlw	low _pBDTEntryIn
 20641  004EEA  6ED9               	movwf	fsr2l,c
 20642  004EEC  6ADA               	clrf	fsr2h,c
 20643  004EEE  D008               	goto	L33
 20644  004EF0                     i2l5919:
 20645                           
 20646                           ;usb_device.c: 767: else
 20647                           ;usb_device.c: 768: {
 20648                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 20649  004EF0  5032               	movf	i2USBTransferOnePacket@ep,w,c
 20650  004EF2  0D02               	mullw	2
 20651  004EF4  0E18               	movlw	low _pBDTEntryOut
 20652  004EF6  24F3               	addwf	prodl,w,c
 20653  004EF8  6ED9               	movwf	fsr2l,c
 20654  004EFA  0E01               	movlw	high _pBDTEntryOut
 20655  004EFC  20F4               	addwfc	prodh,w,c
 20656  004EFE  6EDA               	movwf	fsr2h,c
 20657  004F00                     L33:
 20658  004F00  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 20659  004F04  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 20660                           
 20661                           ;usb_device.c: 771: }
 20662                           ;usb_device.c: 775: if(handle == 0)
 20663  004F08  5033               	movf	i2USBTransferOnePacket@handle,w,c
 20664  004F0A  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 20665  004F0C  E103               	bnz	i2l5925
 20666                           
 20667                           ;usb_device.c: 776: {
 20668                           ;usb_device.c: 777: return 0;
 20669  004F0E  6A2E               	clrf	?i2_USBTransferOnePacket,c
 20670  004F10  6A2F               	clrf	?i2_USBTransferOnePacket+1,c
 20671  004F12  0012               	return	
 20672  004F14                     i2l5925:
 20673                           
 20674                           ;usb_device.c: 778: }
 20675                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 20676  004F14  EE20 F002          	lfsr	2,2
 20677  004F18  5033               	movf	i2USBTransferOnePacket@handle,w,c
 20678  004F1A  26D9               	addwf	fsr2l,f,c
 20679  004F1C  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 20680  004F1E  22DA               	addwfc	fsr2h,f,c
 20681  004F20  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 20682  004F24  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 20683                           
 20684                           ;usb_device.c: 781: handle->CNT = len;
 20685  004F28  EE20 F001          	lfsr	2,1
 20686  004F2C  5033               	movf	i2USBTransferOnePacket@handle,w,c
 20687  004F2E  26D9               	addwf	fsr2l,f,c
 20688  004F30  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 20689  004F32  22DA               	addwfc	fsr2h,f,c
 20690  004F34  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 20691                           
 20692                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 20693  004F38  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 20694  004F3C  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 20695  004F40  0E40               	movlw	64
 20696  004F42  16DF               	andwf	indf2,f,c
 20697                           
 20698                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 20699  004F44  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 20700  004F48  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 20701  004F4C  0E00               	movlw	0
 20702  004F4E  86DB               	bsf	plusw2,3,c
 20703                           
 20704                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 20705  004F50  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 20706  004F54  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 20707  004F58  8EDB               	bsf	plusw2,7,c
 20708                           
 20709                           ;usb_device.c: 787: if(dir != 0)
 20710  004F5A  502E               	movf	i2USBTransferOnePacket@dir,w,c
 20711  004F5C  E007               	bz	i2l5937
 20712                           
 20713                           ;usb_device.c: 788: {
 20714                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 20715  004F5E  5032               	movf	i2USBTransferOnePacket@ep,w,c
 20716  004F60  0D02               	mullw	2
 20717  004F62  50F3               	movf	prodl,w,c
 20718  004F64  0F0F               	addlw	low _pBDTEntryIn
 20719  004F66  6ED9               	movwf	fsr2l,c
 20720  004F68  6ADA               	clrf	fsr2h,c
 20721  004F6A  D008               	goto	L34
 20722  004F6C                     i2l5937:
 20723                           
 20724                           ;usb_device.c: 792: else
 20725                           ;usb_device.c: 793: {
 20726                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 20727  004F6C  5032               	movf	i2USBTransferOnePacket@ep,w,c
 20728  004F6E  0D02               	mullw	2
 20729  004F70  0E18               	movlw	low _pBDTEntryOut
 20730  004F72  24F3               	addwf	prodl,w,c
 20731  004F74  6ED9               	movwf	fsr2l,c
 20732  004F76  0E01               	movlw	high _pBDTEntryOut
 20733  004F78  20F4               	addwfc	prodh,w,c
 20734  004F7A  6EDA               	movwf	fsr2h,c
 20735  004F7C                     L34:
 20736  004F7C  0E04               	movlw	4
 20737  004F7E  1ADF               	xorwf	indf2,f,c
 20738                           
 20739                           ;usb_device.c: 796: }
 20740                           ;usb_device.c: 797: return (void*)handle;
 20741  004F80  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 20742  004F84  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 20743  004F88  0C04               	retlw	4	;funcret
 20744  004F8A                     __end_ofi2_USBTransferOnePacket:
 20745                           	opt stack 0
 20746                           pclatu	equ	0xFFB
 20747                           pclath	equ	0xFFA
 20748                           tblptru	equ	0xFF8
 20749                           tblptrh	equ	0xFF7
 20750                           tblptrl	equ	0xFF6
 20751                           tablat	equ	0xFF5
 20752                           prodh	equ	0xFF4
 20753                           prodl	equ	0xFF3
 20754                           intcon	equ	0xFF2
 20755                           postinc0	equ	0xFEE
 20756                           wreg	equ	0xFE8
 20757                           indf1	equ	0xFE7
 20758                           fsr1h	equ	0xFE2
 20759                           fsr1l	equ	0xFE1
 20760                           indf2	equ	0xFDF
 20761                           postinc2	equ	0xFDE
 20762                           postdec2	equ	0xFDD
 20763                           plusw2	equ	0xFDB
 20764                           fsr2h	equ	0xFDA
 20765                           fsr2l	equ	0xFD9
 20766                           status	equ	0xFD8
 20767                           
 20768 ;; *************** function _USBEnableEndpoint *****************
 20769 ;; Defined at:
 20770 ;;		line 645 in file "../Includes/Usb/framework/usb_device.c"
 20771 ;; Parameters:    Size  Location     Type
 20772 ;;  ep              1    wreg     unsigned char 
 20773 ;;  options         1    8[COMRAM] unsigned char 
 20774 ;; Auto vars:     Size  Location     Type
 20775 ;;  ep              1   11[COMRAM] unsigned char 
 20776 ;;  p               2    9[COMRAM] PTR unsigned char 
 20777 ;;		 -> UEP0(1), 
 20778 ;; Return value:  Size  Location     Type
 20779 ;;                  1    wreg      void 
 20780 ;; Registers used:
 20781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20782 ;; Tracked objects:
 20783 ;;		On entry : 0/0
 20784 ;;		On exit  : 0/0
 20785 ;;		Unchanged: 0/0
 20786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20787 ;;      Params:         1       0       0       0       0       0       0       0       0
 20788 ;;      Locals:         3       0       0       0       0       0       0       0       0
 20789 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20790 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20791 ;;Total ram usage:        4 bytes
 20792 ;; Hardware stack levels used:    1
 20793 ;; Hardware stack levels required when called:    1
 20794 ;; This function calls:
 20795 ;;		_USBConfigureEndpoint
 20796 ;; This function is called by:
 20797 ;;		_CDCInitEP
 20798 ;; This function uses a non-reentrant model
 20799 ;;
 20800                           
 20801                           	psect	text103
 20802  00402A                     __ptext103:
 20803                           	opt stack 0
 20804  00402A                     _USBEnableEndpoint:
 20805                           	opt stack 14
 20806                           
 20807                           ;incstack = 0
 20808                           ;USBEnableEndpoint@ep stored from wreg
 20809  00402A  6E39               	movwf	USBEnableEndpoint@ep,c
 20810                           
 20811                           ;usb_device.c: 647: unsigned char* p;
 20812                           ;usb_device.c: 651: if(options & 0x04)
 20813  00402C  A436               	btfss	USBEnableEndpoint@options,2,c
 20814  00402E  D004               	goto	i2l5907
 20815                           
 20816                           ;usb_device.c: 652: {
 20817                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 20818  004030  6A2E               	clrf	USBConfigureEndpoint@direction,c
 20819  004032  5039               	movf	USBEnableEndpoint@ep,w,c
 20820  004034  ECE7  F025         	call	_USBConfigureEndpoint
 20821  004038                     i2l5907:
 20822                           
 20823                           ;usb_device.c: 654: }
 20824                           ;usb_device.c: 655: if(options & 0x02)
 20825  004038  A236               	btfss	USBEnableEndpoint@options,1,c
 20826  00403A  D005               	goto	i2l5911
 20827                           
 20828                           ;usb_device.c: 656: {
 20829                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 20830  00403C  0E01               	movlw	1
 20831  00403E  6E2E               	movwf	USBConfigureEndpoint@direction,c
 20832  004040  5039               	movf	USBEnableEndpoint@ep,w,c
 20833  004042  ECE7  F025         	call	_USBConfigureEndpoint
 20834  004046                     i2l5911:
 20835                           
 20836                           ;usb_device.c: 658: }
 20837                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 20838  004046  0E6A               	movlw	106
 20839  004048  2439               	addwf	USBEnableEndpoint@ep,w,c
 20840  00404A  6E37               	movwf	USBEnableEndpoint@p,c
 20841  00404C  6A38               	clrf	USBEnableEndpoint@p+1,c
 20842  00404E  0E0F               	movlw	15
 20843  004050  2238               	addwfc	USBEnableEndpoint@p+1,f,c
 20844                           
 20845                           ;usb_device.c: 664: *p = options;
 20846  004052  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 20847  004056  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 20848  00405A  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 20849  00405E  0C0F               	retlw	15	;funcret
 20850  004060                     __end_of_USBEnableEndpoint:
 20851                           	opt stack 0
 20852                           pclatu	equ	0xFFB
 20853                           pclath	equ	0xFFA
 20854                           tblptru	equ	0xFF8
 20855                           tblptrh	equ	0xFF7
 20856                           tblptrl	equ	0xFF6
 20857                           tablat	equ	0xFF5
 20858                           prodh	equ	0xFF4
 20859                           prodl	equ	0xFF3
 20860                           intcon	equ	0xFF2
 20861                           postinc0	equ	0xFEE
 20862                           wreg	equ	0xFE8
 20863                           indf1	equ	0xFE7
 20864                           fsr1h	equ	0xFE2
 20865                           fsr1l	equ	0xFE1
 20866                           indf2	equ	0xFDF
 20867                           postinc2	equ	0xFDE
 20868                           postdec2	equ	0xFDD
 20869                           plusw2	equ	0xFDB
 20870                           fsr2h	equ	0xFDA
 20871                           fsr2l	equ	0xFD9
 20872                           status	equ	0xFD8
 20873                           
 20874 ;; *************** function _USBConfigureEndpoint *****************
 20875 ;; Defined at:
 20876 ;;		line 1228 in file "../Includes/Usb/framework/usb_device.c"
 20877 ;; Parameters:    Size  Location     Type
 20878 ;;  EPNum           1    wreg     unsigned char 
 20879 ;;  direction       1    0[COMRAM] unsigned char 
 20880 ;; Auto vars:     Size  Location     Type
 20881 ;;  EPNum           1    5[COMRAM] unsigned char 
 20882 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 20883 ;;		 -> BDT(48), 
 20884 ;; Return value:  Size  Location     Type
 20885 ;;                  1    wreg      void 
 20886 ;; Registers used:
 20887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20888 ;; Tracked objects:
 20889 ;;		On entry : 0/0
 20890 ;;		On exit  : 0/0
 20891 ;;		Unchanged: 0/0
 20892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20893 ;;      Params:         1       0       0       0       0       0       0       0       0
 20894 ;;      Locals:         3       0       0       0       0       0       0       0       0
 20895 ;;      Temps:          4       0       0       0       0       0       0       0       0
 20896 ;;      Totals:         8       0       0       0       0       0       0       0       0
 20897 ;;Total ram usage:        8 bytes
 20898 ;; Hardware stack levels used:    1
 20899 ;; This function calls:
 20900 ;;		Nothing
 20901 ;; This function is called by:
 20902 ;;		_USBEnableEndpoint
 20903 ;; This function uses a non-reentrant model
 20904 ;;
 20905                           
 20906                           	psect	text104
 20907  004BCE                     __ptext104:
 20908                           	opt stack 0
 20909  004BCE                     _USBConfigureEndpoint:
 20910                           	opt stack 14
 20911                           
 20912                           ;incstack = 0
 20913                           ;USBConfigureEndpoint@EPNum stored from wreg
 20914  004BCE  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 20915                           
 20916                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 20917                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 20918  004BD0  6A34               	clrf	USBConfigureEndpoint@handle,c
 20919  004BD2  0E04               	movlw	4
 20920  004BD4  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 20921                           
 20922                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 20923  004BD6  502E               	movf	USBConfigureEndpoint@direction,w,c
 20924  004BD8  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 20925  004BDA  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 20926  004BDC  90D8               	bcf	status,0,c
 20927  004BDE  362F               	rlcf	??_USBConfigureEndpoint,f,c
 20928  004BE0  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 20929  004BE2  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 20930  004BE4  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 20931  004BE6  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 20932  004BE8  90D8               	bcf	status,0,c
 20933  004BEA  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 20934  004BEC  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 20935  004BEE  90D8               	bcf	status,0,c
 20936  004BF0  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 20937  004BF2  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 20938  004BF4  502F               	movf	??_USBConfigureEndpoint,w,c
 20939  004BF6  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 20940  004BF8  5030               	movf	??_USBConfigureEndpoint+1,w,c
 20941  004BFA  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 20942  004BFC  90D8               	bcf	status,0,c
 20943  004BFE  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 20944  004C00  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 20945  004C02  90D8               	bcf	status,0,c
 20946  004C04  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 20947  004C06  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 20948  004C08  5031               	movf	??_USBConfigureEndpoint+2,w,c
 20949  004C0A  2634               	addwf	USBConfigureEndpoint@handle,f,c
 20950  004C0C  5032               	movf	??_USBConfigureEndpoint+3,w,c
 20951  004C0E  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 20952                           
 20953                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 20954  004C10  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 20955  004C14  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 20956  004C18  9EDF               	bcf	indf2,7,c
 20957                           
 20958                           ;usb_device.c: 1242: if(direction == 0)
 20959  004C1A  502E               	movf	USBConfigureEndpoint@direction,w,c
 20960  004C1C  E109               	bnz	i2l5893
 20961                           
 20962                           ;usb_device.c: 1243: {
 20963                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 20964  004C1E  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 20965  004C20  0D02               	mullw	2
 20966  004C22  0E18               	movlw	low _pBDTEntryOut
 20967  004C24  24F3               	addwf	prodl,w,c
 20968  004C26  6ED9               	movwf	fsr2l,c
 20969  004C28  0E01               	movlw	high _pBDTEntryOut
 20970  004C2A  20F4               	addwfc	prodh,w,c
 20971  004C2C  6EDA               	movwf	fsr2h,c
 20972  004C2E  D006               	goto	L35
 20973  004C30                     i2l5893:
 20974                           
 20975                           ;usb_device.c: 1246: else
 20976                           ;usb_device.c: 1247: {
 20977                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 20978  004C30  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 20979  004C32  0D02               	mullw	2
 20980  004C34  50F3               	movf	prodl,w,c
 20981  004C36  0F0F               	addlw	low _pBDTEntryIn
 20982  004C38  6ED9               	movwf	fsr2l,c
 20983  004C3A  6ADA               	clrf	fsr2h,c
 20984  004C3C                     L35:
 20985  004C3C  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 20986  004C40  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 20987                           
 20988                           ;usb_device.c: 1249: }
 20989                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 20990  004C44  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 20991  004C48  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 20992  004C4C  9CDF               	bcf	indf2,6,c
 20993                           
 20994                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 20995  004C4E  EE20 F004          	lfsr	2,4
 20996  004C52  5034               	movf	USBConfigureEndpoint@handle,w,c
 20997  004C54  26D9               	addwf	fsr2l,f,c
 20998  004C56  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 20999  004C58  22DA               	addwfc	fsr2h,f,c
 21000  004C5A  8CDF               	bsf	indf2,6,c
 21001  004C5C  0012               	return		;funcret
 21002  004C5E                     __end_of_USBConfigureEndpoint:
 21003                           	opt stack 0
 21004                           pclatu	equ	0xFFB
 21005                           pclath	equ	0xFFA
 21006                           tblptru	equ	0xFF8
 21007                           tblptrh	equ	0xFF7
 21008                           tblptrl	equ	0xFF6
 21009                           tablat	equ	0xFF5
 21010                           prodh	equ	0xFF4
 21011                           prodl	equ	0xFF3
 21012                           intcon	equ	0xFF2
 21013                           postinc0	equ	0xFEE
 21014                           wreg	equ	0xFE8
 21015                           indf1	equ	0xFE7
 21016                           fsr1h	equ	0xFE2
 21017                           fsr1l	equ	0xFE1
 21018                           indf2	equ	0xFDF
 21019                           postinc2	equ	0xFDE
 21020                           postdec2	equ	0xFDD
 21021                           plusw2	equ	0xFDB
 21022                           fsr2h	equ	0xFDA
 21023                           fsr2l	equ	0xFD9
 21024                           status	equ	0xFD8
 21025                           
 21026 ;; *************** function _USBCheckCDCRequest *****************
 21027 ;; Defined at:
 21028 ;;		line 184 in file "../Includes/Usb/framework/usb_device_cdc.c"
 21029 ;; Parameters:    Size  Location     Type
 21030 ;;		None
 21031 ;; Auto vars:     Size  Location     Type
 21032 ;;		None
 21033 ;; Return value:  Size  Location     Type
 21034 ;;                  1    wreg      void 
 21035 ;; Registers used:
 21036 ;;		wreg, status,2, status,0
 21037 ;; Tracked objects:
 21038 ;;		On entry : 0/0
 21039 ;;		On exit  : F/4
 21040 ;;		Unchanged: 0/0
 21041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21042 ;;      Params:         0       0       0       0       0       0       0       0       0
 21043 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21044 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21045 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21046 ;;Total ram usage:        0 bytes
 21047 ;; Hardware stack levels used:    1
 21048 ;; This function calls:
 21049 ;;		Nothing
 21050 ;; This function is called by:
 21051 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21052 ;; This function uses a non-reentrant model
 21053 ;;
 21054                           
 21055                           	psect	text105
 21056  004AB2                     __ptext105:
 21057                           	opt stack 0
 21058  004AB2                     _USBCheckCDCRequest:
 21059                           	opt stack 17
 21060                           
 21061                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 21062                           
 21063                           ;incstack = 0
 21064  004AB2  0104               	movlb	4	; () banked
 21065  004AB4  5130               	movf	48,w,b	;volatile
 21066  004AB6  0B1F               	andlw	31
 21067  004AB8  06E8               	decf	wreg,f,c
 21068  004ABA  E001               	bz	i2l6061
 21069  004ABC  0012               	return	
 21070  004ABE                     i2l6061:
 21071                           
 21072                           ; BSR set to: 4
 21073                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 21074  004ABE  3930               	swapf	48,w,b	;volatile
 21075  004AC0  32E8               	rrcf	wreg,f,c
 21076  004AC2  0B03               	andlw	3
 21077  004AC4  06E8               	decf	wreg,f,c
 21078  004AC6  E001               	bz	i2l6065
 21079  004AC8  0012               	return	
 21080  004ACA                     i2l6065:
 21081                           
 21082                           ; BSR set to: 4
 21083                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 21084                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 21085  004ACA  5134               	movf	52,w,b	;volatile
 21086  004ACC  E02E               	bz	i2l6099
 21087                           
 21088                           ; BSR set to: 4
 21089  004ACE  0534               	decf	52,w,b	;volatile
 21090  004AD0  E02C               	bz	i2l6099
 21091  004AD2  0012               	return	
 21092  004AD4                     i2l6071:
 21093                           
 21094                           ; BSR set to: 4
 21095                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 21096  004AD4  0EEC               	movlw	low _dummy_encapsulated_cmd_response
 21097  004AD6  6E09               	movwf	_inPipes,c	;volatile
 21098  004AD8  0E01               	movlw	high _dummy_encapsulated_cmd_response
 21099  004ADA  6E0A               	movwf	_inPipes+1,c	;volatile
 21100                           
 21101                           ; BSR set to: 4
 21102                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 21103  004ADC  6A0E               	clrf	_inPipes+5,c	;volatile
 21104  004ADE  0E08               	movlw	8
 21105  004AE0  6E0D               	movwf	_inPipes+4,c	;volatile
 21106                           
 21107                           ; BSR set to: 4
 21108                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21109  004AE2  800C               	bsf	_inPipes+3,0,c	;volatile
 21110                           
 21111                           ; BSR set to: 4
 21112                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 21113  004AE4  8E0C               	bsf	_inPipes+3,7,c	;volatile
 21114                           
 21115                           ;usb_device_cdc.c: 212: break;
 21116  004AE6  0C08               	retlw	8
 21117  004AE8                     i2l6079:
 21118                           
 21119                           ; BSR set to: 4
 21120                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 21121  004AE8  0EEC               	movlw	low _dummy_encapsulated_cmd_response
 21122  004AEA  6E09               	movwf	_inPipes,c	;volatile
 21123  004AEC  0E01               	movlw	high _dummy_encapsulated_cmd_response
 21124  004AEE  6E0A               	movwf	_inPipes+1,c	;volatile
 21125                           
 21126                           ; BSR set to: 4
 21127                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 21128  004AF0  8E0C               	bsf	_inPipes+3,7,c	;volatile
 21129                           
 21130                           ;usb_device_cdc.c: 217: break;
 21131  004AF2  0012               	return	
 21132  004AF4                     i2l1748:
 21133                           
 21134                           ; BSR set to: 4
 21135                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 21136  004AF4  C436 F005          	movff	1078,_outPipes+4	;volatile
 21137  004AF8  C437 F006          	movff	1079,_outPipes+5	;volatile
 21138                           
 21139                           ; BSR set to: 4
 21140                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 21141  004AFC  0EE2               	movlw	low _cdc_notice
 21142  004AFE  6E01               	movwf	_outPipes,c	;volatile
 21143  004B00  0E01               	movlw	high _cdc_notice
 21144  004B02  6E02               	movwf	_outPipes+1,c	;volatile
 21145                           
 21146                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 21147  004B04  0EC2               	movlw	low _USART_mySetLineCodingHandler
 21148  004B06  6E07               	movwf	_outPipes+6,c	;volatile
 21149  004B08  0E43               	movlw	high _USART_mySetLineCodingHandler
 21150  004B0A  6E08               	movwf	_outPipes+7,c	;volatile
 21151                           
 21152                           ; BSR set to: 4
 21153                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 21154  004B0C  8E04               	bsf	_outPipes+3,7,c	;volatile
 21155                           
 21156                           ;usb_device_cdc.c: 224: break;
 21157  004B0E  0012               	return	
 21158  004B10                     i2l6087:
 21159                           
 21160                           ; BSR set to: 4
 21161                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 21162  004B10  0EF4               	movlw	low _line_coding
 21163  004B12  6E09               	movwf	_inPipes,c	;volatile
 21164  004B14  0E01               	movlw	high _line_coding
 21165  004B16  6E0A               	movwf	_inPipes+1,c	;volatile
 21166                           
 21167                           ; BSR set to: 4
 21168  004B18  6A0E               	clrf	_inPipes+5,c	;volatile
 21169  004B1A  0E07               	movlw	7
 21170  004B1C  6E0D               	movwf	_inPipes+4,c	;volatile
 21171                           
 21172                           ; BSR set to: 4
 21173  004B1E  0EC1               	movlw	193
 21174  004B20  6E0C               	movwf	_inPipes+3,c	;volatile
 21175                           
 21176                           ;usb_device_cdc.c: 231: break;
 21177  004B22  0CC1               	retlw	193
 21178  004B24                     i2l6093:
 21179                           
 21180                           ; BSR set to: 4
 21181                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 21182  004B24  5132               	movf	50,w,b	;volatile
 21183                           
 21184                           ; BSR set to: 4
 21185                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 21186  004B26  8E0C               	bsf	_inPipes+3,7,c	;volatile
 21187                           
 21188                           ;usb_device_cdc.c: 256: break;
 21189  004B28  0012               	return	
 21190  004B2A                     i2l6099:
 21191                           
 21192                           ; BSR set to: 4
 21193  004B2A  5131               	movf	49,w,b	;volatile
 21194                           
 21195                           ; Switch size 1, requested type "speed"
 21196                           ; Number of cases is 5, Range of values is 0 to 34
 21197                           ; switch strategies available:
 21198                           ; Name         Instructions Cycles
 21199                           ; simple_byte           16     9 (average)
 21200                           ;	Chosen strategy is simple_byte
 21201  004B2C  E0D3               	bz	i2l6071
 21202  004B2E  0A01               	xorlw	1	; case 1
 21203  004B30  E0DB               	bz	i2l6079
 21204  004B32  0A21               	xorlw	33	; case 32
 21205  004B34  E0DF               	bz	i2l1748
 21206  004B36  0A01               	xorlw	1	; case 33
 21207  004B38  E0EB               	bz	i2l6087
 21208  004B3A  0A03               	xorlw	3	; case 34
 21209  004B3C  E0F3               	bz	i2l6093
 21210                           
 21211                           ; BSR set to: 4
 21212  004B3E  0012               	return		;funcret
 21213  004B40                     __end_of_USBCheckCDCRequest:
 21214                           	opt stack 0
 21215                           pclatu	equ	0xFFB
 21216                           pclath	equ	0xFFA
 21217                           tblptru	equ	0xFF8
 21218                           tblptrh	equ	0xFF7
 21219                           tblptrl	equ	0xFF6
 21220                           tablat	equ	0xFF5
 21221                           prodh	equ	0xFF4
 21222                           prodl	equ	0xFF3
 21223                           intcon	equ	0xFF2
 21224                           postinc0	equ	0xFEE
 21225                           wreg	equ	0xFE8
 21226                           indf1	equ	0xFE7
 21227                           fsr1h	equ	0xFE2
 21228                           fsr1l	equ	0xFE1
 21229                           indf2	equ	0xFDF
 21230                           postinc2	equ	0xFDE
 21231                           postdec2	equ	0xFDD
 21232                           plusw2	equ	0xFDB
 21233                           fsr2h	equ	0xFDA
 21234                           fsr2l	equ	0xFD9
 21235                           status	equ	0xFD8
 21236                           
 21237 ;; *************** function _USBCtrlTrfOutHandler *****************
 21238 ;; Defined at:
 21239 ;;		line 2169 in file "../Includes/Usb/framework/usb_device.c"
 21240 ;; Parameters:    Size  Location     Type
 21241 ;;		None
 21242 ;; Auto vars:     Size  Location     Type
 21243 ;;		None
 21244 ;; Return value:  Size  Location     Type
 21245 ;;                  1    wreg      void 
 21246 ;; Registers used:
 21247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 21248 ;; Tracked objects:
 21249 ;;		On entry : F/1
 21250 ;;		On exit  : F/1
 21251 ;;		Unchanged: 0/0
 21252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21253 ;;      Params:         0       0       0       0       0       0       0       0       0
 21254 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21255 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21256 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21257 ;;Total ram usage:        0 bytes
 21258 ;; Hardware stack levels used:    1
 21259 ;; Hardware stack levels required when called:    3
 21260 ;; This function calls:
 21261 ;;		_USBCtrlTrfRxService
 21262 ;; This function is called by:
 21263 ;;		_USBCtrlEPService
 21264 ;; This function uses a non-reentrant model
 21265 ;;
 21266                           
 21267                           	psect	text106
 21268  004370                     __ptext106:
 21269                           	opt stack 0
 21270  004370                     _USBCtrlTrfOutHandler:
 21271                           	opt stack 14
 21272                           
 21273                           ; BSR set to: 1
 21274                           ;usb_device.c: 2171: if(controlTransferState == 2)
 21275                           
 21276                           ; BSR set to: 4
 21277                           ;incstack = 0
 21278  004370  0E02               	movlw	2
 21279  004372  1820               	xorwf	_controlTransferState,w,c	;volatile
 21280  004374  E102               	bnz	i2l1631
 21281                           
 21282                           ; BSR set to: 1
 21283                           ;usb_device.c: 2172: {
 21284                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 21285  004376  EF0D  F030         	goto	_USBCtrlTrfRxService	;wreg free
 21286  00437A                     i2l1631:
 21287                           
 21288                           ; BSR set to: 1
 21289                           ;usb_device.c: 2175: else
 21290                           ;usb_device.c: 2176: {
 21291                           ;usb_device.c: 2179: controlTransferState = 0;
 21292  00437A  6A20               	clrf	_controlTransferState,c	;volatile
 21293                           
 21294                           ; BSR set to: 1
 21295                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 21296  00437C  5145               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 21297  00437E  E11F               	bnz	i2l1633
 21298                           
 21299                           ; BSR set to: 1
 21300                           ;usb_device.c: 2187: {
 21301                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 21302  004380  EE20 F001          	lfsr	2,1
 21303  004384  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21304  004386  26D9               	addwf	fsr2l,f,c
 21305  004388  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21306  00438A  22DA               	addwfc	fsr2h,f,c
 21307  00438C  0E08               	movlw	8
 21308  00438E  6EDF               	movwf	indf2,c
 21309                           
 21310                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21311  004390  EE20 F002          	lfsr	2,2
 21312  004394  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21313  004396  26D9               	addwf	fsr2l,f,c
 21314  004398  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21315  00439A  22DA               	addwfc	fsr2h,f,c
 21316  00439C  0E30               	movlw	48
 21317  00439E  6EDE               	movwf	postinc2,c
 21318  0043A0  0E04               	movlw	4
 21319  0043A2  6EDD               	movwf	postdec2,c
 21320                           
 21321                           ; BSR set to: 1
 21322                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21323  0043A4  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21324  0043A8  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21325  0043AC  0E0C               	movlw	12
 21326  0043AE  6EDF               	movwf	indf2,c
 21327                           
 21328                           ; BSR set to: 1
 21329                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21330  0043B0  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21331  0043B4  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21332  0043B8  0E00               	movlw	0
 21333  0043BA  8EDB               	bsf	plusw2,7,c
 21334                           
 21335                           ;usb_device.c: 2192: }
 21336  0043BC  0C00               	retlw	0
 21337  0043BE                     i2l1633:
 21338                           
 21339                           ; BSR set to: 1
 21340                           ;usb_device.c: 2193: else
 21341                           ;usb_device.c: 2194: {
 21342                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 21343  0043BE  6B45               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 21344                           
 21345                           ; BSR set to: 1
 21346  0043C0  0012               	return		;funcret
 21347  0043C2                     __end_of_USBCtrlTrfOutHandler:
 21348                           	opt stack 0
 21349                           pclatu	equ	0xFFB
 21350                           pclath	equ	0xFFA
 21351                           tblptru	equ	0xFF8
 21352                           tblptrh	equ	0xFF7
 21353                           tblptrl	equ	0xFF6
 21354                           tablat	equ	0xFF5
 21355                           prodh	equ	0xFF4
 21356                           prodl	equ	0xFF3
 21357                           intcon	equ	0xFF2
 21358                           postinc0	equ	0xFEE
 21359                           wreg	equ	0xFE8
 21360                           indf1	equ	0xFE7
 21361                           fsr1h	equ	0xFE2
 21362                           fsr1l	equ	0xFE1
 21363                           indf2	equ	0xFDF
 21364                           postinc2	equ	0xFDE
 21365                           postdec2	equ	0xFDD
 21366                           plusw2	equ	0xFDB
 21367                           fsr2h	equ	0xFDA
 21368                           fsr2l	equ	0xFD9
 21369                           status	equ	0xFD8
 21370                           
 21371 ;; *************** function _USBCtrlTrfRxService *****************
 21372 ;; Defined at:
 21373 ;;		line 1518 in file "../Includes/Usb/framework/usb_device.c"
 21374 ;; Parameters:    Size  Location     Type
 21375 ;;		None
 21376 ;; Auto vars:     Size  Location     Type
 21377 ;;  byteToRead      1   18[COMRAM] unsigned char 
 21378 ;;  i               1   17[COMRAM] unsigned char 
 21379 ;; Return value:  Size  Location     Type
 21380 ;;                  1    wreg      void 
 21381 ;; Registers used:
 21382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 21383 ;; Tracked objects:
 21384 ;;		On entry : F/1
 21385 ;;		On exit  : F/1
 21386 ;;		Unchanged: 0/0
 21387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21388 ;;      Params:         0       0       0       0       0       0       0       0       0
 21389 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21390 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21391 ;;      Totals:         2       0       0       0       0       0       0       0       0
 21392 ;;Total ram usage:        2 bytes
 21393 ;; Hardware stack levels used:    1
 21394 ;; Hardware stack levels required when called:    2
 21395 ;; This function calls:
 21396 ;;		_USART_mySetLineCodingHandler
 21397 ;;		_USBCtrlEPAllowStatusStage
 21398 ;; This function is called by:
 21399 ;;		_USBCtrlTrfOutHandler
 21400 ;; This function uses a non-reentrant model
 21401 ;;
 21402                           
 21403                           	psect	text107
 21404  00601A                     __ptext107:
 21405                           	opt stack 0
 21406  00601A                     _USBCtrlTrfRxService:
 21407                           	opt stack 14
 21408                           
 21409                           ; BSR set to: 1
 21410                           ;usb_device.c: 1520: uint8_t byteToRead;
 21411                           ;usb_device.c: 1521: uint8_t i;
 21412                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 21413                           
 21414                           ; BSR set to: 1
 21415                           ;incstack = 0
 21416  00601A  EE20 F001          	lfsr	2,1
 21417  00601E  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 21418  006020  26D9               	addwf	fsr2l,f,c
 21419  006022  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21420  006024  22DA               	addwfc	fsr2h,f,c
 21421  006026  50DF               	movf	indf2,w,c
 21422  006028  6E40               	movwf	USBCtrlTrfRxService@byteToRead,c
 21423                           
 21424                           ; BSR set to: 1
 21425                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 21426  00602A  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21427  00602C  5C05               	subwf	_outPipes+4,w,c	;volatile
 21428  00602E  0E00               	movlw	0
 21429  006030  5806               	subwfb	_outPipes+5,w,c	;volatile
 21430  006032  E202               	bc	i2l6781
 21431                           
 21432                           ; BSR set to: 1
 21433                           ;usb_device.c: 1532: {
 21434                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 21435  006034  C005  F040         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 21436  006038                     i2l6781:
 21437                           
 21438                           ; BSR set to: 1
 21439                           ;usb_device.c: 1534: }
 21440                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 21441  006038  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21442  00603A  5E05               	subwf	_outPipes+4,f,c	;volatile
 21443  00603C  0E00               	movlw	0
 21444  00603E  5A06               	subwfb	_outPipes+5,f,c	;volatile
 21445                           
 21446                           ; BSR set to: 1
 21447                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 21448  006040  6A3F               	clrf	USBCtrlTrfRxService@i,c
 21449  006042  D00F               	goto	i2l6791
 21450  006044                     i2l6785:
 21451                           
 21452                           ; BSR set to: 1
 21453                           ;usb_device.c: 1541: {
 21454                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 21455  006044  0E38               	movlw	56
 21456  006046  243F               	addwf	USBCtrlTrfRxService@i,w,c
 21457  006048  6ED9               	movwf	fsr2l,c
 21458  00604A  6ADA               	clrf	fsr2h,c
 21459  00604C  0E04               	movlw	4
 21460  00604E  22DA               	addwfc	fsr2h,f,c
 21461  006050  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 21462  006054  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 21463  006058  CFDF FFE7          	movff	indf2,indf1
 21464                           
 21465                           ; BSR set to: 1
 21466  00605C  4A01               	infsnz	_outPipes,f,c	;volatile
 21467  00605E  2A02               	incf	_outPipes+1,f,c	;volatile
 21468                           
 21469                           ; BSR set to: 1
 21470  006060  2A3F               	incf	USBCtrlTrfRxService@i,f,c
 21471  006062                     i2l6791:
 21472                           
 21473                           ; BSR set to: 1
 21474  006062  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21475  006064  5C3F               	subwf	USBCtrlTrfRxService@i,w,c
 21476  006066  E3EE               	bnc	i2l6785
 21477                           
 21478                           ; BSR set to: 1
 21479                           ;usb_device.c: 1543: }
 21480                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 21481  006068  5005               	movf	_outPipes+4,w,c	;volatile
 21482  00606A  1006               	iorwf	_outPipes+5,w,c	;volatile
 21483  00606C  E032               	bz	i2l6807
 21484                           
 21485                           ; BSR set to: 1
 21486                           ;usb_device.c: 1548: {
 21487                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 21488  00606E  EE20 F001          	lfsr	2,1
 21489  006072  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21490  006074  26D9               	addwf	fsr2l,f,c
 21491  006076  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21492  006078  22DA               	addwfc	fsr2h,f,c
 21493  00607A  0E08               	movlw	8
 21494  00607C  6EDF               	movwf	indf2,c
 21495                           
 21496                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 21497  00607E  EE20 F002          	lfsr	2,2
 21498  006082  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21499  006084  26D9               	addwf	fsr2l,f,c
 21500  006086  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21501  006088  22DA               	addwfc	fsr2h,f,c
 21502  00608A  0E38               	movlw	56
 21503  00608C  6EDE               	movwf	postinc2,c
 21504  00608E  0E04               	movlw	4
 21505  006090  6EDD               	movwf	postdec2,c
 21506                           
 21507                           ; BSR set to: 1
 21508                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 21509  006092  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21510  006096  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21511  00609A  BCDF               	btfsc	indf2,6,c
 21512  00609C  D00D               	goto	i2l6803
 21513                           
 21514                           ; BSR set to: 1
 21515                           ;usb_device.c: 1552: {
 21516                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 21517  00609E  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21518  0060A2  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21519  0060A6  0E48               	movlw	72
 21520  0060A8  6EDF               	movwf	indf2,c
 21521                           
 21522                           ; BSR set to: 1
 21523                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21524  0060AA  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21525  0060AE  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21526  0060B2  0E00               	movlw	0
 21527  0060B4  8EDB               	bsf	plusw2,7,c
 21528                           
 21529                           ;usb_device.c: 1555: }
 21530  0060B6  0C00               	retlw	0
 21531  0060B8                     i2l6803:
 21532                           
 21533                           ; BSR set to: 1
 21534                           ;usb_device.c: 1556: else
 21535                           ;usb_device.c: 1557: {
 21536                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 21537  0060B8  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21538  0060BC  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21539  0060C0  0E08               	movlw	8
 21540  0060C2  6EDF               	movwf	indf2,c
 21541                           
 21542                           ; BSR set to: 1
 21543                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21544  0060C4  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21545  0060C8  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21546  0060CC  0E00               	movlw	0
 21547  0060CE  8EDB               	bsf	plusw2,7,c
 21548  0060D0  0C00               	retlw	0
 21549  0060D2                     i2l6807:
 21550                           
 21551                           ; BSR set to: 1
 21552                           ;usb_device.c: 1562: else
 21553                           ;usb_device.c: 1563: {
 21554                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 21555  0060D2  EE20 F001          	lfsr	2,1
 21556  0060D6  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21557  0060D8  26D9               	addwf	fsr2l,f,c
 21558  0060DA  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21559  0060DC  22DA               	addwfc	fsr2h,f,c
 21560  0060DE  0E08               	movlw	8
 21561  0060E0  6EDF               	movwf	indf2,c
 21562                           
 21563                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21564  0060E2  EE20 F002          	lfsr	2,2
 21565  0060E6  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21566  0060E8  26D9               	addwf	fsr2l,f,c
 21567  0060EA  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21568  0060EC  22DA               	addwfc	fsr2h,f,c
 21569  0060EE  0E30               	movlw	48
 21570  0060F0  6EDE               	movwf	postinc2,c
 21571  0060F2  0E04               	movlw	4
 21572  0060F4  6EDD               	movwf	postdec2,c
 21573                           
 21574                           ; BSR set to: 1
 21575                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 21576  0060F6  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21577  0060FA  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21578  0060FE  6EDF               	movwf	indf2,c
 21579                           
 21580                           ; BSR set to: 1
 21581                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21582  006100  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21583  006104  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21584  006108  0E00               	movlw	0
 21585  00610A  8EDB               	bsf	plusw2,7,c
 21586                           
 21587                           ; BSR set to: 1
 21588                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 21589  00610C  5007               	movf	_outPipes+6,w,c	;volatile
 21590  00610E  1008               	iorwf	_outPipes+7,w,c	;volatile
 21591  006110  E00E               	bz	i2l6817
 21592                           
 21593                           ; BSR set to: 1
 21594                           ;usb_device.c: 1581: {
 21595                           ;usb_device.c: 1586: outPipes[0].pFunc();
 21596  006112  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 21597  006116  D801               	call	i2u505_48
 21598  006118  D00A               	goto	i2l6817
 21599  00611A                     i2u505_48:
 21600  00611A  0005               	push	
 21601  00611C  6EFA               	movwf	pclath,c
 21602  00611E  50DE               	movf	postinc2,w,c
 21603  006120  6EFD               	movwf	tosl,c
 21604  006122  50DE               	movf	postinc2,w,c
 21605  006124  6EFE               	movwf	tosh,c
 21606  006126  50F8               	movf	tblptru,w,c
 21607  006128  6EFF               	movwf	tosu,c
 21608  00612A  50FA               	movf	pclath,w,c
 21609  00612C  0012               	return		;indir
 21610  00612E                     i2l6817:
 21611                           
 21612                           ; BSR set to: 1
 21613                           ;usb_device.c: 1588: }
 21614                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 21615  00612E  9E04               	bcf	_outPipes+3,7,c	;volatile
 21616                           
 21617                           ; BSR set to: 1
 21618                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 21619  006130  501D               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 21620  006132  B4D8               	btfsc	status,2,c
 21621                           
 21622                           ; BSR set to: 1
 21623                           ;usb_device.c: 1604: {
 21624                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 21625  006134  EC2B  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21626                           
 21627                           ; BSR set to: 1
 21628  006138  0012               	return		;funcret
 21629  00613A                     __end_of_USBCtrlTrfRxService:
 21630                           	opt stack 0
 21631                           tosu	equ	0xFFF
 21632                           tosh	equ	0xFFE
 21633                           tosl	equ	0xFFD
 21634                           pclatu	equ	0xFFB
 21635                           pclath	equ	0xFFA
 21636                           tblptru	equ	0xFF8
 21637                           tblptrh	equ	0xFF7
 21638                           tblptrl	equ	0xFF6
 21639                           tablat	equ	0xFF5
 21640                           prodh	equ	0xFF4
 21641                           prodl	equ	0xFF3
 21642                           intcon	equ	0xFF2
 21643                           postinc0	equ	0xFEE
 21644                           wreg	equ	0xFE8
 21645                           indf1	equ	0xFE7
 21646                           fsr1h	equ	0xFE2
 21647                           fsr1l	equ	0xFE1
 21648                           indf2	equ	0xFDF
 21649                           postinc2	equ	0xFDE
 21650                           postdec2	equ	0xFDD
 21651                           plusw2	equ	0xFDB
 21652                           fsr2h	equ	0xFDA
 21653                           fsr2l	equ	0xFD9
 21654                           status	equ	0xFD8
 21655                           
 21656 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 21657 ;; Defined at:
 21658 ;;		line 1104 in file "../Includes/Usb/framework/usb_device.c"
 21659 ;; Parameters:    Size  Location     Type
 21660 ;;		None
 21661 ;; Auto vars:     Size  Location     Type
 21662 ;;		None
 21663 ;; Return value:  Size  Location     Type
 21664 ;;                  1    wreg      void 
 21665 ;; Registers used:
 21666 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21667 ;; Tracked objects:
 21668 ;;		On entry : 0/0
 21669 ;;		On exit  : F/1
 21670 ;;		Unchanged: 0/0
 21671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21672 ;;      Params:         0       0       0       0       0       0       0       0       0
 21673 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21674 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21675 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21676 ;;Total ram usage:        0 bytes
 21677 ;; Hardware stack levels used:    1
 21678 ;; This function calls:
 21679 ;;		Nothing
 21680 ;; This function is called by:
 21681 ;;		_USBDeviceTasks
 21682 ;;		_USBCtrlEPServiceComplete
 21683 ;;		_USBCtrlTrfRxService
 21684 ;; This function uses a non-reentrant model
 21685 ;;
 21686                           
 21687                           	psect	text108
 21688  005256                     __ptext108:
 21689                           	opt stack 0
 21690  005256                     _USBCtrlEPAllowStatusStage:
 21691                           	opt stack 15
 21692                           
 21693                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 21694                           
 21695                           ; BSR set to: 1
 21696                           ;incstack = 0
 21697  005256  0101               	movlb	1	; () banked
 21698  005258  514A               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 21699  00525A  A4D8               	btfss	status,2,c
 21700  00525C  0012               	return	
 21701                           
 21702                           ; BSR set to: 1
 21703                           ;usb_device.c: 1112: {
 21704                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 21705  00525E  0E01               	movlw	1
 21706  005260  6F4A               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21707                           
 21708                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 21709  005262  514B               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 21710  005264  A4D8               	btfss	status,2,c
 21711  005266  0012               	return	
 21712                           
 21713                           ; BSR set to: 1
 21714                           ;usb_device.c: 1115: {
 21715                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 21716  005268  0E01               	movlw	1
 21717  00526A  6F4B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21718                           
 21719                           ; BSR set to: 1
 21720                           ;usb_device.c: 1120: if(controlTransferState == 2)
 21721  00526C  0E02               	movlw	2
 21722  00526E  1820               	xorwf	_controlTransferState,w,c	;volatile
 21723  005270  E114               	bnz	i2l6369
 21724                           
 21725                           ; BSR set to: 1
 21726                           ;usb_device.c: 1121: {
 21727                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 21728  005272  EE20 F001          	lfsr	2,1
 21729  005276  500F               	movf	_pBDTEntryIn,w,c
 21730  005278  26D9               	addwf	fsr2l,f,c
 21731  00527A  5010               	movf	_pBDTEntryIn+1,w,c
 21732  00527C  22DA               	addwfc	fsr2h,f,c
 21733  00527E  6ADF               	clrf	indf2,c
 21734                           
 21735                           ; BSR set to: 1
 21736                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 21737  005280  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 21738  005284  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21739  005288  0E48               	movlw	72
 21740  00528A  6EDF               	movwf	indf2,c
 21741                           
 21742                           ; BSR set to: 1
 21743                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21744  00528C  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 21745  005290  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21746  005294  0E00               	movlw	0
 21747  005296  8EDB               	bsf	plusw2,7,c
 21748                           
 21749                           ;usb_device.c: 1125: }
 21750  005298  0C00               	retlw	0
 21751  00529A                     i2l6369:
 21752                           
 21753                           ; BSR set to: 1
 21754                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 21755  00529A  0420               	decf	_controlTransferState,w,c	;volatile
 21756  00529C  A4D8               	btfss	status,2,c
 21757  00529E  0012               	return	
 21758                           
 21759                           ; BSR set to: 1
 21760                           ;usb_device.c: 1127: {
 21761                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 21762  0052A0  6B45               	clrf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 21763                           
 21764                           ; BSR set to: 1
 21765                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 21766  0052A2  EE20 F001          	lfsr	2,1
 21767  0052A6  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 21768  0052A8  26D9               	addwf	fsr2l,f,c
 21769  0052AA  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21770  0052AC  22DA               	addwfc	fsr2h,f,c
 21771  0052AE  0E08               	movlw	8
 21772  0052B0  6EDF               	movwf	indf2,c
 21773                           
 21774                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 21775  0052B2  EE20 F002          	lfsr	2,2
 21776  0052B6  5015               	movf	_pBDTEntryEP0OutCurrent,w,c
 21777  0052B8  26D9               	addwf	fsr2l,f,c
 21778  0052BA  5016               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21779  0052BC  22DA               	addwfc	fsr2h,f,c
 21780  0052BE  0E30               	movlw	48
 21781  0052C0  6EDE               	movwf	postinc2,c
 21782  0052C2  0E04               	movlw	4
 21783  0052C4  6EDD               	movwf	postdec2,c
 21784                           
 21785                           ; BSR set to: 1
 21786                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 21787  0052C6  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21788  0052CA  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21789  0052CE  6EDF               	movwf	indf2,c
 21790                           
 21791                           ; BSR set to: 1
 21792                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 21793  0052D0  C015  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21794  0052D4  C016  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21795  0052D8  0E00               	movlw	0
 21796  0052DA  8EDB               	bsf	plusw2,7,c
 21797                           
 21798                           ; BSR set to: 1
 21799                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 21800  0052DC  0E01               	movlw	1
 21801  0052DE  6F45               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 21802                           
 21803                           ; BSR set to: 1
 21804                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 21805  0052E0  EE20 F001          	lfsr	2,1
 21806  0052E4  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21807  0052E6  26D9               	addwf	fsr2l,f,c
 21808  0052E8  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21809  0052EA  22DA               	addwfc	fsr2h,f,c
 21810  0052EC  0E08               	movlw	8
 21811  0052EE  6EDF               	movwf	indf2,c
 21812                           
 21813                           ; BSR set to: 1
 21814                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21815  0052F0  EE20 F002          	lfsr	2,2
 21816  0052F4  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21817  0052F6  26D9               	addwf	fsr2l,f,c
 21818  0052F8  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21819  0052FA  22DA               	addwfc	fsr2h,f,c
 21820  0052FC  0E30               	movlw	48
 21821  0052FE  6EDE               	movwf	postinc2,c
 21822  005300  0E04               	movlw	4
 21823  005302  6EDD               	movwf	postdec2,c
 21824                           
 21825                           ; BSR set to: 1
 21826                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 21827  005304  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21828  005308  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21829  00530C  0E80               	movlw	128
 21830  00530E  6EDF               	movwf	indf2,c
 21831  005310  0C80               	retlw	128
 21832  005312                     __end_of_USBCtrlEPAllowStatusStage:
 21833                           	opt stack 0
 21834                           tosu	equ	0xFFF
 21835                           tosh	equ	0xFFE
 21836                           tosl	equ	0xFFD
 21837                           pclatu	equ	0xFFB
 21838                           pclath	equ	0xFFA
 21839                           tblptru	equ	0xFF8
 21840                           tblptrh	equ	0xFF7
 21841                           tblptrl	equ	0xFF6
 21842                           tablat	equ	0xFF5
 21843                           prodh	equ	0xFF4
 21844                           prodl	equ	0xFF3
 21845                           intcon	equ	0xFF2
 21846                           postinc0	equ	0xFEE
 21847                           wreg	equ	0xFE8
 21848                           indf1	equ	0xFE7
 21849                           fsr1h	equ	0xFE2
 21850                           fsr1l	equ	0xFE1
 21851                           indf2	equ	0xFDF
 21852                           postinc2	equ	0xFDE
 21853                           postdec2	equ	0xFDD
 21854                           plusw2	equ	0xFDB
 21855                           fsr2h	equ	0xFDA
 21856                           fsr2l	equ	0xFD9
 21857                           status	equ	0xFD8
 21858                           
 21859 ;; *************** function _USBCtrlTrfInHandler *****************
 21860 ;; Defined at:
 21861 ;;		line 2223 in file "../Includes/Usb/framework/usb_device.c"
 21862 ;; Parameters:    Size  Location     Type
 21863 ;;		None
 21864 ;; Auto vars:     Size  Location     Type
 21865 ;;  lastDTS         1   17[COMRAM] unsigned char 
 21866 ;; Return value:  Size  Location     Type
 21867 ;;                  1    wreg      void 
 21868 ;; Registers used:
 21869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 21870 ;; Tracked objects:
 21871 ;;		On entry : F/1
 21872 ;;		On exit  : E/0
 21873 ;;		Unchanged: 0/0
 21874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21875 ;;      Params:         0       0       0       0       0       0       0       0       0
 21876 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21877 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21878 ;;      Totals:         1       0       0       0       0       0       0       0       0
 21879 ;;Total ram usage:        1 bytes
 21880 ;; Hardware stack levels used:    1
 21881 ;; Hardware stack levels required when called:    2
 21882 ;; This function calls:
 21883 ;;		_USART_mySetLineCodingHandler
 21884 ;;		_USBCtrlTrfTxService
 21885 ;; This function is called by:
 21886 ;;		_USBCtrlEPService
 21887 ;; This function uses a non-reentrant model
 21888 ;;
 21889                           
 21890                           	psect	text109
 21891  005494                     __ptext109:
 21892                           	opt stack 0
 21893  005494                     _USBCtrlTrfInHandler:
 21894                           	opt stack 15
 21895                           
 21896                           ; BSR set to: 1
 21897                           ;usb_device.c: 2225: uint8_t lastDTS;
 21898                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 21899                           
 21900                           ; BSR set to: 1
 21901                           ;incstack = 0
 21902  005494  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 21903  005498  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21904  00549C  0E00               	movlw	0
 21905  00549E  BCDF               	btfsc	indf2,6,c
 21906  0054A0  0E01               	movlw	1
 21907  0054A2  6E3F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 21908                           
 21909                           ; BSR set to: 1
 21910                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 21911  0054A4  0E04               	movlw	4
 21912  0054A6  1A0F               	xorwf	_pBDTEntryIn,f,c
 21913                           
 21914                           ; BSR set to: 1
 21915                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 21916  0054A8  0E08               	movlw	8
 21917  0054AA  0100               	movlb	0	; () banked
 21918  0054AC  19F4               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 21919  0054AE  E10A               	bnz	i2l7569
 21920                           
 21921                           ; BSR set to: 0
 21922                           ;usb_device.c: 2236: {
 21923                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 21924  0054B0  0104               	movlb	4	; () banked
 21925  0054B2  5132               	movf	50,w,b	;volatile
 21926  0054B4  0B7F               	andlw	127
 21927  0054B6  6E63               	movwf	3939,c	;volatile
 21928                           
 21929                           ; BSR set to: 4
 21930                           ;usb_device.c: 2238: if(UADDR != 0u)
 21931  0054B8  5063               	movf	3939,w,c
 21932                           
 21933                           ; BSR set to: 4
 21934                           ;usb_device.c: 2239: {
 21935                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 21936  0054BA  0E10               	movlw	16
 21937  0054BC  B4D8               	btfsc	status,2,c
 21938                           
 21939                           ; BSR set to: 4
 21940                           ;usb_device.c: 2242: else
 21941                           ;usb_device.c: 2243: {
 21942                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 21943  0054BE  0E04               	movlw	4
 21944                           
 21945                           ;usb_device.c: 2241: }
 21946  0054C0  0100               	movlb	0	; () banked
 21947  0054C2  6FF4               	movwf	_USBDeviceState& (0+255),b	;volatile
 21948  0054C4                     i2l7569:
 21949                           
 21950                           ; BSR set to: 0
 21951                           ;usb_device.c: 2245: }
 21952                           ;usb_device.c: 2246: }
 21953                           ;usb_device.c: 2249: if(controlTransferState == 1)
 21954  0054C4  0420               	decf	_controlTransferState,w,c	;volatile
 21955  0054C6  E138               	bnz	i2l1641
 21956                           
 21957                           ; BSR set to: 0
 21958                           ;usb_device.c: 2250: {
 21959                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 21960  0054C8  EE20 F002          	lfsr	2,2
 21961  0054CC  500F               	movf	_pBDTEntryIn,w,c
 21962  0054CE  26D9               	addwf	fsr2l,f,c
 21963  0054D0  5010               	movf	_pBDTEntryIn+1,w,c
 21964  0054D2  22DA               	addwfc	fsr2h,f,c
 21965  0054D4  0E38               	movlw	56
 21966  0054D6  6EDE               	movwf	postinc2,c
 21967  0054D8  0E04               	movlw	4
 21968  0054DA  6EDD               	movwf	postdec2,c
 21969                           
 21970                           ; BSR set to: 0
 21971                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 21972  0054DC  ECE9  F029         	call	_USBCtrlTrfTxService	;wreg free
 21973                           
 21974                           ; BSR set to: 1
 21975                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 21976  0054E0  0E02               	movlw	2
 21977  0054E2  182A               	xorwf	_shortPacketStatus,w,c	;volatile
 21978  0054E4  E10D               	bnz	i2l7581
 21979                           
 21980                           ; BSR set to: 1
 21981                           ;usb_device.c: 2259: {
 21982                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 21983  0054E6  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 21984  0054EA  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21985  0054EE  0E04               	movlw	4
 21986  0054F0  6EDF               	movwf	indf2,c
 21987                           
 21988                           ; BSR set to: 1
 21989                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21990  0054F2  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 21991  0054F6  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21992  0054FA  0E00               	movlw	0
 21993  0054FC  8EDB               	bsf	plusw2,7,c
 21994                           
 21995                           ;usb_device.c: 2264: }
 21996  0054FE  0C00               	retlw	0
 21997  005500                     i2l7581:
 21998                           
 21999                           ; BSR set to: 1
 22000                           ;usb_device.c: 2265: else
 22001                           ;usb_device.c: 2266: {
 22002                           ;usb_device.c: 2267: if(lastDTS == 0)
 22003  005500  503F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 22004  005502  E10D               	bnz	i2l7587
 22005                           
 22006                           ; BSR set to: 1
 22007                           ;usb_device.c: 2268: {
 22008                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 22009  005504  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 22010  005508  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22011  00550C  0E48               	movlw	72
 22012  00550E  6EDF               	movwf	indf2,c
 22013                           
 22014                           ; BSR set to: 1
 22015                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22016  005510  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 22017  005514  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22018  005518  0E00               	movlw	0
 22019  00551A  8EDB               	bsf	plusw2,7,c
 22020                           
 22021                           ;usb_device.c: 2271: }
 22022  00551C  0C00               	retlw	0
 22023  00551E                     i2l7587:
 22024                           
 22025                           ; BSR set to: 1
 22026                           ;usb_device.c: 2272: else
 22027                           ;usb_device.c: 2273: {
 22028                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 22029  00551E  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 22030  005522  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22031  005526  0E08               	movlw	8
 22032  005528  6EDF               	movwf	indf2,c
 22033                           
 22034                           ; BSR set to: 1
 22035                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22036  00552A  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 22037  00552E  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22038  005532  0E00               	movlw	0
 22039  005534  8EDB               	bsf	plusw2,7,c
 22040  005536  0C00               	retlw	0
 22041  005538                     i2l1641:
 22042                           
 22043                           ; BSR set to: 0
 22044                           ;usb_device.c: 2279: else
 22045                           ;usb_device.c: 2280: {
 22046                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 22047  005538  AE04               	btfss	_outPipes+3,7,c	;volatile
 22048  00553A  D012               	goto	i2l7597
 22049                           
 22050                           ; BSR set to: 0
 22051                           ;usb_device.c: 2285: {
 22052                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 22053  00553C  5007               	movf	_outPipes+6,w,c	;volatile
 22054  00553E  1008               	iorwf	_outPipes+7,w,c	;volatile
 22055  005540  E00E               	bz	i2l7595
 22056                           
 22057                           ; BSR set to: 0
 22058                           ;usb_device.c: 2287: {
 22059                           ;usb_device.c: 2288: outPipes[0].pFunc();
 22060  005542  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 22061  005546  D801               	call	i2u593_48
 22062  005548  D00A               	goto	i2l7595
 22063  00554A                     i2u593_48:
 22064  00554A  0005               	push	
 22065  00554C  6EFA               	movwf	pclath,c
 22066  00554E  50DE               	movf	postinc2,w,c
 22067  005550  6EFD               	movwf	tosl,c
 22068  005552  50DE               	movf	postinc2,w,c
 22069  005554  6EFE               	movwf	tosh,c
 22070  005556  50F8               	movf	tblptru,w,c
 22071  005558  6EFF               	movwf	tosu,c
 22072  00555A  50FA               	movf	pclath,w,c
 22073  00555C  0012               	return		;indir
 22074  00555E                     i2l7595:
 22075                           
 22076                           ;usb_device.c: 2289: }
 22077                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 22078  00555E  9E04               	bcf	_outPipes+3,7,c	;volatile
 22079  005560                     i2l7597:
 22080                           
 22081                           ;usb_device.c: 2291: }
 22082                           ;usb_device.c: 2293: controlTransferState = 0;
 22083  005560  6A20               	clrf	_controlTransferState,c	;volatile
 22084  005562  0012               	return		;funcret
 22085  005564                     __end_of_USBCtrlTrfInHandler:
 22086                           	opt stack 0
 22087                           tosu	equ	0xFFF
 22088                           tosh	equ	0xFFE
 22089                           tosl	equ	0xFFD
 22090                           pclatu	equ	0xFFB
 22091                           pclath	equ	0xFFA
 22092                           tblptru	equ	0xFF8
 22093                           tblptrh	equ	0xFF7
 22094                           tblptrl	equ	0xFF6
 22095                           tablat	equ	0xFF5
 22096                           prodh	equ	0xFF4
 22097                           prodl	equ	0xFF3
 22098                           intcon	equ	0xFF2
 22099                           postinc0	equ	0xFEE
 22100                           wreg	equ	0xFE8
 22101                           indf1	equ	0xFE7
 22102                           fsr1h	equ	0xFE2
 22103                           fsr1l	equ	0xFE1
 22104                           indf2	equ	0xFDF
 22105                           postinc2	equ	0xFDE
 22106                           postdec2	equ	0xFDD
 22107                           plusw2	equ	0xFDB
 22108                           fsr2h	equ	0xFDA
 22109                           fsr2l	equ	0xFD9
 22110                           status	equ	0xFD8
 22111                           
 22112 ;; *************** function _USBCtrlTrfTxService *****************
 22113 ;; Defined at:
 22114 ;;		line 1437 in file "../Includes/Usb/framework/usb_device.c"
 22115 ;; Parameters:    Size  Location     Type
 22116 ;;		None
 22117 ;; Auto vars:     Size  Location     Type
 22118 ;;  byteToSend      1    0[COMRAM] unsigned char 
 22119 ;; Return value:  Size  Location     Type
 22120 ;;                  1    wreg      void 
 22121 ;; Registers used:
 22122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22123 ;; Tracked objects:
 22124 ;;		On entry : B/4
 22125 ;;		On exit  : F/1
 22126 ;;		Unchanged: 0/0
 22127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22128 ;;      Params:         0       0       0       0       0       0       0       0       0
 22129 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22130 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22131 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22132 ;;Total ram usage:        1 bytes
 22133 ;; Hardware stack levels used:    1
 22134 ;; This function calls:
 22135 ;;		Nothing
 22136 ;; This function is called by:
 22137 ;;		_USBCtrlEPAllowDataStage
 22138 ;;		_USBCtrlTrfInHandler
 22139 ;; This function uses a non-reentrant model
 22140 ;;
 22141                           
 22142                           	psect	text110
 22143  0053D2                     __ptext110:
 22144                           	opt stack 0
 22145  0053D2                     _USBCtrlTrfTxService:
 22146                           	opt stack 14
 22147                           
 22148                           ;usb_device.c: 1439: uint8_t byteToSend;
 22149                           ;usb_device.c: 1443: byteToSend = 8;
 22150                           
 22151                           ;incstack = 0
 22152  0053D2  0E08               	movlw	8
 22153  0053D4  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 22154                           
 22155                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 22156  0053D6  500E               	movf	_inPipes+5,w,c	;volatile
 22157  0053D8  E10D               	bnz	i2l6167
 22158  0053DA  0E08               	movlw	8
 22159  0053DC  5C0D               	subwf	_inPipes+4,w,c	;volatile
 22160  0053DE  E20A               	bc	i2l6167
 22161                           
 22162                           ;usb_device.c: 1445: {
 22163                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 22164  0053E0  C00D  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 22165                           
 22166                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 22167  0053E4  502A               	movf	_shortPacketStatus,w,c	;volatile
 22168  0053E6  E102               	bnz	i2l6163
 22169                           
 22170                           ;usb_device.c: 1454: {
 22171                           ;usb_device.c: 1455: shortPacketStatus = 1;
 22172  0053E8  0E01               	movlw	1
 22173  0053EA  D003               	goto	L37
 22174  0053EC                     i2l6163:
 22175                           
 22176                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 22177  0053EC  042A               	decf	_shortPacketStatus,w,c	;volatile
 22178  0053EE  E102               	bnz	i2l6167
 22179                           
 22180                           ;usb_device.c: 1458: {
 22181                           ;usb_device.c: 1459: shortPacketStatus = 2;
 22182  0053F0  0E02               	movlw	2
 22183  0053F2                     L37:
 22184  0053F2  6E2A               	movwf	_shortPacketStatus,c	;volatile
 22185  0053F4                     i2l6167:
 22186                           
 22187                           ;usb_device.c: 1460: }
 22188                           ;usb_device.c: 1461: }
 22189                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 22190  0053F4  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22191  0053F6  5E0D               	subwf	_inPipes+4,f,c	;volatile
 22192  0053F8  0E00               	movlw	0
 22193  0053FA  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 22194                           
 22195                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 22196  0053FC  EE20 F001          	lfsr	2,1
 22197  005400  500F               	movf	_pBDTEntryIn,w,c
 22198  005402  26D9               	addwf	fsr2l,f,c
 22199  005404  5010               	movf	_pBDTEntryIn+1,w,c
 22200  005406  22DA               	addwfc	fsr2h,f,c
 22201  005408  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 22202                           
 22203                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 22204  00540C  0E38               	movlw	56
 22205  00540E  0101               	movlb	1	; () banked
 22206  005410  6F37               	movwf	_pDst& (0+255),b
 22207  005412  0E04               	movlw	4
 22208  005414  6F38               	movwf	(_pDst+1)& (0+255),b
 22209                           
 22210                           ; BSR set to: 1
 22211                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 22212  005416  B00C               	btfsc	_inPipes+3,0,c	;volatile
 22213  005418  D03A               	goto	i2l6195
 22214  00541A  D01B               	goto	i2l6185
 22215  00541C                     i2l6177:
 22216                           
 22217                           ; BSR set to: 1
 22218                           ;usb_device.c: 1478: {
 22219                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 22220  00541C  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 22221  005420  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 22222  005424  6AF8               	clrf	tblptru,c
 22223  005426  C137  FFD9         	movff	_pDst,fsr2l
 22224  00542A  C138  FFDA         	movff	_pDst+1,fsr2h
 22225  00542E  0E07               	movlw	(high __ramtop+-1)
 22226  005430  64F7               	cpfsgt	tblptrh,c
 22227  005432  D003               	bra	i2u423_47
 22228  005434  0008               	tblrd		*
 22229  005436  50F5               	movf	tablat,w,c
 22230  005438  D005               	bra	i2u423_40
 22231  00543A                     i2u423_47:
 22232  00543A  CFF6 FFE1          	movff	tblptrl,fsr1l
 22233  00543E  CFF7 FFE2          	movff	tblptrh,fsr1h
 22234  005442  50E7               	movf	indf1,w,c
 22235  005444                     i2u423_40:
 22236  005444  6EDF               	movwf	indf2,c
 22237  005446  4A09               	infsnz	_inPipes,f,c	;volatile
 22238  005448  2A0A               	incf	_inPipes+1,f,c	;volatile
 22239  00544A  0101               	movlb	1	; () banked
 22240  00544C  4B37               	infsnz	_pDst& (0+255),f,b
 22241  00544E  2B38               	incf	(_pDst+1)& (0+255),f,b
 22242                           
 22243                           ; BSR set to: 1
 22244                           ;usb_device.c: 1480: byteToSend--;
 22245  005450  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22246  005452                     i2l6185:
 22247                           
 22248                           ; BSR set to: 1
 22249  005452  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22250  005454  E1E3               	bnz	i2l6177
 22251  005456  0012               	return	
 22252  005458                     i2l6187:
 22253                           
 22254                           ; BSR set to: 1
 22255                           ;usb_device.c: 1486: {
 22256                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 22257  005458  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 22258  00545C  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 22259  005460  6AF8               	clrf	tblptru,c
 22260  005462  C137  FFD9         	movff	_pDst,fsr2l
 22261  005466  C138  FFDA         	movff	_pDst+1,fsr2h
 22262  00546A  0E07               	movlw	(high __ramtop+-1)
 22263  00546C  64F7               	cpfsgt	tblptrh,c
 22264  00546E  D003               	bra	i2u425_47
 22265  005470  0008               	tblrd		*
 22266  005472  50F5               	movf	tablat,w,c
 22267  005474  D005               	bra	i2u425_40
 22268  005476                     i2u425_47:
 22269  005476  CFF6 FFE1          	movff	tblptrl,fsr1l
 22270  00547A  CFF7 FFE2          	movff	tblptrh,fsr1h
 22271  00547E  50E7               	movf	indf1,w,c
 22272  005480                     i2u425_40:
 22273  005480  6EDF               	movwf	indf2,c
 22274  005482  4A09               	infsnz	_inPipes,f,c	;volatile
 22275  005484  2A0A               	incf	_inPipes+1,f,c	;volatile
 22276  005486  0101               	movlb	1	; () banked
 22277  005488  4B37               	infsnz	_pDst& (0+255),f,b
 22278  00548A  2B38               	incf	(_pDst+1)& (0+255),f,b
 22279                           
 22280                           ; BSR set to: 1
 22281                           ;usb_device.c: 1488: byteToSend--;
 22282  00548C  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22283  00548E                     i2l6195:
 22284                           
 22285                           ; BSR set to: 1
 22286  00548E  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22287  005490  E1E3               	bnz	i2l6187
 22288                           
 22289                           ; BSR set to: 1
 22290  005492  0012               	return		;funcret
 22291  005494                     __end_of_USBCtrlTrfTxService:
 22292                           	opt stack 0
 22293                           tosu	equ	0xFFF
 22294                           tosh	equ	0xFFE
 22295                           tosl	equ	0xFFD
 22296                           pclatu	equ	0xFFB
 22297                           pclath	equ	0xFFA
 22298                           tblptru	equ	0xFF8
 22299                           tblptrh	equ	0xFF7
 22300                           tblptrl	equ	0xFF6
 22301                           tablat	equ	0xFF5
 22302                           prodh	equ	0xFF4
 22303                           prodl	equ	0xFF3
 22304                           intcon	equ	0xFF2
 22305                           postinc0	equ	0xFEE
 22306                           wreg	equ	0xFE8
 22307                           indf1	equ	0xFE7
 22308                           fsr1h	equ	0xFE2
 22309                           fsr1l	equ	0xFE1
 22310                           indf2	equ	0xFDF
 22311                           postinc2	equ	0xFDE
 22312                           postdec2	equ	0xFDD
 22313                           plusw2	equ	0xFDB
 22314                           fsr2h	equ	0xFDA
 22315                           fsr2l	equ	0xFD9
 22316                           status	equ	0xFD8
 22317                           
 22318 ;; *************** function _USART_mySetLineCodingHandler *****************
 22319 ;; Defined at:
 22320 ;;		line 236 in file "../Includes/Board/USBapp.c"
 22321 ;; Parameters:    Size  Location     Type
 22322 ;;		None
 22323 ;; Auto vars:     Size  Location     Type
 22324 ;;  dwBaud          4   13[COMRAM] unsigned long 
 22325 ;; Return value:  Size  Location     Type
 22326 ;;                  1    wreg      void 
 22327 ;; Registers used:
 22328 ;;		wreg, status,2, status,0, cstack
 22329 ;; Tracked objects:
 22330 ;;		On entry : E/1
 22331 ;;		On exit  : F/1
 22332 ;;		Unchanged: 0/0
 22333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22334 ;;      Params:         0       0       0       0       0       0       0       0       0
 22335 ;;      Locals:         4       0       0       0       0       0       0       0       0
 22336 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22337 ;;      Totals:         4       0       0       0       0       0       0       0       0
 22338 ;;Total ram usage:        4 bytes
 22339 ;; Hardware stack levels used:    1
 22340 ;; Hardware stack levels required when called:    1
 22341 ;; This function calls:
 22342 ;;		___lldiv
 22343 ;;		i2_EUSART_Initialize
 22344 ;; This function is called by:
 22345 ;;		_USBCheckCDCRequest
 22346 ;;		_USBCtrlTrfRxService
 22347 ;;		_USBCtrlTrfInHandler
 22348 ;; This function uses a non-reentrant model
 22349 ;;
 22350                           
 22351                           	psect	text111
 22352  0043C2                     __ptext111:
 22353                           	opt stack 0
 22354  0043C2                     _USART_mySetLineCodingHandler:
 22355                           	opt stack 14
 22356                           
 22357                           ;USBapp.c: 239: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 22358                           
 22359                           ; BSR set to: 1
 22360                           ;incstack = 0
 22361  0043C2  C1E2  F1F4         	movff	_cdc_notice,_line_coding
 22362  0043C6  C1E3  F1F5         	movff	_cdc_notice+1,_line_coding+1
 22363  0043CA  C1E4  F1F6         	movff	_cdc_notice+2,_line_coding+2
 22364  0043CE  C1E5  F1F7         	movff	_cdc_notice+3,_line_coding+3
 22365                           
 22366                           ;USBapp.c: 241: uint32_t dwBaud;
 22367                           ;USBapp.c: 242: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 22368  0043D2  6A2E               	clrf	___lldiv@dividend,c
 22369  0043D4  0E1B               	movlw	27
 22370  0043D6  6E2F               	movwf	___lldiv@dividend+1,c
 22371  0043D8  0EB7               	movlw	183
 22372  0043DA  6E30               	movwf	___lldiv@dividend+2,c
 22373  0043DC  6A31               	clrf	___lldiv@dividend+3,c
 22374  0043DE  C1F4  F032         	movff	_line_coding,___lldiv@divisor
 22375  0043E2  C1F5  F033         	movff	_line_coding+1,___lldiv@divisor+1
 22376  0043E6  C1F6  F034         	movff	_line_coding+2,___lldiv@divisor+2
 22377  0043EA  C1F7  F035         	movff	_line_coding+3,___lldiv@divisor+3
 22378  0043EE  EC20  F024         	call	___lldiv	;wreg free
 22379  0043F2  0EFF               	movlw	255
 22380  0043F4  242E               	addwf	?___lldiv,w,c
 22381  0043F6  6E3B               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 22382  0043F8  0EFF               	movlw	255
 22383  0043FA  202F               	addwfc	?___lldiv+1,w,c
 22384  0043FC  6E3C               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 22385  0043FE  0EFF               	movlw	255
 22386  004400  2030               	addwfc	?___lldiv+2,w,c
 22387  004402  6E3D               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 22388  004404  0EFF               	movlw	255
 22389  004406  2031               	addwfc	?___lldiv+3,w,c
 22390  004408  6E3E               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 22391                           
 22392                           ;USBapp.c: 243: SPBRG = (uint8_t) dwBaud;
 22393  00440A  C03B  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 22394                           
 22395                           ;USBapp.c: 244: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 22396  00440E  C03C  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 22397                           
 22398                           ;USBapp.c: 246: EUSART_Initialize();
 22399  004412  EF83  F01F         	goto	i2_EUSART_Initialize	;wreg free
 22400  004416                     __end_of_USART_mySetLineCodingHandler:
 22401                           	opt stack 0
 22402                           tosu	equ	0xFFF
 22403                           tosh	equ	0xFFE
 22404                           tosl	equ	0xFFD
 22405                           pclatu	equ	0xFFB
 22406                           pclath	equ	0xFFA
 22407                           tblptru	equ	0xFF8
 22408                           tblptrh	equ	0xFF7
 22409                           tblptrl	equ	0xFF6
 22410                           tablat	equ	0xFF5
 22411                           prodh	equ	0xFF4
 22412                           prodl	equ	0xFF3
 22413                           intcon	equ	0xFF2
 22414                           postinc0	equ	0xFEE
 22415                           wreg	equ	0xFE8
 22416                           indf1	equ	0xFE7
 22417                           fsr1h	equ	0xFE2
 22418                           fsr1l	equ	0xFE1
 22419                           indf2	equ	0xFDF
 22420                           postinc2	equ	0xFDE
 22421                           postdec2	equ	0xFDD
 22422                           plusw2	equ	0xFDB
 22423                           fsr2h	equ	0xFDA
 22424                           fsr2l	equ	0xFD9
 22425                           status	equ	0xFD8
 22426                           
 22427 ;; *************** function i2_EUSART_Initialize *****************
 22428 ;; Defined at:
 22429 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 22430 ;; Parameters:    Size  Location     Type
 22431 ;;		None
 22432 ;; Auto vars:     Size  Location     Type
 22433 ;;		None
 22434 ;; Return value:  Size  Location     Type
 22435 ;;                  1    wreg      void 
 22436 ;; Registers used:
 22437 ;;		wreg, status,2
 22438 ;; Tracked objects:
 22439 ;;		On entry : E/1
 22440 ;;		On exit  : F/1
 22441 ;;		Unchanged: 0/0
 22442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22443 ;;      Params:         0       0       0       0       0       0       0       0       0
 22444 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22445 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22446 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22447 ;;Total ram usage:        0 bytes
 22448 ;; Hardware stack levels used:    1
 22449 ;; This function calls:
 22450 ;;		Nothing
 22451 ;; This function is called by:
 22452 ;;		_USBapp_CdcEmulatorInitialize
 22453 ;;		_USART_mySetLineCodingHandler
 22454 ;; This function uses a non-reentrant model
 22455 ;;
 22456                           
 22457                           	psect	text112
 22458  003F06                     __ptext112:
 22459                           	opt stack 0
 22460  003F06                     i2_EUSART_Initialize:
 22461                           	opt stack 16
 22462                           
 22463                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 22464                           
 22465                           ; BSR set to: 1
 22466                           ;incstack = 0
 22467  003F06  9A9D               	bcf	3997,5,c	;volatile
 22468                           
 22469                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 22470  003F08  989D               	bcf	3997,4,c	;volatile
 22471                           
 22472                           ;eusart.c: 85: BAUDCON = 0x48;
 22473  003F0A  0E48               	movlw	72
 22474  003F0C  6EB8               	movwf	4024,c	;volatile
 22475                           
 22476                           ;eusart.c: 88: RCSTA = 0x90;
 22477  003F0E  0E90               	movlw	144
 22478  003F10  6EAB               	movwf	4011,c	;volatile
 22479                           
 22480                           ;eusart.c: 91: TXSTA = 0x26;
 22481  003F12  0E26               	movlw	38
 22482  003F14  6EAC               	movwf	4012,c	;volatile
 22483                           
 22484                           ;eusart.c: 95: SPBRG = 0x71;
 22485  003F16  0E71               	movlw	113
 22486  003F18  6EAF               	movwf	4015,c	;volatile
 22487                           
 22488                           ;eusart.c: 100: SPBRGH = 0x02;
 22489  003F1A  0E02               	movlw	2
 22490  003F1C  6EB0               	movwf	4016,c	;volatile
 22491                           
 22492                           ;eusart.c: 103: eusartTxHead = 0;
 22493  003F1E  6A24               	clrf	_eusartTxHead,c
 22494                           
 22495                           ;eusart.c: 104: eusartTxTail = 0;
 22496  003F20  6A25               	clrf	_eusartTxTail,c
 22497                           
 22498                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 22499  003F22  0E40               	movlw	64
 22500  003F24  6E23               	movwf	_eusartTxBufferRemaining,c	;volatile
 22501                           
 22502                           ;eusart.c: 107: eusartRxHead = 0;
 22503  003F26  0101               	movlb	1	; () banked
 22504  003F28  6B4E               	clrf	_eusartRxHead& (0+255),b
 22505                           
 22506                           ; BSR set to: 1
 22507                           ;eusart.c: 108: eusartRxTail = 0;
 22508  003F2A  6B4F               	clrf	_eusartRxTail& (0+255),b
 22509                           
 22510                           ; BSR set to: 1
 22511                           ;eusart.c: 109: eusartRxCount = 0;
 22512  003F2C  6A22               	clrf	_eusartRxCount,c	;volatile
 22513                           
 22514                           ; BSR set to: 1
 22515                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 22516  003F2E  8A9D               	bsf	3997,5,c	;volatile
 22517                           
 22518                           ; BSR set to: 1
 22519                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 22520  003F30  88AB               	bsf	4011,4,c	;volatile
 22521                           
 22522                           ; BSR set to: 1
 22523  003F32  0012               	return		;funcret
 22524  003F34                     __end_ofi2_EUSART_Initialize:
 22525                           	opt stack 0
 22526                           tosu	equ	0xFFF
 22527                           tosh	equ	0xFFE
 22528                           tosl	equ	0xFFD
 22529                           pclatu	equ	0xFFB
 22530                           pclath	equ	0xFFA
 22531                           tblptru	equ	0xFF8
 22532                           tblptrh	equ	0xFF7
 22533                           tblptrl	equ	0xFF6
 22534                           tablat	equ	0xFF5
 22535                           prodh	equ	0xFF4
 22536                           prodl	equ	0xFF3
 22537                           intcon	equ	0xFF2
 22538                           postinc0	equ	0xFEE
 22539                           wreg	equ	0xFE8
 22540                           indf1	equ	0xFE7
 22541                           fsr1h	equ	0xFE2
 22542                           fsr1l	equ	0xFE1
 22543                           indf2	equ	0xFDF
 22544                           postinc2	equ	0xFDE
 22545                           postdec2	equ	0xFDD
 22546                           plusw2	equ	0xFDB
 22547                           fsr2h	equ	0xFDA
 22548                           fsr2l	equ	0xFD9
 22549                           status	equ	0xFD8
 22550                           
 22551 ;; *************** function ___lldiv *****************
 22552 ;; Defined at:
 22553 ;;		line 8 in file "/opt/microchip/xc8/v1.36/sources/common/lldiv.c"
 22554 ;; Parameters:    Size  Location     Type
 22555 ;;  dividend        4    0[COMRAM] unsigned long 
 22556 ;;  divisor         4    4[COMRAM] unsigned long 
 22557 ;; Auto vars:     Size  Location     Type
 22558 ;;  quotient        4    8[COMRAM] unsigned long 
 22559 ;;  counter         1   12[COMRAM] unsigned char 
 22560 ;; Return value:  Size  Location     Type
 22561 ;;                  4    0[COMRAM] unsigned long 
 22562 ;; Registers used:
 22563 ;;		wreg, status,2, status,0
 22564 ;; Tracked objects:
 22565 ;;		On entry : E/1
 22566 ;;		On exit  : E/0
 22567 ;;		Unchanged: E/0
 22568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22569 ;;      Params:         8       0       0       0       0       0       0       0       0
 22570 ;;      Locals:         5       0       0       0       0       0       0       0       0
 22571 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22572 ;;      Totals:        13       0       0       0       0       0       0       0       0
 22573 ;;Total ram usage:       13 bytes
 22574 ;; Hardware stack levels used:    1
 22575 ;; This function calls:
 22576 ;;		Nothing
 22577 ;; This function is called by:
 22578 ;;		_USART_mySetLineCodingHandler
 22579 ;; This function uses a non-reentrant model
 22580 ;;
 22581                           
 22582                           	psect	text113
 22583  004840                     __ptext113:
 22584                           	opt stack 0
 22585  004840                     ___lldiv:
 22586                           	opt stack 14
 22587                           
 22588                           ; BSR set to: 1
 22589                           ;incstack = 0
 22590  004840  6A36               	clrf	___lldiv@quotient,c
 22591  004842  6A37               	clrf	___lldiv@quotient+1,c
 22592  004844  6A38               	clrf	___lldiv@quotient+2,c
 22593  004846  6A39               	clrf	___lldiv@quotient+3,c
 22594  004848  5032               	movf	___lldiv@divisor,w,c
 22595  00484A  1033               	iorwf	___lldiv@divisor+1,w,c
 22596  00484C  1034               	iorwf	___lldiv@divisor+2,w,c
 22597  00484E  1035               	iorwf	___lldiv@divisor+3,w,c
 22598  004850  E029               	bz	i2l2250
 22599  004852  0E01               	movlw	1
 22600  004854  6E3A               	movwf	___lldiv@counter,c
 22601  004856  D006               	goto	i2l6205
 22602  004858                     i2l6203:
 22603  004858  90D8               	bcf	status,0,c
 22604  00485A  3632               	rlcf	___lldiv@divisor,f,c
 22605  00485C  3633               	rlcf	___lldiv@divisor+1,f,c
 22606  00485E  3634               	rlcf	___lldiv@divisor+2,f,c
 22607  004860  3635               	rlcf	___lldiv@divisor+3,f,c
 22608  004862  2A3A               	incf	___lldiv@counter,f,c
 22609  004864                     i2l6205:
 22610  004864  AE35               	btfss	___lldiv@divisor+3,7,c
 22611  004866  D7F8               	goto	i2l6203
 22612  004868                     i2l6207:
 22613  004868  90D8               	bcf	status,0,c
 22614  00486A  3636               	rlcf	___lldiv@quotient,f,c
 22615  00486C  3637               	rlcf	___lldiv@quotient+1,f,c
 22616  00486E  3638               	rlcf	___lldiv@quotient+2,f,c
 22617  004870  3639               	rlcf	___lldiv@quotient+3,f,c
 22618  004872  5032               	movf	___lldiv@divisor,w,c
 22619  004874  5C2E               	subwf	___lldiv@dividend,w,c
 22620  004876  5033               	movf	___lldiv@divisor+1,w,c
 22621  004878  582F               	subwfb	___lldiv@dividend+1,w,c
 22622  00487A  5034               	movf	___lldiv@divisor+2,w,c
 22623  00487C  5830               	subwfb	___lldiv@dividend+2,w,c
 22624  00487E  5035               	movf	___lldiv@divisor+3,w,c
 22625  004880  5831               	subwfb	___lldiv@dividend+3,w,c
 22626  004882  E309               	bnc	i2l6215
 22627  004884  5032               	movf	___lldiv@divisor,w,c
 22628  004886  5E2E               	subwf	___lldiv@dividend,f,c
 22629  004888  5033               	movf	___lldiv@divisor+1,w,c
 22630  00488A  5A2F               	subwfb	___lldiv@dividend+1,f,c
 22631  00488C  5034               	movf	___lldiv@divisor+2,w,c
 22632  00488E  5A30               	subwfb	___lldiv@dividend+2,f,c
 22633  004890  5035               	movf	___lldiv@divisor+3,w,c
 22634  004892  5A31               	subwfb	___lldiv@dividend+3,f,c
 22635  004894  8036               	bsf	___lldiv@quotient,0,c
 22636  004896                     i2l6215:
 22637  004896  90D8               	bcf	status,0,c
 22638  004898  3235               	rrcf	___lldiv@divisor+3,f,c
 22639  00489A  3234               	rrcf	___lldiv@divisor+2,f,c
 22640  00489C  3233               	rrcf	___lldiv@divisor+1,f,c
 22641  00489E  3232               	rrcf	___lldiv@divisor,f,c
 22642  0048A0  2E3A               	decfsz	___lldiv@counter,f,c
 22643  0048A2  D7E2               	goto	i2l6207
 22644  0048A4                     i2l2250:
 22645  0048A4  C036  F02E         	movff	___lldiv@quotient,?___lldiv
 22646  0048A8  C037  F02F         	movff	___lldiv@quotient+1,?___lldiv+1
 22647  0048AC  C038  F030         	movff	___lldiv@quotient+2,?___lldiv+2
 22648  0048B0  C039  F031         	movff	___lldiv@quotient+3,?___lldiv+3
 22649  0048B4  0012               	return		;funcret
 22650  0048B6                     __end_of___lldiv:
 22651                           	opt stack 0
 22652                           tosu	equ	0xFFF
 22653                           tosh	equ	0xFFE
 22654                           tosl	equ	0xFFD
 22655                           pclatu	equ	0xFFB
 22656                           pclath	equ	0xFFA
 22657                           tblptru	equ	0xFF8
 22658                           tblptrh	equ	0xFF7
 22659                           tblptrl	equ	0xFF6
 22660                           tablat	equ	0xFF5
 22661                           prodh	equ	0xFF4
 22662                           prodl	equ	0xFF3
 22663                           intcon	equ	0xFF2
 22664                           postinc0	equ	0xFEE
 22665                           wreg	equ	0xFE8
 22666                           indf1	equ	0xFE7
 22667                           fsr1h	equ	0xFE2
 22668                           fsr1l	equ	0xFE1
 22669                           indf2	equ	0xFDF
 22670                           postinc2	equ	0xFDE
 22671                           postdec2	equ	0xFDD
 22672                           plusw2	equ	0xFDB
 22673                           fsr2h	equ	0xFDA
 22674                           fsr2l	equ	0xFD9
 22675                           status	equ	0xFD8
 22676                           
 22677 ;; *************** function _TMRapp_Tick *****************
 22678 ;; Defined at:
 22679 ;;		line 10 in file "../Includes/Drivers/TMRapp.c"
 22680 ;; Parameters:    Size  Location     Type
 22681 ;;		None
 22682 ;; Auto vars:     Size  Location     Type
 22683 ;;		None
 22684 ;; Return value:  Size  Location     Type
 22685 ;;                  1    wreg      void 
 22686 ;; Registers used:
 22687 ;;		None
 22688 ;; Tracked objects:
 22689 ;;		On entry : 0/0
 22690 ;;		On exit  : F/0
 22691 ;;		Unchanged: 0/0
 22692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22693 ;;      Params:         0       0       0       0       0       0       0       0       0
 22694 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22695 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22696 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22697 ;;Total ram usage:        0 bytes
 22698 ;; Hardware stack levels used:    1
 22699 ;; This function calls:
 22700 ;;		Nothing
 22701 ;; This function is called by:
 22702 ;;		_INTERRUPT_InterruptManager
 22703 ;; This function uses a non-reentrant model
 22704 ;;
 22705                           
 22706                           	psect	text114
 22707  003B10                     __ptext114:
 22708                           	opt stack 0
 22709  003B10                     _TMRapp_Tick:
 22710                           	opt stack 19
 22711                           
 22712                           ;TMRapp.c: 13: appTimer.mSecTick = 1;
 22713                           
 22714                           ;incstack = 0
 22715  003B10  0100               	movlb	0	; () banked
 22716  003B12  81F5               	bsf	_appTimer& (0+255),0,b
 22717                           
 22718                           ; BSR set to: 0
 22719  003B14  0012               	return		;funcret
 22720  003B16                     __end_of_TMRapp_Tick:
 22721                           	opt stack 0
 22722                           tosu	equ	0xFFF
 22723                           tosh	equ	0xFFE
 22724                           tosl	equ	0xFFD
 22725                           pclatu	equ	0xFFB
 22726                           pclath	equ	0xFFA
 22727                           tblptru	equ	0xFF8
 22728                           tblptrh	equ	0xFF7
 22729                           tblptrl	equ	0xFF6
 22730                           tablat	equ	0xFF5
 22731                           prodh	equ	0xFF4
 22732                           prodl	equ	0xFF3
 22733                           intcon	equ	0xFF2
 22734                           postinc0	equ	0xFEE
 22735                           wreg	equ	0xFE8
 22736                           indf1	equ	0xFE7
 22737                           fsr1h	equ	0xFE2
 22738                           fsr1l	equ	0xFE1
 22739                           indf2	equ	0xFDF
 22740                           postinc2	equ	0xFDE
 22741                           postdec2	equ	0xFDD
 22742                           plusw2	equ	0xFDB
 22743                           fsr2h	equ	0xFDA
 22744                           fsr2l	equ	0xFD9
 22745                           status	equ	0xFD8
 22746                           
 22747 ;; *************** function _TMR1_ISR *****************
 22748 ;; Defined at:
 22749 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 22750 ;; Parameters:    Size  Location     Type
 22751 ;;		None
 22752 ;; Auto vars:     Size  Location     Type
 22753 ;;		None
 22754 ;; Return value:  Size  Location     Type
 22755 ;;                  1    wreg      void 
 22756 ;; Registers used:
 22757 ;;		None
 22758 ;; Tracked objects:
 22759 ;;		On entry : 0/0
 22760 ;;		On exit  : 0/0
 22761 ;;		Unchanged: 0/0
 22762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22763 ;;      Params:         0       0       0       0       0       0       0       0       0
 22764 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22765 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22766 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22767 ;;Total ram usage:        0 bytes
 22768 ;; Hardware stack levels used:    1
 22769 ;; This function calls:
 22770 ;;		Nothing
 22771 ;; This function is called by:
 22772 ;;		_INTERRUPT_InterruptManager
 22773 ;; This function uses a non-reentrant model
 22774 ;;
 22775                           
 22776                           	psect	text115
 22777  003B38                     __ptext115:
 22778                           	opt stack 0
 22779  003B38                     _TMR1_ISR:
 22780                           	opt stack 19
 22781                           
 22782                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 22783                           
 22784                           ; BSR set to: 0
 22785                           ;incstack = 0
 22786  003B38  909E               	bcf	3998,0,c	;volatile
 22787                           
 22788                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 22789  003B3A  C13C  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 22790                           
 22791                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 22792  003B3E  C13B  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 22793  003B42  0012               	return		;funcret
 22794  003B44                     __end_of_TMR1_ISR:
 22795                           	opt stack 0
 22796                           tosu	equ	0xFFF
 22797                           tosh	equ	0xFFE
 22798                           tosl	equ	0xFFD
 22799                           pclatu	equ	0xFFB
 22800                           pclath	equ	0xFFA
 22801                           tblptru	equ	0xFF8
 22802                           tblptrh	equ	0xFF7
 22803                           tblptrl	equ	0xFF6
 22804                           tablat	equ	0xFF5
 22805                           prodh	equ	0xFF4
 22806                           prodl	equ	0xFF3
 22807                           intcon	equ	0xFF2
 22808                           postinc0	equ	0xFEE
 22809                           wreg	equ	0xFE8
 22810                           indf1	equ	0xFE7
 22811                           fsr1h	equ	0xFE2
 22812                           fsr1l	equ	0xFE1
 22813                           indf2	equ	0xFDF
 22814                           postinc2	equ	0xFDE
 22815                           postdec2	equ	0xFDD
 22816                           plusw2	equ	0xFDB
 22817                           fsr2h	equ	0xFDA
 22818                           fsr2l	equ	0xFD9
 22819                           status	equ	0xFD8
 22820                           
 22821 ;; *************** function _EUSART_Transmit_ISR *****************
 22822 ;; Defined at:
 22823 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 22824 ;; Parameters:    Size  Location     Type
 22825 ;;		None
 22826 ;; Auto vars:     Size  Location     Type
 22827 ;;		None
 22828 ;; Return value:  Size  Location     Type
 22829 ;;                  1    wreg      void 
 22830 ;; Registers used:
 22831 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22832 ;; Tracked objects:
 22833 ;;		On entry : 0/0
 22834 ;;		On exit  : 0/0
 22835 ;;		Unchanged: 0/0
 22836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22837 ;;      Params:         0       0       0       0       0       0       0       0       0
 22838 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22839 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22840 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22841 ;;Total ram usage:        0 bytes
 22842 ;; Hardware stack levels used:    1
 22843 ;; This function calls:
 22844 ;;		Nothing
 22845 ;; This function is called by:
 22846 ;;		_INTERRUPT_InterruptManager
 22847 ;; This function uses a non-reentrant model
 22848 ;;
 22849                           
 22850                           	psect	text116
 22851  003DE4                     __ptext116:
 22852                           	opt stack 0
 22853  003DE4                     _EUSART_Transmit_ISR:
 22854                           	opt stack 19
 22855                           
 22856                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 22857                           
 22858                           ;incstack = 0
 22859  003DE4  0E40               	movlw	64
 22860  003DE6  6023               	cpfslt	_eusartTxBufferRemaining,c
 22861  003DE8  D00F               	goto	i2l944
 22862                           
 22863                           ;eusart.c: 167: {
 22864                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 22865  003DEA  0E40               	movlw	low _eusartTxBuffer
 22866  003DEC  2425               	addwf	_eusartTxTail,w,c
 22867  003DEE  6ED9               	movwf	fsr2l,c
 22868  003DF0  6ADA               	clrf	fsr2h,c
 22869  003DF2  0E02               	movlw	high _eusartTxBuffer
 22870  003DF4  22DA               	addwfc	fsr2h,f,c
 22871  003DF6  50DF               	movf	indf2,w,c
 22872  003DF8  6EAD               	movwf	4013,c	;volatile
 22873  003DFA  2A25               	incf	_eusartTxTail,f,c
 22874                           
 22875                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 22876  003DFC  0E3F               	movlw	63
 22877  003DFE  6425               	cpfsgt	_eusartTxTail,c
 22878  003E00  D001               	goto	i2l8967
 22879                           
 22880                           ;eusart.c: 170: {
 22881                           ;eusart.c: 171: eusartTxTail = 0;
 22882  003E02  6A25               	clrf	_eusartTxTail,c
 22883  003E04                     i2l8967:
 22884                           
 22885                           ;eusart.c: 172: }
 22886                           ;eusart.c: 173: eusartTxBufferRemaining++;
 22887  003E04  2A23               	incf	_eusartTxBufferRemaining,f,c	;volatile
 22888                           
 22889                           ;eusart.c: 174: }
 22890  003E06  0012               	return	
 22891  003E08                     i2l944:
 22892                           
 22893                           ;eusart.c: 175: else
 22894                           ;eusart.c: 176: {
 22895                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 22896  003E08  989D               	bcf	3997,4,c	;volatile
 22897  003E0A  0012               	return		;funcret
 22898  003E0C                     __end_of_EUSART_Transmit_ISR:
 22899                           	opt stack 0
 22900                           tosu	equ	0xFFF
 22901                           tosh	equ	0xFFE
 22902                           tosl	equ	0xFFD
 22903                           pclatu	equ	0xFFB
 22904                           pclath	equ	0xFFA
 22905                           tblptru	equ	0xFF8
 22906                           tblptrh	equ	0xFF7
 22907                           tblptrl	equ	0xFF6
 22908                           tablat	equ	0xFF5
 22909                           prodh	equ	0xFF4
 22910                           prodl	equ	0xFF3
 22911                           intcon	equ	0xFF2
 22912                           postinc0	equ	0xFEE
 22913                           wreg	equ	0xFE8
 22914                           indf1	equ	0xFE7
 22915                           fsr1h	equ	0xFE2
 22916                           fsr1l	equ	0xFE1
 22917                           indf2	equ	0xFDF
 22918                           postinc2	equ	0xFDE
 22919                           postdec2	equ	0xFDD
 22920                           plusw2	equ	0xFDB
 22921                           fsr2h	equ	0xFDA
 22922                           fsr2l	equ	0xFD9
 22923                           status	equ	0xFD8
 22924                           
 22925 ;; *************** function _EUSART_Receive_ISR *****************
 22926 ;; Defined at:
 22927 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 22928 ;; Parameters:    Size  Location     Type
 22929 ;;		None
 22930 ;; Auto vars:     Size  Location     Type
 22931 ;;		None
 22932 ;; Return value:  Size  Location     Type
 22933 ;;                  1    wreg      void 
 22934 ;; Registers used:
 22935 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22936 ;; Tracked objects:
 22937 ;;		On entry : 0/0
 22938 ;;		On exit  : 0/0
 22939 ;;		Unchanged: 0/0
 22940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22941 ;;      Params:         0       0       0       0       0       0       0       0       0
 22942 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22943 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22944 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22945 ;;Total ram usage:        0 bytes
 22946 ;; Hardware stack levels used:    1
 22947 ;; This function calls:
 22948 ;;		Nothing
 22949 ;; This function is called by:
 22950 ;;		_INTERRUPT_InterruptManager
 22951 ;; This function uses a non-reentrant model
 22952 ;;
 22953                           
 22954                           	psect	text117
 22955  003E5C                     __ptext117:
 22956                           	opt stack 0
 22957  003E5C                     _EUSART_Receive_ISR:
 22958                           	opt stack 19
 22959                           
 22960                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 22961                           
 22962                           ;incstack = 0
 22963  003E5C  A2AB               	btfss	4011,1,c	;volatile
 22964  003E5E  D003               	goto	i2l8973
 22965                           
 22966                           ;eusart.c: 184: {
 22967                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 22968  003E60  98AB               	bcf	4011,4,c	;volatile
 22969                           
 22970                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 22971  003E62  88AB               	bsf	4011,4,c	;volatile
 22972                           
 22973                           ;eusart.c: 189: }
 22974  003E64  0012               	return	
 22975  003E66                     i2l8973:
 22976                           
 22977                           ;eusart.c: 190: else
 22978                           ;eusart.c: 191: {
 22979                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 22980  003E66  0E00               	movlw	low _eusartRxBuffer
 22981  003E68  0101               	movlb	1	; () banked
 22982  003E6A  254E               	addwf	_eusartRxHead& (0+255),w,b
 22983  003E6C  6ED9               	movwf	fsr2l,c
 22984  003E6E  6ADA               	clrf	fsr2h,c
 22985  003E70  0E02               	movlw	high _eusartRxBuffer
 22986  003E72  22DA               	addwfc	fsr2h,f,c
 22987  003E74  CFAE FFDF          	movff	4014,indf2	;volatile
 22988                           
 22989                           ; BSR set to: 1
 22990  003E78  2B4E               	incf	_eusartRxHead& (0+255),f,b
 22991                           
 22992                           ; BSR set to: 1
 22993                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 22994  003E7A  0E3F               	movlw	63
 22995  003E7C  654E               	cpfsgt	_eusartRxHead& (0+255),b
 22996  003E7E  D001               	goto	i2l8981
 22997                           
 22998                           ; BSR set to: 1
 22999                           ;eusart.c: 195: {
 23000                           ;eusart.c: 196: eusartRxHead = 0;
 23001  003E80  6B4E               	clrf	_eusartRxHead& (0+255),b
 23002  003E82                     i2l8981:
 23003                           
 23004                           ; BSR set to: 1
 23005                           ;eusart.c: 197: }
 23006                           ;eusart.c: 198: eusartRxCount++;
 23007  003E82  2A22               	incf	_eusartRxCount,f,c	;volatile
 23008  003E84  0012               	return		;funcret
 23009  003E86                     __end_of_EUSART_Receive_ISR:
 23010                           	opt stack 0
 23011                           tosu	equ	0xFFF
 23012                           tosh	equ	0xFFE
 23013                           tosl	equ	0xFFD
 23014                           pclatu	equ	0xFFB
 23015                           pclath	equ	0xFFA
 23016                           tblptru	equ	0xFF8
 23017                           tblptrh	equ	0xFF7
 23018                           tblptrl	equ	0xFF6
 23019                           tablat	equ	0xFF5
 23020                           prodh	equ	0xFF4
 23021                           prodl	equ	0xFF3
 23022                           intcon	equ	0xFF2
 23023                           postinc0	equ	0xFEE
 23024                           wreg	equ	0xFE8
 23025                           indf1	equ	0xFE7
 23026                           fsr1h	equ	0xFE2
 23027                           fsr1l	equ	0xFE1
 23028                           indf2	equ	0xFDF
 23029                           postinc2	equ	0xFDE
 23030                           postdec2	equ	0xFDD
 23031                           plusw2	equ	0xFDB
 23032                           fsr2h	equ	0xFDA
 23033                           fsr2l	equ	0xFD9
 23034                           status	equ	0xFD8
 23035                           
 23036 ;; *************** function _CMP1_ISR *****************
 23037 ;; Defined at:
 23038 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 23039 ;; Parameters:    Size  Location     Type
 23040 ;;		None
 23041 ;; Auto vars:     Size  Location     Type
 23042 ;;		None
 23043 ;; Return value:  Size  Location     Type
 23044 ;;                  1    wreg      void 
 23045 ;; Registers used:
 23046 ;;		None
 23047 ;; Tracked objects:
 23048 ;;		On entry : 0/0
 23049 ;;		On exit  : 0/0
 23050 ;;		Unchanged: 0/0
 23051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23052 ;;      Params:         0       0       0       0       0       0       0       0       0
 23053 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23054 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23055 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23056 ;;Total ram usage:        0 bytes
 23057 ;; Hardware stack levels used:    1
 23058 ;; This function calls:
 23059 ;;		Nothing
 23060 ;; This function is called by:
 23061 ;;		_INTERRUPT_InterruptManager
 23062 ;; This function uses a non-reentrant model
 23063 ;;
 23064                           
 23065                           	psect	text118
 23066  003AFC                     __ptext118:
 23067                           	opt stack 0
 23068  003AFC                     _CMP1_ISR:
 23069                           	opt stack 19
 23070                           
 23071                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 23072                           
 23073                           ;incstack = 0
 23074  003AFC  9CA1               	bcf	4001,6,c	;volatile
 23075  003AFE  0012               	return		;funcret
 23076  003B00                     __end_of_CMP1_ISR:
 23077                           	opt stack 0
 23078                           tosu	equ	0xFFF
 23079                           tosh	equ	0xFFE
 23080                           tosl	equ	0xFFD
 23081                           pclatu	equ	0xFFB
 23082                           pclath	equ	0xFFA
 23083                           tblptru	equ	0xFF8
 23084                           tblptrh	equ	0xFF7
 23085                           tblptrl	equ	0xFF6
 23086                           tablat	equ	0xFF5
 23087                           prodh	equ	0xFF4
 23088                           prodl	equ	0xFF3
 23089                           intcon	equ	0xFF2
 23090                           postinc0	equ	0xFEE
 23091                           wreg	equ	0xFE8
 23092                           indf1	equ	0xFE7
 23093                           fsr1h	equ	0xFE2
 23094                           fsr1l	equ	0xFE1
 23095                           indf2	equ	0xFDF
 23096                           postinc2	equ	0xFDE
 23097                           postdec2	equ	0xFDD
 23098                           plusw2	equ	0xFDB
 23099                           fsr2h	equ	0xFDA
 23100                           fsr2l	equ	0xFD9
 23101                           status	equ	0xFD8
 23102                           tosu	equ	0xFFF
 23103                           tosh	equ	0xFFE
 23104                           tosl	equ	0xFFD
 23105                           pclatu	equ	0xFFB
 23106                           pclath	equ	0xFFA
 23107                           tblptru	equ	0xFF8
 23108                           tblptrh	equ	0xFF7
 23109                           tblptrl	equ	0xFF6
 23110                           tablat	equ	0xFF5
 23111                           prodh	equ	0xFF4
 23112                           prodl	equ	0xFF3
 23113                           intcon	equ	0xFF2
 23114                           postinc0	equ	0xFEE
 23115                           wreg	equ	0xFE8
 23116                           indf1	equ	0xFE7
 23117                           fsr1h	equ	0xFE2
 23118                           fsr1l	equ	0xFE1
 23119                           indf2	equ	0xFDF
 23120                           postinc2	equ	0xFDE
 23121                           postdec2	equ	0xFDD
 23122                           plusw2	equ	0xFDB
 23123                           fsr2h	equ	0xFDA
 23124                           fsr2l	equ	0xFD9
 23125                           status	equ	0xFD8
 23126                           
 23127                           	psect	text119
 23128  000000                     __ptext119:
 23129                           	opt stack 0
 23130                           tosu	equ	0xFFF
 23131                           tosh	equ	0xFFE
 23132                           tosl	equ	0xFFD
 23133                           pclatu	equ	0xFFB
 23134                           pclath	equ	0xFFA
 23135                           tblptru	equ	0xFF8
 23136                           tblptrh	equ	0xFF7
 23137                           tblptrl	equ	0xFF6
 23138                           tablat	equ	0xFF5
 23139                           prodh	equ	0xFF4
 23140                           prodl	equ	0xFF3
 23141                           intcon	equ	0xFF2
 23142                           postinc0	equ	0xFEE
 23143                           wreg	equ	0xFE8
 23144                           indf1	equ	0xFE7
 23145                           fsr1h	equ	0xFE2
 23146                           fsr1l	equ	0xFE1
 23147                           indf2	equ	0xFDF
 23148                           postinc2	equ	0xFDE
 23149                           postdec2	equ	0xFDD
 23150                           plusw2	equ	0xFDB
 23151                           fsr2h	equ	0xFDA
 23152                           fsr2l	equ	0xFD9
 23153                           status	equ	0xFD8
 23154                           
 23155                           	psect	rparam
 23156  0000                     tosu	equ	0xFFF
 23157                           tosh	equ	0xFFE
 23158                           tosl	equ	0xFFD
 23159                           pclatu	equ	0xFFB
 23160                           pclath	equ	0xFFA
 23161                           tblptru	equ	0xFF8
 23162                           tblptrh	equ	0xFF7
 23163                           tblptrl	equ	0xFF6
 23164                           tablat	equ	0xFF5
 23165                           prodh	equ	0xFF4
 23166                           prodl	equ	0xFF3
 23167                           intcon	equ	0xFF2
 23168                           postinc0	equ	0xFEE
 23169                           wreg	equ	0xFE8
 23170                           indf1	equ	0xFE7
 23171                           fsr1h	equ	0xFE2
 23172                           fsr1l	equ	0xFE1
 23173                           indf2	equ	0xFDF
 23174                           postinc2	equ	0xFDE
 23175                           postdec2	equ	0xFDD
 23176                           plusw2	equ	0xFDB
 23177                           fsr2h	equ	0xFDA
 23178                           fsr2l	equ	0xFD9
 23179                           status	equ	0xFD8
 23180                           
 23181                           	psect	temp
 23182  00005A                     btemp:
 23183                           	opt stack 0
 23184  00005A                     	ds	1
 23185  0000                     int$flags	set	btemp
 23186                           tosu	equ	0xFFF
 23187                           tosh	equ	0xFFE
 23188                           tosl	equ	0xFFD
 23189                           pclatu	equ	0xFFB
 23190                           pclath	equ	0xFFA
 23191                           tblptru	equ	0xFF8
 23192                           tblptrh	equ	0xFF7
 23193                           tblptrl	equ	0xFF6
 23194                           tablat	equ	0xFF5
 23195                           prodh	equ	0xFF4
 23196                           prodl	equ	0xFF3
 23197                           intcon	equ	0xFF2
 23198                           postinc0	equ	0xFEE
 23199                           wreg	equ	0xFE8
 23200                           indf1	equ	0xFE7
 23201                           fsr1h	equ	0xFE2
 23202                           fsr1l	equ	0xFE1
 23203                           indf2	equ	0xFDF
 23204                           postinc2	equ	0xFDE
 23205                           postdec2	equ	0xFDD
 23206                           plusw2	equ	0xFDB
 23207                           fsr2h	equ	0xFDA
 23208                           fsr2l	equ	0xFD9
 23209                           status	equ	0xFD8


Data Sizes:
    Strings     1189
    Constant    987
    Data        4
    BSS         431
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      89
    BANK0           160    148     155
    BANK1           256      0     255
    BANK2           256      9     137
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_79(CODE[12]), STR_78(CODE[3]), STR_66(CODE[3]), STR_63(CODE[3]), 
		 -> STR_60(CODE[3]), STR_57(CODE[3]), STR_54(CODE[3]), STR_51(CODE[3]), 
		 -> STR_48(CODE[3]), STR_45(CODE[3]), STR_42(CODE[3]), STR_39(CODE[3]), 
		 -> STR_36(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> modemResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_76(CODE[6]), STR_73(CODE[24]), STR_70(CODE[32]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> moteJoiningProcess@buf(BANK0[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5295_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5295_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5295_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5295_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4018$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S4008$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4008$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3984$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3984$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3984$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3984$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> oled_putUint16@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_107(CODE[12]), STR_106(CODE[8]), 
		 -> STR_105(CODE[9]), STR_87(CODE[2]), STR_86(CODE[16]), STR_85(CODE[13]), 
		 -> STR_84(CODE[12]), STR_83(CODE[17]), STR_82(CODE[9]), STR_81(CODE[1]), 
		 -> STR_77(CODE[16]), STR_75(CODE[11]), STR_74(CODE[12]), STR_71(CODE[11]), 
		 -> moteJoiningProcess@buf(BANK0[50]), STR_69(CODE[15]), STR_68(CODE[16]), STR_65(CODE[7]), 
		 -> STR_62(CODE[9]), STR_59(CODE[8]), STR_56(CODE[7]), STR_53(CODE[8]), 
		 -> STR_50(CODE[10]), STR_47(CODE[9]), STR_44(CODE[10]), STR_41(CODE[7]), 
		 -> STR_38(CODE[8]), STR_35(CODE[8]), modemResonseBuffer(BANK1[64]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[8]), STR_28(CODE[17]), STR_27(CODE[17]), 
		 -> STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[9]), STR_23(CODE[10]), 
		 -> STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), 
		 -> STR_16(CODE[10]), STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), 
		 -> STR_8(CODE[12]), STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 12
		 -> dataBuffer(BANK1[12]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_88(CODE[10]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_104(CODE[26]), STR_103(CODE[26]), STR_102(CODE[26]), STR_101(CODE[26]), 
		 -> STR_100(CODE[1]), STR_99(CODE[9]), STR_98(CODE[13]), STR_97(CODE[13]), 
		 -> STR_96(CODE[13]), STR_95(CODE[13]), STR_94(CODE[13]), STR_93(CODE[13]), 
		 -> STR_92(CODE[13]), STR_91(CODE[13]), STR_90(CODE[16]), STR_89(CODE[15]), 
		 -> STR_80(CODE[10]), STR_72(CODE[11]), moteJoiningProcess@buf(BANK0[50]), STR_67(CODE[10]), 
		 -> STR_64(CODE[17]), STR_61(CODE[18]), STR_58(CODE[16]), STR_55(CODE[17]), 
		 -> STR_52(CODE[17]), STR_49(CODE[18]), STR_46(CODE[20]), STR_43(CODE[20]), 
		 -> STR_40(CODE[18]), STR_37(CODE[17]), STR_34(CODE[19]), STR_29(CODE[12]), 
		 -> STR_22(CODE[20]), STR_21(CODE[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _moteHandler->_moteJoiningProcess
    _moteRunningProcess->_oled_putUint16
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _oled_putUint16->_oled_putString
    _moteApp_add8bToDataBuffer->___lbdiv
    _moteApp_add8bToDataBuffer->___lbmod
    _moteApp_add16bToDataBuffer->___lwmod
    _oled_displayOff->_oled_writeCommand
    _modemSleep->_moteApp_delayms
    _modemResync->_moteApp_delayms
    _MOTEapp_getModemResponse->_EUSART_Read
    _ADC_TempConversion->___lwdiv
    _moteJoiningProcess->___fltol
    _sprintf->___lwmod
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_writeCommand
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _TMRapp_Handler->___lwmod
    ___lwmod->___lwdiv
    _USBapp_Handler->_oled_putString
    _oled_putString->_oled_putChar
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _oled_writeData->_SPI_Exchange8bit
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _oled_writeCommand->_SPI_Exchange8bit
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  257033
                    _DATAEE_ReadByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                        _modemResync
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                         11    11      0  193346
                                            146 BANK0      2     2      0
                                              0 BANK2      9     9      0
                  _ADC_GetConversion
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
           _MOTEapp_getModemResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                    _moteApp_delayms
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  11     8      3  108983
                                             28 BANK0      9     6      3
                  _ADC_GetConversion
                 _ADC_TempConversion
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
                    _sendDataCommand
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1012
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     158
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   21767
                                             18 BANK0      9     7      2
                            ___lbdiv
                            ___lbmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint16                                      10     6      4   26943
                                             18 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 3     3      0     297
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            2     1      1    1975
                                              4 BANK0      2     1      1
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     856
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     657
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           3     0      3    7159
                                             12 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   20433
                                             15 BANK0      1     1      0
                 _EUSART_FlushBuffer
                  _EUSART_Initialize
             _PIN_MANAGER_Initialize
                        _modemResync
                         _modemSleep
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      93
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _modemSleep                                           0     0      0    9213
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _modemResync                                          3     3      0    9491
                                              5 BANK0      3     3      0
           _MOTEapp_getModemResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (5) _MOTEapp_getModemResponse                             2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   2     2      0    2594
                                              7 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                  72    71      1   50622
                                             74 BANK0     72    71      1
                  _ADC_GetConversion
                   _DATAEE_WriteByte
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _moteApp_delayms
                         _nibble2int
                         _oled_clear
                          _oled_init
                     _oled_putString
                        _sendCommand
                            _sprintf
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     1      6     443
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               9     5      4    2459
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             35    23     12    9159
                                             12 BANK0     26    14     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     440
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    2529
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _sendCommand                                          2     0      2    3509
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (4) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1512
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0      62
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _nibble2int                                           1     1      0     279
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_delayms                                      5     3      2    5704
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     580
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     441
                                             64 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2749
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1960
                                             39 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     200
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    3976
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3976
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       0     0      0   25042
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (1) _oled_putString                                       5     1      4   19296
                                             13 BANK0      5     1      4
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_clear                                           0     0      0    1188
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (3) _oled_clearRow                                        2     2      0    1188
                                             13 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_putChar                                        10     8      2    1058
                                              3 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (3) _oled_writeData                                       1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _Set_Page_Address                                     1     1      0      96
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _Set_Column_Address                                   1     1      0     124
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_writeCommand                                    1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bit                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4558
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     209
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2146
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         4     4      0    2104
                                              7 BANK0      4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1866
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   30065
                                             32 COMRAM    12    12      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (12) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   30065
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   17700
                                             28 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             7     7      0    4286
                                             21 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (14) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     500
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     500
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     501
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _USART_mySetLineCodingHandler                        4     4      0     386
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (12) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _USBapp_handlerState
   _modemResync
     _MOTEapp_getModemResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_GetConversion
     _ADC_TempConversion
       ___lwdiv
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModemResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___lwmod
         ___lwdiv (ARG)
     _moteApp_delayms
     _moteJoiningProcess
       _ADC_GetConversion
       _DATAEE_WriteByte
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _moteApp_delayms
       _nibble2int
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_init
         _oled_clear
           _oled_clearRow
             _oled_putChar
               _Set_Column_Address
                 _oled_writeCommand
                   _SPI_Exchange8bit
               _Set_Page_Address
                 _oled_writeCommand
                   _SPI_Exchange8bit
               _oled_writeData
                 _SPI_Exchange8bit
         _oled_devInit
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_setDisplay
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_setFont
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _EUSART_Initialize
         _PIN_MANAGER_Initialize
         _modemResync
           _MOTEapp_getModemResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _modemSleep
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_displayOff
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _Set_Page_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _oled_writeData
                   _SPI_Exchange8bit
           _oled_devInit
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setDisplay
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _moteApp_add8bToDataBuffer
         ___lbdiv
         ___lbmod
       _moteApp_clearBuffers
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___lbdiv
         ___lbmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_devInit
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setDisplay
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setFont
   _oled_putString
     _oled_putChar
       _Set_Column_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _Set_Page_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _oled_writeData
         _SPI_Exchange8bit

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      9      89       9       53.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     94      9B       5       96.9%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      59       1       94.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     27C      14        0.0%
DATA                 0      0     27C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Apr 21 03:46:12 2016

                            _SPI_Initialize 3B68                                  _USB_SD_Ptr 7791  
                              ___fldiv@aexp 009F                                ___fldiv@bexp 009E  
                              ___fldiv@sign 0093                 ?_moteApp_add16bToDataBuffer 006C  
                                        l52 53A2                           ??_CMP1_Initialize 0060  
                                _USB_Buffer 0156                         moteRunningProcess@i 0083  
                             _USBDeviceInit 5804                         ___wmul@multiplicand 0062  
                   EUSART_FlushBuffer@index 0060                      __end_of_oled_writeData 3B5C  
                        __size_of_CDCInitEP 0054                    USBapp_handlerState@state 0060  
                              __CFG_CP0$OFF 000000                      moteJoiningProcess@batt 00EF  
                              __CFG_CP1$OFF 000000                                __CFG_CP2$OFF 000000  
                              __CFG_CP3$OFF 000000                      moteJoiningProcess@mode 0141  
      USER_USB_CALLBACK_EVENT_HANDLER@event 003B        USER_USB_CALLBACK_EVENT_HANDLER@pdata 003D  
                                       l304 45EE                                         l330 633A  
                                       l307 4628                                         l316 3D20  
               __end_of_USBStdGetDscHandler 5BC8                                         l344 63F8  
                                       l441 7494                                         l434 7370  
                                       l372 6E7C                                         l381 6F52  
                                       l367 6E74                                         l608 3E28  
                                       l456 76F0                                         l714 51CA  
                                       l490 62E0                                         l576 46FC  
                                       l692 492E                                         _BDT 000400  
                                       _CKE 007E3E                                         l776 44EC  
                                       l929 3FC4                                         l938 4008  
                                       l699 499C                                         _CKP 007E34  
                                       _GIE 007F97                                __CFG_CPB$OFF 000000  
                                       _PR2 000FBB                                __CFG_CPD$OFF 000000  
                        _moteJoiningProcess 6E60                                         _UIE 000F64  
                                       _UIR 000F65                             _timer1ReloadVal 013B  
                                _USBSuspend 3C7C                __end_of_moteApp_clearBuffers 4322  
                      USBStdSetCfgHandler@i 0043                             _TMR2_Initialize 3B76  
                                       prod 000FF3                                         tosl 000FFD  
                                       wreg 000FE8                              _USBDeviceTasks 5BC8  
                            _USBDeviceState 00F4                                ___flmul@aexp 007B  
                              ___flmul@bexp 007C                                ___flmul@sign 007A  
                              ___flmul@temp 0085                                ___flmul@prod 0081  
                     moteApp_delayms@length 0060                       ??_USBCtrlTrfRxService 003F  
                  __size_ofi2_USBDeviceInit 00E4                              ??_getsUSBUSART 006A  
                              ?_EUSART_Read 002E                    USBEnableEndpoint@options 0036  
                              __CFG_LVP$OFF 000000                         ?_moteJoiningProcess 00AA  
                              ___fltol@exp1 00A9                                        l1023 3C3E  
                                      l1057 40EE                                        l1085 3B8E  
                                      l1229 412E                                        l1503 3EFC  
                                      l2303 4282                                        l1504 3EFA  
                                      l2313 41EE                                        l2402 65E4  
                                      l2420 6698                                        l2413 6646  
                                      l2414 6642                                        l2430 692A  
                                      l2441 6B04                                        l2442 6B00  
                                      l2426 68FE                                        l2435 693A  
                USBConfigureEndpoint@handle 0034                                        l1807 5D42  
                                      l2392 64EC                                        l2480 5E86  
                                      l2449 6B54                                        l2473 5E22  
                                      l2396 6518                                        l2487 5EB2  
                                      l1863 6C56                                        l1768 4D18  
                                      l2488 5EBA                                        l1848 6B9C  
                                      l1881 6D2C                                        l1882 6D30  
                                      l1798 5CEE                                        l9305 446C  
                                      l9245 3FFA                                        l9237 48D2  
                                      l9309 4496                                        l9263 3FC6  
                                      l9273 3FEC                                        l9257 4024  
                                      l9329 42B6                                        l9337 42D2  
                                      l9601 3E3E                                        l9259 4026  
                                      l9435 460C                                        l9445 4632  
                                      l9621 4252                                        l9437 4614  
                                      l9535 4FC4                                        l9703 416A  
                                      l9623 425A                                        l9439 461A  
                                      l9471 3DD2                                        l9529 4FA0  
                                      l9289 3CDC                                        l9449 463A  
                                      l9641 41C6                                        l9297 3E12  
                                      l9633 4278                                        l9625 425E  
                                      l9561 3D0A                                        l9609 3E54  
                                      l9547 501C                                        l9643 41CE  
                                      l9811 6C92                                        l9731 49A4  
                                      l9723 46BC                                        l9645 41D2  
                                      l9901 6E56                                        l9581 4076  
                                      l9831 6CC2                                        l9807 6C7E  
                                      l9727 46E0                                        l9719 4696  
                                      l9583 407A                                        l9649 41E4  
                                      l9825 6CBE                                        l9817 6C96  
                                      l9841 6CEA                                        l9753 4A0A  
                                      l9761 4A1A                                        l9729 46E8  
                                      l9497 3F38                                        l9577 4070  
                                      l9593 4092                                        l9843 6CF4  
                                      l9931 42DA                                        l9693 4158  
                                      l9773 6BA4                                        l9749 49FC  
                                      l9589 408A                                        l9941 42F2  
                                      l9791 6C28                                        l9783 6BD0  
                                      l9767 6B88                                        l9951 430A  
                                      STR_1 7DB6                                        STR_2 7DA7  
                                      l9881 6D98                                        l9849 6D0A  
                                      l9777 6BAA                                        STR_3 7DC5  
                                      STR_4 7F81                                        l9891 6E22  
                                      l9883 6D9E                                        l9875 6D82  
                                      l9859 6D4A                                        l9867 6D64  
                                      l9795 6C2C                                        l9885 6DE0  
                                      l9893 6E2C                                        l9869 6D6A  
                                      STR_7 7D79                                        STR_8 7EB9  
                                      l9991 4E52                                        STR_9 7F8A  
                                      l9897 6E38                                        l9899 6E3E  
                                      l9987 4E3C                                        l9997 4E62  
           __size_of_MOTEapp_TimerBasedTask 0014                                        _PEIE 007F96  
                                      u8210 465A                                        u8230 4688  
                     ??_USBCtrlTrfTxService 002E                                        u8080 448C  
                                      u8217 4650                                        u8090 44B6  
                                      u8237 467E                                        u8087 4482  
                                      _UCFG 000F62                                        u8097 44AC  
                                      u9500 4C90                                        _UEP0 000F6A  
                                      _UEP1 000F6B                                        u9280 6672  
                                      u9505 4C86                                        _UEIE 000F66  
                                      u9460 6B30                                        u8805 413E  
                                      u8806 4140                                        _UEIR 000F67  
                                      _UCON 000F60                                        _TMR2 000FBC  
                           _CDCDataInHandle 0131      USBStdFeatureReqHandler@current_ep_data 0047  
                                      _pDst 0137                                        _main 5312  
                  ??i2_USBTransferOnePacket 0032           __end_of_moteApp_add8bToDataBuffer 47D2  
                                      fsr1h 000FE2                                        fsr2h 000FDA  
                                      indf1 000FE7                                        fsr1l 000FE1  
                                      indf2 000FDF                                        fsr2l 000FD9  
                           _USBDeviceAttach 3EDA                                        btemp 005A  
                             __CFG_BORV$190 000000                                        pclat 000FFA  
                                      prodh 000FF4                                        prodl 000FF3  
                      _USBapp_setrxByteFlag 3B16                                        start 10AA  
                           ?_oled_putUint16 0072                               __CFG_IESO$OFF 000000  
                           ___fldiv@new_exp 0098                             __end_of_EndLine 3B68  
                    __end_of_SPI_Initialize 3B76                            __end_of_CMP1_ISR 3B00  
                           ?_oled_putString 006D                  __end_of_USBCheckStdRequest 4E3A  
                    ??_USBCtrlTrfOutHandler 0041                 __size_of_moteRunningProcess 01A8  
                          ?_oled_setDisplay 002E                               __CFG_MCLRE$ON 000000  
                          _modemBufferIndex 0026                                ___param_bank 000010  
                 ??_USBStdFeatureReqHandler 0043                                 _TMRapp_Tick 3B10  
                      ??_moteJoiningProcess 00AB                      moteApp_delayms@counter 0063  
             ?_USART_mySetLineCodingHandler 002E                      sendDataCommand@appData 0063  
                         sendCommand@string 0061                    ??_USBStdGetStatusHandler 002E  
              __end_of_USBapp_getrxByteFlag 3B0C                   __size_of_DATAEE_WriteByte 003A  
                            ?_USBDeviceInit 002E                               ?_EUSART_Write 002E  
                      oled_putUint16@number 0072              __size_of_OSCILLATOR_Initialize 0016  
                           ?_oled_writeData 002E               __end_of_OSCILLATOR_Initialize 3C48  
                                     l10011 4ED2                                       l10111 4D70  
                                     l10007 4E98                                       l10105 4D4E  
                                     l10203 5DC0                                       l10107 4D52  
                                     l10115 4D94                                       l10205 5DDE  
                                     l10151 5D06                                       l10135 3CB4  
                                     l10223 64E8                                       l11023 6270  
                                     l11201 585A                                       l10161 5D34  
                                     l10321 66A4                                       l11041 62D6  
                                     l10155 5D0E                                       l10147 5CFE  
                                     l10323 66A6                                       l10315 667E  
                                     l10411 6AD4                                       l10083 4754  
                                     l11019 6266                                       l11301 4986  
                                     l10317 668A                                       l10309 6666  
                                     l10253 654C                                       l10405 6AB6  
                                     l10501 5E58                                       l10175 5D5E  
                                     l10183 5D80                                       l10167 5D46  
                                     l10239 6514                                       l10431 6B3C  
                                     l10415 6AFA                                       l10343 68FA  
                                     l10511 5EA8                                       l10503 5E70  
                                     l10079 4750                                       l11047 62DC  
                                     l11225 587A                                       l11209 5864  
                                     l10185 5D88                                       l10193 5DAA  
                                     l11305 498C                                       l10281 65E2  
                                     l10257 655A                                       l10433 6B48  
                                     l10345 6906                                       l11401 6442  
                                     l11163 3ECA                                       l10195 5DB0  
                                     l11091 522A                                       l11075 51EE  
                                     l10275 65BE                                       l10267 6598  
                                     l10443 6B68                                       l10427 6B24  
                                     l10363 6944                                       l10451 4C68  
                                     l10523 5EEA                                       l11331 631E  
                                     l10293 6616                                       l10357 6926  
                                     l10453 4C72                                       l10509 5E9C  
                                     l10701 70A6                                       l11421 64C2  
                                     l11341 633E                                       l11325 630A  
                                     l11317 62F4                                       l11159 3EBA  
                                     l10287 65F8                                       l10359 6932  
                                     l10471 4CBC                                       l10631 6EF8  
                                     l10623 6ECC                                       l11415 6498  
                                     l10297 663C                                       l10801 7306  
                                     l10609 6E7E                                       l11345 634A  
                                     l11337 632A                                       l11195 5830  
                                     l10483 4CE8                                       l10475 4CC4  
                                     l10467 4CAC                                       l10715 70FA  
                                     l10627 6EE6                                       l11419 64AE  
                                     l11371 63AA                                       l11285 4930  
                                     l10477 4CD0                                       l10493 5E32  
                                     l10901 7608                                       l10645 6F5A  
                                     l11357 636A                                       l11381 63E4  
                                     l11461 53A4                                       l11295 4974  
                                     l10567 3C00                                       l10479 4CD4  
                                     l10807 7326                                       l10743 71A2  
                                     l10591 44F2                                       l10583 44C6  
                                     l10497 5E46                                       l10905 761C  
                                     l10841 73F0                                       l10729 714E  
                                     l10673 7000                                       l11299 497E  
                                     l10499 5E4C                                       l10923 766E  
                                     l10771 724A                                       l10659 6FAE  
                                     l10595 4506                                       l11467 53B4  
                                     l11475 53C6                                       l10909 762C  
                                     l10853 7438                                       l10845 7404  
                                     l10757 71F6                                       l10597 4508  
                                     l10589 44E8                                       l11389 63FA  
                                     l10943 76E6                                       l10687 7052  
                                     l10951 7708                                       l10599 450E  
                                     l10881 74B2                                       l10785 729E  
                                     l10953 7778                                       l10947 76F8  
                                     l10939 76D4                                       l10971 615E  
                                     l10797 72F6                                       l10799 7302  
                                     l10985 619A                               ___fltol@sign1 00A8  
                                     ?_main 002E                             __end_of___fldiv 66B0  
                           __end_of___lbdiv 4096                                       _EEADR 000FA9  
                                     STR_10 7E49                                       STR_11 7EC5  
                                     STR_20 7F93                                       STR_12 7E70  
                                     STR_21 7FFD                                       STR_13 7E56  
                                     STR_30 7EB1                                       STR_14 7E63  
                                     STR_22 7C22                                       STR_31 7F4B  
                                     STR_23 7F07                                       STR_15 7EF2  
                                     STR_24 7F6F                                       STR_32 7F54  
                                     STR_16 7F2F                                       STR_40 7C5B  
                                     STR_33 7FF8                                       STR_41 7FDD  
                                     STR_17 7F9C                                       STR_25 7CD4  
                                     STR_42 7EAA                                       STR_18 7FCD  
                                     STR_50 7F1B                                       STR_26 7D07  
                                     STR_34 7C36                                       STR_51 7EAA  
                                     STR_19 7FD5                                       STR_35 7FB5  
                                     STR_27 7D18                                       STR_43 7C0E  
                                     STR_60 7EAA                                       STR_36 7EAA  
                                     STR_44 7F25                                       STR_52 7CF6  
                                     STR_28 7C90                                       STR_45 7EAA  
                                     STR_53 7FAD                                       STR_29 7EAD  
                                     STR_37 7CA1                                       STR_61 7C49  
                                     STR_54 7EAA                                       STR_38 7FBD  
                                     STR_62 7F5D                                       STR_46 7BFA  
                                     STR_70 7B5A                                       STR_63 7EAA  
                                     STR_39 7EAA                                       STR_47 7F78  
                                     STR_71 7ED1                                       STR_55 7CB2  
                                     STR_80 7F11                                       STR_48 7EAA  
                                     STR_56 7FE4                                       STR_72 7EDC  
                                     STR_64 7CC3                                       STR_81 7B93  
                                     STR_57 7EAA                                       STR_65 7FEB  
                                     STR_49 7C6D                                       STR_73 7BE2  
                                     STR_66 7EAA                                       STR_82 7F42  
                                     STR_74 7E95                                       STR_90 7D69  
                                     STR_58 7D39                                       STR_59 7FC5  
                                     STR_67 7F11                                       STR_75 7EE7  
                                     STR_91 7DE1                                       STR_83 7CE5  
                                     STR_76 7FF2                                       STR_84 7E89  
                                     STR_92 7DEE                                       STR_68 7D59  
                           __end_of___lbmod 3E5C                                       STR_93 7DFB  
                                     STR_85 7DD4                                       STR_69 7D89  
                                     STR_77 7D49                                       STR_78 7EAA  
                                     STR_94 7E08                                       STR_86 7D29  
                                     STR_87 7FFB                                       STR_79 7EA1  
                                     STR_95 7E15                                       STR_88 7EFD  
                                     STR_96 7E22                             __end_of___flmul 6B7E  
                                     STR_97 7E2F                                       STR_89 7D98  
                                     STR_98 7E3C                                       STR_99 7F66  
         __size_of_USBCtrlEPServiceComplete 00E4                             __end_of___fltol 4CFA  
                           _TMR1_StartTimer 3B00                             __end_of___lldiv 48B6  
                                     u10100 7370           __size_of_MOTEapp_setResponseReady 0002  
                                     _T1CON 000FCD                      __end_of_USBDeviceTasks 5CD0  
                                     u10707 55A4                                       u10717 3E18  
                                     u10727 40E8                                       _T2CON 000FBA  
                                     u10677 556C                                       u10687 557A  
                   __end_of_sendDataCommand 4EDC                                       u10697 5590  
                 ?_USBCtrlEPServiceComplete 002E                             __end_of___lwdiv 428C  
                           __end_of___lwmod 41F8                   ?_MOTEapp_setResponseReady 002E  
                       oled_putUint8@number 0074                                       i2l944 3E08  
                                     _UADDR 000F63                                       i2l993 1076  
                                     i2l985 104A                                       i2l987 105A  
                                     i2l989 1066                                       _RCREG 000FAE  
                                     _RCSTA 000FAB                                       _TMR1H 000FCF  
                                     _TMR1L 000FCE                                       _SPBRG 000FAF  
  moteApp_add16bToDataBuffer@bufferLocation 006E     moteApp_add8bToDataBuffer@bufferLocation 0064  
                                     _USTAT 000F61                                       _TXREG 000FAD  
                                     _TXSTA 000FAC                               __CFG_WRT0$OFF 000000  
        __size_of_USBCtrlEPAllowStatusStage 00BC                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                           moteHandler@i_1501 0287  
                             __CFG_WRT3$OFF 000000                              __CFG_EBTR0$OFF 000000  
                            __CFG_FCMEN$OFF 000000                              __CFG_EBTR1$OFF 000000  
                            __CFG_EBTR2$OFF 000000                              __CFG_EBTR3$OFF 000000  
           __end_of_USBCtrlEPAllowDataStage 4BCE                           oled_putChar@index 006C  
                          __end_of_TMR1_ISR 3B44                                       _sd000 7B56  
                                     _sd001 7ADC             service_pushbutton@Release_Timer 0155  
                                     _sd002 7B10                               __CFG_WRTB$OFF 000000  
                    moteRunningProcess@Traw 0081                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                             _DATAEE_ReadByte 3BCC  
                            __CFG_EBTRB$OFF 000000                                  i2memset@p1 002E  
                           __end_of_dpowers 7789                                       _light 0135  
                           __end_of_isdigit 3D12                     __end_of_TMR1_Initialize 3FC2  
                              _runningState 0027                                       pclath 000FFA  
                                     tablat 000FF5                                       plusw2 000FDB  
                         __end_of_CDCInitEP 446A                  oled_setDisplay@displayType 0062  
                              ?_modemResync 002E                                       status 000FD8  
                            __CFG_T3CMX$RC0 000000                             __end_of_sprintf 6E60  
                           _TMR2_StartTimer 3B04                             __end_of_strncmp 46FC  
                           ___lbdiv@divisor 0060                              __CFG_ICPRT$OFF 000000  
                     ?_USBapp_setrxByteFlag 002E                            __end_ofi2_memset 3EB0  
                           ___lbdiv@counter 0062                                _m10SecTicker 0150  
                           ?_SPI_Initialize 002E                             putUSBUSART@data 0060  
        USART_mySetLineCodingHandler@dwBaud 003B                __size_of_USBStdSetCfgHandler 00B2  
                           __initialization 47D2                       TMR2_ReadTimer@readVal 0060  
             __size_of_TMRapp_ClearBitFlags 0004                                __end_of_main 53D2  
             __size_of_MOTEapp_handlerState 000A                      _MOTEapp_TimerBasedTask 3BF4  
                            ??_EUSART_Write 0060                     __end_of_TMR2_Initialize 3B86  
                              ?_sendCommand 0061                 ?_INTERRUPT_InterruptManager 002E  
               moteJoiningProcess@float_val 00FA                   __size_of_USBCtrlEPService 00B2  
                                    ??_main 00F4                                ?_moteHandler 002E  
                             __activetblptr 000002                          _modemResonseBuffer 0196  
                           ?_USBDeviceTasks 002E                         i2_EUSART_Initialize 3F06  
                     oled_putUint16@numData 0076                   sendDataCommand@dataLength 0065  
                               ?_USBSuspend 002E                                  _NextUSBOut 001A  
                               nibble2int@c 0060                              __CFG_SDOMX$RB3 000000  
                           __CFG_CCP2MX$RC1 000000                                _cdc_mem_type 014D  
                  __end_of_SPI_Exchange8bit 3B96                     __end_of_USBDeviceAttach 3F06  
                                    _ADCON0 000FC2                                      _ADCON1 000FC1  
                                    _ADCON2 000FC0                            _CDCDataOutHandle 0133  
               moteJoiningProcess@old_float 00E8                           _getsUSBUSART$5663 006B  
                                    _ACTCON 000FB5                                      STR_101 7BAE  
                                    STR_102 7BC8                                      STR_103 7B7A  
                                    STR_104 7B94                                      STR_105 7F39  
                                    STR_106 7FA5                                      _ADRESH 000FC4  
                                    STR_107 7E7D                                      STR_108 7C7F  
                                    _ADRESL 000FC3                                      _EEDATA 000FA8  
                                    _EECON2 000FA7           __size_of_MOTEapp_getModemResponse 004A  
                           getsUSBUSART@len 0069                                      _T1GCON 000FCC  
                      oled_putUint8@numData 0075                   ?_MOTEapp_getModemResponse 002E  
                     __size_of_CDCTxService 0112                                      i2l2250 48A4  
                                    i2l1604 41B6                                      i2l1454 5BF0  
                                    i2l1631 437A                                      i2l1528 56B0  
                                    i2l1464 5C6C                                      i2l1641 5538  
                                    i2l1633 43BE                                      i2l1465 5CCC  
                                    i2l1466 5C72                                      i2l1581 5B64  
                                    i2l1671 66CC                                      i2l1591 4A30  
                                    i2l1655 4DA4                                      i2l1584 5BB0  
                                    i2l1664 4DD4                                      i2l1681 67DA  
                                    i2l1586 5BB4                                      i2l1594 4A9E  
                                    i2l1595 4A3E                                      i2l1748 4AF4  
                                    i2l1596 4A42                                      i2l1689 6854  
                                    i2l6203 4858                                      i2l6051 40B2  
                                    i2l6205 4864                                      i2l6061 4ABE  
                                    i2l6221 3E90                                      i2l6215 4896  
                                    i2l6207 4868                                      i2l6071 4AD4  
                                    i2l6065 4ACA                                      i2l6225 3EA0  
                                    i2l6401 4B9C                                      i2l6163 53EC  
                                    i2l6093 4B24                                      i2l6421 506A  
                                    i2l6167 53F4                                      i2l6087 4B10  
                                    i2l6079 4AE8                                      i2l6511 66D0  
                                    i2l6177 541C                                      i2l6185 5452  
                                    i2l9001 5BE8                                      i2l6187 5458  
                                    i2l6195 548E                                      i2l6099 4B2A  
                                    i2l6451 5AD6                                      i2l6443 50CE  
                                    i2l6541 6784                                      i2l5911 4046  
                                    i2l6551 67C2                                      i2l6535 676A  
                                    i2l6527 6734                                      i2l6463 5B68  
                                    i2l6455 5AE6                                      i2l6471 5BB8  
                                    i2l9023 5C0E                                      i2l9015 5C02  
                                    i2l6369 529A                                      i2l6553 67F2  
                                    i2l6537 676C                                      i2l6803 60B8  
                                    i2l5907 4038                                      i2l6563 6834  
                                    i2l6483 4A5C                                      i2l9035 5C32  
                                    i2l5925 4F14                                      i2l6581 68B6  
                                    i2l6573 686C                                      i2l6565 6840  
                                    i2l6493 4A90                                      i2l6397 4B88  
                                    i2l6733 5654                                      i2l9053 5C60  
                                    i2l9045 5C44                                      i2l9029 5C2A  
                                    i2l6807 60D2                                      i2l5919 4EF0  
                                    i2l9039 5C3A                                      i2l6817 612E  
                                    i2l5937 4F6C                                      i2l6833 4DAE  
                                    i2l6737 565A                                      i2l9081 5CC4  
                                    i2l9073 5C96                                      i2l6579 68AA  
                                    i2l7581 5500                                      i2l6781 6038  
                                    i2l5893 4C30                                      i2l6845 4DBE  
                                    i2l6749 56C4                                      i2l6757 56D2  
                                    i2l8605 5132                                      i2l9157 1072  
                                    i2l6791 6062                                      i2l6855 4DE8  
                                    i2l9079 5CB0                                      i2l7569 54C4  
                                    i2l6785 6044                                      i2l8561 3D90  
                                    i2l7595 555E                                      i2l7587 551E  
                                    i2l6859 4DFA                                      i2l8619 5190  
                                    i2l8563 3D92                                      i2l7597 5560  
                                    i2l8645 5776                                      i2l8653 5780  
                                    i2l8639 574C                                      i2l8585 41B4  
                                    i2l8669 5794                                      i2l8981 3E82  
                                    i2l8973 3E66                                      i2l8967 3E04  
                                    i2l8993 5BDC                                   ??_EndLine 0061  
                                    _OSCCON 000FD3                               CDCTxService@i 0069  
                                    _SPBRGH 000FB0                                      _SSPBUF 000FC9  
                          __end_of___xxtofl 5EFC                    i2USBTransferOnePacket@ep 0032  
                         ??i2_USBDeviceInit 0036             __size_ofi2_USBTransferOnePacket 00AE  
                      ?i2_EUSART_Initialize 002E                        oled_displayOff@state 0062  
                             oled_putChar@k 006B                           _shortPacketStatus 002A  
            moteRunningProcess@changeStates 002E                              __CFG_XINST$OFF 000000  
                      _moteApp_clearBuffers 42D6                             USBDeviceTasks@i 004D  
                __end_of_Set_Column_Address 3CD6                 USBStdFeatureReqHandler@pUEP 0045  
                          __end_of_hexToStr 3DE4                    USBTransferOnePacket@data 0061  
                USBCtrlTrfInHandler@lastDTS 003F                             ??_USBDeviceInit 0068  
                 __size_of_Set_Page_Address 0014                     __end_of_TMR1_StartTimer 3B04  
                              ?_putUSBUSART 0060                                      ___wmul 3D98  
                                 ??___fldiv 008F                                   ??___lbdiv 0061  
                            __CFG_STVREN$ON 000000                      modemResync@escapeEvent 0067  
                                 ??___lbmod 0061                                   ??___flmul 0076  
                                 ??___fltol 00A4                                   ??___lldiv 0036  
                      __end_of_getsUSBUSART 4D98                                   ??___lwdiv 0064  
                                 ??___lwmod 006B                           _USBEnableEndpoint 402A  
           __size_of_USBStdGetStatusHandler 008A                         _EUSART_Transmit_ISR 3DE4  
                                    _memset 3EB0                                      clear_0 47D8  
                                    clear_1 47E4                                      clear_2 47FC  
                        ?_USBEnableEndpoint 0036              ??_USART_mySetLineCodingHandler 003B  
                   __end_of_DATAEE_ReadByte 3BE0                                      _strcmp 49A4  
                __end_of_ADC_TempConversion 3D74               __size_of_USBTransferOnePacket 00B0  
                          ?_sendDataCommand 0061                             _moteApp_delayms 3E0C  
               __size_of_service_pushbutton 0054                                   ??_isdigit 0060  
                              _CDCTxService 5CD0                                __mediumconst 777E  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                         ??_USBEnableEndpoint 0037  
                  ADC_GetConversion@channel 0064                                   ?_CMP1_ISR 002E  
                   __end_of_TMR2_StartTimer 3B08                                   ??_sprintf 0078  
                               _CtrlTrfData 000438                                   ??_strncmp 0066  
                          ___lbdiv@dividend 0061                               ?_oled_devInit 002E  
                      ?_EUSART_Transmit_ISR 002E                        _controlTransferState 0020  
                      _USBapp_getrxByteFlag 3B08                            ?_TMR1_Initialize 002E  
                      __CFG_LS48MHZ$SYS48X8 000000                                ___xxtofl@arg 006A  
                      __size_of_EUSART_Read 0034                                ___xxtofl@exp 0069  
                         _SYSTEM_Initialize 3C60                                ___xxtofl@val 0060  
              __size_of_USBapp_handlerState 000A                             ___lbmod@divisor 0060  
                                __accesstop 0060                     __end_of__initialization 4832  
                    ??_USBapp_setrxByteFlag 002E                             ___lbmod@counter 0062  
                           __CFG_PBADEN$OFF 000000                       ??i2_EUSART_Initialize 002E  
                           _CMP1_Initialize 3B96                          ?_SYSTEM_Initialize 002E  
                        oled_writeData@data 0061                               ___rparam_used 000001  
                             ?_oled_setFont 0060                    __size_of_USBStallHandler 003E  
                                ___fltol@f1 00A0                               ?_oled_putChar 0063  
                     ?_moteApp_clearBuffers 002E                         __size_of_USBSuspend 001E  
               __size_of_EUSART_FlushBuffer 002E                              __pcstackCOMRAM 002E  
                 __end_of_USBEnableEndpoint 4060                            __CFG_nPWRTEN$OFF 000000  
                             __end_of_sd000 7B5A                               __end_of_sd001 7B10  
                             __end_of_sd002 7B44                                __pidataBANK0 1004  
                              __pidataBANK1 3AFA                         ??_SYSTEM_Initialize 0062  
                 oled_putUint16@station_dot 0074                                   ?_TMR1_ISR 002E  
          __size_of_USBCtrlEPAllowDataStage 008E                            _DATAEE_WriteByte 4108  
             __size_of_USBConfigureEndpoint 0090                 __end_of_USBCtrlTrfInHandler 5564  
                          ?_TMR2_Initialize 002E                            ___lbdiv@quotient 0063  
                    i2_USBTransferOnePacket 4EDC                             __CFG_PCLKEN$OFF 000000  
                            __CFG_nLPBOR$ON 000000                           __end_of_OledFont0 7A99  
                         _CDCTxService$5711 0067                                  _cdc_notice 01E2  
                                 ?i2_memset 002E                                  _cdc_rx_len 00F6  
                                _cdc_tx_len 00F7                                  ??_CMP1_ISR 002E  
                           _responsePortNum 012E                    ??_USBCtrlTrfSetupHandler 004A  
                                _dataBuffer 01D6                              ??_oled_devInit 0062  
                          ?_USBDeviceAttach 002E                   __end_of_SYSTEM_Initialize 3C7C  
                     ??_EUSART_Transmit_ISR 002E                      _USBStdGetStatusHandler 4A28  
                              sprintf@width 0082                       ?_USBapp_getrxByteFlag 002E  
                      service_pushbutton@bs 0060                            ??_oled_putUint16 0076  
                                __pbssBANK0 00F4                                  __pbssBANK1 0100  
                                __pbssBANK2 0200           moteJoiningProcess@pending_confirm 0154  
                      __end_of_EUSART_Write 402A                     __size_of_TMR2_ReadTimer 0008  
                          ??_oled_putString 0071                              ??_oled_setFont 0062  
               __size_of_EUSART_Receive_ISR 002A                         oled_putString@index 0071  
                            ??_oled_putChar 0065                 __size_of_USBWakeFromSuspend 0024  
                               _pBDTEntryIn 000F                      __size_of_oled_clearRow 001E  
                      __size_of_modemResync 0064                    sendDataCommand@byteCount 0067  
          __end_of_USBCtrlEPServiceComplete 5720            __end_of_MOTEapp_setResponseReady 3AFA  
                    oled_putChar@start_page 0064                 __size_of_USBCheckCDCRequest 008E  
                         __CFG_PLLSEL$PLL3X 000000                          __size_of_oled_init 0022  
                          ??_oled_writeData 0061                        USBCtrlTrfRxService@i 003F  
                              ?_TMRapp_Tick 002E                                     ?___wmul 0060  
                          ?_TMR1_StartTimer 002E                                  ??_TMR1_ISR 002E  
                  oled_putUint16@start_page 0075                     __end_of_moteApp_delayms 3E34  
                                   _CM1CON0 000F98          MOTEapp_getModemResponse@bufferByte 0062  
                   __size_of_USBapp_Handler 0078                     __size_of_TMRapp_Handler 00E8  
                                   _BAUDCON 000FB8                                     ?_memset 0060  
                                _device_dsc 7B44                   Set_Column_Address@address 0062  
                  __size_of_oled_displayOff 0012                            _USBCtrlEPService 50EC  
                                _ep_data_in 0122                     __size_of_ADC_Initialize 0016  
                                   ?_strcmp 0060                            ?_DATAEE_ReadByte 002E  
               __end_of_USBCtrlTrfRxService 613A                        __size_of_sendCommand 0054  
                        _USBCheckStdRequest 4D98                               _eusartRxCount 0022  
                         _configDescriptor1 7A99                                     i2l11517 420C  
                                   i2l11519 423E                                   ?___xxtofl 0060  
                                   _RS232cp 001C                             __CFG_WDTEN$SWON 000000  
                                ??i2_memset 0034                 __end_of_USBCtrlTrfTxService 5494  
                      __size_of_moteHandler 01E6                         _USBStdSetCfgHandler 503A  
                                   _OSCCON2 000FD2                                     _OSCTUNE 000F9B  
                    __size_of_oled_putUint8 005A                                     _SSP1ADD 000FC8  
                   __end_of_CMP1_Initialize 3BA8                         ?_USBCheckStdRequest 002E  
                          ?_TMR2_StartTimer 002E                __size_of_USBStdGetDscHandler 0102  
                                   _UIEbits 000F64                                   ?_hexToStr 002E  
                                   _UIRbits 000F65                            ??_SPI_Initialize 0060  
                                   _EndLine 3B5C                               _cdc_trf_state 001F  
                      DATAEE_WriteByte@bAdd 0061                  __end_of_moteRunningProcess 62E2  
                    ??_moteApp_clearBuffers 0060                  ?_moteApp_add8bToDataBuffer 0064  
                                   _pCDCDst 0128                                     _pCDCSrc 012B  
                     __size_of_getsUSBUSART 009E                                     __Hparam 0000  
                      ?_USBStdSetCfgHandler 002E                                   _CDCInitEP 4416  
                   ?_MOTEapp_TimerBasedTask 002E                                     __Lparam 0000  
                                _nibble2int 4142                    moteRunningProcess@i_1624 0084  
                __size_of_USBEnableEndpoint 0036                         moteHandler@s2Button 0284  
                          _Set_Page_Address 3BE0                        ??_USBCheckStdRequest 004A  
              moteRunningProcess@sleepEvent 007E                           _timerMinTickCount 013D  
             __size_of_USBCtrlTrfOutHandler 0052                 __size_of_moteJoiningProcess 091E  
                                   ___fldiv 64C8                                     ___lbdiv 4060  
                                   ___lbmod 3E34                                     ___flmul 68DA  
                                   ___fltol 4C5E                                     ___lldiv 4840  
                          ??_USBDeviceTasks 004D                             __size_of___wmul 0026  
                                   ___lwdiv 4242                           ??_USBStallHandler 002E  
                                   ___lwmod 41BA                        __size_of_putUSBUSART 001E  
                                   __pcinit 47D2                          getsUSBUSART@buffer 0067  
                           __size_of_memset 002A                   __end_of_configDescriptor1 7ADC  
                                   __ramtop 0800                           hexToStr@character 0060  
          __end_of_MOTEapp_getModemResponse 42D6                                     __ptext0 5312  
                                   __ptext1 62E2                                     __ptext2 44BE  
                                   __ptext3 613A                                     __ptext4 4E3A  
                                   __ptext5 3DBE                                     __ptext6 4512  
                                   __ptext7 59D2                                     __ptext8 42D6  
                                   __ptext9 4766                    __size_of_oled_setDisplay 0014  
                                   _inPipes 0009                 _USBDeferOUTDataStagePackets 0149  
                           __size_of_strcmp 0084                            oled_setFont@font 0060  
                         __end_of_hexpowers 7791                                   _T1CONbits 000FCD  
                                   _dpowers 777F                       _OSCILLATOR_Initialize 3C32  
                              ??_USBSuspend 0043                               _oled_clearRow 3CD6  
                                 _T2CONbits 000FBA                                  _modemSleep 3D12  
           moteApp_add8bToDataBuffer@number 0065                                     _isdigit 3CF4  
                                ??___xxtofl 0064                                  _oled_clear 3C48  
                  ??_PIN_MANAGER_Initialize 0060                __end_of_TMRapp_ClearBitFlags 3B10  
                              _LastRS232Out 0019                             i2_USBDeviceInit 5720  
                          i2USBDeviceInit@i 0036                           __end_of_oled_init 3D52  
                         ?_SPI_Exchange8bit 002E                __end_of_MOTEapp_handlerState 3B2E  
                    ??_USBapp_getrxByteFlag 0060                          __end_of_USB_CD_Ptr 7799  
                __size_of_SYSTEM_Initialize 001C                                     _sprintf 6B7E  
           __size_of_USBCtrlTrfSetupHandler 005E                                  ??_hexToStr 0060  
                                   _strncmp 4694                        end_of_initialization 4832  
                              _getsUSBUSART 4CFA               sendDataCommand@byteCount_1682 0068  
                        ??_SPI_Exchange8bit 0060                        SPI_Exchange8bit@data 0060  
                        __end_of_USB_SD_Ptr 7797                         _pBDTEntryEP0OutNext 0017  
                                   memset@c 0062                                     memset@n 0064  
                                   memset@p 0066                               __Lmediumconst 777E  
           _dummy_encapsulated_cmd_response 01EC                    ?_USBStdFeatureReqHandler 002E  
            __end_of_MOTEapp_TimerBasedTask 3C08                           _EUSART_Initialize 3F62  
                                _rxByteFlag 0028                       ??_USBStdSetCfgHandler 0043  
                           ___lldiv@divisor 0032                                  ?_CDCInitEP 002E  
                           ___lldiv@counter 003A                          ?_EUSART_Initialize 002E  
                             _oled_putUint8 4512                          __end_of_USBSuspend 3C9A  
            ??_USBapp_CdcEmulatorInitialize 003A                     _USBCtrlEPAllowDataStage 4B40  
                                 _RCSTAbits 000FAB                                     postdec2 000FDD  
                                   postinc0 000FEE                                     postinc2 000FDE  
                      __end_of_oled_devInit 563C                    _USBCtrlEPServiceComplete 563C  
                                _responseId 0100                            ?_moteApp_delayms 0060  
                             _randomPortNum 00F8                    _MOTEapp_setResponseReady 3AF8  
                _USBStatusStageEnabledFlag1 014A                  _USBStatusStageEnabledFlag2 014B  
                       _USBapp_handlerState 3B2E                         ??_EUSART_Initialize 0060  
                        USBEnableEndpoint@p 0037                                   _PORTAbits 000F80  
                                 _PORTBbits 000F81                                   _PORTCbits 000F82  
                   oled_putUint8@start_page 0073                              ?_oled_clearRow 002E  
                      __end_of_oled_setFont 3BBA                          _Set_Column_Address 3CB8  
                      __end_of_oled_putChar 492C                            ___lbmod@dividend 0061  
                             ___xxtofl@sign 0068                                   _TRISAbits 000F92  
                                 _TRISBbits 000F93                                   _TRISCbits 000F94  
                         ??_oled_displayOff 0062                       __size_of_EUSART_Write 0034  
                        _BothEP0OutUOWNsSet 0145                                 ___fldiv@grs 009A  
                               ___fldiv@rem 0094                            ?_CMP1_Initialize 002E  
                 USBConfigureEndpoint@EPNum 0033                       moteJoiningProcess@ana 00EA  
                     moteJoiningProcess@buf 00B2                  ?_USBCtrlEPAllowStatusStage 002E  
                  __end_of_DATAEE_WriteByte 4142                         ?_Set_Column_Address 002E  
       USER_USB_CALLBACK_EVENT_HANDLER@size 003F                              _TMR2_ReadTimer 3B1C  
                                 _USTATcopy 002D                           __size_of_CMP1_ISR 0004  
                      ?_USBapp_handlerState 002E                          _ADC_TempConversion 3D52  
                  oled_putString@start_page 0070                                 ___lbmod@rem 0063  
                               ___flmul@grs 007D                   __end_of_EUSART_Initialize 3F90  
              __end_of_USBTransferOnePacket 503A                                 _CM2CON1bits 000F9A  
                                 _TXSTAbits 000FAC                             moteHandler@Traw 0282  
                            ?_oled_putUint8 0072                           putUSBUSART@length 0062  
                       ?_ADC_TempConversion 002E                                 ?_nibble2int 002E  
                    _USBCtrlTrfSetupHandler 456C                        ??_Set_Column_Address 0062  
                   ?i2_USBTransferOnePacket 002E                       __end_of_USBDeviceInit 58EA  
                            _TMRapp_Handler 58EA                              _USBapp_Handler 492C  
                      __size_of_TMRapp_Tick 0006                ??_moteApp_add16bToDataBuffer 006F  
                            __end_of___wmul 3DBE                                _EUSART_Write 3FF6  
                     sendDataCommand@string 0061                     __end_ofi2_USBDeviceInit 5804  
                         __size_of_TMR1_ISR 000C                  __end_of_service_pushbutton 4512  
                            _ADC_Initialize 3C1C                 moteApp_clearBuffers@counter 0060  
                                 i2memset@c 0030                                   i2memset@n 0032  
                                 i2memset@p 0034                      ?_OSCILLATOR_Initialize 002E  
                            __end_of_memset 3EDA                           _USBBusIsSuspended 0147  
                  oled_writeCommand@command 0061                                 ?_modemSleep 002E  
                            __end_of_strcmp 4A28                                 ?_oled_clear 002E  
                       start_initialization 47D2                        ??_ADC_TempConversion 0067  
                   ?_USBStdGetStatusHandler 002E               USBCtrlTrfRxService@byteToRead 0040  
                  _MOTEapp_getModemResponse 428C             __size_of_PIN_MANAGER_Initialize 004E  
                         ??_oled_setDisplay 0062                               ??_EUSART_Read 0060  
                    __end_of_TMR2_ReadTimer 3B24                                 _cdc_data_rx 000540  
                               _cdc_data_tx 000500                 __end_ofi2_EUSART_Initialize 3F34  
                         __size_ofi2_memset 002A                                   _OledFont0 7799  
              __end_of_USBConfigureEndpoint 4C5E             __end_of_USBStdFeatureReqHandler 68DA  
                  __size_of_sendDataCommand 00A2                       ??_USBapp_handlerState 0060  
         __end_of_USBCtrlEPAllowStatusStage 5312                    __end_of_USBCtrlEPService 519E  
      __end_of_USART_mySetLineCodingHandler 4416       __size_of_USART_mySetLineCodingHandler 0054  
              _USART_mySetLineCodingHandler 43C2                  __end_of_EUSART_FlushBuffer 3F62  
                       DATAEE_ReadByte@bAdd 0060               __size_of_USBapp_setrxByteFlag 0006  
       __size_of_moteApp_add16bToDataBuffer 011E                   ??_USBCtrlEPAllowDataStage 002F  
                               ??_CDCInitEP 003A                              USBDeviceInit@i 0068  
                    _pBDTEntryEP0OutCurrent 0015                    __size_of_TMR1_Initialize 0032  
                   USBTransferOnePacket@dir 0060                     USBTransferOnePacket@len 0063  
                    __end_of_USBapp_Handler 49A4                      __end_of_TMRapp_Handler 59D2  
            __end_ofi2_USBTransferOnePacket 4F8A                        _TMRapp_ClearBitFlags 3B0C  
                                  ??___wmul 0064                         _USBStdGetDscHandler 5AC6  
                      _MOTEapp_handlerState 3B24                      __end_of_ADC_Initialize 3C32  
                               __pdataBANK0 00F9                                 __pdataBANK1 01FD  
                                  ??_memset 0066                             ??_oled_clearRow 006D  
MOTEapp_getModemResponse@terminatorReceived 0061             MOTEapp_TimerBasedTask@timerTask 0060  
                                  ??_strcmp 0064                   oled_putString@station_dot 006F  
                    _USBActiveConfiguration 002C              __end_of_USBStdGetStatusHandler 4AB2  
                                 ___fldiv@a 008B                                   ___fldiv@b 0087  
               __end_of_EUSART_Transmit_ISR 3E0C                                   ___flmul@a 0072  
                                 ___flmul@b 006E                                 __pbssCOMRAM 0001  
                service_pushbutton@PB_Timer 011E                               __pcstackBANK0 0060  
                             __pcstackBANK2 0280                __size_of_USBCtrlTrfInHandler 00D0  
                  __size_of_TMR2_Initialize 0010                         __size_of_nibble2int 003A  
                  __end_of_Set_Page_Address 3BF4                           __size_of___xxtofl 011A  
                           ?_TMR2_ReadTimer 002E                                 _activeState 014C  
                              _isdigit$6040 0061                        ?_USBStdGetDscHandler 002E  
                 ADC_TempConversion@tempRaw 0067                  __end_of_EUSART_Receive_ISR 3E86  
            moteRunningProcess@messageReady 007D                                    ?_EndLine 002E  
                __end_of_USBWakeFromSuspend 3D98                               ??_modemResync 0065  
                __size_of_EUSART_Initialize 002E                           __size_of_hexToStr 0026  
                               sprintf@flag 0081                                 sprintf@prec 007E  
                           _USBStallHandler 417C                                _pBDTEntryOut 0118  
                       __end_of_EUSART_Read 3FF6                  __end_of_USBCheckCDCRequest 4B40  
                           ??_oled_putUint8 0074                        oled_putString@string 006D  
                  __size_of_USBDeviceAttach 002C                 ??_moteApp_add8bToDataBuffer 0065  
                         _oled_writeCommand 3B44                       __size_of_oled_devInit 00D8  
                   oled_putChar@station_dot 0063                         __size_of_modemSleep 001E  
                          ___lwdiv@dividend 0060                      _PIN_MANAGER_Initialize 4322  
                       __size_of_oled_clear 0018                       ?_TMRapp_ClearBitFlags 002E  
                      EUSART_Read@readValue 0060                             ?_TMRapp_Handler 002E  
                           ?_USBapp_Handler 002E                                   __pintcode 1008  
                        ?_oled_writeCommand 002E                               __pmediumconst 777E  
             moteJoiningProcess@switchEvent 00AA                       ?_MOTEapp_handlerState 002E  
                                  ?___fldiv 0087                                   __ptext100 4096  
                                 __ptext101 4416                                    ?___lbdiv 0060  
                                 __ptext110 53D2                                   __ptext102 4EDC  
                                 __ptext111 43C2                                   __ptext103 402A  
                                 __ptext112 3F06                                   __ptext104 4BCE  
                                 __ptext113 4840                                   __ptext105 4AB2  
                                 __ptext114 3B10                                   __ptext106 4370  
                                 __ptext115 3B38                                   __ptext107 601A  
                                 __ptext116 3DE4                                   __ptext108 5256  
                                 __ptext117 3E5C                                   __ptext109 5494  
                                 __ptext118 3AFC                                   __ptext119 0000  
                                  ?___lbmod 0060                                    ?___flmul 006E  
                                  ?___fltol 00A0                                    ?___lldiv 002E  
                                  ?___lwdiv 0060                                    ?___lwmod 0067  
                           ?_ADC_Initialize 002E                       __size_of_oled_setFont 0012  
                              _eusartRxHead 014E                               ??_sendCommand 0063  
                              _eusartTxHead 0024                                _eusartRxTail 014F  
                              _eusartTxTail 0025                       __size_of_oled_putChar 0076  
                        _moteRunningProcess 613A                ??_INTERRUPT_InterruptManager 004E  
                          ?i2_USBDeviceInit 002E                      moteHandler@readMessage 0288  
                       ??_oled_writeCommand 0061                               ??_moteHandler 00F2  
                   _eusartTxBufferRemaining 0023                        _USBTransferOnePacket 4F8A  
                              moteHandler@i 0286            moteApp_add16bToDataBuffer@number 006C  
                  __size_of_TMR1_StartTimer 0004                                    ?_isdigit 002E  
                    moteHandler@buttonPress 0285                         ?_moteRunningProcess 007C  
              __end_of_USBCtrlTrfOutHandler 43C2                                   _hexpowers 7789  
                     ??_USBStdGetDscHandler 002E                                    _CMP1_ISR 3AFC  
                               _ep_data_out 0125                            ___lwdiv@quotient 0065  
                                  ?_sprintf 006C                __size_of_USBCtrlTrfRxService 0120  
                                 _secTicker 0029               USBConfigureEndpoint@direction 002E  
                  __size_of_DATAEE_ReadByte 0014                                    ?_strncmp 0060  
                              _oled_devInit 5564                              _eusartRxBuffer 0200  
                          _timerMsTickCount 013F                                   _oled_init 3D30  
              __size_of_USBCtrlTrfTxService 00C2                     _moteJoiningProcess$6551 00E4  
                            _eusartTxBuffer 0240                              ___wmul@product 0064  
                                  _LATAbits 000F89                                    _IOCCbits 000F87  
                 __end_of_oled_writeCommand 3B50                                    _LATBbits 000F8A  
                                  _LATCbits 000F8B                  ??_USBCtrlEPServiceComplete 002F  
                ??_MOTEapp_setResponseReady 0060                                    _PIE1bits 000F9D  
                                  _IPR3bits 000FA5                                    _PIE2bits 000FA0  
                                  _PIE3bits 000FA3                    __size_of_TMR2_StartTimer 0004  
                              _oled_setFont 3BA8                                   _moteState 00F9  
                         ??_sendDataCommand 0066                               _operationType 0151  
                      ??_moteRunningProcess 007F                  __end_of_moteJoiningProcess 777E  
       __size_of_INTERRUPT_InterruptManager 00A2                                _oled_putChar 48B6  
                                  i2u423_40 5444                                    i2u423_47 543A  
                                  i2u425_40 5480                                    _PIR1bits 000F9E  
                                  i2u425_47 5476                                    i2u505_48 611A  
                                  i2u450_40 5B32                                    i2u450_47 5B28  
                                  i2u451_40 5B60                                    _PIR2bits 000FA1  
                                  i2u451_47 5B56               __size_of_moteApp_clearBuffers 004C  
                                  i2u453_40 5BAA                                    _PIR3bits 000FA4  
                                  i2u453_47 5BA0                   USBCtrlEPService@setup_cnt 004C  
                                  i2u593_48 554A                   __size_of_SPI_Exchange8bit 0010  
                       __end_of_modemResync 462E                                    _RCONbits 000FD0  
                   __size_of_oled_putUint16 00F4                               ??_putUSBUSART 0063  
                          __CFG_WDTPS$32768 000000                                    _UEP0bits 000F6A  
                _USBDeferINDataStagePackets 0148                                    _SSP1CON1 000FC6  
        __end_of_moteApp_add16bToDataBuffer 601A                  _moteApp_add16bToDataBuffer 5EFC  
               __size_of_USBCheckStdRequest 00A2                                    _TMR1_ISR 3B38  
                   __size_of_oled_putString 0066                                    _SSP1STAT 000FC7  
                                  _UCONbits 000F60                             _oled_displayOff 3BBA  
                                  _VREFCON0 000F7D              moteRunningProcess@selectButton 007C  
                      _USBConfigureEndpoint 4BCE            __size_of_USBStdFeatureReqHandler 022A  
                         ??_TMR1_Initialize 0060                   moteJoiningProcess@pkt_cnt 002B  
                                _ADCON0bits 000FC2                     Set_Page_Address@address 0062  
                         ___wmul@multiplier 0060                       ?_USBTransferOnePacket 0060  
                      moteJoiningProcess@cV 00EC                      ADC_TempConversion@temp 0068  
                 _moteApp_add8bToDataBuffer 4766                     __size_of_oled_writeData 000C  
                             ?_CDCTxService 002E                    moteHandler@gotoNextState 0281  
                              _RemoteWakeup 0146                         __end_of_sendCommand 44BE  
                                  i2_memset 3E86                           __CFG_CFGPLLEN$OFF 000000  
                     DATAEE_WriteByte@bData 0060                          _RS232_Out_Data_Rdy 001B  
                   __end_of_USBStallHandler 41BA                         __end_of_moteHandler 64C8  
                               _EUSART_Read 3FC2                           _moteApp_GoToSleep 46FC  
               ??_USBCtrlEPAllowStatusStage 002E                 __end_of_USBStdSetCfgHandler 50EC  
                         ?_DATAEE_WriteByte 0060               __size_of_USBapp_getrxByteFlag 0004  
                        ?_moteApp_GoToSleep 002E                                  ?_oled_init 002E  
                         ??_TMR2_Initialize 0060                            __size_of_EndLine 000C  
                        ??_DATAEE_WriteByte 0061                          __end_of_device_dsc 7B56  
                                _EECON1bits 000FA6                     ?_USBCtrlTrfSetupHandler 002E  
             USBapp_CdcEmulatorInitialize@i 003A                      ??_TMRapp_ClearBitFlags 0060  
                   USBStdGetStatusHandler@p 002E                                    __Hrparam 0000  
                       ??_moteApp_GoToSleep 006F                                ??_nibble2int 0060  
                                  __Lrparam 0000                      USBTransferOnePacket@ep 0064  
                    ??_MOTEapp_handlerState 0060                           _ADC_GetConversion 40CE  
                        __CFG_BOREN$SBORDIS 000000                                    _SetupPkt 000430  
                   __size_of_SPI_Initialize 000E                     ??_OSCILLATOR_Initialize 0060  
                     ?_USBConfigureEndpoint 002E                          ?_ADC_GetConversion 0060  
                         ??_USBDeviceAttach 0060                            __size_of___fldiv 01E8  
                          __size_of___lbdiv 0036                            __size_of___lbmod 0028  
                          __size_of___flmul 02A4                            __size_of___fltol 009C  
                ??_MOTEapp_getModemResponse 0061                                _selectedFont 01FD  
                          __size_of___lldiv 0076                             _oled_setDisplay 3C08  
          moteApp_clearBuffers@counter_1750 0062            moteApp_clearBuffers@counter_1749 0061  
                          __size_of___lwdiv 004A                            __size_of___lwmod 003E  
                 MOTEapp_handlerState@state 0060                                  _ANSELAbits 000F5B  
                       __end_of_putUSBUSART 3CB8                                 _line_coding 01F4  
                                _ANSELCbits 000F5D                              ??_CDCTxService 0067  
                              ??_modemSleep 0065                         ??_ADC_GetConversion 0062  
                                sprintf@idx 007C                                  sprintf@val 007F  
                              ??_oled_clear 006F                    modemResync@escapeCounter 0065  
                                  ___xxtofl 5DE2                    __size_of_moteApp_delayms 0028  
                          __size_of_isdigit 001E                   __end_of_moteApp_GoToSleep 4766  
                   __size_of_USBDeviceTasks 0108                             ___lwdiv@divisor 0062  
                                  _appTimer 00F5                             ___lwdiv@counter 0064  
                                  __ptext10 3E34                                    __ptext11 4060  
                                  __ptext20 3B1C                                    __ptext12 5EFC  
                                  __ptext21 3D52                                    __ptext13 46FC  
                                  __ptext30 3B5C                                    __ptext22 6E60  
                                  __ptext14 3BBA                                    __ptext31 3D30  
                                  __ptext23 4694                                    __ptext15 3D12  
                                  __ptext40 64C8                                    __ptext32 3BA8  
                                  __ptext24 49A4                                    __ptext16 45CA  
                                  __ptext41 4108                                    __ptext33 3C08  
                                  __ptext25 6B7E                                    __ptext17 428C  
                                  __ptext50 3C48                                    __ptext42 40CE  
                                  __ptext34 5564                                    __ptext26 3CF4  
                                  __ptext18 3F62                                    __ptext51 3CD6  
                                  __ptext43 58EA                                    __ptext35 4142  
                                  __ptext27 3D98                                    __ptext19 3F34  
                                  __ptext60 4CFA                                    __ptext52 48B6  
                                  __ptext44 41BA                                    __ptext36 3E0C  
                                  __ptext28 4242                                    __ptext61 3B08  
                                  __ptext53 3B50                                    __ptext45 3B0C  
                                  __ptext37 5DE2                                    __ptext29 446A  
                                  __ptext70 3C60                                    __ptext62 3AF8  
                                  __ptext54 3BE0                                    __ptext46 3BF4  
                                  __ptext38 4C5E                                    __ptext71 3B76  
                                  __ptext63 3FF6                                    __ptext55 3CB8  
                                  __ptext47 3B2E                                    __ptext39 68DA  
                                  __ptext80 3B24                                    __ptext72 3B04  
                                  __ptext64 3FC2                                    __ptext56 3B44  
                                  __ptext48 492C                                    __ptext81 3BCC  
                                  __ptext73 3F90                                    __ptext65 5CD0  
                                  __ptext57 3B86                                    __ptext49 462E  
                                  __ptext90 456C                                    __ptext74 3B00  
                                  __ptext66 4F8A                                    __ptext58 519E  
                                  __ptext91 563C                                    __ptext83 3B16  
                                  __ptext75 3B68                                    __ptext67 5804  
                                  __ptext59 3C9A                                    __ptext92 4B40  
                                  __ptext84 5BC8                                    __ptext76 4322  
                                  __ptext68 3EB0                                    __ptext93 4D98  
                                  __ptext85 5720                                    __ptext77 3C32  
                                  __ptext69 3EDA                                    __ptext94 503A  
                                  __ptext86 3D74                                    __ptext78 3B96  
                                  __ptext95 3E86                                    __ptext87 3C7C  
                                  __ptext79 3C1C                                    __ptext96 4A28  
                                  __ptext88 417C                                    __ptext97 5AC6  
                                  __ptext89 50EC                                    __ptext98 66B0  
                                  __ptext99 41F8        __end_of_USBapp_CdcEmulatorInitialize 40CE  
     __size_of_USBapp_CdcEmulatorInitialize 0038                _USBapp_CdcEmulatorInitialize 4096  
                              _SSP1CON1bits 000FC6                          __end_of_nibble2int 417C  
                                  _hexToStr 3DBE                          _service_pushbutton 44BE  
                         ??_TMR1_StartTimer 0060                            __size_of_sprintf 02E2  
               DATAEE_WriteByte@GIEBitValue 0062                                 _OSCCON2bits 000FD2  
                          __size_of_strncmp 0068                                 _modemResync 45CA  
            __end_of_USBCtrlTrfSetupHandler 45CA                               __size_of_main 00C0  
                         ?_USBCtrlEPService 002E                  __size_of_oled_writeCommand 000C  
                                strncmp@len 0064                         ?_service_pushbutton 002E  
                         ??_DATAEE_ReadByte 0060                   __end_of_ADC_GetConversion 4108  
                  __size_of_CMP1_Initialize 0012                     __end_of_oled_displayOff 3BCC  
                        ??_USBCtrlEPService 004A                         _USBCtrlTrfInHandler 5494  
                             ??_TMRapp_Tick 002E                          __end_of_modemSleep 3D30  
                        __end_of_oled_clear 3C60                                    _outPipes 0001  
                      _USBCtrlTrfOutHandler 4370                                    int$flags 005A  
                                  _usbState 0153                   _USBCtrlEPAllowStatusStage 5256  
               __size_of_Set_Column_Address 001E                           ??_TMR2_StartTimer 0060  
        __end_of_INTERRUPT_InterruptManager 10AA                  _INTERRUPT_InterruptManager 1008  
                              _SSP1STATbits 000FC7                                 _sendCommand 446A  
                    ??_USBTransferOnePacket 0064                          oled_clearRow@index 006E  
                        _EUSART_FlushBuffer 3F34                __end_of_USBapp_setrxByteFlag 3B1C  
                               _moteHandler 62E2                            ??_TMR2_ReadTimer 0060  
                      ??_service_pushbutton 0060                   _USBDeferStatusStagePacket 001D  
                  CDCTxService@byte_to_send 006A                                  _INTCONbits 000FF2  
               __end_of_USBapp_handlerState 3B38                        ?_USBCtrlTrfInHandler 002E  
                       ?_EUSART_FlushBuffer 002E                 __size_of_ADC_TempConversion 0022  
             USBCtrlTrfTxService@byteToSend 002E                                    isdigit@c 0062  
                                  memset@p1 0060                            ?_USBStallHandler 002E  
                  USBStdFeatureReqHandler@p 0048                           ?_Set_Page_Address 002E  
                  ??_MOTEapp_TimerBasedTask 0060                                _responseData 0110  
             ?_USBapp_CdcEmulatorInitialize 002E                                    intlevel2 0000  
                                 sprintf@ap 007D                                   sprintf@sp 0084  
                               ??_oled_init 006F                          ??_Set_Page_Address 0062  
                    __size_of_USBDeviceInit 00E6     __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4242  
  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 004A           ??_USER_USB_CALLBACK_EVENT_HANDLER 0041  
          ?_USER_USB_CALLBACK_EVENT_HANDLER 003B             _USER_USB_CALLBACK_EVENT_HANDLER 41F8  
            moteJoiningProcess@messageReady 00F1                            ___lwmod@dividend 0067  
              i2USBTransferOnePacket@handle 0033                            ___lldiv@dividend 002E  
                   ?_PIN_MANAGER_Initialize 002E                            ??_USBapp_Handler 0072  
                          ??_TMRapp_Handler 006C                        moteHandler@gotoSleep 0280  
              __size_ofi2_EUSART_Initialize 002E                                   strncmp@s1 0060  
                                 strncmp@s2 0062                            ??_ADC_Initialize 0060  
                      ??_EUSART_FlushBuffer 0060                     __end_of_oled_setDisplay 3C1C  
                            _oled_putUint16 59D2                            _SPI_Exchange8bit 3B86  
                i2USBTransferOnePacket@data 002F                                 _sleepTicker 0152  
                    ??_USBConfigureEndpoint 002F                       ?_USBCtrlTrfOutHandler 002E  
                            _oled_putString 462E                                 _putUSBUSART 3C9A  
                        _EUSART_Receive_ISR 3E5C                           oled_clearRow@page 006D  
                      __CFG_CPUDIV$NOCLKDIV 000000                         _USBCtrlTrfRxService 601A  
                        _USBWakeFromSuspend 3D74                     _USBStdFeatureReqHandler 66B0  
   __end_of_USBapp_DeviceCdcEmulatorHandler 5256    __size_of_USBapp_DeviceCdcEmulatorHandler 00B8  
          ?_USBapp_DeviceCdcEmulatorHandler 002E           ??_USBapp_DeviceCdcEmulatorHandler 006D  
           _USBapp_DeviceCdcEmulatorHandler 519E                          _USBCheckCDCRequest 4AB2  
                       _USBCtrlTrfTxService 53D2                         __end_of_TMRapp_Tick 3B16  
                     __end_of_oled_clearRow 3CF4                                 _temperature 0139  
                                  sprintf@c 0085                                    sprintf@f 006C  
                       ?_EUSART_Receive_ISR 002E                              _oled_writeData 3B50  
                       ?_USBWakeFromSuspend 002E                                    strcmp@s1 0060  
                                  strcmp@t0 0066                                    strcmp@s2 0062  
                                  strcmp@t1 0068                                    strcmp@t2 0067  
                          ___lldiv@quotient 0036                             ___lwmod@divisor 0069  
                     ??_USBCtrlTrfInHandler 003F                       _USBAlternateInterface 01FB  
                           ___lwmod@counter 006B                         ?_USBCheckCDCRequest 002E  
                __size_of_moteApp_GoToSleep 006A                   i2USBTransferOnePacket@dir 002E  
                 i2USBTransferOnePacket@len 0031                         USBEnableEndpoint@ep 0039  
                           _endpoint_number 0021                                  _WDTCONbits 000FD1  
                           _sendDataCommand 4E3A                        ?_USBCtrlTrfRxService 002E  
                             ?_getsUSBUSART 0067                    oled_putUint8@station_dot 0072  
                        __CFG_FOSC$INTOSCIO 000000                          EUSART_Write@txData 0060  
              __size_of_EUSART_Transmit_ISR 0028              __end_of_PIN_MANAGER_Initialize 4370  
                  ?_USBCtrlEPAllowDataStage 002E          __size_of_moteApp_add8bToDataBuffer 006C  
                      ?_USBCtrlTrfTxService 002E                           ??_moteApp_delayms 0062  
              _USBStatusStageTimeoutCounter 001E                moteJoiningProcess@skip_count 0143  
                      ??_EUSART_Receive_ISR 002E                        ??_USBWakeFromSuspend 0043  
                    __end_of_oled_putUint16 5AC6                  USBTransferOnePacket@handle 0065  
                __size_of_ADC_GetConversion 003A                        __end_of_CDCTxService 5DE2  
                           _TMR1_Initialize 3F90           moteJoiningProcess@joiningComplete 00EE  
                          ?_oled_displayOff 002E                       __end_of_oled_putUint8 456C  
                    __end_of_oled_putString 4694                        ??_USBCheckCDCRequest 002E  
                                _USB_CD_Ptr 7797  
